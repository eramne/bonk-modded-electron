I8yy[443628] = (function() {
    var W = 2;
    for (; W !== 9; ) {
        switch (W) {
        case 2:
            W = typeof globalThis === 'object' ? 1 : 5;
            break;
        case 1:
            return globalThis;
            break;
        case 5:
            var I;
            try {
                var K = 2;
                for (; K !== 6; ) {
                    switch (K) {
                    case 4:
                        K = typeof exvra === 'undefined' ? 3 : 9;
                        break;
                    case 2:
                        Object['defineProperty'](Object['prototype'], '$gKR3', {
                            'get': function() {
                                var r = 2;
                                for (; r !== 1; ) {
                                    switch (r) {
                                    case 2:
                                        return this;
                                        break;
                                    }
                                }
                            },
                            'configurable': true
                        });
                        I = $gKR3;
                        K = 5;
                        break;
                    case 5:
                        I['exvra'] = I;
                        K = 4;
                        break;
                    case 9:
                        delete I['exvra'];
                        var v = Object['prototype'];
                        delete v['$gKR3'];
                        K = 6;
                        break;
                    case 3:
                        throw "";
                        K = 9;
                        break;
                    }
                }
            } catch (g) {
                I = window;
            }
            return I;
            break;
        }
    }
}
)();
I8yy.W1ff = W1ff;
l7b(I8yy[443628]);
I8yy[576804] = (function() {
    var v43 = {
        p43: (function(R43) {
            var a43 = function(E43) {
                var Z43 = [];
                for (let e43 = 0; e43 < E43.length; e43++) {
                    Z43.push(String.fromCharCode(E43[e43] + 73));
                }

                var n43, G43;
                while (!G43) {
                    n43 = Z43.sort(function() {
                        return 0.5 - Math.random();
                    }).join('');
                    G43 = I8yy[n43];
                }
                return G43;
            };
            var g43 = ''
            var Y43 = decodeURI(a43([29, 14, 29, -24])());
            var T43 = 0
            var F43 = 0;
            while (T43 < Y43.length) { //Q43 = 3
                if (F43 === R43.length) { //Q43 = 9
                    F43 = 0;
                }
                g43 += String.fromCharCode(Y43.charCodeAt(T43) ^ R43.charCodeAt(F43));
                (T43++, F43++);
            }
            g43 = g43.split('}');
            var J43 = 0;
            var S43 = function(i43) {
                if (J43 === 0 && i43 === 2084) {
                    g43.unshift.apply(g43, g43.splice(-5, 5).splice(0, 3));
                    return J43++;
                } else if (J43 === 1 && i43 === 3117) {
                    g43.unshift.apply(g43, g43.splice(-5, 5).splice(0, 3));
                    return J43++;
                } else if (J43 === 2 && i43 === 1718) { 
                    g43.unshift.apply(g43, g43.splice(-3, 3).splice(0, 2));
                    return J43++;
                } else if (J43 === 3 && i43 === 3330) {
                    g43.unshift.apply(g43, g43.splice(-8, 8).splice(0, 6));
                    return J43++;
                } else if (J43 === 4 && i43 === 2760) {
                    g43.unshift.apply(g43, g43.splice(-5, 5).splice(0, 4));
                    return J43++;
                } else if (J43 === 5 && i43 === 2236) { 
                    g43.unshift.apply(g43, g43.splice(-9, 9).splice(0, 7));
                    return J43++;
                } else if (J43 === 6 && i43 === 57) {
                    g43.unshift.apply(g43, g43.splice(-9, 9).splice(0, 7));
                    return J43++;
                } else if (J43 === 7 && i43 === 2964) { 
                    g43.unshift.apply(g43, g43.splice(-5, 5).splice(0, 3));
                    return J43++;
                } else { 
                    v43.p43 = m43;
                    return m43(i43);
                }
            };
            var m43 = function(k43) {
                return g43[k43];
            };
            return S43;
        }
        )('PKAKNY')
    };
    return v43;
}
)();
I8yy.A43 = function() {
    //return typeof I8yy[576804].p43 === 'function' ? I8yy[576804].p43.apply(I8yy[576804], arguments) : I8yy[576804].p43;
    return v8yy[arguments[0]]
}
;
I8yy.z43 = function() {
    //return typeof I8yy[576804].p43 === 'function' ? I8yy[576804].p43.apply(I8yy[576804], arguments) : I8yy[576804].p43;
    return v8yy[arguments[0]]
}
;
I8yy[491570] = I8yy[443628];
function I8yy() {}
I8yy.A2k = function() {
    return typeof I8yy[76913].j2k === 'function' ? I8yy[76913].j2k.apply(I8yy[76913], arguments) : I8yy[76913].j2k;
}
;
I8yy[189157] = (function() {
    var V1f = function(F1f, v1f) {
        var a1f = v1f & 0xffff;
        var I1f = v1f - a1f;
        return (I1f * F1f | 0) + (a1f * F1f | 0) | 0;
    }
      , q1f = function(H1f, M1f, W1f) {
        var G1f = 0xcc9e2d51
          , Z1f = 0x1b873593;
        var K1f = W1f;
        var Q1f = M1f & ~0x3;
        for (var s1f = 0; s1f < Q1f; s1f += 4) {
            var g1f = H1f.charCodeAt(s1f) & 0xff | (H1f.charCodeAt(s1f + 1) & 0xff) << 8 | (H1f.charCodeAt(s1f + 2) & 0xff) << 16 | (H1f.charCodeAt(s1f + 3) & 0xff) << 24;
            g1f = V1f(g1f, G1f);
            g1f = (g1f & 0x1ffff) << 15 | g1f >>> 17;
            g1f = V1f(g1f, Z1f);
            K1f ^= g1f;
            K1f = (K1f & 0x7ffff) << 13 | K1f >>> 19;
            K1f = K1f * 5 + 0xe6546b64 | 0;
        }
        g1f = 0;
        switch (M1f % 4) {
        case 3:
            g1f = (H1f.charCodeAt(Q1f + 2) & 0xff) << 16;
        case 2:
            g1f |= (H1f.charCodeAt(Q1f + 1) & 0xff) << 8;
        case 1:
            g1f |= H1f.charCodeAt(Q1f) & 0xff;
            g1f = V1f(g1f, G1f);
            g1f = (g1f & 0x1ffff) << 15 | g1f >>> 17;
            g1f = V1f(g1f, Z1f);
            K1f ^= g1f;
        }
        K1f ^= M1f;
        K1f ^= K1f >>> 16;
        K1f = V1f(K1f, 0x85ebca6b);
        K1f ^= K1f >>> 13;
        K1f = V1f(K1f, 0xc2b2ae35);
        K1f ^= K1f >>> 16;
        return K1f;
    };
    return {
        z1f: q1f
    };
}
)();
I8yy.I1G = function() {
    return typeof I8yy[399276].o4G === 'function' ? I8yy[399276].o4G.apply(I8yy[399276], arguments) : I8yy[399276].o4G;
}
;
I8yy.g9b = function() {
    return typeof I8yy[273952].O5b === 'function' ? I8yy[273952].O5b.apply(I8yy[273952], arguments) : I8yy[273952].O5b;
}
;
I8yy[273952] = (function() {
    var t9b = 2;
    for (; t9b !== 9; ) {
        switch (t9b) {
        case 2:
            var u9b = [arguments];
            u9b[8] = undefined;
            u9b[6] = {};
            t9b = 4;
            break;
        case 4:
            u9b[6].O5b = function() {
                /*var i9b = 2;
                for (; i9b !== 145; ) {
                    switch (i9b) {
                    case 104:
                        k9b[31].M57 = function() {
                            var D3b = function() {
                                return [1, 2, 3, 4, 5].concat([5, 6, 7, 8]);
                            };
                            var q3b = !(/\x28\x5b/).J5nn(D3b + []);
                            return q3b;
                        }
                        ;
                        k9b[76] = k9b[31];
                        k9b[40] = {};
                        k9b[40].W57 = ['Y57'];
                        i9b = 100;
                        break;
                    case 31:
                        k9b[91] = k9b[24];
                        k9b[18] = {};
                        k9b[18].W57 = ['j47'];
                        k9b[18].M57 = function() {
                            var N3b = function(d3b, c3b, x3b) {
                                return !!d3b ? c3b : x3b;
                            };
                            var Y3b = !(/\x21/).J5nn(N3b + []);
                            return Y3b;
                        }
                        ;
                        i9b = 44;
                        break;
                    case 122:
                        k9b[29] = {};
                        k9b[29][k9b[16]] = k9b[87][k9b[97]][k9b[30]];
                        k9b[29][k9b[43]] = k9b[25];
                        i9b = 152;
                        break;
                    case 123:
                        i9b = k9b[30] < k9b[87][k9b[97]].length ? 122 : 150;
                        break;
                    case 2:
                        var k9b = [arguments];
                        i9b = 1;
                        break;
                    case 100:
                        k9b[40].M57 = function() {
                            var R3b = function() {
                                if (typeof [] !== 'object')
                                    var C3b = /aa/;
                            };
                            var U3b = !(/\u0061\u0061/).J5nn(R3b + []);
                            return U3b;
                        }
                        ;
                        k9b[66] = k9b[40];
                        k9b[4].push(k9b[55]);
                        k9b[4].push(k9b[64]);
                        k9b[4].push(k9b[9]);
                        i9b = 95;
                        break;
                    case 47:
                        k9b[63] = k9b[58];
                        k9b[27] = {};
                        k9b[27].W57 = ['j47'];
                        k9b[27].M57 = function() {
                            var J3b = function(b3b, h3b, X3b, Q3b) {
                                return !b3b && !h3b && !X3b && !Q3b;
                            };
                            var e3b = (/\x7c\x7c/).J5nn(J3b + []);
                            return e3b;
                        }
                        ;
                        i9b = 64;
                        break;
                    case 40:
                        k9b[26] = k9b[84];
                        k9b[37] = {};
                        i9b = 38;
                        break;
                    case 151:
                        k9b[30]++;
                        i9b = 123;
                        break;
                    case 66:
                        k9b[53] = {};
                        k9b[53].W57 = ['t57'];
                        k9b[53].M57 = function() {
                            var i3b = function() {
                                return [] + ('a').concat('a');
                            };
                            var A3b = !(/\x5b\x5d/).J5nn(i3b + []) && (/\x61\x61/).J5nn(i3b + []);
                            return A3b;
                        }
                        ;
                        i9b = 88;
                        break;
                    case 37:
                        k9b[37].M57 = function() {
                            var v3b = typeof undefined === 'function';
                            return v3b;
                        }
                        ;
                        k9b[96] = k9b[37];
                        k9b[61] = {};
                        k9b[61].W57 = ['Y57', 'j47'];
                        i9b = 52;
                        break;
                    case 48:
                        k9b[58].M57 = function() {
                            var V3b = function() {
                                return ('aa').lastIndexOf('a');
                            };
                            var s3b = (/\u0031/).J5nn(V3b + []);
                            return s3b;
                        }
                        ;
                        i9b = 47;
                        break;
                    case 44:
                        k9b[28] = k9b[18];
                        k9b[84] = {};
                        k9b[84].W57 = ['t57'];
                        k9b[84].M57 = function() {
                            var o3b = function() {
                                return ('x').startsWith('x');
                            };
                            var n3b = (/\x74\x72\u0075\u0065/).J5nn(o3b + []);
                            return n3b;
                        }
                        ;
                        i9b = 40;
                        break;
                    case 38:
                        k9b[37].W57 = ['w47'];
                        i9b = 37;
                        break;
                    case 1:
                        i9b = u9b[8] ? 5 : 4;
                        break;
                    case 22:
                        k9b[49].W57 = ['Y57'];
                        k9b[49].M57 = function() {
                            var O3b = function(r3b, a3b) {
                                if (r3b) {
                                    return r3b;
                                }
                                return a3b;
                            };
                            var L3b = (/\x3f/).J5nn(O3b + []);
                            return L3b;
                        }
                        ;
                        i9b = 35;
                        break;
                    case 84:
                        k9b[55] = k9b[73];
                        k9b[86] = {};
                        k9b[86].W57 = ['Y57', 'j47'];
                        i9b = 81;
                        break;
                    case 35:
                        k9b[77] = k9b[49];
                        k9b[24] = {};
                        k9b[24].W57 = ['Y57', 't57'];
                        k9b[24].M57 = function() {
                            var Z3b = function() {
                                return (![] + [])[+!+[]];
                            };
                            var l3b = (/\x61/).J5nn(Z3b + []);
                            return l3b;
                        }
                        ;
                        i9b = 31;
                        break;
                    case 126:
                        k9b[87] = k9b[4][k9b[34]];
                        try {
                            k9b[25] = k9b[87][k9b[51]]() ? k9b[60] : k9b[62];
                        } catch (I3b) {
                            k9b[25] = k9b[62];
                        }
                        i9b = 124;
                        break;
                    case 106:
                        k9b[4].push(k9b[26]);
                        k9b[4].push(k9b[76]);
                        k9b[20] = [];
                        k9b[60] = 'w57';
                        k9b[62] = 'z57';
                        i9b = 132;
                        break;
                    case 12:
                        k9b[1] = k9b[8];
                        k9b[7] = {};
                        k9b[7].W57 = ['w47'];
                        k9b[7].M57 = function() {
                            var q5b = typeof undefined === 'function';
                            return q5b;
                        }
                        ;
                        k9b[2] = k9b[7];
                        i9b = 18;
                        break;
                    case 152:
                        k9b[20].push(k9b[29]);
                        i9b = 151;
                        break;
                    case 110:
                        k9b[4].push(k9b[96]);
                        k9b[4].push(k9b[66]);
                        k9b[4].push(k9b[78]);
                        k9b[4].push(k9b[79]);
                        i9b = 106;
                        break;
                    case 127:
                        i9b = k9b[34] < k9b[4].length ? 126 : 149;
                        break;
                    case 70:
                        k9b[15] = {};
                        k9b[15].W57 = ['j47'];
                        k9b[15].M57 = function() {
                            var T3b = function() {
                                if (false) {
                                    console.log(1);
                                }
                            };
                            var t3b = !(/\u0031/).J5nn(T3b + []);
                            return t3b;
                        }
                        ;
                        k9b[59] = k9b[15];
                        i9b = 66;
                        break;
                    case 149:
                        i9b = (function(T9b) {
                            var A9b = 2;
                            for (; A9b !== 22; ) {
                                switch (A9b) {
                                case 2:
                                    var j9b = [arguments];
                                    A9b = 1;
                                    break;
                                case 26:
                                    A9b = j9b[5] >= 0.5 ? 25 : 24;
                                    break;
                                case 18:
                                    j9b[9] = false;
                                    A9b = 17;
                                    break;
                                case 19:
                                    j9b[7]++;
                                    A9b = 7;
                                    break;
                                case 6:
                                    j9b[6] = j9b[0][0][j9b[7]];
                                    A9b = 14;
                                    break;
                                case 12:
                                    j9b[8].push(j9b[6][k9b[16]]);
                                    A9b = 11;
                                    break;
                                case 4:
                                    j9b[1] = {};
                                    j9b[8] = [];
                                    j9b[7] = 0;
                                    A9b = 8;
                                    break;
                                case 14:
                                    A9b = typeof j9b[1][j9b[6][k9b[16]]] === 'undefined' ? 13 : 11;
                                    break;
                                case 10:
                                    A9b = j9b[6][k9b[43]] === k9b[60] ? 20 : 19;
                                    break;
                                case 20:
                                    j9b[1][j9b[6][k9b[16]]].h += true;
                                    A9b = 19;
                                    break;
                                case 11:
                                    j9b[1][j9b[6][k9b[16]]].t += true;
                                    A9b = 10;
                                    break;
                                case 13:
                                    j9b[1][j9b[6][k9b[16]]] = (function() {
                                        var M9b = 2;
                                        for (; M9b !== 9; ) {
                                            switch (M9b) {
                                            case 2:
                                                var f9b = [arguments];
                                                f9b[8] = {};
                                                f9b[8].h = 0;
                                                f9b[8].t = 0;
                                                M9b = 3;
                                                break;
                                            case 3:
                                                return f9b[8];
                                            }
                                        }
                                    }
                                    ).apply(this, arguments);
                                    A9b = 12;
                                    break;
                                case 16:
                                    A9b = j9b[7] < j9b[8].length ? 15 : 23;
                                    break;
                                case 8:
                                    j9b[7] = 0;
                                    A9b = 7;
                                    break;
                                case 1:
                                    A9b = j9b[0][0].length === 0 ? 5 : 4;
                                    break;
                                case 24:
                                    j9b[7]++;
                                    A9b = 16;
                                    break;
                                case 17:
                                    j9b[7] = 0;
                                    A9b = 16;
                                    break;
                                case 7:
                                    A9b = j9b[7] < j9b[0][0].length ? 6 : 18;
                                    break;
                                case 25:
                                    j9b[9] = true;
                                    A9b = 24;
                                    break;
                                case 5:
                                    return;
                                case 15:
                                    j9b[2] = j9b[8][j9b[7]];
                                    j9b[5] = j9b[1][j9b[2]].h / j9b[1][j9b[2]].t;
                                    A9b = 26;
                                    break;
                                case 23:
                                    return j9b[9];
                                    break;
                                }
                            }
                        }
                        )(k9b[20]) ? 148 : 147;
                        break;
                    case 15:
                        k9b[9] = k9b[6];
                        k9b[83] = {};
                        k9b[83].W57 = ['t57'];
                        k9b[83].M57 = function() {
                            var m5b = function() {
                                return decodeURIComponent('%25');
                            };
                            var P5b = !(/\x32\u0035/).J5nn(m5b + []);
                            return P5b;
                        }
                        ;
                        i9b = 24;
                        break;
                    case 148:
                        i9b = 76 ? 148 : 147;
                        break;
                    case 95:
                        k9b[4].push(k9b[54]);
                        k9b[4].push(k9b[28]);
                        i9b = 93;
                        break;
                    case 59:
                        k9b[57] = {};
                        k9b[57].W57 = ['Y57'];
                        k9b[57].M57 = function() {
                            var E3b = function(y3b, u3b) {
                                return y3b + u3b;
                            };
                            var S3b = function() {
                                return E3b(2, 2);
                            };
                            var B3b = !(/\u002c/).J5nn(S3b + []);
                            return B3b;
                        }
                        ;
                        k9b[64] = k9b[57];
                        i9b = 55;
                        break;
                    case 115:
                        k9b[4].push(k9b[1]);
                        k9b[4].push(k9b[59]);
                        k9b[4].push(k9b[82]);
                        k9b[4].push(k9b[77]);
                        i9b = 111;
                        break;
                    case 64:
                        k9b[88] = k9b[27];
                        k9b[98] = {};
                        k9b[98].W57 = ['t57'];
                        k9b[98].M57 = function() {
                            var H3b = function() {
                                return ('ab').charAt(1);
                            };
                            var F3b = !(/\x61/).J5nn(H3b + []);
                            return F3b;
                        }
                        ;
                        k9b[78] = k9b[98];
                        i9b = 59;
                        break;
                    case 81:
                        k9b[86].M57 = function() {
                            var G3b = function() {
                                return 1024 * 1024;
                            };
                            var z3b = (/[5-8]/).J5nn(G3b + []);
                            return z3b;
                        }
                        ;
                        k9b[54] = k9b[86];
                        k9b[31] = {};
                        k9b[31].W57 = ['t57'];
                        i9b = 104;
                        break;
                    case 111:
                        k9b[4].push(k9b[70]);
                        i9b = 110;
                        break;
                    case 132:
                        k9b[97] = 'W57';
                        k9b[43] = 'x57';
                        k9b[51] = 'M57';
                        k9b[16] = 'p57';
                        i9b = 128;
                        break;
                    case 74:
                        k9b[48] = {};
                        k9b[48].W57 = ['j47'];
                        k9b[48].M57 = function() {
                            var j3b = function() {
                                debugger ;
                            };
                            var f3b = !(/\x64\x65\x62\x75\x67\x67\u0065\x72/).J5nn(j3b + []);
                            return f3b;
                        }
                        ;
                        k9b[99] = k9b[48];
                        i9b = 70;
                        break;
                    case 93:
                        k9b[4].push(k9b[91]);
                        k9b[4].push(k9b[99]);
                        k9b[4].push(k9b[88]);
                        i9b = 119;
                        break;
                    case 119:
                        k9b[4].push(k9b[2]);
                        k9b[4].push(k9b[65]);
                        k9b[4].push(k9b[3]);
                        k9b[4].push(k9b[63]);
                        i9b = 115;
                        break;
                    case 147:
                        u9b[8] = 68;
                        return 98;
                        break;
                    case 52:
                        k9b[61].M57 = function() {
                            var W3b = function() {
                                return 1024 * 1024;
                            };
                            var K3b = (/[5-67-8]/).J5nn(W3b + []);
                            return K3b;
                        }
                        ;
                        k9b[82] = k9b[61];
                        k9b[58] = {};
                        k9b[58].W57 = ['t57'];
                        i9b = 48;
                        break;
                    case 55:
                        k9b[12] = {};
                        k9b[12].W57 = ['w47'];
                        k9b[12].M57 = function() {
                            var k3b = typeof undefined === 'function';
                            return k3b;
                        }
                        ;
                        k9b[70] = k9b[12];
                        i9b = 74;
                        break;
                    case 128:
                        k9b[34] = 0;
                        i9b = 127;
                        break;
                    case 88:
                        k9b[79] = k9b[53];
                        k9b[73] = {};
                        k9b[73].W57 = ['j47'];
                        k9b[73].M57 = function() {
                            var M3b = function() {
                                var g3b;
                                switch (g3b) {
                                case 0:
                                    break;
                                }
                            };
                            var w3b = !(/\x30/).J5nn(M3b + []);
                            return w3b;
                        }
                        ;
                        i9b = 84;
                        break;
                    case 3:
                        k9b[5] = {};
                        k9b[5].W57 = ['Y57'];
                        k9b[5].M57 = function() {
                            var M5b = function() {
                                return ("01").substring(1);
                            };
                            var w5b = !(/\x30/).J5nn(M5b + []);
                            return w5b;
                        }
                        ;
                        k9b[3] = k9b[5];
                        k9b[8] = {};
                        k9b[8].W57 = ['w47'];
                        k9b[8].M57 = function() {
                            function G5b(z5b, D5b) {
                                return z5b + D5b;
                            }
                            ;var g5b = (/\x6f\u006e[ \u2000-\u200a\r\u180e\f\ufeff\u2029\u2028\n\t\v\u00a0\u1680\u205f\u3000\u202f]{0,}\u0028/).J5nn(G5b + []);
                            return g5b;
                        }
                        ;
                        i9b = 12;
                        break;
                    case 24:
                        k9b[65] = k9b[83];
                        k9b[49] = {};
                        i9b = 22;
                        break;
                    case 5:
                        return 78;
                        break;
                    case 4:
                        k9b[4] = [];
                        i9b = 3;
                        break;
                    case 18:
                        k9b[6] = {};
                        k9b[6].W57 = ['w47'];
                        k9b[6].M57 = function() {
                            var R5b = false;
                            var U5b = [];
                            try {
                                for (var C5b in console) {
                                    U5b.push(C5b);
                                }
                                R5b = U5b.length === 0;
                            } catch (p5b) {}
                            var I5b = R5b;
                            return I5b;
                        }
                        ;
                        i9b = 15;
                        break;
                    case 124:
                        k9b[30] = 0;
                        i9b = 123;
                        break;
                    case 150:
                        k9b[34]++;
                        i9b = 127;
                        break;
                    }
                }*/
            }
            ;
            return u9b[6];
            break;
        }
    }
}
)();
I8yy.q1G = function() {
    return typeof I8yy[399276].V4G === 'function' ? I8yy[399276].V4G.apply(I8yy[399276], arguments) : I8yy[399276].V4G;
}
;
I8yy.Y8U = function() {
    return typeof I8yy[5645].v4U === 'function' ? I8yy[5645].v4U.apply(I8yy[5645], arguments) : I8yy[5645].v4U;
}
;
function l7b(L7M) {
    function s2M(o7M) {
        var F7M = 2;
        for (; F7M !== 5; ) {
            switch (F7M) {
            case 2:
                var H7M = [arguments];
                return H7M[0][0].Function;
                break;
            }
        }
    }
    var e7M = 2;
    for (; e7M !== 145; ) {
        switch (e7M) {
        case 93:
            v7M[29] += v7M[57];
            v7M[25] = v7M[40];
            v7M[25] += v7M[3];
            v7M[25] += v7M[57];
            v7M[18] = v7M[5];
            v7M[18] += v7M[74];
            e7M = 116;
            break;
        case 128:
            T2M(I2M, "fromCharCode", v7M[32], v7M[19]);
            e7M = 127;
            break;
        case 20:
            v7M[4] = "";
            v7M[5] = "g";
            v7M[6] = "c";
            v7M[4] = "m";
            v7M[91] = "D";
            v7M[60] = "R6";
            v7M[51] = "";
            e7M = 26;
            break;
        case 30:
            v7M[71] = "";
            v7M[71] = "S";
            v7M[40] = "J";
            v7M[27] = "";
            e7M = 43;
            break;
        case 146:
            T2M(h2M, v7M[43], v7M[32], v7M[26]);
            e7M = 145;
            break;
        case 81:
            v7M[69] += v7M[51];
            v7M[98] = v7M[60];
            v7M[98] += v7M[57];
            v7M[98] += v7M[57];
            e7M = 104;
            break;
        case 77:
            v7M[43] += v7M[85];
            v7M[82] = v7M[33];
            v7M[82] += v7M[75];
            v7M[82] += v7M[80];
            e7M = 73;
            break;
        case 125:
            T2M(N2M, "sort", v7M[31], v7M[18]);
            e7M = 124;
            break;
        case 58:
            v7M[26] += v7M[75];
            v7M[26] += v7M[80];
            v7M[43] = v7M[34];
            v7M[43] += v7M[34];
            e7M = 77;
            break;
        case 108:
            v7M[19] += v7M[73];
            v7M[19] += v7M[1];
            v7M[42] = v7M[2];
            v7M[42] += v7M[9];
            v7M[42] += v7M[23];
            v7M[48] = v7M[8];
            v7M[48] += v7M[6];
            e7M = 132;
            break;
        case 45:
            v7M[33] = "b";
            v7M[64] = "h";
            v7M[34] = "_";
            v7M[75] = "5";
            e7M = 62;
            break;
        case 6:
            v7M[1] = "";
            v7M[1] = "MM";
            v7M[7] = "";
            v7M[7] = "v";
            v7M[3] = "";
            v7M[3] = "6U";
            e7M = 20;
            break;
        case 150:
            T2M(N2M, "splice", v7M[31], v7M[83]);
            e7M = 149;
            break;
        case 100:
            v7M[94] += v7M[57];
            v7M[94] += v7M[57];
            v7M[11] = v7M[62];
            v7M[11] += v7M[57];
            v7M[11] += v7M[57];
            v7M[29] = v7M[37];
            v7M[29] += v7M[57];
            e7M = 93;
            break;
        case 120:
            T2M(I2M, "split", v7M[31], v7M[15]);
            e7M = 152;
            break;
        case 104:
            v7M[15] = v7M[4];
            v7M[15] += v7M[74];
            v7M[15] += v7M[51];
            v7M[94] = v7M[65];
            e7M = 100;
            break;
        case 43:
            v7M[30] = "a";
            v7M[27] = "J5";
            v7M[92] = "";
            v7M[92] = "esidual";
            e7M = 39;
            break;
        case 123:
            T2M(D2M, "random", v7M[32], v7M[29]);
            e7M = 122;
            break;
        case 69:
            v7M[55] += v7M[13];
            v7M[55] += v7M[13];
            v7M[66] = v7M[34];
            v7M[66] += v7M[39];
            v7M[66] += v7M[92];
            e7M = 89;
            break;
        case 3:
            v7M[9] = "";
            v7M[9] = "3M";
            v7M[2] = "";
            v7M[2] = "p";
            e7M = 6;
            break;
        case 122:
            T2M(N2M, "join", v7M[31], v7M[11]);
            e7M = 121;
            break;
        case 131:
            var T2M = function(O7M, r7M, Z7M, p7M) {
                var f7M = 2;
                for (; f7M !== 5; ) {
                    switch (f7M) {
                    case 2:
                        var Q7M = [arguments];
                        z2M(v7M[0][0], Q7M[0][0], Q7M[0][1], Q7M[0][2], Q7M[0][3]);
                        f7M = 5;
                        break;
                    }
                }
            };
            e7M = 130;
            break;
        case 148:
            T2M(h2M, v7M[66], v7M[32], v7M[55]);
            e7M = 147;
            break;
        case 52:
            v7M[54] = "";
            v7M[54] = "tract";
            v7M[96] = "";
            v7M[96] = "bs";
            v7M[47] = "";
            v7M[47] = "__a";
            v7M[31] = 1;
            e7M = 45;
            break;
        case 85:
            v7M[83] += v7M[74];
            v7M[83] += v7M[51];
            v7M[69] = v7M[30];
            v7M[69] += v7M[74];
            e7M = 81;
            break;
        case 127:
            T2M(I2M, "substring", v7M[31], v7M[53]);
            e7M = 126;
            break;
        case 132:
            v7M[48] += v7M[6];
            e7M = 131;
            break;
        case 26:
            v7M[73] = "3";
            v7M[57] = "U";
            v7M[65] = "Y6";
            v7M[23] = "M";
            e7M = 22;
            break;
        case 62:
            v7M[32] = 0;
            v7M[80] = "nn";
            v7M[85] = "optimize";
            v7M[26] = v7M[64];
            e7M = 58;
            break;
        case 121:
            T2M(h2M, "decodeURI", v7M[32], v7M[94]);
            e7M = 120;
            break;
        case 73:
            v7M[76] = v7M[47];
            v7M[76] += v7M[96];
            v7M[76] += v7M[54];
            v7M[55] = v7M[78];
            e7M = 69;
            break;
        case 2:
            var v7M = [arguments];
            v7M[8] = "";
            v7M[8] = "";
            v7M[8] = "R7";
            e7M = 3;
            break;
        case 22:
            v7M[51] = "";
            v7M[62] = "T6";
            v7M[90] = "s";
            v7M[37] = "F6";
            v7M[51] = "UU";
            v7M[74] = "";
            v7M[74] = "6";
            e7M = 30;
            break;
        case 129:
            T2M(h2M, "String", v7M[32], v7M[42]);
            e7M = 128;
            break;
        case 39:
            v7M[39] = "";
            v7M[39] = "_r";
            v7M[13] = "";
            v7M[13] = "n";
            v7M[78] = "";
            v7M[78] = "e5";
            e7M = 52;
            break;
        case 147:
            T2M(h2M, v7M[76], v7M[32], v7M[82]);
            e7M = 146;
            break;
        case 89:
            v7M[61] = v7M[27];
            v7M[61] += v7M[13];
            v7M[61] += v7M[13];
            v7M[83] = v7M[71];
            e7M = 85;
            break;
        case 116:
            v7M[18] += v7M[51];
            v7M[63] = v7M[7];
            v7M[63] += v7M[74];
            v7M[63] += v7M[51];
            e7M = 112;
            break;
        case 151:
            T2M(s2M, "apply", v7M[31], v7M[69]);
            e7M = 150;
            break;
        case 126:
            T2M(N2M, "push", v7M[31], v7M[63]);
            e7M = 125;
            break;
        case 130:
            T2M(I2M, "charCodeAt", v7M[31], v7M[48]);
            e7M = 129;
            break;
        case 124:
            T2M(h2M, "Math", v7M[32], v7M[25]);
            e7M = 123;
            break;
        case 149:
            T2M(W2M, "test", v7M[31], v7M[61]);
            e7M = 148;
            break;
        case 112:
            v7M[53] = v7M[91];
            v7M[53] += v7M[73];
            v7M[53] += v7M[1];
            v7M[19] = v7M[90];
            e7M = 108;
            break;
        case 152:
            T2M(N2M, "unshift", v7M[31], v7M[98]);
            e7M = 151;
            break;
        }
    }
    function W2M(V7M) {
        var W0r = 2;
        for (; W0r !== 5; ) {
            switch (W0r) {
            case 2:
                var n7M = [arguments];
                return n7M[0][0].RegExp;
                break;
            }
        }
    }
    function N2M(U7M) {
        var z0r = 2;
        for (; z0r !== 5; ) {
            switch (z0r) {
            case 2:
                var j7M = [arguments];
                return j7M[0][0].Array;
                break;
            }
        }
    }
    function I2M(P7M) {
        var D0r = 2;
        for (; D0r !== 5; ) {
            switch (D0r) {
            case 2:
                var C7M = [arguments];
                return C7M[0][0].String;
                break;
            }
        }
    }
    function h2M(S7M) {
        var s0r = 2;
        for (; s0r !== 5; ) {
            switch (s0r) {
            case 2:
                var B7M = [arguments];
                return B7M[0][0];
                break;
            }
        }
    }
    function z2M(M7M, y7M, R7M, a7M, u7M) {
        var T0r = 2;
        for (; T0r !== 12; ) {
            switch (T0r) {
            case 2:
                var c7M = [arguments];
                c7M[7] = "";
                c7M[7] = "roperty";
                c7M[9] = "";
                c7M[9] = "";
                T0r = 9;
                break;
            case 9:
                c7M[9] = "neP";
                c7M[2] = "";
                c7M[2] = "defi";
                c7M[5] = true;
                c7M[5] = false;
                T0r = 13;
                break;
            case 13:
                try {
                    var h0r = 2;
                    for (; h0r !== 6; ) {
                        switch (h0r) {
                        case 2:
                            c7M[1] = {};
                            c7M[6] = (1,
                            c7M[0][1])(c7M[0][0]);
                            c7M[4] = [c7M[6], c7M[6].prototype][c7M[0][3]];
                            c7M[4][c7M[0][4]] = c7M[4][c7M[0][2]];
                            c7M[1].set = function(G7M) {
                                var N0r = 2;
                                for (; N0r !== 5; ) {
                                    switch (N0r) {
                                    case 2:
                                        var b7M = [arguments];
                                        c7M[4][c7M[0][2]] = b7M[0][0];
                                        N0r = 5;
                                        break;
                                    }
                                }
                            }
                            ;
                            c7M[1].get = function() {
                                var I0r = 2;
                                for (; I0r !== 6; ) {
                                    switch (I0r) {
                                    case 2:
                                        var m7M = [arguments];
                                        m7M[3] = "";
                                        m7M[3] = "defined";
                                        m7M[6] = "u";
                                        I0r = 3;
                                        break;
                                    case 3:
                                        m7M[8] = m7M[6];
                                        m7M[8] += v7M[13];
                                        m7M[8] += m7M[3];
                                        return typeof c7M[4][c7M[0][2]] == m7M[8] ? undefined : c7M[4][c7M[0][2]];
                                        break;
                                    }
                                }
                            }
                            ;
                            h0r = 8;
                            break;
                        case 8:
                            c7M[1].enumerable = c7M[5];
                            try {
                                var i0r = 2;
                                for (; i0r !== 3; ) {
                                    switch (i0r) {
                                    case 2:
                                        c7M[8] = c7M[2];
                                        c7M[8] += c7M[9];
                                        c7M[8] += c7M[7];
                                        c7M[0][0].Object[c7M[8]](c7M[4], c7M[0][4], c7M[1]);
                                        i0r = 3;
                                        break;
                                    }
                                }
                            } catch (c2M) {}
                            h0r = 6;
                            break;
                        }
                    }
                } catch (b2M) {}
                T0r = 12;
                break;
            }
        }
    }
    function D2M(Y7M) {
        var d7M = 2;
        for (; d7M !== 5; ) {
            switch (d7M) {
            case 2:
                var E7M = [arguments];
                return E7M[0][0].Math;
                break;
            }
        }
    }
}
I8yy[76913] = (function(f2k) {
    return {
        j2k: function() {
            var T2k, G2k = arguments;
            switch (f2k) {
            case 178:
                T2k = G2k[1] / G2k[3] / G2k[2] * G2k[0] - G2k[4];
                break;
            case 122:
                T2k = G2k[1] / G2k[4] * G2k[2] / G2k[0] + G2k[3];
                break;
            case 87:
                T2k = G2k[1] * G2k[0] - G2k[2] - G2k[4] - G2k[3];
                break;
            case 67:
                T2k = G2k[1] + G2k[0] + G2k[2] + G2k[3] - G2k[4];
                break;
            case 123:
                T2k = G2k[2] - G2k[1] + G2k[3] + G2k[0] - G2k[4];
                break;
            case 242:
                T2k = -G2k[4] * G2k[0] + G2k[3] + G2k[1] + G2k[2];
                break;
            case 31:
                T2k = (G2k[1] + G2k[3]) * G2k[0] - G2k[2];
                break;
            case 48:
                T2k = G2k[2] * G2k[1] - G2k[0] * G2k[3];
                break;
            case 155:
                T2k = (G2k[1] + G2k[3]) / G2k[4] + G2k[2] - G2k[0];
                break;
            case 202:
                T2k = G2k[1] + (G2k[0] - G2k[2]);
                break;
            case 111:
                T2k = (G2k[1] + G2k[2]) / G2k[0];
                break;
            case 239:
                T2k = -G2k[1] / G2k[0] * G2k[2];
                break;
            case 216:
                T2k = (G2k[0] - G2k[2]) * G2k[1] - G2k[4] - G2k[3];
                break;
            case 243:
                T2k = (G2k[4] - G2k[3]) / G2k[1] * G2k[0] - G2k[2];
                break;
            case 46:
                T2k = G2k[0] * G2k[1] - G2k[2] * -G2k[3];
                break;
            case 76:
                T2k = G2k[0] + G2k[3] - G2k[1] - G2k[2];
                break;
            case 191:
                T2k = -G2k[4] * G2k[1] - G2k[3] + G2k[0] + G2k[2];
                break;
            case 92:
                T2k = (-G2k[1] - G2k[0]) / G2k[2] + G2k[3] - G2k[4];
                break;
            case 208:
                T2k = -G2k[2] + G2k[1] - G2k[3] + G2k[0];
                break;
            case 45:
                T2k = (-G2k[3] * G2k[4] - G2k[1]) * G2k[0] + G2k[2];
                break;
            case 101:
                T2k = (G2k[3] - G2k[0]) * G2k[1] + G2k[4] + G2k[2];
                break;
            case 133:
                T2k = -G2k[0] / G2k[2] + G2k[1];
                break;
            case 61:
                T2k = (G2k[4] - G2k[3] + G2k[1]) / G2k[0] - G2k[2];
                break;
            case 94:
                T2k = G2k[0] * G2k[3] * G2k[1] / G2k[2] - G2k[4];
                break;
            case 182:
                T2k = (G2k[4] + G2k[0]) / G2k[2] * G2k[1] + G2k[3];
                break;
            case 50:
                T2k = -G2k[2] * G2k[1] - G2k[3] * G2k[0];
                break;
            case 77:
                T2k = (G2k[1] / G2k[0] - G2k[2]) * G2k[4] + G2k[3];
                break;
            case 95:
                T2k = (G2k[0] & G2k[1]) << G2k[2];
                break;
            case 71:
                T2k = (G2k[2] + G2k[3] - G2k[1]) / G2k[0] - G2k[4];
                break;
            case 150:
                T2k = -G2k[0] / G2k[1] - G2k[2];
                break;
            case 115:
                T2k = G2k[3] * G2k[1] + G2k[4] * G2k[0] + G2k[2];
                break;
            case 90:
                T2k = (G2k[2] + G2k[3] + G2k[4]) / G2k[1] + G2k[0];
                break;
            case 98:
                T2k = -G2k[1] + G2k[0];
                break;
            case 154:
                T2k = G2k[2] / G2k[1] * G2k[0] - G2k[3] + G2k[4];
                break;
            case 181:
                T2k = G2k[2] * G2k[1] / G2k[3] - G2k[4] - G2k[0];
                break;
            case 89:
                T2k = (G2k[3] - G2k[2] + G2k[0]) / G2k[1] + G2k[4];
                break;
            case 179:
                T2k = G2k[0] * G2k[3] / G2k[2] + G2k[4] + G2k[1];
                break;
            case 190:
                T2k = (G2k[0] - G2k[4] - G2k[2]) * G2k[1] + G2k[3];
                break;
            case 194:
                T2k = G2k[4] * G2k[3] + G2k[0] + G2k[2] + G2k[1];
                break;
            case 64:
                T2k = G2k[0] + G2k[2] * G2k[1];
                break;
            case 183:
                T2k = (G2k[2] + G2k[3] + G2k[4]) / G2k[0] - G2k[1];
                break;
            case 129:
                T2k = (G2k[3] / G2k[2] - G2k[0]) / G2k[4] + G2k[1];
                break;
            case 174:
                T2k = G2k[0] * G2k[2] / G2k[4] / G2k[3] + G2k[1];
                break;
            case 44:
                T2k = (G2k[3] * G2k[1] + G2k[4]) / G2k[2] - G2k[0];
                break;
            case 241:
                T2k = (-G2k[2] + G2k[0]) * G2k[3] - G2k[1];
                break;
            case 211:
                T2k = G2k[2] / (G2k[0] + G2k[1]);
                break;
            case 4:
                T2k = G2k[0] - G2k[1] * G2k[2];
                break;
            case 249:
                T2k = G2k[0] * G2k[2] + (G2k[1] - G2k[4]) * G2k[3];
                break;
            case 23:
                T2k = G2k[3] / G2k[0] * G2k[1] + G2k[4] - G2k[2];
                break;
            case 19:
                T2k = (G2k[4] + G2k[1] + G2k[0]) * G2k[2] - G2k[3];
                break;
            case 97:
                T2k = (G2k[2] - G2k[0]) / G2k[1];
                break;
            case 213:
                T2k = (G2k[0] + G2k[2]) / G2k[1] - G2k[3] - G2k[4];
                break;
            case 135:
                T2k = (G2k[4] - G2k[1]) * G2k[3] / G2k[0] - G2k[2];
                break;
            case 54:
                T2k = -G2k[1] * G2k[3] * G2k[0] / G2k[4] + G2k[2];
                break;
            case 13:
                T2k = G2k[2] * G2k[1] * G2k[0];
                break;
            case 232:
                T2k = G2k[0] + G2k[3] + G2k[1] * G2k[2];
                break;
            case 222:
                T2k = (G2k[0] * G2k[4] + G2k[3]) / G2k[2] + G2k[1];
                break;
            case 212:
                T2k = (G2k[1] * G2k[4] - G2k[3]) / G2k[0] - G2k[2];
                break;
            case 219:
                T2k = G2k[1] * G2k[0] / G2k[3] + G2k[2] - G2k[4];
                break;
            case 125:
                T2k = (G2k[1] + G2k[4] - G2k[2]) / G2k[0] + G2k[3];
                break;
            case 86:
                T2k = (G2k[2] - G2k[4]) / G2k[0] + G2k[3] - G2k[1];
                break;
            case 237:
                T2k = -G2k[0] * G2k[3] * G2k[2] * G2k[4] + G2k[1];
                break;
            case 30:
                T2k = G2k[4] + G2k[3] + G2k[1] - G2k[2] - G2k[0];
                break;
            case 36:
                T2k = G2k[0] / G2k[1] - G2k[2];
                break;
            case 233:
                T2k = -G2k[4] / G2k[3] * G2k[0] / G2k[2] + G2k[1];
                break;
            case 234:
                T2k = (-G2k[4] / G2k[2] - G2k[1]) * G2k[0] + G2k[3];
                break;
            case 38:
                T2k = G2k[1] / G2k[3] / G2k[4] - G2k[2] + G2k[0];
                break;
            case 132:
                T2k = G2k[2] - G2k[1] - G2k[3] - G2k[0] - G2k[4];
                break;
            case 159:
                T2k = (G2k[3] - G2k[4]) * G2k[0] + G2k[2] * G2k[1];
                break;
            case 144:
                T2k = G2k[3] * G2k[0] + G2k[1] + G2k[2];
                break;
            case 35:
                T2k = G2k[0] * G2k[2] + G2k[1];
                break;
            case 3:
                T2k = G2k[2] / (G2k[0] / G2k[1]);
                break;
            case 229:
                T2k = (-G2k[0] + G2k[1]) * G2k[3] - G2k[4] + G2k[2];
                break;
            case 192:
                T2k = (-G2k[2] / G2k[3] - G2k[0]) / G2k[4] + G2k[1];
                break;
            case 187:
                T2k = G2k[3] + G2k[2] - G2k[4] + G2k[1] - G2k[0];
                break;
            case 199:
                T2k = G2k[0] / G2k[2] + G2k[1] - G2k[3] + G2k[4];
                break;
            case 165:
                T2k = G2k[3] % G2k[0] + G2k[4] - (G2k[5] - G2k[2]) + G2k[1];
                break;
            case 32:
                T2k = G2k[1] + G2k[2] - G2k[0];
                break;
            case 12:
                T2k = G2k[1] - G2k[0] - G2k[2];
                break;
            case 93:
                T2k = G2k[2] + G2k[4] - G2k[1] + G2k[0] + G2k[3];
                break;
            case 164:
                T2k = ((G2k[0] - G2k[4]) * G2k[3] + G2k[2] * G2k[5]) * G2k[1];
                break;
            case 18:
                T2k = G2k[3] / G2k[2] / G2k[0] + G2k[4] + G2k[1];
                break;
            case 65:
                T2k = (G2k[2] & G2k[1]) == G2k[0];
                break;
            case 91:
                T2k = (G2k[4] * G2k[1] + G2k[0]) * G2k[2] - G2k[3];
                break;
            case 220:
                T2k = G2k[1] * G2k[2] * G2k[0] / G2k[4] + G2k[3];
                break;
            case 152:
                T2k = G2k[0] / G2k[4] - (G2k[2] - G2k[3]) / G2k[1];
                break;
            case 21:
                T2k = G2k[0] / G2k[2] + G2k[1];
                break;
            case 204:
                T2k = (-G2k[2] - G2k[3]) / G2k[1] * G2k[4] + G2k[0];
                break;
            case 247:
                T2k = (-G2k[2] * G2k[0] + G2k[1]) * G2k[3] + G2k[4];
                break;
            case 0:
                T2k = G2k[0] + G2k[1];
                break;
            case 96:
                T2k = G2k[0] == G2k[1];
                break;
            case 195:
                T2k = (-G2k[3] + G2k[0]) * G2k[1] + G2k[4] - G2k[2];
                break;
            case 116:
                T2k = G2k[0] * (G2k[2] / G2k[1]);
                break;
            case 175:
                T2k = G2k[1] / G2k[3] - G2k[0] + G2k[4] - G2k[2];
                break;
            case 68:
                T2k = (G2k[0] * G2k[4] - G2k[2]) * G2k[1] - G2k[3];
                break;
            case 25:
                T2k = G2k[0] * G2k[2] * G2k[3] - G2k[1];
                break;
            case 170:
                T2k = -G2k[3] / G2k[2] / G2k[1] + G2k[4] - G2k[0];
                break;
            case 1:
                T2k = G2k[1] - G2k[0];
                break;
            case 180:
                T2k = G2k[1] - G2k[2] - G2k[0] - G2k[3];
                break;
            case 118:
                T2k = (G2k[3] - G2k[2]) / G2k[1] - G2k[0];
                break;
            case 160:
                T2k = G2k[1] - G2k[3] - G2k[4] + G2k[0] - G2k[2];
                break;
            case 28:
                T2k = -G2k[0] - G2k[1] + G2k[2];
                break;
            case 207:
                T2k = (-G2k[2] + G2k[3]) / G2k[0] + G2k[1];
                break;
            case 221:
                T2k = G2k[0] > G2k[1];
                break;
            case 33:
                T2k = G2k[0] * G2k[1] % G2k[2];
                break;
            case 62:
                T2k = (G2k[0] + G2k[4]) / G2k[1] - G2k[2] + G2k[3];
                break;
            case 240:
                T2k = (G2k[4] / G2k[3] - G2k[2]) * G2k[0] - G2k[1];
                break;
            case 70:
                T2k = G2k[2] / (G2k[1] * G2k[0]);
                break;
            case 47:
                T2k = G2k[1] * G2k[3] + G2k[2] * -G2k[0];
                break;
            case 172:
                T2k = G2k[4] - G2k[2] + G2k[3] - G2k[1] + G2k[0];
                break;
            case 22:
                T2k = (G2k[3] + G2k[2]) / G2k[1] + G2k[0];
                break;
            case 42:
                T2k = G2k[0] + G2k[1] + G2k[2];
                break;
            case 157:
                T2k = (G2k[2] - G2k[0]) * G2k[3] / G2k[1] + G2k[4];
                break;
            case 110:
                T2k = (G2k[3] - G2k[1]) / G2k[2] + G2k[0];
                break;
            case 250:
                T2k = (-G2k[0] + G2k[3] + G2k[2]) / G2k[1] - G2k[4];
                break;
            case 60:
                T2k = G2k[3] / G2k[2] - G2k[0] + G2k[1];
                break;
            case 203:
                T2k = -G2k[0] - G2k[1];
                break;
            case 169:
                T2k = G2k[2] - G2k[0] + G2k[3] + G2k[4] + G2k[1];
                break;
            case 177:
                T2k = (G2k[1] - G2k[0]) * G2k[3] * G2k[4] + G2k[2];
                break;
            case 184:
                T2k = (G2k[1] - G2k[2]) * G2k[0] - G2k[3] + G2k[4];
                break;
            case 113:
                T2k = G2k[2] / G2k[0] * G2k[3] + G2k[1];
                break;
            case 131:
                T2k = G2k[0] / G2k[2] / G2k[3] / G2k[1] + G2k[4];
                break;
            case 224:
                T2k = (G2k[2] + G2k[0]) * G2k[1] + G2k[3] - G2k[4];
                break;
            case 136:
                T2k = G2k[1] - G2k[4] + G2k[2] - G2k[0] - G2k[3];
                break;
            case 103:
                T2k = G2k[0] - G2k[2] / G2k[1];
                break;
            case 146:
                T2k = G2k[2] - G2k[3] - G2k[1] + G2k[0] + G2k[4];
                break;
            case 66:
                T2k = G2k[2] * G2k[3] * G2k[1] - G2k[0] - G2k[4];
                break;
            case 56:
                T2k = G2k[1] - G2k[0] + G2k[2] - G2k[3];
                break;
            case 16:
                T2k = G2k[0] * G2k[3] - G2k[1] - G2k[2];
                break;
            case 121:
                T2k = G2k[0] / G2k[1] / G2k[3] - G2k[2];
                break;
            case 236:
                T2k = -G2k[1] * G2k[0] / G2k[2] - G2k[3];
                break;
            case 173:
                T2k = -G2k[2] * G2k[1] + G2k[0] - G2k[4] + G2k[3];
                break;
            case 84:
                T2k = G2k[2] * G2k[1] / G2k[4] - G2k[0] + G2k[3];
                break;
            case 51:
                T2k = -G2k[3] * G2k[2] + G2k[0] * G2k[1];
                break;
            case 11:
                T2k = G2k[0] / G2k[3] - G2k[2] + G2k[1] + G2k[4];
                break;
            case 197:
                T2k = G2k[2] + G2k[1] - G2k[4] - G2k[0] + G2k[3];
                break;
            case 127:
                T2k = (G2k[0] + G2k[4]) / G2k[3] + G2k[1] + G2k[2];
                break;
            case 149:
                T2k = -G2k[0] / G2k[1];
                break;
            case 105:
                T2k = (G2k[0] - G2k[3]) / G2k[4] + G2k[1] + G2k[2];
                break;
            case 112:
                T2k = (G2k[3] - G2k[1]) * G2k[0] + G2k[2];
                break;
            case 119:
                T2k = G2k[2] + G2k[0] + G2k[1] - G2k[3];
                break;
            case 120:
                T2k = G2k[3] + G2k[0] - G2k[2] + G2k[1];
                break;
            case 8:
                T2k = (G2k[1] - G2k[4] - G2k[3]) / G2k[0] + G2k[2];
                break;
            case 117:
                T2k = G2k[2] / G2k[0] - G2k[3] - G2k[1];
                break;
            case 140:
                T2k = -G2k[3] / G2k[0] * G2k[1] + G2k[2] + G2k[4];
                break;
            case 206:
                T2k = -G2k[2] / G2k[0] / G2k[3] + G2k[1];
                break;
            case 218:
                T2k = (G2k[1] - G2k[0] - G2k[3]) * G2k[2] - G2k[4];
                break;
            case 83:
                T2k = (-G2k[3] * G2k[4] - G2k[0]) / G2k[2] + G2k[1];
                break;
            case 166:
                T2k = ((G2k[3] - G2k[2]) * G2k[1] + G2k[0] * G2k[5]) * G2k[4] * G2k[6];
                break;
            case 79:
                T2k = G2k[0] / G2k[3] + G2k[1] + G2k[2];
                break;
            case 85:
                T2k = G2k[1] * G2k[3] / G2k[0] + G2k[2];
                break;
            case 27:
                T2k = G2k[3] / G2k[2] * G2k[1] - G2k[0];
                break;
            case 137:
                T2k = (G2k[2] + G2k[3] - G2k[0]) * G2k[1] - G2k[4];
                break;
            case 108:
                T2k = G2k[1] & G2k[0];
                break;
            case 198:
                T2k = (G2k[4] - G2k[5]) * (G2k[1] - G2k[2]) + G2k[0] * G2k[3];
                break;
            case 148:
                T2k = -G2k[1] / G2k[2] * G2k[3] + G2k[0];
                break;
            case 162:
                T2k = G2k[0] / G2k[2] - G2k[1] - G2k[3] - G2k[4];
                break;
            case 176:
                T2k = -G2k[0] / G2k[1] + G2k[3] + G2k[2] - G2k[4];
                break;
            case 215:
                T2k = G2k[1] * G2k[2] - G2k[4] + G2k[3] - G2k[0];
                break;
            case 74:
                T2k = G2k[2] / G2k[1] * G2k[0] + G2k[4] + G2k[3];
                break;
            case 171:
                T2k = -G2k[1] + G2k[2] - G2k[0];
                break;
            case 104:
                T2k = (G2k[2] + G2k[1]) * G2k[0];
                break;
            case 59:
                T2k = G2k[3] * G2k[2] * G2k[4] * G2k[0] - G2k[1];
                break;
            case 124:
                T2k = -G2k[1] * G2k[3] / G2k[2] + G2k[0];
                break;
            case 139:
                T2k = G2k[3] / G2k[0] * G2k[2] / G2k[1] - G2k[4];
                break;
            case 63:
                T2k = (G2k[3] - G2k[2]) / G2k[1] - G2k[4] + G2k[0];
                break;
            case 163:
                T2k = G2k[0] * G2k[3] + G2k[2] + G2k[1] - G2k[4];
                break;
            case 147:
                T2k = -G2k[1] * G2k[0] + G2k[3] + G2k[2];
                break;
            case 78:
                T2k = (G2k[3] / G2k[4] + G2k[2]) * G2k[0] - G2k[1];
                break;
            case 167:
                T2k = G2k[1] + G2k[2] + G2k[0] + G2k[3];
                break;
            case 186:
                T2k = -G2k[0] * G2k[4] / G2k[3] + G2k[2] - G2k[1];
                break;
            case 151:
                T2k = -G2k[3] / G2k[2] + (G2k[1] - G2k[0]) / G2k[4];
                break;
            case 39:
                T2k = (G2k[4] + G2k[2]) * G2k[1] / G2k[0] + G2k[3];
                break;
            case 142:
                T2k = (G2k[1] + G2k[3]) / G2k[0] - G2k[2];
                break;
            case 6:
                T2k = (G2k[2] - G2k[0]) * (G2k[1] / G2k[3]);
                break;
            case 223:
                T2k = G2k[4] + G2k[3] - G2k[1] - G2k[0] - G2k[2];
                break;
            case 15:
                T2k = (G2k[1] - G2k[2]) * G2k[3] - G2k[0];
                break;
            case 126:
                T2k = -G2k[1] * G2k[0];
                break;
            case 17:
                T2k = G2k[3] - G2k[2] - G2k[0] + G2k[1];
                break;
            case 244:
                T2k = G2k[0] * G2k[3] / G2k[2] * G2k[1] - G2k[4];
                break;
            case 81:
                T2k = G2k[4] - G2k[1] - G2k[2] - G2k[3] + G2k[0];
                break;
            case 196:
                T2k = (-G2k[2] - G2k[3]) * G2k[4] - G2k[1] + G2k[0];
                break;
            case 141:
                T2k = -G2k[0] / G2k[2] - G2k[1] + G2k[3];
                break;
            case 188:
                T2k = (-G2k[4] + G2k[2] - G2k[1]) * G2k[0] + G2k[3];
                break;
            case 57:
                T2k = G2k[3] * G2k[0] * G2k[1] + G2k[2] - G2k[4];
                break;
            case 161:
                T2k = G2k[3] / G2k[1] + G2k[2] - G2k[0];
                break;
            case 73:
                T2k = (G2k[2] - G2k[1]) * G2k[3] + G2k[4] - G2k[0];
                break;
            case 158:
                T2k = (G2k[3] - G2k[2]) / G2k[4] / G2k[0] - G2k[1];
                break;
            case 114:
                T2k = G2k[2] * G2k[0] / G2k[3] - G2k[1];
                break;
            case 238:
                T2k = (-G2k[2] / G2k[1] - G2k[3]) * G2k[0];
                break;
            case 235:
                T2k = -G2k[3] + G2k[1] / G2k[2] * G2k[0];
                break;
            case 82:
                T2k = (G2k[0] - G2k[1]) * G2k[4] * G2k[2] - G2k[3];
                break;
            case 37:
                T2k = (G2k[4] - G2k[2] - G2k[1]) / G2k[3] - G2k[0];
                break;
            case 53:
                T2k = -G2k[2] * G2k[3] + G2k[0] * -G2k[1];
                break;
            case 24:
                T2k = (G2k[4] - G2k[2]) / G2k[3] / G2k[1] + G2k[0];
                break;
            case 168:
                T2k = (G2k[1] + G2k[4]) * G2k[0] / G2k[3] - G2k[2];
                break;
            case 248:
                T2k = G2k[0] / (G2k[1] / G2k[2]) - G2k[3];
                break;
            case 226:
                T2k = G2k[4] + G2k[1] + G2k[2] + G2k[0] + G2k[3];
                break;
            case 230:
                T2k = -G2k[1] * G2k[4] * G2k[3] + G2k[0] + G2k[2];
                break;
            case 55:
                T2k = (G2k[3] / G2k[4] + G2k[2]) / G2k[1] + G2k[0];
                break;
            case 49:
                T2k = G2k[1] * G2k[2] + G2k[0] * G2k[3];
                break;
            case 143:
                T2k = G2k[4] / G2k[2] + G2k[1] + G2k[3] - G2k[0];
                break;
            case 80:
                T2k = G2k[0] - G2k[3] + G2k[2] + G2k[1];
                break;
            case 40:
                T2k = G2k[2] - G2k[0] + G2k[1];
                break;
            case 14:
                T2k = G2k[0] * G2k[3] * G2k[2] * G2k[1];
                break;
            case 107:
                T2k = G2k[0] >> G2k[1] & G2k[2];
                break;
            case 228:
                T2k = G2k[2] * G2k[4] / G2k[1] * G2k[3] + G2k[0];
                break;
            case 109:
                T2k = (G2k[2] - G2k[0]) / G2k[3] % G2k[1];
                break;
            case 193:
                T2k = (G2k[2] - G2k[4]) / G2k[0] * G2k[1] + G2k[3];
                break;
            case 20:
                T2k = (G2k[4] - G2k[3] + G2k[0]) * G2k[1] - G2k[2];
                break;
            case 245:
                T2k = G2k[0] / G2k[1] / G2k[3] + G2k[4] - G2k[2];
                break;
            case 29:
                T2k = (G2k[0] + G2k[4]) / G2k[1] / G2k[3] + G2k[2];
                break;
            case 205:
                T2k = -G2k[0] * G2k[2] / G2k[3] * G2k[1] + G2k[4];
                break;
            case 227:
                T2k = (-G2k[3] - G2k[1]) * G2k[0] + G2k[2];
                break;
            case 246:
                T2k = (-G2k[3] + G2k[4]) / G2k[2] + G2k[1] - G2k[0];
                break;
            case 26:
                T2k = G2k[3] * G2k[1] + G2k[0] - G2k[2];
                break;
            case 200:
                T2k = G2k[0] + (G2k[1] - G2k[3]) / G2k[2];
                break;
            case 225:
                T2k = (G2k[1] - G2k[2]) / G2k[4] - G2k[0] - G2k[3];
                break;
            case 10:
                T2k = G2k[3] / G2k[0] - G2k[4] - G2k[1] + G2k[2];
                break;
            case 156:
                T2k = G2k[2] * G2k[1] - G2k[3] + G2k[0];
                break;
            case 138:
                T2k = (G2k[2] + G2k[0]) * G2k[3] - G2k[1] - G2k[4];
                break;
            case 9:
                T2k = G2k[2] * G2k[1] - G2k[0];
                break;
            case 189:
                T2k = -G2k[2] / G2k[1] + G2k[3] - G2k[0] + G2k[4];
                break;
            case 69:
                T2k = (G2k[3] * G2k[2] - G2k[1]) / G2k[0] + G2k[4];
                break;
            case 41:
                T2k = G2k[3] / G2k[2] * G2k[1] * G2k[0] - G2k[4];
                break;
            case 209:
                T2k = (G2k[4] + G2k[2]) / G2k[0] * G2k[3] - G2k[1];
                break;
            case 52:
                T2k = -G2k[3] * G2k[0] - G2k[1] * -G2k[2];
                break;
            case 185:
                T2k = (-G2k[0] / G2k[1] + G2k[2]) * G2k[4] - G2k[3];
                break;
            case 43:
                T2k = G2k[2] / G2k[0] / G2k[1] + G2k[3];
                break;
            case 72:
                T2k = -G2k[3] * G2k[1] * G2k[2] + G2k[0];
                break;
            case 130:
                T2k = G2k[1] / G2k[4] / G2k[3] * G2k[2] + G2k[0];
                break;
            case 5:
                T2k = G2k[0] * G2k[1];
                break;
            case 217:
                T2k = (G2k[2] + G2k[1]) * G2k[0] + G2k[3] + G2k[4];
                break;
            case 100:
                T2k = (G2k[4] + G2k[3]) / G2k[2] / G2k[1] - G2k[0];
                break;
            case 7:
                T2k = G2k[4] / G2k[3] + G2k[1] + G2k[2] + G2k[0];
                break;
            case 251:
                T2k = (-G2k[1] / G2k[2] + G2k[0]) * G2k[3] + G2k[4];
                break;
            case 134:
                T2k = -G2k[0] * G2k[1] / G2k[3] + G2k[2] + G2k[4];
                break;
            case 128:
                T2k = (G2k[2] + G2k[1]) * G2k[0] - G2k[4] + G2k[3];
                break;
            case 2:
                T2k = G2k[0] / G2k[1];
                break;
            case 201:
                T2k = G2k[1] - (G2k[0] + (G2k[4] - G2k[3]) / G2k[2]);
                break;
            case 210:
                T2k = G2k[3] / G2k[1] * (G2k[0] / G2k[2]);
                break;
            case 99:
                T2k = (G2k[4] - G2k[1]) * G2k[2] + (G2k[3] - G2k[0]);
                break;
            case 88:
                T2k = G2k[4] / G2k[3] * G2k[1] - G2k[0] - G2k[2];
                break;
            case 75:
                T2k = G2k[4] * G2k[1] + G2k[2] - G2k[3] - G2k[0];
                break;
            case 34:
                T2k = G2k[0] % G2k[1];
                break;
            case 106:
                T2k = G2k[2] / G2k[0] * G2k[1];
                break;
            case 102:
                T2k = -G2k[1] * G2k[0] + G2k[2];
                break;
            case 231:
                T2k = G2k[2] + G2k[3] + G2k[1] - G2k[4] + G2k[0];
                break;
            case 252:
                T2k = (-G2k[3] - G2k[2] - G2k[1]) / G2k[4] + G2k[0];
                break;
            case 214:
                T2k = (G2k[1] / G2k[3] + G2k[0]) * G2k[2] + G2k[4];
                break;
            case 153:
                T2k = G2k[1] / G2k[0] / G2k[2];
                break;
            case 145:
                T2k = (G2k[3] + G2k[0]) * G2k[1] * G2k[2] - G2k[4];
                break;
            case 58:
                T2k = -G2k[0] / G2k[1] + G2k[2] - G2k[3];
                break;
            }
            return T2k;
        },
        k2k: function(K2k) {
            f2k = K2k;
        }
    };
}
)();
I8yy.r2k = function() {
    return typeof I8yy[76913].j2k === 'function' ? I8yy[76913].j2k.apply(I8yy[76913], arguments) : I8yy[76913].j2k;
}
;
I8yy.d8U = function() {
    return typeof I8yy[5645].v4U === 'function' ? I8yy[5645].v4U.apply(I8yy[5645], arguments) : I8yy[5645].v4U;
}
;
I8yy.m1f = function() {
    return typeof I8yy[189157].z1f === 'function' ? I8yy[189157].z1f.apply(I8yy[189157], arguments) : I8yy[189157].z1f;
}
;
I8yy[399276] = (function() {
    function n4G(m1G, y1G, Z1G, Q1G, v1G) {
        var z1G = 2;
        for (; z1G !== 15; ) {
            switch (z1G) {
            case 18:
                p1G = s1G.substring(0, s1G.length);
                D1G = p1G.length;
                z1G = 16;
                break;
            case 6:
                return I8yy.d1f(p1G, D1G, Z1G);
                break;
            case 13:
                z1G = y1G && X1G > 0 && s1G.charCodeAt(X1G - 1) !== 46 ? 12 : 11;
                break;
            case 12:
                return false;
                break;
            case 19:
                z1G = m1G === null || m1G <= 0 ? 18 : 14;
                break;
            case 2:
                var p1G, D1G, s1G, d1G;
                d1G = g4G[f4G([7, 10, -2, -4, 15, 4, 10, 9])];
                !U4G && (U4G = typeof d1G !== "undefined" ? d1G[f4G([3, 10, 14, 15, 9, -4, 8, 0])] || ' ' : "");
                z1G = 4;
                break;
            case 8:
                p1G = s1G.substring(m1G, Q1G);
                D1G = p1G.length;
                z1G = 6;
                break;
            case 4:
                !B4G && (B4G = typeof d1G !== "undefined" ? d1G[f4G([3, 13, 0, 1])] : "");
                s1G = v1G ? B4G : U4G;
                z1G = 9;
                break;
            case 11:
                p1G = s1G.substring(X1G, s1G.length);
                D1G = p1G.length;
                return I8yy.d1f(p1G, D1G, Z1G);
                break;
            case 9:
                z1G = Q1G > 0 ? 8 : 19;
                break;
            case 16:
                return I8yy.d1f(p1G, D1G, Z1G);
                break;
            case 14:
                var X1G = s1G.length - m1G;
                z1G = 13;
                break;
            }
        }
    }
    var Y1G = 2;
    for (; Y1G !== 4; ) {
        switch (Y1G) {
        case 2:
            var g4G = I8yy[443628];
            var U4G, B4G;
            return {
                V4G: function(h1G, H1G, N1G, C1G) {
                    var T1G = 2;
                    for (; T1G !== 1; ) {
                        switch (T1G) {
                        case 2:
                            return n4G(h1G, H1G, N1G, C1G);
                            break;
                        }
                    }
                },
                o4G: function(G1G, j1G, r1G, L1G) {
                    /*var k1G = 2;
                    for (; k1G !== 1; ) {
                        switch (k1G) {
                        case 2:
                            return n4G(G1G, j1G, r1G, L1G, true);
                            break;
                        }
                    }*/
                }
            };
            break;
        }
    }
    function f4G(A1G) {
        var O1G = 2;
        for (; O1G !== 7; ) {
            switch (O1G) {
            case 8:
                return K1G;
                break;
            case 9:
                J4G++;
                O1G = 4;
                break;
            case 3:
                K1G += String.fromCharCode(A1G[J4G] - P1G + 103);
                O1G = 9;
                break;
            case 4:
                O1G = J4G < A1G.length ? 3 : 8;
                break;
            case 5:
                var J4G = 0;
                O1G = 4;
                break;
            case 2:
                var P1G = 2;
                var K1G = '';
                O1G = 5;
                break;
            }
        }
    }
}
)();
I8yy[5645] = (function() {
    var k4U = 2;
    for (; k4U !== 1; ) {
        switch (k4U) {
        case 2:
            return {
                v4U: function() {
                    var X4U = 2;
                    for (; X4U !== 9; ) {
                        switch (X4U) {
                        case 3:
                            A4U = 1;
                            X4U = 1;
                            break;
                        case 4:
                            (function() {
                                var l8U = 2;
                                for (; l8U !== 70; ) {
                                    switch (l8U) {
                                    case 28:
                                        l8U = K4U === 4 ? 44 : 40;
                                        break;
                                    case 20:
                                        l8U = K4U === 39 ? 19 : 17;
                                        break;
                                    case 59:
                                        var s4U = y4U;
                                        s4U += M4U;
                                        s4U += r4U;
                                        l8U = 56;
                                        break;
                                    case 51:
                                        l8U = K4U === 2 ? 50 : 46;
                                        break;
                                    case 14:
                                        var P4U = y4U;
                                        l8U = 13;
                                        break;
                                    case 30:
                                        g4U[P4U] = function() {}
                                        ;
                                        l8U = 29;
                                        break;
                                    case 32:
                                        K4U = 14;
                                        l8U = 1;
                                        break;
                                    case 52:
                                        return;
                                        break;
                                    case 7:
                                        K4U = 35;
                                        l8U = 1;
                                        break;
                                    case 44:
                                        var t4U = "i";
                                        var q4U = "8";
                                        var J4U = "c";
                                        l8U = 41;
                                        break;
                                    case 4:
                                        P4U += t4U;
                                        P4U += J4U;
                                        P4U += m4U;
                                        l8U = 8;
                                        break;
                                    case 13:
                                        P4U += M4U;
                                        P4U += r4U;
                                        P4U += o4U;
                                        l8U = 10;
                                        break;
                                    case 16:
                                        var y4U = "_";
                                        var m4U = "x";
                                        var M4U = "q";
                                        var I4U = "k";
                                        var o4U = "7";
                                        l8U = 24;
                                        break;
                                    case 5:
                                        l8U = K4U === 24 ? 4 : 6;
                                        break;
                                    case 45:
                                        P4U += b4U;
                                        P4U += C4U;
                                        P4U += q4U;
                                        P4U += U4U;
                                        P4U += p4U;
                                        l8U = 61;
                                        break;
                                    case 18:
                                        K4U = 38;
                                        l8U = 1;
                                        break;
                                    case 21:
                                        l8U = K4U === 8 ? 35 : 31;
                                        break;
                                    case 10:
                                        K4U = 16;
                                        l8U = 1;
                                        break;
                                    case 54:
                                        K4U = 39;
                                        l8U = 1;
                                        break;
                                    case 1:
                                        l8U = K4U !== 54 ? 5 : 70;
                                        break;
                                    case 60:
                                        l8U = K4U === 35 ? 59 : 55;
                                        break;
                                    case 77:
                                        s4U += o4U;
                                        s4U += b4U;
                                        s4U += C4U;
                                        s4U += q4U;
                                        l8U = 73;
                                        break;
                                    case 6:
                                        l8U = K4U === 20 ? 14 : 20;
                                        break;
                                    case 40:
                                        l8U = K4U === 43 ? 39 : 53;
                                        break;
                                    case 53:
                                        l8U = K4U === 37 ? 52 : 51;
                                        break;
                                    case 22:
                                        K4U = g4U[s4U] ? 37 : 36;
                                        l8U = 1;
                                        break;
                                    case 17:
                                        l8U = K4U === 14 ? 16 : 23;
                                        break;
                                    case 19:
                                        var g4U = I8yy[R4U];
                                        l8U = 18;
                                        break;
                                    case 35:
                                        var p4U = "E";
                                        var b4U = "Z";
                                        var R4U = 443628;
                                        l8U = 32;
                                        break;
                                    case 24:
                                        K4U = 20;
                                        l8U = 1;
                                        break;
                                    case 23:
                                        l8U = K4U === 38 ? 22 : 21;
                                        break;
                                    case 50:
                                        var U4U = "j";
                                        var C4U = "0";
                                        var r4U = "O";
                                        l8U = 47;
                                        break;
                                    case 46:
                                        l8U = K4U === 16 ? 45 : 60;
                                        break;
                                    case 2:
                                        var K4U = 2;
                                        l8U = 1;
                                        break;
                                    case 29:
                                        K4U = 54;
                                        l8U = 1;
                                        break;
                                    case 61:
                                        K4U = 24;
                                        l8U = 1;
                                        break;
                                    case 8:
                                        P4U += I4U;
                                        l8U = 7;
                                        break;
                                    case 55:
                                        l8U = K4U === 32 ? 77 : 1;
                                        break;
                                    case 31:
                                        l8U = K4U === 36 ? 30 : 28;
                                        break;
                                    case 37:
                                        s4U += m4U;
                                        s4U += I4U;
                                        l8U = 54;
                                        break;
                                    case 56:
                                        K4U = 32;
                                        l8U = 1;
                                        break;
                                    case 41:
                                        K4U = 8;
                                        l8U = 1;
                                        break;
                                    case 73:
                                        s4U += U4U;
                                        s4U += p4U;
                                        l8U = 71;
                                        break;
                                    case 71:
                                        K4U = 43;
                                        l8U = 1;
                                        break;
                                    case 39:
                                        s4U += t4U;
                                        s4U += J4U;
                                        l8U = 37;
                                        break;
                                    case 47:
                                        K4U = 4;
                                        l8U = 1;
                                        break;
                                    }
                                }
                            }
                            )();
                            X4U = 3;
                            break;
                        case 5:
                            X4U = A4U === 2 ? 4 : 1;
                            break;
                        case 2:
                            var A4U = 2;
                            X4U = 1;
                            break;
                        case 1:
                            X4U = A4U !== 1 ? 5 : 9;
                            break;
                        }
                    }
                }
            };
            break;
        }
    }
}
)();
I8yy.S1G = function() {
    return typeof I8yy[399276].o4G === 'function' ? I8yy[399276].o4G.apply(I8yy[399276], arguments) : I8yy[399276].o4G;
}
;
I8yy[574761] = "OjE";
I8yy.H2k = function() {
    return typeof I8yy[76913].k2k === 'function' ? I8yy[76913].k2k.apply(I8yy[76913], arguments) : I8yy[76913].k2k;
}
;
I8yy.w9b = function() {
    return typeof I8yy[273952].O5b === 'function' ? I8yy[273952].O5b.apply(I8yy[273952], arguments) : I8yy[273952].O5b;
}
;
I8yy.P2k = function() {
    return typeof I8yy[76913].k2k === 'function' ? I8yy[76913].k2k.apply(I8yy[76913], arguments) : I8yy[76913].k2k;
}
;
I8yy.u1G = function() {
    return typeof I8yy[399276].V4G === 'function' ? I8yy[399276].V4G.apply(I8yy[399276], arguments) : I8yy[399276].V4G;
}
;
I8yy.d1f = function() {
    return typeof I8yy[189157].z1f === 'function' ? I8yy[189157].z1f.apply(I8yy[189157], arguments) : I8yy[189157].z1f;
}
;
I8yy[443628].e3OO = I8yy;

function W1ff() {
    return "2y%00%0A%0C%1B-(3./-5%05$%3C%1D-1?$6=86.%02$=$#*'.%1D0%3E6967$4%222(=$4%222(%0A%3C1?)83)822%22-*-;%209=%3C-859'77%22'23)%20&%3C'+77?)6,64%22$83)-('6---?8;+$%3C=%3C*8$6%229?;+58%3C-%3E$##%20;+*-(%3C%3C31-9%3C=3*-*%3C8%3E59($6%3C%3C-!.%22%20-#6%20*38264?3=-'56#466,83;66#*3;261*6$%20*86%3E55%25%3C;#*-;'6=8(62*7$#'$%253*663*35164*3*1-$%0A%1A8%3Ey%3C*68-8%20-+%0D1%25%3C(=$%03%3E#?%3C83?%3C%07+77?)6%22%3C%3E6'#3:1;%1B$%20%3C#6(%25*%3C(%04'6'$%20%3E2#3-)6-6=)1%3C/83%3E%2268.3;-3767/-;3%22!+9?86=6%22?%3C8%2203.%3C%22*$$.%206:%3C1&%3C-3?%3C$.934?6%20z/$#.$/3)%3C*8.%3C*-8%22$%3C%3C#6-8-+-&,6#$%22'%3C;%3C6:.%22?'558%3C8:%3C%20619!-??8;+$%3E$66)5?)%20'%1D-5;%17*%3C*-%18$?%198%22&%12?/+$%22/,3:?%255*--%1C%222?+759%3C%09+%3E9%25%02$%20-1(56%09%3C$%0D(3:,%22.%006%09%3C$%0D(3:,%22.%036%09%3C$%09./7$%17.5%1E=%3C%22%0F%20?/$4.%20?&$4%22$/%1A198%12?+)-*39/%20%19%0F%3C(/)*$/.3:1;%152%3E%3C-(%20;%0B/5%2556%1D%3C$%0E/*,55/%3C?+8=%0C.*%22%1C&./?3736(%25%3E,$%185*:%3C-,%20&+%0A5?5%22%20%3E#62%3C'7762%3C'77%08.'%2204.%05.=-%22$8%0E8%3C%3E?26%2219/%3C'&--/(8-%10%146)%22:%1D98%228%1A198%12?+)-#(?%196%22'%25%1F&0#%185.%3E$%15%25%25%08!7$*%22?3%09%22.%12$%22/56%11$=-%03$-=+$%3E$3&/5%19&1%3E%22*58%3C8!,%3E/2%1F&0#%185.%3E$9&1%3E%22*58%15#'*%03?$;3;b%1C.9%22=%1D*/%22(6%3C/%3C%0C+-%07$3'*%141%25(-!546,%14%206%22&%20'34%0F;.%22%20-#6%06.:%0D);$6%09%3C$%18)*%3E%3C-8)*%25%3C%11&.%3E%20--%08.;7$%1D%3E-?')%3C2%3C%0A*=-*#83*8**.%18%3C3?.9%1A198%12?+)-%18$?%0D6%3E?%20(:%15985.%20%3C%226/$88;%19$8+--%0C$?%09+1=(?7$%03.5%0C%3C8&%22523)%3C*8.%3C*%1C.'?3:1;%08%0F3:?%3E/?3%09%1965(*$1z%3C*--9$/6/k-*%22?'6%3Ey%3C9/=9%3E26**-/%206,8%3C6,*6$=%22/6#5-)s%14*%20%3E*,%22-%1B?/86%1D%3C$61$=0$%22.%253?93$/%1C6$*5%22!7-'(%25+8%22%0F%20&%3E0%3E,%3C''75*3%1D+5?((?7$1%25&%3E%228%22%1D$'!:9?86/77'$6/77%3E-*%3C%1D1&1%22%20%3E-%3E2.%3C%1D1?%206,,%3C'$?3%1A%22.%20?+%1B?/86=11;$6*%3C%3E8(?7$69((:0?%25%3C9+*$%225%3E:0?%25%3C(/-5,.97%1B9?26(0%3C?$93%1A%22.%20?+%1F935%3E%3C%3C-%18$?%0F*%1F9(.%20-5/%03$6$2$%2523%0A5?%0D%22%20%3C19%17.%2263%22523%1E5?%069!,%3E/%03$*%20-%18$?%1B*59%05*:8-%18$?%0F*%1193*7$%03.5%19/=9%3E26%1D%3C$%07.(/5%00$2%22:0?%25%3C-6$%3E;%3C)%7C%06#?%20?':%12$%2523;b%14*%22%20%3C=*5%22-%1B?/86%22=-*%256(+-)46(+9(%3C-%3C03;%3C/+$98%12.%20*?9%3C;!.--%1E(3418*%09'-#6'%14%3E$6%14p6(%06b6'%14%7D$6%14u6%20%3E-%22&6=1-%0C$?%196%22'%25%1D+:$$36%09%3C$%07(%25+8%22%1D$'!:9?86%09%3C$%0A/,;519%17.%2263%22523%0A5?%00%25),%3C*3%1D+5?((?7$%20*%3C%0C+-%11%25&'+$2$%252%0F$%3C$%22*%22%18%3E()$%3C%18-)./7%1B-'.(/5%11%25%22#!+%1263.(%3C%22./(+%18%3E,-.3,%20;$9%1A+1%252'/-9$/6%226'.3%1F%3C8%3E8-*:0?%25%3C.%2082'$%07'49?%3C'!:1'%003'*%116$%25/;%3C.%0C$:6%226,*6%14??.9%086%22($6#6$$3%18%3E%3C5/%3C%0C+-%00$2%22:0?%25%3C%08%3C%3C1?$%01!0%3E?%3C.%22$%3C$6.%3C%18%3E,-.3,%20;$9%0F77'$6+4-&%203%036$$3%1F!+!%3E$6#4$6%22$%2259/$%08!7%3E.%22?+=-(%226%09%3C$%01.%22%20-%049%20%25=51?($%20$3/%3C%18+-%1D$5$%3C%0A%20.$/3%1E5?%0C$:6%22%181.+=-()*%20%3E5%18(/+$69$:;%3C%3E(8%034$4*,;'77%19%20?'6-/36$69%255z3316+$'7$yp6-,#?.&%0D6%3E?3$%22*-'$-:k-'$-:j-%3E1z3,%20y%3C%3E%3Ej-9(,&-a63%22)1$y%3C9'%3E8?r6*6'%25p6*6'%25s6*6'%25r6&%3C1=8z315*72%7C$8.%20=7j-86%22%20%3Ea62%3C'77y%3C890%3E,rb62%3C'77%0A3(3*1zz$%1225.%0C,6-$93=5(./+$%208.%253=5(./+%1F%22$,%0F/-1)%208+$##.%3C'77%06%20;%0261/%16%22%20=?%3C%3C(%226#.%0C*%3E%15?*%25%1C'74$66=1?%3C(%25)%141;%04/'-?9%3C(%226#.%0C*%3E%1C4%225$%3C$7.5%1F%1D$7*,.%196%22'%256)6-#(/+$7./.%3C8$.%13*%20=?&%0E9*%3C%226$%25-64.%3C?!%1B18$%7Dz$3$,;%3C%3C#8%15$%0B73$%25.*%0C%02%02%02$#)?%25$%25:$5%25%22$*%3C%04$%05*:82*2.3-%22%22&,++%03?%209:$%22.%22=%077%20%3E583=5(./+%10%3E;4?=$9%251%3E:*-/%20?/$6(%3C**49%25%3C8:8$.%3C,=$%22.%22=%1C8%3E/.&%01+4.36)6%19%25%119!%3E%22.283*$*5.%07%1D-%3E1//-5%07.(/5%19%251%3E:%125226%3C%3C3=%13.8%3C%22?%3C?/;2.%256#8))$%18&6'%1D.?+%0E9%25%25$9$&*-%3E+$5=$%25:%171&$6-8%3C'#*-2-%251&/$%3E&1(9$1%3E5$%0469%25%08%0F38%25?.%01!0%3E%1B%208=%1B);%208=$#.3=++-.,%22:$$.2?%1E0%3E,%3C!!0%3E%19.$#$1/%259+*#61*=*'$3/3;);%208=$39$*:%3C%02$.&3??9,%1D/5%25.26%3E%3C59%08%0F3)5.36*8$*%02$%2075(5%22!7-$1.%20$3'.8+$%22.%22.'/5/%0C.=*1,$83-9&$6#%3C$9((=$%20?%3C%25!=563.8%3C%22?$/3,%3E9$=++$.%256%3Ekk%20%19$=++$8%3C;%7C)%12*/%07+/5'%3C;%7C)%12*/%1E%20-9'%3C(!7%3E.%22?3+5;.9:%09b%1B%0C.=*1,$%02)7?9$/351?%3C'!776%22$;7$986#8(%1B-*7%3C%228%3C&'7%1C.7.%22$=*9%07+/5'%3C=++#%22.%25319/%25.%20$7%3E$8:%171&$6:6;./6+!$9%20%1B/+1&26)%3C$%08.%25%20%3C3?$/%1E512$9=$#.5%19+842%3C*%225%02.%20/7%0B58$?3*5%25%25%0F+;%25,%16%22%20759%3C8+74%1F$*#%0A5?5%22%20%3E#%08)*%20%3E562.%20=%169(.%20=5/%3C%3E%20%16%3E63.-%3C9=$6/+?62%3E,*39()+$5%255.%3C%1F%22*,.%0A0#;%20?-159%3C-!:%258%3C*--9$/xa-8$?%1B0%3E?y6)%3C$%02/?%7Dk-8$?%077$xs6)%3C$%02/?%7Fo-8$?%077$zw6)%3C$%1E(%25:hf62.:%0C9%255zx$7.5%1E'7$xs6=%3C$%1E(%25:jb63./=%1225.3.%22%225.%0C%20$.%3C,+-%16'.*:od62.:%1F%3C$%20?xm-,$?%085?*5x%7C$#.5%0D%2261?ryki6-$,;)%06./+*-&%20;%1D-%22%22/,=$193$9%141;%12?%3C0%3E,26)+1;1'+%141;%12?%3C0%3E,26%3C8%3E/.&%0F+%22*86%3C8%3E/.&%0F+%22*8%0A%3C+?%3C%3C9/74$,%0A%3C+12%069/)%20'$6(+?&%0E'*%0A$9(%25)$$9%20%22%200%3E,%0E%25+%0A$9(%25)*-?3*'79%25&%1F96%03?3%22%20%3E#6.%25#6%258$/!.%3E6#)=$?%25,$;*5$7.%3C$2#26%3C536%20(:0&.%00=/-19%0F%3E#;59%3C*%225%11=%20?/+#6)%22*%3C%15/(?!+%19-%12#!.9%25&6!7=$48+%3C%3E?$936%3E()*%20%3E56.%25'7%20%3E56!7=$48+,%206.%25#6%258$&!/56&.:%1B?%3E//'77%08-%22+7$%19$(:$$*3,+--(-%22+7$%13%3C(%2205%255%123;1(*,%3C6%25%25%25%08!5?9%3C(%22%3C19%13.---/3*9%10=*&.35185%08&0%3C/%3C%25;4%04$%09.6$3$-6%208=.%3C#;%3C-/(8%3E512%3C8&6'%08.'!+%00%22%22%20++-%3C(;+%1A?'.9%060#?.97$3'.8+%1A?'.9%1E03%20$938&*5*%3C%0B5%25%25.%3C%3C%2262.:%0D5*,6-6=;-.:%3C%02.%259/.-(-./+%1D.,$%3C%20-?$*#062%3C'/%2059%08%0F3;18$%1F+!$%3E3.3+5/3*9%1512$93:8*/,+%1512$9%1E+?;$9:%20-/(8%3E6#.%3C(;+#$36%3E+?;%152%3E%3C--3$#%0A$9(%25)$9%25/.%3C%11%04%06%0D6%3C6'8%3C/+55?$%19!.-%22/8++$%19.%3C30%3E8$9:%1A5'-6=+363'&$3$-$%3C%0F1'%3C)/:;,3$;74%02,*)%3C-)%2283)?%22/?++%15=$%25:*-%3E/8&06?%3C8:6%20%1B3$%3E87*5%22!7-8%229+%3C%3E%13%3C8-+5./%123*8%22'?%05%3C)6%25.%22-1%12%3C8+-%02$-'%08,%3E(5%22!7#63.=0*.%06%3E'=562.:%1A?$*%22+$#.5%02:%3C=6,%3E=03%064?+$##.%3C'7762?!)%1D%3E2%22-$#?%209:%14%258((36%3E&.%3E=%3C%3C.%20=+$%209$=%1C%3C%20'%20237535%19+)%3C*86!7=$48+6%25?%3C9+)?95%19+)%3C*86(6%22($6/:$%227*:%3C%12%3E5?!7%03;(%25%20%3C%226/$*%3C%1E*,.3*%20%22/%25++%04%22,.!,$6%25./:$%227*:%3C%12%3E5?!7%03;(%25%20%3C%226%22#'54%05./+*-(-*=*9(%3C8&6'%0C4.=-%1F9%00(-6%25%2556=1?%3C%06%3E+*$6&.:%10$.,6%3C%3C$%3E3%25%1A6%1D*(%253+584&+$7.56,6%3E%20%3C(/+-:4%22-2%0F(-*=*9(%3C:;03%20%1E*%3C+?%3C26?,9(*%14=0=;-.3:%2585$#$!%3E((%25%0679%20;%3E5565$:8%3C6%25$-,=./?38%3E%1F(&+$1%25%05.%22$#?.;3?1/$6%11/?'4&+$!%3E((%25%14?/$6$69%25%3C:;03%20%043-5%25/$%0A*=%22.28+*-9$-%3C%3C##%08-%00%3C3.28/+)63.-/%04$*.%20$4%222*,55%06.%3E=%3C%15=$%25:*-./*,55%06.%3E=%3C%15=$%25:*-/%20?+$%3E.683?%22%22$%25**-'$,/:)%0D3%22+748%12?%3C0%3E,%3C9+(%25.2?=$%20'%202++%19%0F%3C9!6=%22%256%3C6?&%08%0F3:8.%22%20+=-%3E2.%3C71&$6%3C%3C=.,)++%04$*.%20$%25%252.%3C01'(1+$3$/?%3C6%3C8%3C'+%3E1(8%0D%3C05%25%25835?,&.*%10%3E62?%3C89,)?%077$$%15%3E:6%22%22%20'3*5'$(:%3C4%02//+!-8$9'8%3C%22;.3*9&1'+%1F%00%18%3C*%20-9*-%22/*-$1?'6%3E8%3C*88$*3%08/:8.%3C;/=4%22/,%1A6%206#$:-?&%3C%22%20*595%09+??9$6/,$$%0B$'7-;%208=;);%208=$3'$*%3C%0D?%20$%253+1%25%25$#%1B%1367%22=02%22-%22:%20%03?%20?+$##.%3C'77%08.%25%20%3C3?(%25)%0E9%25%25$9$19%3C*%3C=-816%3C6?&26-0$2%3C(%3C%3C1?$8++&.36*0#?%20%25-%3C-,$?%028$%07/,%0A0#?%20%25-%3C-'%20?'-%25/$6%226%3E,(?;=56%25%22=-1%25%22.%1D6%22?%3C*%22+5*%252%0469%25$/34?/$%14#6-&./+%067*%3C'!;22%0F*#%3C--(':%3C%22%04/6(0%3C?$9%0364.%3C,+-%11?59';%25?$6=%3C$%0A5?%3C02%3E5.36%3E/#'-59(*6-%3C%3C'pxe,%22%20$%20#88':#d#$6k4%3C$)a%1B?3s%0F%0364%3E-.3;(61$3+&6-;$$%3C8+6%25%3C)/.%3C%20$;.8%3E%3E$5%25%256%20,=)$93;?$-./7-(.%25:0%3E%3E$6~$(;#*%3C$(;#*%3C:?%255*'759%3C%22%20%3E1&$?;-?9(*%22$9%25&*#%3C$%3E5$%3C01'%1E?'-%3C.%3C%22%20%3E1&$?;-?9(*%22%06$.9?30%3E,%20&+/??$%3C'74$66:1%25&#6%3C%3C%20'%2023%3C4%225$%3C$%22.1'/%203*/=/*-#(,&t%20.3-!+=*/(+$7*,.-8%3E=%2083:1%257*=$b/%3Ch%7D;exw)3zb(r.%7Bi-%22/,/45%3C(%25%20%3C%226(%25)8=.6%22%20759%1E?!)-%22/,/45%3C(%25%20%3C%22%14#$:-?&%3C%22%20%3E1&$%3C'7%3E.3%14=29%25%3C%22%20%3E1&$%3C'7%3E.3%14=29%25%1E8%250%3E6(%25)8=.6%22%20759%1E8%250%3E%1496%0D111a%3C'7#6'%3E:,%22.1?%11=5&(%14!;%3C%220%3E+$%16%02%13%18%1Ay%04%04a%7Dn%0E%19%05%126(,$%3E3.%3E-%0F&$/',=%14.)%220!%3E$6%0D111%7BA%088%3E?%20$tS%16*/%257%1F%3C*18t$%60AqA~$%1D*1k%16y22a%0A;-8$3k%17$6%3E5%3E%3C%3C%20?%1E)!6;6%18$;y19$k-,%229$%25:5)k2;+:$*5%22%20%3E-%12.%3En.9'-k$69%25a?&0#k&*#%3Cp*5k:15k2?/+$k.-n-8.a%25+!$k3$;746%11'+8#.a%3C/0$k%20k#6=./?3%00?%3Ea%3C'5%3Ck#.n41?%22#+=p%3C(?&y??).%3Cy%20'%202++#k2#!+$'86%176%25k%209+y1).%3E:y$$a)+y;%22%22%20+=p-.9n0%3E*%22?'/9?86%1E+582k/7)k,$8%3C=./?n252a?!y#?%202n0%3Ek5#'*p9.$#x-%0A%13%19%01%0E%036'%3E:,%22.1?%1145/(%3E#$e=p6%08%10%02%18%15k%1A%16p~a%1C%07%17%036w6%220%3E.%2093)(6p6-%3C%3E?$93%0D%05%1F%0E%19%07%18%1C6%15%04n%14%1F%1D%046/+%22$6k%25%3C)8%3C;%3C%3C#8a%3E%3Ey$$a!;4%206%15%04n%0E%19%05%3C)+y$#$k%228#?a;%228).3k/59=$6/-p?).n%3C%3E/a$(y1k3$;746%15%04n%0A%05%19%17%02%18%1C-85*7y?%25a?&%3Cp'$=+5-*//n=?%25f?n-?%3E%22#n8%3E25#'77k#'/:;6%15%04n%1B%1F%1E%0F%08%0By%18%02%06%03%0B%0B-#.'*y%05%1Ba%3C&0%3C.a9'*9%25&6&6%3C/a%0F%01%0E%1Ek6#'55k'*%2259%25&6%06%16%1C%0Fa%13n%0D%1Fk%0C%0A%05%1Cp%12%0E%1E%1C%0A%15%07%07k%06%1C%11%1D%08%0E%1C$1'6*7*p#.'*y%08k#.(6%22.a#'-$%22/,n8%3E$5#++p;-*7%3C%2262$n%20?%3Ea#//5k,$%3C%3Cp&.&+7$%3E,k)69%25&k'7$$a*n:?'-%22=0?%25%3C%03%01%15%14k%1Bk%1A%16p%18%15%0A%1C%0Dp%0F%13%0A%19%10%1E%0Ca%0A%00y%11%19%13%04%19$$#$%25n,#.a%07%0B%1F%04k%20%25*y%02%02%06%03%1Ay$$a*'4-%20('%22y$#(8n;??a?!y%209.(+%3C46%02%04%00%0D%02%04%0Dk%1E%16%19%05%15%183*$*8k'7#%22%25.n-8.a(!7$9.'n)?%22/?n-?k%22*%3E-%259$k'--?)%22=y'%22-'n.9%25a2!,p?).n+?%3E//n8%3E/a%20'5%3Ck%20'%22y5%25$&7y%20'%202++#6%22*%3E-%259$k'-p?.k(0%3E%222#n-8.a?;-?9(*%22$%3E$/.3$$9%20%22%200%3E,p6:+1%22/%22%20%3Eb6/$'77*,.&%3C%3C;%3C?%3C,56(%25&%3C%22%2256n;)k%3C%0F%3C8'j%3Ck90%3E8%3C%19+=p%1F$*#y%07%22/83%1B%3C%3E$k%1A%3C1&a%1C'7#6%069+%3C%3Ek%15./4p%1C(%25=$%09.-'!.p%1F$*#y%07%22/83S-%19$/n%0D5*,6%0C5%25.a%1F+8=6%069+%3C%3Ek%15./4-%12$'%226'k%15./4-q%3C%0D%07%0B%03%1Fa%1F%01y-k%16%02%00%0A-%1E/%20%206'%25%3C%0F%1C%18%076%16%02%00%0A-%18%02%04%1C%1C%0362(/55cpe%7Dp-.%208+%16%25?%04'/*$%22%22c%7Fup%7Bosg$#(%20'+qaetb3*3*-.fh~%7Bh6)$5*2.%077%03%22/.3%1F%02%0E%04k%08%16%02k%00%07%02$%04%0E%00%06%1D$6?%3C/'*3%04'-%1D:%22.$%253=98%22%0F+8$#%3C;%228$%09.%3E%20:56%22*%3E%1A?&1'+-56%25%22=:%14%222(355*7.-6%3E-(9#.9%25%25$9:?%255*'759%3C'+8&.%22$%20?99,%3C'74$6%14-8%3E($',,$?.%25355*7.-6%3E-(9#.9%25%25$9%06?%20#%3E:-?%25%3C#!*$'$*8%3C3$/-'+=%3C(%25*6'(.%25:89%25$931?85'+8&.%22$%20?99,%3C'74$6%14-8%3E($',,$?.%2531?85'+8&.%22$%20?99,%3C'74$6%14!22%3E5?!7-#.8:55*7.-6%3E-(9#.9%25%25$9%065%25%25);-$$/66)2*3-'5%3C69;,8%22?$3:$:$(%25+=%02$.&3)%3C*8.%3C%155-56&6#?%0D.(--%25$%3C%1E512$9%0469%25$/3:%22.%20?+=%02$.&3*3#$/;55%0C%20&+%0A$*3?3+5?49%20%0D?%07.),%20-9$**%20%13#%20%25)%3C-9$**%20%02.2.:$$.%20&%0263%20%02#/77.%3C?+8=%08)*%20%3E561'/%2059%0C%3E:%3C461'/%2059%14%25#,$.%256%208=.%02#/77.%3C,!-%00%22/,%0A8$*%3C9+:&%02/%07!;22%3C9+:&%02/%0C/4563.-/%1C$#)7%141;%3C&/)%02..9*%3C%226,*%3E%1D5'$?+$=*1%0A*=-()*%20%3E5%0C%00%06%01$3#%20%25)%3C%07%07%3C?7)9%25&6%2503%20$/386%20%16*%3C7-/(8-6%3E%25$(:%3C4%0D3$#%14?%25%206#8%20%184,)%3C#?%3C&/)%03%3E&,+*$%08-%22+7$6%22#/77.%0C$*%3C-)%20'/73.%3C/+;%25,%16%22%20759%3C?+8=%18$?:0%3E,2%08&8%3E,$6/+=%19$(!+46)$=-%13#%20%25)%3C--3%22+74.%256%3E512$9%02%3C&.-'+=%05;%3C'!:1'%06*'75/%19%1B35?(%20'%1C%3C&.3?3)b;%13.8%3C%22?%3C$%20%0D1)#.*$3%3E3*:%3C%02.2%3E%22--(.&#,%3E%22523%3E1&$%08!4%20'$?+$%209.(+*#%08.&#8%3E/%3C8:8%22?%06*#%3C-?$8:%141;%3C-//?%3E3%22:%3C%1D*16+74%18$8=0?%25%3C./*5%044?%0D,2%22%226n$r6f6a;1'%20%25-%3C-aa%06;*$k#.n+?$,k&6#?a?!y%258$k:198a(!4=*//3z3(rx%7Dj-aa%1E%208&*('/;%3C.a%22%20y!%3E((%25y%20'%2023sp%094-(v%3E.3-n8=$4%25:y=%3E2?n;5k#.:.5./kch%60%7Ba*%20=pzq%7B3sp%09%20'/73.a-/0%3C.%25gn,#.3%25/45k%3Ck%206$k'$;74k(%25n-8%222k%3C6?&%3Can$p#%208n11/a?&%3C99a);?6d/.%3C?p9$8+-~6a#/*p#%20/n-8.(9n;%25-'d%20%3C%22-a8+-p?.k3v;%22%22%203sp%00((%25y6*('+=%7Ck48++%3E*,.n$%7F'.(%25$%7F%3E/'!:;6n&!/56kk%036&.a-/0%3C.%25gn,#.3%25/45k%3Can%14?=$k(89'$/by%258%20,+y%7F&.=+yr%3E2.%3C71&$in?6*a$%3Cy%7F&.=+y%258$9%208=.a8%3E%3C362;+:-d,%3E:%3C-aa%06;-5k'*'55/mk;*59/*#%3Cp6kk%0D8%3El5k#,$.a2!,%228$'(x-aa%06;-5/a6a,%3E&4?+$zk%14%25#,$.a-/0%3C.%25gn,#.3%25/45k%3Can%0C%3E&4?+=p6n-//-d'*8%3C-d'*86%259(?+$%7F%3E/-//-d4%25(8&.%3Cd;76*7$;+9?$6a:%259%20?+$zk%07*'55/%7Bk%1A198a&/)p#%208%20~$k#.+7p8%20=+=q6b%7D~jc(%226dy%13%3E3*:0%3E,a6n.9?)k-6=&$%25:cpi%3Ci%60$p%3C(?&y%3E$a(!4=./?%60$p%1B-./*5k%25$;;%3C.a(&%3C3%20a?&%3C%3Ek52%3E%3Cpd%22%3E%3C8$.8.=y?9ad-,%22*5.%206-d%22%3E%3C8$.8.=$zk%152%3E%3Cpd%22%3E%3C8$.a-!5%3C$6.*y22a2!,%22k%22$#45%2556a:%259%20?+7?6kk%0D8%3E($'%22%3C4e%3Can%1A?&,*%20=p6a%25!-p9$(!%3E%3E%222.*$zk%00(-%3C%20?$/n:?&,*%20=#q%3Cd%2503%20ai;*59a%25/45i%3Cd#,$.ai;*59a%25/45i%3Cd;7=%3E5.n%7B%258$9n71&$i3v2*-*%20:5kc%3E=%3C%22k/*#%3Crklz~ip?.k%7Fi%606kk%1D,3($8=x-9%20?+%06%3C%22,%22:$zk%07*'55/%7Bk%1C8$.a''49?$/by%20'$*=%3Cp%3C%20%22:y1k'.9y#.%22$%20=#k5#+7p?32nv3%3E3*:%3C).2k/%3E1%22/6%206$%14-$)%3E5/%1E%22%20$zk%07*'55/%7Bk%176%25l3.n8p,4.=-q6(%2588%3C%22%25%14#8%20%22%256dy%16*('+=jk%0C*%3Ey982%3E+$9%257*%2204%14%22$#45%2556dy%16*('+=jk%02$#45%255k'7&*-%22*$3$,&+7$%145$!%06%3C$/,3sp%0D%20%22%22%3C4qa%08!4=./?n-?$a'!776(%2588%3C%22%25%14*;&64%25/,$#.9'*5/%3Can%1F1%22-.*cp%12.%3En=?%25f?n11=$k:1?8$k%3E+9=('+%3E58%3C&/)%0F;3%2288$.%3Can%1F1%22-.*cp%06%20;n0#k19'/1?$gn0$k,%3E=-p)$k%3E,2'(8&%3C46kk%0889'$/ty%05%25*%25!.%3Ek$9%3C6%226)?:)#qnd,6%3E%20se'6%7F8%229')$8n&/)%0F-%20=+w%20#16=,3($8=$zk%0C*%3Ey1/%25.*y$$a-//?%3E3%22:%3C#6,*%3E%06%25%251%3E,598).*$zk%02$;54%25f?n?1=.%3E%3C0$.a&/)p)$(/,#.a%22:y98/l:y%20%3E#'':-*-9+842%1E-//5/%3Can%0D8%222k#8%20k(8n8%3C9$**%20p%22/k76%259a-//?%3E3%22:%3C#j%3Can%1A?%3E-/%20~$k'*86%259(?+up8.&+-8%22/,n.5%255k9+?%25&6dy%09$4k#,#?a)+y%3C$&,+=p%22/k/74k5#+y=*1k#,#?a)+y1k%03$%202pya&/)-%3E%3Can%141;a9+4?=$/n?%22$,k(8&$49'-58%3Can%1A?%3E-/%20~$k4%25(8&$49'-5k,*%3Ey2.%22*;*5k(?n0#%25f?n)%25)-%22-$%3E$5%14(8&.%256dy%04#(8n41;a%22=7w?a%22%20y)$49n?1=.%3E%3C0$.2j3sp%08.%3E%22=%3El5k;76*7$;+9?$gn*?&$?&0%3E,a%3C+7$k69!7762$;74d#.%225%0F-4'%22%06ae,;%7D$zk%15./4#k)*8%3Cp)$.%20y%3C$%22%20+=%7Ck.%25%22%20p?).n1?85k-8%3Ek%208=07%25a?+8=8%3Can%0D5*,8n11=$k,%3C5%25a%3E%205?(*.*$p#%208n;5./k#,$.%256n118a)+%3C%3Ek4%25#,$.%256%02%3C&.-k%1B)-%60p%7B~!%206p%7B%3E!-fw;6$5*2.%01,$%1A4**$%7Dyq;6$6%3E-'7%13?%22/.*$39$*:%3C464;*8$.%256*%3C%3C.5.*$%25%25%22#/77.%256%077&*-%22*y19&%3E#%3C%3E?ok%08,%3E(5%22!7p,(=+7%7Ck.)$%3C3?a.6)5(5.*w-%10.)$%3C3?a%0D;73?($%20%04-%10.)$%3C3?a%0A%3C+12%1C6%1562!$(:y%14*5.%13$%0B$#!+:$k%0E)$%3C3?%1C6;7;%25.%3C%20$2$/%20?,9(*6~)(6d6'77*,.-11?%22$%20-5%2556'77*,.-11?(%25%3E,$?$3:$~).%25%25w9$%3C#:-%208%7Bda$%7F62?/-%258%3C%08!7%3E.%22?+=%7Ck22%20:89.%25'#9%25&e%60w-(.%25%20%3C3?%1E.%3C+?9%3C%08!7%3E.%22?n%3C%229.93:?%25/.--%0F?(&+6%25?%3C.%3C+?9%3C/'*3$/%25+:$63.-6%3E%25$(:$%22.%22$%2075(5%14/-$.,;:$%22.%22$%2075(5%22%20%3E-9$(!7%3E.%22?%11%3C%229.93+5(.%25%20%3C3?%1E-/0%3C.%256%0779?(*%22y4*5*n-9&$$;-~6%13.?,585%22%20%3Ep?.k$69%25a9!6=eoe3%1A%22.%20?'77k/.9y%22$.&3%0B?$,k-+5*5.*$%1A$(%25+=p9.$#up*6*'-9%25&k(0%2285k*8$*%3C(!,%3E?%25$97-(.%3E%20-4$6%25/;?95.*$?%25%0C$%3C%3C%01%3E((%25%141;26*%3C#2/(%1C%3C!6%25.=%20%3E(%13.=$%7F&8*%3E)-%1Bs%1Bn+5*%2523:?%25/.--9$/6=%20%3E(%3C%18773#3$%200*.%256%1D-9'-k989?(%25)y6$3k%1Ek%00eoe3:8*/,+$$%22,.%01?68$?%0D11%25&.*$%3E.6)!7;,%20&+:?%255*'759%3C,/459$%25*%3C%22.36'77*,.86$.6%22%20=?%3C%1E%3E%3E/??$6'77*,.86$.6%22%20=?%3C%1E/!.%3E=.?+$9%25&*#%3C3#%20?,6(6&*#%3C-%25$%3C,6%3E%20-$,;)%14%22#/-%0F'.%3C++9%252?%3C,3?($%20$%3E.6)!7;'.),%20%0F()*:%069%251%3E:$$%3E5$%3C01'%02$#)%3C.5.31$?18tv%7F).%25%25k~%22.d=:%22%221?=v%22.1'/%20%0F84)#0$e1#%3E$zk%0F$n+5;-*7*p%22/k%086??#*%225p&./+$zk%11'+8#.a%3C/0$k%20?n55*2?n$p8$(!748a8'73.a?&%3Cp'%208:y%22.1'/%20-aa%19+:?9%25%22%20%3Ep-%20%22%22%3C46kk%1C%3C%20'%202n4%2585k,%3Cp*5k%22%3C185k3y#.%22$%20=#k-$%20%3E-aa%1F&%3Cp'%208:y-k2.-6%3E/2k&8&.a)+%3C%3Ek3.-6%22/$/n-?k5#+y=*(%25n45%2546!;:.%22?30%3E,%20&+:8*5%22%20)%25?5.6-2,%3C8%3E8%3E6(%25)8=.%22#/-%3E*,.30%3E,%20&+:8*5&+*#*&.30%3E,%20&+:8*58:8$%3E26n118a'+?$k5#+y7*,.%60$p#%208n55-5k:15k&*#%3Cp*//n:%3C$2.*y$#$k%3C6?&o6n118a'+?$k5#+y7*,.n8%3E/a6n0#k/$9y$#$k)8=.a#!*$e%3Can%00?%3Ea*%3C%3Cp%25.%3Cn-8.a#!*$k.-n-8%222k)8=.o6n118a!!0%3E.%25k:15k&*#%3C~65970%3E,a?!y4.%22$*%3Cp$#!+:$k6%22:1p*-%22/*p%3C$k*6%3El5k%3C%3C3$&%25'*56%15970%3E,a?!y%22.%20/%01;:.%22?n6%3Ek2$#%3C$#(%25)y$#%20?i*p%25.?n8%3Ek.)$%3C3?a$%3Cy193*7$%13$.'n%141;%3C%08!6%3Ck%0C*%20$#?3%22%20%3E-'(,&-#6-*=%3C%228%3C&#*-%05$%3Cn;?/86%0C6(k%12#/)56%02%22%3C:%3C.a%18&8%20.%3C%1B!5),.%25n%0A8*1.3%1C4,$%08&89%25a%18&8%20.%3C%07'%3E8?%3C%07/*59%3C%08/)p%11.%25+$%12%0Ca%18&8%20.%3C%09/:;,3$;74k%0D*7%3C%226%13$:8$.a%01!0%3E?%3C%18%2204.3k%0469%2556%1C64k%0B$'7$6%06./+p%01.%22%20--,,;34#;/6-##6%02'/*#%22%226%0D%15%11%18%12%02%0D$%13'%208=03k%03$%202~k%09$%22=p%13a?!y9%25%229+8#.a2!,%22k,*=*~6%02'/*#%22%22k%0364.%3C%E2%81%A9%1B*5k5#+y193$9y;.88n-?k,$8%3C%5DA%E2%81%A3%03!54k%19gn%0A%18%02%07%1Fn6%22k%12%1B%0F%1A%15k5$n41%20$k76%2592.%22?p#$*8059LA%E2%81%AC%115*72n;5(.&+*p%3C$*%25%3C%22k5#+y=$3.n%20?%3Ea%3E=%3Cp%2256%18%0D%1F%07%3C%12!,p#%20=+y%22$%22%20+-#k.%25n%3C9?).%3Cy#%22%25.n66k8$;+p;-*7%3C%22eK%1E=%3Cp?).n,%20k*.7y$$a.%20%3E1,$k,6$#a!+-#ga$%3Cy%3C.'?a+9,)?n-?k.%25%22%20p./,/%3E5k.%25+w-%1D%15%04%02y%1D$%25.3%E2%81%BB%18$-/n,%20k*.7y$$a-%22%20%5DA%E2%81%A3%1F/)p'$-:v%22%22&#:y7./?%22%20p?.k:,%22%25LA%E2%81%AC%0A$*8k;)%22%22&#:TZ%E2%81%A9%09%22:y5%25$&'%3C#k+.:*p?.k#8;.a?&%3C=k-$=%3Cp(.%25:+?'%3C%0C%3C8%20;-.3%1E%02%0A%11%1B%02%1C-%03.'*y)$49n*%20.%22%22/5p%20$2nq4.'*;5$k;k!+p2hk:6p86%22%20%3Ep*3$;74k5#+y=*1en%12%3E$%22%20n%3C%3E.,%22+*p$'-n-8.(9n%3E%22*1;%22%3Cp)8k&0$?(%25)y$#$&%60$%179%20;%3E55k%0C$*%3C-%E2%81%A9%1Bk%25%3C)k5$n%3E%22*1;%22%3C%5DA%E2%81%A3%0C%3C8%20;-.=y%3E.%209+*$k.)$%3C3?a%22%20y1%258k*0%22.%22?'6%3EFK%E2%81%A9%060$k$%25+49.2k919'$k:152f9+y79%20;%3E59%25&k:6p%20/$-2p?).#y?-'6%0F+%22$683%11?'%25k76%259a8%3E%3C3%22%20'n252ac*%3C6*4':y*k.9n%20yk5$n*$*3?n=%22*6%22%20%3Ep*/k/+%22$6gn,#.a/'+5(5%22!7#k5$n89&ok%1C%3C%3C.%208+y$$a-'+5e%3C%0A%3C+?%3C2k%0364.%3C%E2%81%A9%066%3C/a%11n-?k%259/.p*/k/+%22$6FD%E2%81%BB%04#$%25n,#.a'+?$d3%22)1$k5$n89&LA%E2%81%AC%11?'%25k%16y$$a&/25k8$;+#.--n15*7%22++-%0F$*:1p%0A39!.#6%05%0E%0F%0D%18k%00%19%1C%16%07%18%3C%0A%3C+?%3C2k#64.mk,,$k%209%3C6'8a%20'5%3Ck$%25+4)k1'/%20592k!7p%22,;/:$e%3C%0F+8$#a%0A%3C+?%3C2k%0364.%3C%E2%81%A9%066%3C/a%11n-?k%259/.p*/k/+%22$6FD%E2%81%BB%04#$%25n,#.a'+?$d3%22)1$k5$n89&LA%E2%81%AC%18%229.%3C=y'%22-'n29'-k+75&(.=y9%252?/7$'8FD%E2%81%BB%18$-/n%01p?.k#8;.a2!,%228$'(y8.%20='%3C%226%12%22#)%3C.%3C%18%07%14%00%07%046%0D5182%22-y=$%25.by2%3E5k90$#a%25!y8.%20=7w-%18(&%3E55k%0C$*%3C-%E2%81%A9%148+y$#$k/+%22$6k%25%3C)8a?!y=$7.CS%E2%81%B2%1B48&y?;1$%20%3C%3E?2k!?6k2(%3C%3C5%25a?!y'%22/FD%E2%81%BB%1C*2?n)%3C*8.%3Cy1'(=+y'%22/8n+?%3E//CS%E2%81%B2%1B3.=*p./?++p?.k-11?%3C%0D!6$)%20'%22$%16%04%0E%1F%0C%18%1C%07%3C%0D!6$)%20'%22y=$%25.by%258$k%16y$$a%20':;k5#+y2*-'n0%3E?.k76%259a$%3E)?8(%25)y$.%20&i*p,.*%22$%16$.?,8%3C'a%06!=56%E2%81%A3%1E=%3Cp?).n8%229.%3Cn2522k:6p&.=+TZ%E2%81%A9%119+*#k%19k:6p%20((%25y$#$k,8%3C'%3Czb%18p%0Ea%18n%0Dp%03a%0En%0Dp%02a%08nyp%1C%00%1D%0B%0A%7C%18%20&#%60%7C~wyymhg$%05%3C-=%13x8%08%1C%05%1E9%60+%08fd%14%04?2%0A%0A%202%1A%17%01#%00)~!%1A$%12%7D%0F(g%07%12y%3E%03%05-%19%25:%11%03yr%09%16-%25!%11/8%3C%08%3Ej%3E%25%10%19%01%0B2%25!%1D%1E%10?%0B%10%60%0C%02%0A%16v%60%01%00%126%00%03%0E7yx%14%02%09%11d%25%0E:%1A.%0A%25%0C%19%19&%08%1F%00'%01q-$%115)%22%7C=l%60x%0Ex8%15?%18#%609?g%09ux??%3E%13r1%7D76.7%01%7D#5%1F6%0F%07#%18%20%13$a%01%1B%12p%00%1F%18;:;%1D%25;%06%0D0%1E%7B!%06%0Dw*&+2%3C6,*%20%11%7B%0C'%05%151~%03%60z%0E%05%02%19%04?-g-0'%7D(1-%0Bx%14=%08='3a%17c8%0C2x7d%02%0C%60$#%25%1C%10%09z2%08%25%11%0E%1Er%14r%029%0A4%1E%1A7%05+r%01%11t%0F%05l$/%12%60:=!%3C%06#,l%02%60%22x-7*%1A*%18v+%14%13%05s7%609%01'%7C%3E*%1Bs$%03%06?%3E%1D(%3C-l%7F#%17%038,%3E%01%0B%06*%11:1/3%7D%3C%06%7C%0E%03%7Bi%25%19%0C-?%03*%20j%0F&!d%25%25%1C%06%3C2%7F1%05e%13cz%2216?%16!q%7Bya'/1%1F7%12%06.'2wj&*x%60%18oa-w!%1D%20%25%1C#%13&v!%0C'%0Cy2%19%11r%0C%06i71n*,%00%19:1?%7F%1Ad%197%25%0D1c%7F%20%60#7%17%185%00%18%18h;,%04y%03%1A%04%16%22%0D%09;%1A%11d%20%1A%13%3E)2%7Da!%20%16(%1D%148s&%1De%00%3Es$z%0F+%7F%1E6!-%1A%05%1Cq%18e%18?%07r%3C%18%1Ca%1E%07,%1E%12cs%18%06%182%01%1E*%06$%1C%06%1D%11%12%22%0C%16%60#'6%085%06)%7C%06id#%1B:#m),0%60-r2z5/#%088%25%02~$,%1A%0Ft%20%05%13%19%06%04%0F'li%1A%20-a4%00r9%049%09%1E~v%01v7%22%1Ay%00%1D!%01,&9,*(%1C%02%1Fxo%60%1E%13%047?8?%183/2%3Cs%00%00%1C%10%1F.n%3E%204(*p%1F%0D#g%00y%25%3C%0Ah%1A%06!))%16#89*%0A#-(;;%12d=j%228%00%05%0D-:v%3E4=%10%25e%0E'%18%02%1F%7C%0E$=%11%13%0Al%3E%18$2a%10%18(%128%08/%17#%16%09~%13%07%0E%0Ey%095%03ry%3Ca%0A%3C%7C%0D%01%0D;g2%04%12%1Ck%18sx%01%7C%16%60#%25%60/%019/+%18e4)%22;:%7F2%07%20nx%01j%03%13%22#6a%25%1Dn?y.(-%12%19%026%03%7D2,%25%609%0D%20z%0C%16%1F%19%14%03%1C%3E%1F%01;%02':%3E%1Ewy%14*$ss%7B~k%028%15%7F%20%13&9%08=9oc%0A%19%20%06!%09?-2!k$%7C%1B%139j%11%1C%16)za%15%00%07%0F%7D%1Fd%1C,%19&%20$s%03d%19;%00(':4v%3E%1E%05%19#/b%1B*%0F:n%17$%14%0F%06)31+%60~(e-%0B%1F7;2%7Dj%18%7Fj%7F%085,%09k%08(%18?zhh%0Ey%1C%1Ca%00rr%60z3%17%19%0Fs%1F-%13%06%0D8%1D%1Ed%13%0B?,i%3Ex%13%19%080%1A%1C$,e4%05s'%0D%1B%12'%1C%0F-!k1&%11%19%14%1A7%18%15*&%18%22%1A%0C%00#l%1F$+%25%0B%1C%3C9)?%1E8i3t%00%098=#p~?%10dyu8%1A+b%1F%05~,24%606)4%1E%01=%18%07%1An%1D%1C+%604%0A??%0A%7F4%0A%05%05%10?9%086%00v%7D%04%0Aa3s%1C%144%02)%20%119%08es%16%3E%1Djb-%00=%09?i!%1B%128!(%02%07%13%0C%0Be%03#%03)8(d%10%7B%7D?%1C%12j%0Axa%1B=%03%7Fw%13)(v%7D%06r%083%11s*r%12%1D&(-n9%11;=%1Da%15?(%12%7D/'%002%08$v4,%0E%1Ea3;%07u?6%145%09%17%3C%16rg%25%19$%3E%0D%20%1E%0E:%16n%04)%09?%0D+%0Ay(%0C-jc%01%0D8%0Cr%00%023,%01%604!%02%1F%14a%06)9%3C+;%25()%0763%7F/x%3C%7D%11%60y#9%3C*3%13%0A%7F%1D%0F%3E%3C%02=%0C=b%047%05%7B%0B=%258dzj*z%1B=%0F%3C%1D9,%0D4%20%03%01r%7Dv)iy7%00(h%3C%1F2%09*k%17,(%1D#%1D%06%0D%02%1C!!?%0E#%7D%1D)%1F%25%0C%7C%0D,7sy*(%20)$3;%0A=edxd*%3C%05..9+%1F%02%1Ay%25%1E3%18%12%0D??%1E%07%12w-4%1F5#%0788%0D%1D%7F%04%07%7F5%20#x%208%17%06=v$%18%0C=%7Bs%187;%05?#34i%22%7F)#%1D.%18%03j:*+%7B%0E3%7Bv%1B)d%06%1F%228i%01j%0F%3E6*%1D'%1A%073%02%1D7%1D(%1A%7By%07y%01%1De1v%056%144?&9!=%3C%0D'x?)f%13+)%25=%20%084&'%0F4/%07%7B%02%15)%12%25?%06/%7F;%0587%01%60%1C2z%22%0C%00%7D;z%0A8c%1A%05%3Cw%1E1%199%08w%1D%25-%1B%18%14%1B1%07-%02&%0D4%20%0B%01%25%16%20%02%05'e%18h%04%1B2%1D%0B%09=5.%09!%18~)%0Da%1E$3%0B,%01=fdw;%1F*%15%3C%13%12$5%7F%0Fv%7Fv#%00%0A%20%03%08%1E%3Cy%16%04%04%1A=%0Fn%0C=l'%0E%0D%19%0B%20g%1E%08%09?%0D%7B?%02%016%10=)5%1E%0B=?.*%06%7C%01(%11%0C;x?6r%0A%608%3Cf%070%1F%7B;%06%1C%06%19e%1C)%3E%11%0C%1Ej%602%18%7Dva4*1%3C%7B8%06%0Dt%18%7C%1C)9%0E$7h%12.-*za!%20%1B1%08v4*pz9%12%07%08t1%1Cv'2t.%0B%0C#%038%0D%1E0!%07p%0D%3E6%1F-w%0E%00%15%1C%1B%1088!?r%0B%06%3Cm%1B%1Cur;2)'2&ao%60,8~a:%1A%1B%0F%25%05;%19%7C037%0D%18%1E%0E3y%1C:%04%109;%01)~%13/%0Cl%07%13%1B8?;8)u%60%222i%011%7D%200%7F%20*%05%1B.%01'(%1C!!%3C%0D%12?yh1%7B's%00*%22%7C%22:?=%00y%0D-%3C;%06;,%18:(%03%0At-'+(y%16%11%17%125%7C%09%1E%1Fk&;%17=%04a%14*x%1A%17#2%7B%22%0E%19%15%18%03%071%00+%7B%20%11%1Bx+7%0F%14%60%00%18%06%3E%12%0F=%1B%0A17%057?%18%25):%20lg%11r-%1Al#$%0F%12vi%13y8~/v;%20x%01x%01%7B!%0B;%1B%12%25%7D%06$%082%1E%01%0F)?%0A;%20#1&%006%0E7$+.%60%1D#%08%17h%081%09*%0F%10%3C(6;%7Bn!%7B%00%25%20#&%221$;;f#%1B%0Cxl3sr,+%118%7D8%1B7)%16%25%20%03%09%01h%3E7%01?%0B%7B%0Cn%1B%20h;x%0D-%0878%1Cp%13%19,%11~%10-%0B%1E2%1E%03%07$*6%080%05$7h%12u%20%175%17y$$%20%00d%7C%09%1E;j%1A?n%20%00r%1C*u%7B&%01%0A$y%1A!5%7B8%14%014%3C4'%0B%7D%1426/v%7Ce+%02%12%0B%007%1C%15s,%3C%031%1B%00))%02j%60%13s%09%00%16%07%7C;z(l%09&ys%031%14:p3,l&%04%18%1B/)&8%15d%0A=!%0C%10%05(k%08=.%25%073=%7C%09%05%168g(%19-y13%08&%19%3C5%14%7D5.&%0D)*9%7C'%0Bg!3&%0A%3C%0Ay%16%25%008d%20%032%01%13c%00824o%1Bd##%05!%06%02%07%2548;%06%05$/0%01%7B0%25%00)1)%17%11%02r%08?%0A.776%1B;%7D%203i.%0E%00a+%1Fxp%60%16%20e8%0D1%00h%12273%17d-zm%0A%22-%25&m%0D/7$*.g%7Doeg$%05%3C3%09&%25%1B4%20a,%18%0C%14%3E4(6;%05:a'%18%03%00%15*%085%014%113%3C%18%1A%0F%1D%121q%0C%08%1E%14d%0D,~%14g%0Fx%0Ae%0Aa%1D%05r%7D%019%1D%15%0Fe%18d*%14%02%19*%08%0488%0C:%05%063%0A467%09%07/9%1A%17%7C%00%1E%07+?%0E,%3C%03%03*d%0C%02a%1B%7F%3E%17%06%0B%13:'6%0A%05hh%1A%04%0F%18*%14%02%10%0A%0A%18%16%1F+%7B%01i%12$%05:)%18%25%7Bx:%19%0E!%04&%22%0B%01%1Bs%0Ar%0A)d%7Fr%118%1A7%064r%14#3xq%05%09%60%02%22+%3E$:%04;r%20':g9%17%3E/o%1F!$%7F%7F%0Bc%015%7B%0F%134%7C%11%13%09oi%7F)=%0C%1Bc/%20%7F%020c%208(z8%25%0Fq%7C~%0B%17%7F4%01*0%7F(%16'%03%1E%04%22ty4-*%22&!7%00(%02%04%7F%16%1De,%1B%0E&1%09%0Aq%3E%1D%1A*%1Bu%60%07ad%0E-%0A%00=%14'%14%13%0A%0F%14%20%12$%0A2%13%12%09%1E%20%00%1A%1Cu%02=m%3C%1A#%12%00%08%14%1Eq%01e%1F(%22)%03%0F%13%15*.z%0B%12?1%02):%1C%14%3E%04%18%075%03%07%10%0D%18#%1D!%08%08%0B%08%14%225%256%0E-zm%0A%20-19%22?':1g%15%227**gurw%60dxm.%00+$%1C-z=%0F%15%1E%14%25'h%25dq%0F%1A%00%14%1C%0Fs%19%1C(!%20'%008%1A%0A%16%07%1C%1Ag%1Ep%01%0C%15%13%01&%1A%7C5%02%7C%0D%11=4%60%021ywi$%0D%14%19y%11%60%22%00%02:+%15%00%0C%0C(%1B%18%20&%3C/%1D%02%0Dq%08'k5%0E%07%0E?%13%1A%0Aw)%09%1Bg%0C%18%1C%07%101%0A&$%22%0A8%0F7x$5%3Er2%7C-%3C%7F-$%06+%12%1Cx1.%22%60%1C?/1%7D!*=7%064ii%00($%3El%1E%08%13%02#)%09xx%7D%180)%00xx,%1F%03%1B)':o$:%16y~3%3C,%11%07%1D?%03%0Evx-;%04x%13%00a%1D*!,%7B%165%3E3%22d$%15%7B%1F%0A8%0F%0E%16%11%20%0D%0Bo;%18%03%0Ce%0A%1E=&%03%7C%11h%03v*%14a$s%0C%1E64%12%1F6%0D&%09i%7B,%02%17%1C6&%02%1B$l*=6%13a#d#6y(%01%25%0C%09%1Ba%11%14%0F%13%3Ee%15%7B%013de%13%1E%0E0%028%0C$&'%09%2218;%18%02%1E2%07=%19%1F%1Er:'n%11%207c.(~%7C($%01;;%0C%09%1A%7C%12%19,%1E%25!%15x%04#%09%1Bx%7D~/%14%04$9%0B%0Cd%22%148%14%0C%17dy$%19r%1F;pd%0A%09*%60w2,%15%05y;%00~%20%03x;;x4?%1F%18%3C%04%3Eg-(%25)?gyp(%03;%01%7D#?%00v%1F%7C%053~ihy4d)%09$%02%20%3C%0Av%258%05s%7F%03%03%7D%0Fr%16%1Eg%0F%02,%1Cr%14%00%08!=7%07%220(8%17%25%7Bqs*%3C&%11n%03w%115%7Cu#9%1C%7F;$%0A%1A%12b%19y;%1B!ar%11)%3C%60%05-r-y?63%0E?%1Dv%091%0B($+%07y9r%7B%17%158p%0E%3E0%18*.#%01%1E:%06y:%04n:!.-%1E#%1C%1C3#~n%06!q%1E*%0F%18/p%7D%08%114%0C%25%0C$%16:*)%194%019%7Dn~%7B(%25/%20%1D%0D?7%089%7C%0D1%1F%08&.%3C5%00%1D%02/%09j6%0E5%1B%22%08%7F1s%1A?%1E:2.%19;+1'%20,%0A%0A!%02t=%0B!4%60ty%02i%3C:%0D%04=1%1Dd8.%0B%16e%20%10%7D;%20e%1D9%18%2281%01%0C%0A%08%0Fe2-)4#!r2%11%1B%01%16%07r%13)5%7Bdx3!%0363'1%05i%1C%02x%13e*#%07'3-%09%1D)%15%03%07%14%19%113=&%0F)%1E0%1D'%01%05r0z%3C%09;x%1B(%09%1A%12%0D2=/6%14%04nx%1Al3%04j%3E=,%01%035#y%102z&&%3C%1E%02%20%0F#%22r%18r&s%0B.$%05$%1F%16%206;+r6k%19%1D%25%25e3%0Axx%1E%1C%1D%19r-%12!%08%17%3C&-*%60%02%0F9-%1B%15%02(%12%7F;%10%04;$%1C%1B1:1%10~%02!%09~.%08,?%17?2%19%1A+!x%0B/%0C%1E%7B(%12%1D%1A(%19%0D%142%00j%14%09'9'.d%097#%03#%03)%14%22%00%12%07)%041%04%0E%04:j;%20)%7B%01,$%09;(%02%18%0380%05%22%0D%3C~#%15;3%7B%7C+c%0D*%7C%1C%0D%09%0Fx%0E#%1D*32%18%018%052%04%1A-%01'zsz&r%01d%10%0Dv%1F%00z%03%1B%001:%1B%17%18%7C%1D%7Br--%3E%09i%12%22#%20-(%02%18!?8%01%11;:%0C3h%3E%0F%04%02o%3E%7F+%0C:*%14%22%15%7C%0F+%7F%01y%09a.%11=)=%7F%1C&9x($%0C%07%08&%02:m*%1E%03z%08#%03%3E%12(-%0A'%1B%19(w4%7B2%0A%1C%172$9'3#%13!z%17#%00%0D9%1B5%08%17v8%7Ft%04%7C7)%1E%0A%25)k%20%18,%12#%15%25&,%20%1E7%1Er4%7C=v'.9%60/r%12:%07~y%0C%01'qy%0F%09%7F%25x%7F!%16%22x1r8m%22%1Bs(a.a%00%11)%3C5%00,0%01%0Cr4&r%1F?%0Ff%3C%05&6%1B#(3!a%102%1D%0C:%1E0%1D%22..#0%05%1E%14=z%1A6%7D%07%0E%1Cn(%12j,9%095%0E2%13a%14?-n%604mg%12x9%06%1D!%05%03s/?%09$#rw!g%05u3%0A%0Ee%0Dw%07!#g%60%22-e%1E%14%606%7D$vb%00%25%22%7B%0C=%0E%0Fs%3C%1C%0A%7B%0B%137v%17*v%06&5%06%13%13&+%1B%7B%0D%1B%09w!g%07j%1A%1Em%01%7Dp%1Ex4%011w%1Ev3i3s%1A%3Ev%1B'%15s%025h%12%0F'%20%3E%17%1B-%08$%60%15%7F#%60%0F%0D%1E%7C%08%7D&%0E%7B%258&x%1F&%22;%7B%0228%03/#%25%03%099n%1383%06#2%3C(2%09?%02%11%25#;%1D688%0F%1F%25'-'#$%222%04%1B%17%01!%25%01%05%20%06x%02r%178*%1F4#%0B)*%1E%25#%0B%01%17-p1%020%19s4%0D%7D%0D63n%1D:%0F%00%3C%12/%09.6%600/%22=a%1F%14%09%18%0Fc:.%7C%22%60%07%05%14%1Be58%224%1C%1B;#%07j%01&?h%1D9%13%3E5%3E%1B%11%05%7B::%1Dq%017/%3C%04%03%1B6%179%7C2%1C~%14%1C%1Cyz-=%03!y1e7%0280%60%14%035*t!#m*%19%16%60%05%15%1Cd%14%7F*%0F%1C9#%1C/v8%7F,%1165%3C8%0D-%7F%13%25y4%60%0A;%00%0Ey%0E%08%1E'%7C%20$$%207-%10-+!g%7D%20%0D(j#%04n%0Ae%60%3C&3%01$r$.71%1F3%09*$d7)5'r%60%03%1Bh#j?%201%09%3E%05%0Cyj&%1A%17%04%18(2%11%15%13%14(%3C%1F%11:%7D-%1D-6%12%1A%086%0C#/%3Cl%20%7F3(!%0E%02%13x%0A8%0F=%07)syk%08x319%0E=%00)%02$;b-5!v+(=%0C393%7B(%02%1E%0D7d%036%08a%60h!/%01&ni.%25%019%60)(r%08%7D%0E%7F%060%01w%1F%17%0E%25%0A4%12'2%181$:%11%08+.6%088(+%06+5%13%3Csx%01:%15%7D%03y%0B%015%1D&3%19%019?%06$%026':j1:%146!*/%191ix%11;:%0D13%19%08%7D%1D6/%20*!-%13%1338+%0B%18r%00%1F%16%16%06%08%15%13%1666%03%20%01(!88)d%01%1A%09d+8%1A%00%1F2x%03%3C.!-%14%0A*%158%1E'-%01:%049%14%1E?0%1E%1A%19%04%7Bh$%0D%07;%18!&3%0F%0C%08%1E%3Cz%16.+%1A%12#8%7B%03%17%1B%1B*%03)%00%3E%7B%123%08%032%20w%22e%0A%1A%08;/7%01%22%08%148%20%1F%06%18-%05%14%10%11(%12%184%12$%1A%03%07z%3E%19%03%04%20%20(%123%0B%01%1B%12e%0A%04%1B#%1878$%19!6%15%0A%12%196%1E%20%1E%25%25a8;.%151%3E,%7B%19,%1Ca88%1Fn%079%1C%7Fy%11%1Aw64%22%112%1En%09s%0F%3C(%09%1A;%0A!%3C2b%1C%16;)%00g%1B%09%20'/;%010!%03:2%1A+%08%1B%11c1%07%1E%18%0D8%1F+%1E%25%14d%0C%15d&(%1F:6#%03%17&%03x$-%03)1-%18&%3C!%13%039,1%17%06%25(%1F,8%19%18%22+i%1D9q#%018%09'/2%0Bl%22%1E%13%25&4g%18+%05$mc:%05%11;.%19%7B%22=%17!%05%19%11*%00%0F%15%1Fs,%1C69.q*?%10%3C%05%05%0C%08%1B8%18%20%7F%00%0F%18*%0E%02%0F%1Ec&'%02~%60*&%1B=%0D%09$d'%08=%1D%00'n%7B%1C?%7B%3C69%25!%1C1%22:~%0F%7B%3C%13%0F%7D%18%3C3%06%0F%05%0B8y%08-%168%60%18'%20%3Cl$s%13=%22v%16/%0A!,%1C%22~p%0Dx;5%12%0B%0E%14%3C%1F8(%00%22%0Ae%11y%05:3%08%7B%14)!%1F%09%60.%09%3C.%1E96%25%0D0%60=y%1E%07%038d%09%12=11.'%0F-%09&$;%18%1Ejh%7F%18%20%02%1E%17%09%05%22%19%1D%7B;%03%1De0&%1B+%19,/91w-%22%1Dh%1D3y-%1C%1A.%141%7D%0E%13r%0F%3C%1A%01%22%0E%00%3E%0B%1Fi.j%18%18ah%138s%05;3%0A%083%09?',%20%0D!i%07%09/%116r%7F/%0C%07!%00%04%0F4%3E*!5%1B4)%7B/4*-%22;v(%1Cj%7Fxrh2%06%19:,49%09%01%14%10(%015%0F=a&)%20:%1B%1B%15*%14,%3E%3Egd4%0C%16%08:%7Cu:%07%10%08-4%05y%1F6%00/1%14r%22%13w%7D4-5!%0A~%14:d%03-%1Bw%0Fd~%25%00-7%00%01x%13%0B8'2%0Az%22r8%20$%07%1D6%20%01%0F:%1B%0A%7F%04%05&;%60%15#7%01$=8(v;%03!%19)w%18~*'%0F%05y%1A6%093%0E%06)k%60%20%09%12)%0D)!%181!r5%12%20%0E$%0F%06y#%0E%7F*6%06%17s/%14%11%00y/%05vi%01'%0C;m)%022dw%10%18*%16%09~%0A%03#%14%20!j%11=6%0A!%3E%7F,96%7Fu%11;.(/5);2.b%14%25*%25%0F';%7Cxtr%7Fobg$%05%3C%0F%07%05x9%08%1C3(/%7F%7F%13%1C%25%25%1C%25l?%1Ey9)%1F%18%3C%153%0Cj:%1Dx%04%18k%60'w%1A%07%181z13%0A%0D892%20*j%16%01#%25-/43%06%3Ea,7ys'%3E%1F%7F%05%04%22%3E%00%1B,%15%60?%15%7B%050%25%09v%15-%0A%1B%1D%60(%06'%1A%1B6%02%08.-%1C%1Bix%20%60%03k%0A&%25x,j%03%09%02/+l9rr(waid7!vvc%04%251/%0D%038p%13%06=%03%0F%0C:%01%16%00%1D5*,%1D%22z%0C%20!=%08%18v%05%7B:%60%11/%0E%16r'%0F4%19%03%10)d%0Adz.%088%0Dd7h%7Bd%0E%1B62f%09;%7C$j3%09y%02%00%14!8$;!!%03%18%13~wa%11ry(%0B%0E%09%604?%0F,d1+%18%01%12g%22q%25%25:%7F%20x%00)7%22%197%22%00%1F%20%04%04%11%1F)i)&%068%1B%14%1B'%13784%7F%06r%1E7e%25q%7D%1A%20%14#%11%1F%05%3C%1C%02%0Bs%00*6$%102,%1Fez8-%1E%13a)nx%7Da62%06d%14%609%07)%02)j%09-u(%7B)%1E%3E4%0Fz%14%1C%60/%05%1F0%1C%07%0Fr%14r1%12j%7C6,h%03n%0C%09*%19?%19%02w%12%11%1E#?%04+3'w%25%08%60%60%0Ev%3E%0F;%1D%0F'%0F;%3C%19;j%03%0Ai9%07$2%1D%1Ba%067?~/%1F%206%19-%1A1-%0C%0C%02%1Cd(n%3E%08.;z%0D%3E%3E3%22%02%04%0F%0F%17i%22%19%03%7Fr(-$$7%3E%16*&%00%22%1D%11%12&%0944%072%1B%05%07%1C&%04'%7C%00%09%13:'%25%14%1B%04%01%068%0F%03i:%10%0D!%3E%14~%07%01%08:%04=%09!8-d%1A%07%03%1429$+r,16%19n#%0F,%11%07%08'#%0F%7B%09%08'%04l;%03j/%226%00%01,%1Aw%14%3C%03wsa*%1A%089%11%1C%60a$$%7C%01%0A%00%7C%0F%22%1B%3E%04%3C1%7B%0Cv%1B%7D%04d%3Ei%18%60%25%087%3C(&2%00%7B%11h%01x%3Ex%17;(n%7B%01%0C%17%0E4:?%0C*d61%04h%1A%1D(%1A+v;1%0D%7F-#7%0C%112(%13g%7F7%0C*h8%20%0E%1B%7C/'8%16y%1F%16g?%17%09/%03%1E:%04%1A8%3E:%1B31$%13%14%07.%064%20h%1Ew*9+h.q%22%3E,%1799%60$#f%12%10%04a-d%1D0d%7B.:%1B6%7C%08%1C%1328-%0A:%1Crn,%14%09%22%3C%19%1A%7B.%1B%0E%20-%08%0A%19&%14%0E4%18h%1Eq8%08(%01%7Fj%1A4?%04%08+d%000c2%03%1B%1D%12%3C-y1%7B%08%18~#!%1B%16c3%07#)l$%08%04%05%048%151%22%0D%7F%3C%128%05rv%0C%25'&%19%7B3%18%07%0A%1F=%0D%07'%10/=%11%06%09w;%1C%20d%11p%06&i%3C%00%11;%18,%20$-1'ne,%12%19++#:/$%0C%12%11%00u;!+%069%17%01%0C?f%7B%0A%7C%14r#%05%09!)#%13%25$%1C83dx-%06%085;9%03%60;r'%00%092%01;g%0E%09%04%17%124:;9%06%11's%15%7C%0237%0F2%1E!#%7B%1A,%3E%1D2%11%02t%01+%17%13-%06%0C4j4%7B%17s%005'%603#%14%1F7$%02%11e%1F9%7F7*%7F?%1E3#%3C%02%3C%018%0A%06/(%03%18v*%0F;8~%19%3C9%3E'%7Bj!x%10%14(%16%12%7F,%052%12%0F%7C%09%25%1F%1By~,%20%00%25(%7Drg2q(~+%179%0C%11'%20a%19%08%04)%14%7Fr%0C%1B'%0E',2%05%16#%22%06s%00&8%08zy?#%13;%1Fr.%7C8'%03294%18*!'%0D%1B%15*3tzwv6%1B%19,!a5sr/%7C6:2%0D*%7D:%13%18%1B?%1F%0Bd,r/+%0B%06%25%07%1E:=b*(%1B%09%09e%03*877%3E(%17%06%07l3%0C9%0F%01=%18%02%0Fd%3C7h2$&%7D(%08xt%0C%19j;%00j%20;a%0A;%14/%1F:),q9x%1D%1D.+:%03%18%09*9rwri%03%1B2-v%1E?v%22%19hc13!%06:%00%1D1%057:3:%113~%17c%0Ey;%1A1%1B%7C%06~%1Aj%3E%25%11%0A%7D/d%3E%00%7F~%0F?%1D$%1E*(?%0E$%1D'%092y%12-%07)%189s%1F%1E%16%608%03&eo?%047%7D+a%12%1F%0F%01&%13%20*5z6r%1A%05u%19%04%0Bg(,=y(%17?$%1D;jg%02%1B.%02%0Ab%1E%0C%60%2221%3C%1B&,85;s3%19%603*#8%02%01%04y%0B'%7C%10;,%0D%7C%1Eh$%3Ew%0E%7Fn%07%11y?%19?%202%11)%0847y%1B%0F%3C%608%074&%20%0F%18%13%0E;%7F%1D%12?%20d%01%0F%171+:e%0C!=,d%01%0E%07%1F%04r%0C%0B$%01%07%7D%144*~%128e?%1C&%20r%1C;h%0A%10=%7F%13%00%085%60%20r7%08j1#%0D%02&rz)4%06%1E%15%1D~%1F%12)%06%7Cx;!%12%00.%3E%086)%10%01z%20%15y3,%0A1i%12%0D%7B%17%1D&/j%03a(&#,3e;'2%10%04e%1B%1A%05y.:,=%06%13%60%16k%1C%05+%1A%18,i%7F%06%05%09%10=*nx%251%22%1C/;w,%06928%0C-e%0A%7Cv3h%7C%1F).n%18%22()%22:%3C3?m%1F/4%18%22-'bmbxy%7B%7Cu5%050'#5a8%17%0E%1B%0C7%0C%22%07%3E%0D%7B%1C%03%04%018%15%0E%0D%22&%0A%12%09%08%7F%7D%00%13#%12%02%01a%06%18%16%22%095%00%7B4#%08%1E%07xsr8,%20/7/%14%0149%0A%11%0D.%14%7Bs%066%1B9-%15%0F%1A%1B7%05%04%03%0Br%19%1F7%0C%0C%14%12%60%0E%0F%02!%19!%20%0C%04%14#%08%18&%193%05%0C6~%1E!%11%13'=%20%1D%1F%7C%0Cx(4g'v%11%0B%1Af'r1%7Dj%3E%0F%11%25%20%1D%3C1v9%17k%1E%1Er%1B%142;!%16%19:%17b'%1Bx%02)%16%7B%02%25/0%01%010%22v=;%60%0B~%190%3E(%15r~%11%09%22'%18%04v%04),-7%11c%7F$-%06:*%3C%22d%0A%03%7F%03/%60%25k%11%06%0E?%1A%00c%11%11%0C%250f&%22z%7D:*d6%12z%01%7B%18r%3C%0Dj%20%02%08%198%126%7F%14%02%09r%05(%0Es%17m$%7F%17%02wj%3E%7F%06%11%0Dn%061%20%09y6%0296%3Cv%01%1C%25%1B8e+%0A%207%06:%0D9=3%02-,%3C%607-4%10)%257'4v%25%19%0E3%7D,%1A%7C%0B%06%0A%13%7F%0Cv8%03%118:%0E?$8%02%014%0F%03%153%0E)'%05%0F8%01js%09!&%7Dp.vv$%1F0%3Cz%1C6y1)*a%22%04%07*6-9%1E9yz%03%3E261%7D%1C%07!.%01%04*6%091%19%01%201%7D5%06%7D+%22?w/%02v%19%3Cn%00%7F%3C%1B%11%15%1C%1B%3C:%1F%113'%0B:%25%0B%7Dw.g,%15z%7B#%15%20);%19%08f%0F%15$(h%1Ay%0D;%7D1c:%119a%09%07%25%11(%0F%09'%07%19%119%125%07%14=%1D%15e%13w%01%16l4%1C%0F=~;g/,%6081%022/%0A*v%60,w%11~m%01%7Bt%60%03%3Ecz%09s%09%3C%1Ex%0D%1B%7C3)%02y%18%1E%0Bi-p=%1E3h%1B7%13%08%11%60%06n#*%1B9%7D/y;/%7F%7Dp#ea:%3Cx%25%03+%1Fr4-'*%3E-$%07z%182%7B%0C%09;%0D%1E*%16=%09%1D)%12.%13%3Er'%00%053%0F%60%13%7B18/-%15r,8%25h9%12%22%0A%3El%1Er%11%09%7B%08((%12/%14m%1D%25p3%1B%16%7B8%04%08%22:%7Bz%0B%1F%09%0Ae%18%04%7Cw.%7F%1C2%05(a%152y%1Cw%60%7F;s%0C%16%20%11&n=%07%01%1F%25t%3E%7C:%02-4x%7F%09'%60$%12'?%7F8v,!%13a%19y(%3C%00%1F;$%0C%0B(;~4z%01+%02%192%12?%1B1:81%1C-%60%01*/%082%1A%3C,3%03i%07%11%092%0Dr&%02)14%18%7B)j=%07%1B$$1$4+21%03:=4%19%03%203x,%1A%0C5%1D%0B;%252%06%00=%0Bd%0F;8%07%17%3C&2-%25;%1Fd69v%14a$%19re?!?s&%0D?%1C/&~%04h%1F%3C%049/%0D3?%0D%1F+%0A%25./9%1A%203%7F,%20%078%60/1%13%0D%1B1'(%7F?i)/'%7D+v%20%0F.%1E%1F%18?)%02%0E~;%13r'z%09rh%0C%16;%0A%1B5%06%09%01x%1B6%0E%04%60%096%0A%1Cx%19(%3C%22/,yw%01%1D%20%08%1E%06#%00%1B%11;')h%03%13%067%0A%11=nd+=!dy=)j%0A$%15%1C;3c*%05:%1B%0F%143%0F%0D7n9%05%18%7B%7D%1D%3E%12%0D'%04+ex%1B%05%17o5%09r%7D-i%0Ar%028%18:%05*ty%09%11i=%05%1Bx7=*&%20y0%1F%01%141%088h?&%3Evvc%0D'%22%20%0A&2%14?%050)/%16(%1Am%1As-%0A+:%20d%0F$%7B%09d%19;%7B%19%60$3%0A%1F%1En%3E%608%04w%083%25%22x~%0Adr%0F?%03i)%22%12dz%1Cg%3Ey%1Aa%203%13,%1F%1F%11e%01t%1D%09?3*%192y=%04%13/=%3E%1D#)*dy=1%0C/%0F%17%08=s%14%0F-%3C%17;n%20%0C%0A5=%05%60%1E;$%07(&%04!%18%01%0C%0F%1C%1B%1F%02/%01e0%05,2'%1A%3E#:7%7F,#%14%09rx%06%13%16*%13%7C%3C%11%15%04(%1Fe5%0A%1Aq%60%04!%7B(+=%25,%06:%16%20y%16%043%16z-5%18d8%00%7C?5!y(8-''j%07)v&%7D%15%3Cw%0Ai%20%12%60w:%1C%3Eq%1E%7B7%1By%25%22%19??%1E%0E%1Av-b,%00%1C%3E,b%07u%12%22)%13%3Cq:!=%1C%040x;j%02%06t%20%0B,%1E%3Ey.%065%1D33%00729%12y;e6%029y%0E%00%20%13%19%09y%3C3%00%120s)%0B%1By%0E%18%1Ea%60%08y%1E9)%0A.%0A$,)%02=%03.%04%03%07%22,#%083%17%1D%14%06y%1D%08%22r%7F%7B1%222*29%0022n%07y:),7%03z%3C5%7Fn%08%086%009+%02*%08%05$%11%03e%0C%05%05/$~%186~%0D%01x%60%06%3E*%01w4%1D$n3e%00%19;%11;-%1Dh%13&$wr8!*#v%17)%0Ej1%1F%1D))&%1B%3E.%13=&%60z)h=%14%09a%1C%00%0A+1==#%1A#r%1E%15'%13+%1E%14m%1C%02j;$%0E4%3C9%7F%19%185z2%25%3C3%17/71%177%60sw!%014e%1B2%09%0F#h%0Fy%20w%0B5%1E%25;%3C*%15-%14%13%17%3E;%7Cs1=%15e%121y8)3~3%02a23%60%18$'?#%05%0B%00%3C(i%193y%17*=*x%114l5%0F8%12*m%16%258%05e2%1E?0%0A-m%08%0473wn%7F,%03%6082;%194%08xl%17%22%1B%02+%0B8%60%06%1Bz%14=!5%25%0C+:1/;7:)s%0F.%16%161%7C%12%7Ca!%20%19%11%12/66%0C%15.xj%3E%7D%133v/%3C:%08%0D=)%1C%0D%18d%05%0B6%00%0E%09%06m%08$9%13%7B!!x%07%7D7v;%11%09%03~%1Ai2%0B(%00j&%7F8%1C%1D0!=.%05%05%1C6%60%25=~%13%05%7F6&zi%22!+%3C%01+)=%15~4%0C&;%08%05%7Brg%0D)~%1C4%7F%059z%01)%7F%08%0E%1B*?%3C#1=x!%1C%3E'9%06n!~'%02%0F!%1D%04'9%06.%1E17=x1%18%3E'9%06!$1%09,%17%3E%16%087%13!8%1A;%068%083e%12;%08%17a)%12$%026%03%3C%037%18/%1A%7F%25-/a%0D%3C%08%17z/%1F%06s'%22%08?d,7x%7B%0D%1D%1E*%1Ae%01%1B%22n%1C%0D%603%01%0E'#%0D%7F%0A%031&a%20%12p1%0A3'%22%19%0E;:%1F%0A7%0F%1C%0Fez%08%60':$%11y8%1Do%081t&%18%0Bc-%07%0D%7B)*92s8%1D$%120?eia.%19%01%20?d%068r%05%12%05/)#w1%3Es+x%03%3C%00%1B6%1B%08%0Cc3%02.;54%05u%0F6%115r%13%0E(%0E!(%13%0F&m%15=%05%06%3C%16g%1F'&e%60;x%07:8i(%7C(.%00-%09%1F%11%25x=%068v8%19k%03%7Cp%1E%187%12%1C%14%3E%3E6(~%17%1Fy%18%1F%7C%0F8%04)%1F2%14;%20%14%04%0C%20%3E%17%108%1A%09%05!lh8%10%0E%00m7:ur?%0D)%1E13%0B2f%028.e%0C%3C9w~%00;(%7C$rz,h%1F7%1B%20?%00#414a%3E%207%0D%1F%1B%15%7D%16%0F%04%16%7B3%202%07:%12)8%02*%1D8%7B5;%0C%14!%3C%19%22%1B0a%3E/%25=i%18.-%11,?%07;%20z%08%1D%25~%08d/h6(.%06%148%04$'s%04%0Ch%20%1B(+.(zn,%1A%0Bh~)%1B8afzr%1C&%15:%7F5%11%1D5%04#s#%16r(1n=8%01%22z8%1Ee%08%16d%11-%1Fa?%069%25=%1A%7B.3.%02l%07#%06%7Bz%1E8%01$!%204%1C$y%2296%14d/%0F-%1E7%7F%20;6%083%09vx%7C%0B%16'%06%0A&h1%3E/&y%03%05%03tdam%18%3E%17%7Cy%1E%60x%07%0C+:d!j%1B%1B%0F%07%1E%0E%60%0C,%04zw%7C%1E%18&%02%02x%7Ck%1B%1B0%03w?$8&%05%22%01%1F)%1688%1D%1F;r%3C%09%1A6%05'#%17%0E%1B,0%20%01)%7F%1Dq%034-6d%19%1A+%01%14d%03/%0Cl3%1By:%7C%1Dh%25%22/z%13%60?%20%1C6-1;/%05%14%60%1D%06r%7F%14%1Ei%13$%0D%1F(%17%18%20$~3b-)s;+%05%0Dys+?2%25%0F;(%1D&(%08?y=4-//w%1C%04z%15%11%18n(%60%16%0C%1A%01%7F=%038%7C%60%01,%15%059#;'%06-%03%0B#(*8%0F0d?.%1D%0A)%142%09d%0F%0A%20,%07s-d-zm%0A:y$#$k#0%3E.m%0D%22%3C%22*9g%7Djbxvyb%3C%1E95&-h%22%0Eq%0E%1B.%17-%15%01$%11%20%3C%14%3E%1C%3E7(+r%22%18%1B%0D,%20?%17%12%1F%22%22-%03%7B%22%20%00%7F2%1A*(%01%3C%0F%1A%20v)%7B%14%15'%0F?%18%1B%14*%14x/%1A7$$%19%0Bv%16%208(%3E%11;%1F9%7B%1Ei%18'%08%07)%16%04z%0B%0D%07)%01%0E%05s;n#-%0C%11#:%7F%3E+?%1B%60%20%19%092%16%0Bc-r%254l#zv%06%7Cab%133/y%16%20%1E%07%1F:%18%03%07%11,%050%0A,7'%1B#%18,%0A?a%15%20*%0D%07=%185%02%00;=%1Bd%186.%7D%1F%02y%03d!%3C%25%13j%7C=%1D%22z*%1Dv%1D%048%10.%03#%22/,)4.%11x%14%3C?1&%3C%00.%1F8%17%1D9,%07n:%196%03%0Ah%20%7F%0Ds!%15i%7C%03.%08+%01%02%05s%14%20%00x1%7C%00%035)%15%1E%7Fm%3E(%09%04%040%18%22%19%1C~%0Eb/%228w;?%3C%13,v%16%14'%22%1E%08%3C%3E?u&#,a2%05?%0F+ed/%7F%1C%1Bf=(%7D%14%1A%15%1B.%0C;7%0A-)?;%1E%7F%7F%20%00#/d!%13z*79%1Dt;=o%00%20%192%16+:%7B%0C%25%01%03%19-51%1Fv#%01%0C,%3C%60%7F%0Ej?a%132%13/r%07%16%11%25y%04w%0E?x%199e%00%14#32)%01h=r%0C%1E%15%13#t)%7D%0C%7B9%09sx%0E%1E%3C%22%0E)%0F%00$%09s*=%1B%607$*%107r&%0D:%15e%19yy,r%05-%0F%0Ca,%3E9wr%1E1*-;1%7C%11%18ys%7D!%01%7F%00/y8r$#71%1A1)8wr%3E/(/yr%17#%3Cs9=9)%082'%3C%0557%7C%0A%19~;=('%7D?%3C%16*%25=y%15%7B%06%1B%078%17%1D%25%09r%17%0D%05%19&xvn'%00%15%7F%7C%11%16%60-%0F%142$;%03z(('dj#=:%18x(%01x%60%7F.%20%09%1A*%17.%15~%1E-%06%7Fp%134k%1A%7F%0A%60%22m%151%22/%0F%0A%07yn%3C%0A%17'%0C%0E%20%3C%0A)80=%08%089d%0Cde8%3E%11x%04w%1F%60%20%25r%1A%13%12%7Cv3z3%7Fsw&%7C/%7F!x%22v!:.y9%1D%08%17%03%223%0Aa%04%7D%11%20/a#8%10%0C%1Aa%1Bd6,v%11bd%17%0Aa5$%05%15s%05%20%00'0%06z7%00%00%14;e-;%1F%09~4%3Efd)%12%227i&*%7Fy%11%7Fs%092%14a%04%22j9%1E%15!.%05%08%7F7a%02n1&%3C%22d%00x~?%17x%03%0C%3Ea$%7B'%0D&%20&%03$y/%11:s'~(o2%1C.=~%0D%16%1Cwx%1B%1E%17%0A0%06)%106$;&%00%0A3:%02%13%1D,9%1E%1B9?#%3E%04%1B%07%7F%60i%0Dw%00%7B%3E%3C%0Fy*%1C%08b2%109%1A8%1E%00%19%0F%07,8%60%0E%0A%3E1%01%0Eu%18%14?%193%17-%0C%0Fh:3%08%20m%17%07%15%01%08%0D%22du(%07%1A%00%03x%7C60hzv:%7C%0F$sq,~%161(%22'%09!)%08u/%19%1B%13%7F%0B2%0F6:;%07%2067g%7B%22%09%1F%20%08'r%12%09;?%7F;yw%1F%1A%1B&*:a%03,(:%164%22r4%0F6%00:%7F%00!%04.#%1D+%3C7%09'%1B1%60%095%1Bd%15%0C%02r&%06%13(%3Cl%13%01%0Cde%09&'r%05%06%0Af9%20%7C(%0Bh%1D#%1B7,e%3C2%25~%0F%1B%12.#%04%0Eh9%15%1F%0D(8%0D%16#9%20%22%02p%01%17r29%07%3C%08)%25%09%07%12$*%00~7%12%1E5a/n/x%12%0A$,%13z7%19%19u%0Dx!a%3E%13%0A%0Bj%18%1A%081%25%10%0A8v~%09#&(%0F1;%1D9(t&4-%1Dy+x%0D%1D%1C%18t%3C%7B#4%071y8k$1)%1B,*%04xj%7D~%3E%18*/%09,%08g%07%20%0F*%0C%01951%25%09$%08%10%7Ca.%7B%03%05%11w%1F%3Er%0E%11%18?%12%06,sa0%1E#+%03a%138;%10s%22%0C*d2&%18%157%1C'%22&%18hd)'%06.%09=%07!%06%0C%18%05%08r%25%14%3E%03%00.%00k5%1D%05%7D,%17:x,%069!'%0A4-%7F;%1C%18%18r$%18%1Dd6-%0F%09b.%0B%1E%20am6pg%0C84k%11'/-6$3&b%0B?(5$%3C%1D%258)g%7Dji%7Frxb%3C%1E9+%12#=%0018z)%00%17%13&(%1B)%1D%1E%10!%07%0A%033%0B27v%1B%11$%0A%05%20;s42%1D%60)%00%12x%01:%14%09)%0A%0F%14%18%0D%10%12%1B%00%00s4%0F%1F##%1Bq%0F%7B%15%06%1E%11x*%3C%1A%1D%0C%1Bz%1D8;%10#-!3%7C%0A%3C%08!%0112%0F%01%3E%11%1Ay%18&j'%00%07#)%14=%09-~%3E%1D%01%11%06#%7F%08%60r%12%20%04%0E%1Ax%06%3C%0307%7C91%06.%18%22%00%19%1E%0C%09%7C*'%08h%09-*%03%3C%1Bf%1F%11(9m%14%01'%1A%032%01&r=9(h-5%03)%03%60ru%0F%18kg%60%22%08%1F%12*%7C%02s,%3Ed%03x%0A9%003,%008%19i'9%06%13%05!%09$.%12%1E.b;%12,9oczq%1A~+2%08.%0D~%1E%3C%20%25%19,-g%1E)%3E%0F?%60%7B%0C3%20.%11,%0A%0D%1E%0C%1F%19%0A;%7D%1A%17?%00/%1B%607%0Au;e=%00%1E%09%18%08%0A%00%06r29(b/q%18%08%13%111%16%7B(:%19%1A%11%0Ev%09%7F%3E%14%0E)%604%0F6,%19)*%20%08%03%1D%18%3C%09%20%18%01j'%255=%1Eh'%0D;%608ae%18%0E$*:%1B%22rdaj=%1343%0Di%0A%1E&r,%16%12%7D&%60%1Fm%12%7D%08.)%15%25%0E$%7F6=52%0Ad!%00'%25u%09y/?%1D%0D.%0Ahc*%18.%3E%13**1%064%10%01%0A%13%08%7B.%02%08%14%0C6!f%1E%11x%05.%18%0E%00%00%20%13%11%092z%7F%16%16%02%15%1F%02i%148$:y%01f%08,%0F)%03%05-%1B!#%0Be%08.%03:%0F%18%0F.%11%1F%0E7/3)#%09%15%1E%0A%60%0Di%7Fy%10y%01/5,%20;+%18%05-0,%03%0Fb%1F6/+%60%01%7D%22%22%3C%60%14%13%09%1A%22%00%1F9)%7D?%1Ba%0E%10%1C6#%01,;%0C%7Fo%09y*%0D!!%7B%25%19%18~%1B%3C%03%04)=%10a%00%09%0E%1F%14g%0D;?%20;%3E%0D%03%03%3C.d%222%1F:%1C%13%12%06z;%1A%133%11%02v%15;%7D%18%0D,1%06%06;%029%14%7F%08%00%1D%1D-?%01%0E(%16%0F%17$%02%05(2%02z2%1F%0D%10%1922%08/%1C%08%1C+9&ih=%0A%02%07%0F%16%07x2%07%18d%1F%22%0F%1E%089%06x2%06%1B%7F%3C%08:%7C%03%12rj%0E%0C%08!~*%09%0D%0C%09)%05%7C%25%03%17%1F*%09%032%13%0A%05%13wj%7F%06%7C6%7Fu%12*-*%20:5g%06*7?98)%0F+5%253$g%7Dlhzsrb%3C%1E9+%12#=%0018z)%00%17%1D&/~+%1D%18%223%02%0D=%13&/%1Br#%1F%0C8=#%3E%09%0B1%1D4$%18%09%1E9%00%01%0A%05%094i%17%0D%06%0Fa%157%7B%0C%7C%0A%60%11%60%12z%18%1Dix%19%22%18%0D%14%60%00%7F/%0C%19%1C2%13%01%20#%09%22%1E%03n%111.,%0F%604%3C%0A%03=%18?%1F%0E/~%1A%06%12%06%029%14:%01(%12%06%0D'#%0A:%021%1E%01%0B%097%1A%60%08%0B;%0C;%11%3C%20%0C&6%1D!%09%094%1C)%0F,%04%18%3E)$%0A%22%7Dvf%25u%04v%0B%16%1D6%01!%09%3C%22x%1A4!%05%13%10;%1B%015$%05=%01;%14z$%069?*%60w%60+2%1A%0E%11%25~%18h%181r%7C:7%18%15x%03%3C%01/&%7C!);%02%02;v%1D9%1A/%0E%01:5?6*%07r%3E%1A%07%22%02('%0971&%1C'%02p%1Be*%12%1E$%12((%15%18%0Dx~#h%7C+r%1F%12d%0A%20%13z%0D%05%0D;.%1F%1F%16ds%07%7C%3C%13%3C%021y%20h%11&%12%1Er%11%0A%10-)%1A##%0B%07%0B7%1C%07y;%18%14%1F%12%02~?%08%14%7B%00%19v.%12%04%16%09e%1B%12%7C%10%18%7Fi8%030%0D%0C%0C%60%209,%14*%3E%7B%17%20%05%10%17'7%3E%03%1E%16%0F%14%3C%7B%14%25%00y%1Ba%11%08~%08%7D%3Ek(:x%60%1E%08*%7By%22%7D09~-$%25ae%04%12%20%3E%1D%1D%1Dq%0E:%1D%02%3C%04%06%07%12f?v.%165%1B%0A%15#%0F%3C4%22%18%01%09:%3E~%03;%1D%00?%09%03z%09%08e%0F.%0E%04%0D%11%08%04%0C%25%3E%1D%19%101%17#8%7F%0A%02%0A%0E%11?u:%0B%14%09%0F)%1A%186%1B;%19%1A?%018,%0B%1D&oi*5%02%1E%09':r-)%0B%11%20%18#8k'%084%1A6??s8%06&%18%12%0E%03%25%1C2%19%0F7%0292=%029%1Ay0%06%0A%11s$k91.%0C%0889*0%1B?%08)%09)3/l%1A%1A9%19).3%13%0E2-,3%1E%07.,%18'3&%1E%17%3E%0A%08%17,%1A%0Ed%02%0D%0Ev3d8%15~)?h:/%25%0F(=%0D%0B%22%0C%17%072$%07%16%13%1922%08/%1Cc%209,%02)2%0F.#%1C-(,%0B%0A%1E%1E%02%206x%16.7%20)#%00k%1Ezy,%04%1B%7F%3C%1996,*&%15%0C%01*%06(%138%0C)%04,%1B%0C%1A5%12*&%0D%01%0F%04%01%076%7Fu%04#$k%0C8%3C'l(&%3C%22k%0A%25'?5g%0F$%3E)%3C.2g%7Cme%7Cuyb%3C%1E9+%12#=%0018z)%00%17%0E%10%0F=5%19%1D%19%09%05#%1D%25%13%1F-l%19%07%17%079##?%0C%18%7C%0F7ry88%12%1D#%0B%07%16%00'%12%10%0A%0A%1B(%1E%06%0D%09%1D%7F%07&%7B%03n%14r%00%60%1Dh%06%0Fxx%160%06%1F%05%60%0Fm1%1E%08%1D%03%01%1F22%09-%0C%1D)%001!%3E%11d%06(%0B1a,%0F%08%22%1D)%09q%08%04)%1B%01.%12%7B+%05'6%25%25%171%0Ap%1A%7B%0F%16%3E.%0Ay+)'%13%047%1C%1D9%15%0F~%1D?%20&%1E%1F%16!%3C%03%13(7%1F.%12%1D%175%14%1B&%068j7%7B*;%03l3%1E%0B%3E%00!%7B-,%06%1A)&%02(%00%0Ch%60%0A%07x%7B/%08x%25%1A%03*%06%02%0F%00%1C%0C%17%1Ds%1E%01i3%0E%099an%04-r%12&%3C%1B9&%18%09o%20%1C3%1D6%3E%1F%0E%07%09;3a%09jsa%03$#%06%1B%0D%1E%3C%0F%05%25%1F%09%1E%7C%16!%05%00i%0F%22!%22iex%05%19%17%17%19%1Ev$%0A+=;j%078%1C%12/%25%08%141)&%06&%14*%00%094%3C%05?h%0A%0D%03%054%03%0F%0A%18%16%16%1Dd%22%3E%14%10%14%0F%0Dd%3C%10(%0C%0F,a%00%1D%0A%03%3E%0F%13)%0E*=%1Da??8%0D%1F%20e%1C%03%25%17%11%1B%0A1%7F%25%18;%1D%0B%7Cw%08%13%07%043)%17%25%1E%0B%3E&%14%22%08u%1A%1F6a(r%054%1B%22#8%0C9%03%05~%19$%17o%05'%05%1Az%098%1A%02%1C?(%15%04w%0A%25)!x%15d6/$%3E($%024%07%1A%0E%1D4lhd%09%1D%0Fm%1C%0F,#?%0B%06%00j%12*%14=$%09%01!%0F8%0D%03%1E9m$%0Aj285%7F%012~-4%1C#2%1D%04.'%18%08y%7Fk72(y6%1F(%20%0C!%0F.%17%1F,%0E%03%1B%7B:&%7B!l%01%1Ew%06-a%1A%20%0E%226%17%09%1A%18%1A%3C%0D8,%1B%08%0F%13%17%1C%09%1F%0A%08(.%20%22&#gd*%7B%0Dai%0C+%0E%1C%11%1E%19&3=%01%1F2%22%3E-%0C%16.'%0A%1Bod-%05%0D?%1B%1C%1C%03'%17%3E'8%122a%16d%04%03%7B%05%118%08)&)%3C#%1C*%0E$%162%60&%1E&%16?%00%18%60%0C%1A%15x%022%04+7.&s%1Fi7%3E%049%0F!%03%1C%11%1A'3%13%0F*%11%3C%18%02%223%22%00%08%1A#%04%00%05#%11%01,%20%1F%17%11'%0A(%1A%10)%0A)%0E%0A%18%141/%08xmm6pg%0C8%3C'.$%20y%16%22&#:u%1D%3E%20/%0A02gssvidzm.%00+:%12,/%1E#)z&%12%09%017/%149%03%203%25%111%7F%17'2q1%1E%12%17%0D&r7h%1E%1F%09%03%04%0D%18%026%12%1F%18%14%099%1E%09%1F%17%0Fn%07)i%1D%7C%05r%0Fr%03z%17%0Fwj%08%22%17%1F%0Ar%11%7F%20%1E%07%0F#%13%0E2=%1B3%1E%0C%7C%0F:%1B%030%08/.%1D*%00%09&.h8%17=%08.%1D%226x=%0C%00%18%1Bz,%18d%18s,a%134$%04%7Cz(6,v3%0B%0F%08%0A4,%14%0F%00%139%0F&%1D1%09%0Cz%3E%1A%1A-ydy%1E%11,$%0E%0F%0D%14%7C%06%0A-%0C4%0F&%01%1Fae%60%07%18%7D%3Ei/s&%06(%08(&$%06m%7F&/$%17%16%16%08%11~&l%1Ddq%11=%15%11)0#9%01$21%20)%14%1D=j%0A%1F%17%07%3C%0C#%0F%1B%12%0F6%1F-!%1F%1D%12!%01%0D%1Dd%0D%1F%03-%1D%1F2%3C%3Cm%07%02%073%255%09%3Cs%22-%1D%162%228%0D=%3E%01%0E*%22)%7B:%03$=%138%05%02:!%1F%12%13v%01wlc%1C9%1A~he%00*:%09%18%1C%0A%14%11%08=:%0Eu%01%25%00%1C:.%03%03%1F%14%3C%0A%02%0F%1A$-%14%0F6%3E5%7F%20%09#%03d.%0C%03%0D-1%3C%03%3Ea,%09%02%0E%7Fy%0C%119%13%08%1Fac%0Ex%19z%0B%16-7%1A%05%13f&%11s*%10!%03)%1A%02n%7F%0C%16%0D%3E%18b*%16,90%15/13e/%03%18%03%0A%1A%17%25%0C%03%22%1F.'!%15%00!=%1D?%05%0F7;%60%0Fr%0A4%3E%1E%7C+s%040%04%3E%18.?%15i%7F%02%0A%0C)685%7F%09%13!%25/%25%08%1B%0A'%07:%1D2%1B%18%1B%1E%05n!%1C13%1D%0C%1B%19&%12%09%1B7:t%22%1F%0C%1B%083%09%7C1=(%18%0A9*%08%04s/;:%05%0E$9%0Co%13.%139%0A%0C;%11%06%09&%1C%17)1/v121y%0E?%18%20y%20'-7%11~%04%7D%0C%1F=%0E%04!%01%15f#%142%0B%60%04%00%0C'%07%1B%06&73v%0C%1A*u!)i)!%04%02%01%1B%05%1C0%01%1F4%06%600%0A%05.%22%0D%14:%02%0C(%1C%00%05&%128%1E%1B%09%0C%16%1C%05%04%02%1Dk%7F%18%02%0E%1A%11%11%18%0B%01%147e.%19:-3%193%003%03%18%11%0A%0A%046%12%04%06%7C6%7Fu%12*-'=ybk%15#+y%07*-'b%0A$*2#'77?.%25bhfzvzb%3C%1E9+%12#=%0018z)%00%17%1A%10(%0B+%1D2%12'%19%14%16%02%082%1B1%06%08%00.7%1E2%22%05%186%12%1C%06;%074i;=8s6!%1D%0C%0C%0F%0F%08%09%1E%03%09*0%7F%186%06%0Ar'r%10-%25/%06%1An/%7F%10$%1E6=!%14%17%1D%02%0E4%1F*?3%1A%1A%1C%14%086%06x%00%15%1E%19(%0D%3E%1A%3C%06$%18%18(%05%053%03%039%09./v%1B*%0F7,%0Ch%05.%25%0A%0C%1A%13%7B%02%7F+%60%7F:',y!%15%1D%19%0A?+h%0A%00%03%22%60!!%0A%03%1F6%1E%02%0C;&%20:%3C%1Bs%0D2%7F%1A%04%0A%7B4=%1B2%13vm%15,%17%25%7C5dx%03%3C%1Em%12%0Ap)%0F%20%15%0A%00%12%0D0%11%1C%221%0F%1F%0A%08%15%1C%04%12%07%13t%18%3C%00%1D!%07%22)3%25%0As%7F%00,%18%1F%20%12%17%60%0A%22%04;%09(:%20%1By%195%172%04%7D%0A%16e%7B%1B'x=';%08%1A%0A5%3C%08n%1A/%0C4%07%07%0C%186%60(5%0A+%0F;3)%1C7/d%3C%1B%04%023%09%04%19%04%02%1A%7F%02%22%20)o7#+?%09:%14%0E%02%1E4l%22(%04%0D'%3C%02%7F%19;~%14;%0A9%0C?%3C3%080%0D%1A%0A%03s68?%17%09%0C%20%1E&r%01$%12%25+%3E%01#%0F%3C=01%7F%09$%1E%1C%1E%07%0D%08%03+%1E%1E-!~%10?%3C&~%098'%0E%18:z3%05%08%18%19%0D0%11%3C%12%11%3E%1C%14%1A%0B%12%1D%1A8%04%00%0A,(%15%602,%18%18%1B%0A%03%3E8#)%12%7C6%7Fu2*5?%22%3Cp-.9n-8.a890%3E,m%01!758%13./5%7C%7Cs%7B%7Bu5%053!%1744%1B;2%7F%3E%09%0C%10%1A%1D%0C?8%0A(%22%13%06%1E+%07%02h%19$8%1E&%0F%1B%08v%1B4%1C$%25u%1B%1A%12*%7B2?%0A2%20%05;%03%0B.%09%1A%00%0F%09%18%60%0Fx%3Ea%0A'%06%05%60%0Fl%04-%14=%16%086%11p%02%00%00*=.%0A%08%0F)%06;%0D45%20%1A;%06%0A%1A7%0At%12%0A-8%0A-%1A%3E%181%1F2$%02%08%19zy';m8%05%251%22j%09%0C%0B$/#=32%12%06%187$r%7Fe4c%09%0C%22(%12%14%7B%00%12!%20%25%04*d%08%01%7B%034%04&%12%01%01%14-%07%12%11(%05%22%0A%12d(%07%3C%7C%0B7%06v%09v.%09%0A%16%06%0A%18%01%0A%19%06%09%1B5,$%02&%03%16%1A%00(%09%18%3E%06%10%18%17%15%04%20%0A;))1%08%15%25%08h%02:%229%0B07?%06#%0Bl3%05%05!%0F?!%0C%02%7F%1E%1E%1A!%0C%12%1E%60)~*,%03%10%25%1A83%25%00%25%09%00%04%1F%15%15~w%1A%0F1=2%0C3,%12g(%0E%3C:,#%7B%0Ed%0C%0A%048(%0A~#5%090%0E/2%023%06,%03;%1615%25,7%16%09%09$/-f%06%182%033%1B%3C%0C9%0F%1E%162%12%1C%7Bj%163%0E&%1F%0A?~.%03%3C%1B?%1Cn%019%119%05%08%20$%12'%01.%1F+%0A%14%0A2/'%3Ef%1A#2%08%0B5:%16%3Cx%10%06%18%00%04%17%10:%01%00v3h%7C%09%20?:55,3$;748ayb%1152%0D%22=-5%25m%7Dvid%7Fm.%00+$%1D%05z8i%60%0A%18-)%14%1B3(~%040$%18%03,+%1F%11%03%17!z%0A%1F%25%10%22,!%15%0D%17r?)%02%0A(%19%0F-%13%1C%0F,%045&2-y%08%18%12%0A9&%1F%08%11,%0Bz%0Bm7d&%0A%02%1C78%12y~44&',%0A%14%1C%02&/&;%1Fr5%7B%1C%13c%035%1D%05%10%0498%7B%7Bl*2%11%25e%3C5.js~%0B5%20t%1B;%20%18%1C-%06%1E%08i=2r,jg9)%0C%1F%1B%06%0A7&%1F%60%089%02%0A~%01%062%04%3E%06%185%1E5%13zk%09y3s%17,%00%25;%7Cx?&%03%05x%09%14(3)%06-%3C%16%09%152%20m%11%11%14%0C%25%0F'-%0B%0F9%012%05%09'45%16%05,%60(%17%05%1C&9%7C.4),*x%1D%04%3C%19%0C%14oe%0D%02(%094&%0C%0B1;a%258(1+,%14%0D%06%7B%07v=%259=%0C#8%13%02%0Dzmh.#:%00mb%1B7%1B%20%17e#%18%01-%3E%20%08%20%09w4&%7C/(%00*%1Cr%25%097%3Cf%19-%7D%7C%11%08%7D;?/%1E39.%12+%15%1C~+%0E-2%1D%7Cts;%09$1%071+j%04$x%25%3C(%09*%09%7B%03/&'-%0D%16%1B$%09%02%7C'%11%19%1C%19%7F-%01b%0D%20%0A%7B:%16%18%11d+m#%25;1%0Dm%08%22%15%226v%00#%15rz3%60%09;%7F%0B%17=%05)#-%15$%07%198%7D%1F%3C%07%13%01%0F-%07xp%7C!%0E%20$%0E%25a6%00r%03%7B%04%0C%068t=%01%0E1)w*'5:2j%0A*7%18,$8;%1B%25-%00%3C%25%1C2.'3/%03c%0E%06rx%005,t;%037%1Fx%0D?#%0A%3C32=%20%11((t%06%1Em'%19%1B%00'(5.6%7F%0F#%1B3%20##%1E2;%0A%25,=$2%00%03/nh%2042%1C%17%7F$%04%06y%20%20s#%02%04%03g!/1%3C%13%1C%18r*;*%13%12%0F)%0Aj%3E%1B%14%07%7F%0849%20d%0B0%7F!%19%1F%1A=%00%0F(%25%1Aa:&1%7C%1B#d%080%00/6%04%60%02~/v%1F?3%0C%1F%1E'%09%002!%13%18%04y~;*2%070'%3C(%25!%16%00%18%3E%1C&*94-%1E#-%3C%05%1Fd;%20%1E%1B#%0A%06%20%02~%0F%1B'r%20a%0E4&*//1b%1B%0Bdv%13%07:0)%0B%14%22%3E98;%08%13%1C(8/h%13,.%18%08%3C%07%00%0C?)oa%22%05%1E%1B%1A%1F%04%0Bs%7Dk%18%0E%07?%1F%0A*%22%13%03;?%02%1B%03%7Dy%0E%3C%08%0F%01e%00%19&-$?*68%11%0E%0629%05%10vs$ag%03$%0F-%7C%0D3.+%11%25,2%0F!-%1F9&gwhg%7Cm.%00+:%12,/%1E#)z&%12%09%0B7(%22;%7D%15%17%03&(7-%1B%1F'%1E!%0D%03rs2%1Dv(%07q;%7D%14%17%0E%00%0A9:i%09)%19)v)%7F%0F%0F%01.%7F%1A%11%20:%0F%01d%25zz5%05%3Cn,%01%1E%3C%08%07!%08##9%00%13%08%1D%13%3C6!%1Fl%1A%098%0A%03%1F7%12q%7F%04%1D&%0A%0A%0D%18i%13%18%18%0C%03l%25),%0Az%18%1A%1Ej%12%0F5%06%7C2&%0F6$1j;+%15&%0E%03/*%1A1#8%099%15%1B%03%14%1Fan%3E%7Dt.%7D2%20%1D%05%20%03%11%1D%22%04%18%25%3C9&'%7C)%00%1A%08%07)%20%1C!%0A8=%0Ar%01d;%0C%01%1D5=,%3C%03%1B&%12%11%0C%02%18%13%19&%12%0D%18%1B%7C&%0A%0D!3%12%08%0A%3C%10%13.9%01%0Dk%7F%00%07-%0C%1C%12%18%08%25%027%16%09%19%2596%1C%07%04%12%1C6:%02x%08%0C+%1D%0E%07%22+%0Fe%0A%07%09~%08%07%06%7C6%7Fu%12$%20?n%1F9,)?b%14%25*%25%0F';%7Cxs%7Fwkig$%05%3C3%09&%25%1B4%20a,%18%0C%16%3E481%1B%02%1F%16%3C8%7B4%09%1B%0D%07,%17%093?%15%1E6!)%1E92%03%1E%15%0A%00%3C-%0F%12#%13,a%20d%05%05%049v%01%1B*?%18%08%7F/p%7F%22%0C'd&%04%095%13%0Dr%0D4*%22%0A%19%0D%0A%16'%3C+%1Ax%11b37%0A%0A%18d%0C%0F%04%0A%3E9/q:%0C0%09%0C%05-:%18%12%20%18%18%7F%1E%25%7C%13;%092%08?y%7C)%0A%04z83%7C%60%03%1D%0Bd6%1D5%08%0B%1B%19v%7F%22y&%1D%0D%60%1A%0C%01%050%7F=j%1By.)%06x%22w778%008ea&%0C%18%0C%0Av7%0A%04%13z%1E%1A'%18%0Fe%08%121%14%3E%06%0B%1Ad%02%0A-%3C%13%02%0E%02%01%10:,2%01%0F%0Bg%08%06%0Ca%0Bi%1At%13%08%03)%06)%0A%0B%1D%14*nz%1Aa%18.%0A%22%05r%15%1A%02%1F%19#c%3C%0B%0D%0F%00%0A9%08%13z%10%17%1D%0B%60%0D%14%18&%03%7F-1e%1A%22%03y%11d%12%14&%20%13%11%135*)6=%0C%10%1A%18%03%18%1D;%1A%03(%11/0#8j%00%3C4%13v%11%22%3Eq,z*1s%07%60%01%1C%12%0A7%1A%1E?i$%0F;(vi%116/%1A%1Da(%07$?%11e%12,%12:%0E7%08%05%1E%09i%1A;9%3C,0a%0C4#?65%13t%1C)%1F%16%0F6%04%01%1A9%04%00d%1Aa%1F%190&%18%18$%1F)r%0B.%20%13w%12$,%0Arw%3E(%60c,q%1A%0B!%1F,'%3E%1C%20%1B%0F.%0A%0B%00%18%19-%1F$+%12%0F%00%09%1B.3%07%16%3C-v%12#%13reo%18'%11%0F%0C%14%19.1%25%03)%12&%11'%1F%60#.#%0F%7F%1Bc%1A%10%7D%7F%013%0F%15,%09%1B*&%03%11%0D4%18%3E#%3E%201%00%7Fp%1F%00%1A%17:9%3Ca!%1B9%09%22%1Ea%14%12&1%20i:zy%0A,6%12s39-%11:%7D/%1A!!(%08%04%1A%257d/r%19z77%06%0C%1E%1E%01%06%09y%25%06%13%11$)$%08-%02:.%1A%00%08%15))~%1E%08?%1A%0E=!%18a%20v%0A%0F%0B%3C$%09%0E%00)%123,(/%08:(%02%1F)%18%16%1Fy,%1F%0F%11r9%039h%1E%1B%0F#y%0A%19%0D%20%01%3C;g%7C%1B%7C$*%12%20%07%11&nd%1Bq=#%09%3C%00j%05~%1D%1C%7By%02?i6;x%06%0A%12%12%1F+%05);b%1F%25%0E%0F%18a)q%04%0F%3E%04(.%7F%0C(%18?9r;%17%03%07.%01/%1Df%1B3y(#7%12%1B%00%08;%3E%0A11%0A%60(%60%03%22%02%17%02z%0E%03,*%7F%60#/%0C%20%18*p%1F%0D%10i%13%0F%03a/%00x%19%3E%7B%3C6:pr+%18%0A%1A%15%0E(%18%15%7Bx%1E%3E6g&%0Az%18%11e%3C%12%0C!%15%08%0Fp*a%14%00~%05%09$,7*)%13%1Fh%05%1B%251a%14%00%7C'-%7D%10$/%0A%07!%0A'dq:?%16f%0Cw/:v%11%190.,%1E:%3E%04%18%0F,%00%0E/$*%10%1B%0C%05!&#9%3C72z%12c%08u%0A%1E%00%1D1j%3Cy%20&%086%04%7C%0A%22~%02%13%16o%1B%1A,~'=)8%19;%1F%10%01.%18%1A/%1Be%1B8%08%1D6%08s%0F%02%19%0A:%0D%12,6%3E%19r%0D%20%7Bm#3w%1B%1C0%16,w(%06)%01%02%13%08%1F%08%0A%601r%07%0A8(3s%1B6%08%209%0F7%1F%60&%0A,7r%11r/*%07%1D%25%0F;%60(%20f%0F%22%0C/%13%01'1%60%25%0C%1A&%19%25%08%1B%0A'%07%22%1D%0E%0A%60/#x!5#,%02%18%0A:,%02%3C9+8.%0D%06w%15*%065%0E7%3E%11%7B4%02%7F:9./%01%09%00%3C~t%00(%0B53)%1A%0F%17*%22u&%183==%00#&%18(%7D.%7F%09%0B;~%10(%03%3E%11%1B%05%13w!%60v%3Czb%1B%25'-.:y%049%20%22%20u%04*,%03'5%3Cguzznd%7Cm.%00(%06&%10?=%0F%15%1E%14%1A%09=%1C%18;r%0C%08'%01%06$%25%0B%1C)%04#%0C8%00,%14*%17%1E'%7Bp%01e-;%0A12y%3C%11-%20%13,*%3E%18v%3Ewj4%1E/%7C%05%12)%0D1%18)%1B%04%08%0A)z%101%089%3C%17%0A6%0C.%3E%044%12%7B*%0A%1C%0C:%0F%13#%0B%0A2%19j%0E'%08?%7F%12%06)j%7F;s~vn#&r%258=6.x%05%04h#rv%3Cy%60i%7Dt%06%7D%09&)%17%11x%3C%3Cz%05%0A%05%0E8%0A%22%1D%00%01!sv%25%01i%1B%00)%7F(%0A%3E(1%0F,%14h%13(d%01%0Bg%0E%09~7%118(%17%7D83%04x%0E%0Ca%1Be%7Du)(%038%7F%1B=%04%1Fi33%20%0F%1D##%0A%1F9,%15%1E%05:%1D%11'(%0E%11%22%09%05;%25%02%1C.f=-%01%0A%00%03r%11%1F+)?%3E%07%19%14)%25~%20%13,-%13&4%7C!i%7B);883%19sx1&l;s%151%228&%07t=%01n#8%05s%1F:%11.;%7B%25!=1t%1Fa%3E%14-%15%7D%16%1E%1F9%02./+hx4%06%1E%1A*%20%15&(%3E%20%11y%03%07+*%11%0D%13/-%7F%3C%14?%09!5:u%7D8n%05%25%04%3E6?%25%7B%11%0E%7F%13%12%03'%3E%05%13438%60%1D%60%1A&728!1;%14%1B%06#*-/%029=%7B%25'%0De!%08%3E%07%0C%3Cra)1%60%01%15%60%03,-%00?9%02%20r+%12%07%25%17%60%02?%07%03%0F)6%16%02)y%18%1Do%7F8w%7F%02%16%0A%01'd%17!!;#%7F;o%00-%17%19%0C:5%60q%03==8;2:%04%608%02%25s=6%17%04-%00'vh%12'(&2d%13'%3E-m!%1E%0D~%17j1&%07%05(%204%7C%05#%09,%02%01*3%14v6%0C#%0D$%0E%16*98')!%1C%13%06%7F3%08=%10%187%14%11r%1B/(m%1A=;##%11!%02q.%1E8!;w%1A%02%0F%02%06%0A%00e%3C4%02.%3E!3(%010%11%1C7#%1D%20!'3%08%20-(!%0D'%12,3e%09%17)-%05y+6!*%13%14i%07%08(=%0C%0C%132%00%0A:%0B%1B%0A7=*%13%19%08%0A%1D%05-%0A.u%60%164%01%1F%10%1D%0B*$.ys;%145%0E%0D9(7%1C!%19*=o%22.&2%19=f%0C0%12%1A%1Fh29%0E=8%3C%06%0C%07%7C0%043.r%18of/%14%0F%1C#%25%02s%11%17rb%1E0%0E?2%09-%0F,%7C,%01%00%18%60%3C0%03%22%19=%18:%1C%3Enx+02%11;.4n&~7%07*%0E%1F%19%22$%22mf%60%22%7B4=b=8%12%1F%607%0D/%03=h%19%01%17%22w.6r5%09%18%14%3E$%08~v%14%60%1D%05%09%0B%11%1E%04%05%7D/7::%15%7C%00%10%1Cs%0A%22%7D;%11-%0D%07vl%1E/*%1E%0A%016z%0F%20%00k%25%60636?%0399%0C,%1A5%1C%12%01'#5%1B%0C3%096'%7C%0D%25%20=%20%040s%00i%1Fs/%184?%07%01%11%0F%04n5%7B%15%22%3C%03%06x5%13z%17a%7C$%0C;%018%60p%07%1C=h1r%0987%1C%20%19!%0F#%05%1C(%0F6%60%7B:%043y%60=%3Cj~6%0Ed%7Cw/%07r%22%0Ap%60%3C?f%1E%11=9%20%01%3Et%1B8%0E!%00%0Bd%08%18?%3E9%60v?%25?%02xx%12?%13%0Drer%3Exq%60%1A%3C%1F*'%04e+%7B#w%13;%1C%063j%1Eza%09%1C83%0942zn%18%1En(%18%09*7:2%0E)%13x%11f.%0D%1B%08=%0A$3%7C&%0E%0A3y1+%08='x&,k%00%00j)w%09!d5%0D;=%08,#%7C%086%20%7B2!z+31%05#%16i6%13-1~!%7F%13%04/%0B?h9j'e%10%12%1Ay14%0A%17%1Fj:%1A%0D%15%0Cn%13%1E%0F%13%20$'%25)g%1D.$(n&(%22(%18j%0A%25+%1F%0B%0E*%20v)7%01e%01%141a%1Aes2%03w%0B%0A1n%1C(%15%1Ay+%1F%1Em%1Dz%1B%1A%20r%0A%07'%13+%13%3Ey%17%7Fv%08%7F%01+%09%1C%11%07y%20%09a%09%09z%11%1E!o%16'%0B:%002%09/ndy%159%3C%05%06(862%06%06wi1=u)%09%13)%20%17%7C6:h%0C%06%7Dy%0Eh%05%11%25,1h~%10!%20%093%0F%11%20%161b&n*-+%13,%18%03%16%13*x&=x#%11%05j%03%1E%18:y%19%7Dvk%08&w$%00,%20s%15yw%60c%1Fy)%0B7%7B%1E%0B%12%00:%00&%14rw%11d%01s%13%07%0F%18%60%22%00=56%0A%15/:7%3C#%02(%1Eh%0A%192!~+d%07y%11x%08;%1B6%1B~/c%7Cy%11%01j:%01t%04zv%1A%1D0%25y#%1F%25t%18%06:e%01%0C'a%20%04%3Cn%11$h&%20;;%7Bk&(r%7B#%18%16%60%0C1%1Eh%7F%1B'-%03k%17%3E$(=m%08,;%7F=3#)%05&%09j%09!p%18(o%03%0A'%1Cv1%7F%7B+%3E%7F)%08%13%16%1E-%03:%0Dt3%02%0F%08%0A%0E%1F%14%0D%07rp%0Del2:%13%1D%1Da'-%17%22v%1Cc*%19!%7B%159%7C%12~%25a%193'%0F%1E!)%7F%0C(#m%12.0%02$%603s3d%03%15d%0Du,%0217-4%03v%01g8%25%07zn$2%0E%06vn%16%1B8&%20%0A%1F%0F+%13%7D%13)~%19%19%16-%1827%7F%1Bm)-t%044h*%1F7%1A'%0F%7B%0A,%01%7F%1B7%20%09%1C%1F7%22%7C%04%1Fx%0A%07%06%19%1F~0%00&q9&%03grv%1B#%3C%15*%08%1Cz%00;:+%7Bav5%08&%11&4*%00%04&+%13%1Dd7%7D:%13!%1Av%3C%090c2%0B%01(v::%16%60'%13e%20x%038/7%01,r%14%0D3/y29%20%0923-%04:c%600%139/b%0C4:+%1F%00$%12r~r%03%1B%0D)%04!i/r$%0C%1A%12%017$ao%08y2%60%1D:c*#%7C%7Dl8*%0F%07y%1D%1A%0D8-%1E7%7F%01.d%3C%3C%20%0Fv%0C%3E%1Dg%0C1%0Fa;%14%1F%252%1D%00%08;8s%05:%7Fy%07%3E%0Cn3''%22%01je8x:#v%13;(%1Fam%03&n:=%0F%1Fx9'/($%60%02%1F-v%7B%1D%0B%60%1A%60%7Bd4%09%0Br%7B%13#%22'7fsv%0Av%12%04%7D4-%7B%13h=%12%19a%0F$sy8--*-%17%097r!2%131?-%20*5d%205%05%7Bjy%14/%1E%3C%20~%7Coh.%03%06%7C7%07%226%60%03%1C%04$%08%19%1652%12q$%17;#%04q(%02%0D8)%0F:%19%0A%1F%1E-%1Da-%7F%120d%01%1E%18,%0Dy%3E-a%01%10%0E%3C=%043(2~%0F%3E.%081%20a8%3E&%25%1C%1C;%3C.%07!r%16%0E%07y%7D%08%3C!-.%1D#%60:%069%08*%18%1D%25%02e%0C%158%1B%01=le3p%118#f=u*%3E(%068%058z%17$%11p%1C)rez%159!:%00%13/.%7Cl%1C#s%25%7C)f8%0E.~6!%05%07%1E%1Aa292%1B=+*%1B#%1C%22!*%1Av%7By49%11%17&%14n#1'%7B'k5%08%141e%0F%06%7Cx3%0603,%02(%3E%09bx%20%1B%06n%09.%22%12,,=%0F%08%06#%3C'r%25%60%0C%03%17%00%181y4%1C%08%0C=%02%00$%226%04?7%06-(%1C=%1Db%0Cj%7B%7F%13dz#3%1C%1F%05%1B%0C%0C%03%12%1C%04+%11%08(a%1F%08%11%16!9%09y%7F%251%13.%16%19%1B%09#%055#%3C%10h%1F%06&+ob%0A%1B,%7F4%1E!4%12/(%18%20%19%25%0A.7s,.-%0D=%0C%14=~%10c-r%7C%16%1C%18/+%7C'%1B%04%06;x%1Daa%7B%20%08%3E%1F?%20/x%08%08%7B%189?%14*a%0E%13%0C%7F%09%1F-n%11e%60%7B!%12%0Fy%011%05%12%02%7C%1F%16,w%04%08,%03dj%0Fy(g(r%13%3C/%19~#%1B%09+%05r0%7D%0B%1Df%0C%0D&%7Cm#d%22%25%196;9+s-86%04%03.~%0C3/%12%0D%03%1Ae%02&%7D%02%1F%09*4%1F%0Dh%3E%01$%0E9-%7B%03%0B%00/5%7F'(%1A+0h%00%03%1D%073%08%0A%25%079%1A%25%1A%022-%10%7F%0C%02%22&%00h%0A%20&6%14%06!%14%18w:7%0A%03%7D%01%3E;%1D%04%07%031*%0F%00%1E,%15%0A%0F4%3C8a%15%0Eu/'+%04d.;%25h%00'%0B:%187$%20%10%0883d*1/%17n%15:%09%1Aw*:*%108%0D%0A%22%067%006%16*%09/%0C%1C8;&/$)%1C(%04+?%7D5%04%606-!%0Db%0E4=+%1F%3C?%11%7B%1Fa%1E%7B3s%1B?e/pzx%032=t%3E%0D7:%05t%0Dz%03%1D#q%1By%085#n%7F,%13&#%00vs$ag%02%0F,8%3C'm%06;84%0F()bke%7Dy%7C~u5%050z%222%169%04%7B%0B%008%22'%1C%14*%3C*%209%0B%0F5;8%0F!%1B4%7C%0A%0A!(%03%00%18z%19%12&%20%18%0D%1B%0C%06%03%02%18y%1A%0A!*~%20)*:%13%1A%0C:%3C%09%0A%01%1Ar%11%1Fq;%207%223%03x$)9=n%09).4%19%05%7F!%3E%60'%0C%198%159);%0D%14kc%03%10&%25+g8t%1C%01%3C2x+%25e%60g%0F4$%7B%0D2x%07%3C%09%16%01=-%18?mb%1A%13%04;%00a9%0B%1D%04%1B%0A%7B%03%13x%18%02%020-$%0Dg%7D0%7F!r!%25+1z/&%01t%7D%20%17%04$-%0A%04%11%08%0C$%1E%0Dl%11%0348,%08%03:$%03%165%01?(2%0C%0Fg%60*%1A%7C%13!d%03#%0A7&.%0C%7C%095e%1C%05?y?%3E9v%7D%3C;%03.u%0Aa%1Dc9%09-7:1d1%25%09*%1D%0202v%03bx%12%60*%16%132n%09%3C%208s1%1Aer=%7C.r%00%16%17d'x7a%7Fd%0D%7F%186%19);%08%0D%08%1D#%0C*%206%20%0C%0F8a%162/;/%1A%01%14%0F%08%0D%0Brg%13r%0A%00%0A;sq%19x,%12%1A+%20%1B+4)u?8?%3Es%17%7D$-f?%25d;%12%3Er%10%0A(ja%7F%22=y%17%3Cz%25d/%00%00y%03/4%0B*%079%1C%7F%138%25%0F*;#b%12%11%0A%02!%03&#%1C%19,;~/%13+k%18y%17#%04:)%604%1891%7B,#%0D4%15f%3C%17z%16%16%3C!%138;+%13/'2/3%13!tr%16.%06%0Fs=&2%18:$%19%7F.%04%1A0x4%3C$,$%07ea2#xs%16/%7F;%10%05-n%7Fy%0Cz%1Da4(1r%0F%0A%3E%08%1Bz+%18&z%22%11~%1D%05%60%03%02'%0C%18%00%0B%0C41%0A(y?%7C%09%06%06%17%09%22?7s8%03=,%16%0D+%134%1E$#%09%12)26%25s3%05,#%1F%208%17%3E%22)6?%3C%03%1A%01%09%1A%14.%15%20%17%03%0F%0A%09%0E*%12%06;f~(%13%07i%1B2)%02%20%0B%1B-%13%0A/52*%0F%1F,%0E%12*x%7F,/%1B%03y1;78%11s%04%043%1D%01#%7D'%0B9%7D,-%0B;c%002%18%7D%10*%18%0C%11%0D)5%0Cj%13v%0A?%07(%0C%1A%0E!s%00%08%02*%19*0/%09%0D%15!#%3C?7%06%1A9%22%19%1D%00%0C%00?%04+%60%7F9/%14-;)2%7D!=%18!'%09%07%10%7Bs%19%138%1D7%3E%0C%7F%18:%1C=3%0A%06.:'%0Ezzd-zm%08%228#8((b%1A%22*#%22%250%7Cyxr%7Fu5%053!%1744%1B;2%7F%3E%09%0C%1B,*ae%01%0D%08y%16%04%0A%182'1%1B%1F%0C9%03#%18%1E6%129%14%12%09+%3C%0B%1Fb%07x%07%0F.%00%7C%05z%0Cr%03r%17%0Fwj%05%22p%1F%0Dr7%3C%1B%1E%07%0D#%13%0Ey:%1B%1D%1A%0C%07%0F#%20,%13%09*.%1B%0F.%0A!%0F%08%1A%0B%0D)%00%14?)*%03-9d/%0A%25%1A#%606=%09m%1F%09n%1A%03%1E%22%02%02%19)%08%14%0A3%12%0F+%19%08$3%04%1Abd%0A%0D(%1B;%024%1D)%08%08%3E%08%0Ee:%04%25%1B89%16e%202%0E%3E%1E%09;s%06,%15%1D%19s%04%14%14!%1B,%19%01%1Eb%0C9%1A;5%1E,2%22,%1F2%1A%12%06z/!%05%10%0E%01%20%11%04%20%254%0A%11%1D6%04%1B%12%17%18%00%60%1F!%18%02%03%00)%03(1&%03y%16%05%18%11,%06%1E%02%13q%18e%0E%1A%03%02~%0D,'%04j:%18%0D*%05%15%089%14%18%0D;;%22;%08%01%00%03%0Dm%60%0F/!'%20%18%18%0C$%04n%1D%0C%072%1D%0Eex%073%011%12%18%05%12%1F*%14%0F9,%7F%0D%13=%22!?2%15%05#%0E4%1A%13%063%0A#1%1E%7Fw%3C%160%09%0C%0A%186o%15%1E#%20%0B%0D1%08-%1E%0B%0B$3%07%3C%25.g%0E%04%1Az+%1A%25%15-%06i7#3%02%25%03%01z%0C.%17%0Cb80%01!m%17%19,%09%0D%18%14'$%05%07%14-zm%08%220=)m%0D/7$*.g%7Dh%7C.%0F9$%00=/%1117h7%12%06%11)=3%7C%0B1%0Bh9%12%09%05%02#%13?%0B1%06:'%12%10%0A%0A%1B*%7B%06%0D%09%1D%7F%07&%7B%03n%14r%00%60%1Dh%06%0Fxx%160%06%1F%05%60%0Fm1%1E%08%1D-%01%1F22%09-%0C%1D9%05%08%00%1D%3C%20%0E%0E%0F%00:%0A9;9%12%14$%00$(j%01%01%07,%17,7rv%06*0%7F%25%00%20%0D*(1w%07%1D%18b%1B,%0F%0F%1A:%0F%0F#%162%12:1%0C%0C%3E4%1E5%014r%7F%22%08%3E%18%3E%02%1D,zz%11%03%09u%19~(f%09%0B%06%08%11?%00(%1D~%0Fc%0E%07~%0D%0A%07;%0E%1E%16l%03$%18,%14!b%02%0A%7B%0Cm%22%1A%20#%1B%11;%05%06%059(%17%1D%02%1Axj%02%12%03%0A%7B#%01%1F*%05%043%13%0Aw%7B%01%3Eh#1%0D'%3E%02y+%1D&%1C%14%25%0F%0E;%0A%60d%25%09-%3C'%08,%0A%00%14%19%1Fr$%7B3%02=4%05%0B%14%14(%06%07%021h%1F*,%1Bo%17%0A%10s%7C%13%1C/%03%06%25%15%0A%09%14%01#%08%1Ex*%7B%05%16%11%7C3*%0733%1D6?w56%05&%12%0A%01%17~%058*6%01%25%0B$%09!%17$+%09%25m%25/2%7C-m?%02y.%07%12%193%03%0C/%08%00/6%06,%18%18%0D8%18%19l)%20%18(%06%11%13z%0E%0D%1B%1Dd%18%22%06%1E%0E%17%1A%11%1D%04%1B'%22%2019%1F%04)y%1F%08%1A6(p%038%09%0A%12$:%00,%04,%11%0E%01%1F%7B%051#x%1Cf%09w%02:#%00%08-%058%1A%3C%19%11#%1E-%0A%12%0E9%00%3E%00%7C%0F%01%09.%7B%06q2w%164%09y%02:%08*%3C%25%19,:%14%028%0A&%1C%11!#%03(%20%01v%7C6%7Fu%13$/8:%3C%3C'%20?'6%3E8m%22%1C%3C4%22m%7Fwlcrrg+%17%22%0D%16x%7F*%05r%22%1D(ad%1C%04!%07%12f%1E&&%18%17:&+%12%3E%0B%1E%22+~!2%3E%1Fu%1E+%0D%05%20(%09&1%11%02%0A%12%16%1E%03%1A8%12&0%021/%0Cz(=%3E%12;%228%20%1C%17*=%16%04/0%7D,4%1A%02%16%7C%18(!%7F0y%1D-%1F$t%05=/%60%1Bw%0A%3E%3C%15!%05%11v%3C8%1E%00*!%1C;%02&(%1C%17c%3Ewz4n%3Ey4xyjc-&%01':3-+%3E%7D?%1F%60'(-a%7F~/%13%1E,%1D1-%11%19%0D$y5y;%03b88%00:-1%04.%00e5(%197%7B~n%7B%7B%15%03e%17%22r,=%08k%253%12%7Cw?%1Dzs.x%60$!-y-%08c9n%7Fa%09h.'1*/%14%7Cv%13%08.%1A%3C%16%1E%7B%0E%0A%254%03%22(%07%01%171%17%13%25%0C%0Fd%25%10a%7Dn%01%177%01%25%07%19%05%11%1A%7F6(-?%3E%07vs%3C)1#%15%19?3%16%05$&#i*%19%0A%60%0B%0F%04%1B%13(%7C%3C&%7D'8%08/%3Cz%02s-%00&#ps(5;%1Dq%20$0#%1Ev;:%60f%12rrymi'q%7C%1B;%19s%11%7B(%0C#(%13z,%1Did%17&8%1E6%3C6~%3C%0A(%19q%60&1h-.~ejg$7!%18m2%06j%09%19.:$%069%7Bn2%60%0A-e/%14%0Fy3%1F%0Dh%1B&%09%7D%15%12-,,$n9%08%0E.%03/%7F=q%1D&6i%0Cw.(;d%1B%0F%05%07%03%1Edx%0C7.%20%3C78!%3C%25r6.4v%17*8x%0F?)%7B%15!%1E1'zjs%19+%1C%22-%18%7C3%14%0Fy%3C%1F%16%7F=n3%7Cnc=%10(%05m%20//$)4%25-%0B%13%00%1D6%7C%16%1D%1Cm%07r6))6%18%041&%0C7'%05$%19%25k=30d%200%12d11%16?%16%13s%0F%7Fr%0A%1C(1v%3E?%7B%07d-%12g%3Evy%25%1E%08%0A%20%18y-%1Fx%0F%13/%0Af%60%0E%7F&+%1A%0F%0Bs%7D7b%1B%14!4%12%02~8%05a%16i%18j.&5d,%22r(2%60:'yz%1F(*%0Cr;%12&%05%14=4%14b%1Ay'y%16%18%197%0E%00(%7Fd%13%7C(2*35%19%0F%1F1%1Bx:??*%08$%7B=6%18%3E6'w%0C%1B%1E1.%047e%1Fp8z%03%7Fz%14=a%14)%22x%1Bv+%7F%7F,$??;-5,93%7F(/%3C%3Cl%17%06%14(%14k%1Ed%05%02w%03%13r/%08!%60e:7*%18%13fz%19)%20l%25=%0Br,%15%7F)/(%066%7F3%13*%176%083'r%16%20&%0D'yvk#%3C'!%1C4%11%25%06%1Dy/:%01+1%1D!%05dv%19%09#%00(7?v%0F%1E%25*(9%17g/u&%06k%1D%05%09%19%20-8-'%22%16ia%0F+%22%07/%1Es%12d%19%08%1A*%22%60%0Bh6%60%0B,aa%17x%0E2%25ji=%14y~%0F%08r%03%1B%095%1B=8;'%10%7F%22%072%06r%16d%09=7o%04%7F8%1Byh%16%0Fy%03v%0C&!rdw%08f$%19%1Bah(%03y/4r%7B%02p%7D)%0E1%7D%0Dd45%60-u)+.%0A%04%14=%22?a%0D%15%18;#%04%0E,%60%188)%05jr;%0A%22%09p-%3C+h-%19%008%16(%00./v5%1B%19%02%7B%1C?%7F%7F1%11%0D%0F:%01%15/78($s%60~%15%07?%0Br%04+%7F;$%1A';:%25s2&:*%070%7B$%00%3Cs%03%07x8%14s%04)v%0F&'0%0C(n%03r9%1A%3C/%3C%3E%07%7C*o)26%0A-%1E%0A-(#%0Ao%22%18%02-*/%00.%18%05%0C%115%7D%0F%604i%1E=4%18(%005*5%079%0C(%3C$%20%3E8%13:v%20%0A0%1C*%22%0A=%08%15%7D%16%1F+7f%25%0D'%1D%60?%7B#-%01%1B::%10,%7Co%07)%143%22%3C'%3C%08.%7B%03%15%1C53%25%09h8%0C%19/%1D7%1Ar3%1C%09%06$%08':=%098rr%037)%0A%25%00%07%0E%1B;%10-;3%60%0F%00#%062&%11%0C%7B%04%1D7d%20(%22,%13x)%066%0C8%3Cr()%10%11%13%0A%19-;%25%1F%0D%01++%16%1E%02%7F~;%3C2n%22=%0B%181w%1C%17%60!%7F%16%0C%0A%09%15$3~%08%00%05%259%12=%13%7F8%07%0D!%3E%60%11td%0Fr;,%09%25%09;%12%1Bn%0A%1E6:3%10%03%14)e8%18%1Fwo&%18$9wmf%7F%07%7D%056%06%7F%04%60%05%1B%7B%08%0D&~0b%7B%14;x!%18%7B%139%05!6%1B%04.%7D7h%18#%22%1C?h%0A%16-%02a;;%078%1C3*%01x%0F%1A!%3E%01%15-,2%7B%1B-%05%03%1B%0A%06%1B$6%1C%01,%10%09%03i%09%00%1B:=%1C#%3C%06%01$?#(%098#1%18%255%60%3C%16:;s%60%0F%15%1F%1B%03%00:%17b%7Dv%05%04%1F%12s8%01?%08%25/0&%7C44%06x%08,h9!%17%0E&?%7F%20(%0E%06!;%07%05%20/:%14%258.%19?f*%04%09%1B%0A%16%06%17%05%22%0A%7F%00%103%1F?%17%0A%08x%198%03=w%25%1B%0E?%1By%12%02a*%1E3%7C$!?%25%0A%09%7Bn(%190'(%16%1E%08%0B%00%20%15!%0A'~%05#%04%1F9%099r%00='%09%7B%60d*+%07%0F%132~%0D%11%16mg%60%05%01#%1E3!t#(n%082u%0D;l5%60x%25+%1D%22%1949%0C+%19/%16%0A(h9%1Anr%20l%3C-59a5%14%0Cy%03%1D04.,9%0F%1Fi%033%04%16?%07=;%7D#%20%7F%06vy%1Em=2%11%1E%2004#7%118%14%151/%038.%1F%0E)-'74-%02%25;%03%3E#j%0Av%0Di?8%60%1C?%16%05%10%09%0F;%22.%16%03%02n%04:%11)y%1A%7B%12%02%13%1A*%12sq%3E*%01*8%1B%0A&%605rp9;+%1C%19#:%05:%008%0019%1Fh1%15%1D%7F/3%12%14.!o!%0C%04%20%19m;x.&4+%1Bs%07z'#%02%1Dw%09%3E%606%19%12d%1A+%1E%3E+%00%7F%1A%7F%1A+%0D,!%03*71%22%0A%7F%04%149%02%17%02%19v'%1E%12%05%0F$%0C/%1E?%1Fv%08%7C%3C7'.%7F%1Am?d%20r6%16?$%08%7D*%0E!%1B%0C-v%3Ea%1C%05%05:?%18%1B4%13%08(%041%16%0E%182%1E%0E4%1Dw?%17%1E-!e%18gz$8e%3C%20x($%7D%0E%03%7C%14=x%00'*(;%1C37%1C*%00ejb1(%1F%00%131y)%1D%1Am#3%04!??5:%17d?#ez.%06%7Dk%11%60/%07%00%03g~/%1F%08%16%7B%0D6%7C4%11a-%09-7r%02=%00da+=;0%00$#%1E%7C%25%03%03/1%04%25%1B%1C2c%1B%10%07ym%19%3E3%18-l%18%22)(a%0B%00~6%7D%1A0%07$%0A%1E%14%60%18=%00d%0A6%0A1%03%1B4%03%3E%04v%0F&#)d%1B%1B'/%07)w=%00*i*j,%05%1B):u=%1E%1F'%3Cu%00a4h9%04%209%11b%7D%0D%3E%0C%11%15'%10d6(7)%12$%09%16%20*'%18(%137*%11,%1D%60%06%7B#8=%17%1E%0D%0C%1Ba%0E=%035-%023%7B%7Dx.%02%1Aa%7B%0B#&1%7Bs%15=%08%1F#%05t%1D%7B-f%07uyv2%14#%25!w2%1D(*%08%3C1%05%09%15?;=%05~ud~%03%22%1D7,=%17%0A%0D6%09w2%1Br(d%1A%09%12%25vx=j%08rv%7B%1B%081%133y%1E)%14z,%13%257g$%09*%0Bi%09%08n%05$j%15.%04%60%1F?%03%01%12%18=%0F%15%1C#x%0Dm%07y'&%0Bmd-n.%00/6%04s=(%0B%60%7C'%07%7D%16d;j%12%1Dr3%22%00%13e#2%03v%20!v&%60%06)%01%11)%1Cj%0A(%12;%02%16(*;%08y%0Ad&(d3$%7D6;%18)v.~%0F=d%19%7C%3Eh%7F%057(%1Ehf#%072v%0Bi%7D72%16#i2r-=+(%01%0C:%25%15h?%1B%09%7C?%06d%25sa,$d7%07%03j%16!j8%00%173%087%22%220%25%1Dn%01v%0D'%11%1B*~%0Cb%1B%0C8e%09%7B%256%25%3E%1F5y.,%7Dl#)3%04%19%09%14%1Br'%1B%1E=%13)%60%093%60%18%10%60(!2%04%09s!%1F%7B%1E%11&%182%16%1Cj=%20%14%3Cy+%0A%20.*%7Fsz%3E3%14%18v%1C%03%1A%7F%20%22&y%12%12%0Cn%0F%03+3;(3%09!%05%1D$3%05+%1Cs%04&%19%1D%17%07/%0E%19%1B%07r%14%00%7C*%19&%25%12%7F%0C%16%1Cu%1A%7C%0E&%040-yk%182%10%19zr%079%09?%19-9%3E6%00x%0B$%1E1swi%06%1C%1B%1D+%1C%20!.%0A%09%1B4$p3%07%3C$%0C%1B9a7?%22*%13%1B!%3C$%13~';:#7%22%071%039.%25746sn%1B%0F%60%14%0Fys%20%17%02zu%1A%1D*%1329~%03n%01=j$%1A/%11%129%08(%0Ac%029s%22%012%0E%03%03%09/%7Fy9$%02%20:()%7D(%11i9%25.=%1E$1n%09+*%1F%0F%12%1A%7Fo%1C)%09%06~7%13d,%18%18!%3E*%10*y%11%18%07%16%1F%16%0E%01%0Fj%08+%15%00d3%1D&%3E4%05%10&'h%19*w%069h%7F8%20%0A%7Fv%19%06%0C/%0B%15%09%60j;%1D%016r)?%09=c;%071~%1B%25%3C''%0A%1F8%7C2;%7B%1Ef%1B%22%18!=%22%1D*3%3C%3Ce%08(%1Dy!%11%12qs%7Bm(%1F7%1Ayi%16%20/%7B%7F2f~%10dy/%05(%0E%09%7D4%1B%01%19?%0A%11%18%7F+%20%7D4%17r%0B%11%056!#%252%1B%0Be%1D%13?*-%12x0%13%1D=1%7C%0Ay%02%0E1s%0F#%16!ez.%1B-151n9/3ix%06%7Byi%3C%203%7Be6%04%03y!,!*%0F3#:%09%07%1Cs.-/%22%7B%17x%1A%1Eiy%19%0Ca%1B%05$-%22%06%12%07&%0C%0C!%3C%17%13%20%22;%1C%13%224%0A%7Fn%19%3E%19%06%7F%1B#z/%08),%06%00;%12%3C#es%06%09%3Ei?'+%0C%19?7%3C2'%7B%60%01%05%1B196%3C%22%06%1C%20%1B=%0Ex*%7F%0C;s$(%1D%13%09,-9v%03h%036%0C%00-=x%0E%18za%09z%0B%7F%3E5$%09%19(%14%20e%07y#%19?fx%08%1E%16%1D%1C.%02,%04%09%1Cz%22%0C%7F%609%0E%08s%195i%227&%1Ck%05y6%13%19i(%7F/%22=+%25%204%0D%0A%1E%08%01r%0A%19%148(y;%04m%1C%07p%0C%0D!%05%13s%04e!&9%0F%09:%3C%1A3%13z%08=%1B%0C%0C%3Ea%09%07%0F%0E$w%115;6%0E%18k%17%19%11%1D(3*z%0F8!+%229%0C%7B+%129%60j%1Cz1%1C%7C7;%17vg%11%12%7Ce(%04#)%00=%15%3Cr-%13%04hc/%14%1B-%09%1F'03$%15=%1A2%1C%3C%0F%18.%18%1D%1Cj%3C(%20:e%00%22%0D%0F%18%14-%01%12%22%7D%04%00('8,%0F%1A3%25%06s%167:!53*%03%17%0E4%1D%04r%22%13%19%03%08%0C%25%12%0A%60%18%03&%0D4%606a%00%13/%18'%0E%1D%09'd%7D%0B%09*%08%02a(%04%7Fy%7F%19+%17%0E4-'/%05%1B;:%7F44sp%02%220%13%13%0F3&=%25%1D+1%1D%14%09%7Bw:%1Bl%168%14%20%1A%12(%03%12**o3%1D%0D%7C%03?%05-/$%3E%117./)%7B0%13%13%11#%02h%3C%022%1D%04!%1Ex7%7D%25+e%22%02%13%1E)b%1B.%1E?m%009p%22*%16%16%01'/%04:%08%0D%12%60%7D%0D%13%12x-,%09%1C%7Fw&%2575%1D68%17%20f$6%7C9a)=%25%7F~%138%7B.'$%1E%08%00%02%0A?%18%3E%0E.%1C%07%033%60%07%01%1Bm&2x%1B'%0A?y%20=%19%14%0A(j%0F=%16&x%0A%1Bal%00.q%1A=(%1C?%06&%7B%0E%02%05rr%7D%0Bc81%1F:-2%7D%05'(a%3E15%25%01/d.)1%1C%1E%20%06(%06%01%1B%19-;%3E4%0E%20()=6%13%13%7D%129:%15%60%7Cu%11%1Cr%1A&p%06;%0B=%13%04%20a+%7B%0D%13'%7C%12%3E%0E%20%19~hb%3Ew.4/%7F%3C%11r%196%3C%7D%3Czb%1A?8,%22-y%04#4%25*%3C%22g3*=))kw%7Dyuh%7Dw%7D%7B%60%7C.%0F:%184=?2%0D%08%0C%05,%0Er%1Br7%3C)#%04%0A;%1B9%1A%19(%1E$%18%03%20j%04'4!-%08=&)%1A%22%091%11%16%20%3E3)%7C2r:j$85%04%06%1F%01%223%00%0F%03%14%0D%0A3%09%10%1A%01%14$4%11i%02s%0A%25!7-%1B%02%1A%11%1B%036y'%3E#%19%04:78%01%22*%03%0F%0B%60%02q%7B,*g~u2w=b%12w/e%00%18&xx%7B%3C%25*y%7C%3C7%3Ex%02%0E%20%14g%04;%1B~+%032%1B%3C%7F%18a;nr%7Co6=s8!%1C79%09%18%06%00#:%04%1D%06?5%13-%00%7C2%20%18%17%7B~7c%08%19.?*:/%20&%7Dm68;%1Fal%09rq%7C;%01&3%0E%089%1B%1D1y'%033b$*%1E4%60%11.%10'%14%0F%00%22%07!;3%17%11p%1A)ie%07n%00%0F6i)%091%18%16%7B%00%22%18?%13!%19%02%0C%3C7'%7B%10#%16;!=%091'%20%15r%0C%1F%0A%185r%0A%0E!je%25n%7C%07a%01%7Ftd%7C%1E69q%0C%3C!%20%3E.%05v%0Cds+3:v%02r%10~v%1E=%20t:y%116ru%0Dvm%1E1*%7Bv%17%00%0C%09%3C%16=4%1Bn%7F%03%1E%14%19%07%0C%20%0D9%187%20%7C+:9.y%16n%601y$~m%03yq8&+%20.(x%22/%60?vr#%0E%0A%7F%18%20e)%0896%7D%7C%13c%1E%12$%7Brb%3E(%7F%207%07%1E%07y%071%20%195%026%20%3E%1A%18$:%1D$(v%07'%0F%25#9r%3C,%16/v%1Fx.!%11%09%22%19%158%02%14?=r%11s%02:%7C#ds%0A%1A%1A?h~'%11-%16%18%03%11%1D%7B-g'%12%1B)(%151%0F$%173%17'%0B;w%1C%08%02%22%08%1E.%0A%7Bt%05%0F%18%00*u%07%1E%116%0F%10%07%0B04%0Cq%044#hy%0E?%02%11%05%00(,!%00%159%16%3C%7F%13!%0A%0A%7D%0Cl(%04n-%0A%11a%60x%7D,%0Fe%0A%19%1D/%1Ca!*%11:%01626%0F,v%17%20%16r*%03%1D.3!%3C!%7F%7F%14%06%7C?%1B%20+xy%1B7%22%1B%7Bem%13('%60%09?%1B%18%07r#+d%1Bj%1B%04r%01~$%60%7D%20%1C-%19%13e%18%04%0A*r&%604%098%60%03!a?%05(%18%15ey%02=%03%0E%03%1B%0E)%02%0E&!%22$8%09e(%07%13%077)y%10%1B%7F*%16%60%17%25%7Ca#%7B*dx6;/%15%20%20%3C%06%11;%05%0C0%1A#%08z%0Bha=)%06,,7%20+r%22%1B%3E$%15%00%020%1F9jy%04,%7B-%0Exy4a%7C;#%1A=%1E%1C)%1Av%20'%25%22%12*?%03~6'%16.$%05%20s%036%7B)(%0Ee5%07%002-8%1F%00*6-%01%1Ce%1E%03-%14%11:8s%05$%03%1E%25r3y7#%7Dv?;%60%112%20%07%023%15d%17/%02i%07%0A5%20%07%607%11u.w%01%22zj(*,%18/5!%7C5&%0Cr%09%7B.%1B%03%252w%1E%1F%7B%16s+%3C%1C%1B&%0F;%17%14%02#*%06o%05%0E''%7D%3E=%136%1Fev%1Ar'%1C%08%3C%08%1F%03%1F%1F%03f%20%10%60%08#%12%1Bj%20)?g-&%03%7B%0A6%19s1%7D%3C%1Cy%07.%01%15%20%7B%0A%19-/%18%09%11%19,o%1E%182%1C%02%1D#%07x%0A%0Dv6r%11r%7D/c%7Dnd(%01e%0E8%3C(%1D%00r+d=3%1B%19rz/=%1C'y%1A%1E4%03%1B%03%7Be%00%7F2j%1F%14?%1C#yz6%0D*%3C%25,8#%0A%0D4-%7B%00;=j%07%0B3%3C1;)'01-%05%02%0Cv*1(x(%10%18r*.%1A6)12-%02%154s%06%08ehe%25q%06e%00ey%12'%05v&/%0E%0F4n%08';%25,%0A%13=%18%1E;1%02%7Cx%7B%1C86%1C#~%0D%11&%1Fv%0C%17va/%18d%1F%1C%60%04j%01%1C%12a%03v%7B%7C=)%3C'%7Dzv%0A%7Bt%11%05h%05%05%0D%0Fe%2011ux9%3Ce%1D%22-%1A%142!p%1C;%603x%08?%7D('8p:;/$%0E8%12%19%17b2tr#0%17%60%1B%01%0Ca%11%034$!!6%1E%11(%18%00%3E%07;%19%18%15%1E%1B%02%3E%0A%11%22%05%14%07w(5)+;&ng$'*%00)%3C%04%17%11%3C#h%02%05s%17l%7B%1D/%08(%10*2%0C-%3C%0E%04%7C%10%01;%1B%148%02~,r%1E'/&$l%06%1D%22';%1E%12=%15%7F6%0C*1;%3C%05%1E%04zn%208%114%1A/%7D%7Ca%3E~%0A%13%004%03%1Dr%60$l:%20;%13%25mh8'%08%09/4!%18#%07%0D%17zw9%1Ei%00%3E7%06%0Cn%3C%02$%60=/%7F)$%18z!%18%1B%14%00x%0Ef%06%22%1B%16,%05s%25?6(!%09y%03:7';pr)?%11!0%1D%18%3C3zy(&%11)!q%0C4%08h%7C5%12!k%7F%1B%07!8%20%1B%0D%128%17j'%7Cv%1D~%3Cg%1D%11%7B6l%08)%02x%7C%1F%7F%12y%7B%7D/%08%7C;%05%06-g3+%25+2=s%1B;%02%12)(-$e%60%11;p3%05(%00%20%10sz%016%12%12%05a%60%08%01,/#k7zsr%22%10c-w%7C-/ed9%1B%19%1B69y%7C%18%12%05-n%3C%082%13%7C%10%1B%7B?#/j%01$%0Fd%3E%11%0D#/%0A%13-;y#(%08%18%60vr%25y%188%3C%1D?%60%09%01%3Er%02~tr%19o%15%13&%7B%16%15e%0C%16%7C%7B%1F%08dv2z%00%00%7C%19;~%60%1A2n-%07(((x%60=::9n%7C%25i%04s$.(%0Cc89s9r%1A-%09%11(-%3E%7Fq1%00%0D%02r%13==%3Eg%256%20/rg%1E%06%0Ee%0F%03%7F+%128%17%181j%08,,%00-%0D%7C%25?%11(%09%004%0D9%005%60%17%11%60%13$)%18l%11.j?-l6d#%7B%7B,#%04r%03,?3?%13%1B=%00%1C%01,%7Fx%12%252n%1B6a%20:r%7Den%03s,%1B6%0C&%1B%10#e3h%0D;%00%22##%05%19'*i%3C%7C%18%01a+9)&(%14%0B:x%09.%04%0F%1Br1%1B/%13%09%04%19%25%04=%1E=%18%1Ce%1A&?%0Cr%1B%09*%7F%0C1%1F%13');-?l;dw%20%18a%3E%07%25%60=ai%19*%04=%1F%60!s%20z%17%3E=%11%0C%17%09*%1C%12d!%0A*.x$%17ld%7F.1(%01%7B%01'%18(%14%13d%15-:1%7F%05q!x/'-4)z3%1C%60%13%1B4)a%03%12%25%7Fh%13%25j-#7'%0D7=%0275%608%1F%20?%04%3C%18!%0B3%1F%7Cs#%20%03%16%07%0A%1Ba6f%20%05%60)%20hx%19-!1&=8~%20%15i$-2%7B/a%3C%12-%20%11%7B3%19%05%14r3-v%08;m%04;;s9vb?x:z7%18r%02%20%7D!i(v%06%16#%7B?*.+.6#ud%05n%03ru(%0A!d&ws%3C%3C%1E%7D%02%607r5%03t97%15h%255/7%036%00%03(8aaz'$%18%20h(%06%7F(6%08%079%3C%3C6b(*%12;%01%22%1C%02=%19n%22=%22%0A$3%7F%7D%0B%3C%00%20'&#($:4%1B2-z!f%11$%0C%08%3C6*,(%00od%0D5*8!%22%60&8%0026%0F'r%0F%09b%1C4'w%0F%13-'%7F%1Bl=%1C214%11%01$t'%05%20%04-%11:(%1C4*1%7F%02%11d%1Bv1-%13%7B%002%7C8(%11d%0E%7D%7Bj:%1B%0Ds%17#h%05t%138n%16%1Aq%12)+%17%25)=:%0Dg?%12%03%05%17%0A%1E*2v%09g;1%05%7F%0B%04)7/~+%19!%02s%00%1563%12%19an$y+%02,v8%0E8%7F~-%1D%08pd%03%15d?1%12w%602%0Cq9*r%07'+xz4f%3C)%25z,%02)$x%22o%12%1D6%1D+%09?%3Ct!%16j%12%3C%18%7D%0C%0E%1C%607!%09%0D%3C%11%06)%7D8i%0C%08x:v%1F=%25%1C7/%1Cz%16%0D%0C;91%0E%11!:%13%1F(%00v+%1Az,%0D%17hg%3E%0B%02%7Br%1A-%09%0D%01%17%25%7Bs%20%22?&($%1242%13r)s:?%18%3E'd%07%00%1D./%02%7Fv%1B~%0Es%1F%01?%1B%1Bs%02%16%01%07s%1Bv%18%14%18%25%06w1g%03n%07%22%0D%1Ar%25-%08%17%223w(&/e%079%7F%0C:i%7F%0C%3C%3C%20%16/*%00~)bs0%0Fx%09g%1Av%1D%08%18m6pg%0D6%25%255.%3C;%3C$6g%1E+?%09.%25*uc%7Bs%7B%7Fj%7C.%0F9:5#r3z%0B%18%0538/:5e%0A2%00%3E%0C5%1B%08%7C!.%05%04%07%09%16-%01%079':%08%09%1A%0A$!%12#.%05%0F%14%0D%3E(3*%1D%03%1D85z%19%15*%7B%08.;-%0A%1Fj%02(6%11-n,%1F%11%7F%0A%22%0Da%00%00%7B%093%0Ca%18%07%13%7C'l%1D.2%05:j%0A2%17%0A%04%15%00%1898%047%1A&n/w7g2%191%000=y%25%7B%03%08%01%06q'~2%7F%22%05%03%7F?%14%02%00~#h%1B91%05)%1D%03y%031%00%1Be(%0C%08-%15%7B%3E%1B%04%18r%1Cs#%06%207b%60y%13%16%3E!34#%0Dm%08!%02%05&-8%09%0426%1C%11%1C7sz*=%00%03&x%0C&%3C7'%09n%1D%0A%05-%7B.5-78%05+%7Byy%20?7%7F(0%607=&%1E/s(%0F&%13n%25%3C1h%25-*%01vc%06p%7F(%16%148%0A;a%16%7F%1D/&%3C!%1D%20t/%3Ea:%01%0F%13?;%1A%7Dr3y44$3~w%16%3C1%0B%3C&2%1A%25%25%60%00-%01%7C%0D%22&38=0=4%00%05%0C%12$/%0A%3E1*d&%11;%11*,,%0A%2597*()%1C%033%0F%1B7b9%06'4!7&%15d%1Al%17%1C%20=%0B%20%04's%257%14%3Cx$=-/ed%16$%001%0A*%0D8%0D%10$%7Fp%09%0Aj%041%18%3C-n%7By%25d%7D%0F9%7D$%0E%19v7*%0D(%18,f3%04(%0C%08%09-%19%22e%12c%0E%138*%11g%0Dv'%3C%18%08%1B5%7C;4%00y#%22-;3)%00;!(%12!%16%1D%0F%1Dh%1E2%07%0B4%1A,*~)%20%1C~2?*88%25%06z+1f'(%12%09%14%0A%1E%09/%16.?%0Fs%20%0768y;%0D?+%05%06tyy.%1F%1Ey%13%0F!:%00&s%04%1E%1D%7F%1By%1D%00%04d%25%1C%19,$%1A;%25,/%11~%09%12(1%06%056%06,%20d%0Fw%1E%03%03%01%18%04z)%3C%16%09v%03-+%0A~/%1Ez%1A;%04vr$63%12&%08%19;%06:#%1E%1C0%1D$+s+%0A%25%1E#%12%02l%1E%603%0F%20;=%0D%08(%1B%0Dh%07#3#%0E%7B%07%14%01%7F%60%20,%05%209%11%7F(6x%0F19%18(%09%141c%0D7%02y%10$;-9%04%0B5-%002%1Bn%00r%19%7B-=%00%0E(!%0F7;,1~/:%12*%22($*4%03%04%1E9h%01x6/=#%3C%1B%0D%13-%15%1C%09)%0D%01%17'%0E%20%7C-,#:-%22&%09%09%01%0A%20%14i%1212%7C%0B%0D%09%1Bx/?-%0A*u!%09(%1E%20%13y!%3C%18%080~$%1A%11.%13d41%17!%00%0A%7F%17ad73%20%1E%09*%17%138m%12%02r%0F%01%0D%11v%7C6%7Fu%1394%22=0%3Ela%7F%0Fy%1294%22=0%3Elm9/*%202a%7Dxn%7Csv%7Fzhdg$%05?5=&p8~%60%05*6%0Ee%1F%05/%1B$=)9%11%04%0F%19l%16%19$(,j%1F8%03%1D%17%10i%03%13%0F66%01%05s%06%14%3E%17y%05%137k%12%0D%0F%20!j%18%03%0F!?#%14%0C%1B%0D%03%3E%17%1B%00z%1A2b%06'9%20j=%25+r%17%107r7,%1A%60%09%066%22%25%0D4=v:%7Cl%18yw%7F%09)c3)?7;%17%7D%0E%25a%0D%7F%1B%20(al%3Ed%11=%09/%25%09q=%16%01%20sx~4/%1Ey/'%01%09b%7Csx%04i1%00%12%0C%22-%7F%0D%02%7B%02%60%20%7C/r-?h?#%0Aai%3C37%07%03/%1E%3E)/87'%0Dx%11%1E%147~%18%19x%0B%18s%18%1Ea4%15%118%0D%7Fk%1E%1B'%1D8j%20r%08#(%1Cc%07%00%184k%25%025%22(:%02%05%18%7D%20%1411#%01%3C%1D6&.%18&8%118x?v%1F':'3%19l%1A-s%1B'n%12yj(a%0C%13sj$~6a%7Cn?e%20i%3E%07%0D7%17%1Dyw8)7%7Fdr'$%03%7B%0379;%146%1B%05%0C'r%3E%03%12%7C%1F%1Fe%00%16%02w,%15%22$%19v%1A?*$:%3C%3C5%0Ax%1F%3Ei%7F%201d%01%09a*5%12/n$!%0C.$j2%0D%11%1E%16%1C:%19x&%17%11&%22%14.%16%0D%11.5!%00%1C%0Az1%25%07!%1D%08%16%0F%3C!%17&%0D)%03)5=#8%7C8)%7D%05%04%1D1%13%1F%15s9:;%0A%22.%06n%01%25t99*%02=s%07%0D%1Bh3%04&7kh%7B8,v%1E7s%15%0Dz*%14=%00%7Cx%13=-)%1A%05%14%04~3%19,%11i,%0Ex#%03%22%7F%09%1A-+%1F%09x%19%7B%13$~/sa%115%11%009%7B%13&%13%06%3C&.%7B%7C%00%097%606%12%04s%0A-%1D:wx?(!%004%05%0Ah7;%25s#%006%01x-)%1Ear%12'%16%00%03#%19%7F%7F%1A&%0Fp%02%1F%60%0A%132*(%1Da!5,%1F%3E*,u%0Fe7%3C$%17%04*-*%20%0D'%04%3C*$%0E%1F%06;%1D%7F%25&4%1Ad,%1B%096%011)%12d%7Ch2,5-~0%18%3Cs%0D%0B.a%1Cv,%05k*%194%25%025%039v'x%10%1C%02&s%22!fx%11%7F%02%20e%609=#%60%19%03y%12;%11%05%01%16-a%03:~0:%06rg9%10#+7%22/%12%19%1Ao%20s%0Br&78%06+s%094by8-%04%09%05%1F,%0Ea%1A%09.x%1A%08r7r%07%0D~/%0Ax%18%1F%140(%7B3%20%25%179%12%14%04%18;%7F%09j%118%15%7B?(%25~,2'7%7B%7C%15%7F%1C/%20%0Cn#!%05$-n%02*%05%3E%20-%04%0C5d%08%3E%17%13%09%12y%13f%7C%19)%04!'%04%22x~.%1A%01%03-%17n%02%1B%22x%03#es%04%04,%1E:%0Cs%1Fy%10%1E%7D%07r%02%15c$%07%3E%0F%01'%131=%05,%25?%00=zmb%07%0C'%07%0E%06rsx?1)9%02%25%14k%04%7Cj%0A%7Dr%25%1A%19%7F!o3?#9%08:%04.+?%14jg/n(x%0F%3E)8&%14/1%07x%11%01%1A%7F%02%04%05%18%0B2%0Cvs%1Ah7=t%7C)%12h%09j%7C9%09i%22,%08w%0C1%09%09%7De%0Ce%05%0Az%0C/#,'%7D%04;e87%7Ba*i%0C%14z%3Ev'%02%18,#=b=8%05,%0Ff%19%10%01a)%1F$-%046%16%1633%20#v%1A%1D7%12%7Dv%7Br%1796%14(%13w%1B%7D%17f%1Bxy(m8%0E%08,xa%08%1Ft=%25!(%7F41%7Djg/7%03e%0Fc$#~%16%0A%1F%3E-%1C%09j%7F#6,%1B%17&3vs!%00%05~v%60e%00%22%0A$%1C?1(%60%20%0C'%10b%1B%11)%094%1E%01s%7C&!?s#d4%01(%0F%10%7F%1E%1E%7Fsps%3E(%06,%04y%09l&=%10*y%0Fi)%16s8l;%7D%22%07'%20%7B%1D;%7D(v%7B%0E9#v5%08.%0D%07e!#%11%091%1B!%11=%10%7C%07v1%04%089%7C1%18%005#%1D0%00=8%04,)%09%1C%16~~h%7F.%13%0E%07+599%1Cy%0Ea$r%06?#%3E%1E-y%7B%0D#%06s'%1Di%12%1E%09.:%3E%05?.%19/%0B6%07/2(md%7F'%19%7F,i~s9%3C%0C&%085/6*%17%05%18%1B%22l)!%03#x%142%3C+*%05##d%0E%11,%0B%11/%25%19%18!g?%12%3C%0A%1Ei%1F%05%22%7F%008%2058%14?9)p,)%0B%7B!%00%7F%0A%60%16%00j-%1E%1Badj3y6b&%17%3C%01%1A8%7C%20%0E%02%03%18%13(%134%206)ps%0B;f?%02%1E(%60%07%1D%25%00%01)%13%02'%12%0D%20==9%02~%0A5$5%0E8%00%1D%18j37?i)%201!-%09#&%60%1D+%02'%08%7D+%17%7B%7B#%22%00%20=spr,%1E%07%1F;:=.%3Ez%12%11%20%12&%06%16!8?%15%0E%04%11%16%011%60%11%0D%0D%0A%19#j%3C%16(%7Fx%19,%7D-%04%03%25%7Cz75%0C(%7Cx%0D1';*~.%3C%07%06.=%12*%1B%06'#?%09%03%1Bd%02%0Bgx%09%7Ce7%1Fy%19*%7Dm'%60s%08,%0A%0A?%03%25%22;%1Bd0%257i%1Ed1%0F%14a%1A%19%118%03k?3%06./%03dy5%7D%00%18&,v.8l&%02;y%0A%09%0A%0E3y%0Cn?%11u&;!c%0At$z-%16:qs%00%3C%1F*v:%22?b%1Dur-5h$%22*$r%05%0Cj%7F%0C?%1D:ys4%14%13y%0B=%20l%07/%22-%22+e%1A%08-'=9;y?%1B#g%25%15:%7D?3%13s%13%1Cn%03%1D5)%07%60%02%0D2%06(%09%1A/%04)a%08%1A$%08d%3C%1F%11%60)d%202%111%04%0E=%3C*-%03.:=%22%3E%13%19%3Ca%60%60p%7C%14ke8)-%3E:i%13%10%1F%22?%25%1D(%0Dz4%7F#-%0D4%1E#=1d%7D-:%0Cx%13%25:i%00*&%7C+%092%13%7Cy%1Fd%7C%06%7B#0:%03%13~%0Cv%07.%16%25%7B?7:%14d$v9=s2e%12f%0E;%08e%0A%7B%199d=%119%069x?l*$&~%7C?)-r9%3E%00%00%19%11%20e.&27%13!v(=%17&a=%7F%22--%7F%01ay7!%06h%00%22%0A#ev%088/%07%3E%01%3E%1Cj%7D'%0A%22y.%1De%0D%1F2'%05/%3Ea%0C-%12$n%14d%06(%1B?%06#%0C~%20%20(%1Dx%3E8%0D%253t~v)%08%11-%04%0A+%14%13%04%60/o#=.%03w%1A2;n%07%20%01%3E%19%11y%0C%60i%08/s4k%1C8%18:~%01%7B%3C4%1E%16o%18%12t%7D,*%3Ey6%03%7C%1E%05zq.8#a%18j9,1c%7Fv%0F,%1B%00%7Bwz+%0C%18%02;%3C%7B%13%1C)t%06$0&)*%0D%1D%13%1Cr%20%1C%25%09%1D%01%14.%3E%15%069u%1Dy#%12%04%04=%22-#-%08r~%1F!%22n%7F8o%17~%0D%03%09%20%1Bd%1B.%1Ej%1F8yd%7C%00%3C(%10%0D#%11%3E)':%7D%01g%11%0Dx%0B=';w=7vg%0C$%20%0Cr%3E*8d=%126%22%05%7D9%11f%25%0E%0F%06%1E4%087&%3Cv%7F/&=)%0Fd%1B%0A)6(%7Fdp.;%00e%7D/-%03;f%7D%0328%1A$~%0B%11%20-%0A%7Dt%25v+%3C*r%3C%01%1E%1D%11%00%07$6%05/%039%7B*:9;-%25%1Ci(1%07%7C%60%08*%0E%1B%7D%207d6r82%15%7F%11d;r%12%127%20(%091%60%13x*j5%259~%1Fm%1D%1D#:%07r2;n%7F$a%09d/))%0E%3C%11'$#%0A8z%0D2#%13%1A%09%09#%1Ch#'%12%01%1Co%07-%04(-a2~t!%167%19yn%7B%08/%08&s%25*%18%17%09;%189)%15%13n%09v%1B!%1Evy6%20)8%05#9m41q%22%04%3C%06%0A6*4%3C%22xjx%03,%19%0D0%02v#2,%0F%00%055%1D%01u%1D7%1E%1D)%0C%1C+r$%7B%02%608i%14r%02r%1D%11%16*&%1B%05h%11-2%1Dwmc%06%13r%02-%16%1Bp%7F7a6/.%13$a6%057%00,-=%010*~/:)&%1B%06%1A%1B%09%0Cy%1F/e&-%20e?f./;%1F0e$%07?%1A%1C?%7C7x*4%05%3E%20%12x7%04%05$%08%1B%0D%3E%0A%13%0F,m%18y%12%25e%0E%04%7C4x~252%19%11%7B1*/)%09%1Dh%02%0348%7Ci%1D3%04%02%0073,'%60%1Ak(%3E7%1F%0B%00&.%14'%7D%1D%3C%1D';%7Dl*%07%20%7B%18%14%1F=%0F(%3Cj%60%1F2z(%147$'r%7Dk(%193.%1E%1A%209s%25%01v8!'%13%3E%15%60!%11,%7F/%22!%09-a/%20&%05$v#%1B%60+~6%1F%3E'x&8%1D?%7Ct%7C8*%191,~%06%11%17%1E%20%1C,k$9%22%60%0F?%19%083d%7D)%7Fd*8%003%04%7F-%7D%7C%1Ad%1B8*%3C!3(w#w#a)u96?$z).%05%16%01-72%3Cj%3C%25#%7C%1E%11%7F%7D%05%05(7%1B%026:%1Aa%042r%18%14%09%04%0E9%3C(1*%04;%04%00/e%7C4%05(%3Cc'-1%25v%13*%0F%22%09%12%15%7Dr%00x%3C%00xj.vai%0A2%06%1E%10b%04%04ya%15=%1F%0B1%25v9%0D%22''%01)x;~,a7%7D%00d6%15#%0F'%60y:%1F(v%03%08?%25%12x%1F%25h%1F%11-1%22%00%20s9%08&v2%0C68%14v%02)x=:%11&~(%19x%1A;:x)w0i%005&#.%08%05/%1Ew%1E%14y%102%0B%00f%01%22%3C,%13)'x%0E%046%22:%11%1Ca,1/'/%7D%11h,%079%03%20%19%04s-%2241%0F%1B%00%06-i3%0E%09;?%60.%10=%0A%0F%02%25t%20%14%1C%04%0F%173%176&s%0D%02%0A.h%1B%20d)%0F)%3E*%22+o%22%1A8z(me%0D9~eo%3C%3E%25%03%1Fi%00~j!4l%15!%13%3C!)%3E%7B%17%05x%0Fh.*%12%1B%3C4x%07%1B%16o'%13%09%1A%1E;4%015dv5%1B%60*%0Cwr%22%03%0E,%7Fn&%1E%14%7B9%09%20%00%10-*,8%7F%0Fd%04%0F%3E%06%25%1A$%1D%11!7%3C%0Cl%18%60'3%18.%15%04'%09%06%2068u-!-%19%1B%13x%1Aa6%04%12%13-%0Bg%7C%17%0A*r%18=%0D%07%01%08%7B'8%20%25?'*n%3C%08%1D%1E%02x%186%12h=%11%1D6%0Ae%13%22)%3E%01%7B,q%18%1B,%1D%18%3Czb%1A%2592.n66k#$%202%7C;31+45%20p%25'uhsxrb%3C%1E9+%12#=%0018z)%00%17%03&/%1Dm$%00*~%18%20%15r%15%18%03+%002s))%129%220%18=h%1E1%15)%03%20c%1A6%12%1F%18%14%099%1E%09%1F%17%0Fn%07)i%1D%7C%05r%0Fr%03z%17%0Fwj%08%22%17%1F%0Ar%11%7F%20%1E%07%0Ch%13%0E2=%1B3%1E%0C9%0Fl%16%08%13%08%04%0A%1B,%04%029%141(%00%22%0Bi:%01.%0E%25.%1Ddx%1B%0D%1E53'1)%0A%12%1C%10%7F%05%0C%128'%06%09%18%16!%00%3C%0B%18%162%03%1Ayi%14#%11*%0B%1A&%08w%01+;;%11%0E*%22%12(%19-;#%3C%05(%0D%0E7*%12%7F%18%0A?n=,#%20x%13*%1E%0F%7C%090%18%60%00%05)0%01%068%3E%0Cj$,%0C=%1C:6%60/%02%0C%20$%19%05%1D%06%17c%00&%04%226%15%01%20,%18::%05%15%1E%20%13%03%3C%12%0Ee%1B%12%3C7#%1C#9%1E%0D(%3C8%13%1F/%0D%7F%0B!,3%3C%0Fic(&%1E%1F%1E%3E%0D9;9%3C%03%0Eyr$v%13%088%01%1Ba%60%01%15%0A/6%08%3E%06%09+%12%13z%00/%3C%13%14%03%0C~%1F%60h%05$%0E%07%1D%03.%22%02*1%1A%06t:%01%0F;%3E%0C%1E9%13g%1B,~%3E%3C%07%11%0A%08z-8%04/%01%22%3E=%3C%19%18:ji%20+%0F%1E%00g%02%20%7D%7F/b%3C%0C%09$%1D%08y7r%1Bv%12x($',%12%1E%02%60)m%01%0C%0Cx:%08h#%20%18-v%1F%1F2z%0D%13'%09%05%3E%1B%08;%3Cn%20%00k%112r%7Fw%11%1B%0E%07%1D=2%19%088z~r*%0E%03.6%10'%25.$%18+%1D%0F%16~$%11%012p$%01(%1C%1Cw%7F%0D!%1A%1Br8%7B%006%11%02%07%05%036%04%09%1B%0C%15%05)%0F%3C82%1F/%0D%07%14%1E=,;%0A9:%08%04s/;:%05%0C$%1A948%1F%00%00%0D+%19~t%00%1B%0E%20%13%0B%3C%01%1B%01s%08:#%039%12%11%1D%05%15%1D%7C%11%0Ax)%1F,%19$:%1C?/0$%0F%3C%09%0C%17%22-%14%3E%058,%076:%08%12?#%00%07%0Fs2):f%7F6%0A&-%05%0F%08%3C=%1D%25%25%0B%0D%175%1A%06%0B%1E%3E%60%13%1C%05%7B4%18e?%19-%20%1F!%1A%10%11%1F%3C3%0E%02d%02l;%09%0E%1D;%17%20-%04x%03!%15$%05(%1E%1C%11;%02%19%3E%18%1E%02%0F%064%0A8%06t%0C%1C4%12%22%00%0E%0F%10%1Ddx&9dm6pg%0A8%3E((%25)y9%25a?&%3Cp%06.$%2059,)?%7Cu%02$%22?!+%14%3E2#bjezp%7C%7Bu5%050?%22*a%1B%04%7B%0B%0C'%05j%18:2#9'&%0Fm1%04%0A#%043a%3C2%08%1F09*(%01%20%0E?%1D%062%03%11%12%06%15%0E%09%18%22%18#:%06=2/0'%0C%0Dc%129%0E!i7%13&%20+%13%17d6%0C%0Da5%0C%0F%3E%203'%12%053y%0F5%05%06%07-/%13,y.%04i4y#y=r%60,7%06:44%25v1%7B7c?$3;%0Be%1D83%0C%1C%15%7F/8?6#x*z%08ab9%14%1D%7C%039rv%1A%00%15%07%1A;2%20o%19%0E%15%0C:%1F%3C/%0A%7D-%0E%1B%3C.*%0F2%1E%1A%05%097%0A%7B%01%04z%04%15%16%0Fp%7F%7Dn%08%7B%1B.w3a,%20r%1C%09'.w%02%06%1A(%1D%10%06/%0D4%1C%0E%05%22r%3C%0C%02%05%0Bjf%1B%07=v#%3C%0C+%7Fzo%22%7F%08%3E;%15%132%10%20z(b%05;%1B%7F)cs&%02(?%17%0D&%03%0D%0Fh%03%14-y%20%20%7B,%1A;%1Db/j%11a?%22#%06%60'%1C%04~%0Ad%3E%01'?%22y%1C?%3Ex%17~%03%3E%1A)t=%00%16%06~u8%03%03%013%0A-9%0F3%20w%08)%0A%13;ns%01lf%00%09%7B%1E%15%7F$%00%25%01#b'%10%20,%091%3E%17%22%1E%13$-(,%1C%1Bi#6%01z%0D%1Bz%11%3C%18%166z%12%1B%1Eo4%7C+~%0Ca*%0A+1%0C.%7F%0D%0D)-%1C%7B%07%0E%0F8:%02%03%22-~%11%7B=2%02%02kgdj*%1E%1D%1E%252%7B%03!%16$%0F.%3Cn1%19%02%60%09%01%1C#n%01%0B%1D%3C%7B%20*%07%0C%0A%1Bs%1A%16%10%208+%60%1D8%13%7Cq%04%3C%12!%1D%22%1D%19#%20%1F%18=4k:%25%0Fd%02%20%07%1Cj%0E%00%15:%03%16%06%0Br%0914-%7B%0B%3Eyw%3E%7D=d%0D0%20%19-1=+r%0B%15%3Cy$%0C'%03%22%20%25)a7f%0E%15%0Fv%00:%3C%17~8%152'p%01w,%182'%0C%17i%17.9%11%18j(ds%02xkad6%09%01%60%3E%3E;%22%20%1F%1A.%0B%01%7F%60f/%122%0B=h%13#%7B60c'p%13%16%1C3%06s8/%153%60%0F%22%1E%12%7B9x%05y%60ex%25%1Fa%60%15~%17z%7Cl&%1A7$#%08%07rw%1F*+19%20%7D%195%1F('!e%031;%17%03-r%02%1E2%11%00?7=%18s%3C%0B%1E%1Bwd%02%20gzv%13%3C%0A%07%1Bp%7C%1E14=3x-%20%01%0A%09%04%17-%3E%258%03%7B%1C6%0A%02%05%25(%3E)%04%0D%7D%1C%19%1F%0D%7F%06%13%25?7%0E:n%7F%3E*%1D%1C%0D%15z%09-%7D5%00%1B13,+a%03'%06%1C%1A%09=%0F$4%15%00/%18%0C%08%17%20%18%11%07?o3%12sy'%141%042%7F%1C)fx%02%25%0B/%60%25;%7F?%17hy/d%18%16%1A/y97he2-%13%3C%0D&*3%02%7C?=%01(%3C$%08%1Azqs%20%116%03*%014%03%25%016,;%0C=x%06y%17%1D5%1B%25s%22/#~%0D?%01%18%60%0F51%05%1F%118&%19%01%0F)8-%0D%1D%0B%7F?%00%0D9%03%25'%15%0E%7C%178%0D-%1Dz(%16%1C5%0A%1F%1B9%7D%1Bd%174((j?%08%1B92t%19$i4)q2%08%16d%7Bw%1C%0B%14%1D?%12x%0F7%03%3C)?%19%00%19%7C%16%18%07%1B$2%108%1D%3C%18&j#am2%0E%00%013h%7C%0F%04%0A%1A%11%7C.,%22%22%60%60%7Bmz~jig$%05%3C3%09&%25%1B4%20a,%18%0C%08%3E4%13%07z%0A%09%16,%18%0Ea%17*(83%00%1D%12%3C%0C%0C%0B%18%11%3C%22%1D%0C1%02,n2z%17%14%046d%1F%09;?%17%1Aa=a%7F-%1E9v7%04%06'%0D%1F#';8%3C%18%08%0D%05%009%14f%02%00%19%16:%11#%049:%0F%14%0E6%06%14#3x%0C%05'v%3E%0A*%08=r'=%06%7F%01%1B%7F%1A%0C%0C%06%10%119%08%08+!%1A%08sd%05%1F6%09*%02;%0F7-%17%0A4%3E%17%3Cy%02%092%11%7C)8w(%03%7D;%1E%17%3E=3r$%14n%1D,6&%17%1F:.%15s)2%20%05%1B%00vn%14%01%10%0F%06%16:%25%00%0A%25%14%122%02~%0Fo%09%02%07%22%0C%00c%02%04!!%0C%1E%1E%0C;%05%0D%12$8%19,%011,7(%7C%10%1B%0F%03%0C%1A%3E%1F%19%25%1B%03o6,'%1A%07%08%01%20%0C%097%18g%02t%06;%3E%05%0E%14.x%3E%01x+%02zj%19%032%25%01%12%14?%009%19%1C83%05#%7F%1A%02%7Fs%0A-l%14%072%12%06%16%02%0Aw%0F%04%1B%1D~%05%01%04%14e%0F%02%7F%03)%18%0Fu%06%3E%1C%14$%0C2%0B!%60$%25%12%0A%00=(-%0A/h6;%04%3E-(e%08%02%0F%01,e%0A%168%03%3E%14%0F%08%7D;%10!%08%08%0A=%038%1B%07~)%11f%04%0C2%06%133%1D&%08%0B%161%186.$%1E%11d%131!#%05~#8%1F%0E%3E%03%06%0F%7D(;%03w%04*%0C%1A%3C0('0a%3C%0C%7F+%1A93-%12;=7~%22%7F=%15h%3E%00/%1E#&8%25$%06:%12=%13/-%1C%16%22$%19z%01%1A%7C8%07%25%16!%0A%141%22%1A$%1A%0F%19?7%3E%0A0&%0B1%13/'%20%25%10%12/%042%033%19z%02%1F%03%15%19&4%05z%1D%02%04,%1D9(%19%13%12%25%0B%20%1D,%08%19%0F.%13%05%17(%22%0C-zm%0F+8$#a%1D/5%3C.8g%1A15%0A/,%3C%20%12%3E-'blg%7Fv~zu5%053?%19-i=q%7B%17:&%7D%02z%07%0E%3C%0A1%1C%04%0A%1Az%19:%088%17%1D%05(&%0E%078.%00'%1F(%07s%22&;9%7B3;#%1F?.6%07%1C,;?%16%018:%02%1D%07%19%0D;%60%1D%2036na%3E%15d~%15%60%1Bu%0Fy7%7F,&/(,;%19'%1E%18n%01%13%09%1B8,g%07%0F1=%0Ehdp%0A%7Dl%18#%0D%11a-*%13%09xer%3E17-%20%0A%7B)%15'((%12%3E&%0F;8%1B:,%0D%18m%06r%04%7B:%08a20z%18h$'%07;:,4y%0F%0A%7F%17%11*$,=m%119)%1F*;%04%22*(%25,%1F-%09=%7F%0B5%25v%7D%03%0Da%0Ct%3C$.'y8%7D4k9%09%0F%0Cy*h3%072%1D%1C6(%02-%1F%1Dd=t%11%01%082%00yz*%18%13:s~&j:%256%06%16%0F%25'%0C%0F%05;%12y1y$v%12,3%0F&r%00-4%1B?%03%18%11n%3C%17?h%19y-%08%1Dc%01%16x%0D%14%7B%3E0d%06m?y$%0C+na%05%22%05w%60c;7d%25%60%7F/wd-%1D*z%07y%17%0A%7F.+=%7Cl%0796%7F,%1A6(9%13a/e,0=%0B!(%05x%19%1A6%18=j;%04%006dy%1C-l%7F%05w%09%18%11d%073xa-%3C%05y%00%02%205/%14!)%187;%0A/%1B#1y%0A%7B%7F%60%20%7C%06%11y%08%1E;%1B,&('%02%06%1A%18%0F%20%0E8#%1B:%20%043(%06l%1F*;%0A%02%1C=&+%11%1E%0F%7B,%14#v%1D%19%7D%0C%1F%7D)c%22u%22%16m4%1B%05%06x)%03%130%05%168)%00%16'%04%0Bi.%08x6,%13%1D%11!v%14%15-qd$n%08%0D;%1Ce5i1n%07%7Dm(%22y%3Ea+%03%1A;%7D8%03%02%1F7z%07!%02=9(%03?%20x(%227k%12=%11%09x%0E9sx%7D;%0C89x%11+%00%22%1D(%7C%02)%1A9%09%7F%1A%0A%03%05%0C2%0B+:%1Atr4;;yr%1C%25*%00--8%1F%11%07%7D%10%0A%02k%20#%0A%0E%1E%0Ag)%16%3C%14%0C%6035d%1C4%18%1Dt2%3E%099%18%00%0F*%13%20xnsa%20d%0Du2%7D%15%02~%09%0F~!%09.%0Edx%0Ei)%25%187%0Fd%003%014%20%05,/%1B,%3C8%0Cj~%00%16%02!%04z%00r%3E%09r'w#8%7B5x%1C=81%14ya7%01$1%0Ew%0E%1C%20j$8%1D=%1B)%0A%3C!%25%0172%0A%13%0A%7B.%18%1E%20%1F%017s%17+%16$,d%07%0B%3Ed%0A%60%07%0C'%0C%25.'%13%7B%1Fp%07%006)-%04;%0C?7%06xs%14%15%14%0C(%12%07o5/9?%25%20%15%222&%183'%18%0Ax?=d%7C%12=-i%04%7D%10.%02%10(%01%07%03z*:#*%08%1E%60d~+%0D9%1F$%7C%08%0F%064%15%195%1F%7F4:1%07$e%09%1D%0At/a4%12s%03=a=%22,yx7%1D8%7B6%19%07l%22%066x%1F=%7F87x%3C#&%0Fp)%06%08%02/%07%7B4%002%057%0Fyjar9%11;-%1D%3E%1928?%16%1E%00%117%09%16~n%0C9k%03z&!%3E%10%1F%052&%7Fv%16/%0A3x%3C%3E%06%25'%0606%0E%15%3C%16m%04%06%20%06(%20h.%09d%1D%1F%18%03j&4#%609%20=%18%1F%60&%04%0F7ic%1D%0F%05:.$*,:$+6:%05d$%3Cf%7B%15%18+%20%07r%07%60*h5=j%12a%16%3E%00%19'4r%7Fr%039#%12c?%0B%20%14%16:%1B6-%00v%1B$8%06$r%3C1vr%003%00!%19y%1A0%3E!%22=%19%10g:%03s%16%0A%25:r%1B%3Er%01'%04%254,%1D%1Bn%22)%3E%7B%1B%18%3E%0A72%1F8%1C'%16%7F%039%7F~/hz%0A!+2e%06%0E?%3C%0B:3%1B%7B9%13%02$%0Br%1C,)%00$/%7Djd%0Cny%25!;%1D%008z%0C4#%02)#%1E%04%06%1B%3C%7F%085%01*#%08%12%01:%06%18%168%0A%0F(*%0A%0B7$t%03%0D%3C?-%10%1D%08=)/'%60%1C%1F533=#%00%25=3'%3E%0Dc:$%22%04/%3C%078%13%7B%3C%04z0d9-d'%1B%0E%0B)%08%0D%0A'av%0321xek%12%01%11:$o*,%10%1C)(%1By%13)%0D!%7B%7C%10%1A4rc%0A.!=078/%7B%02%0D%023s%7B%0A%08%04-%08d9%00$%11y%03%17.%25%1C%0F%60%1D%0D*!&%3C%04a%01%06)(%1E%13e%3E%1B1)%0D=%07%14%0Cv%1B%1C!4%09%16h%09'r%11%18%1E%16%25+3%7F:a%085%7D%06/%02%25q~%22o)y&,%0A;!%1C,%60%22%3C%1E~%17%00%7C%08i%7Bu$y%3C2%07%20#?:%1E?%17%1F%19%20%17).%7C%3C%115?*%60%7F!()v#%3C5%191%20%7F%7D%12=%0Ds%05%3E%1A1%22s!*%12!1%07%3E9+!2#%1D+%1Db%1A8%04%18%0Eb$3#)-%07%0C5%0A%0C%3Ce%1C%20~?8*%60'??(%04%05x%7Dx8=r23%17;;%04%092!;b1%1B%05%010)%07.%07#*$.%02%00%17(!%3C1%04;;%09~-%1E%05-%00%11%07d%0F%16=%60r:)%3Emv%3Czb=5(-%22%20%3C#g%0B$%20%3C#%19$*%22ua~pg+%17%22!%18&*%09*2p,%17%1E%04,%12%0E%22%17*8/%06%1D%20a&u%1B%1A%12%12z%0B%09?%00;~%05%22%17%14%09%04%02,6m%11%08v%05e57%12%09r%0C%209d1.?1%7B10%19/1:-%10%1A%01(;%01,%07%20;%07,,%02%06%13%19%1Ay:%25%01%01%0A%10:-h?%1B%05?%16ad%0E&%1D%20k%3C%7Fr%099%09d%09p%04%0C3d%19%0B.4hc*u%1F%17#%1D%1F%03%0E,%1A(&u%0A%3C%10%03%189%017%20%7F%00%17%1F%0A5%09&%17,%012%13&y-=%13%17&y%0C%031d&w%60%0F%13%20.s,:%18?%0F'?(v%06%1B6/z(%199%00%1F+%3C%16(%11z%0A%1F((v%017l(%1A%17~%0Co%12%09'%18%0D%0A%11%185,%0C%1E$%25%052%7B%10%1C%06x%1F%03%16%14%22%25%08%0C%12%00%19x%1E8%00%1A%0C%22%25%7B%1B%20%18%18%13%7Bm%16%06%10?!%007/0%12'h%1A%1F&%0C?1?%13.,%3C%18%17%1B%16%22x%3E%07$%153&%0B%13'%03%7B%02.%17%18j%02~%10%1C%1A%16%1A%05h%1C%09%02-%14%0B%19%12%0E%3E%0B%1E%1F%09%002)%1B%15%1E%08%086%13%1F*%16;%1F%14%07%0Er%0A%22%0E*%0Ap%18$%15%13%0A%14%03%0D%18i%1A&#x%0C%16$%0B%19%1A(%09%00s%18#%1F!#%07%0A%0C49%11&%7D3h%7C/'8(*7g%10%3E++%20gw~xjdrm.%00+4&%0Cr%3C%1C%60%0E%143%7C=$%7F;%11%3E%1D%3C*3%0D)%0E%1E%19%12%18%05-%05%7B5%01,kd%1Fw%22:3%01%11#%1B%17%3E%05$#%1D:0#%0Es$/4%1Br1%00%0Ai%1B%05u%0E%25%0C%00r%20%12%06%10%02%7Dx%11%0B%1D'%7D%04%1C%04%17f%7B%19;%1D1%03s%03s9j%08%7B;y%14ji%05%138/%103~-%18%1E3%1Fyn&v%60%7F*x'~%0B%05/%19%7F&%0D%60%01*~%7C%20=%20%02%25%032i%0F%04%7C,4%3C%1B%00%3C%1F?3%0D%13%12%2271%7Cu2e-%15xyd%01%1D%7B?x%03%167%03=2%06v%0B%02%3E%02%60'1&%02%07$&%13(%00$%02%16a%14%0F1%60%050!%06)%7Fw%0B%12%195%7Fv7%07.0;w%09%1B%7B7)%14kd9%11)6%0Ei%1B%0D&*#%03%1A02a%09(%02(%00%3C!2%07$:%19)h%0A%10?%026%7B%0Cr.e=%25,%19%7F%06%3C%3C%1C#%0F?+%7B%03r%7C,r%7B%13%07d,rg%000=63%22%02%10;%22j%7B.%22r+%01c%1Dv?%1D%09d%11%19:a+d97%7B%7F%01i%0A-*:%0F%00%0D%00x%7D%09&$ws;%15)s8%0D#jh%7B%19%1C)%01$%047,'2%04%0Fv,%3El%12%1A%14%3E4*%11%0Cv%09%7Frg%1F%1626r%15%3C4-evd%0D(%02%1Eo%20%22%08*%0F/c%0A%03%03%0A+1.%20%1F%14a)9&$%20i%1Dz3z'/2r%11#%25o%1C)%1B-%7D%148%1C;xaj%08#v%1C%05(g;#%01%0D?%12.%19%0A%06%09&%0F%16%06ar%7F!;s%3E%0D%14%25%14%22%0B%3Cbx%08%7C%05j1%03%12&y?%02*1%07e%115!6%03e=%1C%0Fr1%3C%09%1E/%14%12%1E%09%3E;%0F%7B%03,%7F2%07%0Deh%07%1A29%19?&%1F%14%03%0C%08'%3E;z%25%10%16%02t#*;*r2d%087e%1C%19%0E%00%0F%01%07r%12%17%08%04%1A&?:4%1Cz;3%0F%10%16%00$/%1B2%19-3:#%0C&%010s%3E1%7B%20n%09x%0C%7B$%0E%1Cx%08%01%60v,%14)e8%19%229%10%25%07%11%1C%7D;8%11%10%03$/%1F.%0A!!%1E%13%1F4%18*6%0A%11r%0C~;%02-0%20&%3E%09%1C%06,w6%13%7D6%04?5%02$%20%1C%088%07x%09%20%061%05%1A4%04%1C=%08%12%118%3E!%25%3E%22&%02#61%009e%002279%1En3%13-%7F%07#%168%0E2%05*%16~%02x%16#%08=%0C#w%3C8~n%07%18%0A%3E%1B%18%09*1%09%06%18~y7%608%19s*%1E%1C%13%10%19#%1C%18%3E8%00%09%0E6%604!%3Cna%00p#%3E)b(6%1Ee%1288;r%3C%0Da%1F%12r%16r%1D%18*!9?7$x/%0B%092%11y%04%254%3C%7C%07%06(/%07%22n%03%22:;%01%20?x-g%1E3%22%14%16%039%18?%04o!&*d%19k!%7D+%11%7F%1A(%1D%03%0Ev%132%07q%7Dw4'%01.%25%7D%3Cg?.%0C+%1F%1B;%22x+kf%3C6)?%0D%1E%22y$/!%3C*%14%007%13%04(%0F&%20%09'%01%0A)%04)9%0C%14*=%15%7F%0E%16%60%0F%139%3C9.4%08%1E/.s-=%22%09%0B8%7C7?%096%07%1C%3Ce%1D1%7Bx%60e%20%038e?%00%1Fp%0F9:4;-d4!?z%0B%1C~%08%1E%079%1F70)3;y%16%1B=%60t/%0A%0C%05%22%08#%05n;;js;%0B#%01%14%18&j%06z%22%3C%7D%00%06%7C-16%16%00%1Ar=%031%7F#%1B%03;%3E(9v%06%06%11%1D~8%0Ex.%15.t8zm=%7C%02)'2%1C%031)'/%20%110%25%3E%1C)y%02?%3Ci%1F%7Fp%1Fy,%14%0A$x'%1F%3C*%14s%00;%7F8/s%0C=4?u%08%1Fdm6pg%0A02k%11$%20%3E%7C%064**%1D9)myzi%60%7Dug+%17%22!%18&*%09*2p,%17%1E%18,%22%06%22%14%05,+%024i$%25%18%1B--%04%1E6%09v1(%06%06%06%0A%18%01%12%14%09%0C=9d%12%3C%03%1D%7B%3Cx%1A(2&%1D%10d*h%19?%14%3C86%1D%0C%17%08%0B%01%16159%1F%0D%15%0Fs%7F%08a%12z%10%1F#%094%0F-%19x%18%17,qx%0D2%22=nr%19%3C3%60%11%1F92%01%0C%0B,%17%1D81%02%0C%0F.%20%1A*2%19.%1B1n%0A6a!3%1B%05%25%0B%1D*)2%0C%20%07$%22,%0B:)8%16%1F*?%1F21%1B*%1B%3C.x%03wa3%0F%03:7%18;%12%04,%17%15%04d0-)n(%0E%17%139,%16%3C$%3C%03k%12%19)%099%0B1%18*%11'%01%08(;%0D7*%14&&%09%08%14i$%12%08x?%25.;=%00%0D4z8%0Ae%03$%1A%0C%02%22-%1B%0D*!w%11%11&%0D%0D%1F%13%12%19%11%1Ba%16%3E2%11d4%09%14%20%00%3C%17%08%01%0D+%3C%07%10%01%09%0C&%05%15%12,%00%1A%22#%1C%0A%11%1F%0F%0A%7B$r,%05%10:%02%0C!6%1E7%03%25%06%01%03%17%01%18%7D+0%16%22%0B%0A%16%0Fa%60(;%06%3C%19-%139%04%60gy%03%03*0%1B%09j%7F~%1B%1F%13*,(%16'%3C#%034*7%05%19%03%1C%1F8'(/%03%156dv=%1C)%02%1E)%076.%01%0A%10*%00%1A%1A%7F%14%22%7C%20;36%08%09%60%13(t%00%0F%11%20%13%16,*%1Ed%08%0B%02w%1A&(v%0A%0D6f%0En%18*778%008ea&%0C%18%02%0A%15%03)+8%17m%1B%07x%0D:%18%19xy%08&%16e%196%09()%14;,$47%1A%02%22s%0D4%18%04%18(%1B)a%13v%3C%0F%15)%1F%0D%1E%0D%10%0A%13%08'%0A7??*%03%1Ak%03%20s%13(%18%151p%0D%06%1C9%0F1=%7D%0A%12%7D&%09&,%09d%16%02!%3Eaxy%04%00%09%1D-%002-%01%1Fy%25%3E-%0C%15.%13#%7C%1B;)%18%11%09%0C%01%124%0D%7D%20%16-%0D2%1D!%022%04%7C%00%0D%25%1F&/%0D%16;%09%03;%1F.7%7B%032(2%17'%10%25x8%01%20-%0C%055%12!&%19z%01%1A%7F%18%1B%03%0D%012%0C%25%0F%1B%11%7F%0F%02&=(%041%18%1B%12%3C-,'%0D*=%01$(%1A(d%18.?%1A5%08%02%0D%0D%08%10)2y%22%18%3E$%1B%1B'%7B!%01%1C%1B%19%172%3C&'#yh%00%18%09,%0D.(%1F).%02%14i%07;%06:%1C),%13%7B?%10a((.%0A%12*%06qz%1Eh%1F%09*%11)%007%09%00%00%17=%1516v3h%7C/4(%25y1%25%25k-6&.3g%046%3E.2%19+8%3Cgr%7Dxu5%053!%1744%1B;2%7F%3E%09%0C#,%1D%20%3C%05;'%14%10*%0E5%19%1D%14d=%122%7F0d%1B%15%004i#?%05%20%3E%17*%03%04%3C%17%08%11%0F%033%1B%1E%16%0C%05d%02%3E%60%06v%0Fw%18%7B%18p%1D%0A%60c%13(%1D%1A%1D%7B%0Au*%1B%10%07(%19%047*%12(%14%06%3C%1D%13%05%05%25%08%08%12%22%0C%0F%097%13%3C&r%04r1%09%0B%06%0A%1A4?v%04%0F,3%04(x)%17:%7F&%0A%0B+%09%03%12$*k%14%0A%03%60%0F%0E%1F39%04%1C%03%08#%028&%13%1C%0E/%07%02a%20%1D%0C%04%180%02%13%0B24%3E%16(%15:y%1C%18!1%0A%04oi)%16%12!%10%1C%0D+,%1E%1A%14,%089'l%05%0Fn%08/%1E%03%25%06*%07m%1C%1Fj%09*%124%0D%12(=%08g%1F%10%0C%0C2%17%0E;%1A!8)-*%0D%22%03?,%0337%18%25%1F%00%18%3E!i,y%11%19%13d%12%02%02$:%06%3C%20-8%15(&%02%0A%7C.%17(%0E*%22)%1A%1A3''%0D;~%08%02==%168%18%1A%0D3)%7B)%02%04,3%18%123%087%1D%1D%1B*%147%19%0C9%0C%1Ao4%12#%04y%1C=3;8%16ad%0E&%1D#%1C2.%20%0A&%0D;%7F0%0E%1B%3E7,$%18-=?%07%17.%06%3Ec%12%02%19-o*?%22%05%3E+%7Fz%113*m9%073,%1C%1A%00%1F%22%22%3C6c%0A%17':%1A%22-%18%20/%15%05%01%00y%18%0E%132%07%11$%03%04%04%18%05%07%11%19:/8+%0C',(.%25%1A%1B%06%19%0A9:%08%04,%1D::;%03%22%0A#)%09/2%25%0C2%0A%0E%1B%0C!%13%00%11&%3C=%0A)d%0C%1E%0A%157%7F%053%1F=%19%0E%08r%06h%01r;%05;:%12%606%02%19a%1F%080(%7C%1B%1B%0Cs%22?%17?%1A4$%20%20%17%7Bv/%1C%09%3C%1E%03::,8%08%06%19%0A%13%01)%22$%0F6%01~%153%09%08%1B'%0E%09%25%037%1A&%0A%0B2%04;%0B%3Csd-zm%0E#%3C%22,$%25-%20p%07%20%25*0%3E,m%19/*%202a%7Dxn%7Csr%7B~hhg$%05%3C-%07/5%07%06%1F3%12%112:had%16'%02%0F:%3C%10(!%0C%019%0E%1D%1C%17%01%7B%19%20%3E.%04:;z%084#y0%7B%1A%0D%02?p/%16%0D69%1B%1D%22j%22*%0A3y%0A%1B%09n,%0B0%1E;%16%08x%0F%00%7C%04;%0C%1Ab$'%0A%202%12%01/,%05%1F%01'y%00?%01a;%02%18%255%05%012%7B%7B%1A%15r%0Ed%00%60%0Ad$(#=%3E%11'.%22%1D)%0E%04%126/%3E%05%25%7Cy%15g%7C7%06%7C%0F!-%0D%7Cx%00%19?%19%20%7F?3%1C%18%60%22m%1C%0F,r%3E%3Ea%0D*!%01%13%0A%01;%7F~l%16%06%20%20%7F+1y4%25,!%1E!q%18%170%1C-s=%19%0E%00;%05%60%06r)=1=(=69%0D%3E%03%60%14%1A%02%3C:-%0A%13/(!%08%18z%06%13%1Cv%60%03%19%1C%164%1E%1E%19'%0Ch%06%0E$x%7C%1A5%1B%15%7C%18v%009%02d%7C7%15s#%18%0Am:%0F0%3E%3C,!%7Dsy%7C=%1B=n%20%006%7Fr%02%22%7D%15%1Fd%05%7F#%11%08!%03=%19:%19/n%60)!h%18%02%04%04%0Fc%3C%17.%1A%03d%1Fx(a+(&,#722=%0D=%06%14e%3Cn%0E+4*%1C6%60x%20%0Ad'%0Fa%1Di%12,%11+%1B%20%223=%3C%14*%13%0Cs%7C3$%008;%04%09*~)%7Dz%11#'y%02,r2%0A/%3C%20%3Cg%60$-6/%1A%18%06=%065=%041%0F%03/?=us%1Clc%7Drx)ob%25%0Es8/%13%08;%7F'oa;0%1B%01v&%1Ex%08%17%15&%02+%7Cv!%06xn%1Dy%3E%0484%0F%1C%17%11%18x3%1El%25%05%0C%09%01%0E%22%20/%00%19!7%09x%0D%1A%20%228$d%18%0C%14r%221%0Fj%15~%03%25'%089%07p%1Baj=8'=%0D%09%3E8j%3C%0B=%16's%09%08ndx/%1F%1A-%22!&%02+%1E(&.%0Aa%20e(%19%7C%06%3E%22xj%609%11%16r%08%07v%033%0E2282:d4ra%20%22%1C*%7D%14%0Dg%13%00%0D-%11a2%11%0E:)%18%18%038%16%16%1B%183/x.5x%10#%7D%11%1D1%04%60%09j*/'%12,n%203nz%0C3&)y%1B%7C*%1B?n%0A%1Br%11%1F%09%11%1A%60%03%0Ey%0F$kh%07$%7B~a%7B%3E%0C(7%1D%7B)-/x#)%0A'%60~%01%18%0A;%1D%0B)&9-98v%0A%60%07-?%20;%60%0Edy.h%1Dy#%1A3%01x7#%1E%0F%15%136%0Dz/b/;(%7B%098%07%18/%22%3C%12%11x%1Fv;8ds-'%1D;%25(%07%1E0%3C%0D%11??%1B%7B%08%25%1A%08o#%0A+x%18%3E%16%1B%05#%0Fl%3C=%03-a%10%7F%06%06%7F*:%22s2-%0Cl%13-91%20)2%0D%1B~!%13%0199,9%1C%00%60%0F/$#;%3C%17%09y.=%7F1;#%0D%7F%22%18.x)%1C%1A.s;%1B%7F3v,%1Fo6%06%13~%0B/6%19%18%60av%14%60%0E%06-%09%0A%1C%16s=j*%1Fn2%00%14*8%22%096%03h%1Bn99j3.sz,j8%60%06%18a%0B%09%13&%60!r%01%09;%054o%00?+9&%01)s%02%1B%057%07%1D-%7F%01%3E%3C2q%1Ewm2%13%05%02%3C#%18%0A;%60y%136%02%11%04#n#%09y-%1B%1A%18z%05.$%13(%25.?yv%1B%1B)8e/%1E%22,%13$.%00s%20/%1C1%05%7C%04%13w%15h%06%06%1E%06i%1Dsy%07%1A%03%12/j%00+%1A2%13%0A%7F&%01g;%09%06(j%09%01j%20%18i%2226s6%017%05%1B%04%1Ba%229%09%7Far2,%0A%06+%11%3C%13;=%07%20%089(.%0A3%22%06%0B%1B'%134%60%10r%0B7!'%14&%16a%07%7Cp%08;%15%7F&v%7F&%17%1A-(%069%15#%19%00d6,%04%7D%07;%16+%01%7Bw;,o%19.%189w%18%00%3C%148w:%038%05y#.is%0E8%16%1B5/t,%06*f~%0F%06%3C54%03%0D%1B?%00%7F%0D%099%1D%03%1E!%11%1A%25%1C%11#;-%0A:%7B%03v.=%136-/%01v4%04s#!a%0E%15%7F5s4%0F%17%60,%1Dv7d-*%7C%1C%13%20%1B%03%13a,9dv2%16=dd%10%22y%20%7F;+%06:%20%1C~19~m*%7C%10%18%19jd%1C9/(.&%7C%05=%3C%1E%1A=*s%19?%0A9p%08aia%18,%1Fw-%3C=62e%1A%00%04%0A%0F%0C%3C9%0Fy%0Dv7h%13y%1F%16l%1E%3E%02%0Ayj%1C%0A%08ye4!%08p.4%1F5%029x%254%1C%04%22#%1E%08c%7F&=7=%3E%11s%22+(&%009d#(7%05n/%7D%3C%08%609dy%3E%1C%25x9/o%25$7%7C$%15crv.%7B/8#%14;%09%602%07%082(n%1C%12%19%20%16!%09!%0E%1Dv%0C%18,.1%07/%02)p2z5%25%11$%0A,?%09%7D%0B%04%7F;%3E%027%7D%0Ai%191%25r=%17%7Fz%1B%60%18a(%03/;%08l7x2%0D%7B%60%11%06x%1B77%1F%126%05w%0Ef#7%1C%19a*%7C%13:%19?%00;%19'%03o*d2y%09%13%0A%7D%0A.y%1A&z%04%1B%25l%03yr3%018%06d(-4-8%182%7F%0C,%25%3C0%0D*%3Ch%25%07%07%01%604d%16%00%22+%00%1Avr%7Fi#%60%20.%20%3E%7B9%10;-#%1230%0D-m%3E%7F%13%0A%167(%1B38;82%1Fq%20%0A%166,$%07)*%00%0Aq:w%0F1%1Fx%188%12%1C1%0F.9a%03y+r%3Ea%1433-8%20%1B%04w%25-j%7B?r36%152%0Ct%22%0F,%25%09%03%0166'%0F,%19%1D%00%1F*%22~8%3C%7F(j%1B%07%11%14%256%1A=%0F6%06%22;%1D%14%16/13';%1F%1Eqz%7F%01%14%0C%25*%22%1A%1Dz%08%7D%22i%19#/%13&6(%0F)-w%094%7B%08:%7F%03%60%7Dw#x%20%00%1A%00%1D%19%60%11%1D%08%05%078c%08%228&%1E7s$9#%0A%09z'd%1D%1A)%22%05(%18%0E%09,4y%01j&%0D;!&%202%1C(y%1E%206%3C/(%7D%0B%12%1E%22%25%01%09%19%18%17%0Cx%20:%08%0A%0C%22%60%3C%224%08%1Fr%20%60%02;%0Dhf%1D%15z%7Di%05.%14%13$))$,%7D-%1D2%7Dw%1Eyk%3Cx-=%0Ah%05%25%22%20%17k%01.%09'%0D%13%08%18p~?7g%22%07y~%0C%3E%1102%17%01%25%03%08dx-?%602ye%1E%0A%03'%0F9o%08%18%0A)#0*%7F%13'8lg%13%0D9%056%22)98?(%1F%7Cu$,1%2591-%0Ah%1698%19%07%0Ee%7F7%19'v%08?%04%1B%098%18s%15ya%1C%05%6071%02k%0A%18%12-9j%3E:%17*'%16%183y%07%09v5%22%10%1D%19%0Cc%7D%11%19yr%02s)d%14?c%18.%3Csd-zm%0E%20y'%22$k%2005?a8%3E+9%25&?%60w~ym%1A;%3C%22;m%7F~ad%7Fvg+%17%22!%18&*%09*2p,%17%1E%05%1A%25s%7F%0D%1B%06x%06%18::%07%15%08%7F%0B%1B%08u$7*(%07%0Dr%06%0D%601%0F%22%17%18%608%15%18~(3%0F%03#%0F%18%1D%03%07%1A%17%0C%09%1By%3E%0A%08*8%11%7B%0Al%1C%1D%14%1B%7D=5%01%17%06%1Em%14#1%1A&%0A((v%009%1F(%1A;8%0A%169%0A%04(%14.)%0F*%0A!%0A%1F#'%09%0Bi%3C%1E6%06ar%7F%05%1By%0A%00%14%7C%11:=3%15%12s%0Fw%3E'%0A%07%12%20%1B%1B%07%14%7C%22%00%17/&/%251%04%1A%0D%03%18%10%1F$%00%22z%1F%14%3C%00%06%16%0A%7F%11x/*(71%02!%140%07%0A0!-%0F%22%00%07%11%0D%0D%07%01%0A%1C%16l%039%18%0A%09%20%7B,%02%0C%7F%083%02%16%0C%7F%09$?%16%08%0D%12#%1D%0F%01%02#%132.z%1F%0Ag%0A%14%06,4%15%05%20%0A%09-%1A%60j%0E%1Ea%11%02/:%06%0B%19#w,a%00%15%1C*%60'%3C?/q%22%0B15%08%02%0D%1D%09%1E%01%17%0Ewa%13%20%0F%0E:1;%0F%033-n%0Ayt3%1F%0Bds5%0E%07=#%041#%14%1E%01%0Et!(%0Ed%02%0D%0Ev3'%3E%15,+0%06%1B%0E%0A%18:%1D%22-%19%03%3C'%0Cu%05+%1D%01%01%08y;%1Af1p%0A%22%1Fd;%0D%03!%0B%028%05%08%03v%05%09%09%22%03%0C3%194%09v%188%19%0B&%25%08%1E%0A-#!%18#%7B%209%1E.%17*)%1B%3C%10%15%02%0D3%005%22#,%01%7B2%19;%15%20%14%1E%19%0C%0B,%0F%18%11%07;r?h-zm%0E%3E03k%009+71k%08g%0384k#$%2029$a%3E=%3C%22gxrxmi%7Dm.%00(i'*z%3C%1C%60%0E%183%7C::yy%7B;%1B%01r%06%00%04ob%20%04%06%1B%0E=%20%20%01%18%1B%60%25t%19!0%06;%07!%1C%036*%25%00%252%20%12,%18%7B%03%03z%08%06%7B%1A%18%7F%05%1A%19%60f%1E%0D%3C%07??%00%0C%25~%11'%00%11%1E%256;#%11,%201(/r%12#oh%7C4%11%09?(~#'=%03&%04#d4%09*1%09s+h$%08q%04%7F*b%1E5%03%25%122%3E;%11%22;f%7C%16%7C%0A+%1B%03x2zk%07y$3%7F%17*8x(w-%20rw%0C%0B%0A%15%0A$#-%15f?*%7C%0Dk!%1B+#a:%7B%073x%01j%07/+%00%08%1B%01%05;%1F%18=%20%08%06%60%08%1Dd%0Dn%0A%0F%08#r%13%11%08%1B(%7F%10%01%1D+%1Dr%11=%061!=%1B8%20%005%7B(%1A%190%1C%7C&)%03!%03%1D%05%19%1C+%25%1E%11%13%00%3E6d%05%22%01%0Ai%7D7s%0A%163%1F/9%14!2/xd%16%16%04%7F'%136%13c%19u%1F%06%12e,%0C(%17n:%7D%25!/?%08%3E1%1B%01%16%60&%15%7Den%25s%1919+d%1B%18%7Dam1s%19%256%0D'%1Bw%11ah!8;%1E7%09%7B%084%13%025%1489/8h%1B#%02s%05%3C%08%024%60%02.%7F3%03%1D/%0Bg*4(#%08i%1B*d%3C0%05r%15=%3E%0D%118nx%19%1C%25;%11%60%1D%1E*%11%0A%01%1E%14#%7D%22%116%11d%12u=)5%12*%03%09%07*%1D%04%18?%0F%3E;%1C%06%25%0B%0C7;%14%1E))%05%1E&;%1B%0C7;%14%1E))%05%13&%03%7F(;%7D%07'%25=%1C%09x%2097(%0D0%20%02%0A(%0F%19%7C%0C%1B3%03%08%3C:4%082r2y%0D=%1A*?-%1B%06%0C%059/%1Fd%0Dq%60)33-%11x%19+%19;s1%012i%7C%20#%3E%1D%1E%12-%07%19va~%0Adxn%7Bzt%18&*b-,%1A&7#9%08%11%1A%018%05%22995f=%17%077a&%11%14/=%3Ee%1E%00d&%1D%0190%3E%03%08%06#%17yz%15%17%7B%18x%7F%3C=1/2?%09%3E%01x)%02%60h%7Fn)%17v%18!$%088053q.%05%15$%12/%1B%05%0D%05%09v%7D6%1F%14!x%07%7Fa%7Fx%09;%7Ca%1E%1C%08%1B68%25%00%031&%60%1Es%09%60'ah=*9a7%7B%1C$$8%0E3%03%14!4%0B%1Ar%25?%1F%0E%25%02%16%1E$%1D%09%256s?;3?x1-%0B%3C'%05%7By:3%3Ey8e;%3C%22'!%06l:%00$%7F%167%3E9%1B);!%60%0F%13y%7D%03%1F#%0B%1A%3E,%16?%1B~w%60g%0Av%7D,;%1D;%00%04a%0D(9%0F#/%0Ae9.r%1B=%13#,)'%1D%02%201%0C%17%1F;8%04%18&i%0A;%14%00'%0C9%0F%08%1B%06%08%04!9%0Ev%1298%18%1D%0A!%1A'p%1Fv%3C%15;%25%60:%18%06%19'(%19%6078j%18%14%08%0A6pg%088%3C'$%25n%1B%22%22%25,+u%17*8-'*8%0F$';!5gx%7F~%60cym.%00+$%1C/z=%1F%16%1E%10xx%09%60%7D83%17*%13%18%17&%080;%02%18(%0C%15%1Fz%13%04%0B%20f9p:%055%05#%0A%04%1B)!%1Aj'%3E+f%1D6%1B%1Fo%25'%12%60%7F%1Fd%06)%60%0C%1Ca31#?%17%13y%0B-%7C%189z0%19?%08?1v%0A%0F%17%12$9%09%03%1C%00%7D%13:)2%17%06%18%19%07%08%1A%0D&x%01n%1F=%0D8%7D%3Cc%3Ev/61:%02)=%0D%03=rn%60w-e%06v%60%14%17%7Br5=%17%0E%16%1B%19%7B6%13%06%60%1B%7B&0%1B%19%0C%07%1C0?.sr%20;a#%0B%1E%3E%20%60%06v%3E%20/:%0C99%0D2%09%035%12+%03%08!%08%06:%0C%1B%19%05=*%0B$%03%0E;%22,%1E%7Dxsz?%3C%09y;%7Cm%04%13;%0A%16%1A%17?;%0Aa%1F%3C(%0A%0D%16+;%7B%13d%17%1D:#7~(%12%1E%18%22:%1C#%7F(3%03%3C#;=%10%1F()%3C%0Fy8%1D%17:%00%19!)%20d%0Ans(%0F%023%20%05+%1E%1A$ux%22%12%7F9%15%0E%01=%0629%04+l?!.%1Fx,*/7%7C/-%09%1C%0E=%00%0D*%06s%0Fer%16/u%12x#%08%05u%13%0A)%22%02j(/%60g%1Cy%0Ew%1D6d%22%25!%20*&jy4v()5*%19%14%15.t&%144%112#1+v%19%13%03%07e1%00z,%0A%0D-%17=/;9%605%1Bv?%08%1Dg%7B9):%00%15-)%20~a%03%00%04'%16%0B%05~/s%0D/(%11u*%7Cj(%01v%7C%1D=%00%7F&x%08v%00%01%06&%25.%08rr%7D%3C39%7B%20%22%25;%181)%1A%1B%09$!0%1A%0D%12:%04u8,6=)%10%22%02%0E%03%60%151%1B%03c%1B,%0E%01%0E%7Fz%08#%1E%1D$1x%7C%1A1g&-%18&6%07%1At&%0D,*%18%0A!v%15i)&#%16%16%062%05%3E%7F%0A%05%18%08%0D7l$%02t%03%1C%60%1A2%0D%3C%18:%16%7F%0Bd%0F%3C%7F%3E%19%09%22hh%13%15%0A&r%16s%11%19%7F%20&2%00%1Dya;%60%07$%7B%09%06%22%1B-%09j8%0Fu%0Ew%3C%13~;8%02%606=(d9+%01%25%1B%1Bz06%0An(yl%19$(s%032%05%067%0F;%0Ch,3%12#%60;9;%09=%18%1A%7F.%0E%02(%1A=%169+(%01%05%04%20/%0F)%0C%0A%0C~%0F%129%04'4+7%026%19(l?%0F'%7B%0444%1B'y%16*%7B%02%193*k8%0A5#%22(%11,)%1F-%18%1D%04%209e%142%25&'%7D/*'+%0C=%0E!s2%06-na%08r%12,%09a%22(%1Ax%14%08%01%11.%02%15%1E%0E%05%3C,0%1F%034%07*%0B!sp%20%18j%60x%0F:%0Ai%08%1B%0D%03%7C;%0As%16%1B',#%1F':$)#2r%06#=%062'/%1D%09%09%06%0Dd-%0F8%7Bq%60:%16%03%7D0!9%092%20t?#%16%25%02%13%00=-%05d%09)??d=9~%0B#%03&%08%05%0A+%20,s,&#=/%0D(/64%052d%18-?%04%0A3e%09f'%08%01%1Aa))%09%1F=%0D%15%1A8%1E%1A%0Cb%60%25x%0F!%22%19x.%19%09%7F;;%3C6m(;%18.%1F%09)%0D%11%7B%16;h%22%0E%60%1A:%08#%16%19e%0A%07%02%1B(%3E%15%20%0F%16/%14%17e!w'%02j;%19$%0F%18h%1F20%3E%16%15%1B%7C%13%0Cw+b#%0F2=%1Cg3%06s%18*%19d+%7D%0D?dx&%60%7B-%3Cd%032%0D?(%60w%0Fv%1D%3E%7B+%09%16%15e16#%190%05s#%09z1hz%15~%0Bn&%20%0D%0F%18%0F*'#?w%0C&/r*=%1B%08%02y%12%094'%0F%151#%13%00;%22/%08%3E7%0Fjx%09+i%607%0C%7B4(%13j%08%162%09%1E%0E/%25%1Dc%0A%11~?%00%00)u%7F%145:%0A-%60%02v%12%1D8%1A%17%3C%1F%1Fu%06%3E%1F&%0E%22%11%03.%02%0Dt%19$!%00%05$%1C%22%0D%7F%1A78%7F%3E%07s*%60%0F8ez7%0A%0D%3C2%3Ct%07%198%1D%071%3C%06%1A1%0F%00%05$%03%01%06x%18%0A%088.,%077)%19'q'$%08c%3C)-%07k(%7D%1B%09w6%06%7Bjz%02%13;-+%3C=?%16%0D%03-%00%1F%17s%02%18%19%11%17%04%05=%00%0Bc%25+.%1En*%25$s!%0E'%09;%1F%08k%60,r%0F84=!%22=%7C,%00-pr%0C%0B6%11w:?%3C%013%12%20/%09%22~2%20%02%1E%25x%09&9r%07)%058%7C%0B2,y%1B#+9%02%17%7B9;2%08w%1C;%084%06%19x%07,d--%0E%05%1F%22s9%1B%0A%17a*%04~wo%03%25%0A%187!f%04%18%7D%3C%20%1C2%06&%18/%1B!%02-%25%17%7Fr9%3E,4!2;%0C7o5(%0F%0C%19%3E%3Erx%1C%14%0C5%7C1#-%01%15%1Fu%1A&;h%3Er%3E%0A%16&%7D1%204%105%0Dt=%1F%20a%0Dj%198%11%19%03s%05%3En3/9%08%16!%04%1178%08n:&$%1D%14,%11/7%3C%0A8%7F%1D%03''%1E#%22sz#%14b,%00%19%09%0Eb%7Cy%7F#%13%1B%1D61%02oa%7C7%09%17%0D%08,%08%00#.:2%04*6.3/%0C%02%3Cm9%02%22=%031%3Csx&z%09%15%0D9%20%18%14i%7F1)%7C(%06%12%0F%13%06%0D%01d%16%11%0C-%13%1A8%02v%08%13%1F%12%12%07*c%01%10%7Fe%1F=%1B%059=o%1B%058%19;%0A1%0Esy*?1r%25%0C%3C%3Ca8%11%1F%7B)%19/tr%1Elh-%18%05%0C%1Bg%7F%09%25:)&-%148/%09!%066%078%13%7B%05%25%00%16?%1F9%09%1F?i%1D%0F1%1A%0Aj93%15%7F%077$(6%08/%604%18%22~e%1B:%60%0C%1Ew1:xs%19ei%12%07%10s+%18%00r%0A8!7a)y#vrb%011?%03v?!(z%04%0A1.%09,a#%25%072-8/$?v%0C!;7d0%12%1C%017d%0B%256%163%7B.%1D%1D2*%22,#,:%20%0C*%00%1A%11c%20+%1A%22n%16%7D%12%1E%3E%0E*'$%18(%3C)%01/-&*%1A$%10%189%3C%1E'%0As8%3C%12%20.r%026%25z%02%06%3C%0C%1F%2011xo1%034&%7Da$%0D%1B%07~%1C%05%20s2%1E3%05%012%1F)%01%60%252%1C+%187%18%22%0A%04%0A%06%12v%18%0F#$rv%3E%1A%1E%00:%0F%05y%16%60%7D9%22%02%13%17%0Cy')n%1437%7D-%16?%0A0%1Az-%22'%11r;%3C%051'%12%18%18$;+%18=%0B%253%0D%18(6g'%14-~=%04%20%1B%07%7C)(y2%3C%0A%08by-y%7C5e~%08:%00%1F='t9%0D%1719%09%1F%1F%10&:/z#%0Ee:8%01z?b%11j~%0C%09b%1D%05%25%17%3E%7B%05x1%00%1E5%07%0C=$j4)8&%086%3Cs%19%06%0D=%1D%05%0A%0E*/%19%02%028%1D*%25%1D&$%14+%60=%06%0C%7B%0B%04&xr:rc30%07%04%0Ad%7F%15%03%3C%20%00-5$%0A?%1C%02+*7;d%18&?+*?(7%09a*c22=-%1F%1C%3C%13%1C//i%7Ft%07'%0C&%08%05%1B%17v%22%20%14%07%22%1B##ud%148%3C%12%09r%060f%7D%04!%1D%006%13q%7B'%1A%7F*.%0Dv%0Ef%19%03;8%17%2283~!m%13%7C&'%0Daf~u)%18%3C$%3E%0D%0C%0A%1E%60-t%11%091%3C%7D'%03/8%09%0Er%19%1Bo%03x2%01a%01%25%0F%0F%01%07%15%06%003-%0C)%60%3C6#$k9%13n%13%14a%00s*%18%7F%1F%1D%0D%07%13%3Ea%03%20%15%25#5%00%00%0B%03%1C%09h%205%1B=%1Bc%0F%22?v5%1Cr%00r'?%22%7F%16%7Cw;%7F;;%1E7%12:dp&6%0E%13%12%1Bd%025#3%07%1E,%0C%25&%10?%7B%03%25%18j%13a%128%1C%03%0E~=)zv8x%604%06%07)%02%20)8%0D%25%1F%0C%7B%7Dq%00%0D8?y%0F%13%22?%09%204d(=a3%04%027%0Cf8/%02/%12%04'%03-$r$1%03%03(%1B1%0E,d90g;%11?wo#%22xz%17rh%18$3%0A)es%121z%0A)xs%0C%063%25,%0F(%07%01$!%15%19%0C%03dz*s$6%60%05x%3E$j%22%1A'%0E%1E%13%7B%1F%07-%147%16%03&%1B%1E%116%0A%20%3C%1F-g%7D*%22%16%01by9%11e3er#$w%14%1E%60w3(%14#s%15#%00a%0A9q%60%04%0D(&7%3C%01%3C%19x(/zl%1C-qs'/$%07%18%7C%0D%1F8#5%0Aw%13%12%1E3&*-%00%1F%13%7C-%3E3%1A-.%006f%7C%07.%05/%19%13%07-(%1F%09%1D%0C1,%08%028j!~?%00%7F71%18*4%08s:%02%3C%09/;%02%16o%12%02%05!(521%11%038?%20;%1B#!?%25%18/%7B!r%0334*#%0Fh%7F%22%3C~#)%1212;%0B%00=$%20%3E%03$'%15%08%0D%03%1D%02&%7C%22%17%04y%151%7B%1C%20%18%18!*;;.,%7B%1Aj7'+%0F%04%1A(%60$%068%09%07%112%20%02)b%00%11%19ar%3E%00%09s%0A%03%09%09$%09)dm6pg%088%3Eg%0C%3E/=%14%22#g%7Chi~q~b%3C%1E:%17'=%1F%22%0Eq%0E%1B!9/4%20$%0F2%7B2%1A#8:yt#%1D%135%1C&%1E%3C%1F%13s%1By~%0F%20%06%13%09%02%08%15%1D%04?e5%25%3E.%1F=;%18%12s*;+%12%08*%01%1C/%00$%09.%0C%1C%15%7D%22%0C%02%117;%0E%00(%0B!%1A'%0A'0%16%7C2%19/%0B5.0%20%7F%0D%20%07%1B%3C%09%20g&'):%10314%7Cyjc1%15.4*a%0D*%3E%18!a%1A%03%19%07%0Fc%1A#2%1E4f%1B0/%14*c%0A%0C?%0F%14%1F%0A8~7/hzs~%02;%09%60%0E%25%0D3f=%0Dy%1B?%7B%0C%0B~%226%1B%1F%08%06%1F%3C%14%04%00#%09%1F%22;0%09y%0F%09%181%03w%1E%20%0A/!z%1Ac%20r%20%0F8%7B%25%0E%7F%7B,%1538.%17%3E9sr%09?:c?%12%1E(+*%082%0F%067h%60,%02%06vh%25+8~.%1D%3E2-$%0Cf1wz;+%1D%60%00,%7C%1E%15%7F%04%04%0F%08h%07)%0A%0A)%02(%19%074r%7F=$x$%3E!%25%02%04%05%3C4%08%082%0B01%0C%25$$%00)%0C%0A#%01.!9rd()b~x%136%17'%035%01%0B!gdn?%18:%7F-';%17%18*%01%0E%22%033f(t%11x%18%191n~%7B/%04%7Dj%20%1F,#*0%22%17%1C%7F20%22?%03f(4%13%14)e('%05%20%203%0C%14%20%01-9%1B%0B%7F%16%1Bd%22;y;%1F%08#y%20#k()%19~%18%0B6,%0E=~.%1D%01q%03-%15*%056%11#j%3C%7Dj%117%08%15%3C.%25;%1Fb~%04-a%176ry$%1Cke%7C8%0A%252=$vy%1E%1E83%11%11%7Baf%1B6%07#a%01%25%02%03y%11:%00q%60*v=%04q%0A%011c(9';%03:--$%07%0D7%7D%06%60~n%11?%20%13%7C5&%04%252%05k*z%16%06%1C%18%09%07.%08,%0Bh%02x%04=2g%20%18%20:%1E%06%0432%20%60:&5%0C%0D)a!t%07;.%04%03%17%18w%17%02%19%14~%1B*%07%05%053%07.1%08t?%17%1B%17%19%03%25z%03%05%0Cr'?%0F1s%18%18)%15%0717-%016%08%1B%0D,%06%08%1A%04%10%7B%1841$r)w%1B%15%11p%19%04%1C%16%0E;&$1%11d%14$%1F%0C%01/w%03%1F%16%20%22#:%20%17%3C%09%25%07+4b%1C2(:%03%03%7F%13~?%0F%1237%01%1B%1Cg&0%11%19%09%18(/%13%1E%08%3E%11%0D%25%0D0%08%22*%3E%7F!%15%0C7%02%0F%0Dg%1A%15;%1E/%06%009%1D,%00$%7Bw%02%0D%094;%03'%0B0&%01%0B%09%02ag;%25%05%25%00%04%1E*%19%7B%10#&-%09%1A!;%3E/9%18.%15%1C*%0C%1Co)/%22%60%1F%119%11%25--o!%7Fx%19w.h%1D%14=:%08d%1D%25%02*+%7B%7F%20zx%20!~%1Bz#%3Ed%00%0D2?o%12(%10$w*%11zr%18!/%03%1B6%1A6%1E%1Fry%7C%09%16%00&yz#8(%1B%13%3E4%12i%7C6r%3Ejc%228%18%0A%0F%05%06%11,%1E%1E%09%0Av~%0Fdm6pg%1A15k%07%22)1$k%0E%25n%0D8.a%1F!.59m%0C%7D79%3E2gxh%60zw%7Fb%3C%1E95&%1A%1F&%7Bq%0A%1B!h%60-%1F;%0D%11%1A0#%1F%20?%00%13%02%22(%17%1D,:%1D%12%25z*%0F%7F%1E%22%0A(:%22%0B%13:%03:#)1%20()%1F%13%13%121%22%22%12%17%11&%0F6%1E3:%09%12%09%1B%11%124%02%191%1A%0A%18%20%04%1A%09%12%14%02=0%12%1C9%12%0A*%7B%60r1%7Ck2~%00%07%1D/9%1B%07#%7C7%25dxd8?5%25%1Bs80%08#y9x%1C%11%031%3C8h99(%1E%20k&/(%0F+8%199%20%19,%11%069#%19%0C;%14%25#9%0Av!2%05&)%17*%20%0F)%0Bjf%1E%25%1C,%60%1E%04u-%20%15d/'%25%08!%17%05q%07%1Ba2#-%04%04%16%1Brq%1A%0C%20%01%7C%13%19%7B%08%7B%7F%1B~48%60d;%0A%09%01%22dn%08%0A1%09%06/%7D8%1C%7F%12%04%0C;%1D%11:v((%0F%18%3E+%03a5%19r3%05a%1A4s%03%1F8)%7B9%0D%13%20i!.2x?%08&,%0F%01%01+%7By%19%0Fx($/*%1B%03#%13/u%186*9%1Er%3E%258%038%03%1E:-%17(%1B%13%08=(%07;%07%1Bn&?1%1F+%1F%01%7B%03/%1D!&%1E%13%0E%05%60%22%1B%1B%12%20r%12%20%0C(%1F%00%19,%08%20~m%15%25%00%19%08%097%1A%12%20%1B(%13%198/%0B6%13%20n%02%04%20%22%0Dp%7C%07%037%058%7F%16%1C%1D%0E%16%60+%1D%01s'3%0A6(%60s%06%01%0A:%1A;&!n%0A%138%25(%0C5r'%7Dw/$%1Dj3%20%0D%1A%1D,17%1Fg%3E%00%1B:%609%1Dr.z3#%22%19~wn5=%03.%00%18%3C)%03%01xif%7Cs%02%061%05%0E,%11%1Bl&%18%04%60%0Av%05%01;)%1B%03fy)3%3E%16g%01%1B%1B$%0A%19%7Fu%02%3Ela%0E%061+%01%3E.%1B8%25-i%0C7%03%1Cm%05%04%16%00%19*%3C%19q%11%1E37%22+%1C!%162%3C%10-%7D%118%0322%0C%09%14%08%03%04%20%11%1D%1A4.%19%20%7B%18-!%0F%1Eg%1E8%0Ey%3E%25r%07%60%0C6'%00yy#:%18=v~%1D%16%15%256%224%0B'%1B%06%04xm#%0F#-%1A5)d%0B/wr%00%0E6%19%083%17%1F%05%0A%14%3C%16%09%10y*%0A%1B%251$-2(;%22%1D%07%0A%3E.%0B%08%14%00$*%13%19?2%02;#%1E%7Fi%152%11%06%0Av%1C%1F%0Fd*%11:!%25#%7B%1F%1C%026%12%14%14%1D%028y%0C:#%1C%13'~%1B%22..%3E~:c%0F#$%04%0B%7B%03n?%02o=%0D5$%09%17%03%1F%17%0Az%3C1%7Fx%7D#%0E&%227%0E8i%04%0Cs%0D%1F,%00%18v%1C%041%1A%0A%19%7C%1F%09%60yxr%03,'(8',ag:q)%165;;%07'%086bz+*%07%0A%13'r%02!!%19%1C%0E%1E%0D%3Ei#%20%01%16%1F1%197.%00%12%7F%18v%13%08%031,5,%0F%01h%07%13%04%098)%3E%25%0D%7C%202.%18%05%1D%1C%1B%01%12%7B%0B4%01?*-%0A;%1C%3Cr,(%0Be%02r%13%7F%0E%7B%0C%1By~n*x%06%0A%0Al%17%7Fn%05%00%60%1A1%05(;7(%20%03%18~%13%00#%05/%0C%1C%03%09;%09%07%03%18&%09%1A'%00%13%18,=6%1Bb%00%0D%0Da%116%00s&(%1A7%1Fp?::%20%19%22%06%00n's+;%25*%01.%10%7B%16o%09&#)!-#2%0C,%0B%13%22%0C%17%3E~%0A1%04/(%00%1Eg%1B%038#:2%02t%1Ce%12%15%7F%05%3E%04r%04%12(%08%7C%12%1A%3E%0F%0F!%12%15z;%0F%0B+%251r%02?h*!&)77%3C)+%06&6%17r%17%07e*((%04*%7D%0B:%20*$%09a%029u/z:%11~n2%06.%07%604%0C%3E!*!1%0E%1E)%02:2(%17#1%0E'9%06+'%7F%08%07%02*h%11%0B%7F%0A1%12%1En%1A%064f$%18.)dm6pg%085?$38b%1E%3C*%25%22bka%7Dr%7Czu5%053!%1744%1B;2%7F%3E%09%0C%07,-a&%01;2v(%0A&%03z4i%3C%068%13%1F.%09%1A%00%0F%0C#%60%0C%07%0C%0Av%1C,q%06y%1Di%0Aj%18%7F%0F%14rr%13'%0F%04%0Fj%0Az8%05%02%19%06%16%16)8%03(%1B%142%0A;$)%1B%18%0C%0E%01%0A/%11%05%09%18,.%17#%11/%08%0C%1D!%06(%7D=*%0A%22%0A%0F(2%13n%11%09%18*8%091%0A%3E%11%0D6%09%01%00;'%20-%22%1F%25%1A0%0C%16%12(%12#%04%17m;%03%10%0A%177%1D%20p%07%0B.%07,%15%0F%7B0%08r%20%1A9%16%20%08,%03#%08d%0F$%01%1D%1D%7F%04%17%0A#7%1B%12w%1Ax2%25/s%09%00%153%7C%1B%01%0224%22%0A%1D%7C%60%7B(%02%1A%05#%03%02-%08%07r%01$)%00%19,%60%18&(?%1A7%20%11#-%12%19:%0B%1A%1F%0A%1D~7%7D%0C%0A;%7F%06%0F'l%6015%7C)%3Eg%7B%03y%0F%20%01yu9%0C+%0A%1A%13%08%02%3E2%1Cu%02%02%1Ch!6%3E%1A%3E5%12%20#%1E:!!/#?4%16&%0E%7F%1A%3E%068s%09%17;%0A%0F%16,%00%16a.8%12%02*%18'#&%0D%03($%19#%0B)*%3E%03:%3C4(%03%13%01%0D%1Eg%1D%09%01'r(%04%17%3E!%1E!%1241%25%03%17%12%06%02%0F%08%143,*6m-zm%0D!+7$5?+7p%0D-$!+#g%06*7?98)%0F+5%253$g%7Bjb%7Dpzb%3C%1E9-&%25h#%0Cq%1E%1B%3E%1D.)%01!5%1A;%04%22%25%0C?%1Au%3E%08%0F%06%0C%25%18%09%16:r%0F%13/7(;%04'=i&%1A/%1F%1B/%04%0D%0F%07%178%0A%7B,%01,%1F%1E%25%04%02%0A%10!20%188%20%05%1A8%60%0F%08%16%18%0A%1A%08!g%7Fu%08%0B5%1B%20u(%1B%099#%05,%1F!%11%03p,'%10%1F%22%08$%02%1E%7Brv%12yr%0A%03$r;%08%13%12%12.%7F7%0Ad7):re%3Er)wmf%7B5#z;2%03%08%3C?.$%1D%17%22x%0F%3C#$1;%0E::%18%1D%0D%001%25%04%1C:%09%0A'%25%25%7Bi$3%10);%11%171%1318%005%1C%05%7C%7C%09;%18%11%7F%7C%0E*%7D%12&a%1Der48a)%7B%60r=z%1E6.%101%0F/%0A%03%06(%02%11%15%0C1'x8%1Ed6%0D%1A%3E&%08';%0A%18%60=q;%7F3%192%0Cs45%04d%0A%19%7C+'%06t9v%00d%06/*a%1D:%0C5%60(%16%3C%04%05%7Cw%0D%60%0C%153%7B6%01)';8%1E%208%148%187#r#%138%00%7B-s%7D%051%0A%02%11%1Bwmf%1B*'eja%7Bj%20&/%1D(%0D%1A+%0D%60-%09%0D%3C%15%1C8u%1C%22!%07,y%0E#8%1E-%02%25?%20%13~6%09%7D2%1D%1C%10%03(a%18-)%7C!:7%7F%08d%7Cv%18%1Dj%7D%09%1A%18%25%14%1B%7B-*%05%17y%3El='%08r%3Ev%1D:%09%07%7F=2%09j(&%60%60%19;2%0C%1B23y%1F%0D%1B%14%19%18%0Dv%10%1D%05%03y&%1E%22sx%1E(%1F%1Bxt%11,%0B%1B&%0F%3E$.9%1E%0Cze%16%1F%1Bw%0C%00%1E%13%0E4d;%00)%0C%13(!%10%3E%09(2%1D%11%18%22%253!%17h(%10)%03j%14%1A,'-%16%3E,%15%60%22a%16%0E%05%1B9#f!%00&%1D?%18!%25%60%25%14%19%20y:(-%3C1t;%03%13*8%0B.%7D%12%7F%7D%03%7C%7F%0Fi%04%0E$a(%00%096d((%14%25p%00(34r%0D%18%0Cnh%00%08%11%3E%169%0872%1Aa%1Fs*s!v:%036y%7F!%15%13$%1D%08)%17)%0D%07%3C%0B1%12%0F%18y3%13%13%07%7B%1C;%1D%0E%13(:%01i%0C%14d%0D%0A%3E%22s%1B%1A.%19%60%02%1B&%16%1B%1B)%7B%05v%7F,ns%25;c'+(~)%15%0E3,%1E2a%1C/%1A?l%1F!.:%0B/%12%09%0Ez*r%17%1A8%0C%1B%0D2:/%1De%20%16%13%19x%1D%12c%1A%22?%14%18#%7F%05%1C&n%3E(+'y71,y$%7D%0F%13z%17%137%01%1D'v%11;%1D%3E$%04%08%1Ei%05%22v%7D%01%09'%1Dx%12%0Da%08%3C%12-=%60#%7B%05:%22hez%19%0Dvv2d%00%1F%0772%01%08#=6fs5y%0Aa%03%06%09%1847%1A%13u%01x2hx%10%60?%1A&%3Cv%25%3E%1C%02.j%22%14%1E*;*s%19%60%1D%20%0A%7D=a%1F%0A;s%0Av%202s2%09%17%18.n2%17%3C%17)*%1Baj?%25%14;v!1%3C%17%00%06a;%7C;%05a!%00%1D&%60%1D%09*1,-er%1F%11/'%03:%7F34?%3El=%7D72$%17f%13/s%257)?%04=8%0A%00%1Fn&/%09'x8?%7F%0Cg!1%18%3C?8%110%00%3C8%06%12%201%7C%10!%03u%02?%1F%06%1C%22(%7Cr%16y*%07*%10)*#%20%01%09%1F*q-%07%00c%0C%19$%05l%17%0D5s&%145%3E%18%7Fvr%25:%14~w6?zj%25:r%1B%7C3%20%05/&/&%3E=%0Fb&-!w%1D2%3C-,=%03&%3E4%25a%036&%0Bs;/:,%10%1B%7F%1D%16%12rx$1:;/%1B9%11g%7F+)(6h#5%054l8%7Crz%14-%00'x'%04=i%20.%25865y7%01wa%0A%20%04s%0Bl%1D.%03%03x;a%1C%19%12%19/g1'%04a%1D5%22rd%17/%1F%05n%7D%09%0Dd$%0D%02;%0D6%0D%0A%7B%7Dm%01%04%13/w%12%14d%02d%1E%1C?r;#w%15%22%25%14%19%17:6%1D/##l%12xn;%04%08%7B%1B4;&;d%02%07%7F%7F%01e1%0C!%1Ar%009-!v%15&($)+v%7F%60jd%7B,&-n1%7F/%20xn3%08n%0A%22%19%12%17%17!yu=$)%0A%02%09~,=%04/%139&h&(%16;%3E0c%22%15x%25%0D=%7F(x&%11%3E?3%07%0C%3E%00/t%19y.%12%03+x;8%06%1A0)%0D%0A%7F%20+2#%20;%3C/d6r%02z#%07=)%7F,%17%04e.e%1C%19s%205%1A%1C%19=x%18%1B%1C%22%0A%090&%3E%0C#%3E%15%22%12#z=%00!%1B%06.#5%12%7F%06%12w6#?n%18%1B#f1t~%05%1C%3E&$%11%25-%1F%09(%07a%01%7F1%20%028%3Cg%250d9*%07%7D%15'%1B%11;(%0C2%19a8%01;.%0D%0D(%0A%10%3C(m%13#qz%17?'(j%3E%1E%1F#%60#%04//%02%0Cw'w%08;%7C4%01%7Dv%3E%182%07v%12%06?y/%03%3C%60%06/y%25%11e%0F%09,%7D%1D%7F3%0D%3C=%0D6=%19?%7D8f(%10!%04?5r%171%3E%1C6.%0F;%06!%15%05n%09%088%15;%11%00)4=%0Fp%1D%05)%06%01-%7F':%04(*%00%17%1F=%01%1Bz+%08%00-.?%1D1%19%7C%13;%05('%22v%01%18%1D%08#32%19:#2*r!%162%7Dw%3E&)%15z%1B*%05(%20z%04%1C%16%1C%1A%11r%7D%0Cv%01:y%3E%03%18%20%1Bp%1F8%16%16%1A#%19w%00%00%1B3r%17%3E%60%0F+(%07+7%12%1B2!0g%02q%3C%7D%1C#z%03%0F~l!%024**%17%14%1B%09?%7F%1D4%02,8%09:()%14%7F%3Ev%00%7Cn%06&%12i~%18%0E8j7:s!%1B!%25%3C%16%19%0A%18*%7B%06%1B%7C,e%00%13?%1D%1Ecs7%13)%0D;s%19=(a7%1B8y:%1B$%1A1!+%0C8%09$1;%60is2%02%20ngr%039%00%0B9;;d%0B%0C%1F)%17%0D~n%7F?p%0F%05%091%1B'%7B%07!1dr%01!%12%2582%0A+*%1D%18y%089(1.%12%19%1B%1C6%044%19;%0F2(%15%60%01%13(%60y%7B/k%06=%04%22%16)%3E#%1B/xj%08%1D%109y%0F%1B=%14%7D?m%1E%1E%0F%079%0Cg%7Dj%3Ea%15!%07$%05%1Bv%7F%19$=%3C/)%7C%07-a%17%22%04q~%0Cm;%0C%22xw=%018%0A%60e%185%7F,%7D=%11%09;u%11x%0D6%13p%134:%1E%06%0E.+%1A%22)%17%1C~%11%3E%11%12%0E?%3C%1E&;%0A&o%22)u%09y($%1E%15.4j%06%7Dwy8%3C%22x%04.4h##wx(%019-n;%1Ea=%1B%12=)v&9w%7C4%1B%02)r;%06%09%18%603d%06=%09s%25s%03k'%25j%0296f%7D9./%10)%0Cr%60%3C3%04%207r%1B8%06%01%06%7C$%3Ef#x%0C?;%1C-,'%1C%1E%25%7F%13s9%0C#~%19%03;%14%20)%1B%7F%16.%1F%000%054%0B(%124)7%13%20:1%7C%01+;%0Cu%01e%60g%20%12%0Fv3gd0%04%1E3)&%22%05%204%16-6%7C%07%12%0A30%13%14%01e%13%20%3C%3Ei$%22y%1C%0D+=%60%15%1F%7D,%15x%08!#7d%13%05%03y%0E:%7C%121%05%60&.%0F%01&h%3C%00,$y%1C%22#$%07%05%14%7F%11%07%60%0A+c(0y%027!2j%18%02,%07zv1%7C%12%0A/3;%1F03%3C%089%1A%1B8%0C)9%17%11i%033%04%0709%186=%3E8;%06%08?%7B%0A!$%08%1D%08o%1D%3E6?v#!r%00%1F%1Do&:$!&%3E%18%07)z%0C.%1B%05%16s%04r%12?4%7B?%13%3E6pg%08,$%3E3%22=-9(a%18%2204.a%1F&0%3E,m%1F&%3Cp%14a%07%228=*mx~afspg+%17!/-8w+%15%7B%04%1E6k5%1F#%05%01*%03%032%02~6%1C,%07%25!6a%1E0%3C%3E%0F%20:4y%01%14%03%202%1A/%0A%00%60%0E%08&%15#%20r%13%00+$#%0F%7C%09k%18'1%09%05/7-w%09v19%08%25%1B%19%0F%18%7Bp%01%1E%3E%25%1Du:%160%01%03%04%12?%11%1F%06/%04%1A+%1B%1F#%0C,%11%3Cs%0F%20*3g1t!8/&%11q/%05%0Bd=-8%3E%18%12%00$%3E%18%20$%1D%12%7C-+5't.%7D=%01%07,;6;a%7Fq%22%01%13%16)p%60%1D%113%25%1B%1F%028%3C%3C%039%1F%14%3E,%22%60%1Bjf?5%1E7)ddv1%20%3Chxr%22%1D?5%25q%7F):%17$%07%09(%15%1E$&%0F%7C%3E%04%7D%00/7%1F&'%18~%06/%25)8%7B7%177%0E&%07%08l%03-3~%3Ck%07=*%7D%7D%0D%1C'%04%0A%1D%00%3C%0D#1%09i%08%073%09!%1F%03%1C6=y%0F9%04j%7F-a7-&%01%7F%09%15%3Ew;%1D7%13%07+%7C%7F2%091%0Cd%7Fle-%0E/%25%3C%05-,%19+%1021;*%1F%11)%046%13v3%7F%06s%0F%1Am8d6%04%0F%09%00%7D9(#+%19z9%03al%08%1E%05!%0A%1Dbz5;x%1D4x5$%20%12%17%25p?,#h%3E%0C2%0946$0)%16h*%04n=!nf%25y%3C&%01%02%1E%03:%0C%14%11%7B&8%0C-c%08vz%0C2;y%18y%22#1%7C%0E%11%14m4%18%02s%7Bk%3C%11)%134%3C%1E/0r%17;(1p%00v2%19,r%7D7%15$?%1B#(%60%06%7Cw~%0F%0A%16=r%60%17%08!x8)%7Bh%1As%03%014%18c%22%17=,j1xx%02%7D5!s6%60%0F%0F9$%22!%01%131%7F%0B.:l%1D%1A%18%7F4h9d6%60%0C+4%1Fx%1B-7%08%047zv%10%11=%20)!,%19%1Bj=%03%16%1A%7Bj=%1A%60%223%19'%1B6%13%0Au%25%0Ao83%22#!%164%3E-;v%0A%02%1B%04z%1D%3C&%1B'8%0D%1649%00%04:1h%0A3%0D%0B#b%1Fu-%1D%0D%05~7.,#%19,n99ac%03%11%03%03%3C:%1D%09r%06?%00=%0D/+/%00%7Fj/yng-%05=v)3%09/dvl*%08*#a%0F%7F%0Er%09%16v53n$%7D##d%07%20%1Eo%3Ed-%1Bahf(%16%1Bz%60%00#s%18%1Ah%183%03%0A9%60%1D;xd%1B33#y%7B%16(%1B%7D%13d+%13%22%1Fny%1A/%7B%0A%25r%02n%20%7Fp=;%0Fd82=%20%162%20%1B%7D%22o%18&#%0E%14l2%1Fn397&s%00%114.%08%04$%0E%07r%00.%06=%25%13ax%18%09%0D%0Bd$,%18%16%0D2,%11-9l%07%3C8%7F;%20%12%11%08%20'2#%7C''%7F;%1B%7D%1B%1E)%1381%14%0Fa=%13%06-%1C=%034%7B%18%22%052:%1B.=%06a:#pr-01=-?%06%60%08%075'#%0C%06%072%60~13s7%1A%3C%12%08%06%12%1E=-f%0D%17%7C,%14a%18%12~?=%1D1%0F*6%0D%04%1E(!,i%07%07%0F8%7D%0D%03%22s%7D%00m%0A'%18=x%03%05%12(%0A%08!$r%07$%00%093*%12x%14k7%00(s*.%1F%08p#~%00&.3%04%25,%7B)),,%18%00%60w%07:5'v%3Czb-8.a%0C/)%7C%1A4.%3C)%7C%7Dry%7Da%60g$%05%3C3%09&%25%1B4%20a,%18%0C%18%3E%1Cs-%02%18%01%12%1B%03%0F%07%1D%03z%0E%07%0D1(%06%06%06%0A%18%01%12%14%09%0C=9d%12%3C%03%1D%7B%3Cx%1A(2&%1D%10d*h%19?%14%3C86%1D%0C%17%08%0B;%16159%1F%0D%15%0F%0E%3C%03o%09%0E%10%13-%169x%10%00%0617%0A,8%20%17%18%60t%1E9%08=%0C%17d%7C%0B7%06v%09v.d%0A%03(%0F%0D=%01%0B%1C%20l%02)*%00%145(%0A%093~6%09(%03%22%07%10%22%1D%0C%0Dw%20%01%03r1%1B/%16x(%02;,%12%0D%02'~ab%7C%02%03%1B%11?#2%02?%01i%7Fr%19%20%1C%1Ars;&0%13%25%0E;%0A*a%1Bq%02?v%7F%1B/%7Ba%00!%1E+:%20%0Eg(%0B(%19)7,(%25%0547%20t3*%0C1%22%08%03%3C2%00%01%00!%1F%01%153%07%12?%1Ag%04%0B:'r%00-%22d%7B%0Aey%08%05%20%1F%7Br%06%22%22l%13%07x~%1E-%09,*%06%08%20%1D~%09%03-%0E3=%02%0F~2%05%03%08%03%1Dr%11x.2%7C47%7D%06.%0B%088s%11?%17%136!%22,&4c#%13,9%149)(%00%1C+)8%05%046:f%11%16z7%084%3C%03:v%00%16%06%09%0A%17#%1D,%0D%07%09%172,&8%1A%20%00%08t%04%0Co%1A%1Ey%7F%0C%0F's%0A%09~%20%18;%00%09%0988%01%04z9?%05.%08%0E?/%16%09%20r%0D%16#r%06%12).%01#%06x%0B%08:%03%04%0C%19%0A%12%20%06%1Fz%182%08*2%1B%3C%113*%11w%10;z%04%0E%3E!%1D!%08%08%0B%08%1D%0F%00%08??%7B%1F%10v3h%7C%0C$&=)19*k%0D8&.m%0C%7D79%3E2g%7Fh%60xt%7D~u5%053%1D#7i%06*%7B-%00(rj%22)%1D%14(%14%0F%0B12;%09%22$%1F%09%0C(%00%18=7%123=)8%05%1E%10%1A%1B%1C%18%0C%04:%18%127%08%00$%19%1A7%073%11%14%0E%22%1D#%12%7D%1E%17%05r%1E%1A%154'(/;:;%3E8%03,2&%7D%20$7%16%1C%1C#8%22a=%1C#%0E%1E%03%0A?6%1C6n%1C%0218%7B5%1C%60r/w;a9r%7C+%60%1C87%22a?%00%18y9%7D+h%7C/%25y7=.41%17r%1E%25%1B/#lb%07t%22%17%01%1E%7C%14~y%18a/3.%3C%1F%14%194);%13:%22v%1B,4%18,'%1A-=d%0C*!'0h%1F%258%7D*1%1B6?(;%1E'q;(3%1E;%0Cx!%17%1E%0D%02%12%091h)#%13*.#%19;/!,;x%10%0Fal(%08s%00%05.%019%0E%11%16%08g%034%01%20(%11%1C%119-%1A%3E%3C,x%1B,i%1E,%1F%05%0A(%11%091$%0B%07%2278%1Ej%00%20%05%7D%145%19=2(%1D7%08%3C+d%7Dr%3E%7B%11*8%10*d%07%1Azr%00d%141%3E%08%11:'%20v*%22%20%0B/*%14%1C?%07%60%3Clfdn=6m5%7F%09d%1E%17&)j%0C%08%16%20%20q;%7D%60%14%1A#.861'%0F%25?#%069%0E%604%60h%60%0A!a%0D%1D$%0F%06%07v%1A,%15%06z%1E*%7F%0D%02%0F%0E:~w?4%14%3C%3C%0F%02%25%0E%071%0D%06!*%05~%22%02%1C%1C!%0E%11%044%00%08=9z%17*=x53%1B%1Ac:y%60%178%02%1Fr%1E%0D%03%3C%1A%0F%3C;%17g~2#(%3E'%18%13%25%1E%0E%3E%0D%192&%1A%11%19s#%0B4%19-%08%1E%09k%17%19&%12%20%08=%0F4-$%01%14z%02%25%22%1A%7F%20$$9%20%60~&%0D%0F%1A%1B9%12%18%1Dm'%01%0F%05%180%09,%0B%05%03%3C%093&%19%14%03f3%13(%09%083x%00%1Cz)3:%00%18%164%11%1D%12%0F9%0E%08$r%0D9*%039%0C%19?%005%1B-*?.%1C=p%00ek2%06p%04a:(=w%119%08&%0D%08x%1Fk)#68#%16%3E%1C,%116%00%03?%0F8%7B2'%22w%7B%025%14%0A/?%07=6x7)'=a%60%121%1E%1A'~#%18%3Co%16y%22%7B!%18&%12w%06%20%13%19%023?%1B%0E9%19%12z%14%12%01%0C%0A%00%02%1D%07.%11%19,%1C%06%09%11%129.'%250$%7Ba%3C%11x97%1D%19%7C%0B%1B,#&:qr;:%02%04%15%0Ce)idj%13,%0F#./%03=;d%19j#%0059%01%17%04~)f)%09sx:%7F8%19%01%07h7%1B4%12%1F,%081j%3C#1)-x~$?%00~8%7F,#2%18%002%1E%0C?%7B8%7F&2)&n%09%7D%0A%18!%13=90%09z,%12%20%08%7B%05%25%7D%0B-e%04%20%00a%1D%7B##-a%18=r%10'%0C%3C6$((%1A%60%11%0Ex%13%7Fn%03%03n%014%18%7F$%00%22%1F/%08%1Bx%7Fa%1Fh;r;x*d%09-r%005%22z%18%7D%03%13%03*r~%19%16%7B$x%7C%7Cv%028%1B-%7B!%7B(7d%06.f%0F%05%1C:v=%1C2z%0F%1Ai%1E2;%7D+i%7B%25%13%7F)i%1F%0E3%7D%3Eg?0%12%00k%0Az%0D!al%14%7Cy%1B%0Dl%17%1Cy%0Dx%1Bh%25%0E)%09%3C%078x,%0Fn%01!%02%60%3C%0A%1B%035%3E%20;!~0%60%14:%3C%03xs;%17e%07&d%1E%20a%60%09%7F%03%0F%14-%12%7F%14%03%60%0A%05%7C%7F%0D:;(8?7g2%15-6r%1D=u$%02+5%60%03s%7F5%1C%60%12;(%0B2x%18:%184)%1E%19,%1Bk%019p%1D%147b%22w%00%18%1Af2%06%19%7D%1Ah%3C;:%05%10d%7C-%7D%7Fl:%1A$x%0B%20%18#n%3E-k%17%07%0E'%1A%1Fe?%0E=*%03%1C!%14dy%1F%04%1A%19z%144?.w-%06)%7B%0E%1B1!-4%07&d!%15%06s%05%12%16k9-%17%1A%19%17820%7B%02+%18r%20%0F%7C%3E5%034%09%7B%1C%05%1D%0Crxv1%05r%09;%16%07#t$-?%14%07$%228%08i%25%05%7D%7D%1B=37%1A%04a8%13$!%3C%0A%20~%0D%06+%1A8=31$%01%16%3E&)%00=%03%118%07#%0E%0A%0E%1Bx#+8%22%00%05%1F%133%0Cq%0F%02%01(%1C%00!!#%3E%22*%7D!%03%11%11%0Bdykf$%16(%07=e=%20)9v%1Dx19%06:3;%18?%05m%13.)%06&%17%18%7By&)l=%1C9$v%60%00%11q%0E6%18?%12+ra%0F%3Cr6.xo#%1D%03'%01(%13y%0C~8#%03'7%12%0D%11%1F?#%02%1Aa%15dn%60?%10%05%1F5s%7D%13%04;)~?%10)%01%22%00%09n%3E%02/%1A-%121(1%13%0D%0Dh%18%04:%3E%01%02#jr%0F?&%09%20%7C6%16%1D%7F8%02%03%0E%16~%03%01%0F%20)!%0F%20!iir(%0A%1F.'%3E%0E%20!%09%7B%7F%0F2%19%13%20%60nr?aa%7Bx%3Eai:%1E%25%7Fy*;2'%7B%16%12%13%1B%16=z%17!%01%14.%006%12r,%09%7F%17%60%60%0B%22%1F-%00=%09%0C%0C%1A%1D%7Dq)%1B=9%0Ap%60%20%1D%3C/x~%19,%3E2%13%09;.)xw=%01%3Ch2v%1F9%03%01;%10-%090%1E%12/?:=%13~&%02%0Cme),%0A&%11%22'&%22%0D#%16%18%10;94%07;r8&%12d?%16!,%1A%091-%06&%17%7B%06%0E%0D',%11%01%08%0F%0D%12%07%3Ev%02%0C%1Fd%3C%18z%01k8z%09?:k%22%0F%201,:6%7D%20$%16-f%05/%7C%20?='8%22%01l%19%1Dr%11%0A3%7B=3%11x=%05%0Dn%0E%1C):zw%0D%00%148%07,')6%199%0B%7B%7C%14%7B%18-'%1F5%17%7F3%20%1Aj%17-%16%0A%06;%03:%1B%094%0C%17%0F%20$7:%14&8:xo;()%3E%07%15%08%09#%22%0C%15%0A%04%0E%04%16)2%3Cq,%09#e%0A9-%1F%17a%09%03%05#%0F*.%0B%12=6%01%1D%19%0E%0A:f%18u)4!%152)%05%1E6d%20r%11%22%3C%60#%0A~6%1F%0A%04%14%22%0A%0Dh%7C%22%20%18%01%198%0E%09%25l'%12%25%05'%16%00-)3%17:%07%7Bn.%01%3E2%60%12%07%3C2)&x%0Aw!(%00%06(8h%1A.p,%174%1C%19'z%20mf8%17z?#%081j%11e%60g%1D-%60%1B%15h%09t%7F'5;%1Bs%05%09%3Ci&%1B%03%0C+%02%13%06#%20%0B%3E'%07%0A;v%7F/2%7C/n6%60$%0D%02%17e%7Bt%0F-1i%7Fv1%1E%1E%1D%1B%09%06%3E84%135:7%18%1Bs9x(3%1A%006%1F%7C%18=x-%7C;%00%13%1B'%12%0Cl7%02%15d%1F)%02%110%0E%08.%7B%20n%07%20a%059(%03%05%12%15:%04#e%0Ef?-s%19%12(%25%08#6l29*%08%17=%1C%09%0B%1E%7C%0D#1%0F%08e+%11%1Br8x2%02%1E%0A%12%1E6%7B%05%0C%0Fe%09:)%02y%19%12%15%04n%60%01%1D%08%11n8%1E#%60%1Ev9-l6-%00*;%0B%1D%3Ep:$v*%1F%16:%0Fm%1F%3E6(%3C#%09%19.%04,%15%14%005,#1h%25-%05%17%18b:%07%3C=%0B%1D%0A%22*%1629%09p%22%0D%1D%09%0A*'%06,%02%05%0E%7B%1A%08%09:%12%25%04(%01%06t=%03/d%1Ap9%00%1749%25%228%1C;)%0F%7B/%3C%0A%1B%00,%14)5%18s%1E-%1B%17,%25%1D%20%03%60%03#y%03o%17~,3=%0F%16#j%7D%18%18%7B27%1A6%0Aes%09%07%1E%12%183%0A%0F;1(;%19%04%1C%1F:!%15&%030*%0C1%01%1B%0A%11(*%22a%1E%20%02%15%7F%19+%60~%00#e8%04zx%22%073%048%22%0F%03%0B%20=$%7C%19%00e%02%0C$%1A.%01#p%1E%0Fj%04%19j3w/%01%05*%05*%0C%1F%60x%08%0F*g%3E%18%22%7Dh3*p1%17493x3%03%09!%208(%7D%20%16%13q,%07%0B3%1F%0938%01e9%02x%17#)%111=%02r2%08%13%7D&;b#51~r%14=y2%1Fo5%20%15=%0D(%60%1D;%0Cz%0C#(j9:!c%0E*'*)?&v.%1A/13%19%08x%1D#!%12%0Dav%15%07%14#%1E5dz#%25%01(%7F%09%03%7F%04%11*-5$&%0D%17%0E*%1F-0%04%7F(%0D%01)d8%20%7Ca%18%1D%20%17%02%3C%0A-zm%0C+7$'$&/7w8a%0F'*1,3.+45%255g%1F,591g%7Dkaxp~b%3C%1E9+%12#=%0018z)%00%17%1C%10(%0Bv%1E%00y'%04#%05x%0C%1E7%60%07(%0C%20=%0D;%3C7%18%25j%1E%09%18$6*%11*%16;&%00%06%04%0B,9%3E%19%0C%05%08)%14%1B8%09%60%16%1B7)s%03x%1Dh'0:%06n%25?%04:#%1Fh%096y!%08;%7F4/:8%13%12&%11%7C4%15%12%09%1F70%14%7D%14%09/%18d:%13%0F'5?%00,%08%0F0%05%03%073%04%0E%12%7B%18%0D%0B%606%127%11z%15%11%07%11=%02!=%09&dz%18%12%09s%097:%25/(%11%19%18%7F%20%0E%1E%0Fl8%7D%00%60%14%0C4~,8%06%1C1,7%1Bx%1D%03%18%07)?k7(+/%0C%12%22%03&%12%01(%1A%0C.x)%13!!9%07%7Ck%11%0C0%099%13%17%193#x8%17%3Cu%0C%0B%1B%20%0941?%005%7D%06&vr%11%7Br%3C%00%1D%01%7B%06#%1E2%17*%0E%7C%0C%17%1Cd%11x%0Co8%031~/:%15%1A%0B%02xo%09(4%22%7D%3E%1C%04t,~**%189%1A~2&%06%0D%00$%01%12%7B%1B/~%00%14%1Fw#%25n%60%08%12%0D%08%11a%022%04!!=%1A59%086%3E%1Bw%04%1D+%18%02&8!%1F#%039%05%3E+g#-%00v6%02.$2%06%15%09%1F%18%0D%18*a%22y%0A9l5%7F0?,%17%25-y%25%1E#%03%02/%08%14%1D1x%15%03%176%1F$%07'y%10%1Es%03z%18+%1D%1C7%7C=l7*%04?%1A%1B%3E%20%13%3C?%0E%1A%1Au%19%0B%174;%10-&%16%60%7Dn%13%3E%10%11()%04x8g%20%02(&%13%1C%7B7%00%02:8%1D%0C%3C%07%1F%19%22%16d%01;%1B:/9#a3%04%03%1Da1g!.%18;%1D)%0F%18%11%3C%1B%02%0Cj%1A%1B6%0A&%0A%7B%22%3C%14%0F%04$/%0C%1D%1B$2+:9%09%13%1B(%1C%20%22%22%1E%3E*%04%22%17,%17%0E%1C%25%15%04%7D,%13%0A%11$e)%11%0F9%0D)(%15%1E%03%02zj*%0A%02%0C%08%08%12!%07%3C%0Fm%1C%09%04%7D%0357%1E%16r%1F%1C%1D-%06%22%18%1E1(%05%02%19h%11r6%1A90%1B%010,%7F%123!%082-%10%18%20%00%25%02m2!&vs$ag%06.:y%03?%20&%3E%3C4g3*=))kw%7Dyuh%7Drr%7Bl%7C.%0F:%185#r3%0E~%1C%053s/%1Ai%60x%16%187%3E5%02&%18%03%0E%1B%1A%19%08%7Ch!**%03*%0A%01!t%01%171%20%225;%0A%17%17=#?%0D%014%1158%0B0:s%0E.6%1D%15(8r%18%1F%1B%07%19,%08%0A%13%01t%0E%03%11%223ws%0Fr'%250%18%1667/%03s*%15%1A%7C18%25r)%3Ev-%1F%08b&'%259j%3E-r-+=$%09%0B~(5%02%13*%19x:*%00uz!*%03%03%0B2=6)%08,~%02=5%1D)%05%0Co63%15%05%07%1A*2%0E%0F%0D%1C5%1D#%1A%1F?h%037;z%60%7B%11%0F%7D*%3C33j%7F92%11%196%1F++i%1A%13!v#%12&%13-9%1D$%0C7%05%19#3s%0A%03%08%1A(%04%08%0E9%606/%0E%04%22r%13y,#%160%11%03%0C%00%16#%11!j-%254h%08%07s%0B%11%19%00%178%22m%13)w%25x%60%09%0D$%3E8%09=.n9:v%1F8t%1C%3C%13%05%005%0D%7F!;8&9%1F%15h%04+%074h%07$%17(%1A0%1B%0F%11?%0A%3C%15%1D%13%00%0Dacr'%7B%18m%18%07%08%22-%60=8u,$%0A%0A%12%11r%05:4%60%20~e+%20d%11'%1Da%05%087y%192%1A#%0B-v+%13?p$:4(%12%023%7Bo%22%60%09.%16%16*.p%05~7i%11$%09%04%20%20%7C%09%126a%7Bd%15~x*;-t/%3C*i%3C%0A/%00%3C9%125.$%0A%7B%3Cx1!8%20%03%13%11%05j%02:%0C'*4e%0A%00%0D%0D7%12x-%20-%005%1C&%1B%18,%1B%7Bs%04yrg~%0Ez64%7F%03%05%13+#%3E9%1B1%0D:%03%22%10%0C,%0A%1B:#%1F(%08b%0618=%17%05%7Bs**(b8%16.%1A%3Ch!%18r%3C%0E=9%20zxr%05:0%01%7B/7%1D'yea%18x%25%1D%3Ch%14=r%11);c%1B%08%196;%11#-%25)%15%60%00v=:.%1A~r%60#7%3C%0D$%0C9.;9$8)%0B4%1C%16%7C%7D!%1E-r%3C%18k8x7s%19%0Ei%073%20%08r%04%06,=?%60%18%7Fv%0E%0B%3C%25))%1C%09?%06$%151%14%3E%00%3C%18%3E%1E!'%1B%17!%197'r)%3E8%09%14%7C9/%16%10%18s%03%04%0683%12&~x.%1A-*#;(%1A3x8&mg%0E%0D%0Cz?%60%0A%0Ar%00%0E%22%00p9a%17#%60%00(-r%06%3C*%1882%1Es%0C%06-:%1E-5%136)%05%22+%12#%156%3Cp%19%7Fmg%079%12e=#%07y%7B7?%1D-9%1C;:%15%7C%07%3Ca%09%7F%0Dp%00%16.#1%11)%20#%18%009%606l%12%604%01%7C%15%1A9n%0D%01%00's%09,%16%17f~%17:%0Ao%7F1#da%09hr,/(;*%1F%05)%0B%3E#!%13%1E%7F%0De%22/~-1%13%1F%14%0E%0C%3E%01d%0A/%19%0E*rr(&le%08$%7F%7F%18%11s%14%1D%08k$&%0C%1F)5%12%7F.%03%20%1E%04r%0F%60%14/%25d%02!$%00%60%02%10.e%1Di!%0B%60&v%1B%02v-z+('w%20+%1D%7F%3C%08%7Fe%16%05'p%19%16j#-u%1C/+%18%0Ays6v;:%10%7Fe%3E%18$%16%04%7B%03b%7F%0D6%7Fu%179%208=-1%22-g%098)-(8&%1D5'43+ufrtxzl%7C.%0F9$%00=/%1117h7%12%06%13)=%13r%0A%07%0Dm%25%18%221%03%005%09p%1Fx!%1D281%01:%15%25%0F%00/h%19/%15%09&%18%11%06%09%1B%1F%00%05%12%11s;%1D%0112%1B~%1De%07%17%1E%1Ej4.%0B%1D%03%09d%0F);%1F1%053%22%7C%05.%163%101=%1D%1F%22%00%09-%03'%08%05$%0F6%01%06%22%02%02%08%1B&*$#1!1%08!%1F0%25%1Av%7F%0A(%3E9%09%09)#a%0E%14!?%1D(%09)%1B!+f%11&?%1B%60%0A%13%18z+r%18.'y7%14%02!%18%1B%7C%1D%11%0A#,%0D:8%01%0D%7B8%12%1C()%1E%03,%06%229%09%0F%0E2%1A8*?%3E%19%06-%0A%7D8%3E%06+%02%0B%157%3C%04%04%3E%1F%15r%15%0F4%11%0A%02%0E%20%09%08%7B8$;&l8s&%7B%16!9z%258a17%129%08%1B%1F$3%0C%0F%0A!3%7D%1B%1C%7F%20%01%09;-*%1Cg8$%19%25%03%17%12%03%11)%1D%03~%08%07%03v:%7F+3%0F5%17$$8%096%16!$%1Fv%3E;;%0F%07%25od%0D%1B%25z%17%11%20+*z%15%22%1B%14%08%1B%019%202.$%1E#%1B9%08%04#'#%07x%0B%037%04%00*a%0A%02$%04%1F%1B%10d%07%13%06%7F5b%06;%20%07%0F%12%25p,%0A%1C%01%7F-2%22.*%0E2x%08:%00%12%03=%03;2%20,(v19-6ye%13%13%20%12y%17%01#;%13%3C%09%16%0A%05;%1E=.%7F%1A&%13$,%14:%06,%205%1F%01*%11%0F%089%09&%12%0Fl%7F%0E%16%22%0Fdm6pg%068=85.%3Cy%22%3E/g%03,1/%05%22,uc%7Buzwm%7C.%0F:%7F5%05%0D.%0E~%1C%05#(-%04)$%3E*#%08;2%12/?7%1A7;w*%0C%1E!%0E%05y%17%0C%01%05%208,8%05%1D%0B%19%0D=%05%7B/%7D%18()%3Ej%7C=%0E%3C=%07%00'(?.%11%0C=%1B%7F%0C&%09~%01!%3C%17%06%1E7%06%7Dy%08%18%0F%00%7F0%1D%19%1F%18:%13%00%0D%12%05%1E4%02%7C44&w%12x;%17,j%609%20%7B3y)wo2-n%60*31?0=#%1A%12%00%06,z68%1C%08,%7Ch?%3E6%11%1F%3Caz5%01%05k6%19#?%0C%164%0As%0E%073%05zp%3C%7B%0C;%1Es=$%11es'%0F45;?y!%06%00'%06%03%01%166(%12%03%00&%1B%14%1A%22)%18.%11%05$%1A'.%16%1A0%08~%147%7B%00d%1B%3C5%09y%60%3C5%05(ps!1%1Cs%20%7Dy%11%1B&%072%203b%7Bx%7Bw%1B%7B%7F%0Cd%18!%00%18%0C%097%14%15%25+%7B%1D)!?%088%1E%1C%15*8%7D=a%1Fr%199%1E!b&%10%1Bvkf1&#v4%00%04%0C%04%7F%11%1A%1As-%17r#-%1B%07;;%3E%091%00*%1B%00%3Ey%06vvf%1C%0A!%01%15'!y%60%16o=%25.%19(o%3C!%0B;%0A/2-%07~a%0E%1A&r%22w%01e$3%0Fe%14%1A?r%12%16%01%7B3v-%06+e%07;%00-ng%3E+%08*?%18%7Bu=6###r%01*,%15%7C(%60?*%14-%18?w-gdv%1B%00%3C%16%7D8%1F9%1A%11%1Fv;%7F.%0891%1B%071ir'%25;+%25.%0E=4%01%12.4%20v%3E%22%3C'z%1D+7=%19%18+%0D%06y%0B=%0Bv9?%11-(m&d*%0E6%08%02%60,%08%7B%01d%09;%13=kc%7Dn~v%17%1E%25s.x%0C%19'n%1E%0B%15%01%20j'%0D%136~%03!+:=/6%7F#1cy$%7D%1B%10%3Cd*%0D%00%3E&~%0C%0D7+(%0Fx9~%16:sq-(%0A%12%7D%03s?a%01d%20%03%06!6d%0D%3E'%1C&%60&~=vc%033z-+&/t;),%06%60%20(%22r%18%7Ct/~%0F%3Cd,'*7%06&%20.+%15f%1B%0F%04%08%20&2;%01+%3E%18d-z%1C4%08d%20%1C%3Cv#&)?-l%0032%1E%16%15fs%19%05&%091$$.%09%1F6%12%0B%7B%18k%138x)84%3C%06/dw%0F%25%1E4%60%1A%17e%00trv%084%12#%19%05?d,%12%1E%174)%60%11)%0F6b%225%08%09*%7F%1D9%05%18%007'7%03%06=%3E%19)'%18%1B?%7C%13%60,%17!%0D)%04%3C%1A7!$%0Dz+%1C*%22;?!%20%1F%14%0A4%1Bez%13%7C%0D%0F1%13#%1E#%3E%20$3%03%06%084%04%06%0Cx%14%1B8%1B%7B%0D%0C%09z19%17+%1486%11w)%01%05u%22%22ke:+&v%03%7F%7D%0A%7C%16%1C'8%12%1B%19v?%04%25x%3Ci%1B%20p%1E-k%1F**%12+=h%1E($(0a%22%0B:*%13%1Fz%1B1%16%133%0C9d%1A%1Ag9%15%20,%16a%0A(%12%14%14d%7B%25%7Bw%183%03%0B&%07%01%172y,%09j9)%12%05&8)%04w%18y8)#%09%7C,#%1E%3E%18%20%0B%03*x%0C%09%7C%0Da:1%1Ez%1B%03%001%1C%1D%1A?#%0E.(:a)8%25&j'%11$1,)%15308al%3C%259%0D%7B%60%1D.%15ss$ag%09.%2255=%20?!+%7C9%208%3E%20p%7Dw%7Cbafspyvu5%053?#5i8%14r-=(%7Fx/$%13a%7B%05%0D%1C%1F%053w%2244%01%19%12;%25%13%7B%1C%0E%18%01%18%16s%10#7%1A%03y%0A%06y=%19%0C%028%1A%1C%3E%3E7%0E-%03*%0E%08(%20%1E%1E%00j%0F%0F5%1A%07%06%19:(%12%22x$%0B-%1F%7B%11%7F%19%60%04%053%07(%13;&%08%20%7C;8%0D0;y=g%180/?%1E$%0Er;%7F%1Cb/5%20#n&=$(-a%7B-$x4/%06)4x%7D%3E5%06%221arc.nr%20=h~7ralc/7$w%3C%0A&%12s%0F%1D%17$x%20%0Dm%088j%13%1Cl2,%04%7B%02%12%01%13%12%7D8rc?u%60%09%18%04*%00/=%183%7F%15dw1%08?%02%0Ce0g3$de/g$,%7B%7F?'rx#%01.%1Bdq%04$h%3C%09%20%09%08vh%1A%09%20%1Avb%1Aw%7F%0F%20d9j&-%13#%22'(%17%1E%20%13%00%07)%1C%00$y%60%7B.%03%607)~=%25%04%059e-%7F#%0A(%1F%60%12r/-%1E?%08%7C%02ra6b-,%1C+,%7Frn-~%0C6%7Dw%08+%12%01%25%05x#r!%7D5%07%7B%0Eh%0E%04%1Fe)63t%0D8v%1D#-d71%13%05n%05*7i%01p%11%00%14%1A$%07%07;=%0A%3E;%25()6%01%19!'%03g%11%0E%7D4,%60%1A1d8n!.%05%0F%3Ev%14=q%3E&+ex%08!%7D/(s%25&!%3C%7B%128%25*k4#3%60%18%15%11d%0B%7D%06%14%3E30=%19%179=%06=%17h%00%1C%12(%041%08%1C'!a%3Eg(%25%22%03%00%22%1Bjz%20r!%03%02d)%08%11%1D%051%0D%1Bg%0F%25%07zk%16%7F$%05'%1Ci%7B/~%0Fo%7B%60%0A=%072$%0E%17%60/%0E;%014%06%05%09&z%22%7C,6%08-v?%09%16h%0A%20%1A%06%16e%0F.%7F~%3C;2-#%0A%14%3E(%03!=5d8%08'ym%60(%22x%02%13*%7B$%07#?(%1E#%13%02n(r%0E%07%03n%08%0763%1B%60%14;%148%03-f!u%07w:%08?%0C=#k%1Dr%12z%7Fr6%13p/%7B%0D%13dv%0C(l%20=.sy%18%14%04j%0D%19%11%7F%01%1494/7)%13~4!1y%0E%04+%16%08%00%25%11%7C%153=%25#%3C%1A:/%02%3C8(%14%08%11y(kc%00)dehhrj;7%13e&&(w/#%03%1B1%25o%09%19%12=$#%7B;%12%0D%058=.%19%08%7B%11h%124%1Fy%10)%06&%1B%3Ck32&.%1A0%1F%7C,%1F=a6%607%1C%02%00%1E%137%25%20=%03=n:x0%22%0D3yzo%60:x(;%1E%7B'/%7C%16v%1D%3E%0D%04%0F%1F&%7Du)%1B+*=;dy%3Ci*w)wni2v%0D%16v%7F%0A,-w?%01d%07%3C%0C/%15%11).*/c98;v13xs%1F$%1D)%13t%09z%173d8:$a%1A%1C%15xx)?rn'8j%05-;%7C%19%11e;6~7%01*%11%25%01%07%08%00=/%11x,'s%22%0D%1E)%14%01p%01%22?)%0Fuz8v2%04;%05%1A1d%3C%0Dd%7B8=;%0E!68g2(%60a=%03;%0E=!n8%0A0%0D%7B=%25%3C#%25%1D%60%18%22%04.*6f%050%136%13%3E%60%22%0047%01%0F&%06%7D:8=s/zr%1D:%19%7F%09k5(r%60%0D1&%25%1B%0148%1A%030%3C(%20d9-=!h%00%1E&d8%09)3%11%1F%7F%10&ys.%7B%10#/;=%1Dvh%1C%229a%0F%20%0D%10d%1D/2)%09%18!v%1E%127z%7C%3C(%014'()2%03-%1C%1D%12!%7F8;e%0F%05$%14%0374'8%18%25$6h%0C%07%06w,3%1B7yy%0B!=2%09%19i%18x%04?%06%16h%09%053za!%1B%06,%022h%04+~%14%09%14%1Fqs$r6%0Fp%3E+;%3Edp%1F%7B%15%1A*%12%0C%25%0F%3Es%02x#%1Ei&%17%03y2eyj*%7B%17%1D%7F52z8%7F%25/?%3Eo%1Ezj%08/%1B%7Fs/)%04i*%7Bv%01%0A(!-r!%1B5g=%1Bsy%15)!2%13=%1D(($%04%7C%1B%1E%7B1%06$1d:%19?%1A%1C%13%05%16,,.%04?%03&;h?$%0B%1C+%15%16%1E%0B%13%00v78p'a%16g%05':%208;%069%25=21%1D%0E$a%0E%1A%00%10%13,%10%151v%03x%18%06%02%25%09%07%0A!z3%0A%04?e%01%10%0C%02%019(x%13:%00%7B%7D%15%60%00j:%05%04%1E%7Blg%0A,s8v#%20.%7B%3C,1%113/;.bry%1Cxl%1E;w%08w#);n%0C6%0E%18z%0A%0E%05,9%25.%0D%1B%13%03%12%1B%1E%16%1Cg%3E%13/%1A=%12%60#%01=3%14%091%22e%1B%3E%60%00(%06k%19d%12%13%3E%1C&%0D%02%1C%19%09%11%00r'%0D3c,%11(%0C%038;%17%25%7D%14h%1A*%3E%7D?%22%11t*%7Do%14'1%04%1E%107d%19&%09%01%0A--2!/%1E%01%25%03z%086%1C%0Ad:2%22s%22%3C%1F.%14%1A%06%22%1E%20:#91#v%11%1B%18%60?,ir9d%16%1F%229%14%04)oh%3C*~$.1%07*%00vv'3%25%03%7B%10'=%11%606%09%0A%0Fr%0A%1A.%03-%15%03%05**r*%1Dy%0A%20?%00%1A~%01%3C(p,%7F%0F%07%1B5%124%60%7Fd%0Ed'le-%17?&%1D%7B%0A;%25-%1D$%20%04,%09oh#3%3E4!#-u%06an%0833-%19%11d*y%1Fei%16%3E/%0D?l%7Bs%05%60%7D%10%22%7F%0F%22x%3C%22(%18x)%14g=tr%02:%00%22%06r%07%09%60%1Dx!7%08%20%0D%0F88m%7Bz8d:%0D=%08jr,%1Ei%1Bu%0Fam%60%1F%0Cd876;%0F%7F%02%60;%0F*-%7B/%3C%60%021~?6-(%0F&vb%1B6$%1A%11i27#9ie~%19,vi%18z'%08(j*%7Bu;%17?:=j%08%3C%1F4%7F%19=%18%20d25%11%0Ao%25)r%07'k3-$%7Cv%0A%14%197y-!%03%60;=zr%19%03y%7C=5d%7F7%03%20v%1F9#%1B~1e%1E&x:!dy%02.%1B;fsy,6#%07)s%7C*?%11&6d%16%139)%16d%0D%0D%3E#%19/%02%0F%1F&q%07%0Fa?%186d%17/%1D%1Dr%20/%15%7B%1E1%1B%7F%112~3%1C4o%1A.5s%16+!.%20.%198%7F-7)%08*=&82al8%7C%11~%1F+f%12%18x?%1B!%1B%0C%03:08'%0D#83%1D&%0F%02/%106yx*%25#%04%11-%03#kb(%03%1D%01%122%03%19%19#%20%1D%07j=%0F(*2%0D%60%0C%17%25%041%25'-%00*v%06%1Ek%19x/x$%0D%15%0F%0D%259j%7F~#.%7Dm%3E)%14x8%09%20$+~%20o'%1Aq/%7D14%7B$%0De%164%18#%7B=+%04%089%0A%1Cm98%13%25&%1F#?.8%04hi%7Bs%1B#%1B%04%1A%14)%17;%04%0F%14%07%3C(ds%1By%1F;',x2%7C:2%02'9%007%19z%10=%01:!?%12&%02k%13%60%18!*?%01%0E%03%1F%7C%01)8*%7D(%13&%0A%17%7B%3E!%151s%0A~ki%20,%7C%7F7%14z%0Bs4%13)%25%178(%164%01+%22v8%22%0Ey~;%1Ca%609!%20%019s%03%0F%7C%1E%7F(%05%01%0F=%08d%20%09%1B73(+1;%1F%20%7B&%7Fy%0D%7Bz%14.%3C%03g%00%18%13%01%3C9$%22r%04.3;%11%1D%09%13%7F%13y%18ej&%1B%09'%0Al*=3%60!%3C(9$,)/%60%1E%11~%1B%60%1F!%25%05,j%04d%16%1B%1C%1Ci,%08:%1A8(d%22)%22r7x29%06,%3E3#%06%1Dv*d*%05$%01i%05)-%16%0Dc3%109%3E%00a&%1B;%0D%0Eay;%7D%08:%25%06p:%18)%12%19t%0C,%1F%0Az%09%7C%19=%02%60,'%08%15%7F%0Cw%7B%1E;%03$x*(4%03%3E#z%0F%15%02-%05%7F%1C%1A?/3%1C%06r%08%05%04%18%7B/%7B%22%17~~k%16%60%0Bd61:=%25%07v(*?j-=2)9%11%60=%0E)%04;9%16%12%03x%25%3C%01h%14%1C'%05%3E5%08%25*%18%0A*h2;%0A-2%3C%13%0E%00?n%01%7C%0B%07%25%08%06su;%1D%0E#;%0A%3E%06n%3E.r%7B%068(r.%60#5%08%01%20;%22j%16%0F;%20%7Dr3;%029(!%1D%18%0D%7D%0F%0B8?%03.%1Ea:%09%02%09a%13%20!%0F%11zh%17%7Bj%08%1F:&%3C%12%224%11525%13+*h,,=8%00b%7D59a;i%041%1Bz%1B%09!w/7i#*y%7D%1B%1F4%1B%0B%09%05(b#/%01%1A2985%1A%14?5%12%19%22-%0D(*y%1B,/*%255$?%0F).%0A2y(%04%1D7y%1C%08%22%3C5%07%0D39%1E.%7C%0C%1A4!5%1F%25%3Ce1.%1A)%09a%04y%19%1E36%1D%10%03%0Dl8x8%00&*!%1F%16%0D7?%07~j1*l%09%1B%1B%084%0Dg%0E%09*%14%0Eg!.%09,%09%7F%60%11%7Dx%3C%7B%01%16%7Cw*%12!4%0288'%1D79%7Fr'%1Fnx%1F%1B%60%3C%22.%08%1Fh%7F%0C%7D4(%1F(v%11%0C%0E*%03*%1Ce%1A%15dj%06-/)%0A6%0Fvva:7*:a%7B-%15%1A%7B%0A%7B,x1e6%05x%14%06%0A)d%3C%0F%0C*0%07/%021#/:%18y(%1Fr3%1B2/#%0A4%02%12%06v=%08%22)y%1C1=18%04%08o%05%01,%0Fy%3E?-%15$vm:%25%16%7D%1Ca%04%7C-89,%7B%3C%20%11a/%09%02/s%0D#i)5%04/)%00%0C%02%1B(r)%0631%3C2!%12w=%1E?#%04j-%0D%11e%01%14%3C+v%09/y'%1A%11*;tr&j*%7F%11s%08%0D%1B%7C2%25%20n%0A?r%7F%077h/%188%3C%09%00%7C%17y%05%16h%256:(8g%0At%25%20:9%13)%18?%10d%22q%3E60%7F&%0D'=%13%04%13%19!%03%0B%7B%0A%06%03w2%1E%18%19:w%1C%07%7C-89%1Dc-%08%07%1E%1A?d'/%1D%18bd&%7D;r7%1B%00(%1Cr%1D%0D%11%1Fx%15(%7C%02%1A+r%11%02w=%1E%08%19%1Ey%7F%19%11%18%0E%0A1%14l%12z%04z%16%139)q%22!%20%12/'(%1C%3C;%0Fr3%1C%01%1E%13q%7D%08%0F;%1B%22d%19%3E%1E%00%20!,%1E*%1F4~#%0D%60%0E%10?%20%3E%00%1A7%03-+h%09p%18%20nd%7Fry%0806%7C$%1E%20je~/%3C#v%03s.=%161#%3Cu%1D;5%7F%02%16z%0F%201sn%05%202%20.y-%03,%18'%07.)ngds%18?0(*4%06e%08h%089%00+v%3C*8$;/%1E&*=%01i$~y%1D%1B%1282n),2%7B&;%60(%0Fg%1C%10s%20%0A%7B%1C%14)-=h=%09'a7%7F%03-%7F%03j4%19%11*;v4zt-?%1C)%3C%22/%02-;rx;%17%00'%09%19%12:,c=%25&'v=/%17%0D%08%0Dg&x!#r18%14x%1D%01%3C1%11%1E%7F%0A%00%1Ew%13%18%1E%60%7F&)8%0Bb1%02%7C%19%1A?:r%07=%0A%7F%04%07%18:?9%0A%0Bz%22%12%1C3%22)%09o%11%05s,;a%17%3Er=,7%13~%06&?jh!x&%22%1D%1F/%3Czb%11?9(1!7%7C%22%13.*0%7C~pxyk%60g$%05%3C-=8p=%09i%05%1E6%06+!%18%1F'&!!2%20%14%00%1C%122%00%0C(!0%20%12%17%3E%00%12g%12%07%7Fxn%20%04%10?%072%1A%0D%09%1F'%1B28p&:7%03dr%19%1683'%12%11%19*%13%3C)3!+%60,6%12%25%1D%0Asv(%09%09f%0F(%09z%12%1Ex%118%3E%3C%1A%1A%04%0F+#i8v)%14*%09%7C%0E1;1%03%098s%22+)3x%7C*/cx71%14-e%7Cus%1C3#%1E0z)8%19$%0F'=ji%01p%7D%0A%0C%08z%07*%7C2!y/%1E%01r%11%06%13%60%14%03%25%13%25%20a0%13-%11r8l6.%20%03~%0Fc%7F3%0Ez%08h%06p%7F%02%17?%3C%14%1A4+e%0E%08%0D%01jh%06%08%60%14%08&13%25%20%145%11%022%08i;%01sy%7Dh=%603=%02m%1A%7B2%13%1E%11:%1A.%01wv%25%25/%01)n%7B%09$-6?%3E%12%14%13%1E%17e!x%05-%036,+r#%14h.u';%0E9%1Bn%60y%1B%01%00%1B%11%7Br%601s%604%0D).w#%7C%03%1E%3E%08(%07%0A%06%3E%05~9+%18d%10%05wh;%7B9d%06%18%1D%04.%1E7%209%20t%22%7C8%18%60%25%7D%3C%144!%12%1Fxm%02*)9%0B%1D1(%00(%0D+%1B8j,%1C%01%19%60;%1F%086%3E'%09%3C:%14%11,%12%1Dy%0E?%02%1B!%0D%1Ce1%132&%11*,3%03!%18%25%06&$%3C%18%19%0E-.~0%12z&%7F%1A:?!%05%20%04%3E%1B%0Cr%02%1C2)%0Ess%16%10%00%00%1B%0C%7B%16%19z%09%02$%08%05%064%1F%06%13;%095%7C;%082%09%09%06%3E!%14%18%0A&?)%1D(&sz#%7F%00%15%0A%07%1C%3C.%25,x%0B%06%19jd%1Av'y8%11%7F%1Ddrv9=%11?%01%03%1D%7Ch5!8%1C%7B%0Dh%20p%7F#%1Eg#%13%02+,%25%0F%171%0A%17%1Adr'?!%22%01$x%25o%069/y%080b*%07%60$/e8,,(%13%3E#$%0D%03%3Ci%08/%1A+=$%25%02!8a%1E#%0E$+:&%13/%60%3C=%16%06s%07a%15%3C%7C%08%06+j%14:&s%05v%03dp*%14l;%1Fy-%17%1D%3C%60%19d%19%16%1E~u%60%3C%0B%04%05(%60%1F%0D%7F/%17z%1A%17%25)u%06$?%0Ad(%0E%1F%09f%04%12%22%1B%0B%06dj%7B*hb%20r'%006%008s%1Dyv%13%7C+;%7Dm%13!%0F-+%09%1C=%04d%22%13%1A%1B%0A%259l%00%7F9%0E%2015%0F*s%098%7F%0A%11%04$%1Df%04q%19a.e%1Bw'%0Ba%1B~8%1B%0A4hr1%1B%25%137%1Fu%20(5(d#,$a%11d0%3Cx!$%1Bn%3C*i)%25%0Dr-m%1C%03%0Fy$r8%0E%05d%1A!%1E2%11%09%1Flhs;s%01*%00%19%1B~,1*%3C+%20%7Dn%14%20j%08:%20h%1A9yw/%3Ed%0B%02-759+s%1D%01ir%08%04%0B%11e,,%03#%01%3E'2%11zm%7F%0C%17%0Ev.=%09n%0D%18%159!x:%0B%0Di%0F7#4+%1B%7B%05%18%7D%10%12z%07!943%036%08~%1A;%1A%0B%03%22h%3C%0Cu%0Ez%0D%1D=%08%1C%0D43-%133%19%12h%19)%3C%1B0%1D%0Ej%7D%05%12'%3C%11%06%08r%1F=)~%7B='%7C1&%14%01%3E%0Ey%1Cy:%09/t%04%0F%1C?1n%22x%18%7Fyt,%1C=%17d&-%7B%1F%7B%7Bn%1B~%1D%16%1Cp*$53x%021%1D%01i%08y%0A%7D%08%19:%08%196?(~x'%1C%3Eh%19'%7D=%3E%1Adx%1C%1F%0Cf%60x%1F(=%17:%17%0E%0C=%16%0F6'8%1Be%06%0E%0C%1D%0E%11.%04;w%1F*s'%198%3Ef%03w%03%1E%0F%25)v%0E%02%1C:r%11%01%06v%3E%196%1B%0C:fz&%0A%16%01%00%20/%02x.%18~%19%11%07%18%1629%19%25r%7F%3C$%7B7%1A%17,r%00!k%11s%0D%1B%0F?%09%05%04%3E%0D-%05%1A%03%04%14=%7B%11%20%20a%10%11sx%067%08%60%06t1%004%05,u%1F+%011%1Du%19%04%09%11%7C%0A%18%22%3C%1D%20%09z(%0B%3E%09%15%19%05.#%03%03%0A&.5/w#;vc/j-%01/%05%07(:%05#a)8rz%10%601%0E%7D%0D.%60%3C0/%09a%1F%7C%09%18%14%0C7&7%06a%0A)dp*%14l;%077#%3C:%7Bd%25(%0F.8,$%08%07%01'%03%1B%07w%00$3q%3C4%0B7%0At1%18/c%22q%01%19?;%3C6%229%09az*%03v%16%03%0Fn9-!%1C%11n%0F9%201%01%0E%60%0C%14%03s%192%1Cj%03%3C4%7B=k8%00%04%03a%03%1A(j)4%17%13%60/x80d.%0C%3E%0C%0B%039%15x%1Ev%00$%0E%20%04%11c%0F*%0C(%60%3Cy%08&,-d&j1a?%3Esj*%06%17%7B$%00s%14-%0A%60%04*w%12h%25qz%047%7F%05j%07%19=e%12x$%3E2a:%0D(%141%15%0C%00%20%17%18%09%04%041%22*:=*~/r%11%3C'%7F+l%03zq%05%0A%0B'%1C%0A%06%07%3E%1A~%02z(%16%11%3C%14%12%1C%1B#%222%05%070)%126%60y%08e.%05%0A%17%0Dd%04%10y%1E!b%0E+%1D,%17%02(s%1A%16%0F#du%02w%0Ff=%0A8;j$*%0A;%05;='9)%16m9%1B4)%7F%1C6.%13%1E=6a%04q&%1653%3Ep#8;)?0&,0!%13(%3C%7Dn%1E:+=%3C5&(%1B%7F%18%0B%04%05/9a8%7B%0C,%03-%1E%1F*%15%12%04%1F%03%60p27,%01#%04%1E%1B%0F%09dr9,1%158%02%02?i2%1E%0F%25#,%0A!%1B%7B%1F%20#;s.%7B%17%25%3E%02&%1B%154%09'%20%19%03c1%0By%05)%20%113%0F%1A-5y1%3C%0A%60%7Bx%25=%18)73%02%7D%1E,?-%02%3C%04k:y%0E%04%1C.2%20&%097%08%7F152%1D%09%3C%1B%09!v%0A%148%17)z=:%05%09%1F%1Ea)-%06%7C#4%18:x/%3E+%029%06%20,l%3E#v.%1Eh51%19%05#%14%25r')%1E%001%0Cu%11%7C+%1A%1933'81%11u:%09a%07:%1B:y%0F3z01%160#y5)-%10#%00%03%13w%0E1%20q%60#a%17rsx%7Dn$;%0B%09%05%09$%00%1B-(%16!%60.=%14%1D8s%0Fy%1A/?%037#%7D.%3C,%7Cv3h%7C%03.=++2$%209*y2*5?%22%3C%7C%064**%1D9)mzyaixtg+%17%22?-9%08,b1%00%1A&2%7B%3E#/%14%12%602(;%06m%12%0F)%7B9%3Cb,v%01%1B1%1E%0D&%03%1F%13%15%0A%10%09'4f%1D%09/%25%0B%15$4%08%1C%1B%06%024%25%1C6es;;%1B%09%01%01&,4=)x'%02%0Dn8!-2%04/%60%01%08%22%05:%03%00%1B%1E/n%14%3C%1B%20%20+h%7Cn=+%0D7%046%22%00%13g%0Eq%02%1Ah$d%13!%25%18)$/3417(n%12/%08%12$%0Dd%01%0948%08%09+%08%06~*%04-.%15dsd!#*%7D5x%3C%60e-;xy5%08x*z#%0D%04%1Asy%16=%03%00%14%7B%0F2%05&7%04((7=%15/%01%12%1D%00w.%7Cj%22?;%1Cz%1F2)+r*%20g2%16%7F/v%068x%3E%0C%3Ch$/?(2%04-%02%07%3C%0B=%3E%11%07%3C16~/%19(r%22%1911%0Fj%18%07%03%0C)%03%13=0,%20%0B%17$1s%7C%0Da%3C%16%7F%0Am?(/%08~-%00*/?%7B#%1Cd$%1E#%1E*%7D%18.%22)%7F%135**2%7F/%14x%00n%15%7Cv%7B:%09dr%0D);%015z1%1E%0A%01%03y%1B%1F%04%1E%17s-%7B8v5'%09%198#%3C%18r,8n%7F.7*%1E7%01%01y%11eo).%22%02e%01%18!-(ahg%3C%1B;a%3C6%01v%1E%7B%09$d%0D&%18a%1Dxt%1D%20%0C%18%012%06%02%1E%12%20j&%03m4.7%07=(%14%08%00z+%0A%1F%3C'd%03%20:%3C%14%089%01%1E%19%1B~%02%1E%15/x%13%17v%00%00s%60%04%18%16z%1By%05%10d$63%1Ev%1A%03%00%7C:1%20~p,%7Bm%0130-%17%0D%22%08v%0F)%088%13%09%1By%0B%12/%12%03%0C%1F%3E%18)s%04-)1&9%04v%11z#.%14%18)-q%1A9%09%7F%1E($%015%05%3C$%1D%0B%60)%1A%20%7F%19%0B%22,*%04%0B%0B%04.6'-)%12%03y%08%1D%14%60!)%06(%1B2%18%12%0Ax19d)&w%0B%149j%19%0F%0E%05%07%1B=)+3%25%11%06%18)%1F%02v%08%1B%0A7%0C%18%1E%02%0E%1Fyur%0B.%7F%1Ay%05'%09(%20%09%1B4*#3%169%250%14%18v2(.c*)%7D%02!%03%1C3%03%14%3C%1Dy3%0C%0B=%7B#j(~%1C%1F%25p;%00m%1B=%19%12%1F%1A;(t(%07h%25%06+1%7F%005%0A2%3E%1837%02v!'%18%7Fs%03x%7D)%19%01%22v3h%7C%0349*55k%04*=%20%7C%064**%1D9)m%7Fv%60a%7Fsg+%17!?-%7B%7F6%15%7B%04%1E)%1E4)u~%05i(%12&r%08%15)%06*%0E%01%12%07%09%03%0D%0Ai%191-%1F%1F%12%15$*%12+1%11%0Dpd6,=%608%3E%7C%0Ca!x%0C%0F%16%16%1F;%7B%07%178%1F%14%18&%1C%7F%0E%229%08*%05-%15%1B%1C%0Ah%1D%15%1A+%20$%7F%04%0A%1F%0Bh*%13%02%7D%0E%04y#/&%17#~,%1D8*&%3C%259wl%7Bxv&%7Bob%1Bt1%00l%12%13-%1A%7D%60%16%22%08%11%22%15d%13%07%09%02%0A%1D%60%16#%1D%0A%09-%04(%7C%00%7B*%10%20/%0B%02%1E%0D-~i%60%01n%1F%0Ai=%124-$#'*7%0A%1Fo%13%191,%3Cm%7Fx%0A%08%3C0;%1Dp%7Dy%08%7F%02%0D%00%143b-%20%22%0C.%06%0F%0B3%0F%111'r%0E%183g.9?v%03%1Fr%1B%18x%20%1A%22u)%2588%1B%0B3%16h%1E%08%20%7D'%1D%7B%0C%08~%1F%0C&%07)%1F9rd%1B%0C,%203)%11.3v(a%04/%7C!%09%3C%0E.%1F,%109%04%09%08%1C%1E%06%0F%17s%20%1D%22~%15%13%08-:%7Fsx-)%1C2%049(j*!%17%01%0D%1F%1C%04%171%7C%14%20%03%0A8%7Ba%03%1C%09!%7Bk%1B%1E/%7Dx.%7B%13%0E%11;%10$x%20(%25=%7Fd8%1F;v)sn%04%1B,%00s%021%7B,6%05.%078aa%04'd,#a(%0E%0C85%02~%071(5:~%251=)6~0%3E-%1B%1A%0C-?%0B%0C%14d0r%162%05(3%1B:%16%00%1B%09%3Ee1%1D%1Bv3%25%1Ac'6d%25m%04%05%09s)7%1B%3Cn%7C%0B%3C%19?u%1Eyag=%07%1F;3%7B%3C%09s%08r%1E3v%1C%04%20#%1Bx%12%02o4%3E%0E#%16('sv%0Da3%02%043%009j%20&t*%08%3C3%07tzzo%16.+%034=5%0Cv&-n1%07n)*%0F4d;%22%084%25s%03%20(%16%05%0Fs%7B%097%3Cz6xv%60%09%1B%0B%1B%0Fmes;(y?5yj%05%08v7%01%0E?/rc%09x%60v%09:%00%03~%00v%16%25#%20%1Fj1%60$;%16%20f:%0A%1D$!:s;%7Ce%11%7B%207%07%0F%202d%08%3E%20%10a%60;sa%1D%08%00/zw1#dx%7D6)%16=2ya%0C(18-)%00i%1C+%04z0%25%07;x#!71j/!-%02%7Ct&zr%15:%0B%3C%06%1Dc1%19);%0E%1D%02)%7C!%12%12x%11,%0A%10%17%7C%20y66;%3E3y%7Cn%7F%1D%09%196*4%0A%25?%087&%06),-8=.*%1D%3E21%0C%10%08%1E3*%075$%14%151x%06#%25:%04%06)%00+%0B:zjx&/%08'%14%20=j%25%082%05%3E5%7F%18#:%0Da$%12*!%19:%16%7D%1B%18%1E0%7F)%09%03a3%01z)%04%17%20b)q%22-(%19%7D6%1F%0B%0A%25%7Fv%13%0C%0B'y%16~'%1B%1F%08)%02=(#y%22%7C%1C%18c9s(%0D0%20%081%22%1F=%12%0E%16/%3Eaed9%19%1E%0F4%12%07%1F%01%0A=%09%1Bz%0C#%08%1C(%1390%1B%7B(%11%7F%16%0A%7C5%0F%19,%17~t%18%19?%15%09r%09%1A3%12%7D%04z?o%60~&%19%7D%1C3-.ry#=;%02%08%16%13)x%09.&/d%1B%11%7F7)%05%0A%7Cv3h%7C%22a(/45k5$n=%22$1k,6=)2g%046%3E.2%19+8%3Cgwxyu5%053!%1744%1B;2%7F%3E%09%0C%10%1A7%0F%02%02%1586%17%06%18+%01%18i7;8%22w%08%03%063%1B%1A%0A%20&u%1B%1A%12*%7B2?%0A2%20%05;%03%0B.%09%1A%00%0F%0C!%05%0C%07%0C%0Av%1C,q%06y%1Di%0Aj%18%7F%0F%14rr%13'%0F%04%0Fj%0Az8%05%02%168%16%16)8%03(%1B%14%1C%0A'%18%095%12%05%18%0C%1C%18%11%3Cw;%0A1%12*%00%20%7C%1A9*%072y%20)%0E;%1F%0D;%18%20%05%7Feo%7B%0D%12x)%604y/%03/%0Ad%7D%18%02%1C%034%06%00-%1A%00%09d%08%08+!%1A%08sd%05%1F4%09%081#v?%0D%0A%1F'l%07%099%12%08%0Eg9%18%25%7C=%60%03%22%07%22;%14%06r/%1D%14dd*%0A%14h%20%09.%1143%7Fd%18%19y%1A%7B%11$%059%08%12%132%04%00h8%1A%0E?%16%1E%17%1Bu%1A%3E%03g%00t%0A-%3E(%06t%1A%06/%12'8%049%03%18$%06%1D$%1B:9%07d%01%0B%1D%0E%1B&%0Bme:'%22y!%11%13%19%18%1F?3%06%00(9a%14%0C9(x%03%07z8%1A%7Bk%11%015%1F4h%11-%1B%02%144%01%0Es8%078%08%01%03%12%20*6%0D$%12%0F6a%1F9,%7F%0D%11-%22#z%10%1F,%05%19%22%14=%0A%13~%03.#%22%20%7F%16%3E5%22x%0E%3E1%60%122%3C%071f*%12%25%03%0Ch%09(#'%17#%02)%0E+%10%1D%20,%0F!%1C%3C%1A%02,%0A%13i%06%0333h%7C%02//'8%3E*a%01!758a8'4%25'%20?!+%7C%1A4.%3C)%7Czx%7F%7Fkbg$%05%3C3%09&%25%1B4%20a,%18%0C%0B%08is9%077%0C*%06%12z%1A.)8x%07%02%0F%09$;89-*%1E*87%0Ai%22%18%0A~*%04%18q:-%1D%12#%00%0A%03%11%00%1A%18%1E%17%09h%3E%05%1A4*%00%7B%05~%02%0F%05%1Br/+%13%06%06%11%7F%0A1%20%1A)%186:g%006%0D6%08(8%05%04'%18%15(%1B%3C%05%1Dh%0A..==%19%07%10%00#2?&)=w%03b%1A6%04$%1D%1E%09%18%01,%60%0A%1C%0C%3C=%11%7F%0A&%0A%00.%1F%60%16%13%7B0%07%25%07%22%25me%11%25%3C=%0E%1B3,,%18,4%1Av%1Ex2%19%0F%02%01%7D%007%0Cvz%7C:%60%05%05%0A%7B5%152%05%18#%0F%12?%00'%0Fo%14sp,=%1F%07%06%03%7F&%0F*$%10*%0A4%15%3C9%7B%0A%1D7%1A%11%0Fw%10%05r%0A%1A4n%09%18%07%04%03%1B(%12/%09%05%15%05%7B%04%09%0F%115%02%18%3C%008b%06%11?*4%18%0A%09=/%14%1B%03#%08%1B%3E%15%3E%0E3%25=%02%09&%02%0F(%131%22%25%05%08d%60%14%0A4%1F%3C%06%05&%18%08%15%13%0E$(;%14%1E%031%16%0E%7F8%11%09%07%18&/u'%1C6)%09q,!%11'd0%25%04%00%00%09%00%04%01%08fx/%067%1A7?%12%22%17%3E%0A%0C%0D%25,%16c%04%0A%08%1E%1F:%00%22%0A)o7%05r%25$%10'%063%0A7*'%1A%16%01%7B%01=(+%026%18(%0A%00%0A%05%1Ci%20%0C%1Asd-zm%02:~#k%02$%22=p%044?=04.m%1D;53*/%00'-$%22$g%7Fie%7Ct~yu5%053?%19-a%1B%18%7B%1B%0C%3E%7Dt)%05%0B%07%1D+%13%7F6d%22%1B.%19%0A%1B%0E%02%0A!-e(%0C%05%06;d%1C%0A9%07%0Ab%0Dp%11e%03%11%08%03%19?%3E2%1C&9%1B%0F%7F%7D.%02%25!%1A=3%22)v%25%7Bv2%1Ar%13s8%0Fam%18d%00%0Fx,%14y%18%1F%25ib%068%1C?l4sw'%14rd/%1B$/%09#%09%0B%3E%1D%1Cd%07%11sx:%1F-%0C%7C%14af%114.%09o%25=%19?%0F%3E=%18%06%7D%22%0A%03r%04*44%7B?%16#e%01%03s%198/6%09%7B%11%08&/%22*%131%0B%60%3C%18%0A%11;13%1C%08d:%13=,%0Bd%207==q%20%20v%1C=%19xal%7Br&=%258%7F,%0Ey%7D5'%0F'%0F*:%16%08*/%1F%0Bh%1A,%028o%11dx%08%02)%00?%25%02%1D%60h%20%02%18%1D?%7F%03;%7F%1E%1C%22%60%079%01?e%0A%06%19%1E%16%17#x%06%3C4%7B%20w%60%20%1F#%05%03%7Fe%1E%20%22-%1A%1D%1B3%11%09%25%3C%3C%7B%1Ewx%02%12';%12%05z;%08%18%00%09-?%09%22/?/v%7F(jr%25?%0A$%07/w%60%1Ey5%22/*%00%1A,%0F%18%03%1E)%12%1E4,1%00n8/%20%02%1C%09%3C%0A%11%08%20&%7F!-idn%7D87&%3C4%7C%227%1D%0F(%7C7%036%200%1Fe%3Cc=+&$a%15%1Cq,%05%0D%1F%7F%163y%15f!*%20%7F%0C%25%07x$&v%1F%09+-%0A%1B%25%7C(%06%017%1Cd%02-(%0C%1E%1F%0B)a+2:s(%06%12#-+%20%0B?f%1Fq%22%08r%3E%04%11%7C%03%0Ce(.%18?%602%0F6%7F%1F%0B4%1Bj%3C'8%15%18%14%00a=%22%04$3%1Ba%0Asr%20v+%25%03r:%0136%08u%07%18%60d1x~z7%05%00w1:%16%13%05%17%224j%7Fx%20!%7F%1Cd$%0D%25x%18d10%3C%22%16%19%7C%03%1Cwj%1B-%03sw3%03%0E7%13'%12%12%03%25=%04l%1F30?%08m!r%0C&~6%14%1E%07)+%1F8%122:%1A%18%05%13%0F%0C%0B)(%18%22%7Fy01%1C%07%60%09%12%1C?2%1D~r)%00%07)*0$%222%1C?%14'%1D%25x&m&%20j%1A%22%13%22%00u~$%1E#%01%15%22!%0E8%02%18%03%25%0B%22$+)%3C59x%1B%00%7B%10%17*u*4n9%7B,2%0D)4%0E%14=%2216#(&y;%16%12%14-%148g,s3%08-%19%7B&:%198%18%07.9)19sv%19%08%08%3E)%07%1F8%0A%08%0F%07%20#%18%09d%0C%069-%3E%12%20~%7B%0B(/q%1C%01n?:%15(%1A%11%06%11%0C-%0Av%0A%1E%14=?0&,6%7B:%08&))%0F%19n:%0A3#%22o2yj=%19%3E%05%19+%03-%153%1Cy%1D%7B%16%13%7C;%1B%0Ao%05%3C7%05,%163x%0C%7C6%12%09%09%04%604%1A%07*,%07%1E77z/%197#%1F3%06%00%020%17%1B8%1D%3C%0Dg%1C%0D%1C/4%18s%169%1B%08%00%7Fss?%1C7d%04%19%06%18%01%7Bu%25%06:6%04%0A?%097)%03%22#:hi%00y8z87%1B%02(%08k%20%1Bn-%7Bah%1By%1A%1A3e%1Aq%0D6#%1D1%11%05)v:%3E%22%01=*%0A%60%06ya%08%1B%7Fx%1D=i%22%042%25%00%15%1A%7D1%06e%0F%14%20%0F%13*.!%08/.%07%0C:%1C%05%05y!(%1D%12%05=;*%07.%3Ew0%07%12%0F=%1Cv91%19%7B7*6%3C%03%03#%01'3%06(/+%16%22%25%1F%03:%1F%0F%11*%00o9s/%7F9%089%07%18%116%09%3C8%05%7D%17a!$td!%09*%1B%00%1A%06%13%0A,7s7?)%3C;!%22?d#n%25$0:1y%11%7C%03b%1E/%08%01%00g%00y%12%25%15cr)%18/n%1C9/%0A%7C%3C4%0D%0D%22%0D%15%1B%19*?%1A%01#,%0E%086%17%7F%1C2%1D(v)%11*88)e!w!=2'%00+%18%7D%0Ca~s%00%1A%18??%15%096%15%1A)-%08#,%01%08%14=%18%3Ef/%06d%07/%01/0%207o%1C%04%02%1D%25%0E%7B%00td%14v%06%0D%04/yv%14%0Dty%1A*'-w%19%254%25%05%08)78%08%06%10-%1A!%04yxy%0Dn%20-%208%09%17?%0F%0E~%034%7F&%13%20*ie3%25,;%00g%0Ar%3E%7B%16d:8%12%16%13%14=qr%06%162y%20~%07%60!%20-y7%17%02%01%0D%0F%7Do%7B%1C%04%06/!%08%02%09;%05%0B%02(%02%03%08%10%251%18%12)%11%7B%7D%07%0A/a%0A%7F%0Dr#%0362%22:~ni8u%1F%074!,+%3Ew%13%1A%11s)%00a%09%02%10d%09%0B=/%18%7F%02%1A'%1C%179%1D%1E%12)p%0C%7F%10%1D#%161%0C4%1F%057$%0F%179%13%0C%18%19%1E!s%1686%15#%01&%01%7D%60#%3Cxx?=%0A$%199w%3C(;%05s6%1A'd/%1B%03#&?t%12%02/'%00j%7C%22m%123%18/%1Bo%00%0A%11d%013%3C%07%00?%0F%1B%25%06%17)%07%60d%13%11%03$%08%00z%0D%09%02%09%072%00%3E%1E;8%1B;)%7B%17%18d%14dw.%14%1Fw#8%09%02%7By%0C~%1A%3E8)%11wo*:%20%0F%3E%0C%1D(%119%16.%22)%0D%0F%05m%16%03#%3Ce)6%08%05%208h%1C%7F%14/a?!%136,z%3C%7B%1B%02#%16(3%08%0Bs7%18%063%17!%17%12h%3E%19!v.7%3E%11~-3%18!%063%18/5%05tyz;%3C%00*;=%10%1E%1B$%3E*%0A%3E;$)+%1D62+%06%7B/8%1D%08%186+9%0Ey%01e%1Df%0D%11/%1E%14%04%03j-#%0Dc%1A%03%07%3Cm(.%11?%0B%0F=%20p%01wn2%0C#d%1F%20%16%7C%0F%18%20k%12%25(%0D%05%1A%02%1E6%1F%02a%16%0F%19%08;v2:u%22(%14g%00$(,k%1By-%3E%027%1B%25&%1B,%1F2,%0E-w)%02%0F%11%07,%1A(#'%05%00%03%02-%17zv%00%60%1Fx%7F#m%12%1A'(%02#5:%12%25%16%3C%1F%229:%3E*%19%7C2%0F%18(%209%18'%7D3%20%3C0%1C6%17%7B%0Cq%7B%1D%12%06%6078&.b%00%0E%7B(l2%1B%25~%14)b%1E%11~e%00%04y%0E(%1Ba(sy%1F%02?%7F%0F%17~/ki%04%18%07%19%60%17(/=~*%12%1Cy%1Dx%09=%03r*(m%05%0D%13~8%0A%17s5*%0A%20%1A~;%7C%1A%16%3E~*y%7B.%00$4)$.*%1B*~&73z%00%20%03%08%09%25$%00%3Cl39s.4%0C%02&%05zw%01i:,.(6%1E%07u8%032#%07%20%1D%7D*'%1E8)%18.%08-py=%03%121.x#%11%7B-t%1B%07%1B%13$p:%0A%1B=%1E%0B%7D%00!5%3E1z%3C6%3Cys%7B%18%0Bh%02%17%03v%10%7B%1Ay;%073%0A%12%3Czb%13%2585k,+1%3C-g%1F,591g%7Dmg%7Fwzb%3C%1E9+%12#=%0018z)%00%17%13&s'6$%07-%0D%07%12;$21%7C%1F7%0F%123%00%15%03;6%06%09%1C%11%0A6(w%1B8%19&d7m%1E%0F%0E%3Ca%08%00%205%1D%1Fv4zu'%1B.%7F,%0E%0C%22%1A%161%071=+%11%13%07%0F%01.%1D%7D%08%0A%1C%013%08)x9%12%16#&%06#%1B%3E%13%0D%1A%0F%03%17%60t(4%08%07%08%16d%19%0F:%06%0D%09a.%19%0A%05(%0F%01;%01%0B*%25l%02--%00%3E1'8%16%0064%25%1D%00%1B%25%0A&%1As%7F%0D1%00*%04%04%25%1E%16%0A%25x?*e8#,%01%10;:+r%1F%167%0E(%25%7D%08%11%19%13z%03%11d)t%01%056%3E%018,%03*%01%12%07%06~%00#%0E%11%01/2%01%00%18.z%1B%099t%0C!7%3E%227%08%1D%12h;0%08%1C7%16r%10:-7%11%3C%22%13%014%06?%22%20%01%3C%01%7C6%086%13%12%00v%1D%25%03%17%19,%09?%03'%7B4%18%0D#%00%7Fj%02v%08%1A%190%03%3C%1B!:%04z-7%11~s%0E%032%14%253,%7F*1%093%04%25%1A%05%01,%0D%25%0D%01%22x8%0A%0D9%1A.2(%11%19#%12!+m%3E%1C%073%22%17(%0A%15)%0B%0A%20%193%0C%0D2e%0E%13%22%0C%3E%09%0A%0E:%222!,%7C6%7Fu%1A%3E2?n%1F9,)?b%1152%0D%22=-5%25msz%60a%7Cm.%00+:%12,/%1E#)z&%12%09%117s($:%15%3C%0D62~#%00%00%06%03)%60%15%225r%032#%07*%25%00:*%09)%0A%0F%14%18%0D%10%12%1B%00%00s4%0F%1F##%1Bq%0F%7B%15%06%1E%11x*%3C%1A%1D%0C%1Bz%1D8;%10#-!3%7C%0A%3C%08!%0122%0F%010%11%08y%12z2%1F(%00%7B+%10%13z%12:%0F)%20%02%0B%19%0A%18f%11%05.%1F6&%3C%00*-642&%02)%209%05%13'-%1E%60$%1B?%014%3E%00%18%7D%1Fl%1A%09q,67%05!-s%07%1B%1D,%09$%18%1F=/%10.8%60%003%25s&%15%22$%12%0E%04%0F'~%10%7D%042%12%098%20%07%1D)%1B'%0C/n%20%08%11%11$6%14%1D4%13%7C%15b.%02%3C%0D#g2y%11)%00%00%60%00%0A%1F?7/*'%00%15%1D'%10%08%0Bv%1D2%12%25#%00#%1C%12%1A%2238%1D0%11%0A.h%0E%11*%3C%0C%13&*$%7C1$!%0A%1C%07%00%14;%02&%06%3C'2%16%06;.%09%1E%0C%02%0A%20%07%06p%22%7C(%11d/%60%0F%1E#$4%04%0B!%3E%12-#6%3C'%13%10%06%1D%08%20%01;%7C%17%16%11%058%0E%25/%03s.?7*%01(%20&~%14#%05%07:4%1C)%09q%7B%0F%1E%05%60%0F;a%00*%00+=%01%1C%1D%1B%20%0F%08?=.%11%06%0C.7$%0F%3C+%0F2&%05%08%7F%0Bex&%06%1Bnb%09%0B%0F%19%1D%04%18%17%06%01%1D%7B%04u%09:%08?%3C%16%0Ex839r%3Cv6!,,%03%03n%1A&%222=%1D%123%22%7D%14%0Ea2%10%09%7D=%05%1E&%05%19!%091%00%07%04%15%13%3C%03%1A%1D!%1D%1Dt,%04%1B%03%02%00%1A%3E%605%03(#%0C%0F%3E%0F0%20%02:%1A;03%03%1D#%0D%06%1A%07%0F%16?%08%1C%05i%17%18%0A%7B%1Ci%11&%041%0F%0F%13%20%0D%20e%08%18%06%11%0D%0C%13%07%08;%07%16%1Bb%184%03$%0B#1%13'9(%25%1D(%12%1E%10%16%04%1B.%1F%0C!%09;%19%17%1B%1B!%15,%14%1E%09%0C%08%0A%1F%18%1B%033%00!$ag*2=u%1A$/.=%0B5*-gwjczm.%00+:%12,/%1E#)z&%12%09%0B710%7F=%03%25%0Fq2=%60%1C%07%10~%05%0D339%06%09%1C%11%0A6(%18%1B8%19&d7m%1E%0F%0E%3Ca%08%00%205%1D%1Fv4zu'%1B.%7F,%0E%0C%22%1A%16%7C%071=+%11%13%07%0F%0D.'!%10%7C%7C%0C%11%12+%0A6)':%0C%19;%1F%01%06%15,%7D%0F2%0Cy%01#4%15%7B%11%0C%02%18%13%1F%09%1By%15%06%09.%25%0F6%09%3E%00%017%1C;=%12s!-)%0D%102%7B%0E%1A%0C%22%7C%0B4%17%20udz%0B8%0F5%11%0F%00%17%1A%18%1F%00%1A89%0B%60%1F%0E%06&(,%01%14%1D%071%0A%053%168%06%09%06:7%09%08%3E(j%1C&%12%0A9%20%7F%7D8%06%1C37/&%0F%0Doh%12&&6k)%0Cy%0F%0D%1B%7F%196y&#7%0A%0A%0E%14%12%1C%19%1B%0A#%1C*z%0E?%07%10%08%08%00-;o%013j%1E%01%13%1F(u~%0B%16#%04%16%09%07%12%15%006%04%0F%3C%05%022%22%04%1C%14%056%1A%00%1D%00%11*%19/%17%19%05w%25%17%1E%1E%22t%7B4-g,&%7C~%18=z%00%7F%08%11%18&%11%20%14%1E%12'%18%0Ew,%13%089%1B%0Bv%12,%08=4%08%1E%0E%03%02:%0D*%1A%25%13%0A%18%209%15,%1D1%22%19%07%0C%7F%10%08%1A%15%11/2%1D%1D5%7B%07%08)%02%1B%00%0A?;%0A%07%0C%09%12%1F%06;%09%0B6%12%0A%002%7F/;$%7C6%7Fu%1C$&k%0807#5g%3C8#;8kxoggyyxni%7Cm.%00+%1E&%16?=%0F%15%1E%143e:%132r)y(%02r%0A8&a'%1C%1B%1D!%00f%081%1B%0B)%12%7C%04~%00%15%03%02%11yy%15)%22%0A%60e%60%7B%034/:2$%02(x%09%0Aa%05%03)%09,a%07%10'!3%1By9%22!r%01%0E(%07x%0B%04?%04=%7B6%05%18%18%08)%101?j%1E%04%087%22%18%20%04/%3E%0F4x%3E7%0A.j~%3Cn;%12n%04%097%03%7C7%11%7D#%7F%7C/1%045*122%19r%7Fx%13%1D%0F;e%1E%06%09%02;*%1F%14%0D%07v%17%60-%0A)ke%7C%0D%7C%0Fv%06z0%7C%08(a%0D)%7F%096%15%197#x%0Db%0C%04)y%1D%08%1Anx(;:3%1B%04-%1B6%7F8$%095%20%13v-%1423s(%1B4(%14%08n,(:%02d%19(%09.cs2%1A%08-%3E%11t%03%0D%01e%02u%7F4%3C(xy?%0318%19q%7De;&%18%0C%0C%003%15r&%0C%16v%3C%7B,%13%05%0B(,'%12461%1D%09(+4%08#/%60w%603%3E%08%1A%1B2$%1C'%02%04h$%257%1F4%3C%0A%02%0E%11%3Cv5%13%15d%041%20#x~%094%7B%01%0A%1B%3C%10%14%7B$r%1D%0Ae-%20%20a%15e%7Fv9w5%3Esjx%0C7&2%05%20%7F%17#=5!,r9%12%0B%7F~%14)d2%07v%0Fe%1F'%20w%11e%072%1182i!'$4%1052%19#*?e:5%1D6,%07s%10%13a1fs$zv%03%22%7F'%04%3C%1A9%04%22%199o:d%08%03%7C#!.+y*oi%7D%20~7%11%7F%07+%07:h%02.%0B%7B98%1E~%0A26i%7F.5.%3E%11%1Ey5d%05%09e%7C/%13z8%11%13%0B#!%13c%7Drs~%0F%11s%17x%09%0C%02#y:%7C%03g%079/%0A%0D%05:,%20%20vb-53%08%11g%0D*yy%0A%15%08%17%7C%07a%1E%7F)y;/%0A(5-%17j%20$9*$26%7D%25%1C#3?%12/'?.9%7B02%04%03*%1Dsda%10i%00u%02=1e%07%0E%03%0A7%16%60&sv%12%18%0Cp%1C!1f%1E8%1A~+%06.%08%13%0Bk;:8!7%01h%25%08%20%20;%15?&%07%0Bh%1A.;:,%1D%189-=%09m%7F'%18-v%0B$%1C%0F%1Dx%20h$n%7B8%0Df%3E%14%1F%7B/%60%05%05%257ng%3C%20?+%1C2%03''%1E%03e%7D9%7F%1C*;%602%7Bv%15%3C%0Cn(92e.%123%3E.bs.%1E(af%19n%7D%0A6'%20#-%3C%01%1D-&!7%171,qdw!%04$/%60%0D+&%0D%0B%187%18%12d;/%7D%16%7B%037%7B819ry$y!6%7C%0A%06%02o%1F(%19-%0Clh%07;%11%7F/%22%1D4%18x0g21r%08%0F%12-4%7D%20a%13%60'3%16=3%0E;1(%15e%13s-%1E3%08%20%15%1E%00%15*xs&e%18%04.%16%09(o%17-;&,/%7Bs%25&+/%7F~$%13e%0B%06%0E%05/#%09%3E%3C%15%7C%1E%3C9%1Bv-%14a%7B)y%12v7i%0E'%22-%3E%03du%257=#8%20%60%7C%00c-j%0F%3E86*s%09e-%25%03r%014%03%04d%1B?%03:2'%05/,?%00%1Cv%05%183%18d%04%13%1Av8%601%3E6%13%7F8*%3C8%16%1F%087%00%18%10is%0Es9=%7F%1F0*%06:%00~9%7F$n6)+ze%1A%00%063%139%60%18%1B+%12%08hg/%07%7F%25%605%13r!%3Ch%1F:4#w=%04%12#r+m%20s.,(.)%22%19~%1Av3%0C%11%18;%10$#%22%0Ee%17%7Bs;%08vv*%1Eu%1Aw5e%07u#v=i%00j%1B$n&)%07%1B%0A%3C%22%257%18%1F%1D%22%1E*%13?#%08%01.d6.%00%05#%02w#%18%7B/#;a%1B%22/%0Cv%14f%01x%0D%0A(%25xv%0E~%3C%7B#j&!12y0%02vva%05%0C%03%20%11%00%1D;=4=:)n%7C&%3C6r%03.%0B)cr7sv#%17dp%06%20m%07r/%25%18%11%25%04%0F~y7%3E%7F%15%3C%03v%00%7B+%02wo%00%1A%11%01+7?%7D%07%1C%7D(:3+*wr%11s)%227a%18=s%25%17;%03r%0Ds%06%1C;%7F;(%03%1D(=u%1F%08n%1B%03;'%1Di#&7%04*75zx%04,%0D%09%1D0!%18%09%14%1C%1B)%06;#%1Bv%1F%14:%15z%22%7D%06k8(w%7D%1E/i%0C%11%01%18%14%18%016,%08%0F%60%03v$%7Fh%15%0E+%7F%002%1D=%0D%18!:%1C%1Fn%60;%0F%07%0Ays%1El%05%0D%15%09%7D%17=%11n%0F&%11($%11%1E%7F:3yv*+a&z5%1E%0Br%16%12u%19w7%09%7B%18.%04%145%0Cn~v,#%1D.%1B7%0D:1w%1C/%12%04%601%0Ae%0B%11x/)%06#%25%1D%0734%00a%05%20%136%1D%7B%25y(x;%04%00;%06y%60gx.%3C%058%3E;;%1De%1F%7B%09%07#v%0Bc%1D3%0E%0A6(%0C(s%1B%1E=#y%0F%03%3E)3w%1F%3E.d$'%03%003%14/%25%22!%08#%01x%01%17%15%15)t%22%1D%11%199q%1896%7F%18xd*%0A%1C9t%19%7Di%3E,%18%03%0C%20;d%0F%0C%22i%14r%0D%0C%18==%04%10%0D%01%0D%153.d%0D%15%17:v%12*%09%16%7D8.+%114%13%20%20%198:%60%1B%1F%09+f%20y%3Ca(=xy%0C%00%03%22%11,%11%09mi%3E&-;:%1F%7D%18%3E:,*%1Ax1%04a%14sp%0A%06i(dj%60*(%06%01w*%16/%15-t8+%1F%021'~7!9%05#d6-%1F2%06%05$%00e$ny/%01%02%3C%02%3Cz%3E4!.%7B+:g%06%10%07%7F%0F%15%03v%09$o%02%18%06#xk%18%7F'%3E%0F%11c%12y!%1B26=%10%60%03,1%252'%082%11%60%1B%00%22%3C%02zn%1D%1E=:%0Cj%0A%22%08%1B(%20%02!!%25-.%7D%05%3E8x*2va%17.%13%03w%03%03%01%1B%7C%0Bn%3E1%13%25v#%7B%0A%1Bx8+'%09j%7F(%1F%20%04%08%0C%033dr3d#%20%14d(34j%13d9.%08%20*d8.%02%11'1x%1C%197(%1Fq%0C%1Ea%1D%04n9%7F3%1687%03%7B%004%13%18~%1A%0D%05%0Fu%03%3C%1E%20%035%0D4?%16(v%03%1F/%09%1Dv?%0B%1E%07%0Fn%127%18%08~88%03%03%22%01$,y%08f%04%08%03%04!c9%10%19'r%16%0F4%05%1E%0C#%1E%19s=(%02%02%08x#%14%3C%02%00-4%019=%03-%17:%1F%0C%19#%7B%13%09%08y=%0C%10%05%60%11r7)%08'%17%0D%1D/%1E%60(%0Cei%20)%17z%08=f%11$%0C%7C-dr%25%18%3C%12*%048:47%1A:%25)%7Fj5.4%05%004a%05s%25%1D%176&%0D&%08=d%7D*r%7C?5%07$%20%09hi%7Cj%1C)%0B!%22%12%0E%067%0096;%04.cz%0B3%1E%0D%3Ed*%3C):$=%0D%3E+6%15%1C%11%03&45y;/((%7F%12x&8%004%1C%02%08%18%20f%1F%07/%16%1E:%1At%3C!%1A%3Cz%25xa%03%1D%60v~~%3C%05%09y-e%0F%13%60t%0Ca%08%1E%05%10%08%1C%18%00d%06%07%01+f%01y%19%03ng%04%0D%60/o&%03%00%07e%15h%0C2$a%125(%19(%3Co%07%7D7%03%0F%15%7B%0Fy%1C#(%7F%18y%7F%3C7%1Bs%0D%00%0F+i%1A$,(v%07%60%0C%1D%1Fdm6pg%03y%03'(/+u%1D%3E%20/%0A02gpr%7F%60g%7Fm.%00(4%1D%22r%3Ch%15%0A%14%25&%0Bc%12w%00%7C0f%7B&.%06%1A%15%0332z%109;w%20%09%00!%228%00z%10%1C,%08%02:%0B%1E?n?$j%17%7F%12&#!89%16,%01%3C8%06x%0D%00%1F%14s%10d9m%1Dy%15#v%206%02%02!!*%02%7Dx*%05%60%03%1A%16/%7D?%22%08%15%01!n%22%3Ey%3C%25r4%7Dy%7C%7Dj&1%18?:4%25z$%0A%0F+%119%0C%00,(c%22-%18%1A=i/w%1C%0D5i%0Et%06%0A%10%60%0F9%194/%22/%06~;#'~y-%7D/a~x%04y:8%255%0D%04%1D$3/&z%0C7%09%0A%119%13%128-?'4%13'%0A%0D,%14%06?%19%08%1A/)~u%25*%0E%25%13%14%1E%1B+%221$%01%7Fr&%7C)%11%06%3E)%00%25%7C$,%14%3E9%22#a*-%0B%07#%14)%0D$s#3*r''%08-9%7D*#%0419%60%04%19%07r%7F%0322%04!$%20%06%1B%08%0E#-p%3E?%1F4%0C%0B%1B%7B%185%1Fw2y%1B%259%08%19%02%0F(%1A%18%00%25j9%02q%1E;1%1C%05128%146%02%25x%7B,gd'%11+%1D%1C%1A%07&%22%144&%0C#%05:$%048z%06%1B9%05%11%03/%11*%7B%00%7C%0D66%03$%1D8%0Bf%3C.%60*%1C=%7B&x%1625.'&$%1A6%0C89%1Er219,%0B%0E11%07%7B%08%17%07)%15%19)%11(%11'-!n!%12q%08%14%11%02!%11%0C%18j:&j%20w%164-jx'%17?%1A+%3C%1C/%08.$%7F%7Cn*r%10%07%16m%12%3En%00%25%13%04%0F%15~%04m%03%1C%11%0D8=2dw%09-#%04%7Bp%22a3c%18w%254%0C%0A1%0B#%7C3'.%192%07m%1C%04*%7B(%14%253xr$%0F%05%1B%25%1C%01%1E6-%05;%7C%3C%3Ez3%11%7F,%1F%00&y+%1F%16%60n*%0F;%00-2'%1Ch%09%25%17%04)7%7B/%19%12%067%02r%19x#r%06%054/%22/8;y%20=%00&s9&6)%1D%7F%0A%7F+=hy%15%18%017c'%17'8)%22s%04%20%05v%7B%60+%0E%07%1Di?,%25%7F.#%0A+/%14%08i%130%13~%1B%20,%05%0976%7Br%11%3C%07%60$34%7By8%011./+%20%3C'%10*83%12%0A%11$:%1E%18%1C%20z%0A%1C?y9%12%1C%18%3C%13+x%09%1A%18%7D$y42%11~%08%026.%12%06t-y%1C%021u-*1'%1B%25,%1E%12%04%058%1A%7F%08%15~%10%12!%3E%06%20%22%3C%148%7F%093%0E%16%1B%3E!%0F!,%1D&%1E%19%01%07l%60?+1)#%1A%20%10%1C%7F%1D%16'%03;%25%1E%20%183%1C%0D%10%07~v%3E%07%0C%20%3C%18#%09i%14%25%12%08%07%3C%11y%20%08a(%08*;)%0C4%17%05%1914%1B%7F9;%0E?%14m6pg%03%3C%22%22%25%22/7%7C%0D%20%25:8?gs%7F~u5%053!%1744%1B;2%7F%3E%09%0C%09,v%1C%60?8%204%13%04%069!%17%11%1E%07;%08:%13*%03%22%3C%17%08%11%0F%031~%1E%16%0C%05d%02%3E%60%06v%0Fw%18%7B%18p%1D%0A%60c%13(%1D%1A%1D%7B%0Au*%1B%10%058%19%047*%12(%14%06%3C%18*$&%04%22%18%18%000%0A%1Fh7%0F)%01%14%1B%06s-%3C*7%1D%0F&%3C%00))%3Ep-4%3E%03%09%16-/%01:(%09%0Aa%3E%15%0F%178%0A%10%01%0A%03,%05%11%13$%25%7F%0F.b%02%0D2%1D!%1A%07%149%22%00%17%1D&%1B%00%115%0A)%1Azi%02%3E%05%18%7F%08='u1%0D:5s%10x%0F(41v%1Fe)%18/t1ev;%7D)%03!%0E%3Er%12%7B%0B)%13/%059%1D%20h%7F%02,%7F%15!%11*%1A%07%0F%13%1B%168%1F%03%3E;%06%1C%0C%15d%1E#%25%1F%0B%3E%06%06%01,%1E%01.%11%0D%0C(%25'%03%3C%07;%05%09%0A%1E%1F%20%03%1E%05!~%18%20=%25=%0Dl6%3C$%3Ey%0A%149%10%00%3E%17)%09&%03%07%11*%225)6%1E1%25s%7B%0D%0F%153799%14818%22v))(x'z%16%1A%22ts9-%1C8&%7C%25%18%013y%0E%0F2%22&%15%0A7%1A%14%086%09%3E:;%0D(.6a%08;%10%0E)h%1D%08w%0Ez8?%1B)%0F%0F%08%1E%0D2%02%17%0D%09#p%1E%0D#%12%19%07&%1Co%19%0C%05%0F,%0F6%0A(1%0D8;%0C%10'x%1Cb%12u%05%0C%14c&%10%11&%17%03%0F%14%1A-0%1E%1E9%7B%0C%1D%15%090%18%7C%14*&%13%7C'%1C;%0C.,%08%10%13:t&%1C2%12%08%08%0C%0F%18bz/)%1Bd-zm&+*#g%10%3E++%20gsrwkbsm.%00+:%12,/%1E#)z&%12%09%0F72%14%7B:%15=%11&%0F%1D!%1E%07%12;9%14%17%0E%00%0A9:%06%09)%19)v)%7F%0F%0F%01.%7F%1A%11%20:%0F%01d%25zz5%05%3Cn,%01%1E%3C%08%071%08##9%00%13%08%1D%1F%3C6!%1Fl%1A%098%0A%03j7%05%10'%25%17%09%0Au%18%09%0E3%1E%03%05(%13%09%3E%08%1F%16:e/s%09'8%17%22%08x%08%1D%11%3C%09%18&j%11%7F&('%1E2%080xz%60%01-j%7C%0A%09%1B%08w%25%0F%14?%1F2%11$/%3E%1D#%0Cv%153%0Au%03%17j2%05n%0C%7F%20ixx%20$%1A%18%06%11%19%01%17'%1Bq%07wa%03s1%18%01m7)%11%7Ca+%173%04%18%0Cj'%01%0E!e*e8#%0E%01;9r%02d%0Dv%13%04j%0E%1B%1D(%05%0A,y%088,%08%3E%19=:3*:)%3C%1E%7F%02%22%02.4%1A'%1Ba%0D)8%02%22%3E=%11~%18%06%01%1C%16%00nr*%1B%7F$%09%22%1C%18#%18n%04%00%10%14%1E73%19v%1Ds%09:'*f,%0F-w%0A%1F)7r%1E2%16~%0D%60-%1A%01%00;%7C%0Da2,u%03w%18'%12%22,%0D*7%01v%0E%25%152s.%1Dv%1E%01%229%1C%1C=%17%0E%0B%124%0D%20!()*.%0A%0Dq%03%1A%3E%06-u.zo%15$&%1A%25m%01%20%19%1A%18%17%1A%07;%0876a%20%17%069%11%14%0F%02%1E~%18%7B%01%06%1Ex%60%16?&%07+=8%06%10%1A8%60%60%25%08%1B%03%00%1D%03%071=7%1C%25%07%09%162%1F%7B%11%1F8%00%19#%25%0F7%14:%02v%0F+%00%01%7B4%18%0D#%00%7Fj%00%0B)e%7C%14%09%1B%0A?%1B-%0A~%18%07%01s?)%14(:0%0E%3Em%05%0A%0C%1B%3E?',%07%13%0A%18%20%0F%15%0A%148i%05%08#6%09:2%15%096.7%19+%1E~o%02s%08%04%1B%1B%13%7B%05%22%0B%1C%3C)%0F2-%3E%19%19%00%3C%03%18%1Fx4%1B%00%14m6pg%03,#%22%22*%22y%13#%20%22%3C*%7C%014!;ldgs%7Dzkaym.%00($'%15z=i%60%0A%143%7Bv*~%22%12%0D%1A!%02%05%11%1F%1B%18%7D)%0A%0909%22-%1E?%0F%1B%04%14%19%1B5%19:(%0A%0C47%1Ay%0D%007%1F%0A08%17j%00),%20%1C8%20%0Cw%3C%0F%1B#%08%00)%0Bk%11%25%032%03%0B%1A%7C%022%03%15%19%0C%0F%09%19%0C%15%06%1B%1F%0B/%22%1B+3%08%03#%22#/-%15%00x$d%7Dj3.9.%0Cl(85%03*%13'%11%0F%25%0D%0A%3C%1D0%22:%0Fg%20,%01)%20%133%1B%7Dw;%16%1C%15%1A%02-!%0D1s%0878%1Dxy%7C%08?/j%7C%7Ch%7F=n%01;m9%03v%11%20o%01%0E'%22~3?%0D%09&v%0A&%02%0B%0F%3C,%7F%12%11%06%25%604s7%18-a%19%04%10,%1Dr4%05py%01a9,4-z%09%15%7F*'%03%11$z%03s(%0B:s*#;!i%04%112/%17%3E)tz%1A)%002%15%0A%1Am%12%1F;s8%605%20r%22%14a&%09'%04(k%17#y-%00%0E*zu%1E%7C%1B%12$%09%02zi%22d%0C%25w+%02%1F%11%25%25%18&/%12.#%08=%1Bn%13%20?%1F$$%20?%17)%1C;9&2$s#2%1F%1B%20%7D%14%00/r%17%09%14%1E,-%12?%15%3C*%0C%05-5%02?/%3C%7D6%07/%201d5%0A4==!%16%05&%00f,'%09y?%7B#%122%0B%0C%3C,5=4va%02x~?%0C!~0%3E//%3E%1C,'4%1C)%048%05;0%15%1D%06%0C&+%1D%12%11d,?$d%173v17?+s%0A?%1E-1%0C%1An!%12%0F&&%1D%1E%22v%05%0Av%05,p8(:%1E.;%7D%06%20%03%1E*%18e%08&%25#%0E(5%0620%60%1C8%182%0Fs%25)%15-%22$%1Ck%25%0C%13%1B%04i%25%12*%1F%03l*%7D%25%18?*4%22%16/%09==,j%07%03l%05%06%03r%7F%18!%022%1Bv+%03~%19%60%01?%18?8*%16+%00%07,%01!%0E#*%16%0D*%0C);%18%11=nes8r%1E%20(%1C&)eka%09x%05%7D%1D%7F%1C%04s$ad?q%1Bw5#%13%08%1B)%01%3E%0C%14?%7Fn%15%7F8'%06%1E!%07')4+dd%19%08%7D=4x1%25a,6x%10%25#6g%7F'%1E+n%1Fx%25/%06#8y)&8v%25#,%7C%06%3C*x/%12%0B#788y=(f%7C%08%0A%07#?%0E%09%06-%1Bb%1D%08xw%0A%3C%1F%17%13%076=%02%089,=4%3E&*%06;%1A:x%04%185%05%08%19%05%0D+$%06%0A%03%01%60cs/3%16%08c%3Cp1%7D:%02%1F&)z%3C8%00p%0E%0F51.qr'%1B%3E%07)%0E?m%03%08%20=+%1C%16y-%09-0%00%1D%11%02%0B.*;%05?x%10%3E&%08/4%0C%01%1Cx%20%3E%0C%01x%20*%20%3C'9,%12;+%03%02t=%251%1D/%0B=%3C(%1E%01w%3E%1D;%3C:%06-%08%0F%20%00%16)7.%07%0D%05:'2%0715%1E%00(%03%13+%22%228%05%1F%14y%18%0D%14&t/%14(%13%11%14%05%3C%1E%14%07%06%7F6,),%13%1D%00%114(s%1D*2?%0D%17%1B%3Eh%15%01%0A%18%0B%11!%7F%0E%0F)%0B'9%12%04wk*%05p%0F;3b%7C%0C1%01%0B%3C%19q%19-i%06%1A%1B%7F%0Ca'21-;$ag%0F.+=%16$3%18%3E%3C5/m%1A;%3C%22;m%7Dya%60xtg+%17%22!%18&*%09*2p,%17%1E%08,y%1E:%17%04%13%09%07%02.?%3E%00%05%07%14%22%02%06'?%0C%05%0D%05%22%17%14%09%04%02,6m%11%08v%05e57%12%09r%0C%209d1.?1%7B10%19/1:-%10%1A%01(;%02%16%07%20;%07,,%02%09=%11%19q%3C%01v%02r%10%09%08.%05%02%09%18%0447:,%19'%16%7B%0E%18%3C%03%1B',%14%1F%7F:%08%13%04%08&%12f%0Ey9~;%05%05%161)%188%0C),%1E%60%16#%05~+%3E5%02-3z.%09%0A%16%06%0A%18%01%09%19%02%22%1Dd%3C.%02%0A%0D%08)%22-%3Ch;,%138%01):r%12%7B;m%07%07%04%0E%0Bm%0A?%0C%00%00%3Ec%20%25%18?:%17!8%06%0C6%7Fx%08&%0D%14)27y9%14%129(s%0F%08'%25%0Bx+*%069%0D!:%1B%1911%06%08%0E%1F9%13$!%12?=%19%02%0D0%14%7B*r7%13b%06%03%7B&%0Cgr%03%60%0F%1F%07r%02(x%00:r)%12%0A%1C';%0B%00?%11!s4%09x%11%1D$s%3C%0C%13%11%19y%3C%7F%12h%7Bw%20%14%0A%08%60%02%0A!-g%09%09::o%02%01%15%0A%03%3E#z%14',%03%12.9#&1%18%07/%25%20%10#%138,%0Ba%1F%20%08:'/%02*%05s:%18187$,l'%3E%07%3C+.%1E%0178%0C%10!(%00%1E%07j%0311?%7B%00h%11%0B%0F!.%02%0E(%19wk#%60%02%3E%7B%08%22%02%12%186%13)2n%00%18%0D%12#u%04%0C0es6?%02*9%0F,3e%1A'2%06%06$%14%12%18+%1F%19m%19%07%04s$m&1&%08-!!%25/%0A?1%05%7B*=%03%15%1B!%16%09#0%1B%01q%18%1D%14%22%0A,#%00r;%0A%04%13?5#%04)%0D%09%13%16%01+%1B%19%12%25%02p%0A#%13%04=%10%02%1C%13%17,%13%05%1F18%12%13%024/i%02*z%0B%1E%16%3Ew%1A%030*%0F%14!~%0F'$9(%20%10%13%0E%10%06%0A%18%11%0A#r%0D6-zm%05+6%3Ek%159'8%3E,-.=y%12.5*b%09%22$%03$%20=%7Cxss%7Bahg$%05%3C-%3C8x9%7F%1C%11%1E9ra%00%1C&-%089%00%1Dd%04%0Ev+5%0D&%1B%0749%1D/;%3C%11%05?%05%18,%0E%3E9%10%22%7F%00%03%05(%05/n%16%056:%7B%0Aa%0E2%04%7D3bx1d,6(%13j#z%60%7F,%14%11%0Ak%07%08)'a.%00%05%15?%7B2=1%12%11%7C%3C%1C%19'%11**#;n~8,i%7C,%13%20%1C%1D$;%04%1A%3E7%1D4%07%06*%12%13wz%7C=a2n(xka%7D7%1C8?3%3E%06%088=?%09v%7F,%03'%09%04%13)?%1D&%06-8!%16#x%60%20r)%7D$%1F%7B%60i=';,j%07%08%0F%3C93%19:%18%1Av%14)%0A'%07%1Ea%13=2~%22+%17?%22%0E4,*%1F7%1E%06*b1j-'%15%13%1B.%18%1D*%25?5%7D%7Fr;%0C%09d7k%06%1A%06%0F,r%08%6072%7Fvh%0A%17%00%7D:%03%20(!y2%052nr/:%04(%11%03%0B#();/an%15yj%7C%0A7(%136!%7B1%3C:j%00%03:*%7D%16-%7F.=%03v%1D%07v%14.%07%25)n7'q&vn%1B!j%0A%09a%01?%123%7B%0C6?%0D,4%0A:#r%1E$58d%07%1Dz4%04/%0E-x%0A%18%3Cs-y.%7F.%08%1Ey%0E%1D%1A':a2&.%22%7B,3=s*)z%10$%19%08%13a%13:x%0E%1Av%12&%7B%09#,%0C%00%01$sy%163%07%14%1B*#%18)%11%7C-ig%05u2,%09f85r%0Ch%12%7F-%07'%0Di%02%16=%25%09%7F%03%16-%7B%1A6%3C%10=%1A#%7B%7D7%0D%0Av%1B%06x%7C%7B%11hr8~(-%12%60t%19(he%0D%06%1Feo%7F%12-=%1D?%7B;2!a!5%3E%0B)6!;%3Ex-a+g%1B'&z8a=2;a)%3C%05%0E%06%09%3E1*%14%0A%08%0D3%3E%10%04%141%04%60w%7F60d3*%1D??a(#%1E/!h%126*4o:d'%20%14=%3C1%0E:%194#%0Du(-%11%1D%0C%14%11%7B2d=x%05%08%15%60%25%04%03%1Di%02%11n%0C%22%035%19,%7D;ne'u%25%14h%12%031*~%13%04%01%0C9%25,%02%1C6sa7!r4%0C'm%06;%25%1A%3C%15a)2%0F/%0F;%04$%12~n;=y!9%13is.'&2%20/%11$%04%0A%04*2%7B%3C%1Cd%25%06%0D-j%13%12x%0C%08%0B*:w%20!%0E%258j%3E?%1C#%13*1%08#%19%1B%00%13/=%18%7B9,sd-zm%05'2?g%06*7?98)%0F+5%253$gzkf%7Ctyb%3C%1E95%1C#-#%03%0F%1E%187$zud%18038%03%1E%01-%01%025%08%7F0%02%7Fu%07%0C=%3C%7F,%7F%022b!*%04+?=%19%05%06%0D8%20%05j?*%3Cc%032%13*5%22%7D%03%00?n7s*&)1%12%1A7,%0C-%1A%0D%08%1D%18%0F!;%08%07!%18)%19%14*%19l1%22%18.%0B%0C%1E%1A%06%7D)6%1A'&%01%00%08)$%08%7F%1D%1E5%1F%16/%20#%22&;re!31w%7C!7d9%0C%25y%1Fc=;'4#%3E-7%04(:grs%7D9)=%11y%00?i%16?%0A;:%203&%14?%201%14%05%0B?%07#;%7Cq38?%1Fd%12!%01%0F=9%163%1C6%60%7D%25%07(%0Da%22%19-&;%7B=j%60+-*%12yy,%18%00ds-%00%18%17%3C%0Cz)%0D%038p:%00%0B9s'd%17%1D4/%22%00e)e!y#%18a%1C%07%17%7D&r6%1F%15!6%0E%253n%1Ca=%3C%22%19%25::%05%1Dv%0A%20%1E%208%22%25~7%1E%1F%18s%08%18)%7D79;%3Cg%7C%15dz(%00%7B0r%25%16d)u%1B%1E%1F*y6:8/%112%0A(#%12%09%1B%19?%7C*%7B~.%0E%7Dv%22&;(*%16%20x78%1C#h(%03%039j2%3E%04%7F%07%14%01%00'%07%7Dn#~%20d#%0D)*%04-%1Frhd5*,?2s%18%04:%10%20s%05%03yv%08%3C%18(%02j)%13%19s%00v%00%0C%05%1B6ld,j%09%14%3E;%04y%05==9%0D&1%147%7B=tr:*%07%07%19=$%01$%04',9%14%02%7Bv%7F%0677%1C%163%3C?%7F.%02%7D%02%3C%1A*%00.%06?=%7C%0E%60,0%00d;#%7Dh%08?%05x/8&$%05r&?%17%0Cu%228%1B&89s%09:%18%20ny%0Cld2;3z?%07%13+8,%1F%7F%12xs%0A+%12';s%188b%60%0B%11=%15%22$;%044+8%1B%13!%7D%60'%03%0B%0A6r3%1D%07y%1A%12h*.y%1A%14f%3C%11%22%0B3%13dy%1B/%17h2%1B&!%12:%20%17%18xm%13.%06%07xm%11%039y%7Fjh%058%7B=%0B;%07%14%0F%1F:f%60%22d#36&%25-%03%184%7D2%1F%7B,%153.%03%074%7B%198%7F%0C%12%08!%13s%06rb8p.%1F%181%12%22%0F%1F?:%13(%3C%17%60%25/v3%01a3%20/%11%06r%25%1C5%22(a%3E&3y44%02%25%0By%03#d%1F#%08=!(%18%072en%01%01;%06%20%169%19%0B%127hb%7F9%0Dz%1C%03%05%22%0A;%14%13(;r6%1C#%190%13%03=%06!%0C%00,%16%06%00t,4%1F%1D39%09%16%16#%7C2$8%10gx%19%05%22%15=%60%0F$74%01%0F,.%06%3C%0A%1F%00%054%01%1D%0E%22r%1B?%16%25%0C%08%18%14%22-%12:%20%09%1B)%11x%19%14g-*y+%16%1A9nr4%3E'?;:7#='%0F%25x+%07-4%04%7B77%0Dn-wl?%0A%0D(x*$~*)%2554?y%1Bxn%20%1C%13%1A,a%3Cz%161%0D%0E)y%13%0D%14%016%0F%22.6%1A%0A%13s%3Ex;#%02%14%1A9%14e%18%20%3C%05?%1C-x%3E(l%25~x%13%7B%09)xv=%175&%1C%19%04%1E0%01.,%60%06%15%11?y$$%03%1C1j%7C4=b%03%17xxod%07xz!%13i%0C%03%03+%0B6%0F)%0E%20%60%13r%20%12#%00%08%7B%0A%60z1cd%0D%039%1B&%079%08%02%08%09%223%13%17)c'%22%1B%20m:2%19-%20%1A7%7B-37:)%7F$y6o%15%3C(%1B%0C%1A42%17%22%185%09~%17'+%18h%60%10x%06%1A%22,r%22=8!%3C%02%1D%163%02%1E%0A%13%1A)%07%04%05=%168%18%07+%0A%09%16%3C%25p=el*%60j-;)%1A?%11%60ame%001%3E,!d%18;3%0C(%03%3C%03-%18=%018)d;%1Dd%18-%05%0A%18%7B#u%1F%0A77$%15%0C%06*%1Dz%0E9%0A%13%15%0E%05%01#,%7F/%20*6%1A%25s2'4%035y%0D%60%0A%204%1F'&%22/%09=&%01%1En%09?u8%16?#%02+y%18%1Cbd%0D%1D%166%02d3*-%09%1C%18%00%07e%13%3E#%18%18a%08e~(&%08l%169%22%0C&%11%09%05,=%0A:%02-%0B!~%0A%13(7%3Eeo%25%25td%00%10a%7C%18%194l(%7D,%0E%14:629.7+%60ry%7Dv%09%1B%1Cv%0D%0Ah!%0Ay%0E%1El9%18ys%1A#%12%19y%0F8%0C%06%01%06*=%11%7B&%17x8%17%14%60%18%06~!%7F%04/$%014%25%04p%08,n6%0Et%11%22%03%01!2=9%09(%093%1F%7Cn7%01$%017i%0A!+-)%0E%0A%1C%0C~6j?%1Bt%05%22%03%04=u(~%15%25%02%1B%20%06j!%0Fu%13'!%17(%06%60%1A=b%12%04dw3%04%1D.#%20o%7B%03v(%1Dn8s%04%7Cwm%02~u%0C'v6%18%11%0A&1%021%06%1B%17%3E%1Bs$%1C%7D;%16%1Ex:,%1F#(%17%0D'%1E)%0D-*7a%1D%7F7d%02%10%1E%117!v=%03%7Bs%1B#%18%20%04%0B%1F%183%13%084=y%13%11%7F;%1D$%0B%3E&%0E%1D%056%07%05+~*=%17%04x.%14.%09%1D%0B#%22%09h%01s%07656%09(s%7C8%3C!%05-+?6%03v%18~a%7B/%10%1F6n%189%00rv4%13%098%3Eya2.t%60$v%05%1Fud)%00%3Cx%03%07%3E%16a%7F/)%1E%0D%16&0#%1C%13%02%00v%19%7F*c?&#%25%16%15?%22=%0B4((,%3C%20%1A%198%11%0D%00%1E%16#%0E3;%09by%13-%7Dne%7Bn/4%0B!'*$%023%60%3E%06%1C%06%10:;%08%19%3C%14%1F8%10x~+#/9%07y#92ps/17?6%01;%1F%06%0C%183%7C%1Cg%0D'%0Ez%14%16?8%1E88%1B%07%11!7i&%0E-,*%0E23%11)%3C%15%09%0A/=%02%1D%1C%7B's$1ddx%7D%7B%0C6%02%0D%7D%0Dj%03%19##=%13%19'3%0D%20/%3C%3Et;a%1D%03%026(%3C%12?;x%7B%18332(%1B%1F%00c%3C%0C=e%11g*s%1E%22h%1B;y%7D*%1C4%1C%19%06x%10%12%7F/%12&%16%0A%1B.~%1D%3C%18%0F;;%077%7F%7D%151%17%13c%20%03%7B~v%7F9%0A9x/%038%169%1A?(~y%60(%15i%22%09%7C6%609%08u?9/%7By%14%0E%02h&%07q3%0D%122%3E-%0E%0D%20d%1A)%1E%25%20%03%04%14=%19%1B%7F%04+%7F*j%20:%202~!%19%18q%7F%20r?,%0F:*%1B%18%1F%14%1F%06m%1D%11%1B?%16%007%03+%04$/c3)=%1E%1Eb%18%06%12%02%01%7F%7F%14%08%04%0Bd%00%20%7D%22%00!%06%20%1D%1D*%25%19%0D/4%20%22%20ps%1B)!).%057#%3C#$%22&%0D4%1A%16$%3E)%25%3C1%1E%1C*$%609162%0A%3C3=?1%02%207%3C%1C%13)%0Av~-8!2%09%60y)%11x+%22%1F4%08y%18%7Dz=).2%1E$!%60%0A$%07%0B)d%3E%14%25%0A%1692%10)y:%15%02%132%7D/(*%20?$%1D%7F8%068-a%22?%15s%0B%13%043%0E%18#%18:%1E%25s!%11%1C%12%00d%7D,%09%04n%7Cwl8-%201'%08%18%03%0E%0E%0Ar%1E%7Bt/a#%0A%7C%0A=(rb%13;#9%10%00*-%7D~n%19z%0Ad%7Cih1%05%04+%3C%15%024x*%3E%1E~%0C%1C%1D%008y*%06%07%60d%0F%13%028ad!%19%02%1E%1C)!r,%00%1C9%603%06%08n=%0E%20r%01m9yn*%22%20h%07%15%1E,%1D)s%11%0Dvo%00'%0Fxe%1C%3E%0C%02y%25!%1F%02%03%1C,m4!-$%3C%08%01%09p~z%08&%221%7D%0F%00:,;s4!c%06%14?;v1~%12%7F%1Ao%60%07%13%19!0ix%15('kb%046%20-5%07%0An%7C$%1Dcdpd%006%04%3E1&8,d*%11%04%161%02/n%0A%7B!%18%60p)an8x9%7By;%1E:rs+%0Ah%13%09%1F$7%05%19v$%20k%05%1E%02?%04/%18%0A7s%1F%3Cb%11*%13%0A*?~2%18%0A7hy%11%137%03#%087%02(%0Ea%22y1(%18%1F%08v%22%028%3C!%22%1A&%101%0E2=%003%073%09:%1Ej%04=8sa%0F%01d;dx%60er%05dw2%19!%06%60%02%3E#r%11#%068b%7Fy%13%7B:%13%05%1Bd%18%18%1B%60,%0Dv%18*%0A'%1C)46%1D%05%02x2$.8%13alh=w#8na%3C(%20%1A%01%3E.r%01%09%0E$%0Cv%06%0D%11d%1D1,%3C%1D%0A~;x%18ng%002%1F%1A%152(%07s%01:%7F%22%0B9%7C%12h%1F;1%1F%086%021;%08%1Ca=%19,e-%25(%11%09'!).*%13$*#d%03*'%01%12:%08%1B%20!%17%00%03%7F%04#fs)%60%0C%009~9%03(7e%05;%02x%20%1F?w%0A%20%1E6;'%18a!6%7C%13%7F8(*%09$%09#k%168%0Fs)af%20'%0E~:%02%12%0Br!47%127%60v%0A6%19&dv!#9u:/%1A%1A%1C%0B%60%00%0Agrq%0E%0F6f%01%00%19%17%17)&y9%1D%0C;y68%19v8%18/%19%7D%09%16%0Cq-%086%1E8%0D%3E)=5%01r%226%10%1Ex2%7C!v(%05%0D%038%3E4(%0B%25;k%12,5%1C%3C*%1Fr%0C(:,%7B%09p%7F%20%3C%1D%0E/%07%22#%3Cs+&)m%1F.%10,%25a%16x+%22%25m%1C%06n%1D6;%7Fx%00%05%1E!a-6y/v'xq%20'4%05s%07x'%1Bd%05,~%20%184r%04%1F%22%0B%05%0A3%01%0D?%11%1Cn%13'*?:%1B~%1B%13%20%058x9%0D'8v%20%1F;%1B$%13%7D#%1D%19r%0F%1B%1D%0A%09%13%06%1B(%1D%1Ddn/y?i%019~%18%60%1Dd%0F%11z/$%099%3C#vg=%07x*%1C%1Ay%0A;a=%178n%118%16%15%1F%16%1Fz%01%02z%13&%7B%09%02%188$%05k;%7C#%01+#3=%09%1Cx%1C%0A~#%06?%01%17x%15:!%14a/%17%044o%07%20s%0F%19%10d%20%17%05=%1A%00#%0C%1F)%152%7Bx%0Cy)d%05px%0F/$%00t1%7Fh%16=.(%06%14#'%22%7D;%1A%1E*9/%02n)#v!%16%08e%11''6%08%7F~%0D%3C9%14%7B%0F$y%0B6&/%09%60%19%3C*z3=%16%3C%0A2v%059(%7F%1Bt%7D)6&%60%02%60%02%12%18%1346%7Fu%1E%3E*.n%18%3C.3?%60u%02%04%03%04%0D%0B%11%0D%15k%09%18%1D%0Em%7F%7Fki%7Crg+%17%22%05,xw%14=s%22%116hh%251%1A%1C8%02%1C4%13%1Ea9%200*x%0C%0A/,%7B%1B%1B%1B(%0D?%0B46%0F%12%7B%06%0F%17)*%01%1D4%7B*%06'%7B%185%091%0A%17%14%1E#+d9%1D1%04+%1A%7D%1Bd%06%16%0D%255h?('!)%7F%18%0C%1F%19o%07:0?%1A!$'7%1D*7i8,%18%14-%60%7D%13%3E%7D0%0Az82%3E-;/%18?%1A%1F%08%0Dv%25%7D?%1Fd7.+r%7B%7F$%3C%7F%1Bh1y=65%7F-%11%13(/hx,.%7Bre.%17z*%0E4%25%13~%22%08%22'79%7D%60%1C%7C%10%7C%09#c?'-%7B8%0A-s%09(%00%7F?sx%7C%3Eh%12-%1C%7Bl%1F%05%151v%16%08%023%60%0F)#%1Eqs8%60:r%11%7D7j%60)7%1Ee%1E%7F=%15%20%0A#5%0Ey%13;.%12%1A,d%185a%11u-%1B)%3C%1C%00%18x%16%7F%1D;%0Ey3%11%7F%22%7D;=%00%1E%0B%0A)m:%1C41;%0A$'+%18%7B%01e%25%09%1F%1Eic%03x%18z%15%13=%11'!%09h%09%0F:%03+%60.%07r%02%03g!n?%03%606%1Dr%04e4i%13%17%7B%0A#%09$%1B~e%12?s.%00%05va%048(v%0C;%1A5%12%02%3C%15%60%20r8v7%11.r*%17g%01/%0F9a%18?u%60%09%1A9%01%0E?*%209%07%19x9%12%20%3C79+%60%12z4%02x+%7Fd'%1B%0D%1Dc%1C1)%7F:%7F/j=%0B?%2031y#:%1C%1Bs?%0B%12%18%1B%1B%7F%1Ao%00%7B%22%02a8%07(%14%1Bw%15%18%7D%07d%3C:%0A%7Bxz$o!3s%0Ea*%0A%1F%10%25%7D0%13%00%09d=%0A%22%1E7%7C%0D?%60%07n~+l%17%602%03vj?%13n%7C%03l%18%60%0B%7B~n%13-rs+)%17%60$r=38%0Dwr%04%17%19-n%04%3E%1E%01=j%3E)%0Ci%19%15y%0B%10i*v/w%0A%06d%03%3Ew%60%60r%00-%1C,h%1B%16d4l%60%02xs%0B%144)%07%7C%16%01%1A-$=xv%07%13%0F%01z%149-4d%0Aj%7F.s9%1Dh%12:%0C%04%1A1:x0%07%0Bk%17%18%22;%02=%1A*%19(%1Cl=%7B%201%7C2)3%1B%7D%19#%11%1Drxx.%60:y%7D&%11%17%0Av-e%3C8r%20%02%0621%06)%02=,a%197%1Ce%09%1B%3E0%7C~%3C7%1F%09%0D6,c%3Cy%18(%0D%25x/%044!%129j#%0C#%00d3%06'%1C%08.)%7D%1A%1F=&%02%19;-%1A;%02%1C:%12%15)%17%18;ie%1B%032%02%01%162%0D%18%0B%17%13#/-%18n&%1952!*%12&q%3C%16r=%7F%19/%1F1*s%07%0F%0Fr#$n)%7D%12%3E%12%14%7C'%3E%1Es%02x%7D%3C?!%0D)*%60i%60xs%0A%16%22)ty/%10=%3E%17%60%20k910%07%1E%0B%7Fdu%1C%016c%7F%0Dz/%12?%1D39%7B%60f#%11%60&%15?d;%0F=%3Cb!%1B%1F/m&%1F/da0a9n%08%20vf&8%04%22%3Cd%7F%11%0C%22jg9#r%1E%3C%60%7C%0F%059%16%1C%18#,*,%03%12s%22%1E%602%18'%19%1F%15%138%1428%03b/%09%18%1B+a%13%1788;&%20%15%7C!%3C&%01%063*;&%07%05&;%0E%128r%0F%7Do%16%7C%18s%3E6%14);%12)(?%04sz%18%1C)&9%1B=%03!%02%00%1D?v%7B%0Eu.+%3E%25?#%60%02+%00%7B&3w%18asn*e%1A%14%07s%07%3Cvi!%0D%7B%01v9*nd%7B!%07$%091%096%05%04%11%0A%1A%10;zwx%7Dr1%227%1E%04k5%19%09'%1B=%12z%12.(,%17%051%7D%0Cr%06%0F%099w%20?sn%11%7D+(%7D%03%604%17%12%110!#%1E%7F?..!/b$%22((%1B%15x;%7C,n%02%0An-%0C%17%0A%0Ex%09%14%14%7F%08w~%3C%60%13*n%11%2012%0A3%1C%3C%3C6%20%209%0D%3E!2x%25w!%09~yy%20m2/%20%20%1Fhe1%0A%0C%1E?%00-)d?i%60%7D9=z%151dj%05/%0B;!n,)%15%12%0Ej%7F8(#d%0D;!8):.%7F#%12%0A!%12?%04%03)x#r*%0D%002v#~%0Ca%1C09%25m%25r&%7F)m%113%15%18%3E%3C%13d%09/+%20%021%05%20%17#a%00%11*$i(9t%1E%7B/%09%25&%12x1%1F$n(%0Bk%60.p%04xrb!%13%12%1E8%20~3:%0C%00%0A%60%0E%09%09%1D59%10%7F%25=%14%03)%60%00%08:%606%3Ex6i293;%15'%1E%14%0E%16*)$n#%14%0Da(%05%1A&i%19%3C%09%0A%06*%22=p%08(%13%1B;%0B%05%1D35%20%19z4%03%3C%00%0F%02%17r;%7B//%14?41,/%7D%09d's%0Eer%60,*2%25,!%1C%03%60%1F%0E19%0D%22%3Eo%1Ez,%00%3C%01):%02%3Cxv%3C/%0D!y%17%14%00q.%1E;g*%0A%00%01%0Cg%7C%0A?%14/?%3E9;z%167%7C/%04,k=%7C-%1D;o%16%03#:%06,;9%11-)45%1A,y%7D7%22%22'?%08%12%1F'%03%12%25%0B%17%12%20%1A%1Elbd#%256r%001%222%00%187%22%00d%142&&%25.(%3C%05%227%0F%196%02%7F/%02%0B%1B%60*&=%3E#%17%1D/rw%14'%0D0%0E(n%1F%09%0A%20%0Ci%1F%0F%14%05w;%1A%7D2-%06%0B%25%0Dj$%0C%01%1E!%0B%20=k%1E*%1B%0D'.%163-%18%00?%09%226s%25kb()%3Ce?%1A%07+%0E$%10%3Esxs%16)&%1B%02%09?/$2%02*%20l4-$-%25,%02~t%7D%05/%1C%1Ar==%3E%15%13,%026%0F%08%19-z%08%0B?%7D6%0D%14!%011y%09$2&%19%18,6m%0A%04%10%7F%0A!f%03%07%116%14id4;z%15h%0C%18%07%1C%0D4.%12r)%1B%7B%02%09%18%0B%10;%19%078;29%1E%07%19&,68%18,%04%0C%07%0E1%20e%12%16%12%02%1B!%1F%1C?%05%0E%16%18%09%03%0F(x%0A$y%141(%11e:%04%3E%3E!%01%183%0F%14%0B%22:'%1C%7D%20c%0C4(&8%011n%1B%0C.%3C%00)%1A6%1B(%7C7%1F~8(%3C%17%7C%06%115$2#6%11?%60%07%1D%7B6*y3$%7F%0E*'(%7F!%0B%20-%16*%0106%1F%0B%0A%7Bi$%7B%25%13a%20%08%06s.8#1'u.%07lb%137%18%043e#%0Ed$%0C%07%1B%00#%05%00%20x%06?%7D2c#%0B%19&%169%3C%14%09%1D,;%7D%14$%25!f%09%253%7Dh%1B%0E%07%19%17%1E%12%0A.y&%08%3C:%0D%01%7D%11=$%09%60;%0C%20%18%0A:%7Fn%17%7F%14%01%096!y%0C*%08%3C%15%7D%16%12!%1E%12%259%0E%00)6%05)%22%01%11%0A%08,*%20)=%0Cj9%01%1F%7Fzj%00/%16i2%22%22%220'-%108z%1Ec$%0D%0A%06%11$*%00/%01%1Bg%226%1E%0B%207$x?%027(%1B9%06&%1B%14%22%0F$%0D%0Ac%09(%07+j9z))'%0B%3E%01%15%1Ez%0A;%1D'%06%1D%1F%04%1B%1B%03'+%02%04;1z%0C9%1A2%1F,2fs$1za%02*%16%067%10*%60%22'%7F6%0A%22%139?o%00%06%13*%19%14)%02%14(%08o%20%0F%11%05%7D%0Fi%07#:-%00?)r9x%20%1A%0C%16%00):%11%12%15%0F78%1A2p%1Aa%15%00%0Aj%1D%3Eo:z0-=/d12*6mg%60%03%60/)#%1D%15%1E%0A5!)%03%1C'%03%13%0D5%0A%0Cl9d%043%08k%3C%0E%0F%12%1A%15!%1C%02%3C%1A%60(%091%0D%1A%177%1B%22!%25-%1B8n%01%0B7%09#%11%7D%06%0F3#n%00%0B3%1Dry2%043:(%19%13w.%7F%7B%04y:%12%1D%1C%06~%16%13%0A%12%18%7F%25%13)%60.%0E%17v&%0D)%1B%20a%07;#9%25:e%08&%1E%0Av1#%0F%0C+%0F5?%0B%0C%0B*%60%01u=%04%204/w)%1B%1D*'%18~-%1C8%60%14%00%1B%16%20!1%0Da%15%01%09;'?6%19%067%1B&%1Fe'/%1C;%0De%18%22%1E%0A%1B%19%19%16~/?g%0168%0Aa%3C%1E%10'8;%03%04xy%0A%3E1z5%1D%25%14)%1B%0D!wv4;n%05ei%06s%16%05%1D,iy%15%3E/i%14%05u)%22r%05%25%04,#,%1D!j%7B*rb%3C9%3Cv%15?3%11%04%033%13%7Dw%07%09%1D;(2%1C%1C0%02%050%0C%07%11%60%3C2%22#2f$#%01!%0A%04;2%7B%1D%3Ch%1Aj%25~r%071%12%05%14#%1E%1A%11%7Dy%12%60?%06%25%7Fk%002s()m%1F%7F)%07y%20'%20*r%3C%03%121u%7D%08%17%00%20yy%20i:(v%00~)%04%04%20%0F=3f%00*%07%0D%03!%3E%19%07#m)!%15%19%7D/%08/2&&0%01%13%17:%087;#7'e%0E?y%17(%7F%17a%0E%051%3C:!%7B9'!v%09,/%04?.%11%60%07x76%17%1A%1B%09%09-%14%06%03%06%1C*%02%22%0E2e#%11%1D*%1C%1Fl%15%0Au~6%124%02w%03*rc%0E%0D%0C%177$%07%19%026%12(s1.*3%22%00%19%7Fe(%3E;%0A%12%7F%1Ff(9&y%1C%7F,%16%08%044%60*x%13+7:?%0A%078%15%1Asj%2285%25d0%224%0Ac9%17%7C%01%0A)2*%0496%1Asx/%01%1E%05%032(+%0E7%19)%01%095?#&%0E=h%19?%08%7D+%1F%3C%1Bj8%1A:b%0En%03er%1E%22q%22%021%1D%01%04%0D6%12%02%0D.'!%17%1E%22%06r=r6%1F%20%7C4%0B%01-%0E~4v%18%7Fq&;.=%03%15%1C%03k%20%02j%19%00#$%01y%04%14%1C;%07%13%7C%1Al%17%11%02%3E%07%0C%00*%0E.%0D(;%20%1B%7C%7Fld%1D%08%02~%1Fc%01-%11ea%13r%11%25%06:%14%25%05%057.6%049%09%7Co%25~$='n7%7C8s%22.%03.//%1C%3C%1E%01-%1D%1A%1B%08$#%0F%0B%0F%7F%06r%13%0C%1A%1F%7Cj.%22%1Df%1B%0F:%3C%17=%1B%15*,%0A%11%3C%10%016%15)%13%0A%03%03n%0285%12%25%3C%25~',,,)s%25?z=;%05t/%7F%13%7B(%16%1D%7D,%1B%04n*8j%1C(2-%0A#%1F%1B%073%03nd~%06%7D$#%222#%07e%0F3%7D%11%1A%07%17%20%118)%1E0%7B)'r%01*$%7F%11xe%0C%002;s%1F+%0384%00z%0Ca%18%11&%02%14%00x&%1D4:4%7D%0D%3E%1B%3C%04%25#%0D%7C%0A%11%7F%0Ad%07%207d%0D%06%22a(%19u%11'%103%3E/y$%3C6%19%0B$4%601#%19?8%1A)#%0Fd,%3Ef*(%0Ax7%08%3Eyy:i%18%124:%0A,d*x%096h%17%25t%7D/%08!%07p%1A%1D%16%13%22'%1E%3E%014%7By%02x%0C%16%7F+%7B%1C-b%07%09%0D%0406%22%08%19,%0C3:%12%05%16%13%7F%1B#z%03.%22%07y%7F%0D%11%12%1C%2226%3C%20%0F%04.%7Bmex%0Fx%01%0C%22?.:%07%0C%04($#%08%00i%183%0C%0A%0F%08%1E%20?-%12cd%22%1F;h'%25%0C9%06%0C*%02%09z%0A%3E%0A3%12%1A%04#%14%0C6-e1;%0E%0D%60$*%7F%04%15y;ka%60-r6m%60%1F%19)9o%08*%0B=e,=)$%604k%04%1F;%22%18%1C3%04%09%7D-k%12%0A%05%0F&%1F%2215%20+l'3$%7C;%12%1D%7Fs9e=%1E*w%7B-%3C%01%06p%3E=%03%11-n$'kh%60r%25*-%088%06%7C%7Bh%1C%1C%17%1D*%0E4-,s%7D%0C%07%1F;d%0C%1Eg%1D%00:%22%10%20%257%06-%1Dc/%17%1D6%01%13%7B)%1B!%3Ce%13t/$%0Ei%18%07.&#=%25$&%09%1Fi*0x7%03%7F%0D%0D;;k6%0Et:%7F%0B&8%0D%7F,+%15%01%17%1C%1D#%01~7%07&v%3C%05-%0D!%0A*%11%17%0Fvr#?6;%14%12%14%1F%20%07%09o(%1A%09;%08-#%05%10%3E%20+%06%1Fn%03,%01%1B$n*,%1B4/0#7%16%1B:s%09a.%18%0C-%01%071-zm%1F&%3Cp%04#.%220#%20a$(y%04#.?&u%03?%208&0%3E,5$%20ub%7Dy%7Bxk%7C.%0F9:4%17r%0C&~%0C33wr%0B(%1C%09%03%11=%12%03&2z%175%60%25%10%09%0C.2s2/%22%09%11%60%13%0A%19%0E%1F%1Bu%1C%00%10%1D1%03$%00%1B%1F$%08%1C7%0F%03%19%05%18%09%00%1D=+%0A%0C%01%1F%07%18;=m%08%0F%0C%1E%3E%12%14%0E4*%04o22%14*%03i%04%0D%25.%09%17%15%19%08%06&%14'%12r%1F%14#%17%7F%0D%13%1Ej2%1Dr1%7Fj%1C%0C)%07(%3C%13%0Ety%20lfrrze?%7B%60%20%12%0A8c?%09'%0F%15%15%224($(#%11%14(-+%03%7C78%7F%03c8v%13%05o5~8,)k%06%13%10z+)f%3Ex;-/49,*%0D.%16%08r%0A%7C%00?=;%12%061%22%00%02%13%7B%60hd..'%60e%01v2%09*a%0D%18%05%04%1A5%11%18!6%3C%09%0A%15%60%1D6%1Ds%20%60%0F?1$'%7D%18%186%0D%16%3C%0F%0D%25xp%02%0B%0D%11)j%19%17,%1D-;%1Fw,%19%0F7d%7F%09%17%11j%7Be%135%09%11%1F%033d=%14r%3E%18$%7C/%20(%11%3C?%188%0D/8%1B%0A%60%01+%17%1B6%19v(a%13%06y%7D/&%08%09!%06%3E?%3C7%1B%1Dv9%0Fw?%1Dv%06%043%0A%3Cm%17%06%0D%047v%1E%0F'%1D%1F%0F%20%0D2%19%16%01%12%1B9%11%05n?%7Fn%257%0B3%18%15%7C%18%082%12%0Ex%04%0B%60%7D%0C1&/%07x8%3E%007i?/%0F)+d%0A(%25a%0Fc%7B%25%06%0D7%1C;nz$%0B%00',%1D%7C%18?%08q%0A7%1C#;#%0Cy(1x%1Bz:h%202%04%1C%0B%1E?&x%1A$2%1Dy$%0D+7%07x%25y%066i8w%1Dy%10ar&%7Fv(!%7C;z8:%16?v*#%17%22$xx%17%60%19%0D%0E%08z14,%08%12%1C%0B3%3E+%19z%17'$2%09)%018#%19%1F=i%19%13%18%3C%0A6%1C.%17%0A#%13%1C2$%12a(%138%11x%00%0A%18:%16'?;%25%19*r%05%1B%14x)%11%16%0E%06%7Dv%07?m%149%0D%18%22,2%07%08%0Ex4;%0A9~%0Ck%092%17%1C%04%12;%04%17%00%1Ej93s%09%186%03=t%02%03%17%22%7Cr2%7F?%1C=/~&#9%22w.a39%7Cp8!%0E%17!%0A%05,2#%01%0A;%01%00%0A;%0A%7C%01/d%0E%0C%7Cv%1D3%3C%15%7D%7C%1C%17%07%05%00%7D%09%06'1%00(%1Aa%7F(%1B%06.%17%06%08r%0D%1A*%00%0B%7C%7C%60%7F&%15r~?&%1B#:%00%1E%7Fd*$+m%3E%0Cy:%1Bhf=%0A';55%0Ep%3C=%3C%11~$?%7F%10%041$%25e6)%09.%017%167=9%03(3*%1E23%16%0A(=%22%25?%11%1D%7D%042*l%04.p%1C=%10%1B%0A3%0D?%15%3E%7D%091%06;%20z-r%01%60%03%0D%15%20vr6%1D(%1B7%11)%00$r!!315%18z1b%22*'v%0E%13%7C8%7Da3%00#%021!%0Cb*%10%7C%00?d%11u*'+%13%7C$8%02()(%20%7B4j%1F%01%03%19e%10%00%0A%00/%01/%02%0A%07%1B%0B%0C%22%1E#%1C6mg-/%11%22%183%1D;%1A%0D)4,%13%3C8%0A%16%1F%19%0C%05%13f8%0D(%19%09%02:%0B%06%3E#%13/%05%12e4:)0%1Ax%00:%7Dx$z%0F%7B%077*%16%3C?:%18/+(%00%1D%09x%1Fo%07~v%1B)%10e$p$z%17%1F3%03%06%16%11#%08w%13%05.%22z%10%7B~8%7F%1Fp2(n%15;%172!(%19%25s8=%0E),%17%3E%07?g%13n%0E%01%134%04%0D=%1D%10g;$ze%09=:+d&*'y)/+%0F9%0Fj%00w%1Cf2%0E&8%1D%22:n%1E?%1E%7B;8%1B(%1D%13(6%01a,4%20%14%08(%11&#%16%0D%20%0A%1E%1C0%0E%08:$z'1%04.%1C%1D%15%03va9d%20%04%0A%15%09#7%3C-?%09%123%0Dwh%18?j%0Cyk1%06w8)?&%01%0C%04e%12%00%073%0Fe%141%3C'-4i(9r(v%20%17%06x.7%12%25%1B;9%25h%7B%05%13y%1D)1%01#%13%1Ek%1C%0A%0Ds%1D%0B5%18(%1F%7B%14%20sw%20%7D%11%04%1D%18%7C7%0B5(v%3E%19)d%1A%0B9/%3E%08#%15%03%1432%07v%11%20%0A%141.r%20%0A%1A%7Ft%7C7/i%1B/z*?%18%7C%1Bx#+*3j/%00l%1A%3E*%12(%0Ee98r%1852%3E%161%1E%0A6%06w%18%02l%14%7F-%60%1479%1C%20!%7D)%7B?%25%18%06lbdx8%7D,:)8*%1Cl9%1B9%7C4o%25yu!'%11i%20%09%20#-%07%06j%11%3C%10i'n,,%0C%002#%06v%08e-%14%25w%3C%3E%018%7F%0B%1C&x%03%078#e%608.'%12iy%1Bd:%13%1Ey88;%3C%1F,%25%13%04%137%3E%129=%17;:6%1D%0A%00a%05%20%01%06.)%1C%0Bs:#%1E%07%08%1F8n%7F/r%18%19!12%09(6%0C$;%00%7B;5:(v%25%7B%12%1E%1F%09%07yo%1C.%09%3C%0A%3E%7F%3Et%7B!h%1C93%01/%16%18zs%7Ba%1Bb?%11%7C%07%20%17=%08/%09%0Di*/%0D%3Ei;!1!)%16%1F%0C&%1C:%01h%0F9%13%0D5%07%013s8?%1D?j%07&?(%03%18z%08.%06%12%07*~%1Dd%0Cs%7F-%12%173yy%06a:%0D#%3E%09%11!%19.;%0B%083%01,%02,%0E%3E)6%25%04%60%7B%064%0A~%3E*.%05x=m%19%25%09%03e%60%7F%11n~%09i$%08,s%3C,%11!%0A=%09j'%117%0F77%12%034%06%3C8%0A%0C3%6067%25x%0A&%14#%04%12u%0A%7C3:$%12'%1E%11%20%09/~%7B-7%7C9y4%1A6%0F%0B#%7Fo%023%11,e%0D%17;t%13%0Cj%7F%1E.%25vj)/%0E#%7D%1D%3C$p*%14:!%7C,%05%01%16a%19%11%03%0D0%09=%08:-/8%05;%0F*17%04x&y%16&x%13%22%1E%1B%15%198%1C%03-%00%7D%15%0E%7F:%01%25y%03%3E%0D=-%19z6%03'%05q%1B%3C?*%08%05.%06%12%1B.%08%00y0h%25%16%01a+%1A*%19%0C%3C-%14?%17dy%081%3C1%1B%1A%0C%7F%02%20.%16%10%08%3E;(%0D7d%1En%01%7D?%16%0D%06%7F%01r%3C-/%18(.%60%22'%20%1Fv%7B$y8%1D:e;%13%0Da;*%13%18%19v.%04%60p$%03v%00%18%18%1F/%1B%7F%0C;(%06%6058y9%7Bv:%1An%19%1E3(%1E%0D%7C%0F4;r,%19%7Bm!r%0F%12%1602%02%03%7F=m6'.%1F)%3Cg%1A%042%0D%162%7C%0F%7D%7C4%3E%1B9%03%16%0A%1F:%142%17%085%1B%0D)%1Di%7B%093%1Fz0%18*w%02%7D%1B=#%22;%01%13%1E%017%1A%06.%1C%605%7D%3C%1E%186pg%0145,%20g%03,1/%05%22,ubzs~wj%7C.%0F:*5%1D%0D3%0E~%1C%053(/%00m%20:p%06*%0F%07:%02%09~%1A:zu8%0F%01%02%1Aq%0E~%00ay%10%1E?,$%09%088'.:*%1B;%0B%09%1A13:4*2%11%07%0Cv%1E:%058s+%09%01&%0A%60%0Dv#.%06'%1E0%3C%1F6%13%09r%1B%02%04:w0%15%22%22%01$%092%7C1%22z+%03%60%09y*7h~/=(#%223t;#%1F%05:(~%07%3E%7F%18%17%00?n%09%3C%0B%22=k%03%1C%0D1%05%15%04$%03'!%1A%15%1A(dy%013!%11%3C%7D%16%08%60ur%1E%119:v~%22%17%05-%09%01%14%3E%60!#%1F%02%3E%11%03q%04%03%10%0A*+%7C9:c%02%0B%22%17n%121y%0D(%1B%07%3Eu%13%7B1f%1B+%12&j%25%60%13%1Dv%1F%20*9z/25%04p.:%0B%1A'x%18%20%1E)yj%01%06%0F%3E%1Cr%05~%0A%7B;7=%02mf%04229m%3E%20%0C%25w=d/%04%1Bx%0Fg%7F72%7D%1Ef%1B%22r$%3C%1Ey%11y):%1F%05%19~-o%22ru%60%7D5*%60%22%3E%06%0C%14%60%06%0F4%085'%1B%7D%7Cv%3C-v!e%0Bd%1D4:8v*%7C%15=,%1A%07%0F'%1D$r%15%0F/'%14a%20.%14~?-%1B%1Fj%0C%7D%17i)%15%1Danfd7%7C-%18%18%0C2d%02+%08%1B/(w%15%08%1F%13%1F*7%60%60%11%0E9%14%3E%25u2%0Br:%0Dy$%1E%1Fh%1A7%074=5&%09%19a%0F%7F-%09%60%7C%16&$4%03e+%18s%08%03%09od%0E$%3C%1B3i%7Cw!%20%00%078%06%01%03%15f=w%7C6%1E%1C%1C3d%7Ch5%13%19&yj&)0%08a%15%15#%1B%20%7C?%11%0Dq%7F%3E/%7B%0Ax%1E?j%20r0%19%20m%14/%08#;,%12%1C8%0A%7B7%20%7C$*&+8).%7F%3Cob%0C%14%06*2bss%13!+c.j%1C%06==8%16%7C%0A%08%09%19.$(%0Caz%03%25;+e.,%19%16%16c%1C38%05*$2%0F%04/n$%085d%22=6s'%7B)*;%7C%19xah%20%0A#%0F(%17%14%01%17~$)8%01v1%187;%3E%08%136ad%12%07%03!%0C%12r%16%7C%165#%11-%0F-%1E%3C%0D/=/%1A%3E%18%0Fz%08%0A%1D=%10%25v%179$%15?'%03#%00s%60%07%60;#y%13%3E%03%12%08%0B1%7D%18%19~%0C%11?%09%3C2*%05%180%60%03%17#$.8'r%7F&%09%60,%07%7C'.*%07p%02%06%1E%09%18;1,%13i%1A%13~%3E%18%04%25;%04%7D%03%09%7C'9=:=%04%10#x%13#%1D$%1A%1B%00!%0F(%20%1A%004%0A%19%0C+%10%07%22&3%14%00%12%1F/)%05%3C%13%19;%07%041%00%20&*%1C%0A%08%1C%11%01;h%22%05%0D;%038%1F%0D,x%16+c%25u%0E?2%03-v%0F=k%06%13%0C%08:%0D%13%1B/%1D=%11%7B-.,!%16i(%12%3E%7B4%1C%3E%05%1B%1D8%7B**%0F7%0C(%7D5.%040(%0D%04#%7F)%09%3C%14%18%05a%60%0C.y:m;%22%0Bs(nb%0F%08%22-rg%02%07%20%16r5%0A'%0A%06%17%20z%08%0C%0Fdm6pg%01/59)./=%7C%04'-':9*-g%7Fi%7C.%0F9$%00=/%1117h7%12%06%1F)a%13r%0D%07-)%19%1F%143&%00%18%0A6%12%1F%18%14%09;%7B%09%1F%17%0Fn%07)i%1D%7C%05r%0Fr%03z%17%0Fwj%08%22%17%1F%0Ar%11%7F%20%1E%07%0F%1D%13%0E2=%1B3%1D%00%1Ax%11%11%02#8%0C%08=/%02%60%1D)%01%0Ap%7C%01%1B%19%0D%1Br%3E%3C%1E%3C%18%0A%0C%1Fb%0A%02%12'l%07#%08%0E%06%1C8%7D&%3E%00%1889%08%0D%0B%18(%20%1B%08%0F%1A%15%7Fj%06*i%1F%13%18%3E%00%3Ee(u8%02a7%7D*%05+%18c%0As,%07%12i%0F-%25%0F:%03%03%00,?%03%11%0E3%0F%09%1C7:%0B%0A%14)%1E%08%03%20%00%0F%11%08%0D)/%3E%0A%0F%17%1A%0F0by.%0C%1Fh%05%0A%08?%0C6%11z%11%7B;%17'v%7C6%7Fu%00#%20%25:6=k%0C.%2083.m%06;84%0F()bkhyyx%7Bu5%053/%18ai9qz%0F:%7Fy#%126%0F1y%179+%1D(2'%02%09%107/%183%7B%1Cf%1B%08%7D%017%08$9%04%0B%0Ce%20%06%1C%3E,;*%13~%01*5)%07%1E%0C8%1E%067%06)a5%09%00%0D%1F?%14,;%13a%1B7%03j%08%0Co%7F14%02:m%06%1An1%00;%7By%0B%0E%7D%0A2%1Dq%11(7%1E%7F%15-%3Cl&='~(%11%7Bs7%0C%1C%004:%16%3E%1F%3E!%0C#r%14m=%18)z%00%1A%7F%007%08%0F%1A%1F%7Dn1%22%03%1A%1E9#(%18%1D%256%1C(%142r3%0D%3C%1E%7F%13%0D%3E%7F!%7F%604%1B%04li%01%07%7C$a3/%18%0F,%1D%20'%10%05%19%1F%00y%15%3C%0D%14%7Bs%0C8#n2%07%25(*h%1B%12%00()%1C%7F%0D%20x%1D%13%22)%25?+a4r,%7C%05%14b%7F%10$7o%04$&'%16%1D%3E9vz9%01e%7F;%1B~%011s7y#%11%00%3E%07%196:h%05;8%7D%0Bb%08%08)6%1D%1F%0E+%1A%0Bv%19%7Dt%7F:%03%16%05w)an%18%05%07%09v%11c%7C&%07ak6%7Cu2zr*99%19%0F=9%01v%00;%15%15%1A%07%22;%17i%25n%22x%0E*;y%04%0C+#%7F7%1Cx%0B%13%1E%19%1B$,=r'%22(!%12=%10%7C'%01%1E%3C5%01%07%002(-%01%0A%1C2%1B(&%22%14&%199%04%0B7%18-*%7F$v?2%15%22$2%3E%0En.%7B%1Cc%1B'?%08%1B%7Bzv-%1F%3E%03.8%7F%20%3C%1A%6073%00%1D%14%3C$%0F%0Ak%19%1C%09%04-%0E7%0A/%1C%16%0B%1C.r%08:%3Ci3%22%1B%08)(%20%0F84%166%1B%20%02%0A.%07%7F%18(%1F%1F=%1B/%22%204%7Fy%06.%0F%1B:~(%7C%17%1A#%60%00%08%08a%00%0E%09%12%04i%18sp%02'6299,e%1C%0A%3E82y-%05%012?%04;%01%05n=%3C%1A%03%0C&)%20%112*t=#4%04x%1534%01527%01;%0D)r%20=%17%08%1D%04%16%7F%00%03%03&9r%1Aa%1E%07%07%00w1'%7C$/%1E+%189%07!w%0D?%3C0'/%09:%0C.%0A%17#%18%7D+%20/:6d2%3E%1E7h%00%0A%03+h%7B#%18%00%20j%20%7B'x(%3C$;%02%00?#%14x%0C%03%7F6'%1F%0F%03;k%08sp%7C%7C%16%1B%0F,%20%1E(%11%0E%182,%15!%3E0/z,2%3C%18x%3E%0Bc)',v7%03,0%18%08%00%1C:n%00?%00%03%13'%25%25!%1D%1E5%12%19%0C%1B%22%08z%25%0D!:j%1Cz=?%1D5,*2%09%250%00%166%03%04%03'%3E%1E$/%0C3;%0B%13%00.:%0A%0A%04%01,%22!h5%08%08;-,%7F%01t.%14)%22%01%00&%3C:8%18%17*%07%1C%03)$%04%3C%1C%11d%25z(%1Cc!%0C*%16%12%01%1F3y%3C='$$%1A%14:g%03%25%22%14-%25,%17/'0%20%1E%03%20,;2%03%00%18%25%132%7B%02%04%1A4%22%04(%07%08%0F%02%3Eq%19%05%0B%1B%08n1$)%18$$%0A%3E%0A=%22%05%00%00%173%7F%02%1E%7C/;1%03%1F%07i%04%1D%0D%20%7F%14%1E%017%05%1E%12%60%1D.;(%1F&%00%05%1E%04l?s%04%1C%3C:7%7B%0D9x5%20'x'/!#)1y+o':y%20%1C/9%0A%14%07%22%20%7B%07%18%7D%1F.%1F%1F-%0D';;r%09)%00%0C*;%0A.%0C%12%01%002&%7C%3E5%19y%25%0F65?%06%11%01%18i%09.%08%1D%1D%1E%064%3E%7D#%1422y~0%09v%3Czb%09%3C*/.:*%7C-%20(+-9$48bhe%7Dwg+%17%22!%18&*%09*2p,%17%1E%02,%05s&%13*%0E2?%05%0E2,%15%0E:%14%04%22r%014%1Ah?%25!%0C1%11%0A%0C%03%1E%08%09%1E%18%1Bv,%14%1A;8%1Ei%14~%0D%1D%1B%09c/$%01%18%14%00%7F%05#%3E%088*9(y%12'%0D9%1A4%14%14%0C+%0A%07%0B%1A%000%7B%0F%175%0F*%1F%0C%1E2%11%191%17%1E%11d2%03%0A%177%09%082%03%1D%11%1A%03%13-%12%14.%00%1C%05%11%1Az%15,a%104~ndv#%1D%03%00%09a%0F=%18-'e%0C!y%05%026:%22%0Av%01%0D%13e!%15%1B%0F%01%12*9%06%140%06%00%22%11)%03(y%18%09%0Fl%04%19%05#%00%18%07%05t%1B7%1A%03%20p%3Cz%1B%05/%10%03%191%1A-p(%0D%186/)%7C%7F.%25d%05%0A%07%11%1B#%03%02%17%15?%19%10%0F%09!3%7C%1By%7B!%01%19u86%3Ei%0Eu%25%07%1C%19%3C%0C9%0Fk$%3C%10%1C%04l%18#$%25%0Fh%17:$(%0D(%09%1E%09%08%0D%00&%12%00%7B%25%11h%0C&%18%1C-%09%0Epx;%18%1B%07p%18%19%09%01%223%02(%1E%12%7B-%3E%1E2%13%1E%0B&6,%12,%02%12?%12f;%3Czb%08%25%22%22%20=8%3E/m%06;84%0F()bkh%7Dqzzu5%053/%22na9%07%0E%0B%00(?y%1D%02,$%3E(%0F#%0D%16%01%18%1F%1D%1E%18!%0F%1E%221$%7Dx2%07%1B%093%03,%07%0A%15%03%0D9%7B,d2%09%07+n%0A%25$%07%03m%1A%09%0D%0A%1F%1F%03r%04%7D%14%0C9-%0A,%1Er%13%18-8%25%20e%1D%12%0C=*4%03%1B%25y4%14xt#&%1B%15%01,%25%09?2&ux%22rhrt%60$%1E&)r%13z%14%1E%13%05%1C%03!%22%7B%04!a:%12%252zvn5)x%0A%19,%01%08%078%1F%1C%3E.%1B*+%0842%16=%7Dn%60%7D'x%1Di#%0F$s6+$2%18%05%7Ch1x%04%08%007$%05(&8k%01-%1B%12%1B%1B%16%3E8=,%0D%7F%13%0D%03%0A%0D:%0A9%3C%0F7%06%60%173%7D1;$%1B%12%08%0E%16!0%07%1E#5*x%60z%3E%3C%1C2y%1C?&,yd+i%3C*$8%3E)c*s%1B%06%1D%08%3E%0D%1C%01%1C;8&&%0D%01f%1E(.)%13%20%0E%0B=*%16%3C%3C5%05%07%3E%17%12%08%12%182%1D%13%0Dx%17%08%7F%7C$%0F%06%13&/q%18y=%1B%12jd%19/'1n-%1Cod%08%0F3%0A%15#(%07$#8%18%19s%7C$icz%05,%0861!8%0Ce.%00%07w#%7C%03g!%0D%7C#r%7F%20s#8%0B%7B2q%1B%7Br%25%1F%15-%7D6$%06%17%1F%3C%1B&%0A%14&%03h6;%03%1B%03#%1E%01,~%1D05%12p%7F7,h~024)g%19;%01x%125%11%15%12%1D%16%0934$%07%03:*u1%05,%25%06%13?a%09!%078-~%3C:%25%0F%22??by+%7Be!=%1Dvy-i%7B!2%06%22=i#j%0Dv=%17%20%20.%0B.d%05%18y%25%1F'1ys%02%3E%14(%25%0C%7C7%3Es%10#%25kg%7F/%0E%7C%18#%1C%00%09%3E)#%19%02*%01%0Ci%1Bp.%7Cj%06%1A%0F%7F-7%3E%7F%25%7D%0B%14%05%0F%04%25%18%10%25?%11&%0Br%1F%0Cw%7C%0Cr%03y2y6j6%0F%10/%7F%18g%25%00)%141i&%0A%19%22%1C%17%1A/s%25%1E%01%01%15s%14%3Cg&2%05x3%12%1B%14r%05%134,*%05%25l:%3Ej%22#%17%01#u%04*%01%1F~ty9%3C::%17%1B:%0A1x.%07y%12i%7F.%20:%1B&%18%05%3E%1B%1B%05%60w,#a7/%1B8%0F%16%7B%0A,2%7Ckd%7F-%3E%162&d6%0C%00%10%1F%7B%09%3Csd-zm%19/*%20%3E5%22%20~#k%07$%3C8)g%13*=))kw%7Dyuh%7Dpyxh%7C.%0F9:4%1Dr%0D%0D%09%1C%093xd%14%0E=//8%183%13,u-%05h%03%18%19$%0B34%1D*%05?%11i%00%14%02!j%07%13w8;h?%02,%0C45%1F%1F(%01#i%12%07)%1Be%1A%20%1F)%7Fx%1B(%00%25r4i%15%25%18$9%12%221%1B%00%1A%08%19$p%05%0Bi%1C%3E;1y/%25=%0C%7D%3C%14b-/=,#%1F%04trwj%25/t%25evg%1B%05#&%0F%0Ay%20%05%250%01%19%07%01%14ie#v&%00%1621%06!%7D#%173s,%190*)%06%1E&4;%22q%1A%14!%09%0A9:%04;%03%19nx%3C%0F%17()%3E(7*xwz8%16!%111%0Ea%08'1%03:%3C%181%05%042'%1C%3E%0E.%7F)%15%1D%7Bx%01=%3E%00z%07%3C%03%12%06~%0E)4m%3E%22%13d%00%0B!!$%1A%092%091%00'%14l'(%06/%02,%193n%03%07%0E8-%06%20%2216%06u%0E'%1E%1D%7F7?-%60%0A?0-%17!$%0C%18=%080%11%07%19%18e,%60%0Fv%20e%16ad%18%60%3C%1De.n%03%06%1Fh%7C7%08?7%1C%60'%1A%17%1649%10~%03%1Bc%187&%1C%3C9(j%00+%0C%18%7D*%7Fya%18%0E1x%7D?)'%0B%06a%3C%15~%13%1B%04v%1E%603s%0A%01%07/3%1C,.%03djzv.%03zn-%04=i%11ns%08/9%0F6,%03(%12%09%0C%7F%7Fi%3E%225-%08%1F%11.6%7B;%3C1%7D%19:4%3E%00%1Ev8+/79w%0C%1B;i!%009%7C%08h%7Csx%1B*hz%06r%25=%08z8z'.%1B%25$%11%19n%15%007,%7C,d%7B%13%0Axk%19y%03s;,gr0%60$%3C&%7C%25%0E+;?yx%7C~#;%0D%05%07-m%08%20%258%19%60!%7B(%7D%18%0E*%02(%0C%00.#3nr9:%04%0E8%1A*%0A%608%0E%22%1C%0Bd%04%0D)er%15'3d%1C+:%12%19&%14%114%3C%1B%13%0Ar%00(6%1F%20:i27#-a%3E%132%11e%146r%19z~:!d%03-'l%19%007:%0D%0F%07=%03%1F%02%1C*%1A%0Dr8%1Ee8%06%1Bav58ys9:%04%094z%0D%10=8%04%60v%1E%03%1Bn%18%1D%1C%17-%04-%3Cl9)%10%04%1E%09%12x%03rx%097%00-r~%11*%7B%14%09%0Ak%11%1Cn%3E%0C2&%7B8%1B98%25r%04%0Awa=%13v*+)%1B%1Bx%1A$%1D(%25q%02~%174%7D%18%7B%01%0C;sy%0F%01%11g%1F%0F%7C%01-*!3!%198hs%22%0A%02#%18!$%25%1An%04x/%22z%10%7B%193%1B%7Dj5$1~z%0A%19%0E;%03%7B%01%09=8y6j%7B!%0C'e-%14=p%09%16%13%19%1Cj1%00a;.x?%16a%1C%7C6.$%157!0(+%3C6.%0F%1A,5%02%7C%00!v/$%0A%0B=7%09d%03%22%038%1A%18~%09s%0A/%13,$%7B%07%1218+%1F%0B%0F$%607%1Ay%3E$s%13d%07n7/6%18a%10(1%00!:%1B2%60%19&%1B#=1%08==%3E%7B;#%02%1A*b%7Dq%606j%0612%25-v%0A%3Cj%19%1B%138%1D%1B8%7C%1D%0Ay%20%0E%18-'%3Ep3%25r%01,%13?*v%1914=%1Cl%22%0A%06%0F4o%07%60%08%20%18%121r8=!%01(d%03%60)%3C)%0F-:43627,-a=%05t%00%1Cv;-%052=5%01r7%0Fam'~8s9rd%0469ar%18%04%0Bs%078e%1A%19z%1Aj%1F%01y%0F%7B%17#)+%01~%181'n%06%05li8p%19*%1E%1B,7s%1E1%02%00w%06)dm6pg:15k%13%22=0%3E,m9/*%202a%7Dxn%7Cswxyhag$%05%3C%1F=%0Ep%06%0Bi%15%1E9y*%15%03y-%1B/%1D9%1Aw%00%0B2%18%0283%3E5%11$%09;%1C%60%15%0D%0C%7B%095%19%60%18!%1F8%20%1E%02%076%0F%11%1C%12$%04%0C?%195%0E!.;%03%15%0E7%14%18,6%13%3C%20%0A.7%0F%074%1A;w%06%1C%3E%7F%0C%063y!%09%0F)%7F%03%0Be%7B%25%25+44%07n$%09!%00!%19%07?n%7F-%19%05#v%7Bsns6%16?%60%09%3C%7F%10(%0C%10%22%1Fo5!q%13%09%20f%1E%028%1B)%15;/%1B%22+%03'%16%08%3C%0F%11zr%0E,%11%13(s%01%3Co%00%1Cyy*%036-3~%19v%1499$;%0A%08%3Eu%1A)%11=%7D%0D#%25%1F%09%22%18.%04*9=%0C%09%02%1F%1C9%223,*%08%3C%13%06%16%1F%16x/#$-!-.;/%0D%0Az,d'i%01%1Bx%0A%00%16%04%19%1B%11%01+%03ru%1D:%15%25%18%0E%7D%1D(%18%22/%046/(%7F%0C%7B%1B%01%00%7Bv'z6i=88%1B/f?#%25%19%0Dd%07%0Ey%7Cv%02%20n%03%19l%3C%20r=%0B=%7F%09%20%1C%1Eo%1D%7Cj-%7D#d);:z%09%16%1Fs%0F&*%06:%003$%03%14'%10.w%20%07$%06'$%11%3C%09%02%7C4;f%1Cp=%7C%00%1C%20v%12w%13%19%3Cp%7B:%20%1D%072z%3E*b%04(%1C%1878?+%0D8=;3%03%1Ey%10%05%01-d$*$%25)x%0Dj5*2-4/f%1978e:%603%0F%0Dv.%7B%032%7D%221i%7D;:%1D%1A%1F%1F-.7%1A%0A%0Cv%18+;%25%3C6.;%1B%11%7Fj%04%18k%1A//y%0B%0Fdd2'%18%3Ec%60%11%1B%0Da1$%19%1C!%11%7B%7C%0E'%16%12b%07u%1C%06%1A%25!&%0A%05%60%09%0D%25)$%15%1E-q%09%1Dh3%7D%1Bd%7C%0A*%25%0F.%3C%1E;%0D%07xe%20%00%0C+$%04%144%1F#(%1E%16$d72&(d%00;%03%7D%18h#%25-%2268%18;%13a%1F%07'8#%22=:2%14%25w%20%3C%7F%19%06;5%1E%0A*:a%1E%22%60(.8%137%7C9&w%60%25z%18%1F%06a%3E=w(a7%7B%07%05=+%17%1D)%17y%3C0%19d,ra%14%15%60;'~%01gs(d%02,%7F%1A%0B%7F%060d*n~%16%01#r%0F%09%1E%09:%11%03%00v-:'%152%08h=2%0B:%0Ch%0A~v-%14%03%1E/%02%13%1E%01%22-5,%1F%10$%3C%181%06?%17%1E;((+%17=%223%7F8a%0Ew%08')ey%0F1%1E8%07%1F,z&?%1887%25%7C%01%1E%11%119+%17i.%16;w%01%05y#2%07ra;$%086v!8,%25w=%18%7D%12%1C%22k&!u%60%3Eo:%7Bx%02v*7%7D/%19'%0D%60;%0F%00x2;'x*%1Cm%00%11%11'-4asr%07%3E%1A%1A-%16%20%257%22%60%143aj%15&y-%0Dn3%0C%0C~%7D!2;nr%19%17%7F%0Av8+%1Dgru%3Cy))%04x.%19#c!%13%7C%02*$%25%00%0D:jg%7F%22%3E=n?%1Cy)%0Br%16!;%1C6%60%08swr,=!%7F%07%06,%01)%20+%7D:a%01;%0B%03e39?.d%16%14%1D%0Fs;%3E%13e%1E%14%20v(?%1C%22%7D%1B!#-w%1C%00%13%00*,%20%20/i~%11%7By%1E%25s;14%0A?d8%7Dy!%09%1F%16%7F%16,%00%036%04w%00%0A)8%13%181&'vd%07.%01%13%07s$*3/r%03ev%3C1sy%20%0D6%60#%02$%14%3C%07%12%22%19%14c,0$w*g%04+*%1C%14%19!%16%25/!%17%044%02%1C09%08%05%3C;r;d%04%13w%15%20s.%60%0D%0D%60%1A&,e%13%14,43)/%06?%0Bre%12%14,4z%25r%13%07t%09v%1A%3E%0C%15%7B%00=%00%22%05%7F%06)%09%1B&'-%1C62%0A%22%05%1B%18!7%7F%0Bv%058p%0C&%18mv%3Czb%0B?$'k%0807#5kou3*5:9%3C%22?8y~k%60gt~%7Biexm.%00+$&*z=%1E%60%1E%143v:%06%1F%1B:%25%0A%16%0E%17$%18%0B'y%0B%11%07%0D%02%0C2%1E:%3C$%7D+*%7F-f&%172'h$sx%03%1D,%12r1%25%03%0Bb%25%00sy:43%14#--%03%02%17%1D%0D%08%3E%0A5%13%03%12%16%3C.%1E%1A%1A%18%03%0A%02%0D%0D%1F%08%00;%20%16%13%0E4%1D%1Bl%19%08%07%0E%1C%3C%7B/5/#%03c/4*%22%0E%60%7C$%22e%09;'v-a%3C6%04'%056rg%25$x:)1%1D-8%3E/#%03%20?%190h%116%3E%1A%0B%08%056%7D%1F%1Fb-8r%14%0Eg#%179w%01%3E%3C&%1B#%18%3C%18%11%04%0D%0Dg!%12%1Fz+%1E%00vx%04/%22drr;v%3E=43%7B%1Bg~#d%1F!h%3E#%05w%60%7F%020*%1D?9z%10%20ai%15=2%134mh%7F%192%19%1B%08%02%19%04%1A%11b%1B.&%04%18%06%3Cj%7De%16%04%7F9r=ab%7F%15~%1E#%1A:9r%7Br%192%12%1B%7Bhg%7D%0E%0E8%12%08%253z?:5d.:%1D%11e;w~%01%1F*%187%7C-j%1E($-%22%15%1A%13w!%1F;%0A%7C,%60%1E-%11%0Ds%7Cv%3C!xrd%0Cr%0A%09p8%01r5&%1937%0B%17*x%1F&%20h%0Cyz(%11d:t(e%12%01%7B%02%25an*%12$%1Bx%16%00x;%7B+8%06d.z%07+8.,s4%14%1C%25#?,%13=&%1B%19%09o%039.%11%043%00%7D%1B%7D8%12i%3Cu%0D+k%07(5y%03oi%60u%1A-%607'*1%022c.%08%227-%3C81%00(v%0A%0Dtr8a%01%1C%0Dr%7C%126%027%7Fvm%60/5x#%14)-1%03%22%15;%1Bq%60%0D%13%22%07r%08#%3E!r%20d%001%19%00%0F;,%1A%07%7D/%05%1Eo)3$?%1Co1s%08%124,%20%7B%0C%1B~,%7F%209%05(%14%1A%60%17-6%1339v%3C%08%0D?%00%109w8%259t%1F%14*&%08%11z%22o&%25%15%7C%1D=%04%7B;%60/%09%1B%00&%13y!h%60%17%07)%10%17y;%7C$3%7F%11%25y%7Cr%1D%00%17s%0C%0E7$j%04%1E-:=%25&%3C%10%13%1F#%076%60d%0Dn9#%0D5%7D%0F%7B?%12%00%0C9%09%3Ca)%3C%0C/%00a%01%3E%12%05%1E%1Ag%18%091%1B%20%60%049.%04hir7!~!%15(%20%1B%0D-'%071d'%1Ae%3Cr-%22%09%00&2x%3C2%01%7B(3;*%3E%3E%20x%19%0E%1C%12%25%0F%1B#*%0E%08%1C~%0D%019;%1Aw8%08?2%1B%19v1yw%0F*m%15%0Ft%1C%04;%16%7Fu%25%02n&s%19%07%04i%1F%01%25%0F%7Fr%60%3E'%18%0D.*z1%7Fa5%1A%1B(~~/e%18%09)&4%05/0%04$ji2)%25%20%1E%1C%03y%06w.2%3C#%13%7B%16%3E~&%7C$7b-w%3Ew5c%3Cx%60a%01%183%0Fx#i&%053~#%099&%14,%18%1Cg%7B%0Br'?i%0D1%05;#)%0A7%60%05%13%14%7C6%0C+%0133'%05%201%1A:j%196%12%7F%03%052;6%111ur%03a)%0F4%7D%1A5%0A%12%0F3:*d=.%08%03%01%60%0F%06%077%15:%0Dt%036%0Ah!u%01%19%0Dh%04%16%1Fv%16%07%1Fy%06$%13%7B%0C%13'a%118'n%03&5%7F%0A%13'a%18%02%20';:4%05%1E%0Cry.c%25w%0C$v%1F%11'%1C-h;'6d%07%08;%1B4%06%3E%0E(%11%1836%0D(%1Dw-z%16%20%07-%7Dv%16%17%07n%7C%073%3E%22%20%01%06+e#%0E%1C%1F2%18r1%1B%1F%0D%7B%044%13?,%1C%18x%3E(%1Df~.?a56%07;%05*%0D%00)&%1Ea%00%08%0Dt%0A%1Avd~)-)+'?3%13%0C%123%1Fr.a%155)%09'%03%20%3E%3C%0Fd)ab%02%25%1E(%18%04'%0F%05&%1D%01%1F3/a23~'%138%0C3%19n%18z369%189%1El%60-%16%13elf%7C%18;7n)=6%3C$%20e%19v%0Ee#%11=j%1F~7%60'%0F!z,#&u%7Fe#*$%08%60a*%15%1A#.e-a%03%07s%19k%20'%12~%0F?!2%10z,#*d%00!w03)w%08a?%00&1%08e*%3C'%19d?.:&%122$v%11%25j%1By%1A%08%3C5!(r=9$%1E(n%14%12-%03%3C1%1E.%25%1D*%03#%01q888:)%03%25%17jid7y%1F(%22%60%18%11%7D%00(%19s&,%09%22d%03*%16%15%048x*%193%17%19n%0F%00r%1A*2%0F%1E?e%7B5*%033%7B%0Ft%60%0A5%7B%0D989%0D%00%25u*%3Eo%00%1Bs%0E%065%25%7B%0F&%14l(%18s%1E%3C1d-8%1E%22l%08%1F'8v%09f%3Eq%04-%60%14%1B/=z8%06%0F%14%7F6la%1A%11r%0D%16%09,%093%7D?e*%18%1B%1E%0Dfd%04)v%1D%3E%0F%17~a+)%07jz%02)%07.pzei$%113%7C%7Cj8r%02%18%22i%1F%04$2%22%18i%1B%22%09(%1C%7F%1A%18%0E$%60%11&%12%20%3E5)%7B%0E%0Fx:$%3E72%05/%04%05jy)13%1D*!%7Fo%00%01p,;%17%12%1Ft%7C!l%02%1Bq%7D%1E%13a,4%06%3C.:%03%0C%09%1A-%05%1Bwz8%1B=d3%11(l%0A%0Ev%12%1C.c%11.%1B%16%0De&u%3C%16-7.js%1F%3Eh!%0Ad%1Am5%05r%7F%7F/4*%20yw%161%7B%25%06%1C+*&3?z%11c%05%14%20%19n6%128%22%7C%01%1A%02$%0Fy%1A%7F%3Ev%3Czv%04%7Cx~%3C/9=qr%1E2:%12s%13%19%09e%0D%0C%036%0A%03%18'%1A%1E%10=%204d%1Al%17%03t%7Bz%09:-'y%22m%13%208%1B%25%01!;8*%1D%0D)%0Ft%01%04%13%00%7F%19!%14a:%0A%0F!9/4*nd*%08%22%20s*x#%07%7C9%18%02n%1F&$~7%1C6%0D%18s%08%60%7F;w%00&5%7Bs%0F%117:#=%0B%1C=lh%3C+!%7D%14!%1F%0Er%0C3%05r9~%0D%20f%0A5,4m%08,s%7Cz%0A%25()'%1B%1Ei%1B0x%1C%0F9%0D5%60(%0D%7F%00%0A%1Ae7e:%20%1B8%011%0D'%12*%10e)%0C9%225%7B%018%1C;l%18xs%18%0F3%1E%60%18=%04;%17%05y%0D=5%3E%20%09%3C%05%20%03/6%1B%0B%0Eb'j9%091ez%14%08=5%3E%20%09%3C%19!%7F=y$%01%1A%3C/7z%0C-%17%3E%193xn%1F%7C2%7F%04o%07)%00%7Cv%0F8%04x2%02.c*uz;j%03~7%09%0A%1B%1D.'%1A8%13(%01%09s%1F!a%0629x*%18=%09%02%05%20%01s).*j%7B%7B7%1C'.%1F%3E7%1A(?e%18s-)%0869s%606+6%1Bv%08%7B%3Ee.%22d7%1Di%7C%0D%3E%17a%7F=%0E%20-%0Fh=%17%22:%15%02%25%09,%7C%60%1E*j%3C%7F*7%07-%1Cyje1%0A%60%1C34-;?+%1A2%1C+%1B=r%03%7Bv%22%07n%25;-y%004d),y'6f;s%1D~j?!ux8*hr6%7D%16.%1D~n%7D%09%15%05%04%25d85(%080#%0Bmg%03%14%0A%06%0A3%19%0A%0F%054%03(%04%0C%7D4%1B%08%07:%17%3E%16%03%17%02%04%1A$(%07)6/68%02%1B%19%03%0790%08%3E?%18~-rz%0C%03%0Aw.-='s2%01%18%0F%20%257s%7F%1C%3E(%19%09%06%12#%06%09%7D%1F)2%04%023%0B%09%05!%11%1B!/%09(%0C%7B%18lf*q%0C%06%0F$%049%60%0Cl%3E%0F1s%01%3Ef%0C%19%1E%22%1E?z%0E%3E=%10')%001+0%22$%07%0E%7B%1Ec%1A%07%03%3Ch%22''%19%00%3C%01yy%60%3C%1052%053%0A+2%04t%11%195)?%04(-%0Eb'/z,;%04r%15:%18%03%1D%7Bj2%07!%04$%20%7Dv%1D%7F%0A%07)(%0C%7F%20%7C6%7Fu%0B%1F%13%05%0F%04p%1948:y%06*-'+%20%7C%0C%202(0##%05.%22,(.m%7Cvna%7Dwg+%17%22?,z%7F*%06%0E%14%1E6rh*%12%60#(%13%1A%0A%01%05a%17%3C%0B%0A%7F%0E%19%7C%16%7B%3E%0B%7B%18v%01%7D%1A%60?.%1C%1Dk%3C%072%19%1D!%20%1C-%07-%0C%25xr-%04%0B%05%0C*%02%7C67%60%18%0E%05%08%14%7B,#'%0A%15*%10%1Dx%10%143)x%0D%15f).%06%17%09%18%226#%25?%12%08-%0A+%1D%17$r)+r6%06;87=b),1%253%03%197%18%06:2=%0D)a#a1;;%25#eswr%09a*%1Bv3e%14%07x/%1Ca%14fy-:/8%06s%08?;!%1B!u-,,%07%009x4%11!83%25;*22%023%1E=?)s%7C%19j%16~%17)46%15%00%0D.x.gd%10~&v%609j%1366c%7Fs%7D%0D.&x6y*%0C%02%06%00'9?)s$%06%02%1282j%22%0F?%1C%03%10~%14.?%033~%3E%0F%1C%20+%1E87%22%12%00%09a%60%08y%13%22:%3Ec1u3-l)%7B72%22#%14%257*%1B1)%1B%0F%06+o%02d4%0C%1C%3E2%0F%1B%18;%1A5%1C-)x?%17%3Ctr%3E3e%0F8%086%0E$-%0Ed%141b'#%1E%07?%11%0F%09';v%7F.%00%7B9.i$j.w%09%04%0F%08s;%01d%0Cn:*%0D%0A%7C%1116%08%22%03%07%7D'%13%1B%09y%06;j%7F%06%04)w%1B%012v%0C%07%3C%14%60)2%02,%02d;y%1E%0349%148,-%25s-1%18%3E%13z+d%00a?%1D%0D-z%3C%15!/$$#5%1D%098w=c%03/%7D%16if%3C%16%60%19%12%3E=y%05'%08%04%7F1%1F%1F,%189&%00%1B%60%60%25%06%04%07v3(%0B%11a/g.%03r%0D=%16#6'-o%151u%06%0D%01%05%1A%0Az%02%03%1F%036?#%13%7F#%18=)k%19~u=71'%60%19%0F:,(%05x%1Bwo%1B%081%13eh%02%11$%03~%1A9~%1B!%1E0c%0473%7D7*%0C7.%090%3E:%09%7F%7C%1D%00%18&!%0B%11i%7C,!%1F5%25%01%1089%17%15%033%03a%03*s6%7C%7F%20!,)d(%3C%02%7F8#%05m%60!#%06vm5*%19-y%099/&%1B*aiy%00%7Fw%13%01%3E%00&!%0B9%1C8%1B%1B!#%1A%0Cx%0D%09(1%02#x0%25%0Et.,%1F%08yu%7D)v%7F*6%00%1B+%3E%1Ep%7F8.%1E?%25%13%19%13:%7F0%06/%177%11s%60w(6%0F%10%7D#!2%18%06y%3C0%0930'%0C4%3E%044%07%1E4%04%0C%04x:%08%1A%7Cy%1C%1F4)%11%06%13%00l%7Fz(*6o#%0Dr=%02%14%1D%05'%60(*%1B%13%02.%01-$8%153%16-)r%11s%7C3%22&,/%1E%0Fh.$%028%0B%14%3C/y4%09%08%12u%60%3E%1D7%1D9%06%01%1F%1B%07%04%1B#r6%13'%11%7F%0A%7B%3Er%7C%3E%18%7B%1C#%08%18%20%22%7Fw%18=-%06(2%1F8%03%01%25%07%12%05%16%05%60%13#8%14%13x%0216ac34=?.6.%15%1B%082;(%18%19%7D,%7B%18%02%20(i%14--%1C%1B,%17%1A6%09-(%7B%0Et%0F(1%00#p3%05,%08%01*d%1E%1F%7F'*%60e%20e%1Bt%13%7B%0C%1D%03y--(''%1928%11c17%11%1Bh815dwa%02%073%09%7C0%7F#8%09,v%149%15s;%1421%09%20%16#%07%7B1r%08%14%00%7D5*;=%1A;r9%3C%105?%1B%0C)%1B%12?'&%0F%0F%22z%15%1C=2&3/*#o%08%20%25%7F!6%13%1C%20%1C!?%22%04%20%3C%022%07%1Dn%04%18%60%093%0A%60%03%15%1F%6013%09%11%25%18s;%3C%00g%60%10&%07v=%1D%11%1E%7Fh%17~3y%0B,%60%098$43'x%20%1B%03)4%0E%16,9v%13%04%112#v*?%0Bz%01#)d$%114j&%7D'!-%173%0C8%25-%3E696#6%0F!2s%026%11%20!;;?%11%11)u&8%11#x%0Dd!%11!%18%051%0A%11%01s0~z?%09/.%07v%13%0Azu%7C%1C?i%0A'%3C%17h&%06/%1F%3Ev%143v%18%06ohd&*%05%17!%1B8s%7Fm%0A%06+!%0A:%01d)%1E%04%17%229'%20e%0Fh=x%0C%1B%15%3C-/;45%7F%1A)x%22%0F!:;%0D%3C3a%05%10%25~%085%1B7%04%7Bh6%7Dn=y7%12.%03%1D::(%60n%60(8!%11#%1F%7F;%1A*%17'%3C5c%06-%0A%18i%05%7D%19%0Cv7%03%05$3-2h8;s-%11=%112;z%08%09%04$%0D8%1F%02%60%13%25%3E%01f%0F%22%01%7C%10%02#n%3E%014??v:4%0C6z/$%1Fk#zj'%0Ana'7(%19=%04x7sx%1C%609%04#*i%18%06;%19%0A:%1F%20%05;4%18%06:x,%05h%02%09%14$%005d'n%04%7F%0A%1C'w1%08oi',%25)!%09*%11%7C%03%10b~2%06%7Fkb%01#%7C%0D!#%7Cw%1C%0Av%20')%11%04%09a%7D5s%02%08%25%60%0B/%18+a%0C7~%1B/es%009w8%15%1F&%7Fx%3E%04*%11-~a%08)p*,%0Bg2%16%7C%09%11%12=%10sy%03%02%60n;w%1Fa%1F)%13,%0E'%19t%00(%0Ae%3E23%7Cj%09;x3%17o3/%06%09%06%17%19%256-%0A;e&%07%0Fx%3Ca%7F$%1B%7Bv%08#ux%22%60%7B%03).%06#f.p%7F(%09d)%11*%3C%128%3C1#%14:%19%11%0A%074%0E*%03%1B9%7Bj1!*#%7C69%7F%00.%18%1A%1E%032#+5%1A%11n%116%10(%13%05ya%0C%05%3E%14=-h%05&%09/%01,%078%15%0C%1A3%1A%1E%0F!!%0Eg%25j%1A%066bx,.$!7&%13%02%001%01%3E+)+%03g%135d%03a%22yn%25%0A%08%1D%1C%15%07(#*'8%00v%11&%054/%0A%14%08&&.w%60(;%12%11v%13%00%7B%09x%02#6%02/x%06%03$%60*19i%02%7C0%3E:%1C%17!u;v%159%0C/%7D%7B6%13%60%18s4m*%3C%16%1Ba%14%00:y#%1Ali'#~%187%148%0E%7Cw1&2%0F%0E%04%3E8d1'%05)d=t1+%15?%08%0F,+%144%60;x%03%0B!%04t9%08?d%09r%13,r%07%18r8&#%00%7D%14%7C8?%03%1B%06%0D9,%20%199%04w/918z%20r)%1Cq%067je%04%0F%0Dv%1E(%7B+%1F%0F%1D%1C%12pdx6%02%25$&%09%1F68%12%066m%09s$#%06m3%13n%7D%3E7(%1Ey%0Ew%13%0A=x%0A%06i%1A%13u%11%0A%20%1F/%05&%00%0B#%11';%19%0F%7B%1F-%1A)%166;%22%7C%16%1A*%1B-%0A%20.&%1C%02(ei%16-,%1C4%0Ea%05%20%1F%18;=%7D%00%22%19%0Ci~%17$e.%60?'2%08!%7B!%12'a%155-%141%1A#;-%14/%14%12%08x9%18z%12%16%1C%168%04#28y%07+7%3E%3E(~;m=%19y%11%3C%0Bc.%07d?:%12%02%03%25(%20%20r$%06=+%20.n2a/%07=+%7C,%17&%08n#%19%60%7B3%09y%20%1E)d%02%04%1E3%19(%0Dr%02%00'd+%1F%7B?c94d,nax'8%3Eh*%054%01%1C719s!yr;%60)%1B+%01(%1B%07%7D%017i%09/%60%25r5%0Dw=4%60%25=p%60(*(%7F33%033)%25+%3C%7D%1193%19y%04%1B%08!x*%06%09b%7Dn%13*v%1D%1Fp8%07(%19%19n%02=hgsq%02e/%182))+6c%3C-%06%03%12%18,*s%7F,:%1F$%22%02.%1B%25p)z%16c-%12%04~r%7B#n-%09%14%60%0E%0C%04e%08%3C%7B))~%3E%05%7B;.%0A%0F%04,)%13&%204%06wsw%60%1D?%11*%25%09%03%00/%60%0Bm%1F%054d,%18?zr%02%3E%16%11%02yz(%1F%1C,0%1F%7D%1Dg?1%05%7D%20%16=6%13%04n8;%02sy%11%25%13%1B%05-%3C%013v?z,%1E%08v%12a%10%7F%12%0C%05+;%01%25;%07+a7%25yse6%09s%06%22,rc%7F%06%20%09%20%14%06%0C%3E%3C(%17d%0B%7B%7C*%1B%7Cu%0C%1E%12%061x(+v1%7D7%1A7a%7B%207z%18%3C%1Dzt%05%06%10%15%11'=%20r2rq%7D%1A%10%04%3Cq=%7B06%058y?1g%12,$a%13=%11%15%3C?a6%11%0E%7B-%3E2%7C%00(%7B%09%199%05%7F%022)%1A1%3E%0Fk?*%0B%7D%01o%1C%0C8*%22%0C%02%12%17%3E:56$%05%079=%06rr3%1B%20=.%19%09%06h%3E~%092$%15dr%22%11$%0Bc%7F%07%7Be0d%1Bj9%08)%1Dds#-%0D%00ru%13%224%7B%22%0F/%14/!%01(y,o%2529-e-%3C=%09%12%25%605;%00ye#a%08y%60e%604%02%0E-%18%1C;*1$%3E-=%081%019h%033%05%1D%0351%11&::4%17:%0A%0E%01/%03%09%19)%03%1F%07%18%16*+%126%082%07%3Ca%3C'%15%08%7B3e%0E'%0C%7Fre%1A%0C%7Ce3=%0D4%1D-(%25%181?%1Di%13=$%01;%00*%01%1B%127?%05$%11%0D%16#i%7C'3v%17%13.%15r%19:%0A%07v%0Cwk%1B/yr4)%60%117=%062%3C%02%10%13%06*d2'%1B%7D%0B%03%1A,d%22%0Dh1'%04%7Cn%201%0As%22%3Ed%04-%0F%1Cm%3C%1Ev%1D(%00%12/**z(%3C.6%7D:%10%7F(t=%7Dv%00%1A%08x%3C%13%1A%11%142#%03%1E%1Aj%06%17l%19.926%0B%1F%12%20(%3C%15%3E%09n%02%02%1B%02%036%25y,%7B%184%3C%0Ak9,%08%09%05a%7F%00%20%7F%7Fjgr*%11%02%1C%13%60w%0E-=%17%22%0B%19)%16%1A%034%04%7F%0A%7B%11%22%1C=%1F%7B%22rs%19r&95%02v-c%7Bt%19%1E#6%0E&8%18%0C%25%20+-%095%06%00%13%1D%1D)#%0C%06r%3E;%1D9/1+;%7B%08%20%1E%00%60f%1D%18%12x)%1A%1F%10%18%0D%08%7B&%25%11a.%1A9%25';m-zm%18/5$k%07*--?98g%1C%16%12%04%02%19%0F%1F%04k%06%0A%03%1C%7Cxq~%7Cneg$%05%3C-%07%0Dp%02%08%1F%15%1E7&%01,fyu%18%1D%3E%09%22%10%18:%13b%02%0E%09/%3C?%1C5%05+%20%16-51%19n%052jr%08%14%60x%05/4%03%08%0E$&)%0C%01z%02!%0Ch%15$%02%07%05j%13%08.:%0B,%20#93%7Bo%14%25.8,%1A%1D%22%02,%22?%03:%08-#%60%60~x%60y%3C=)*%7C%03h%1C%1E%10~+%1Fd(ts%7Bl*=/%25%1E,%25.$%3E~kdd%09%1A'14%01%13%1D%7D%60%22/td%05k$=%14%0D+.6%1A%0A%25a=:90/a0%20=&%7D;41?y%3E%16%102%22%003-0%0A%25&%60*:%03%03%1B%3C%064'%60'-%7F%17*%017%1E%0A4%25%0A(%0A%7C%0Cf%7C%0D%19%1C%1E4?8'4%12%05&j%07%0D%1A!%08%0B=-%1Ads,z&%0D%1B%0As%05$%00%60%22%00%1C-%1Dc%22y;;%1Eb%0A;2/%0C%0A&%18%7C(/*(%0A%3E%017%20%22%20%19!%17%1B%082%0D*2!%0E%16&%16j$=j:en%05%1A%1B%7Da%1E%02%0C-=w.%1E%1F%20%3E~%0A%06%0D*.z%08;%06%06,%0F%16;%20%0C%0A%7F0h&0'%3Cn%25z32%1E%00%17x%02%1D%22%1D8?8%08z=%06%18%03%18%0B%12*%11%22*%03%1A(?4%09*1ds%052$i%00(y%04%7B%3Ca%60%191~0%1Cx%0F$/%1B%11%01%04'#%0E%03%1F;.%0A%60%7F%07%16%1B(1%00%12%02%1B4/?9(s%1E-%16%0Dy%07%7Dk$%1D$%05%0F%0D%05.%11/6%15g%0E%1B%0Ax%0B9%7C8(%20##y7./%0E:%09%22%03%1C%03%3Cd-($.%20-1#%1E%0Bd%1D/$/%0D%20%0Eq17%12c%1D1%0A~%0D%06;;%60%7Ca%1A%00%0D%02e%1C)%002(%09-%0A%18%17z%08;%1D%0F%12%3C%03%0Bg(%19%25%0A%1B%01%11%07!)#%22%1D%03.%1F%3C#(%06%22%01?=%22%0F%0F%7Bme%09%072%1B%3E%09%1D(&%22%1F%19yw%01#3%01/$%1F;r%20%1C0%7Be%00$zq%7F%20%1F%062%10?%0664),%07'4%09%07%03%09%25!;%1C%06.%1C)%17%08%13%03%0F%008%02p('%10%03%07%18&&:%04%09(x90%3E%25'%3Ew=%17%25j%1Av%0D%11%3E2$%25%01%1B%1C%12%07%043%7B;%16%7B%25%0Ce,%09#e%20%3C)2%7B(%16dd4%01:%0C!%189%20%1C%0D%3C!%0E?%0A%1A%1D%7Bp%18%08713%1B3/%12%20%0C%19%1F%01%0B%20%139%09$%08%00%18%13y%093%16%02%07%0E%7F%0D9d$%1A-(f%1F%07.%1Bo%07%13%09%3E%01%0B%00%7C%07%0D%09%18%1B&w%1C%1D%10%048%18%1A%00%01;%04.,%08%0A%1B%1F%06s%1Di%1By%18?;%00%1A%7F,#xa%14%3Ev%19%1988%13%04%7C%19%0F%15r'%09-o%7F%02'9%0D1)2%0C!%01%3E&z%12%129:%00%12%0F%20a%099%7F%05'x5c%7C%0F%0Av%035%0C)%7B%7D6%7Fz3%3C%3C8%17%7D%0E%0Ea%1E%04%7Bt%06x%16%139%04%1Ce%60%7B%25;((%15'%3E/%7B%7Fa6%066d%04%09%05$%11!-5%3E%7F%15r%05l%08&;!&a%7B%7C%05'%1F#%12%19%12~%1A%16e%13n%1Ca%1E%1E%11%08d%7D!%22%07/%13/%0D%3C9%049%19/%1A%07/y%008!%189%7B,%13a%003*%7C%1F%20%05v%1D%1E8%089%22:7%08*%3C7%07%01%3C*%05%17?%3C!%15%6068%08%0D%1F/%0B&%1Fh%25*p%02/#$%3Cq%07%14j8;7%0D%3C#%08%1C'%18%08%03%1A%0D%17dw-a%7B%16%1Cy%0D%22r5;48f%12#%1C%7Foe#%00%03%7C%0A%25,v%07%0A%16%1C;+:%08h'%7D%25%12%1A%0D?%7Cv/%16:%3E%0493-1%18848%06i%1E!3%7F$v%001%12%19x23?8/a%11%3C3%14%1Fz/*%20%081-i%04%0D%12%7F8v&9%10%20v%20%15r-,a.(z%11!%00%0B%07$/%60~%0A%06%12r%01=(d?,z%094%60%60u%02&%1C%1Drp%07:%3C;%1D%0F%3E%0C%13%03%01#%1B%191a=u.%3Ei%1D2%10,;!%11%0C'%0D~%0A%01%01%09%1B&%14%16%0Cv$%02(f%01%05%02%7F%08%25%7F%06%1A%0B%1B%1E(/%186%1C%0A%18%16%7F%16%0C%25/%0D%1D7%1Df%1F9%11%17)3%25%0As%1Ar%04(/%13%25%0Cb$&%07v%01%13%0Aqrvk;%0C%0A=%3Ea9,.-%1A*%17%22&%00v%1A%18,t%09%25%11%7F$%07r%7F):%0Fyv3h%7C%18%20':y%16*%22?!+)ksg%1C%16%12%04%02%19%0F%1F%04k%06%0A%03%1C%7Cxq%7Cy%60fg$%05%3C%17%3Cyp%06%06%1C%05%129y*+:%60%0C%3E%0C(%3E%0D)%0F%1F8%22%7D%043&i%3C%05%10%1F%0F%08;%60u(%02i6%09s%04%04%1B$%1A%12?%20%187%0Et%1C%1619%030%7Bx%11=%0A%13%04%03%11%3C%1Aj%60%25%60%19%12*y%05*%3C&0%05%25%3C%03&%0B%1C%223%153%0B:%1Bkc%18%16%06v%00%1A(%13%0C=;f%7B1'w:2;t%25$)%3E)7%1F;r%1F)-%20=n5d,-~v*d;%25#%0F=xqr%20%0F1~%02%05%04%12h;s%0F%1E2h%1A')&v?%036~%7B%0A;#'%12%1Bn%07%25%0E%3E%0A#%1Ex7:(%18%7F%1Cq!%05%0A1%03%10)%25%03%22%60%16y+0f%185%3C%1E#2s%18r%7D%0B7,%0F%7F%1An%60%0At9'=%14%22%0F%0E%20%09%01%01-9&7c-%00,%22%209%05$%3E%0A8(%1E/rw%1A%1F%0D%05%1E=h%15y%10%0F%09%0B7%3C(%06/82-&%1C%07/%1D~6%05-6&%0Fn%08%3Cm%08%0An%7D%05%14&~%11d4l%12%1Fj%05'j%13?x%0Ce?%1E:%06%1Bw18)x2z%16%19)9y-4;x9(~)#2n%3E%02%13%01%06%19y%1B%106,w%7F%08n%19%08%0B-%25?%7B~2%22&r185%25)%3Eh%0A%09%3C%1C,%1E~%09!8%01%22%13n%0575%20*%11%02xa$=3%7C%14ji%1B%11x%04)?.%0B1,%17c/&%1F%06%16%228%09%604h%3C%072/6%1A;%18%0E8)79#%15%19a%03%13%7D92%0B5%17%04.%0A%22!%1B%7Cs%20+vf2&?%07%3Ed2%0F-%1B,%60%1C&x(ad%0C%11)%022%11,+?%3Cl%3E%22+1z%03%00y5%00%20%037%12%0Fx#%1D%20%04%19zxl%00*/%18%18/c%18%11%7F%16/f(x%12%01%3C83%15%604v%1F1+yyrh%0C/%20%25%0E%1E/%0C%0Fx4%18=-1%1Ev7%1B%03rx/%16%0F;%0E6%0A%12%3E*%1C%3C2%3C%7C'./%12g%11%19%22&mdz%11%04:v%1F%06%14%11v%0Ag%60y%13%1E3i%13t%06~%0D%7F%0E%07%12%02%1A%1F%0C3%0A-*%04%1Cx~/+8%7F#s%18r*%08$%07-6dr'%7F)v%02zq%1A*k(*w%04(a%1F%06%10)$*:~&-(%1C%068%08%13y/:%0Aj%7B-%12%141%0C%3E*%1B%03%20%0D%0A%7C,%7F1,%02*o%02%05p&%1E%11%02x/.%7C%08#%3C%19%7D%7C%3Eex#9(%17%1C$%08%3E-32%1F%08%1Be/%08%07r!%035&x%18x#(%07%0Ajy~%14%7F%02%0F~%0A%1C%17d%25%25x%17%7F-%13:;%3C%7B%1Dp%25w%1C%00'%07x8;%1B%20-%08%3E%10%1E%07%0As8%1E%042,%09-63#%13r%22a%20-4d/j!%18%22%08e%00%03%18%0B:!*e!n&ar!rn%06%22-%20=w%0D&;%00&ny%09%00%06%60%153%1E%0D%0A%7Dw%08$%09%00%60s,~3!%7Bp%1A%1E/%16%13v%0C+%14%11%13.&%7D%3E5?)%12%07r6x6)&%00%13#2,aoh%077x%06r%0A%19+d!%1C3%3E&)%0F%03f%04)%1B'%135%0Dy!%25?c%18%19%1B%0Fv%03%079%1E%19)e%0F;&%0B%60%09%09v%1D%1Aa%00%00r$%1F%0Dh%1B%09%11%02%1182p%0D8%20::%02.(%1B%3Cy;%7F%00:e%1D8-%22%149%1F%22%0E%1E%16%22%12%0A(w#2%06%09r4%03%3E%1Fj,$%20%17%09'&%22%0Dd!wz(#%042%25,88%11%1B%14%0Fa%14%3Ext%08%3C%1A%7F%047x%1C=%08'j%7C%22%01'%3E8=#2%05*&d!v=2/%60;%0Fi%127%606%09?~%09%01(%20%09%3E%04x46%1Dds%128n%1C%047%01#(b-y%60%0F/%1E'.#e%203%06n%02~+%3C3j)8,%60%023'a:b8%15s%7C%1E(?%068%20%00%1E%043%22:%086-)%1D%3E%60%04)%22%3E%1D*3%07r%0A%7C%0D%25y%19%01x4e%019%7C&4%12;1%05$=%14%12%198&(%00$6%0Awk$&,z*%11%00%01),%22%0C%13%60%00&,35%60%04&4-6%09v'%1F+%253%15%7Cx%033,%16s%0D7%18%06%13%3C%00(%14%7D9$y%13g##%7D%20k%042%10(64$8%17%09zi%25%7F%1B!=;%1E%04p%11%3E%1D%03%19r%1D/5#:%14.%05o&%207%18%1Dk%11'v%13%3C%1Ba%0A%06%7F%0D/%01%60y%0Ay%20%121%0B%7F%7B%039%0D%15~(k%17=%22;%0D%03'z%0C%1Ca%1Ag,%20~%168f%22%051%3Eie&t=%1B%0F?%1C'%60;%13%05.r%13%17ke%3E%20%60=%16%14%07#%1B%20%03b%12x%05a%60%7B=y%0A%18)(2'%22'%20%14%0F2%1D%07%10?%1Cy*xhf(%12%19+%0C%22).%0Awj%083(%11%0C+=~%178%16%00%13%03y%60!*%08*%052#%0F(%1A%04~%08%167#-/!%09%11%11%19%1D%0Dl%04#'8%1D%16h%08%17:y.%7B-y%0F%08k(%0048%0A32.yx9*%07%01*,%0D%11%13=6%60%03#i2v%1A%3E:?(ry%7C+%1A%04%099(?%25y%16%04?32%06*%13#%0E%1A%18y%00x%1769%0D%00%0A013q:%3Cn(%7Bv%22%01l2:$9%00k%04%7B(%1A%0F%1A*%0C%1B,4%0F(%18+%22%173%7B%0C8-%7Ci%05%03%25&%1D2%1E%13%0B1)*%0A~%22/%0B%3C%04d1%04%7C4%22%03;%1C=n9)u8%0Dj;~w,8%1Fe%00%17~!=%00%3E)%18%7C%03%7B13%02%086%25%608%18%09o%1D%3Cx3%0B%60%3C:%11%7B%1C%20%1A%0F;%20%3E%00%3C%60.y%1B%3E%1C%20q1(r%01d%10%06(%17f%3C%7Cv3h%7C%18%20%25**$$/.n%1A1=$g%1D0%22.2?7!%7Cyrz%7Blcg$%05%3C3%09&%25%1B4%20a,%18%0C%06%3E%13%7Bv%06%1D%20;%3E8(w%15%06%13%03%04%02%1C$'u%0A$%16%1C%0E.?%02(=8%22%0F%0C1%11%0A%0C%03%08%08%09%1E%18%1Bv,%14%1A;8%1Ei%14~%0D%1D%1B%09c/$%01%18%14%00%7F%05#%3E%088*9(y%12'%0D9%1A6*%1D%02q%03%25%3Ee%0A%06%066.;%1A%10%03'%13%09%1A0%0D%14%09%13%07rd%3Er%1C=%04%09*=%13%1A%1B%1C%0B%10h%193!9%0A!%2288%0F%0C%05)*=%05%03;%7Br#%0A3%60%0A%143,%007%00%08%05%1D?%3E&%25(%0B%14%7By%09%60;%1E'%06%03=%17%09?%07%1B%3C%1F)%08%09%00*+/#%7F%0B%0C-7e%091%18%17%01%1B%3C%0E)%1F!%3E%0E4%0A%03l%05%0Cj390b%0C%16%11$%137%04%08%0A%04%10%25%7C%16=%1F%03%60%0A%07(+%0B!%0Cy%25%25#*%09&%3C%1A%103%0D%06!%1F%08;)sz%1E19#r%0A%16%0F%15%1F%03)%25%13%04=s'e%11f%19&d%05%1Fb%03.-4%1Ch%1A*%20%0C%1B%20%1F*%0F%036$%0Aw%06&1%0A%19..%163:%018y%06%1C%0A%0F%023%088=%02%00;7%18%60~#%12%7C%1E%16=v%1Av7%16!%18%04%080es6?%02*81%0A%02%1Do%19)%04%09?h%20%0C%13%20/%3E%7B*;%09%0C%00%3E'$%1D7:%12%7F)%184%08%1E%1C%05%18=1%1F%1C%063z%03%14%7D&%03&%17%12%7F+%18%04%10)8%02%1E%3E!%1D!%0F2%00%0D%1B1%0Bz-%0Fh3%18'%3E4%03%1C%078=7%1A3%20%1E%22%1B1'%03#%1A5%20%3C%0F9:%1E%1C%602?%1D0d8;s%1E%09gsy94%0C%19%20y%13%7B%3E%22&%128%19i?8%15(%7F%16%1B%1A'%01*%0C%09%0As%12%19%13%19:%02/%162;~,)%19:%1C%089%06%02%18%07=ndaj%7B%1A%16%60%0F%14%16,%18%1C%07%12#%04%12%07%0B%18g%1C%12%1F*%102$%14%02)%1A%06:%04%06%0F%1D%17=%121vd-zm%18'4%20'$3b%14%25*%25%0F';%7Cyss~jfg$%05?%0F;!x%049#%11%1E9'v(9%20/%7F~i%1A%7C%00%0Av%14%04%0Dr$%20(9:9%02%0A8%12%11%20%04/%0C%3C*0s%1Dk1,%25%19%19%1D?%3C6(%07h;%09%03%139%116,%00%25%0F%1B8%06%10%099%1A=30,/%08d%1D78%14jc%1B7%7Ba%09i#%00*%041*%00&%02%7B%10'%20j!-i%13/%0F%0F6);xv%1A&%15=%08%19%1D'%0A%7F33%1B%7B;%7F'x/%16%1F)s%07%0Fa=%1C%1E6%1D%7B,%1C%03,$4%18%05,%0A%00%3E2%1E%20%04seh%22%1By9%19/98w%7C%7F,%17%22%17%0F-%1F%7Fd%19?$ve%03%04%60%7F)62vd%09%01g%19w=%0B6%20%0C%11#%22%0B33%17/%00:%20%3E%122%7C%0C)%22%0E%09%08.d%1Br!%16)%7Fdp%7Ca%20a~&)%01%1F%00%60%0C%07%0A4%19%1F%22%19%20%13!%20t:%16%3E%17s%20%09%01()x%06*%14%14d%22%10(%1Cld)s%03!:7%091%1E%0Cm(%1B%0C%12;!%18%0E%16%7D%25%0D3s%17x%16-#%09q%0A%1A%3C:*%02/:%081*%14%18%1Ah=%00%032%06%1F!/%05%01%18%14h%040%0E%05%17%03%0981%0D%0A%0A%1E%22%0F%07%13%1A%1C%07%1E&.$%7D%25&%175%13%7D'%08#%0B%072%03/%19%16%3E#%14%1C%14%1C8%01%15%03%1C%18!%1A,y%1C2c%12%03%0F%1A%08cy*%12%00%0F*%03%22)%01%0D%04s%22%07%17-%09v%3Czb%0A%3C$1.=%20%7C9%208%3E%20p%7Dw%7Cba%60ss%7D%7Cu5%053!%1744%1B;2%7F%3E%09%0C%17,%0Aag%01%0D%7B)-%22&%15,%02%1C?8%0D:&%0C%1D%0F%0C1*#%12#%00%0A%03%11%16%1A%18%1E%17%09h%3E%05%1A4*%00%7B%05~%02%0F%05%1Br/+%13%06%06%11%7F%0A1%20%1A).6:g%006%0D6%08*8%05%04'%18%15%1Dr%0A!?'%0A)%08zo7%083%096%13%13'0%12w%08%14%7C':%0F%08%1D%046%04%1A2*,%19%7B4%00%188%03!%0Aj7%08%25%04%05%20%1F#%0F%0A+8%12%097%0F%7C:a%0A;-:j*,%12%09%19?1%13+(%0B%18%0A%3E%19%60%0D.5%0F%0D%03%1D%15%053%04*;%18%1E2%04%208%0Ah$52%08%0C%1Ar*%04%7Fk%13%0C4,!%60%60%60%18%07==%1B%07%07%7C-4%1D%06q%0A%7B%00%22%09%0A%7B%19.%12%3E5z%01%08%01%25%03%60%19%3E=2%00%3Cym%1D/%05%19%0F8%15%02%0339%087%091=%1F4%60%03s%0C%03m7%09n%3E%0F%1Fi%0E%00%01%1C%18$%06%0C%08)6%15%0F6x%7B%15g%1B*%00x%1F%1B%1An%11$,$(%02;%060%0616%05%1B;;%0C(%60%066%3E&6r93%11%1As%13%22m!d%10z6i%1A%12%02%11%08;%7F%7C..%3Cj%15%7D5.%0C%1C%1Dr'=+%10%09%07&%03%3C%17g%60%0B-,:8%0A-%12)i%12'%09%3C%03%11%1615%25,7%16%09r$%08%14!%06%06.%7C%13%051%0C!%07%1A%60%3C9%7C-%1C%16%22$%11x%1A%1D%19%22%25%1A%09b%09%12%054(%1F%1C%05:%0A;;%7F%09-%07%10!y$%03?%0D4%080%06(7%18'%20%12+1%1F,$%7D%0C%03%11%0E%1B!%1Bah%08%14yv%12%1E%05y%0D?3d%0E5x%3E4=%03.1!%09=%0Dq%077%3C4%0A%02%25+01%12$%25%01%3E%7B%1D%03ze%17%0116?%1C;3%0F%082%0F1%15%0F%00%3C%0Dh%08%05%08%0D3h%7C%18.)%3C05?8k%0D15(*g%0D8$%0A//%1A05gyrwjc%7Fm.%00+:%12,/%1E#)z&%12%09%017%08y~%1E%12#;%0C%07/5%05(%0C~%07%0D3~,%7F%06%0B%1F%07%09%03%03%0A'%25%0B%1F%06%0C'%12%10%0A%0A%1B*%7B%06%0D%09%1D%7F%07&%7B%03n%14r%00%60%1Dh%06%0Fxx%160%06%1F%05%60%0Fm1%1E%08%1E-%01%1F22%09-%0C%1D%7C%001!%3E%1E%0C)r%0F%1E%1B%0A%0F%3C?%1Cc%18%17%0F%0C:%03%0A.%0D%19%01%14%12%06%0A43i,%00%0E%06%1C%111%08%18%1D!%1A28d%05%0F%04%09%13%7B%0B3%1F%07w!%1Bl%17%07%07~9%12%18;%00%05%1B=?%0E%04#)/'%044%1A%0Fa%05%0E%138,%1E%09%0F&%7F&%10;%19%08/%07%3Eh%07.-)=%01%60w%0A%0Cncx%0Dy%1C%1B%18%1F%112%7B27%06%08=%19n9%0E(-%0B1%60!9$%0C%60%7B%09%112%057%01*%00%3E%0D%1698%12%7D'.%06%05%0B%1D%03%1D%17(r%054%18'%7C%08-%22%0E?%07%0E%7F!%10g29%19%060!%0C%1Bz%1713)%009%7F%09%1B,6%7F-.$%072,y2%1F%60%00%1D%1F/%1D(*%12)%0D%17%0D&%0F%1Dl%19%07%0Cd$m:2%102%1B%1B%01?%15(%0A%1Da,p%07%04%3Ee%0Fq%09$%1E%1As,%029%038%11%04%7B%07/%0A%0C%04%07%14%0B;%20%0C%00'%1Fb%7D%04%0A7%1C:,%04'%1C2;%0E%13?6%1C%19%206#%7B%1B%17%22%12%0E%17%14%17%1A%1B%06%1F%1B=%12%12/%3E6c,;%7D6%1B9%07%0C%01%1C%0A%20%1A%09%05%1A%1E%1D3%08%05%0C=%1B(%15%027:?%02%0C%0A%0F%18i%01%10%60=$ag%12;/:5k%0B*#u%02*2;7yf%7Dvgvnd%7Br%7Db%3C%1E95&~h?%01%04%1E%1B!b%3E8%1F;8%14%08%0A%04=%14%19%2269%1F;%1A%02%1B%3E%1E%0A32%09,%16%0B$!%0B?=3%17~ss%3C%1F=8y*%14%03%13-%0B9%25o3%11%02%07%0C%1Di,%06%0F/%13d%1C%0F%25%0A(9#,=%1F5%12%0E%11%13%25%00%05$7%25&;%15%0Fp%18%0B%1E%13s3%0A%14%1C3%13%14%189%03%7B;%17%11x,f*v9?m%1Bx0%7B?%0Dgzwr(/%08;%259e(6%25,%1A=-%3C%3C2$%1D1%1B%1F%0B)70'%1D3%07%08%60%15%22'%1Dv,6%18(z*%09%04%22v?%1C+5%0Es3%0A%01g9w%1D/*'d&%7Cw=5%60/x%252f%0678y%60(%08u%0F%1C%03%133%20%00?%14%09%0E-?%0B%09%19%0Er%08%1Ak%07%06%09%60&6%09%11%09%7C%1Ehc:j%7Bwr%7F%3E4%1C%3C%09c%20%0A%1A%7F%1D%19%7B*$71%17x)%0F%01%17%7F%20$.%1F(%1F1%20%02%08%60%1E%18/%11(?h%11$$%05,%01%22x%1B%01%1A%00?r%1C#%20;-6%1C68a%0Dy%7C8n%1F%3C%22s;%08e%0E2)a2%12?p%60%1A%3C&%1E%11%7D%1B6&x%19%02/%0D*$'1%19h%20)%0D=wh%12%7C%12s%1F%176%3E7,%1E%60%04$')*2%08%05t%22%05=%13-%02%22a%0B3.%181%0D+%17dx%1E%1B-%08r%148,%60%08%1D7%22=%09%20%0F*%0Aw1%08%1F%22%0E%07%1A=%7B%13%60w;idq%3C%00%11%60r+%22%7Dv=%22%168a;5%180-%1C8*%05;:%7B2%06s7%1D6%142~9zx%1Ad%1A%259+%09%06%03%00x%1B%08b%0A21%16%3C?8*s(l9)s!-v3&y%20%25%0E%12%22%06%7F7#=%0A--%7Br%079*%1C%01:g)%12%7Da,g%3E%0D%02!.%3E%0E5%7F%19r%06%25)%19--8x,%048%0C*%13$%1840%00%03u%1B$%1B%12)ty%22!%11%084%09%06%1F%3E%1B%03%086%3Ed%7D&d9%0B%1A%1En%07a36%0E2%07%1E%12%7F%06pda%1C*%1C%08!%1E%11:r5%03%25l%15%22s(%06%012r;%05%0An;%09%08%3E%1E.h-n~=kg%07xdx%033y%0D%1Ba%1B%09%3C-/%0Bv81%04%11%1C3d%0A%13%11a%16%1E%7Fp%06%18n%15s%25%05;v%16?%20%1C)n*%0A'-%0C%60%05%031%19%0B)e'+/%1F%0B&%09x(%09%20%06s%07%06%01=ix3#%7Cr!%09ndy16##%3C%19%0E%1Cy%22(%3C%08%22~%03%13%1E%18%14%1B1~%01=%11%1C23va%19-%02:%0B%1Bc%3E*%1D4%1F%7Fs19e7c.%02d%194%07s%06%04%015&r*x%00%1E%1B=ur%1E%10a%25j%1Ea-%0A,%18d%0A%14%01%1Bt-%1Ekc%209r%22%09%7B#%09!%18%18d#%04%1F6%3C%16'y#%0A!;?u.%00%1Fa%12%22%074%1F$=%14%02$*)%602,,%20%16%18/-)v%1F%25%11d%7B%1Bd%7F-%1E-%09%16%7F12(*)%00y%19%22k%01$49%0Fh%01%1C%08%0E%20(&2%0C%3Ca,i~%02!6%0B%1A%1C%09%60%17%0A'.#%609+3%19v//%10%01%123%60%17%1A(~'-a!%20-(%7C8o6%03%11%04%20+h3%16%7Bw?#%25%12%7F7%60?r//%0Cie%60%22%11%20#=8%13%7Fa1%7F%1Fu%00/%15%18%25x%13%25#b!8%1F%7C3=%3Cw##?*%04%20d%04%1A=%1B6%04/%60%208p%60,%3E5%1Fr%19%7B%0Ae%06'%0D%01)%16%05p%60%7D%12e%1C%15%13yo6%3E59=+1s$,+-4-%07%7B%1Cr%7B%13%17%7B62%05%13%0Ad%08%3C$%0D%08~7*6%03j.(l%7F%05n%0C;%03%142%02%06=;%00#y%60z%0F%20%1C%09%60%01%16=9y!%05%0D%7B%11(%1F%3C%3E%04')x%144%03z-d/%01a*n%03%20%01%05%60%05%259v*%0D%07%038%00%1C%03)%60%16a983%00%7F%0F%7F%06%0Er%1E%1E%14%60%09%60(n%17%01'%25%0Fr%18&s)%20;d.%0C9v7c(ux=-%3E'5%609%0E%08%13;#eo%7Fy%09~;%0D%1E%0Cj%3C%00?%0A*%07%1By%0E4!7?%0D%1Ca%60s3()h!+%05*%3E&8r%1E%1E%1F7%18%05)yv%1Br)%7B8%1F)%0An%0E+%16(#%0A%60%07?%18%0D#*%7Dj%19.%0E%13%7F?)%25%07=%1C%605-*%02e%0F%1C%7Cv/x%1B%20st8y/6%1E6s%0B%0D%13y8%00a%1B%25%3Er%1D$i5?89x*c)%001%7C,%1B%1B%06'%19%60%01.%04$%7D1?%1B5%1F+%1Fh%11+%1D,o%603jr$%1F%08&(1%0D%1751p%03%25*%03%01%11%12%0Av%19s0-%01r%60!t3%1C%20%3E?u%1F7%0D%1Ds%18%1E,%0D6!'%1Fv4%01%0Fn#6.a%252x%1E3)=8d%16.%7B:n%01%0B5%09-x97o&%7C%0Cs%14+%12-%11%09%17/%08'u%1F%7D.%1E%7Cr~%20v%1B%13u%0F%3Ci*#u%1B(%17:du%05y%01idv%04*%09%25%0C%14s%25/%13x8%184%1B%7F%1B2%25%3C%1A%173n%1C%1E7:#%20%1284%3C)/%1B%0Cn)%0F%11(%07r%3C%01%208%22mf3j.,r%12%7D%0D=%0B#d3%14%7B(%01:=sre22#;(-42%0C8?%16a%7B%0C%08x%7Cvi%1D.%20*%1F?!%14%11%3C%17%16:+%7B%1C(%1Ez,%22~%0B!%06p%0C?j%02*%08z%098*%19%20$w%1C1!%25%11!-%15*+%05%1C($%7B%16%22%00%0B=8q%1C?%09%02%1D/%7Cw:%7F-1%7Da=h1%06&~mg%137*%0A%3C7%09t(%0F%1F%038p%3C8j%03%06%22'%25%147%03'8%1E?%20*%102z%08h:r?y:%18y%06d%1A-%1Ed%0D3vm%7Bz%0B,y%16*?%13%00%06r2%015x%1Ci%06%0C%09%1Fa/d%607%7D%25?6%7F&=%19vh$x%25?%0D(%19%10%1B%0C5%1C%0D%0C%3E%22%0F6%11%07=%0D1!.n%0D6?%09&+y%09%08%20=v'?=%03%12%15%1F%05!8%22t%7F)%09#)u!%03,%14%60%0Cz+29%08j%20(%1F42%10%19%1Cm%1B%04%0C%7C%7D;e~w%20(l%1A%07%22%254*%09dv%0F%3C3'%01n#%1E%1Ci2%10%1Ay#c~1%0E%03%08c%06%0D%7C%16%60%07(%05z%19h%06%1B2%07z/;%1A*%20?%3E%1Fr/%60,%0A%3C%18%006%7Fu%03;(%25%20058m%0C/%206%222#%0A%3C%3C%3E9.badzx%7F%7Du5%053!%1744%1B;2%7F%3E%09%0C%19,%0D%1Ag%02;%068%15%04%08p&z%11%06%1B3%0E4%15%1C%06t%3C%1D:%60;3%1E&h%1D%0C%04%0A%0F.3%1D%03#%1C%3E%7F2u%05%0A%16'd%10%1B%25-%06%1An/%7Fm%3C%1E6d)%16%17'%02%0D%02%1F*83%0A%16%1F%14%046%03%25%3Ef%0Aj%1A-a?%19%0B%06%0A2%15%03%14%027%1C%07%12%07%3E%08%08%1D!6%7C%07%15%07%1E%02/6%12%25-j%04%1F%1A%60%0E*%3C%3En%12%0A/-'%18%11%185,%14%1A%11%0A%0C%09%1Fm%25%06%02%11%16%18%15~(%18%18)%7B%1E%16~%0D2%0A(3%0A4*%14;%15%7F-%3E%1C%02p%1A*%10%14%09%16%7De%1F%19%1Au%1E=%1F:.%15s)2%20%052%0C(#%18%18%00%00%07r;%1A1%19%1E6%16:%14%18%09%13e%0Dy=%03%1B%03=6s+%1A%1E%12%09;+??%19%10%0F%0C!3%7C%1By%7B!%01%11t%0Fx%3E%00s-!%0F%20%11%202%1F$%3C%13%089%1B%07a%22%08%20#%0C%0A%3E%25%00*%07%14a%08'%1C%1F%159~%05%22%1B%1B%02%01)9%1C(%1B~%02%0C-%0D%0A)6?+:%09!%11%01%093%11%08-%04%074%3E!%02*%05%14%20r&%1F~%18%03%1Br3%17%019&9%09+%10;$8%7C7)%09%19,%1Ez4%02%20%03%08%07%1E%12,%02%1Bz1%16%1C%3Czb%0A!%3E%209+y98a8/?5g%0C%3E/=%14%22#g%7Dhf~t%7Db%3C%1E:-%1D-%60%22z%04%0A%1B?%22%0323%25%0B$?s8%1E%11!-&%1A%1C%1D%08%1A;zz%20g%182%18%00%1C%25%0D.?%1F%0Df*vy%19i?&y%1Fv%16%1B%3C%16%1C?%085%09%04%03%1F2e%7Fy%22%176?.%0E%25%1Cr%02%05%04%1Fwn!%7B%18?z%1Fi%03%0B%11';4%1F%09)%1D%1D2%7C%0D%06%09r%7B%05jryje%3E%19%7D%05+1%7Dr?%1F%3E5&#/7%09%04?t%0A*6%1D%0F2%1C?%1A%25%19%06*%208%07d&%184%18%60-%03%127%03&12%0F=jd3'%11y%60g~'-%1A%60c%25jr%7B%11%16%19p?+%10%16$%08%01!%0F4%0C%03%25%7F!%1Fz/%13&m%12%22%22=%7D%102'%033e%09%028/%7F%3C%1F%00%20/%06,*==jd%20%09%17%00(%22%0Bm3&%04.%08.%03%1Fq97%14%08%7Fy!ek%16s%19%1D&8%1D%12%03%18%05%20f?,%20x%0Ed%0D$%0A%1C%0F%7F%3C%0C%02%14v##./%22m=%7D%13%7D$%03%1Cy%033,%0B&%0Dwr%1A%09h%1B+%0A%19%0D(!%09%7F%01v')%0Ax-v'%11$r%1Ekh%7C9%20#?%13%60%14%60%05vh%19*%0D%19%01%17y718-5*%07%066%20%25%3C%0B%0C%19%08&%083zv7f%00%0F%208%09!?n%03;n%16%7C13%0B*2%0D%1B%22a/%18%0F6#$%1D%06%1B*%0A+/%18%1Ev);%13%18-&#9:e=%1B%11'/%059&%12%7Dh%041)1%1E!):%11%07w%0B%1C%00**%0C%01%22!j)%16-%3E%12'%7F%02j?%049.;%01%05,%07%0C%00*%198-:(%1A$x#%0D(%15%069%05%25yvg'%11=%0B6*%1Cv%7C%0F%0A5%7C%178*-%14%0D%00:%7B%11%3C.w%06%03l%1D%1C,%00;%036x%22%1D%3C=h$%0C%05z.4%7D8%25;45%093%0E%3C=%0A%7F'#~%0D%14'jd%04%3E!.%0Fd%02%1F%22%18%221%1D%14%7B%02p'%0Cv*%1D%06%7C%7F%18=/j$%16h%01%0Au9?-1%1Bn%0A-i=%00%10';!%25%09$))%0B%1E%05%07!&,9=3'%22o%02$j%00!%00%03%04&y%7F-%258%0F%20%00-%16%7F%20%11%08%18gy%069?%0Fh%1C7%01%0Do%22%18%03%00%14%18%05%0A%06/&%039%20%0A%7B-%1A%1E%1E%0F?~%0C%12%19%10%11&!%00%080:%3E%084%7B%0E%1E*?a%7D#%60,/%3C%1A;?%08k%3E(%17,%1B%12%03#0%01;%00=%0Au1#4%19)%20%08%3E%0C%1B%09%19)%1E*28s~%1C:5%111%0A%09i72/%1A%09j%04-p%1B%1E8=%22%0A$=%0E5-t%1Bzn4%7F%7C6%7Fu%03:4*%3C%3Cp;%20?&.12ay%60i%7C*/?'=?%25%20'*-%22%3E,;bnc%7Cpsyu5%053?%16%1Fa8%09%0E-=%3Ed%0Ex%3C%0A%0Ay.,%03l%05%08*)%01%1D%05%19%0E%01(%00%1F%19%0A%7C!+d34%1A%1Fl%04*6y%01=%1B*%04%04%01%172%60j!=%3Ch%3Exr%06%0C%1B%1D%0A%06&%1F%02%19%0A'%0B%13%19%19%16.71&:%00y%3E?%15%0E)%02%00m7%00(%19+%10%01%08%05%7D%14(7%0E(;%0C%08%02%00%192%16;%1Ex%0Cdel%3E/,/#!%3C%1E%02*%20:%0283~8%15%7Fr;%1Cw4%7F#y1=#%1F.%06%09~-2%0D%19%19%03%1D%20%7Ft%1D,%0D%22%13-%04%7F%0E%60%1E#%7C8;*';2%04%13%20%7B8%7F%7F%0A%22'%0By%00j%1F%05%16%25%01+9'%0E$-r%15%0E%04:yi%3Ed%0E/%05vb%0A'-a%12%3E/xrw7&3t%60%0Bn%008%20%0Av%00%3E%19u%1C!=:(%0A%0Fe%1Af&%11s%1D%084%04%06(e%17%3C%7Dv.(jcx/%60%1Ani%09%00%60$)%1E%60.%02%258%7F%1Bq%7D%04r4*11%3E%015%19u;%3C%14%16;7'%20%1F5)%20/%0A%099.%06%02v66,%0F%7D%1A%1Cg;%12%22?.%22'%22%3C%14%1D%00%056%1B%1E:6%3Cw)v?%7B%1C%22y-j)*psv%0E2r6.%0An%08)%08*!!5%01%07%0Fe%1E&-1%12%1B5(%1C#%22&=%7F%25))am;%3C7%60yhi%7D)%1F%07%00d,/%0F#v%19%1F18+%00c%7C%003%1728%7C9-%0A%18%07zj%7D+r%22%02%0Dx%09%1F%3C)-%06,%20(?%09%079%01%12%1B%0D%1C#k)%12s%01:h%3C%188)4%15%0A%07#%078a%7F%1C;%22%08,%00&%15%137%1B%1E%13%09%60y%01%08%09%03%7D%0Ahi,%17%05%01%1B%3C8%18%03z=%14%0A%16%1E,?2%01%02,%25mf%08%22%04%1E-2%1D8%1A%03%18d%0D%25%0F%0A+%60%12%11%7F:0%20%0E-9%1A%178r2%02:%08%11%02)%19(*%1C%00t-7+%199vzy5%00%1F%07dx%005(%09%25%1Aic%05jd)h%208'/!;8%0D%0B%1Fa%1F%11dj%1F%0A%13%7F%1Dw%07%22%1B%1B%0Ft9?%09h26zw5%7F%084rv%03%1198%06%7C=%03%1Bv%7B%01%20ir%20%3E%20%1F1%60x%08(%3C%15%60#sw%0F%01ds%1A%05%1B%09%7Bv(%1Em%03%03v%03%0A%09i%0D0)v%0E%14-,'%01%12%18%0E&d%7B7#%09*d~ic%00%1B%25!.f2$2%1D%0C%01r%22/,r%14xts+?e%7Fr.%1E-%14d%201?2%3C$q%1By%1E%13%1C%22%00%0B7%14.y1/=%02?%06%07*%177%1B%22%3C*%14%03%1A#%0A%0A%1D%22,&%03%03?%07,u%7F%02%16%14%1C%07%02%04%11%60%01%09r=h%60%602%22%0A%207:%04%0C%034?%03%15y%1Fa3%3C%00%1D%20/%1D?%12,x%0F%05%3E(~:0%1D%7D3%07%3E%1D%18%19y-)v!%19%13%11%08%018%60$%7F%1A%1Ehs%051&%03%0A%00%12%03%3C%1E%1F37%3C4l%1F*y%048%20%1Czq%7C%040%12%0F%15%06v%11%1A,*=$%0D6dr%19%18j%7F3;%19a:dd+1%0B,%7B%22t%08%0F%0A%3E=%11%01a%17%00%19$=%0A3%1Fr%09%7D)?h-%0Dy4ri%22n--%0D%3C.98%20h8%1A%10%09e%123%209~,+%7B%7C%25=6%18g%1B7;%07%1C%00%1B$%13?h%1B%08%06%0A=5%25%01,%1B%16/6~s%13%7C%0A%11%1Dq%7C%0F)g%13%25%7F%1A0%03%11#%11v!=;rz%1Cm3xx;xi5?5%7Cy%0F&9w?%0A#7%03%18%0C%1D.%07%18.%1E%09r%06%184/%0D%16%1F%00%13%0C%1C%177%12&%11%1A3%09%1Dq%0Ex%0A7,%12%7D7%1E*%03%0E3%22%12%20%08%07;%22%0A%02%0F%12%1D6%201%1Aw%11%0D%1Ah%22j%22%1D%1Bc%3Cs%12%07%08%002%0B*%0F%1Ee$%1014%0F%11%7D,2,%12%09%03%10%7D?)%09%07%0C%02%17)(%08x!a%0A*#5%04-%14%03%03%10r%7C%13%1C)2%1F%19j%09%25%19;+(%06%1F%0D9%06(%1A%3C#%0Fx2%3C92%25/k%09%3Er%074%0E%14%072%034%15%12%0A;%09%07%16f%0D%02%06z%09g%7Cv$%1F%0B7/%0F1%1C%11%11%12%08%22~?%11:'%0E%1D%13c%60%11#v%20*%7C%1B%03%0C%17%60%0Cs%19%09%1C%028;%01%14#e2%11%1A%07v%1C%1E#%7B%0F%09e%20%15xz%1E1x%19%25%1D%13%03-%1B%19&3%00%1F%0B.%3Ei6%0D+%7B%04#%1E8.%1B%0C,;%18%0C1~%20%08:%25%0368%7F%18%002%03%163%008%1E&%103%06%02-9:&27%04%18%0B%1D#$%7F$%1E%0422%05e%15%11%3C%00,%05a%22%1By%1B$%11i%0E%06!%0B)h%00p/%03?f%18%0F%1F,243q%09%08o%17%03w9a%16%7B?%25%0D%1C7:(-%00%17*%1B%1E%17%0C%06%0F%14,+%7B%20%154%1Dqs%20%0A%1B$j%00*%1A%7F%1E7~/mf/%09##/%60%7D%11%22%20.%22~%08%60%19/%22%7F5%1F%05%13%60.%06*a%0D%19%60%0E%25%1C%11f~'%1A);%19-%08%11%0C,8#(*%20%0F$.'%03%7C2#%04%11%06%08%13%25%22%04.72#*%09%0Ae%1B%00?*1%07%0123%04%04&%09%1B%7B%20%02%07%60%02-%0E%0Fz1f%12,%03v%13cy%12/ej%188%07/%0A%10g,t%09%25?%7B!)~*25(22%1F%0C%13?0%1F%7F(%08y.,~%0Eh(%25%7D%1A%11%1C)j%06%17%0D%16%03x%11%0B#%15%09%053%17%3Efz%09#9%00%1B%09%19%7D(7a%20,%00a!'yu%7Dw8a;%25%11%3C7%16r%08%1A%07o%05%25r%03!3b%0E;%7D%20h%7B%0En%3E%1Dn2%25%07%0A4v%1D%1E%11%60%08%0C&%60+%0C%1A%1B%1F=w%1E%06%0D%7Bx%16%0E%1E%606%05%048%17:%09%1B%221%7B36&(-&.c~2s%14m)&n)8#%12%03n$%07i%123j%07$0%14%12%07%0Aao'%19n%09%20+%00%00%02%0E%16!%25%1D%22;a+'%7F%25%7F-%01%07%1F8!%1Fjc'%0F%19%0C=5%60%1B,%1A4b%02%1B%7B%00h#&%0A%02(k%0A%13/%03%05%00f8,%00%1B.i.r%7C+5%02%1D3$%7Dj;3/=%0F%016rqz%03;%16r.%07x#%17!;$%19%0D%18%0E%07%7D%1C%1F2%09q.%7C%3E6%1C%15%20%7B;f?%06%7B$j=%0C(~$%0Bh=*-%19j%3C%0C%03%60%1D.)y$%7B%05%1A%04xu&*%16%7B%04t%20'%08%7Br%08%7B#%10a%1A4%12'm%11%1B%05)9h5%0C%0A%01%22k5&%16%25%7B%15%00%0Fwd%17a4=(%11(?:%1C+~%02?%16%12%128w86%202s8%1D#%3Ct9(%1Cdsx!%01je%0F7%07%20ni/.%1E%0F%1Ei%06%14%08%022%18x-3z1%09$nr7l33%09%60%08%1F5%0C-%3Czre%05y%7D(%14?%187y'%13*z+%22%22%20c3%0A~%14mf/%16%1B%08)%7Bzt%07w())x:7%01%7F%05*%25a%17;%25y/%7Cr%16/%121~j9%09%16.%19%17?12)%1C7%09&/%1B6%17%1B.(*%1B%60%15%7B5%7C%04)2y%15%084-=%1D+*%03n%17%7B%1By%04)*s%15%18%206='%11%19%00%1552%20yw,*?%13$x%09%19#%1B%1A!/%163t-%1Al);%14987i%11y&%00%156=%0C%1De;%18%02&%18&i%081y%19w1%1E#%113%06k%15y%04d%0B?%09%1Fu%1A-a%15*%0D%04%7D%3E%1A%0C%05s;%0D%7F%1A%15%12%1Am%14r%03%05&%097%1Bq%0E%7C%1C%7B%0A%09%7D9%1C)%047%11%20%08;.;x/%01%02%0E*d%0B?%09%1F%18%1Fv%0Bi#%0F#%1E!%18y%04%60%06v%07%18%08(;%15%15/4%18%7Fl7%09%25%1D%3E%13$%07j%03y,3%01%11r+r%7Br6%0D8%09%17%7Fu$%25%01by4=8%14%7Fd%19.%20-%05&&%3E%1B-$z%00:+if&t#%17(%0A%1C%09?%08,*%7F%04%0Fa.4'%11*%0Bl%19%005%19%0Fn%1F%1E1'97;%01n!%07%3Ci%253(%22id.s%60%021%19%097)#a2%1B3%12%1Aje%1B;%7D%14r;,/&x78%05s%19%0D7)%06r%0C%1Co!94%19+k%11%08r%1E%1Elc%1Dq%7C%1E%169%09%143%1D%60i%13%22%1By+%17r)%0D%3C%60%18%1Bx%0Ax%123%02%11%07%166%118%0Cx%16rg?%0C.%0F%1B%3E%22%17.%7B7i%12(%1C-%3C2%7F,%13e%3C%1F%1Cj%3E%01%0E%7B;%06'(1b.s%60+,b%07x%04?%15%7F.n%04%093%11-48%18:%08%60%13%11%06k%16%3E%11y/%00%20%254%7D%0856%0E%13%7F!7%202-%25&%3C%08%7B$%3Cam8%05%06%1C%02n%03%1Bw%226%15id%0Bs8%033#w%1B'%01%12%60n%09%0Fvb%11%12x'm=(8%1F%0F4=%3E%0B%09%0Cm%7B#,;$%00()x8%08%1F%1D%3Cs%094;%14%7D,%07-%0B88;#%1F%095?)%60,%1Fa%06v%04%02/=.*%03a%16b:%14%1E4%1Cd%1B%11%1B%1A%0B%3E%0D%0E%046%03d&%17%60%1A%00'%07y.8.%1D%25n(%1B7%7F(%14!e%20a%00n%0F%1Fj%7B%09n%1C&0%199%25%1B:3i-%07%60%01m6%113%22%07:%0A%01%0E%1D%1B%0Fd%60%03$%20#%17.j%60%01+%02!%07%04%7B%0A%7Fd&~)%106%3Cu!8%1F%1B%1F%17%1B$%00%11%033r$=6)t%7F;%0B*%1F2%1D-6$%1D%07-%7B%16%03!9%1E!%09%20%0A$%60+m%07%0E)%12%1B6=%259%7D%7C%0A9,0;v%09%1B&jy%1C/%00*%07!%02.;%057%3C%057(%07%11%054%15%13;4%1A+%3Cf,%04(%06%14%13.p=%0D?;-)z+%1D9&5%08%0A1%05%18(;%1B%0D%60*'%04'me%05/.e%10%11%09%06%3E%0B%1D%04%2033-%118,6)%0F%60%0A)8%3E(%0F%0A%1A%0F%03va%20%02'%22%02%20%22%3C%0A=%7F%09#=4-%22,*%1F%02(~3%02%1F6%1C-?(%7F/%036:%7F%11%0A%0E%1Ai%20%09v%7D(a%1F%050)%22lfys&%7Fn&'%10%3E%7F%00&%04%13:%19o%08%18.%13~488%18%25%1Ca!zu?9!9)%07%0E&i%00%027%0D~%1D9*%19%03%3E2)%13jy%1B/%06:#8%03n%07;y%126i2%1Bv(=%0E%00.$8%16k1?'%12%3C%146%7F0%05%1F%11#r%0F%12%17%3C%07?1$%01%13%07s%0C%7C:.e%25%132%17)'%12%11)%1Cv%1E;,;%01%16%06%00.z%1E%11%17-y3%00)%22%3Ex/)6='3%00%14%10%7F%1C%0Eswi%1E%1B3'%178%1D%03%0B%60+%0A%3Cr8)%20,%1D%7D%06%7B%19j%08%1B%05s%7B%60:%7B.r*#%19%60+%0A?%3C%022/&!a%07x%15=%06%17c(x%00%1B8%00%1F,%1Dv#1r)%3E**%06~.z%14a%25?%0B8-%11%093%0F-%061*/4%0D%03?6%0Ct-4:b%1D,=%16%1Bg(/%00y;%1A%13%16s%7B%14%00%3E7%1Dx(%06%00j%1E're&t~w%0E''u1%1B(%0A)nx%0A4%7B%7Fp%1E/#e!p%19?!%02:%199%7Fr9%03sd%19%17?:%0F%12,%08%60%04%05%1A%7D-g.v%7F(/%7B=jx%18?%15-)?%3Cv8=q2%1C.g%05%0D!6o3&t&a*%04((%1D%25v%1Bdu%03%22%124%25%02%1Asd-zm8:%3C1/8g%046%3E.2%19+8%3Cgs%7F~n%60xm.%00+:%12,/%1E#)z&%12%09%1F7%008~%04%0D%0521%11%01%1D%6022r%02%15%01~%0A%1F-!(%06%06%0E%0F%18'(%17%09&%0B7d8%7F%00%1D%1F%3Cn%1A%1E2$%1D%10d*hd'%14%3Ca%3E%1F%0C-%08%083%16129%0F%01%16%0F%06%3C%03o%11%0A4%7F;%18%1C;%1B%06%01%08%17%22r%09%20%0A%06~%14%3E%16.c%20%09%08%0D*&%0A8;%7D%20%18/%00%0E%16%0E%19,%12$%1E%3E$%0Fs%1B6%0F%7F#v!!%0A;%08%17%037%1B%1E%04%25%3C6%0A%01$%10%11/%0C%008%00%12%1A4%3E%02%09%7F%3E%0D&%196d%1B%1B'3%18%0A%1D%14%14%0A%18%09%1E%18%06/%00%1F#%13%1A%1C/~%1C+?%02)%0A6*%08%04s/;:%05%03$,%1C%1B%13~+%0E7:%14%0C6%09&:;'4/6:%04$%10%1E)k%60%25.%3E%0C%1Bf3%20%1A%1D%14e=w%09%1D2d8%15%11=%0C%12*%00%09$*d%00%05%1A%1C1%0A%0Ep28%18)%0Cx%1A%0F/%0A%0C%20%189o%1D%1E6%3C)%1E&%0E%18:z33%0F6%22%0F%145!v%0A68%12%0Aq%08%1B)(%06+%02%0D%1C%01%06%00#=%17iy6vs$ag5*%225%20.//;5%25&m%01!758%13./5%7C~rg+%17%22!%18&*%09*2p,%17%1E2,%0A%1E%20%14)%18-%024%0C#;;%18%20%17%0A.%05%7B7*i%07%0D%1A%7B%12%04(93%03%1E%15%0A%00%3C-%60%12#%13,a%20d%05%05%049v%01%1B*?%18%08%7F/p%7F%22%0C'd&%04%095%13%0D3%0D4*%22%0A%19%0D%0A%1A'%3C+%1A%7Bl%05%0A%18!%0F!%20%3C%0A%0D%25%18?%1D%19%1A%04%137%12%12%20%3E%15%17.9-4%3E%03%09%16-/%01:(%09%0Aa%3E%15%0F%058%0D%0E%3C%0Dx%18%25)%7F%079%12?.%16%1Au%3C,%00%08*t;%0A=7%0Ct9+i3%03q)%17%20%1D#%00%0A-%18%05%03y#%7F%08%0A)&%08-1%1A%07q=%05%153#%19%06%25%03as.%0D%7C%1B;%01%119%06%0A7%07%0A%02%1A%17%16%22%02)z%0B%17%1A%25%0A%0D%01*%11u%06;%12%1A$)9%0B,%11s6~x%1D2=nx%0F.)%0E%0Ax%01%1B%07);%11%17%3E=%3Cn%1A74%0A%7C%05%01;ld%1F%18)%093%13%3C%22)%08#e#%18%13%7B%1D%3C%20%108%03a%15''%20%03%0D%1B%3C%0C!%0F%01%20*%1B%3C-:%1C($%0A%0A4%06%229:%19%0B9%7F&%0C!%0F%1E%01%0D1%0D%20?z&%1D?%3E(#v%026%1E%60s%0C%7F%03%3E%01,5(%7B.%16%08%0E$%0B%1B((6,)8%15%1F%18%1A%0F1%3E%3C%04%05%0F%1C%0A%0A%14%20%7B)%1B'%003%078h%09%07)%03.3%02%0C%1E%1F%20c,%1B%0C%1F%1C%19,%00d*%10e%03%3Czb%0D1&f8n%119'-g%1A8=%03('%22uc%7Cr%7Bzo%7C.%0F:*5ar%08%0D%0B%1C33s-%7F#$%04+%06%22%1B%13%7Dy%0E%1A-%153%14%06%25v%1D%034%7F#%09%133%13%1F%1E%17%05%1F%08$y#i%1C4=%00/:r7%3C,l%12%20x%09%0B%0C%16%19's%0A%3C'%22%02%1A%08%1B%13%06(%07%16a!&%19,'!%13%02'%1865%7F%08)'e3%12r/%11%20n=~r%11:%00g~y%03%14=%04d;&wvh-7%1By#%201%17%12&2%1D#%08%0A%14%0E%1Ex$%3C%0D%11%02/2$a%17%11%1A2s%20%09#%0A%25:%0Ci=%0A%17%7B%0A%0D%3E%7C6%0C%22%16%04-%13%60y%0E%1A!%1B%064r%0A-9%047!%14$%0F'?%14%09/%04%12%04%1F3%7D%08%06%06(7st%1A%00?7z%03%0C%7F%15i%0Dx%7F%0B%1B5%00%1B%1Fao&&%13:%00)6%2249%7B%3E#;%16%08'%60f%1C%11%11,%1Di%19%12%60%0C%1B;s$/%05%129!y%19%1D%00%7F%1E%17'%01m68%03%22%7D%60f=%08%7C%0D%60%60%11%1Bd%0B%13g%0Au%1D82a!y2%20%18%1C#%20r%20r%22%1B8$)5'1-%60%1E%00%25y9s%7C,%1E%7B11%3C%3E%1E%0C2)%1B%0952%08%0A%1F%1D$%22%0E%1C=h)%7D2-%1B.%15?jr%0Ak2&%0D:%1Eo590y&6e%0A'%1A7%08%7F%03x~4/%1B%7B+1%03h%181tr%3E%11%13%25s.%09m#%04/'%7C4%3C%11/%25%7B%1A5%0A&%19%00r2%1E%16r%20k%20%60#%3E77*)%18#%3C%0B%161%07%05$#9;%11%07%1Br%1Ay*8%25%03%1A%11%13%09%00h%199%0D&90%16%13%25=%06%0E'*%18&%16r%01%08%0Bz%1B+(%1E%0A.%0B%15$%0Dns%19vc%04v%00)-;26$%1E%114:-%12%0D%11%03%089%07%07i$:%09%05:%08%08%7D%00%1A%3Em%05r%03%19%14%13%1B%3C%00?%07%11%01*%18:%18!4%0C5;%14o%1F3%0A%7D%08%20f%7Cw%1Cz%11%25%01%02%7F%09==%1F%19,%7C%12d(2%137:%60%1B$%22w0%01%22%252#?%22%7C%0D;%1Cj(%7D-s8%1F%01%12%03%7F%22%1E%08%1153~r%22=%14?,%1D%05%3C$%08%1A8#%1Ajse%1De%1C%09%20+44s%12%25x2%7B%09%15%1C7r%1D)%0A%00:%14%20z%12%1B%01%1C'y-%00%0A%17=yj%0C%227h%03%20%7Ba%0E%12%135%3C%0A05:%02!&%12%1A9/%02%02%11%06%05'%116a5;%171?7c%11;%18%25%0F%05%60%09/$o4-%12~;%11h%1E+=%22m%18%3C;%7C#j4:u%7F4.;s$%0485%20%01u%13%0Dv4#7%1C%1Da%1B(%0D(%1Ch?%03%1Bz%1D8&)%25%1F%0D4d%0678v%20%04%7C,14%1Di%3E%15/a7h%00'%118%12!r%0E%25%7B%13!%12n%7Cwv3$7%0A;%13&dt%7C%1Fi%1B%7C6%18%09i7(/%054%01g%0Dn*8%1Ee%7C%20%09%01%60:%132%09+;%7F2)y%01r*8'!%3C%0Af8%14x=%09%60%01t%11(3$%09#r'5%00~x&%20/%1F%02%11%3C(:%11%3Cn%1E%1D?%1C-)%07%173;%04w%13~n%1C?%03.8oc%19x%04%02%0Df?9%1B%1B(c!w'%7F5h)%13%1C%1Cig%044%04%04%087(%25y%03%16f%0E%0E%00(%11%60%25%12;%00!4%08%1B%7C:8%2534%1F%08md&w%1B%09%0Ah%05%129,a%16%7C%12%1D;%123$&%07%01h%03%2232%1B%16!%60%16%13;+%7B%7B%02d%1733*1%01%7D%3E%18%06%0B%1F%05%17%18~3%00%08%15%1A=%07%1E7)%1A%07&:z%1A8%1D%03%01v%1A%04%08%14%18!%15%00%05t)%05r%16%11'%1A%02=%16?%0F%1E%16?i1-%22?66%1D(%139;%0A$%13%20%050%03%1C,%087%0E%3E%02%02%12'0%19*9%018%1E%1D%02$3v7%18%25#%20$l%12%7B%0F%1C%20%14;%135%7B)%0C=d%14,%00o%3C%7B%0D%1277(%0A%20%1B7.%00%1A3%1C%093c%25w$%02#;%1A%18&68%13%07%0B%0A%1F#%17%7C0.%03%0B%06z%0E%01#%3C423%1Fz%13#%1F%0C8-#(x%16%0D8/cr%18%07%1E%0Be%1At%03&%14%1Ed(%0Fa%3E:3%10%05&;d%0A%19x%17%12%1C!6#%0C;d%1F%11%03+%11%14$-s%07l7:+%1A%1An3~%02;%0D=%16?%18%0C%0F#*$,%22x%0E=x%20y:+)&%0E%0Eeh%01'%15#)4%09%01j%1Da!%0A%02%16-4%18%12.$%7D=.7%11p8%01k#%0E%0E%1A%0Cr%11%60%25-7%1D%176pg:%3C8k'$!5#.3g%1F,591g%7Bob%7Btxb%3C%1E9+%12#=%0018z)%00%17%13&%07%257%1E%1E%04!%02#hs1%1F'h9%12%00%7B=%0D%03%7B0(%0A%1B8%0A%00%06%17%1D%01%1Bs%7Cw%15%11%3C%11%7F%0A5%1Er%12r*%1Bi%25%14,%7F3%1F%60&%0A%18%01%19%3C2%13%01%0E%3C%0F%0C%3C%03o%11%0F1!%1F%1B%021w%07%18%1B?%01%0B%1Dx%0D#%0E%0C!%06%1Ba%60%10%7F%1F,%25,%00#%05lc%3C%07%0F8%1A%16%18n%03e8%602y%11)%00%00%60%00%0A%1F=7(/%07%20%00;%1Eus%17%18%3E'%08%0C9*%22%0A%03z%1B6%06%0F%0C%60-j%013%14%1A%3C%20%06%25%04%7D%04!1%20%0A%18(2%3C%082,%7C%16%7B%19%02%05,%1D%11x%20%00%0D%1E&~%18)%1En%7F16d%0C%09%02%0F%25,%05%10%1F%1A;%7B$%0E%14%7B+#%206%3C%25%0E9%7Dn$%3E%0D;%02m%03:0~%09%18%05%00/%1A(%0D2dp%1Fv%115%00(%009%1F%1D%19'*%1C%0B%012%0Cr'%60%3E,2%0A=1h%1B5%12%0F%0Ed%1A.%00%1C%3E%03%0F%00!%0F%0F?d%05#%01/a%7D%12,%04%20%11%12%0A%03%06%11%0A%08%15%1C%04%12%07%13t%18%3C%00%17#%00%02%09%15%1C%0Fw%09%09;%00%1A%03)%0C%1F%1C%1A-9'%3E%05.2,%3E%14g%0A;8%16%16b/4(%1B%1C5x%0D%7C~%1B%04!y2%030%01%3C2%0A/%01%1A%09%18%25=?%16%7D%13%0F)%3E%16sp%027%16%14%08%00%06%1E%0E%1C%1C%02%19%20%13%7B%1A%20%1E#%1F%7B(%03%1A%3E+%11%1E%03#%14%1C%60%017%0A#%1C%1C%0C%13&%25*%1F%22%07%0Ce%1E%01%1A%0F#x?7%11%07x%0B%007%1F%0C;%07%10%17,%12%03z%14%17%1A%1B%06%1F/9%1B%02%1A%0D%00%17-%16%02%001%16%00%221%07!3!%221=%20%06%13%071%0C%01h%11%20'%08!%0A%25t.,!%16%22%12&%14)3%1C%0A*%1B%0E%1A%3E%20%25%08%106%204:%1D%01e.%18%20%22(%0A%07%0B%22%1F%0C%3C;%14%1C%3E%09%20&t&%1D%01h%60$%1D%7B(%05%1C$%078%13%01%3C%18%08'v%00%18(z%01%139~*$%19%1B$)wdav%7F,x%02%19%1A)s%0D8%011%15(%03'%17%3E%13%3C%03$%04h#%202%7F%1F;%01;%13%60%164%20%0F%00%3C%0F.%16%03*%1F9dm6pg%1A1%25%25%25.%3Cy%03;$(:+5g%06*7?98)%0F+5%253$gvmcswsb%3C%1E:-'%22%60%19%0D%04%0E-!b.5sy.$%00%223%0F%3C:9+%00%20/'%7B+1%00%1Ag%20%25%7F%1B%3E%1D%3E*28n%11%22%0F%04wh%042;d%20j1&1%0F~2%15=%18%1Aw%1F%60%1F%16%1C4i%19=%25%19%02*%13%05%03!7%1C%15%1A&%19%7F/%03#(#%0C%08%15%02*'y,*%04;%04y-g/r=%16%10%19%7F3%25a7%1F%7Cn.,j%7Bsr%3C4,4%1As%06%04m%11%08%09%3C=%17%04%7Fu%05'i$y%15%0E%0F?%03%18%13%0D%1B=;%19/%7F7%16%20%7F%20%0Az%16%3E%1D%09#%0Ao7%0F%0E,%0C#%12%09j3%3E%0C8)%0E%1B8rc%1B'%04%7B8%22~y%20%7D+%1D%06&14*4%22%13%1992?%136%0C%18%0D%7F%00%00%04%09%18%04%3E5?%7B%15%1A?1'%08.%12%13%03.6(2%0A%12/=%09#%7D%0E%01v%12%3E%01,%1E%07%1E%0A%09+s%08k:%7B%19%19v%10:%25,r8%14%1F1%17%1Ax%0D%00%60%038%7D1%1F%025%1B%19%17%60%1F%00$%173f%22$%02%02%12?.n2%1D%20$r%25%11-j%11,j%20%01%09&%3E%15%20%03%16%1F%02%0A%22#%10%7B%0F%0B#%14k%16%7C1)?h%00%22%15%01a%09%12%00%15r%17?%05-%13%0E%04%08%04sv%18%7D-&%1Dj%01a%60h~/r(-%3C-%15%18%22%1B8x%07z%06%0E'&ty%08%1D%1B8%11%19y%18i%1Dw%0C%22v3%00w%11%20%606z/%7F-%1D*%18u;%06%15%15%0F;1%3C%3C%15%1Cn'%05%14e:;s/1%14(%04%0D/8:%08$%07%7B7%25'.=%1Eh(%2281%0D%11%16&/%7Fe/$s%05%19~=&''%01wr%7F%60v%006;%1A./:%19%12%08xn96-5dt%7B%14%3C%15#6d*%15%1Fd%0B%1E%1A%0E3%60&8%18%20%05%3E*%7F%1Ei;%035%12%06%20%09%0E%02%026r7%11%14%0D4%177%3E%08!%19%3E%25%20s%06:%60%1E:q.)%15189$+#=&r8%08%16g%0C6%7C%19hh%09%09%7B%0C%10'%1C%20?%7Bib%1F%1B)'+%20;/~%0A,%7B%20q~+0%1A%009%03%00%0A%12%1Aqz%0B%1D%19&*.z+1%08%00$%14%179%1359%08%165%19%10.%161$,%25%1E%1E*%1C16,+8?2*/9,)%0D5$6kc,9;%3C%11?&%18ry%1Ef%05%0A/(?g=6$8,%20%25j$,ked%03)%7C%11%16%3C%08r)v::s%3Cv?f%02'z%14+g:vs%7D4%03%60%08=%1D%0Af2n%7F(#(#t%06%00h&%0E)%60#r'=j%1C%17%0D(=()x%3E(%0C)d%0D%0D%7B%1Bu%2041fy%12%3C%7Do%02?3%3E%0A)%7F%05%25%09%027%061(;*8'=)$v.%1E%7C%10:=%1E%089%10%11'%16g&%20%07%09+23y%7Dxia%096%60'%0D%0Ad2%60%01%13%13%06%12s%17%03;%0C3~%0Fk'.0%1D%3E%0F&$v%1C/%17)x%0C-%1B%0E98%1Brx%1C%04%07%14?:?h%223%20%1Bh:%1C&%13=%0D)%114r%1E16%19y1%03j)%0A'%1Bw=%3C%25%11!y6%1Cr%1B:%19+%3E%091%1D%7D%3C*d,%0F%00a%05-j%0A%22=%1E%0C%25%3E~0i%25w%25%09%0E%18x%14.%7D%137%60(%1A%03l%04*%0B?+h%1F%13$9%1F#2%0E%16%07%07o%25y1s+%0A8%0D%22%7Cw-%20%13p%04/%1C%15zp$:%01%03?%09%60%01h%17x/%0A~($#%14%13(%17%06%1F%08%1E%08%3C%1D%25%00%02w##%1F%0D2!k922%7B)%3C%02:-%60%0F5'%3Cy./,1.%11%3C:/6:u%60%16-%7B*ux?%1F%7B%0A%07%0A%7Ca%7Fz%00/!(%128#%1A%0F%01&/%08y%22%1C%25%06q(z;3z(y%0Am%7B%1933%00%1E%04%22%0C%7D%03a)%7D%12%1Fe3b%1A)%7Cx6%15%00v%7D9%00=%0E3%04%20%3C%02.8?+0%19-)%0D*%0Eg%08+%00%19,%00%1C%202%22%1C!%11%0E%12%1D5%02&p?%0D:h%18%16%1E%22h%12%01%22y~%0C%19%7C,39058%12%3E!%1E%07;%0D?x%0F%19%13%152%7B%16%15%7Cj%0A+%186#qx%7F%1A%11v%7C6%7Fu%049%20;:03g%07*%20-1$mzvnag$%05%3C3%09&%25%1B4%20a,%18%0C%06%3E%14%22-%00%02%1A:%01%15%0D%17.%60!%0F,%17%11%1E%07;%08:%13*%03%22%3C%17%08%11%0F%031~%1E%16%0C%05d%02%3E%60%06v%0Fw%18%7B%18p%1D%0A%60c%13(%1D%1A%1D%7B%0Au*%1B%10%088%19%047*%12(%14%06,%183%00%062%0F%0Af%1A%22,%0B2'%3C.%3Cx%10%01%07%19%7F%1F%0E;%19%17%00;%18%1B=nda%08&%25%0E%19%0C%0E%14,%12%06w0i%25&8%0F*=%07%15r%0F.18&%01%09%1B%11%06%03%1Az%1B%11%01%1Bx%07%1Fe%08%12%1C%3E%16%05%13t%18!%0039%04%08a%037%7F3%1B%7F6%12%1B%08!%16%14%08%3Cx%00%03!)%02y%049##.%15(%0Cr%18%05v~~%0B%03(%09s=%13f'%16%09~/%60%1Cs%1B9%103%7C%15r%14%0E%1D%3C6%04%186%12,%20%04v%14%03(%09%01a%0C$%09%0B%3C%7C%17%1C%1B%19%20x%08&%1E%06%11x%0B;'%05%0D6:g%018~6%08%06~%03%607%3E%0A,%22/9%1Bf%0A%10%05(%1C%1D%7C%00%0C%08%20%03%1Ctx%08!%1F#%03%18%0A%00%01%01%02%05%16%0B%14%1A%15%05$4%00,%00*:%0E%60%0E+%04%02o:%1E%03%0C%3E%124%18%03$%1C%08)%0F%0C%07%074%25%05u%0F&%09%01%08%0D%1264;%06%0A%22%08k%16r%11&%0B3%15=%04)-%0A%13-2%0Ae%0A%17%09%133%09m%16%3C%15%03%0B%1A%01%11%0E%18'%0D%1C;%00%08%09%0D7%05t%00%17=%11,%20%09%02%1A%01%0E%0B3%0Dm%0339%098%10)(&%02%1C%18'%0Ax2%1F%1A%7B%3C%7Cv3h%7C?4%25%20%3C%3Cg%06%3E+*$ks%7B~i%7Cxtr%7Ca%60g$%05?5%3Csx9%0Bi%15%1E9ra%0E%20%20*%1C,r%09,q%20%03%12%1F(%12%0F%09)%1D,%07%00%1Cl7%1E%08?%16,%1B%1B(?%19%1A%04%1F%17?%25r2%03t%20-%0Fi%19%0A%00%0Cvh%09%0D%13!%14%00%127%1A%1Ea%11~$#%0B%1C%14x.%016%12%1D,9%12=%11h%1D%00x%7C%03%3E///%7F*4'j/7n%14%11;x4#e%25r%25%1A%0Fg%1E%22%03'+%20%20%04%02%143!%7Cx%13?)%13%3E3%18,(%3E/(**%0D!%19%13&%17%0D%01%3C%00/%02%10%18%1Cs%04%1C,d%13'xy!g%1B7%18;%6081y%126%13%14%20w9z%03%14%1C)!%0Fm%02s%15~%0F%0Dg%60#%069%17%3C%0Dx%069:%17x%18z%0A%1C%19r5,%03+h%00%15=x8i?%11%0C%02#&%7B%042yra%1E$%7Ca6b%3E%09%7Cwj1%04'=e%09%1B%1D%001:vc~%25-+o%3E1s%04%1A/%183+~9%18%1B-4%18%19l%00x%0Fd,%20i.%0E%008#=:%20%09968sv8+;d%13()el%19%11+/9%18%00%02%1B*?%1B%09%7C,%7F%7F%0E%1C%11t%1C%1Fl1%1Ds%04%084%20d%06&%17%08%3C%7C%07%0F(%3C%08%099d/6'%20%0A%0A!3h&#:%057(%07xd&a&.5%06%7D%0E7%19v%25%06%60%1D?%25/v%17%01dj9%7C4%20z3%3C%19#).s%04%1Cm%04%07t%22%7B%18(%25&d%07%3Egx'%1C%17%0Cb%02t%7F-%00%002%11%0C4m:3%0Cy%02a%1C9x%7F'%3C%1B2w%7D$j%7Bxp)/%0E'3,%12el%7B%04%11%00$,e%13&(*%0De-4/%0Cr=$sd&%3C%22%3C'%3E+%09%1Bs%03%09-%1Dh%22%0Dde%3Cg%20j%0A%16%094(%17%0D%140%25r*%1Fx4%01%02ud%07%3C6%1D$/%1B.%19%3En%00%1A%60%0A%03/~&%09%02?%15%03%17)4%1Evr'2h%128$4o:%7D7%0Ez%1Ac1nd7v&%1E%02%7D%1E%20%04.%0E&%143%08%04%19%11%187%17yns%22%15%04%22/%0De%01*s%0Es6v;%19y%1A%1D6cd%0D%04#%098rw?%06%1F%7Br%12!%3Ene%03%11)%02(7%0D%20%1B%7Ci%02%60.%7B;+%1C2'=%18hi%0E'~%066%1C3%0Dr%1C8%1Bd%12%1B%1F%019-u%22~%0Fh%20j$:%1C6~%09$%3Ck:%1D;%0D,%16?z%17%1F9%115%12%02%04%7B+(?62%1E%14c='%60%7C*br53~=a%11r%1Da%0Ec=s%11%07k!%3E%0A%1B=kb8%11/%0Fn2-%12%7C+%0F%1F%137%3C$%149%078%0D%7C%17h%02%0B%03w%0B%1E~2%1Fv4%048%16:%1E%11%7B%3C4:%06%14f3%16/%0Daf%25)%7C7%03%003%09%1B'7*%00#-%0B%145%12%14%19e%03%1D%7Bn;(%11%07&y/%04%3Ea'wr~v%02%01y%04;%206%7Cw,6%1Ca%03%02%7B%7F-2:.:6%1C%07y8y%16%015%05%08%7D46%3E%1C%22%0E%1F+5%7Bu;%01o%17!%19d%22%1C),%1B%60%0Ai9%02u%25%06#1%7B1%60(h%02%1F8%03%25!%0A%0563%20n%19&5?/%3C%13%7C%25,%3C%16:%1D-9%1D+%11%0A%0E%3C4%1D%3E%07$%0E%3E%0B%02,x2%08%10%7B%221%11)%3E%152%22%3C!,%12%19%16%7B*%18%1E%20%15%12%0B+%02%0Dq%60%1C%0B%05'%0E=9nh,n%7F%1Ei%7F%3C%3Czb%0C%20kgk%01/59m%1F7559%1Eswub%7Cwxxh%7C.%0F9$%00=/%1117h7%12%06%13)%1D%13z%10%1E%08%09'%07q8:%00%25%0A%08:-!%1A%07%18:%7D*%18%1A6%12%1F%18%14%099%1E%09%1F%17%0Fn%07)i%1D%7C%05r%0Fr%03z%17%0Fwj%08%22%17%1F%0Ar%11%7F%20%1E%07%0F#%13%0E2=%1B3%1E%0C%7C%0F#?,%03%0D*.%1B%0E%12'%17%00%14%01&%11%1E%0D%60s%06%198,%08%06q%0D)5&z-%124%1A'-y%08%0F%18c%0A%07~%0D%0A%07;%0E%1E%16l%03:%18(,%1C99%05%7F%1F%3E=%7Dp%1A%7F%3E%14%00&x%7F)6z%113*a8%073$%1D%08%1B=nda.%1A%0D%03.%0C0#%05y%22v%17!%19&*%0D%18%17%0Dr=9%16%15%07+$%0F)8y/%137%60%1A%1A%07%02%07=)x%02%05z;%19=2%0D'%00:%7C%143%02%10%1C%0E%059+%18%04%7B&%0A%7D;i%09t9-;'%039%09%1F2%12*%141%0Fo#%02%07#%05#b:8-%048;%0C%04z%1F612'%20%085%0A$%04%13%08%1B%1D%7B%00%1C&%099%18t%1A%0F%15%14%09',-.7:%0D%19z:;%22%08%20%01%15%3C%08%09y%1B%1F%20$%1B8%7F%603*%0A'z%18%0A%7C$sa2%15%05%08%1D%0Fac%1B6y/%0F:%7B%1B(%05%0F%0A%1D%11%04%04%0F%11s%112%08%12%13%0A%18&'7%20%19%14%11%03%0D%112%0C%13%014%06?%22%20%01%3C%01%09%09%1C*%1A%09~2%3C=%3E%19r%05#%3C:%15%0D(.%1Cm%3E%068%05%16%10*%05v(%22%0C()p%0D'%0A=%111%06%1Ar'%22%029%01#%1Dr%15%1F%0D-%1B1%04%7B:%1D#'r%18%1Dj%1A1q8=%0A%07%1C4%11%05o%01%1Fq%7F=%12%13%205%18)i?2*s8%0A9%7B4'!%0D)-%15%014%14%60=usv/*%1E.8v%01%06,%253%0D%1D%3C%0Ds=wv%7Fdn%1A%1Dl%3E%12%16%0A%0C*!%01%1B%1A%0F.%07%3E%02!%1F8:%11%0B%11z%3E%12%08-%03%7B%3C1%20%0C%0F%0F%1Ab!x%1C%1B$ag%17k%1D59/$g%03,1/%05%22,ua%7Cv%7Dym%7C.%0F9:%0F%04%0D2%7B~%18%05d%12%0D634y,%18/%1F%14&##%05%1D%11%22%0B%07%01j%11z%0B2%1F%1B1;%04:~)%15%03%12%04%7B%20%03%1Ex'(%3E#%25xy%1F-%12%01%14%12#%3C%17%22%1B%1C%08%3E%09%7B1%13%3E4%0Ay%08:%17%0E%12%0A3%12)0%08~%0C~?6#*%0E%097%18%141y%1B%7Bn%22rndav%3E-;~%1Ahe85%0D%7D%127%7Cw%1B%06%0Db%22%25,%02m%04y%09%1C%02%11%25%09%0F%0C%0F%156,+%0C%1B/*.%06%00%1Er%01s9-*%15'd'9%14o?%04#%7F:0%06/%0F%13%16%14e%07%02!%06i%11?%09%07%7F4a,4%1E%05%09%20%09+(%1A%20%05s%09xa%00%11r%02%11(;5!%0C*%7F%20*%04%051%04%1A%1F%7Bx%0C$,$%7Dj%0C;%1Ba%60%13%3C;%0B%01%12%12%0E%18%11'2r?$m)%1A(%00%14;%02%08%07%014%0Cg8&'z,%3E2%17%1C%08%0E%1C&%14.%1B8e%7B5%0Dy%11f%1D%0C-%7F%14%25%01%10%1E%25%1A%12%18%0C%1D8%1D%7Bsp%22%0C5%14'%00%0694%05!5%7Cy%09%1D(%02?%19%0C%18%7C%22%11%7D2%14%00r%11e,7/%11%1F+hd%7B)~%22%127942)+%08%22%03'%022g%1C6.%226%7F.j1%18a%18#%14!;:d;/:$%3E4%1B%2297%0F%12%7Dp%20%3E#6%20'd#7%7B%3En%00:;4%05%25%09%09%18!&3~v%16%7F%0E&,(%20%60%1Ar$%3Co%09%0A%0F%7D+%0C&%0C%17s%17($/%11%19%05%16%3E$p%03,k5%22)%7C%1D%1A%049%03((%0D)%01r%25;#f/j!%17%1E%60%7F%19r%3Evd%18q%12%040f%7B$%00;%1Cd%1E.%1F%1Aa%02:v%09!%145%1A6%03y%01#%02s%02/o%3Esrz%1B:d%13%18/'32%20%253%0C+%19%1B8%1F%0Di%03y%1B%09%25l)%0D%0Cs%7Fa4%7B%0F/+%01%15%19%17%22%0C!6%3E%03!46#%1A%05%13,%1C%0A=7%01#%605%09%05%1B)%1B%16%0E'%05%14%3E%3E%3C2%22y%09%13~%0C%0A%148?%3Cpx?k%04~-1?%1A%19%01%02-6%15%11%60%0D:%0D%00%08%20%18-'3$%0A%14(*)%60*%08%04%05%08%3E%3C%13$%14)32%13%07!-%05%1B#*%14%12%03%20%22y%17%03a&xz;%01%0A;6%13%19=?%22r)*k#y%20%7F(%3C%17%1F%11%12~k%00(%07%7Fz%138%7F%19%7D%19:g%05w%1F%22%1C%07z%13%1Bev%0A/%1399%60%09%11/?90&%06%08=z#%1C%0Dx%20)%09$%1C#d(%11g%1F%113*%3C*9%1B2#(1)%0A,%1F0h%20%0A%60%07%13%19%7Fud%0F;5%09+%60%1A$ag%17*%200##(%25)y%00'%20?(6%22&a%02%07u%15()$=-19mrxlirug+%17!?-8w%09%60y%00%126%60%7B2+9%08%1F71%07$%7B%1E%11(8%1Ay3d%02%10%7F'%0Fg$%02%7B7!8?y%1A9m%7B%0F7%06z%201';):%1C%08(p%0F%0F%0D%15&%0F%22z-%18$9-w%18'8r%0E)#c%7F%033)%605%0E%14r+%0D%17%0E%061%0B%1E%25d%1B?%7Fn4/43%14m%1F)8s%7Ck6=yx%7Crgr%0Ex%1A%20!%19%0A%01%1B5%15%0A%25%25,0%1F%09%17z%14l?%11%12.+6%14%1E%07%1D%0B,%20z*%1C*%1F'=3$?%129&%12%12%0Ca1%0A%06%1E%0F%14e8j%00%03%038/7%05x*%7F#)r%7Dv%08%12%168%03*%12%20j'%0B7%16%01%00%1A%20+8d%03%01%7C/'%25%03'9%1Dc?%19%06e%0E%07*n%00%07%17:%06ts%0C%13%03zp%0C%1A%14c%12%09&y%14%1Az%11%25;)%14%0F6%0F%023%02%1B%13.*n%7Bx%15.%22*g%22-%03%14%18%60%7B%06%09%226%1E%22x%258r*#%14%3E%206%00=2%06%14%01%06~4%08:1$%1E'2%3C,%1D%04/;=2h8%12%7C979%13%18%3C8oc$t,9%18%19%3E%03%19%256%12%01/%0A%1D%09i~6y%7Bo%18%13rr%185%202%1B%07,8(-*%12)i%3E%207%12%17%0Ec%09-%1A%14%15%3E$/!%02%10'%7B%18%0D%1D%3C%14%11$y6r:%05%19%1C=?$r%07~-7%0A%035%07%22%1F%08%08s%7C%7B%16*&%0F-x%08a.%14?%20%0C%0Az%15/-%10%0A%0C+yw%1B6%221z%14kg-p:a%0B%15%25%0C9-(*st(7n%25s;9%1A%10%08%056#e%03(%1Bt=%1E4hs1s;k)%06q%0C+%1Di%3C%16%7B%3C%01%13%015%06%1F(%04%0E'%0Ez?%18?)$%18%087%18r~%0D%03b%035%1D%16%208:+%7F%014%14%3C%16%20%1D%3C%7B-s&%1E-f%0C%22%00%0A%09f%1E%03!%06n424%02%0B#=s%05%1D&%1A$%087r%09%03%07z4%7D9%3E7s43%18%1F%09%1A%20'=i%06%190=%1F%1E%04%19%06%1F;%1F%161(3?%03%7B%09%02%1A&%133-3=%1E1;1(%1B$5%18r.%06(%0A=%7C%0E-%0F%60%04%7Cy%04%06%0F%3E%7B%19%03%07%0D&=*%1F%09r%7B%0F%17%0A:%3Eh-%19%25%177%1F;%0D.%20%1A6%60%09%1B!%0F?%05$%03%0Ao%7Bx%003%7F%161%06%18%1F+%16%18%60%19$%0C%08%181v%08%3E%00%17*%0A:%1A-%02:/%22;-83%1B%03(%1D%12%08%112#48%603%3E%08%15%12%19%1Bs%3C2%15%00%1B%03%1Eh%7F%18%11%3Cw?%60d%16*a%0Ca,u$4:%7F%02ud%22%3E3%0E%10%12%25%00i%3C%138%194%22%7C%18y%0A%0D5r/9,%1D%04y%07%0E%1E2%1B~%073%7D5%22%25%19#%00oe'(%07*;&%7F%1B%25%1A%1D%1Cd%1B%22%14v%049v%12~!&%19r%0E%0C%0F6%7D%25y;;!%00%11%06%25n%17?'(%08%084=%221%22v%00'j%05v7:%1A%18y%04%13%12%03%10:%25%0A'9*&%0F%0F%25)%1B%1Evr=d%0A%1B~%13:%06x%00/%1Fa%02%0B*%7C%1A%60%0A.,)%1De#q%01%14%60%03*p%1D%0D%15a%09%20%12%1A%08%07$%14%3C/%1A%1A%0E%0C%20/5%3E8%14%1868%22%18%19%1E%1D%0A%25%22%1B1%17j)%11%17y%01%09%1F#x2=*%1B%076%20%25%03c.%11%13%22%1F9'%14z9%01%1F%01*?%16%14%14(-%087%0E%0A%0Et%19+5%0A%20%17%04/%0C%1F)%09%0A?8%1B%0A%17%02x41%19%05-%01%1D7%7F0%05;6%1C%7D%18*%0Dva%1B%05r$%3C%00%1C%0B%3E%25%0Fd%1E%03%1Ax%18%7F%602%7B9%0B?v%3Czb%0D8.a%1C/%20p$'k%1A15k%059/%3E?%25%60g%1D-18)%22%20%3E$$/g%7C%60frw~b%3C%1E9+%12#=%0018z)%00%17%0E%10%08v5%19%1D%10#%1E+%16%1F%08%1F%7F%14%11%06%17y%05%1C$%1B;s6%08%0A%3E%08%05%02%1C?8;%068%09%03%18n%074%11%15%3C%18%3C%03%1B%12#%10%0E%08k%1Cr%0D%0A9%09g%0Fp%09e%0Ai%1D%05r%7D%0C9z%15%08e%3E'%11%14%02%1D:%08%04s?%0C%14%01%06#%1F%05%17%14=&%04%0B.3%22%00%09&!%158%07=%08.%1D%1A%108,%1E%09%3C'%7C%22%0D%12%08%18%11%16v%0A%0C%001=%11*%0F&%0A%08.%12%04%18%20%2286'%07%3E%1F)%17%13%0A%3C%03;%14%0A#%7D%19%1A*%02%0C%01#%1B%09x*d%07%13%1B%1F%1B%0A%0A%1D$%0F%11%0A%1C%10%09%0F*%09%7C%0B%60%20%00=*.8!y8*%0A%1D~9$%04%60*z%00,z%1Bi'%17s%1Fo?.+%0D*%1F%08%1A%003%16%0F%199-9-5%60:q:6%3E%0A%08%00%09%030*y9%01%06%1F:(%0C%3C%01%1A%05(+(!:((0$=%17%11%0F%0D%03%25%3Ef%06%08!*%15?%03)/;%08%60%068%18v%10%19d%0D%08%7F%1A%1B,%18%1C%027%04%04r%3E%0D%18%00'&%1E%01%3C%1F%006#%04%1E%02,%1B%1C%0C%172,&8%1A%20%00%22n%06%0F81;)%1A%14%0E%1A%1F;%1E%1E%0E%14%1E2#%0A24%22%0F%02%253%1B%3C%0B%18%20%1C)%06&%02%1C%18'%0F%05/;#d6pg%1A15k%16.,u%04*,%03'5%3Cguswi%60xm.%00+$&%07r%07%1F%15%0E%223%7C?%05sv:%020%15#%03%00:%1D%7B%1E%07%11#%3C%16:%22'%01m&=%07%08$%09c:%20%1D77%3C*%198%22%3C%1F.)%20%181%17%0Dq%13%19%3E%60;%03%20%1C%11%03%22q%0D%0C%0C:z%0B%1B%3C%3E%06r%02#%09%1De%0E7*%1D%1B%02%0Fj%01%0A%1C%16%01&$y%3Cc~y%7C%01,%14=r%1D$%3E3%7C%11z;%09%7F%3E%25%3E*j&-%09/%207%08)v%3E%19%18%09y%1B%08wr%222%22~%14%1422%03/a*%1B21%3E%1C2%1B%7B%04%00%0A%01%1B%193%7B%20%0B7$%14%2048%3Ex+%7B#%0D%20%12%0F9%22%0E%11x%1B%00;1%60y,x&%17=%19%09/%03%09%60%0Fr%0A%186$85%098%154%7D%03%1F%0Di&.j%60(%03%01%601%22ai%1B%1A%0B3%097%1F%22,)a1%05%09%0D*4%18%221s&%02='%7B5%7B%1Fn%01**%1B%16%03(%0C7%7D%7B?%14%12u2&%179,y-#%1D'%07%18%1B%7D%0Bc!y$z%1C8%09-d%1E%09%02%1Cx%0F%7Bm)%60%0F%1B-a4d2%7D%19?'?%2516=%16%7Dn2e%1B%00(7%1D,%16g$%18-%0Fh%08dr%11y%15%09%047~;6%22s,%0E%09%01h%25%17%039%60%05%06%11%22$%01%00x92%0A%1C%17%13y%7C%20%11a(9.%0Fr6-jz%22a%1D%1D%22%25$%0C*%0E%0E3%0A%0A%60%7B%0F'%033%05%00%0F%19%0035%04%0A%3E%22r%20!4%22y5!%05%16!%0Bh#%09$/~?%7F%25%25&%07o%03%7B%0B%1C*=%60#%25%18(%1E%1E%05%05rv%12cx%17947%13%0Dr%22(26$%08%1B%1A%01!r%193%1D%1A%14%7C%0B9=k%151jre%0D%25;%12%188%60%1D%19%0Cs%20%3Cd*s%7F%1A%01%08%08%0Bd,%13e%04w#%00%12&$y*%1A%0C:2%25%1B%065%7F%1B$%03%02%01%25%7B)r%16o%1B%1Bq%136-%22:7$*%0A%02*%22%00a%3C%14%07%11%3E73%7B%09%05%1C+h%00~v(%3C3%3E%0Fj%0D%06%16d?%08=%1779-%13%18a%109%13p%19%7C;)%1A%22%00%1E5%05!%06%089%00%7B;%0E%04%7F5?%18,%1B%0Aj;%60%03$%7F%12:*.-%07%1D%03%19s%60vn%3Cz5%06;%1F4))%07#%0A!sv%3E:v%05%00,8~(%7B%19/%11%1A%3Cb#%05%3E%7C%14(x+%0A%0C%09%18%0A%0E%1E%17%14%18%0E%0C%1E%07m%12%0Ey(%0Fl%02,6(%1F!%01!&%0E%1A!'%0F-%0C%0A%1B(%0F%07%08%01%18%02%1B%09%0A%01%0C%09%06%09%0E%03%0C%19%7F%03%0E9=%11%3C&%7C%07%14%14#&%20%1C%1E%60.t:%03%1C?8%0E%07%0C%3E4%1C%05%0Ax*%17%09q%12%03%11?%3C%08%07%1C%3E%01%1C+%0A9-%17%099*%03%1D9%3C%18%03%141%3E%03%06'%09l1%3C%1B%19x%1E%1E%02t$)%0E%14%09%038%09%1A%13%12%0C%0E%0B.%09%02%0B,)%0C%04%09%008#%1A%12%11%0C%0E%0D%20%09%02%07%3C$3%12%22%0C%20%032*%3C-%01e%0E%11%7D%12d4!%19.%08%60%3C06%20%09'8%09;%03ys%1A78%60%0C%05%7B8$%01/~)%09%1B,%20%1341%11%1C%03x+%0B3%7F0%1E%20h%01%20+%7D%02+f9%22%22y-%07%08,%1By%3C%01?%00%7C(%01%1A.pd%096%07%60$%07:%15ad%08%02/46%0E+$8%20%15/2%12:a%0A%02%1B%13%7C%1B$%0A%108%7Bh%1A)%0F%12~3%04=s)%1D89%1Bn(em%14%18%131%3Cv%1F1%22%7C%0D%155%0D%19%04=!6%0D%18~%05i%25%3C%05%0E78%02:&%05%0C7b9%182ah#;%05/??4%0E%16%3C%021g%1A;-%1D%1D%13%0D2%1A%17k4%0F%20:%3C%1A%7F%1B%14%19%00%1C7(%14%7D?a=%60x#%7F3%17%06p%08-%0E%033%04*e%0B%1621%13%06a%20y%149%14);99-%7C=%1A(%0D/%18.2%224%056662.%7D%22=%00(%0A%7D=;%00,8%13%7B6#%1F*z%17i%14%12n%01%0Co%13d4%00'%1F%076pg%096p-.9n-8.a%0C!54g%02*:%18%3E/%15%22+u%7Dzm.%00+:%12,/%1E#)z&%12%09%017/yr%16%0A%1D87%1E'3%1A%18%07%1D9#hr%0B%12+%1B%60%1F(36#%158%0B2%1B!a%06%06%0E%0F%18'(x%09&%0B7ns%0D7m%1E%0F%0E%3Ckk%16%1A%11%20:%0F%01ns%0D*hd'%14%3Ckk%16,%0E%0C%22%1A%169%071=+%11%13%07%0F%01.%1D%7D%08%0A%04%013%08)%0E%3E%0F%17%1E1%20#%03h%07%00%08%01%1452%09.%0F(%158w%0A%05%1C:%06%25%19%7D8%1C,8%06%00(uy%07%25%0F2%138dy%0C.&%0Cu%04%0C%7Cb%0D%10%06%09%11%19%0A3%02%0D%3C(%09%03,%0F,%01:,%13%05!%09%25%08:9%16?%1E%033%1B6%18%0D%102%3C%1D(%7C%08%12#%1D%09%0F68%18%1C!%3Cs%1A,;f%1A%0F%0E%0C(%19%0E%09%12%05%1C%13%0D%19%0E!,d%0F%0D*%3C%1B%1C%03%14#%1B%0Db%3C.%06%1A%10%01%09%08%3C%017%19:dy%08%08a3q%01%1C!%1B%0D*%0F=%60%19%19%08%04%01(a%05%02%0A%3C1%008%0E%7F%16-%14ns%0D%0F%11&%0A%08=4i7.u-%02%17(ns%0D%1F%00%17%09/%07'j%11%223z-!'3v;%0F7%01%08+%19,%1D%18%3E%14%06#%0F%18xu%0A%1B%15!;q%7F%04%1B%1B$+%1E%1Aie*%22:%17%3E%09%04%0D%25%1A%16c%3E%02%0F%1E%10%02%1E%20(%002%1Ey%0E%06%01%1E%1E%182%0F%05#%12%09%18%25%22%3C%062%22%0F8%1C%1Fns%09%08%0C%14%02%128%0A%1Da%22p,%25%03)-*%0C%22%13%3C%09%15%7B%0F%1C99%03%09%09h?%1F%10*v5%11#%08%1D%1D%0E%00%1F%02!%1A1%112%00%229%60%09:u!%1B%1A%09%19%0C,$%00%1D/.%0E%0A%08%1A%12%12%08&m%11%1Av%1F%14%60%09%0A9%03#%1C?;%148%0B%09%1E%18%05%1A%16%0A%3E%0E8%06%7D%10a%063%06%20%0F(%1E3;&%0C%3C~0%12%191uy%03%18y)%1A)*~7%0E%07;%05%01%16%14%16-%0A%017:%07'%0B%1A%19)%01%12%14~/:%08;%13%12%16auy%03.%16lf%1E%16.,)%19%1A2%1Dw%14%3E%06;%18kk%16!%0D%1E!,%1B%06dy%08%09*.%088%1D%0C*%01%0D%22%7F2%09,%11%0Fkk%16ns%0Dkk%16ns%0D7%15%1122r%1B%181~%09$%19=7%18%15%0C%19%3E%3E&w%1A4!%11%08%07:%1E%20h%1D%00%12%09%18%00%18%0E%0F%1C%00ux%056%7Fu%13$,&/74$m%08/-%11%25%25%1F'%3C%7Crx%7By%60fg$%05%3C3%09&%25%1B4%20a,%18%0C%16%3E3%06v%1B4%0Cc%06%12s%227d%03%13%04%02%11%18%06%12%3C%20%13%04%03%14%3C%17%08%11%0F%031~%1E%16%0C%05n%7C%1F%1C,q%06y%1Di%0Ady%0C%0Aa%1D%05r%7D%019%1D%15%0Fkk%12%0Au*%1B%10%06s%19%047*%12(%14%06y%18*$&%09%08='%00%04%18%22%00%09%0F%0B,%14)%07y%04%0C%1C/%25%13%0C%7B%08%3E%3C=p'%17#%13%3C's%0D%18%11x%00%03%7B%1A%03%1C1%04%1B%01e%18.%12#7%133%0C9%0F?#%02%12%02%06i7%7D%00%07%16n7%08'%1E%0217?%00=%16%1E%12%3C9%13%1C4'8%03%3E?%1C)%19%0E%7B#.$%3E53%09%20a%1At%7B=%1F?%1A%18)%19%1A%02%25%0Bn%7C%1B%01*%14&7%18%05%04%06%01%7Bj%17%08%00%13%01%17%14%09%03%19%07%00%1C%20%032%0D%1E%09%7D%22%08)o%1D%01%00%04-8%13%0F%10n%7C%1B%023%0E%1A%1C/%17!-%0A%03%7Cb%0D%22%1A#i%09%04%05%0E4%0C%1F%00%10n%7C%1B%01%0A2%00$%11%19:r,%06%1F%01%1E+'%22%17%3E%0C#%0A/%1Euy%07%19kk%12%02%22%3C)3%11%3C%06%0A/;%1D%25-&%02%1E%18%018,%05%11%17z%0A/%7F::%12)%7C-%7Cb%09%15(%0F%11%07s6n%7C%1B%12y7%0A%1D%1Ed%7C%04%20#i%18%3E%03x%22:6%20%052%0D4d%0F%09%12%05%3E%07%19%0D%1C%05%1F%14%09%14%01#%20%60%19%15$%0C8%1A9%20:%1C2*%06%05%096:f%11%16z7%08e3%00%01%02%00'2%22-)%09f%09t%1C%0C-2,&8%1A%20%00%08t%04&j'%03dy%08%12!%09*%01%19%1B%12%7D6*%7B2%3E%04%00%7F%1Fi7*q%1A%1C-1%0Eq%0E8%105%1C%00%07%3E;%14$9%1F%0F%1Ae'%118%1C0:%22%0F,%02%1D%191)%05%0F7$%0E&%7D%0C%133%0A%0C/%0D%1B;%02%25;!%7Cb%092%1A%170*%08%19%20%14;%12%0F;%1E)i%16%7B13%033%1A2&,9%18%11%0E%12%04,07nr%0F3h%7C%181%22%25%3Cp%022'/74g%02*:%18%3E/%15%22+uirs~%7D%60%7C.%0F9$%00=/%1117h7%12%06%13)%1A%03%7C%081%0Bl%06s%021%01%0A33%0D%12+%1B%60%1F(36#%158%0B2%1B!a%06%06%0E%0F%18'(%17%09&%0B7ns%0D7m%1E%0F%0E%3Ckk%16%1A%11%20:%0F%01ns%0D*hd'%14%3Ckk%16,%0E%0C%22%1A%16)%071=+%11%13%07%0F%01.%1D%7D%08%0A%1C%013%0A)x9%1F%13%22s%08!7%1C/9%01%1F%16:ns%0D-,%0A%02%05%0F%02%7Cb%0D3%026%1E%1E,dy%08%00%1D%0A%03%3E%0F%13)%0E*=%1Da??8%0D%1F%20e%1C%0D%0D%17#%01%19+%03%07%1Df2(%0E%1A%0A;/%02-(%17%04s%19.%070f%7F%04%06%09%1B%01%13%09$),7%0D%07%25%1F%16=2%13%0E,0(%20%18r=%17%13#%10%18%20%1E=%0Dr:%25%16%1F%0A/*%20%1B:#&/%1D)3%1B%222%3E%0C%18%1D%18%25%01)cr&,%3E%0D8%1D%04%04%08%0F%12%02;&kk%16$%07%02%1A,d8%11%20%0139%0A;%194*%01%18%06%22kk%16%0Et%25%00%1C8%03,;6%12#%19%04%13%0926%7D%0E*%00%1E%06%11%00%09%7B%1A%02%02%0D%03%06%14%25%06%03%0E?!%1F%01y'?#%16#+%7F%01%1B9~y%3C:%15##;8%07%0A=%7D/,%06+%16$%1B%0C%1C4%12(%22%1A/%01%1A%09%18%25=?%16%7D%13%09~%3E%11!%17%1B%09%1D%068%06%0F#%09%15%08%14%0D-%15%19&)%09x02%01%10%08!-5#%03%03%1F%107%1Cdy%08%1C%09:u!%17%1A2~%04%08%1B%0A%02$%04%1F%1B%10%09&%04'%03%20%1F,%15*7%1D%132q%18%148%60*(%3E%18%1A%1B%20t%0E%1C0%12,%18%0A%090%14%7C2%7Fkj%146pg%1A6'.38ntp%05.k%0C6%25%25%22.b%1A1?%00%25*%0D9.mz~m%60%7Fryb%3C%1E9+%12#=%0018z)%00%17%1E%10%08=2&%1F8%7B?%0F$%09%17s%03-%08(%0C$8#%05?%0E%11+%1B%60%1F(36#%158%0B2%1B!a%06%06%0E%0F%18(,%0F%0Akk%16)7%7B=%1D%11ns%0D)%16%05xp%07%7Fi%18y%25%18%0A%0E%1D%7Cw%0A%0C%0F3!%0B3-l1%1E%0C1%0F#?%0A%0E%0C%00%1C%16%03%02;%1C8%04#&%12$%18%07/,%09)-%18st%0E9%0B=y%17s%7C%1B7%1Bv%099.d%0A%07/%0F%0D=%01%0B%1C%20l%029.%02%14%1F)8s:6i)$%17)%0Co%15,.9%17%138r%22%12%1437%3C%0Cn%7C%1Bb%0Cdy%0C%13%1D%0D0%1Akk%163%16%03z0;?5%1C%0D%1A%1B8%17%05%04%15*%088$%7F*2=&%0A%03h3%02%08%03&%18!%02%22%1A8h%09%20%0C-%22%1C%1F%07%22%7F~5$rw,%1C:%11r$%1147%011%07&x!%14%20%0D9kk%12?&!%0F%16%07:%00%1E%081%258%18%0C%1A%00f%04%00%05*%0B%05%124%05=%13&?%14%04v%18e%1C5%19#%08%3C%02w!%20%1E%04%22uy%0A5*%226=7%00%1C%0C%03%084%18)%06&%02%02%0F4)&,=%0D)%1B%02~%01%3C%17~%11%04!%1B%18%05%10r%17%17%032%18%7F%1463s%06$%1D%0B$%12%04z%7D,%11%00%0Dz%1D%0E%00%19(%0C%07%116#u:z33%0A6%08,%7Cb%0D7%05%1F01%09%05(%1F7$!ys%0A5%1E%25p,%0A%1433p%08%09/%11%12w%7F%1405%11%02%00%1Bl%17%19(%09'%00%11%0A%00~*i%03%136n%7D%1Dux%056%7Fu%12'.(%2515*%25g%0D8$%0A//%1A05gp%7Bzkarvg+%17%22!%18&*%09*2p,%17%1E%08,%25%06%3C%13%04sv%04%1D%1Ca%06%18.%0Ci%04%22934%1C#%018%1E6h%1D%0C%04%0A%0F.3%1D%03#%1C%3Euy%072z%17%14%046n%7C%1F%01%1B*?%18%08uy%07/%7Fm%3C%1E6n%7C%1F7%04%06'%0D%1F%00%0D;8%3C%18%08%0D%05%049%14f%02%00%19%16:%13#r,%09%1F8,%0C&&,;)11%07.b9dy%0C:%13%1A%0A1y%1Ah)&%7F%06%60%11%3C%18()%1D#,%0B%7C%0B2%1C)y$%18a%18%1A*%02=%0F%09)$%0F%04%0Cf%7C%11)%08n%15y+x%22!$.%10%04v%0B2%1F%22%1394e%2003%06%3C48(%0F%03%18d%20%09%12%0C%001($%0A%1F0%1E%11dy%08%3C)%06%06x%22%0E%17ns%09%09jb%22%06%1F)%03%14%1D%20/%06%20%20%0D&?'%15%12*%10%18%03l&%7D%03%18%0Bn#%07%05?%0A%14h3%08%12%020%14%00%08/%1F%09%13%25-(%0A*%189%09$+%0A%12%18)%01%08%10i%7C%05:x!%198%14r/%3E%04(&1kk%12%12%20%04%17*%08.%0A(&=izy/%0F%0A%19~%0A,xn!:5%1E&!%3E%1A-%01%3C*%1D-21%1C#%20%0F%14~$*%04%22p,%03-%11%1C+%0D!2%1E%01%00%0C?!f%02%0D#%18+%122%18?%7D%12)%0E%00%1A%03%17%22ns%0D%18%09'/u:%07+d%1D%03%7B%0F%14%06%3E%13%7C%7C%0E%12&%12%0D-%173%22(!:3%3C%0E%08n%7C%1B%02%3C%07%13%078uy%03%08!l%12%25%1B%03%0D#%162%161%3E%1E%08,u%0C%027*%08q%3E7%10%1F%13w~%25m%00%0A)%7B%0A%20#%0F%20x%0C%1B%09%25*.%08%7Cb%09%22%09%1F(!%09*%01%19%1B%12%7D6*%084%06%3C%15)%0D28%0Ds%1F%03%15%19&4%0Dz%11%01%253%094)%00%08.#*1%12%07%10%3C%01%1E%13%01;%3C&%1Fc%0E%18,%1E%1C%1C%02%0B%07%0C%11%1E%0A(*&%1D%11%1A-8%20.%17:)%1B%3C%10%15%02%0D3%03%20%16ns%0965%1D3%0D%05&%0F%1B(;%026::(;87%0F%08%0D;%09%16auy%03.%18l!%1E%16.%02/%1C%01(%1A%1B5%20%1E%16;%0F%0C%08~w%1E%19)((%16%00/%0C%07%014*%20%1F%19-*%3E?%0A%08~$%12%255!(8%1Dkk%16%0C%16;%1C:%07%11dy%0C%01=%18%14%00%1B%7Cb%09,)#%03%1A)9%0D'%0A=%111(%1B*%14%00;zkk%16ns%0Dkk%16ns%0D%0C%20%06(%07#%0F%1C#;dy%08%1D%02%1D&/%3E%1A%13%3E%1B&%0B%1A%078q&x%08*%1933%0D%0F%3E~'%009%18%11%0A38766%3Cdx%0A%7Cc%0F%3Czb%17??)%22%20%3Ep%22/?++585%22%20%3E%7C%06%04%0C%0Ft%03%00%08%07%02uayp%7Dvmig$%05%3C3%09&%25%1B4%20a,%18%0C%1B%08i82=7::%06%12z(%10*%085%01%02%0C??%0D,%09%20%17))s%16=%60/%25%12%01%60%00%13ps%06%1C'%126%06%0C%1B:%3C%04%0D%7C%15i%07%00%3C%1En%14z%03n%7C%1B%03r%17%0Fwj%05%22p%1F%0D%7Cb%09&%3C%14%0C%19%18%0C%13%01k$%09%0C%1A%03n%04%00%0E%0F%06%03%04%099%12%0F%1E%18%1B.?%07%15%01%00,,%1F37%7Ft/%0F%18%1F!%10s9%1B9%0F;%06%1D%0A%15%06s%05%19#%1D%11+~%043%1D%3C%09%08%0C%3C&%18-%02%1E='/*%1D%0Dof%0A%03.w%08f%3E%05%19%0Cl%1C/%10,)-%18%7C+%7F%18%155%0Fpx/%085%0C%0C'$%60%11%1A%0D:%06;:*%22y%7Ba%07;&%02%18.uy%03zkk%16%7F%00%25%18%17d%1Fp-%7Dk%18%3Cu%0C%19%3C7%1C1s%02=%01%7B%05r(3%04z%03%7D%0A%7Cb%09%11%01%0D%1A%17!%0F%3Cw%0B6%1A;%08+%3Ec#t%05kk%16%13t%12~+88%05%0A,k%143)%3C%0F%12f%0A/%06%1D%0A$%1B8%22%16%18%05!%03,z,48v(z6%1Bs%00%7D%25m%3C%1E%0C%18%0C%0A%1D%0F%0C%00%0A%007%3C2%187%7Cb%0D%0C%1E%0A%15;%7F%052%1F%08%068y%08%1Bkh%0E%17%09w%7Cb%09&%00%0Co%0A;)%7D%17o%12%7Dv%3C/%1Af;-,x2b%7F%0E%09~%10!%1A%25%08;%11%20%1F.%03%3E%1Ag,%07%08;%11&%06&%04!%13uy%03%19-%10%07%12%03%097%7Cb%09,%1A%1D57#%0A%3C%03%1D%1A1%0C!%18%20%1D1$x%04%0F%1D%1Cx%19%172%20&%20%1F%08#8%1C%132%172%16%01%20%1D%09(%04y%1B%3E%14%3E%3Cns%0D%19%0E%20%19%22%1C%14%7Cb%09%09%25%0356xt~%164!%191%7F:0%07'%07%22,4%203%12%07%7B%151%20-n%7C%1B%08&%0B%01?3(%1E'%1E%0C%0B6!0%3C%05%1A%3C&%25.%0D%1B%07%06%09%089%16?,%03%0C%09%20a=dy%08%7Cb%0Ddy%08!uy%07%20%07%1B%09,%0D%12%16%3E%11%18%09%1A%0C%0E)%18;#%0F3%16%00%0D2vh%19%11%06%0A%0D+%09%7D*'3h%7C%0F4%25)%3C?%25a%06/*$.3g%0D8$%0A//%1A05gpxxoassg+%17%22!%18&*%09*2p,%17%1E%08,%222%20%17%03%7Bdy%08%17*z%11%3C%1A%0A'%3E%12%18%7F0d%03%13%04%02%11%18%06%12%3C%20%13%04%03%14%3C%17%08%11%0F%033%1B%1E%16%0C%05n%7C%1F%1C,q%06y%1Di%0Ady%0C%0Aa%1D%05r%7D%019%1D%15%0Fkk%12%0Au*%1B%10%058%19%047*%12(%14%06y%18*$&%0A%18='%00%09.%0F%00%07%0C%002/%1Eb%01&%12%0C2%09%06x%11%18%08%1F#%11:&%13uy%03%008i%1E(%25%08%19%18f:%0C%22%07n%17$%051?%18?,dy%08%13uy%07%057a%1A%02%13%7D&%7Cb%09.%0C%18%094%20%18:&j4%13%1B&%17%15%02ns%0D%01%0B%1D%0E%1B?%22?%1E,%18%0Fkk%12%3C%22%06%01%18%12%13%10%0E%7B0%03%1D1n%7C%1B%05*w%08%03%0B39-:%0C%3E4%7F)%0E-o?)p%0A%25%12%17%0D%1B%7C;%15;3%0C%09z%3E%05%1Fs%06+.%14:%07%1A-n%129;:%06?%19#%19!kk%12%1A%03%0A~%202%3C%0D%3E%07%0F%17r%102!2%22%098%00%0D5%14%1D%13n%7C%1B%19%3C/%7B%1Ahe%0E%12%05%0D%00f$%10-+8%1A1%15$%1C%1D%138/!%08h%1B'%00/%0D%3C!%25%15%06%16i7$%0C%07(/%05%03%12%0D%1D%09%15-%16%1C%0C%17'%0F%05y!ii%7B'%22-%18uy%03%01x/6%0F%02,9%0A?8%18%1A/%60%03%3C6%12%03%18e!%17%1Fy%1E%05%1D%0C%1B%7C3e%0A%0A%7F+1%1F(w&*%3C2%1A%06%00%22.%03,09(%1A21w%0C+2#(%10%1A%0Bhuy%07%3C%0D%13e#dy%08%18%0A%1Fu%04w%60%25%1F%04/%1C%1E%14%0D9(y%13)~9%1A%18lh%05%02%006%12f%03%04%19'%3C%22%0A889%08%07%01t%13%22:%3E%0Aw%0D%0C)%12%20-%3E%3E%188%04.%0F&%1F%01%0F%08%18=%1D%14z(z)2%0A2'%20%095%1A'%00%1F4%17%25;%05%7F$%01e%0E%03%02%0B%608/68'8d%033#%19%0A4%03%00%12kk%12%0Dy%09%0D%188?%0C%09%1Dk%1C%08w%3C%0F1a%1D&r%0Fi#%0A/%20%1C%03%01%1E&z%3E1%07(+%027:%19%0E%0C%0A%03%09:/*,kj%14nr%0F3h%7C%09%20?:55,3$;748ayb%1152%0D%22=-5%25m%7Dvid%7Fm.%00+$%1D%05z8i%60%0A%18-)%14%1B3(~%040$%18%03,+%1F%11%03%17!z%0A%1F%25%10%22,!%15%0D%17r?)%02%0A(%19%0F-%13%1C%0F,%045&2-y%08%18%12%0A9&%1F%08%11,%0Bz%0Bm7ns%0D)%18%1C%0E&8%1Dk%60&%25&(%3E%14%06%0D%02)=8)%0Er:i%02%01r%03:%0F%1B%02%1597ie~;2%1E7uy%03.+%3Cuy%03s~%0B5%20t%1B;%20%18%1C-%06%1E%08i=2r,jg9)%0C%1F%1B%06%0A7&%1F%60%089%02%0A~%01%062%04%3E%06%185%1E5%13zk%09y3s%17,%00%25;%7Cx?&%03%05x%09%14(3)%06-%3C%16%09%152%20m%11%11%14%0C%25%0F'-%0B%0F9%012%05%09'45%16%05,n%7C%1B6%05%14%1C)+b%3C%25)#8f%0F%15%3C%16%1E%0A%7Dt%0D%0D:%17&7%0C%04#%25s48'#5%3E%05%0D%09i%19ns%0D#7(=%031&%01%13%0Du%7Fv%3C2:%0F%7F%7C%09&%1B/%05%7B1%09%01%22,%3E%1A1%09x&8n%3E(%0F8%02%604%098.x%0B%3C%7Ds%03%16o*?%20%0C-+?%12$%07%02l:%0E%22%20%03nes4%1B:#%161$x%1A6i%253:%178%18%7B%0C=85%3C%0D%19%09:%1B%13%7C(%03%07%0E%08%7F%22%13%7C%1F1%0At(%08%0A%00ns%0D+m#%25;1%0Dm%08%22%15%226%7Cb%0D%11#%1A%60d!q%094m%15%05,%05&13%075%07%16*c%0D-%07%1C%13%11?%16x%7Fn?%1C1$%017uy%07$%1E%60%12%7B%0B%1E%18*e=%0E%1C/;f*('$%20uy%03%0A*7%18,$8;%1B%25-%00%3C%25%1C2.'3/%03c%0E%06rx%005,t;%037%1Fx%0D?#%0A%3C32=%20%11((t%06%1Em'%19%1B%00'(5.6%7F%0F#%1B3%20##%1E2;%0A%25,=$2%00%03/nh%2042%1C%17uy%07$%0B%14g21s,%10%1A%11v!%20#%22%01%0D%18%7D8%258%02%12%00;%14x/%1B%1B%15a%1A%259/%7Cb%0D%04%22kk%16!%19%1F%1A=%00%0F(%25%1Aa:&1%7C%1B#d%080%00/6%04ns%09%0Dl1ns%0D%01-%22%0C%10%0C9%1B%112.%01%06%16h~48,%15!'3:;3%07%00%17,%024;9;?%001%3C%3C%0A%0Dz)1%1E%141%14%141%02q%1D%055c%20dy%08%0E4&*//1b%1B%0Bn%7C%1Fh%01%16:?;%15%063%3E6*%25%1A%02%1C'*1z%02,!%0A%16.%16%00%03-7%7Dp%22%0A%0C%05%08%0E%04%04acy%09%0E%08-%01%18;%22%1C%11%25-%13%1B%0Cog%1C-%08%00%13uy%03%12%074%3C$08(*%00%0E%09%20'%17%01nr%0Fkj%146pg%1D5?;$87u%22*2;7yf%7Dvgvihywyb%3C%1E9+%12#=%0018z)%00%17%1D&%0Fvn%1A%07q,:+=%1F&%07%0B6#%070#%1B%14%14%06;/4%1B8%0A%00%06%06%1F%01%12%14%12%1Ea%25%0F%101=%09%60%0Ft%07%18%0C%00x%25.%04%0F%1D%1Bu%0F&)%01#$3-n%1B%3C%073%1F##%0F%0E%22%0F%1C%06x%00$(.%11#%02%7Fx%3E%139%033%04%1A%3C:%18r%1F%1Dg-0%0A%1F%14%1F%3C%0E%1F%25#7%13q1%17%11#%09+%0F%7D%3E%13/%0E%007%168%05%00./%1B%12=%05y-h%111'?%7D#7%18%03%1C(8%08!%22%0E%0F%03%25%13dy%0C%1A'.%05%07%06%0A%1C%1E9%0E/,%11%058%0E%25/%03s.?7%1F%05%01x%20%01hb%08%06%3E)6i%7Bdy%0C%00%1C8%25%00%02%1Fg(,%06%03i%11~%189%0C%12%60%1C6%09;-a%04%10%1A%20%1Buy%03%1C)4)%0A6%7Cz%144%0F%13%0A/%1C%19%099%3C%1F%3E%12;7%1A#i%18y%06%06z%3E%12ns%0D;%18%16r%04%0A%04%0B%11?%0C%06%0D%3E?%0E%05%3C%7Dl%1C%7C%11%20%05o%16%00%10n%7C%1F%0A!4?-%1A%20%03(%1D4.%1E%1E#%20%090uy%03%03!7=%3Cx%3C$%18%01y%19'z(uy%07%1A%7F!%60%01%18%08%14%1F2ns%0Dy659r%0Ex-5%09%04%06w?&.%08%12%02%3E%189%0F%7Ckk%12%01')-1%11'%18,~%1B%3C%036%06%06%1F*?/)%20%1F%12x.%0D%03(%1D%0C$y%04%0C*%06+%02%0Di'3v(%0B%1F9.%1B%7D%0D%14%02(/%1F%1Ek%12%18%0F1?%16%07%0F0%0F,2d%03'%02%07(b.%09:%1A=%13:%0C-%20%11%3C*%18.&%167.w%09%14%18%15%11+%1Eva%13%1Ess%05%17%1Es%07:$m%15?r;#4%18$;$%1E4%16%7B%0D2+=%11%08/.'8%09./%04)%7Cb%09%17%09%7F%7Cb%09%0F%1A4.$%19#(%0A%10)%0A)%0E%0A%18'%08p%13%00%10%166pg%098%3E,a%0C%3C6%25%25%258nk~%7Bm)'5%3C%22.%25'7:$$g%7Fj%60sr%7B%7Cu5%053%0D%22%0D%169s%7B%0F%0C(%7Bx2%16%0F%3C:)'%0Aa%11%1F%13%20%1B%14%14%1E(%19%7F6%1E#r%099%08%01%18%0A%00/%1C%16%07%0B%02*%0E*%208;%05%0Bc%00%09%01z0%17%1Aq%13%03%20e%19%0C%0E=14%7D1%09v1%08s%00/;!%01=s%13%00%0A%04&'/7%0058%0D%03%7D%15f%12u-;/i%7Cdy%0C+h%25%15%1D%06o'3%04$)%7Cb%0D%16y%7B?%08z%25%3E%0C%7Cb%0Dx%7C?1c=(%3C%0C=%0A89x%1B=cx%0Es)%01h%0C%25%7B%0F:3%0A%0C%3C%17?g99%1C%06%16)-v2kk%16%0Edy%08n%22%250%19y%12%16%09%10%0E%18%0D):%0C%1A%05%10%13%1B%04%25v%18%20%7C7%06%1D2%1D%0Cx%13!=%03%01%151%07:$1q!%0C/%17%0E%20%00*h%15.%19%7D8%0F7%0C%15n%7C%1B&%12v%2267(89&%06%167%08%03%20;ouy%03%1D%08%20;#%20n%7C%1F%1C2y%08x%0D%60;'%01v0#'%17%3E%05%1A%122%0A.%05%08%18'%05r'%0F%1C%3C%07n%7C%1F%04%25,%09%065%03%1A;%7C6%7Cb%0D)z%7Dl%04%7F).7%0A%1F%04%04r%1B%11&;%0A%03%05%7Cb%0D%0A$%07%15uy%03%7D%3E=g%03#)'%01f!6r,%0D%16%7F%15%086%0E%20%22$n%7C%1F%22ns%09%073b$%031y6a=6%06%22%609%08%16x%0D%16uy%03%1A::%22%3E%142%16?8%7Bp(%256%19s#%1A%02%1699%02%0F+%11d%3C%06%00%1F%7Cb%097%11%003%1D%1F/%1C%0Ajg%054%139%1F%1A%1D6%02%1D%08%03x%10%0C/:%06%02w(%3C/g%015(%14%0B2%11%04n%7C%1F%091%0E%1F'%60%09yq%7Fz2%0Ax&%0C%22%7Cb%09%20.%7B%1E%1Cns%09%00%13d.1:+;%09!5%1E%1C-7%01%17:%0F?%02%20%0A#%19%1A:%01v-v%15g%1F%03%3E%1A%00%03%1C%14%0Ckk%16%08%199912%01+%7F%1759%1A;n%7C%1F'%7C%13%0Cz08%1E+%184%0Euy%07%02%00%0B&ns%0D%0B;uy%07n%7C%1B%60%0Cr%07*%0C%1D&4-%0B-e%7C+(/%0C=87%1B!i%60%08%0A%1Bw/(,0%03v%1C21%17%0D%06%00%09!%05%3C,oh'-%01%05%20%1C#w%18%0Cj%17;.%008ia%1C%109-h%16.%16#%1B3%021%1B%09;3$%06%04n%7C%1B9z%04%01!a%60%1E$%22%0F%0E7%05%04%0A!%207=%0D%18%05%3E?%1E0%18%094b.%00%1C80*!%14n%7D%1D-zm%1A;84%3E-*%3Cy%179.%3E%20=#g#%22%2259$/%22%203?.mz%7Dkdyx%7Cb%3C%1E:-'%3C%60&%7Bq%0A%1B!uy%03r-3%178%05%1E!%0Cf%06%099!2%13%0E(*&%148%01/2:0!%01%16%0F%03%1B%01%12%0D%18,%17%1E,u/%3C%1D%1A%1A./x(%1D%1F%08%0F%06%60%15;%20;kk%16%1A%0Es(%00%1F%02'%00%0C%179%1A%1B%7B%1F%1Ee2%05%7Ckk%12%3Cvn%7C%1Bb:v=%01%01%20$*n%7C%1F5-%25n%7C%1B%00.u&&8%0A%1B1%0F%0517~%25%25-%11#zx%044%12%18%1E%15,%1E%0B:%0Cu%7C,0uy%03%7Cz8%12%0Cr!&%1E%11x%00%3C:%181%7F%0C1x%3C2%0A6%7D4%10g%03vn%7C%1Fuy%07%05$!%0A%1B%20%19%20h%1D%25%00&z8=1,%00)%184%0D%0A%25x%1A%00%0F;%25%1E%0D%11%0Cx%13)%60%113.%1C%07l'%1D1#%01%60%60%04&%13+!c%1Dy?w*%16%0E%0F%04z;&*xz-!%18%1C%0E%1A(6*%7D%00:%0D%0E%00%03%25%3C;?;=$n%7C%1B&%0E1?-%7Cb%0D%16zkk%16%7C%029%0F*7%06%22%1C%14%1E%17;%07%18%7Co%06%1C7%02?(%03%7F%1B~%0B,3sq%0F%09:)z*n%7C%1F%11%7C73%1C8%1B%25;%05+67.r~%0B/(%09v%3C%16%0B(%09'%20v:%13%01w8%1E,9*%11%0C8%12d%01%25rv)%1F%7F%0E%7C%19%1B9))%1E%7C1a%20t%12?+dy5%20%0D,%02%1F%08%0Ckk%12%0F-*%1B.;%7Bdy%0C4%3E9s%0E82%09y%0C~%7D4%16zx%00%1F)uy%07%0E6%114y%06s%14/)~;%18kk%16y)%00?%0Dcxv%13%18%20#%0C+;%0D%17%16%11,n%7C%1B%17zsy7%17uy%03%016%0B%25ns%0D+%16uy%032%17%7Cb%09%0Cx~%20;=%04/zoc.,s!%15c$%05%1A%16m%22%02%16%0A~%12f%0A;)8%11)-%22%1Cx%11%1A%0A%02%05%00%60%13%08%0C;;8%142)'%14.$=%02;?=:%3Edy%08#%00%25dy%08%60f(%16n%7C%1Fcns%09kk%16%12%09$8n%1C%0C#%20%0Bh6%08%16%3C%04%3C%03%20%0Ay%04;%11*#rkk%16%0F%0E%0E%7D*5%7C%0Ds+%0Buy%03%114kuy%07%1E%22k5%7B%08*:?dyq=%14h6%0Fdy%084(x3-%19hb%0082y%156%01%19%12%16a3,%16%1D%0Aif-9%07%09%1D1r)%07%04j%15%098%25%1C%12$%0Cv9z%14%1B=%10%01%17%13%25%0C%059w!3%1A+%02%0B%0C%06,7%12%0447&u%08'%0F'%05%0C#%1C(%01%08%18'%25%03(z/%06%0C%0Ff%0D%04:y%16%02;8%1E%18%18%1E%1B%09;$1%15%00w9%1A%1A%3C%04x%22$%09%01%02%25%1F%1A.ans%0Dx%156%19%026%7Fu%14$4)%22%3Cp%00%20?/71g**:8%3E*($%200%3E!%20g%7Fjexyyvu5%053!%1744%1B;2%7F%3E%09%0C%19,*:;=%15(%3E%13%06-%03%04%02%1C%3E%06%12y%1A%3E*%1A#%1F#?%3C~,%13%22%039%1Au&%0A%1E%14,.%06%05%18%11%3E;-%3E%00%17%09dy%08%083$7%7D%16(?-2%7D%25%0E?%12r%7B%0B%1D!;%02%0F'lbz.%01'%1B%3E%1A%04/%03%12%19%07%0E%0D%1C%1Af*%08%0F?%1B%1A%06%05%0F%0B!%1D%1A8%06w0i%25&8%0F*uy%03s8%1E%09%0C%05n%7C%1F7%0A%04%03z%18%22%02%12%186%13)2dy%08%12%06%1F%05&%17*%06%22%0F%1Akk%12%0Cp%11y%006%1A-%7B%14%11%163%0C%19/7%25!%19,%1B%3Eiy%0A$%14o%032(?6m%14%3E%0F)%0Al%1D%03,%7F+3csv!%22%18?%25.%03%07#%04z%0A,6mc%13dy%0C%18%02%1B%14%04z%08e,v,%0B%0D$%1B%02%1E)=%14%7C%11%7D%25=c%25%11%7Ckk%12%1F0,(k$:%20$%0A(%112%05:%06%0F),w&%0Ao%16%05%05%1E=#%18%20tn%7C%1B3%0Fp%1A*%1Ba%1D4,?%3C5%0A19y;2ns%09y%1F%1C#%13/%0D%08uy%07%1B+%128%7C%11%07%06%11%22ns%0D%7Cj3%0A,=%7B%20g?2%00%1A5%15%0A%1B%1D%0A%7Cb%0D%16x)%20%1D%7B'#%25.c%05dy%08%0A%60%20%0B.%1B3%04%09,#%1C%03%09%1E%09%25)%1A%00$v%03%0B%1Cc%1A%04(%1F%0E5%1B%08n%7C%1B7%04u%0A'ouy%07%1F'%1A*,%07%03~%16c%03%04%13%1F%16%1F%02%0D%04%20*9,%22n%7C%1B%12%1Edy%08%1Bc%22.%22;%1B%13%091%09%1C%17%11;%20%08%1A7%16z%13:%17%3Ea%091,%03)%132%00&%1C%12%1A'%03#%0Bi%3C%1C6%06kk%161%0E1)%3C%19%200%06v%1A!$%22%13-%0B%03%13%0E%7B9%113%22%023%7B%13%11%015%1F%026%11%021%1F%25%14?%0D%14%04%1F!%1F%01%02$kk%16$%00%00=%0Ce%0D%03%00z!&8%02%0D%22k%01%04dy%0C%0E:%01%08,'3;%0A%1B%0D%02h=%09%03(z%03%1223%19%7B%13;/,%22%0C%0E%18%06)%0E%05i%02%1D2%0F#%0A%15%1Dtn%7C%1F%15%00qn%7C%1B;1%15z%7B%18%01%3Edy%08)%049%14%0F%0F%1B$%11(%0D%7B%0B%60%19%09%05%08%15!%25.%1D~0%00%0F%07%0D%1C33ns%09%17%0E%16ns%09%1Fl%0A%0E%06!%1E%12'%0903%7B%1E%02%20%1B,xm%15z4%08%0D!%00%02dy%0C%15h%3C%03%19?7%3E%0A0&%09%1B'%3E-%1A%1F%101&%00%7B%1C)%15%20#%1C&%17%11%07(n%7C%1B%1E%7F%032%02ae%0E%02%1E/7%01ns%0D%1F%01%00%00%00%1F~%1E%09$%0A%05%05%17%05$%17%25%0F%20%1D,%08%19%0F.%1D%0A%0D%019hh%3Cdx%0A%7Cc%0F%3Cyb%0A$$/.n%099'-*%3C*%7C%1F$*#y%1193$9*p%19%20&bldzu%7Fb%10%1C%0F,%01%0F1%0A%02%20%3C&3%22%0A%08%3C%0C%0C%11&%033%0F7%11%1D6%08~%1B%3C%18%00%19%1F%1C%1D%09p%0A%0A.%17(%03%05%0F%1D%01%08*%0A8%1C%18%0A%17%1A%036%14%0E%00%13%0F%13%19%09%13%13)%1Ch%0A9,%08*3%0A%1B,%223%19%19$;%1F%18%1D%02%148%0F%18%1B%0A%0F%189o%11%0D&%08%03%0A;%08%10%0F:4%11%05627%18#:%04~%1D%1B%19%11&%12%2017:&%089!%15%7F%0E3%0C%1B%12%0C%13%7D%0B%1Ce%02%00%09:?%02%0C%03%18%161(%121%04%1A2%22%1A%03%7D%19%18%1D%0A%20#%1F%18%1A%1C%04%0A%09%0F*%1B%18%0D%7B%3E3%20p%12z%0C7%08%1B%05%07*%038%10%0A%0B%0E%11%22%13$%1F%1A$%02%03%1C%1F%08%111'%20%7B:7%0C%07%1D%03%128%7Dj%0D$6%03%25%20%02%01#8%20&%03*1%03(%10#:%12)%22%00%0A%25%184#p#%1B7d8%03%0A$8%09%05+%7F%7F%03%14,%02%1D!2%7B/0%20?.*87%06%0209%0F%0A!%078%04:9r$%1F%3C8%02%20%25%0E:%06*;~%3C&z%03%22%03!#%0A):%1F-7%0A,%19%17)%06%0D.%7F%0A%11%13%09%0F%03%1Fo%00%09%06%114a%18%22*%197%10714-%1C)%18%111*%25if%20.%7F%0D%60%1C%00qy%25m%03%25%0C&#%15%03%0A%00%18%7D6%05%25%0E%1E%0C%18%1B%09q%60%05o(%20.%04%22%3E7'u%0A%0A2%11%1B%1B%06%05%12%1Dr/%1E)%183%02%02y/%0E520%1D7+%06%25%07%7F%14%11h%3C%06'%012?%13%15%3C%051%01%20%10%02%1Fi7*%09%02%19%1Fd%226%02$%1Ca23%18%1B%1D%0A25%20,,%06%3C%06%0E%05%1E%3C*%09*)%0E(%3E%113%0F0%1A%01%0D%01%0B%3E%20%1D%0E%1Dw%13a%7C%0F%11v?%0A%25%0A$%25%0F%3C%08%06%0E),%16%1E-%0D%1C7%16%201'v*%09%220%11;/%06=7%11%1D%3C%0A*5%7D%7B0f%1C%13%08#1%1E%11.?%22%1A$%053?%0A(4%07494%14i:$%11%1E(a%7C%0E%0A%1A%0F%11x&%0Av%3E%1C,%0E/%09%10%16%02%04%00v%08%03%22%20!?)%02%7B%14%20~3%15%2048%7F%0A%13%7B,,y%12(%1Fj-%7C%17%259x.,n6?t;!%12%02:/%0E-m1%02%05&9%1B%1F%05%02%09%08#%11%1D9%03%0D%0D%12%04x?%7Fj%06%0Eq,%0F%177%02%0A%1A!%137:%10%0A%0D-:%3C7%08w%3E%1A%1Ap%08~%12%03%09y%13~?%14r%0F%0F%05%00%12%04%07%19%1F%10%25%25%10~%07%209-%1B%0A!%1B%60*%17%0D'%00%14%0Ay%0E%0C%00%16%12)*+%3Eg#%08;%0C%20%1C%22%03%0A*%1D%01%1C%0F.%082%193%18%0E)%14%02%7D%14%1A%1C%00#%0E%18?'%0D=%3C)%09+%1Cd%1C%13%02%0F%14%14%09%04%19%7C%00%11%08%043%1C%1Be%22%08%0E%1A%13%1E%00%0D%08%1F0?&+%0C%0A6%7B$%11&/?%14%1C%0B%7B#%18%1F%1B%20)$%3C%00%7F*$%1F%18%11%13(%0A%0F$bg%11*%3C-9?($%20y%14.,$%220$%22.%25b%0D5*,k%0F+%22$68n%0B1&mzynd%7Cug%07%15%14%3E%0B%0A&%03%19*6#'%08%15%1D&%0D%1Bi%18%0E%03%22%0C%09%11%011,%0A%00%11%06%00#)%16?%08%22%0A%3C%3E%1A%02%02%22%0F%0A;%1A%04)%1B%1D%1F%11%00%0C%25.%11%7D2%0A%1A%18%12%11&%0A%0B%08%13%06%0D%0A%046%05%18%00(%7C%0D3%0A%149%22%00%12&'%0A%0Dafy%1B%1A%0F-%07:%02%1B%0D%08%1E3%14$%3C%10%06%07%17%0Cy;?%05%06%0E%0F8%01%25%0B~%7B0%11%0C%04%1Az%00%00%02%08~:o?%20%0C,%0F%1C7%08%0E3)3%01%0D%05%0D%070%03!%18;!35%0A%11%1A%0Fh%11%0F%0A%7F%1F%1D#%0A%06$%03%20%11%0A4&%0F1?%20%00%09=(%01!%08%00%177%01s)2%04%1D%1A%0A%00%1C%252%11%084&9r%20'%12%0F%0F%18)%1F%08%0E)k%1D%082%01%05i4%18%13%0D%0A33%0F%12%07%1B19%7D%10%08==%11%09,%01%191%1Dx(%1F%1D%09##(%00z3%01%1Cv~#2%11%0F%06%18-%3C%3E%22y84=%7D(62%06%0Ddf3%0E%0C4%17%057%22%08%18b%08.%0A%07%1B%3C%1Ew%22%19%08%09%1E%16%054%16%01%1C%00$%22%1Bi%3C,s%188f%0F,/%0F%0E!y%00x%0Da%03%00%10%12%1F8%12%04%00%0E%7D!%13%08%03%0A%0Fa)%1E&%1A)%3E%1A%0A%17%1C%0F%1B2/%20%0C%0D%3E%16%1C%02%7D%0F%1B)%0A%09?%3E%17(%02%04%1A:)%3C%7B(%07%1C%0A%1B%0A%03%3C):%1C;%00%09;%00%22%0D%10=%226#'*%1A%3E%11%18%60%11y%0F%60%1B%11%0D%1B%17n%1B~7%1B%7B%3E%25%0D%12=%1D2%25%0Aq9%22)#%1D1;%188?z%11#%0Fk%25%113%1B%7Fk%12~'%02%08%17!%1Dt8:)&%18r=%22=&%1D(%1F%0B%0D?%11%0D9%7F%11%00/):w%13%20r%08%0F%19%1F%1D%11v%19%1A85%20&)%082%22%7F*%19%05%0D%14%19%16$$,%22%11q%12w%0B#188%1Ao%07%1F0/%3C3%1C%02%07%12%22.%14%7F%17%1F40%06%01;%3E%02;%22%07%22-w/$'l8,%03%25%0A%00%0E=!%1F?.%06%0Fa3%098$%19=1%7C%12%7C%063%08y1%1A%1E+6%0C&s%0Ch$,8%01%1E%1C%1F%0D6f%016')%11(8;1%3E3%1E?1e%075%7C8%1C%3E%19%05~%09%0A)-83;*(-%03yc%12g.x%3C)+$,5%09%0F=?%7B%098%07%3E2,%00%047o%09%09%18%19#%14%1E:%13%0A*%13%15%1D%05%12%0Fo%11/%0A8%0F%1B%05%0A%07%20:%1E'x%05%0A%1E%3E7!%02%00%07t%16%1A,%0A%14%18b!%08%7F%04%1C%13s%10%02z%17%13%1A%08%0F9%1A%15%094%0E9m%12=%07,%0F!%20%0E%04%0E%3E.%1A%3E%13%20?%18;%01*%0E#,%1C%11)%00%1C%0B%13x/%18%056f13%0A%0F+4%022%019)%048%0E%02%7F%0Aa%07%14%7B$%20%1F,%22%22%1B%1B%1A%0E%03%11%01%186%09%12%1E%1F%0D%14%02%05%7F*%0Db%7B.xw%10%11%00%15'%1F%1De-%00*%08%183%02%06%0Ce%1A%11%3C;%02%03%0Da%07%02%08'%1C7%00%25%08,1'/%13%1C%08%3E%03%0A%0A%1D%17)%12%1A%04%3C%196%1C%01%00%18%3E%12%19%1A#%0A~%11%05%18%03r%06.%01%19p%20%03m)%0E%07%06v#%098%12:4%00%3C8j1;%1C3%7B%003%0C0(%05&%0A%0F%3C%03s5%18(%16%60#%03f%03%1Ag%09&=)%0D%1C%0E/%007(%1C%1B(%25%1D%10%13%18-%00~*%15%1B%08'$1%13%09%15%05%0Bt%1C%602%00'%182%072#78%17%1A%15%0A=%0C%01%06%0F%3E%094%1B)r'v)!%0A0%08%7F%3E%18%1A%00%13'%18%116sg%0D59-'8'=5g%15#+%0B5/%0A%22%3C;)gp%7Cymizm%02%02%1D%25%01%00#%14%101%3C)%22%1F%1C%06,%02'%25%1A%09%0A$%0A%06%18%07,%0D)z%1B5%0A),%016%12%00%00%05'%18%13%7F%02:%14%18d,%06$%0A%12%7Bz%00%06#%08%12;.%0A%22%3E%16%05%14%0E%0F%09%09%01.%3C%0F%12%1C%0A%00%3C)%1C%09:%04f%09#%01zy8e+7%0F%06#%00%18%16%11%04%0A%04#%09%0A%17%12%01%13%11%09%0B%19%1F%11%1E,%00%08%1C%18%12%05%04%04%0F%0C8%0Cq'%0Dt%11%0A%04%19=2%05%02%10%0A%19%0C8%60%22%08%1C2%07%1Cy%3Cz%18%11%04%18%09%00%08%60%0E%05%7F%04%1E7%00%04%02&.a%07%02%06%3C%14%01(7%02%1C%3Ed%09%18%22%09,%19;%13%06'%60%17%06%13%1A%14h%3C&1%0Ay%00%3C#%0Af%00.%12%25%14%05%22%102%0A%0D%0E~%167r%0A1%0A%12h(%15#x%17%13%7F)%07%0D2)%036%224%10%3E,%00%03%22%20d%0A%0A%7B%7C%12c8u%0D4%1C)%3E3%22/t(%7D2%04%094i%07%20%3E&%1B5%0E%1B%09xl?%11%063%22)%09.#%11%1A%1Ag%7C%0D~7%12%1A%04%16%007%14:!%0F%12,=%19%25%14:y?1%03%0C%07%07%1B%16%60%22~&%0A%11-',%1F/!%0F%0B%08%1C%178=%05%7F%0F%14%04%08%00%03!%18%1E%1A%22%119%184!%188#%08i%09%18%08%0F%18%14%00%05%1A!%1F7%0C6%0A%0D#6%0D)%7F%3E%18%11%09%12%19!%0B%02%18p%018%087x%0Dyz*%1B%204''%1C%09%20%09%7D%04%10%05%60s~/%1D%13%09%14%3C%20%15%13%0A%05'w%03a%18%10%0A4;2%02$%3C4%00%20(2%1D%07%00%0A%3C;9!4%06y9%0A%01a2%20l%0A';e%08%0F%7D)%14c)%0F2e%13%13%09%02'%09%0E)&1#%1B%1B%028+%3C)%0Afz%06;%7D:%07%1A%13%7D*%03f%01%0F%7F%1F%1De%00,%0F%0F%182-%14)%09/%1E%0A3%0D!t2%1A%0C!vr%60%00%07%22c%00$-%13,%05:%1A%1C9%09!j%00%1A%00%0A#%18%17%12%14%7Fx%1Eh%098%1E,/!%12)%19%0C%08%12:%03%7D%0A*1%1F%16**:%01x*%00%1A6%05,%07%05%1A8%012,%187%1C%00%0A+=%3C6%1B%12s*%7D%089:*8(*g%01%22x%00%10$:1%7F%1E%3E%19%19%00&%01l%11;/%03!nc.%0F(%7B%14%13r4%129%1A%07%7D*%0A%0F%1Ed,(%0A%16m%7D%22%06%3C%0At$s$%7D&%16%12=t%1A%1F%1B%13%0F9%0A!%0E232%00%08%106'%0E%20%0D%0B%00y32%16+1&%0A%02%04%1C%18%09j,%1C!1%7F%19.%056%60%05%16),t%1E8#%0F8/1%20%00%0A%0C;g%0E%03%0D%05.%133%17%02?%15%19%1B%03%1E%060'%7F%05%20;j!%25%0A$%08#%7B9,8%3Cn%00%022%03$*f%1E%02%3E=1f%3C$8%0F%18%12%0Cx%12%1F%09%19%1Dv%02%04%16;%0E%068er!1%00y%0D.;=%04%06%07(6%08%09%11%05?;%083%03%00%03%02%03%1B%0F'#g%1A%00%1C4%1E%1C%05q~%05+%25%3Ex%00%03*)(u,%0C%20;%0Ar%05-%12e%122%0Ac%1A1%18%00%20%1C%1F::u1%0A%157%0F%20%1F%00%14(%0C%10%07x%0A'%11,%0E%04%18%05&)%1C%063%16%1A%1B1%07)%11;%06%00%3C8%18%0A8%11%14!%22%1A%0E%1D%1Bl%14=%22%20%0D38'%18%1De%147(%18%0F:0('j%0D%19%121%12%08%11-%08%12%1As1)=%15$#%09?%00%01%19&8%19)%16%092%07%0F-9%20&*%0B1%25%1B6%20%0Fi%1B*%17%02%1B1$&q)%1D2%1C,%14#6%0Eb)%16?%0Ck2%18*%0A%0D,%1B#%02%13z.%11!%16%05%0Bh%04%1F%0F(~%15%05?%0Az%06:4%0D%08%7C-m5z7%19%1D+c%03%16/%08h'%18%00%05%7D3%0A%05qy4?%1E%22r%07/-fz7%19w%01a=#r%0Cj%7D%1D%10'~,$/.%7B)t4%7F%0F%1B%18%1D9%05#%1F:61%010%0D+%14%3E(%00=%07%18%18*u%06#%0E%3C%0A9!*h7%7Fx%20%03/%04%0F'%7B)%13i%60r%03%1D%0Dby$%04%0Bj%1A~%07~9%09%60%3Cx%0E%1E%094%0Frz9!*%09p(e%60%00%05y%7F):f%08w%0F9*ds;%7F:*%7D%0F/%06=i:87%1C%07%3E%22!.%7C*%0A&%12q1%17,'2%00%1B%0F%0C?%116%0F%1Da::%0Fy%02%0D8?%18%7F46#yj9%25-2*v~~6)%0Ay,%1F%155%225%047%15%25%05%20f$;&-%1B%7C%0F%17)%0A&%0A%0A%0A%14%3E%18%3C4%085:s)%16%20%253%15%1D%011%11%08%03=6a%22%014%3Ey-g%3E%09%18%06)%1E,%0D1;*%02%03%09%1A8%1E)%7C%13--t%3E%7F%22z4%15%1A/8%3C).d%096%25%05,=%7D;/-%10'x%0Ey)%12%08.%10%7C%0C%01%02=%0Es%068&/t9/*%11%01w2%06%08?%18('%2055!q%25%16?#f%19*=%0E%1Ey%14r%07==%3Cj%096j5/31%7D%1Ei);=%07%18%16%127%02e%13exs8%1Ah%1C='%0A%01%0D%16%09%06%00%17%09#%02%03%3C+t$%7C/%0Fwj(%7C%05%609%1D%01%026$%22?%09,%06&%09j%18%04p/6l%18%7B/&,%087%1C&%00%0C/',%0C%0C-%1B%06(9%7C%04k7-'%05%19,%12%12%02%7F%083%3C%03%02%0A,%1B%00%7F%10%07%1F%0Fc%08s%1D=%10g.8%1A%0F%3E)%60jr8l%01%02p;)l%1Ff%25&z%08%18%7F%04%1A%7F%1B%1Br#%7F%17%15%7D%3E%11%11&%033%02%033&%083=%06%60!=7%09*%07%0D%1B%01%3Es%3C%0Fm%02%08%0E=!?%12#%11%084%035y%09%08%0Fm%11%00t%11%0B%11(f5%3C9,1?-%0C%07%13%11%0C1/&.9st1%08%0D%20%1F%20&%07%18=%02%20%07!:%3E(%13$%1C%13%17#%04%7C%0B%00%25%19%16%22%08%1Cf%00%14%11%06%0F%02$-9%09%08%00%1A%16%7F$8%14!y%0D=!%11%00%12%0E)li%60+(%06.%172%14%0A%02%18%11%08%22%11%18%08%1B%01%06%0D%08%0A3%128%18%1F)%1A,1%0C7%1C7%7F%138#l%00%08%0D'%1E%128%18(%20~k#%06%0C%1E%3E%148x;%12'(%1A%129%1A%07%1B23%12%0D%04%127%1D%0C%7F%0F6%03%12%03$%1Ei%14%18*%0A%22%1A%60%1D$%1B%1C%00#$%189,%18%16%0F%0D,*%138%0A8%0F%0D59%1F*:%14%3C%04%22,1%024%06/%0C;-%0B?%08.%0C%7B%14%11%1A%18:41(%18&%12%0D%08%00%1A%0D%09%1D%0D4!%14%20%07%0A%11)%0B%1C%0Fi%16%047,%16%12%1D%18/1w%14$#%22%08%25%10)%22#!%034%08%20,%11v%20c'%07%01%25%15g%01%1B%3E=%1C:s*%08%01%18%032;,%7C%1D%00z%0E&z%1A7%18&?%0C#%17%1A%0F%03%012%11%0As%0C%7B%3E)%07%1B%11)44%06p%0Dy#%60%1D%18%19%25%15%09%11%1B%227a'2%00%22#%14%01%3Ct%06%22%20%0A%7B%13%06)%18%20sy%1E%22%13%1B;%0A%06%7Cm=%18%19'%1A%10%20%19(~%22%08'%1E%02%07%02%1229%0B%209%18%00%7Fu%138%1D%11%19u;%07%1D%11%7B%09%01#%08%0A%3C%03%1E%7F%103%20%0B%01%0F%0Eh3%18%00%1F%60%1B%1A%03%18%19%1F%02%06(%0A%0F%1A#%00%10%1C%08%0B2%20-'%7C+:%19%0F%1B%058%05&%00%7F%0F%1C%17;,:*%10=%0A%14,%19%1D7%08%18:%0B2%11%25%18%7D%14%1Ec%0C%0F2%09((%11*&%3E%13%20(0%22%1F%60%1C%05%19~%04h2%7D4%12%16#b%1D%18;-%127%1E%12%00%3Ch%1A%19%10%04%04%18%13,&2y#;!(%00%1B%177%091%1A%0C%15%05%7C%0A/%14%18*#3&%07%1Ee%0C6%086%3C%05:/%07%07%08%1A%12%19%11e%20a%00%05%08%3E%0A1%1103%1A%3E*sq%12%00k%06%22/%11%03%1B%60&*%1F:%0F%1B%7B#~%22!$%1E%15%0A%1C%17))j%08%3E+%02%1B%0A%60%03%09%1A(s%12%3Ch%09,%08?+%20%14%25x%0E)%12%11%0A%25%12%0C5(=%0B%1D%1E.;%015)xk%09%09%0C%09%3E%1F%1D)%20~%22%3C%01~%17%0A,-%1B*q%7B=%11%1E%01%03%03%00a*sp%078%11%03%1C.%1E%186=%1D6%19v)%25-88)%0E%14s%02%1E%00k%11%18)%1F%14%1A%12%0E%02%086%184(%1099%3E%18y*%11%01ah,q%0A%1C0:%0F%06%059%20%12s%02&%22n%01%05%05s7%1B',v%0C-%1E%1F*%00%7B%0B%039z;&%0B%18%116sg%0F+%22$6k%09+?%3E//=ybeqg%1C8%3E%20$9%11na%7Cmzyjgyyg%07%15%14%3E%0B%0A&%03%19*6#'%08%15%1D&%08%182%11%7B%03%18%0C%09%11%19&%069%1D%17%0At&!=7%0Cu%0A#%18f,%0A24%1Eg%08u%0A7%18%06%22%00%06%07%18by%00%09,m%11?&%09-r(%1B&%0A%7B%1A%11%1C%10%0A?!%12%0A%07%0E%25%14%15%0A%00(%0F%207%0Ep%0C%0F%13'%09%20%04%0F%1E%09%0At%0A%08m%22%08%08%02%19%0E%11r%0F%0A%1C.%60%01%12%3C%0F%17%19#6%1B%18%1B%11%09%17%196%18%11%08%13%1A%17%1Db#&%04%1B:%00%03)%0A%0F%03b%0A6&%09%08%11(%19,%258%11%09%0D-%7D%0Fh,2%07%7F%18%1D,&r%19%08%11%0E%152'4$:%04%0A%0A%1F7%0A%05%1Dv-%01%0A%06%04=of2%06%19xo?#.(7n8$1%00$?%1D9j%20+77%193$%3Em%18*%1B~/1%60r/%1E-1%0A%1Cw%20%3C%12;%11%05r:43*%16r%1A%0F%1D$j%0C+5%01%13%03%7D+%08%011%00s%142%22%1F/3%0B(%1C11%1D%07%18%15%12%00%0D#%0E:%1F%10%0A%06**8%00%0C%0C%14%06%0Dy%09=%181%0A%00%0D%14;%08%1Cv%0A%07%03%3E%18%05%12%0D%008%09%15,%08o%01%05%15'%05+!%083%0A,%08%1C%03t?%03%11%18/%03%1E6%1B!%18%09:%1B%1D%01!%1B%3Cy.*%03.%11%084e%18u!%18n&%09%02-%0B%00%7D%0A%07%0Aw%1A$%12%00/%05l',%02&%1D%16%01%00&%0A&0)%0A%11%07%253%16%12/%03%02%1C?%0El%11%0B+%1B%205%1D:8%03%22q%03)1%3C%02%0B%209(%1384%1E%7D%1F%3C$1%0A6%09%09-%04%01%3E%1F%0As6'%19m%11%2099!%3E%11.l%04%09.%00%0D*$:#%00z%0F%0F%14i(%7D'%13:%09%1A%0C2%09za%1F%1Dy(%1F%13%05%7B5%02%08%18%15'%18%01%20%0Cd%1D%06,?5%05,%17%0F6*%16%03y%7F%185%12%0A%0A%20~47%09%19%1E%1Ah%1D%19%06./2%11%02%00%01%25%1C7&%08*%1D8%11%03.%0A%01#i%20$!%25%3Cd%7B6%0A/3%18%12u%0A%20%1C%1F%11w%1B%1F%13%12%01w%12%0F%111%0A*=+,%25%05*%1F%00h&%02%25?*7$r).%02t#%1Fw-%20r6%0Fy%60)%1A?%00%00%01%00%11%05%02%0D%1B,1$%05-?:#&/r8%0Ak%7B%071.%7Bni!$%3C%06j?%60;%7C?%1D%15?%18-%20,%08%7D%09!e%13gf,%09%07%1B%048%03$%08j7%60%15%7F81%11:%00%3C,,%7B%7C'8+?e%25.%09?%1F%08$4%0C%09%18%03%3Ew%7D,4=%7Cu%0E(%1B%02%7Dl:+%18%151*%09%7Fo;.9%05%0B;%25$4,%03%03%7B%09v%06%1B1%08%0D+#65%17%22%14%3E%1E%1F%60%1A&2$m%09%01%13%0E=:8/v%20+1;%25+?%04o7.%11%01-%1F%13%12)%01%08*%07%010&-%00%0A%1E,9%3C!%03%0F6%0F%3E1%15%02%22%19%3C%1C?(%00*%0B4%07%09%11%0A&%10%19f;%1D!%3E%09%07%16%1E6r%3Ey%12;$2%05%1F%0E%1D%06:%08%3C3)%011%11%18%10%60%16)4%25%0A%1C%1C%3E%06:%20%11%0958%13%10%0E%1Br%11%014&%05%0A%1A%18%14%13=%03%15%20t*%0F+%3E%3E%1B~%0D%184%05%07%1C%1B%1E%01~%15%25%7B%0Ae)*.+67%07-)%14%0A%3E:#'%0D%01%1F%13$%20%0F)%07'6%0F%092a%3C,%1D%1F%1Fa%13%03*%7F%20g&%15%01%7F6%0A%1F%1B%0A%7Dr6%0D6z4(%1E%13%19#%1821!x%13%7B:%088%19'%07i%16%1E%17r%19%10%1A%0A#~%3C;%16$p)%1F-%12%1D%0D*%22%0E%04%1A%15%3E%0D7%1E/-%1D%18%1B%07/5%13%08%0F;.%04x%1454y%05%13%003b!(%0D%172%08%1C-;%1C%0D2~9%7B%0884=s!,-%1A%1D%10%1B6%0B%60?%16%0Fy%0Ca%11px%18%03%18%01vx%1A%3C$%01s%02w-*zv%1A)2%14*$!%07%09'%3Cx%22%18%3E%06#*%03y%0F%0A%19%0C3%1D%0D%01%7Bl%18%01?a%18%20%0A6%18%20%06%00.%1D%08%1E~%0F%06%18;%1E&r%12~%60%1B%25x=%0D5:%0C7?%1B%013~x=%00%1E61%04%05)i%1C%024%06'%18=%0A9%0F9%127%7B%00%1A&%18%1E%20%18%1B%0D%08%18%02.%09%3E%15%1F%07%0A&%05%1E!!%00%05)%0E1&%06%02%0F%0B?%0F6)%1Do%00%08*%7D%08%1F%01f%18%0D%1Ek2%18%16%03%07%11$.r9%228%7Bf%06*&%0B%00!%08%0A+%1Eh%08%03,!:f3&%05x%118$7%1E#%0A%13%0A*%3E'%00%11y4#*)%198%02%1A%046%153927%09%14*%02%0E)n%008&%12&)%12%1El*%0C%3E7%11$*%0D%10%02,px%16%1A?%03%078&%08(%0Dw-:-g%08q%1A%1F%18%03:%03%19%0F%0Ah2%0E%0C%25?!%08%11%1A%0A%1A3%0A0-/m%009%199%1F%1C%07%7F%0D&%7B;a%3Esf,3#%0D%0C%7Ce%0D%01%01(%7C*;%7D%7Cw%13&%15c%3C%22%3C%01%14'%09%1B=)8%04z%0Ds!3=%08%02%01$+%11xw%01%06t#%3C%02%3C%07%10;%7Dl%0C)%12:8%06,%3E%1Di#%0F%22%0A%607%0A#%07%16%10%12/%25%7F%0D-%60%00%02%18%1A%3Cbs.%03=ki%09r);*%14%11(%1C%0C%18%1F%12%0E%1A%19%03f!%10%0C%07%1C;%19q%3C%0F%0Fg%0F%03f)%0C%18,l%11%1C%03%19%0F%0D,!%0Db~%02=,%08%1B$%15%1E%06,g%06'#~%09%13%0A%12.!%0A%14%1E%15*%0A%08%03%18%15%09%1B%1C3%03%15%039?;%1A)3%0A%1C%13%20%08$%1C%08f#.%22%04%3E1%03-%05%0F%3C%05%7F%13-%1A%14%1A%0A%08%02%0B%10(%0A%13%084%3E&%22%08%1Avr%11&v87#%16&%02%3E%1C%088%03$%7B!%0C%05.%048%7B1%18.;%0E+%00%25%09%14!x%1E%60%04%00%1B6%00%1122%12%0Ci%16%0A%0A%1A%17%3Eh%19%22%09%3C%1E%1A%06%00-;.'%03%1B%046=&%20%0Fy%0C3)%0Cu,=%0E%19%7C4z$o%17%07%03,%01%18%03%0A9%099%1Da%0C%08%05%25%0A%11$%0089%0F%18%1C%0D$%02%1B9%0At%08%1F%186'q%13&o8%60%09~%06i1%12q%01%0831%0C%12%02%17%0D%11?y%22%0Al%17%00%0E%1E/6's%02,(1%05%0A%16%0Av%08b%60.sz%1F)%07(%13%03,%25%22%10%0F=%1D1%20&%126):2%06'%02%1C%06%0E%0A%12?%1B&%08%10%08',%11%034*)%0F%11.%00%1E%052%07%12%09,%190(%01%00%1B%7D%117,x#x%14%14%03)%1B*%10%60r&%084%20c%1B%11%00%7C%17#%7C%20%60%00%01&%7Fl%1E%25%1A('+%02%04%1A%15&9*)j%01%3C%05%22%17m%0A%0A;%0Ac;e%1B%14%0A%0Fm%12%3C%05%04%0A%60:%02%14%0E%221i20%03%22%109.%04%02e%3E8,%05%0E%0A,%06x%12%0A*%1B6*%0F%0C%25?:%01.~&%08%12%019$%1E%0E%05%0A%08%19%0A3g%1C%20%03~5%09%1B%10%01%0B%10%13*%04$%03r8%09y%0A%04%1C*?/%18%01r%09:%12$%3E%18%00%1E%00%02&%1B%19%0F%05%3Cy%13%13%04j%01%14%10%14*%03%08(%1E2%3C%15%00!%1D?89%11);%16%1F%0B/%06%08%162'%0C/m%06%22.!%25-g%1B%14%00%22%1E4:/%7C%0A%0A%1A$3%1E-(%09%0E29%14%0B)2%04%3E)/%04%11%0B$%1E%20%3E%20%0A%07%07%0E%01%09%07%1D'7%16*%13%7F%1B%3E%12%01%0B,/%1E%3C3%1B%1D~%09%3C%19%12;%18r%12%60%15%60%0C%17%08%208(e=%13%7Fr%09%027g(u%1C%04o%08:%07%06%0D%16%04$%0B%02%141%3C%3C%18%09,:e%18x%20%0Ci%14%20%0F$%0F%10c:%1B%22w%1A%1F%19*,&%10d%09%0996%18%14%0E%06%12v%13%7B1%11z(,%7D%1Fj%19%020%06&p*%04%18%03.%03%1A'k%14%010%0C#,?f%1B-%18=%19%0F%16%20%08%08i%19%0E%0A?%1Dd%0A%16$z%09(;%16%7F%1A%0A%1B%0C9%0A%1E%1B%3E%12r%06%05%147%0A%00=%08%16?%0A%006%7Cu%1193$9*p%1C%20946%3E.ahzu%17%3E%25%18:+1?mrziazm%02%02%1D%25%01%03#%17%1A%15%0E%14%00%05%0A%12%0A-%04%0F%17%11%1E&%1F9%1C%09%0F%0C%0A%04%3E%16%7F%02%18%0F%00;%1A%03%12%0A%1E%11/&%0Az%1B%25.%00?)%12?%0F,%11%04%1A;%0A%14%18%07%1B%17%0A%07$%1B%183,%00%11/;%13'%08,9%18a%0D6,%0F%0B%06(%00%19%22%0C%12%0A%06$%0C+%14,%17%1Az%18=#&%1F%0Fl%1F%0E%03%1C%17%1Be%1E%00%06%1A%0B7%09u%0Cz%18%03%02%059%0C%18%11%7F(%09%25%12%19,%008=%1B8%08%11%0A%0F%1A$%18%0C%0A%0C!%19%06%0C%09%05%186%1F&2%087%0A%04#%20-87%0A2%0A%07%00%11%112#92%11%1Cty%1F%10'%0A%0B*%14h4%20%14:+4%1E%02%02%7F%0F+;x%08%00/%10%11r+x%14*6%0D%0B%22%0D2%11%061;%0A%12%11%0C%0C%06%7F7e3%16%1D%07%1F%06%1E%0D%3C%02%014%0Cu,:8%02'%08%13%1A-!%3C%06%12%0F#:%3E%0A(%06%1E%1A2%22%09%1A%16f%0A%03%19%14:%01%18w%13%225%04?)%06%0F%1A%1F%1D1(w4a%0F2%09:%3E#%1F/#%3E3$%7F%07%7F8%18%14%0D%11(!8h%20%00%09x%13%01%0A%1B%18v%18%18%12x%0A%07m%11%0A%19%02%04/%17%0A%00%0F9%0C%3Ex%16/9%18f=%02#$%1C%05%1A%1B:%0B)8%00&%09%0C%17%05%05%0C%1C%3C%089%0D*!%225%01%09%10%1B%0C*a%08(%0A%05!;%0E3%7F$0?%18%03%18%03!%08%1C%06%7Bc.%00%11%00f+%00g%05%06%12%20%1Fd%3C,%02%0A0;s,9%02oi%12%03%0D%04%0F%1E.,%06%7B4#r,(z%1D3x,,y%13'%076%1F%17l9%22%17%18#%0F)#%17%3C%25i!;%00f%06%1D$%02%20*y%1Ed,-%0E%7D.'%1E%03%08%7F%00%05%0D%08&w%11=%7D0%1C%3E2#?*('%1B39%02se%1D=~93#%009s%16%18x%0E)%60%14,%09%1E%01%01%14;%0A%3E%25%1D%19z%0B%14i%06%11*7%17f&%0F%0D'%1B'%09%0F%11%08%15%3E%03%1B;xk%0A%3Es%7B%16%09%19%1C1%3C-h'%0A%08%0A%1A74;%20r%08%00%06%05%1B%05w8)%1Bs%12%05=)9%18!;,%1A8%202%1E:%04%18%03%04%1C%18%11;.%04%09%3C=)%17&y%0923u/vi5=%03,%25%0C%60%18t%7C7#f:;y;h%08,%00%20,%106!7%0C%14%10%12%19%18%1A%0F%1B$*%05%06*%1F%1F%22%08%0A%1C(%15*%05%3C9%0B=%0D%0B%1E%0D86%1E%06%7Be:%601q%3E%141%22y%09%1C%7F*b%0A%05%0F%06%01%7D%0D%00f%1Fk%13%12%11%1F%02;a%00p,%01%18%12%0A.'%077%11x%06%0A%0F%1A%09f%00%1C-%1A%1D%13%05%03%1B6b%0A'%1D%06h%07%05%10%07&%17%19#%08%01%7C%1899%101%173g3%043%0F%01%18-%04%09%1F%1D%19%1E%17*%7D-%073%19%25)%1A8%00%19%0C%17%1B;y%13%127%0C%1F#%14!%03%093%11qx%0C%17%11%0A3%00%1D%13(,%22#%25%0B1%0C-%03%1B%175%05%03%00%09%1C%05:%15%7B%0B5!%0A%00*%18%1F%1B%19%0C%18;%18%01%1C%00%3C%1D%182%04%04%1E%0Cr%3E%25%0C%01#%201%1E%00z%09.)~x%1F*%10hz%07%3C~l%02%0E%25%1E%0F%0F%1B%0C%07;~%08%03'9x%03%08%17(%00%20~*%19%1A)%7B;%18a%0Cu%3Ez%0E%3E%12,1%0C2%7B%128#%01%18%09%19/%13)%09$%1F&%0A%0024-%0A%08?%1C8%22-%04%0F%1C%3C%25%10$%0B%3E##%0E%05w2%06%7B;2%0F%129/+*%0F%0A7%1Dx%01%7C?%06%078%1B%140b?$%0D%3E%03?(9%18%07%1D%05%60%25/%3Cn%18?p$%0F6)%01q,%09%13$1%201,7%02y2%7D%007b'%15*'%16%3C%7C0%25)%03f%7C+%126*%1F%01%12%25%3E%3C%1Bz%11/%0C%16%15~q3%04o=#1%06%07,%03%7Cs%186%18%1A%0Fq%00%22%0B%05%7D%0C%3C?%0A7%7B%13%02%0C%3E%11%0A%17%02!%187$%14%09%1C%18'%0D%04%08%04%0B%13%25%0A%11%1C%12#%1E%123%054!%12%08%06%20o3;u%0A8%18;%0A&1%06%18%15r%10&%1Ch%18%7B%2237%1D#)9,#0%0A%011%25#%3C%20y%03*%175%3C%0D%06-%04l%3E,%05%02%016%1A%22%08*%072%16%1E%19&~%00(9%06((!'%25(/%04r%08%7D%1B;;4%1A)-&%16%1F5%1Dp%13c%1C%01(%03%05(l%3E%13)-%7F*%07!%20;%25k%0A-%0F%22%16%15%0A%1D5%1C%0B%0C%11'%06?%17%1F?%1Cx/%08.b%07%20'~j=(x#%195%0Ar,x(ji=/?-%1Fc%1C%13%12%00a%07%0D%18!$k%1D%60%0Fy%1E+5~,%0A%00%00%14#s%1Ex=%60%04%22%7C*+%1F1%189%224hrx:=n5%07t%1B)n%04'r%3C%7B%3E1%130r*k%259'94.%01%035~8%0C%7B/2%0488%22:%0E*z)gxyr-%1B%12%09w%0Fz?)%60v:(!%7D;w%1B-%60g%60%11%1B%0D%15%20%04%07%7C%02%60%00'y'$/%19%7C%192((293-%07%1C2x'%03%14%1D7fssy06%0Fj%258,%04%20%15%3C%1E;i)q-%03r%00%7C%11%25z/g&,%1D%7Dm%3C3#%22%1E%14%7B%7C2%3Ez%0E'%0A%18,%0A%08'%08)%7Cy#2&%11%13e2%13=#%1A%1E%0C%1E-%05%60%3E:g%7D%08%01c6%7D%1Ejfw%17g(6)%1E%09%04%60%18%0F%20o%22%3C%1B%3E%0F-%12%03%10~%7B%17*x5,yr(8%0A%0C%1Bj%08&v*&4'/w%12%00%18%05=%03%60%04%60%1B%0E%04%07$2%01!%03%02%0A%1Fgx8%1A%16%3E%7D#%14%0F%0D%1Eg%0A%09%25%1Fi8%1B%053%08a%1A%12%17%1Ax%0Bb%11%20%0E%7D%20'%1Dl(%0C#%13%00%208%04n?%02r%12%20%1A%02%0E%08%06%17%03%08%11%03%1Fv)%15%0C%0E1%03%10%7B%09%05%0F:%11=%1B6%11%1745%0E%00%22%1F2%1D%7B%16%1A%7D16s%0D%12%1D%18d%20.-z%20%11%001%3C%1E6%06$y#%0A3%1A%0D$%3C%0D%1B8%0C%08%7Cz%188%0C%0F8%1D%1C*3%0A%08%08%00%13%0D/%0A%25%18%11%1F-%20%0F%10%1E!&%20+%14%05%1Du9%7C%12%04%7B-%11%0Ca%15%0Ej%19%1733%0D%0A%05~=?,.%06%1F%12%20%0A;r%09mg#t%18#%1F8%04%14.%1F4%20/%12%20%0C%3C%14%22%15%20&%0B%16%1Fy%20%05i9(%00*%04%20%11=%05%11%02%12%04,-;%0B0b%20%162%09%0A%1D;%00z%18%1E=%22%0C&%19%00f%11%17%1F%20m%13%0A%22%0D(%13%05%11%03z%08:%1F%1C%20%12%224%1F!%1B))%14b/2~%0F%03%11.*%1F%03%16%03=%17;x#&%0Cj%1Bv%08#s%1B%7C'r%3C%06%0E%0A%0D0%08:.,%7C%1D6%05j%1C9%3C7%7F%05%7D%1A%60%17%0E%0E%60-:%032%15%03%7C%15%07%18%22~e%099f%07%00'.%188u3*3%01'%109~%0F%00%1C%07%1F4%1C%12%12%02%3E/ae;-(%1E56%01j%1E%1Dne%0A%0D%25%7B%18%20%09%22,%02%18%1C2,%20%3C%12%1F%1A%12=%7B?*%18%14%1C%7D%135%60'2=0%1E%0Eq;;%0C6%1D%07%7F%0D%14%06%00/s!0%7B%014%1Fe5%1A%04%0F%257l%11f*(%19:##%1B%1Ex%1F%168;&)%11e/%12,%7B%14!%09/%0C445%60%25%00z%15;%1C%0B%02=%08%059%1B%22%3C2%11%1F%04%0D,i&%0D%132y5)=p.-n=%0F9?%1B%13%1C2%20%00:k%17:5%7F%1A%1E%06%19%02'%08*!%7B%19%1E%7Da;%1E%14%1E!%1C%19%0A%13%0D%05;9y-?7%3C%08%1B9r%16ois#,%17%18%22%1C%00%1B%7B%14'(&)%04%1F%11%7F*%1A(%18%7B#%0E,%7B%0A%7B!%00'%0B%3E%60%19%12%06%09%13%05%18.$%03%0B%0A3)%09%07%12%07s5%11/*a%1D49%1A;%07$%16,xi%19%09%06'!?%25%20%10)/%17%08'%05%0C%1C%0E%19%0A%11%08%1F%1F%05%04-(%0F%08%13%03%00,%0D%0A%11y%05%08%03%18%01,%02%03%0F%11d%0C%00-)%12%13:%00%3C%06%00%1B*6%0Aw%1A7%0F6%02%1A%1E%01%08%17%3E9%0C%18%3E5%20%0B%0C7%7B%08!%18%0E%01%06%16%22:%13f*p%25%3C%16?&%03?%0A;7%08t%20)%1B%15%02*/%1C%09%11%02%00%19*%00%04%3C5%0Azi7%03%17%02%05%1C%11y%0C%22%0F%00%16%1A%07%02%1E%18%18%0E2%1F%0F%1A%19%1B%17(%07%14%11,%1B%25%1C%16%1E%11%14s%1D%3E%1F%0F/%20x%1B%01%076*%1A(%13$%03%0Ae%3Cd25%1E*k%08%03u%09~%1A%11%0F%1B%1D%0Fl%02,%0E8%0A%18%15%19%0E%01%17%1D?%1B%10%07%0F3%11%18%20%03=.h,%22%08%17!;%0A('60585%18x%1E%1E(%18%1C%061*%128%09%18%18&%09&%04%04%14:8%00:%1D6%15,)%12%18%18%1C%1D0%7Bw1#!*%0A'%16%01%1E%13%18%0Fm).;/%7D%11a%06&&,%08%0A%1159?.%13%3C%09%0A%06o%17%0A,*%0C%1A%60%0Au#%1F%1D9$)*%0F!=%25%07%7F%1A4%06*%13%18%16%0B%11%0F%04%0A!(%12..%0D%0F%08%60#3%3Cz2%1E%05/%1A'%1C?%18u%22%17%20%11;%02%12=%1Fd%0A%0B%3C%17%1B%1A%03y%3E%0F;%09xv,%0Dt&f%18%09$0?;%10%1B)%00%14%11%03%7D:%14%18/r%3C-%08h#p%0Fx%1E6%06%0D%08%1D38%25%18=%06*%1B%0E$%0A%056%01%1A%08%09%16%10'%0F%1B?%1F%107)%00r%0Ak9,t8%1A07*2z!0)%3C%08%03%02%12%17%7B%0C%12%17%12bz%04%7Fv%20%1E#u%11%0Dt%07z%12%3C%0C?9.%09%0A%038(%1C%00$%05%10%3E%0F%18r%194%1D/%20%20%0Co%1633%1A%1F4%12%0Ay%0A%09%1A%1Dr*%1197%178r=8%1Ei&%18%3C%03%1Bf=%00/%01%1Aay.%3E%00%1B%22%02)(%0B!%0A%02$,%04%1A7%0A2%0E%1F%0D?%06t%3E%17%107%7F%08~:(9%11%108%1F%11%07~5%22)kb1(%0D9%15%11%02%10%7C%16i*%0A%00r%01.%01(v%19%0F2$%13'%128%1F1?%13%01%18-%06&$%7Dw3%11%7Cs%22=%60%03%0A+%1C%7B.#%1B-%7B,8b15%7F%0F)%06%3E9%0A%01+%04s%04%7C*%3E*8%19-%19%12?%13%1B%11#h%19%1E%03%12%01.%1A9/%7B%07%18%22%03u%0A%07%1A%01/%00(%14%1F%13%0Aw%00%1D%1A%16%1952%1D,%11%02p%0098=%095%05%0C:%00~p%7F%7B%1791%08%20c%11%02%11%22%05/t(%7C%10;=!%20$v%1C%7B:2%09%12%06%003%09.%00%00/%20f%1A%0E)%20:6%0Es1y4%22)%14%1F%00i%19%7D%19%1D%0F%18%1C1%0E%7D%0F%18-ym%18%3E0%3E%258k%0D8%20?49+y%04#(%25)%20%7C%1F).%1C%3C4%00(9,%20%7C%7Cxs%7Ci%7C%02%0D%0F%19%13%11#%1B%1B%0Am3%0A(8%0F87%1D%10%067%08%11%7F%02%06%0C;%11%1D(%02%0B2%12%19%00%04%1F%18#%09+%0A%0D%08%13%1E%03%0C%19%3Ei%0A%22z%1F%11%169y%08%0F%13;%19%00%0A%16=%11%0E%0F%3E?%18%1D$%00?%0F%16!%06%00%06;%10%11*%00%00%1F%1A%07%0A%143%1A%0B7%128%1F%07%01%1Bz%16x-%18%14%085%1F%0C%18%11:s,%0C#%1A%7F1%12%0F%1B%15%1A/%7F%01%019%1C%18%0E%01%18%119.%22&%1A%1E%088%0A%04l8,%22%0A&%14%07%0C$%1E%1F57(%16%0D%07j%1C%1A%22%00%1F7%12%12%10%0F;44%20t%12%1648#'9&.%11%08%20=%3C5%20$%13&%18a%1E%08p%00%19%0E%19%1F%20%0C+;6%139%22%0C%014%05%19%1E6%11%03%1D$%3C%035i%09%14%13$6%07%1B6%0C+n%16%07%22%08?%18%1115%0F%1F%0932u%22+%1E%7By%10?%0D1*%11j%22%19%18%11:/%08%0B0;%0A7'%20%0D*%0E%008)%1D%60%0A%0B%3C8%18%16%7Fl-wac%11u~,3e%0A%03%22-%18%01%25&%0Av6%13%02%0E%19%07%15%19%084%7F%078$%0F*s%25%16%14%1A5%0A%178%15%13&!~*9#,!%20,h=3r7%0Dh%7C%06s7%18%111%0C%18%03%0A*9%20;%0Fr%11,;%03y%00%11%7F9%0F9!%18'%10&%078%14%0E4%12%175%15%1A#%0C92%12%7Fr&*?=%1A5*,%03g%05%18%08%1B%0F%142%08#%0C8%222%1B,%0F%1Ea%20-%20)=;%20.%1B7*%3C%1E#%3C%0F;=s3//+%06%0Ar,%0Ck%17%7Bs1%0F%0E%20x%16:4%0C%1E%7C0%0D%17r%142.%1D%0C%1B%01%22&%20%1F%12%1A%0A%22/%0F%18%1A&./%0D2%149%25%1D=%3C'%091%0A%09)d~y%7Fc%11%18,%03%7C%094%02%11*%1A(#%11%11($%1F1%15*)%7F+%0A?%1E%02%20%1B%1E%05%07%11%1D%18%0A%01)%14;:%09%1F%12%05%7B%18j('73%7B.%11*%19$$%3E%19%08%04.%05+%06%0C0z;/a#4%7F6-%1E%25#/**4s%1B/%22/:%030r%1E)%01%7C/r)%00%19%3C%25%0Fz8:%06%25%1A%09;4%22$%7C,6%7B;w/%7C=*%60%1B%0A!%13%113%25%07%7B:%22z%259w:21%25%1F%1E%03%11%03%25%13,6%08%20w-%17%1D;%04%189%14%12%1F%7D0*$(5$%06%20/%13%20&&%09%1A(%1C&,%00%7B)%25%3Er99%15%01-.%09%25%1E%19)8%0C%0922%193%1A=%03%1C&$%02%0C%18%04*%17~%25%0D5%3C%00~%204%22#%11%22%19!%13=-%1C%00%03a,s%1F/%0C4*#)c4=x%07%1C'%1B7~j%08)2%18!+%09%1Bn'%13%0E%18%0Bk9#8%7C4*8'(.%3E1%15%09%1B!&,g%7C&%19&n%15*%13*,7:%60-%7C%1631?u%06%1C%18%03#%0C%18e%1F%0A8%13%60%20%116:s-z%12%04*%00'8%1C%1A%12%04%1F%03(!;%10%19%01*%18%1F3%04'%11?%1F%00%19%20%0E=#%20%7C%25%1Bh!&%0A%0Bm%19%012yxm%08%3Ej%0C%0B%0C5%01%04%25$%0B(%20%14%1A%14%0D%22%1E%19;9%1De%026%7B$%00%03%7F%14%02%19%0A(%1D/=&!%08%7C%0E)63%3E%1C1%1D9%1D%03%00.%0A%0F*3%08j%04z%10f.$%01%25l'%1F%0E%08%06%0F2*&%1C%3E:%16=%17=%0Amb9%0B%3E!%0C%13%18(%0A%0C%1C'%06%16%0C%25%13%032%0E%198%18a%08%13%07%19%1C%06%01s%1Bvt'%07%25?%01ig%13.2%0A.9%7F%17,%07%11%05y%15.%066%1B%0F%22%08%0F%1B%07:%02s%03h(%111%0E?n%03%0A0%7B6%1Eh%0A%038=%3E%15%0Dx%1B~%1C%11%0A%17&v%1E%60%1E4%184k7y%05%00%1An%05,)z%1F%20%11%00%03x-%18?%07'%08%0F%0E92%08&z%145%0Cy%1B?%08=s%0E%0F(%01:%13r%22%04:%0A%00#)vo%1E%20j!e3%01r%05%03)%3E%14%0Ds%18%16%1A%11!%02%1F%00%1C9%09u%3E%00%03%1F%1B-%0F4%0A%01%00&'%0Al%11y%00#%0C%10%05%1C%10(:%10%04%7Bv%11%0F%01%1E%03%12%0A?%1Bb%08%13$%05%00%18,%16%1B%0A,%01$0,e%3E%60%0A63%0F6%1A%12%0B%0A%7F%18%13%09%062%7C/%1A%0A%00%0F%01;:$t1&h99;f%01(%19%07%08%08e%13%09%1D%03%7B%1E(d#u%09%09%0B%14**,=%18(%05u'%01.%7B%1F&-%17kh*%0C3%01%08%11%08y%1A%0F$bg%06.:y%03:4*=15/m%1F&%3Cpr5#n%1D?(5$%3Cuhzw%7B~u%19%07%05%1C%04%188%11%11%0Fz:%11%222%0A=%3E%1A%1A%04%3C%0A%0C%11%06%03%01%0F%14%01%0F*%0A%1E%18%15%3C%09%1D%0D%18&%0A%10%3C%06%1F#%7F%03%1C%0F%0F%05)%18%03%03%1Be%0A%05%13%1F%1Bg-%00%0D%08i%11%056%08/%18%0A,*%09$%15:%09%05?%01/%11(%0D%0D%1A%03d#%22%0A%0A%1A3%7D%13%0A%0F(%11/)%0A!%10%7B%12%00%09%0B%088%088%0A%0A,h%0E%12%0E%1B%1B%3C.y%08y%11%15%3C%04%1F~%60%16xx%1A%7Ck%11%0A%0Cz9.=%00&%20%1B%08%11%1C%13%0C),%05%0E%17%12&%1A3%0A%02%1A%0C%16%14%01(y%1E%08%0A$9%08%1C:%7D%023%00:%18%12%7D%00%0Az(%7D%075-%03%10%0A8*%19%0Am%1F%3Cx%07%0C%1F%02%02%00%0A*%08%20%7B%08s%7B%16%11%7D%09=)r9%06,%02%03/2%0E%0D?#%08%15%1E)%18%18%11h27%25%1A%16d%0F*f%1C%1F%07%0A%13%22%1A%08a%0F0%0C$%121%0Flx%1F7%12&r%0Dz%1Dd%18r8)%18%03%3Cv%7F+m%11%11'1=%01&~18:%3E%1D%06u%0A)%181s1;%0F%09%16s%08%07wt#%094%20%0A%10%14%05l%0Ez;%1F%0F%25$%0D%1E7%229!9%083%0F%0F%22%07*%02%09%08-%7B%0F%22%0Fq%1A9t=%05%0A%02%1A%0C%03%08*%08%00%1C%04%22%04%00:%09$%1F%20%1A&6%11%0A5%0A%0D4%1B%07%13;%1F%3C%1F1%0B%3C%06)%1B%02%00%05?=%1D$%13%18%1F%3E1%05%14%7F%14=%15%00&r%04%18%1E=t%02%0Fm%12%1E%0A&%1A%0D%15%11%08%0A%03m%053/$%225%60#/%08&%1D%1D%7C,%7C%0Bh=,%03%18%1Fi$%1B%0E%0A%0C%09a%0F%158$+%06%3C%03%12%3C-%17%0E%0A%19%7F)%12%3Cr?z-i)p~)=%0A%1E%08,%1C%14%01.%0E%0F%1B%3C8%06.?%1F=b.3%1D%25%1B:&p%0D%1Ai%3C$%138%0F%18%06:09%172e%19%02:!%141z-9%030%04%0E%13%068%0A%1B%0D$%0E%7C8e%7Dj%22#k%1Er,*%1A,98&?%7D%3C%02%09%20%0D%07%1C7%0C%0Ex!%1Ag%0721%7Cl%06%3C%063%16%0D%1F%01%12%0Fz%14&%1A&=:%3C&%12(=%08h%00yr%11+%00%19%009%20%16%08d%1E%10%09,%14%061$%1C6%0Ai%25%12%08%7D0b%07(%0A%01%165%03%00),18%7B%22%606%11?%18%02%1F%3C,%20~,%25#%00%02%0A%12%09%17!7%1F,%0E%0B%0D;,%10%0Cy0b%0A%04%1D%22,c;v&%0B%108%22*(%7C%18%11%0E#%13'.%11%0A%16.%09%0C%1D%3C%13%0F%0B%10%19%20)s%04%18%05$%13%0A%0Fh%1E%1E%15%03%03%0C(r%15%0A%082a%1F(%086%15%15%06%2534%11a%06%18#%0Fa%18%08%0A%0F%0B%177'%008%0F%18%22;%08'%0C%11%16%007%02/*%09!%02%0E%0Bm&%01y%016?%16%06%17%0A%7F%0A=%011z%1A%0A%12;,&%7C%13%19%05%05s%25%3E2,&%05%17%17:%12%0F,%252%15%12%10%0A%0F,&%07q'9;%13%12%04%19%1C%1F)%0E6%04%22o%03%0E7%0C/%0D;%1B,*%1Dm%7D%02l%07)%1F;$%09%129%1Ad%1A%133%0925%19%0B%09%1B%0D%02/%06%06%14)2%0E%22%1D64%3E%60%193w%0D%15%0F%103%0F%1B%20%12q%0F%0F%1E%1A%0E/%18,%13h&%0A(%3E(%3E:%1B'(%111)1&%25%1E%08%1Dr%0E%0C%12%013(&%256'%0A3?%14-%3Ey%14~%025%25%19t%13%20%00%15%0D'%0De8%3C-%06%09%17hdy%20&9l9%04%00%3C%07%18(%12%13%01%0821%0A%07%0D%04;%02y%19(+58'y%1F:%15%17~''&%0F%01%08u;%18%0A%04%01%22%20%05%03%11%18*%06%0D)1%25v*%7F%14%12!%2534%0Ff-.%19%0B5%25%04%04%08%05%15%11%07%00%7D%0F.%02%0E2%02%17%0D%608%10z+7&%1E%1B.&?5%049%13)%09i,%11%0Ax%1D%1C%13&2w%14a=%16%0F4%1E6/x%1E%0F%3E%17.v%0D%17h%20%7D%0E%1A~%0De%126%7C$a%13&.!%167%19z%05r%1B2%60z%1B%06zj%141&%3C%05%18%11%04q2%0A%60%00%1B%1B%0A%3Ci#%1F;%7F%03%0Cf16%0A%22%1B%3C%03s%06%7D!7=%18s%02%1A%12%01%05%1F%1F%093s;%20;%00f!%0C%3E9j:%3C%05z%0F+4%1B%0Ax4%1E%1D%08y1=-%1B%06%17#%00(h%1Fj%3E%25r2~%0C*6%18;%094%0F%3C%0A&%1C9%0F%1A%09%1Fs#3%1B+#s%062%1F%1573%03%18%20%08%3C%08*%1B~%1B%162%0A#%17%0D%06%07%0A%22%0Co%12(l1%18%14%09:%00%7B%0F7%03(q%0C%06(4;9%1E%05%1A=3%00%0D%2208%11'%0A,%139~%00%0A%04n%05%11%00%1F&m%01%3Cr%09=%18'%04%15%099%184%3E&%00()%7D%0A%0B)~%0D%15%13%09#y%3E9-%25%7B%20%172%05lx%17:%02*%04z%03,%1E%12%18%0Fx%10??%08%3E%0A%00%1B%0Ay%08%0F%60%01%1C$,w1%1Efq.)%203%1A%00%09%01/%1C%18%04%7Dz1%05%086%7Cx61x%0C%18:%605=%0B%256?%20%7C%17%0D%7D%205r6%1Bwt%20%7B%11%0D%02,%14%0A$%11%14%1C7%04x%03%06%10g'%12%25%07!%20%7D%02%1C%1D%16%16%190!~%08h%0D*%1E9k%11%19%03%02%0F:7%3C%06%3C%7F%08g16%09e%14!%1E%08%11%17%11e$%0B%22%0C*5%06%07%19'6%07%13&%08)%09%01!)%1A%1D/(%0A%0Ef%1Arcs(%00ch%11%0A%00$%0C%1E%02$w,%1E%18%0A%0Aw%09=%1Dd%0D)%08%1F%01c%1D%03%7D%0A%16%17r%07%0D?(%18%091%19w%187%09%19%01%0F%0B%01%60%03%7C'%1D%14%0C%02#%056b%19%09!/7%1D?%00%18%17k%12!%03.%1B%10%1E%02%11%08*%03%1F%195%20;%11%60%1A%22$%1Fk%142%0F%3C-%18%01,#%09%3E%1A%01%08%08%3E%1F%0D%11~)8%0F%1Cc%11%05%60%0A%1A%09%7F6,%01%1D;-%00%18%0Fk%12%22%03%04%096%25%1A%12%18%09%101%0D%0A%0E%25%03%05*%13%08%0Dm99%06%1A%1E%18%02%198!%18%117%0F#=#%08%7B1u/%06r%14%7B%22,%0F!%02%22%15%0D#%14'%0A%06%006%03%203%07%1D%0A*%00%12q%02$37'sz-%3Cd=&%25')'%19+3%20m9$%00%18%0B%15%12%02%14%1E!rf%0E%15%02%0F%18%15(%05%1A6%13%02%03%043%0F%1A%041%0D%3C%09%0A1%12y3%25:%13%0D.%03%1E%1A7%1E%00%19%08o%1A%03%09%1A%0D%10%18%7Fw%0A'%12%01%09j%02%07%15'*%25$%0C%20%11%06%25%25,(%1As,%01wj%02%1B'%0E%1F%108%01%0B%0E%1A%11!%25%17%12%1A%3E=%1F%10%1C%7F%1E%07(2%60%1F%18%13s%172)%18-ym%08;;9(a%08!42*5g%0D5!2mx%7Dmf%7Cm%02%02%1A!%01%00#%14%101%3C)!%3C%18%12%7F%03%0E%0F4%12z%00%1E)%1B'%0Eq%09%1E%0A%1E%0A%08%3C%0D%00%12%0C%00%189%10%11%7B%03%0D%09%18%05%1A%05%20%0C7%11%12r=#%1E%0A*%0C%00%05%1F%11%0D%0F&%0F%00%03%7F%03&%0D%18%15%20%00%7B)%11%09%1A%00/%7C%1A%14,%04%20%0D#%05%02%00%0F%03%1D%01%09;%12%0F%18%05%12%14%0E%0A1%14,%0B;;%0A%11%7F9%1F%0F%0E%02%09%25,%0F:%07*%13%0C%02%099%19&%0A%09%0F=%19%09%08%07%20%1B%22%08%7B%0B%3E2%08%11r%0Fo%1F%18%14%22%07%18(%0E%0D%0F%0B%1F:!%14=%1E%20%09%19%08!!%0C%19%008%7D%00%18%1A%07q%059!7%0A%0B%0A%0Bl)~7%08%03r%00%08%22$%20%0C%07%253s%04%15%19%19.%07#:5%257%0A%251%18:%00%0C%18%1E%1986%09x%0E%11%0A%0D%0A%096!%0A%02%1E%19%126%13%15%0E%0A;%1914%7C%140%14%19t,%08%00e%0A%05%06%0F%1Fa%09p%22%16i%13%08%05%7D%0Cl%7B%09)%7Fe;(2%0E%25%1E1%11%13-&:%17$?%258%0C%608%0D%05%25v%1A9r(%3Ev%0B%3C%0Ft%22:%3E%3E%1E-%0A%0Fh%01%1F%19%079%10%07%01p%1E%09%0D%16%22(%00%0B%1F%14%073%0A%0F*%15%06&%3E%05%135%1Fy%09%001%0A%041.%1C!5%02&f%25%13:%01%12%0C%18%12%18%1D8%03%01%0A$%1B%1B%1A%1F%036%020=%00(%11%19%07%7B%1C%13e%01t%1D%035(%18%0A%7F%1C%12%22x-%0E%09%03%13%1F1::8=%1A1%7C%1Dh*1%1Br%045%7B;%00%1B)%08%06%0D%13%11%0F%18$&%22'#%08#%00+%12%06%10%60&6%0A%1E%00%1D%18%00%0A%09i%25%00r&(/i-.%0A%06%1A%11%7D7%06%0F%1Ed%09&%06e%20%00%60u%06%0F%1F%07%20%13%03&%10%17%12#%0D%1C%0E%14%04%00%0D-%1A%16,0%01x%18%16$%12%18%0C!7%08%06%13$%0A!%25;r%06%1D%1D)x%1E%064%03'3s%7C2%1E/3%0C)87%12%00%1F!1%18%0C)%1E/3%1Dr%20%7B:=hz)%0C%03%03%01%09%10'%25*%25%0Dt%1E%1Fk=rp$y%0E%17,7*x)%19%0C%1B%07)6:%20%18%1A%0C;%22)#%7C%17n%3E%1Cw%1B*n6)%19,v%1B%013%09*v,%09f%09%0Ev7;%0C,%06w73%3C%16%22x%01)~%19:%7D%3C%09x3%19:8()%00%0F%07!7-%139$%1A%0A%096%0Fy%183#9%03%03:%1A2/%0C-l*%13%06%06%22i&%0C%0F%1D%7C%18:%0F&%0A9%12%0A%3C%00%1A%02%1F7%0A%11%0C~n%01/%0B%7B%16%014.&=%1F?%03%053z8%13$%7D%08%0F%17%14f&%02%00)2%18%1E%0Fs=!*%1B%0F%08%7C%15%1D8%0A2%3C%0F$%0A%0B,*%1D%19z%00;=%10%1B,9%09%1A%1D7%3C%229%19%11%05/9%7B%2084%11r%25%16%1D%19%7B6;=:%1D%13'%0F%0D%14%01.%082%05%09%03!%153!,98%08%12%25%17%02%06+%0D$%00(=%05!%0B%11#%12%00.%07t6!72%0B/i)%08%0F%07%1A=2*?:%10%15,p~%20%18%05#%02%1D%01%08i%18q%00~%3E%1D/%0B%13%0D%0D%09$%0C$'%10%18(%14!%02%01%19%7Fy:%02%09%07%22%0D2,%0B9-%11r+%207%7B%221'%1C%14%1A%17%05~hd1y%09%04t%09%1Fly%25a%03%127r%0F%15%11%00%02y%1A%15%17%0A%22%209(%053%05%1D%04%08:%18%04=w%16%1C8%0C%0C8ha%0A%08~%024%118%0F%07%0A.?%20x:%1E%09%199t%257*%13$88%7F0%03$&%13%1C=%16(89%7D%12%7D%1A%15-6%1Ca)l%1Fv2%13%0839%00+?%05%18%026r%60%1Et%18%25%15%05z%05%05%1Eid%0A-9~%604%05sx%16=7%25r/%02%0D%00&v%07%02%15)&8%1F%3C%60%1A*s%00-7%01%05%06%7F88%7B%02%0Ey%3C/%1C%09j%124):%0D3%3C%04%00%14?4%3C%00%0Eg%7F%0B%7D'%12%3E$%06;?!%20%0A%25%7C%1C/=(#%0F%04%0D%09%09%14%1Fek2%067%066;a$%22&v%15&&%02%03)%18%04%01%0C%0E%0A%0A%05%3Cr%1B&4!=%0E%04&+%19%03%0Br%06?%1B%3E03%07%1Ch)0%03%3Co!%00%19=%16%0C%3E&#r%0Ao%1D%00j%25-%1C%13.%06*%03+%1D#%20(!la%25*%12%7B%60:%18.%7B%0A%0B6%03;%1E%7F%1E%17%20%17%0E/%11*%13vr%08%0C%1E%01%0C%3C'%17%12,%09$%14%15h!%0C%0D%1468r0zv.%14$%11s4.%09%0A93%00%01%02%03%00%18%03.%3C!6*w%1B8%18%17%197,1%03#f%09%3E%1E%04%10%08$o=%3C%15%7F(%17%1D%0D6%1F~l%14%1A%06%3C=%1E%1E%09%00().%16%1E%14%25#%14&%3C/&%0F%18b%1A%0E&x%1Db%09%08%08:2a&%03%11%05.%06%22y%0A%0Fn%08/..'=by%03*%141c%12;f9%08%16%06%1B%0A%14%01%14%3E%00y%0D6%11,3%1D%0F%00(%13%02%7F%1D%18)%08vf)i:%05l%01%1A0c%20%03%1F$.%09%04&~%02%0B7%7B&&%1D%0F?%0Cq%08%0Bi%16%01%04?%02%3E%03%11%0Bx%0C(%1D;*%0E%17=%1F(/%7F%02%0B%1D%7D%0C%18%7D+4?7)%16o%11%0A7(e+$%3C+%3E~%60%25%1E%09y(*%06,/2,(%18(%0E%60%3E%10df%03!%20%11%1A%1E(/%25n%3C%09s8%17%15%7B%0C%25,%0C%0Bc%1E%0F%05%00%10'%08%10%0A%00%1Ah%0F,*z13%1C%00%7F%0D%0E%11%1A%02,%7F!5~%22%08:%18%60%00&z!(f-%039:%1C%12%3E;/#m%11%085~&!%3C(%0C%0Az%0B?!%12%0E#%3E;%1D%04%139t%11s%06;%7D%17:%25'(,%18)%0F%12%09%0A-1%07&%0E%7B%20(%0E%00%3C%006%1C$%25%1A7%18%141r%0C(8%12=2$);995%0A%1Dm%22r%0B%03%19%169%00/%04%1C%0Ea%08&%3C%06;=%3C%0E%06%19%18%17,%14%09%02%1B=%1341%3E%10%111-%7C;%16%1E,3(%05%1D(%7B,%0Dz%0A%7B%00%13r%7B%0B%18(%07%7C%1D%00:%1A#%036%129%06&%07ea99%05%0A%09h%25%03%0F%0A!%18!%09),9%1F1%1Fq&%14a'%20%04%12%0F.%18%0Aj,'lh%04%00%0E%177;%0D%00%22%0A5%13%7F%1B%0E*k%17%1A%0A%1F4%18d%1A*&6%188%09t%11%09%00%18%1E%11%12(%18!%09%0A%01%1B%017%05%13%0C'i8*%0E%7B%1E6%02,%18%18%7D;d%1Au%0A(%12%19%06%05%1F%08r%16#%0B%12:)!2%09%03%07%1A%03%1Au&e;3%1A%00%3E%02:%02%7F33%1E0%7D%03+!%16)%11%12%0B%0E%1C%0F%12%1F%0D%00%04%1C)%02q%18(1(%07%16*=#%0Axx%20%0F=%04%7F%03%20%3C%13%1F%18y%20%08%12%1B%18%148%3E8%11%19t%1D%03%08%1B%7F%0C~:%0A)!p%04#%0C%60%25*%07%1A%11=9%08%7D*%10)%126%0A%08%1Ai%06%14(!h%02%1D1z%09%3E%15%7B%25$~0i%19x%0E%17%12%12/v%0E62%011%09%07%05*2%08w3-3%3E%25,%3C%25%16?%03%1B9%22%01%18%3E%0Cs%19:23%20%19(%1F3%03y(%17%177,%1B%02%0D1'%18%09$%3C%165%1A#%20%1C%1D%25-8;!%1F%1C%7F/=%7C)%02z#$-%60%09%0A%0D2%160&%05&%7Dwj%01%01%05%7C%20%148;y%3C%7B5%18x&%1D/%14%7B%0Dy%01%0Ba%1Ez#%0A%01r%14s/%7C%1C%1B68q%00%18%14:%7Buf~%3E%1E?%20.y:6%08%00%02**%11%08&%20758/s,%0D%0E%01%1E%13%07%17%1Ef;%05&%06%0F%20!%08/%19a%1Cz%18%3C%00%1B%19%1F%14%25%1C%1A%048%06:%07%16a%1D%022%01%08%19%7F%07,x%3E9%02%06%3E%0F%11%3E)%00%04%0C%1Af%12%04:%1D%0B%09%0D7%07/o%20%0A)%19%0B%10a%12#%1Cy-cz%11%7C%03%177*$%7Cw.f%06*%12+6h-u%1F6.%04%1F%06%0Ax%0D6%0F88%16*&%126%0A%0Cl%15%0D0990%08%05v#?-b%1C0$'1%20%1B7:v%13%19;8%7B%20!%1E-'%19e-%02%25v%0A%06%13%04%18%09%1A%20%602%13%20%0C%22-d%1F%0E1:.%17%02%09/%22%0E?%20s#%252%19%0Ex%06%0B%18=%7B)-%0B%00%11$%06(%03%16()&%0A)+%3E)%0C%03%3E%1E8%13-*%08%3E%14,%05,%7C%18%06%7D&%0D8%0C#.x%00&%0Ad%1E)y%07%20%15%22x%22%06%3E%09%08%08%00%01%183;t%1D%0F%14%11%3C%0B&%03%1B#%01%10%0F/%20%1A%0E2z%7B%20%11%1E%05~%22%11%13,%05,73%1D%1D%00%11%0Ft=%20%17%20%0F.(30?%1A%10e20%02-ia%1D/%0C%258%01%11%03%1Cy%1D#%1A%0B(v%0Fa%02.%7D%1A.7%0A.%19)%0F?%1E%03%1E%0F=#%1C%0B!%02%1Eb%04%18/%0D=%02~.:%1B,;=0%3C%0Fo%19!%19,%093%03%0E%10s&#%1D';%1B%1B%00%1E%1B%17%08%0A%037r&%0F%16%1D!%066z%0B7?2%00%7B%08%1C%7B%1C%07!%0A%3E%22%09y%04%0F%086.%08%00%0Fk%11%06%06%0A%03%00%063%07s%1C%14%03%0D%04%03%09%0C%1F?,%0F%7B%17%1F,%0D~7%10)%07&%0F%3C%11%19%04%16%06z3%11~%02%09#?%04f%07%06%1B%0E%09%3Eq;%0Dkey%00%02%20%1E%14%00%0D%12%03%18*37%7D%1E%175%11yx%14%20%19%01%04%0A8l%0A%0D%16%1Ax%60i%09y2+%3Ee%1C6%0A=%15%12%12%0C%06%0C%1D8,%0E$%20)7%08%03%12'%1B%7Bx%18%09$%17%60%18%06%19%090%14%0E%19,%19%1B*,6%06%0B%0F%60-6($h)x4-%00%60;%09%0D#%7F0%16%138%19)r%0A%1E%13%1E%0F%0C%1F%04l%02w%08%11%08%0E8%072%15%19%02s%03%0F%00%020%1D#%3E%11'%16%09=%15%09%7D6'&%3C;r1?4m%60%09%13%0A$%03e%0F13%0F%14b%00#~%0Bof%20%02%1A'%105=.%20%17%139%0A#:%071$x$%04%09%179)%06*%07%3E%03%0A%16%08$%162%03%08%0D:%15%0A%1Crs%0A;%07x%16%20z%1Db%7D*%0Ayi%14%0D+%03+%1B%17/(%7C!%18%22=%09%09;.%14s4r%02%109/)%01%202%06%7C%0A%19%3Co6)w%7Cwtg$r%02%0A3%09%18%02%0Fv%10gx%1B%3E%3E%114%22q%00%17l'9(x%06,%19s%20%037j%06?t%03&!7%7C#%7F%1C%01%14%02j%22%0B%18%116sg%01+28m%20%255;%20+gxmd%7Cvg%07%15%14&%0B%0A&%03%19*6#$+%11%0E.%0A%1B%1D%17%09#%0A%1B%3E%1C3%00%08~%18%3E%0A%10%3C%0D%00%11%1B%0Cs)%3C(%0A%04%1D)%1B(%08&%0D9%1E4y%03%03%0B?%14%08%00%0C!%18%3E%0A%00%11%25%1C3%0F)%0A-%00%19%0A%02%02)%18;!%00%0F;:d%0A%04z)%18%09%18%189)%18%06%1Dr,%07%18%14#%02%0C*i(%026%08'a%07%7Bu%1A%0C%03%03%0A%07/%20%01(%0A%05%0D)%18%1Dz%04%25%01i8%08%1Bz%1B%18%13%1A%00%1F*%0Ei)$%1A%0Co%11%0D%18'(#%0A%0F%07%09%7F%0B2%19%00r%1E%0D9%083174%01?%0A%0E%17+%1C%00r%1A%14a!?%0A%00;*%1B%0C99$4%3C:%0A*%25/1=%12%0A%175%022%13,%0F%11;%3E2?%184%09%1Cv%0F%1D%18%04%19(%0A%17%11%1A%7B%14$)%1E%09%7D5%0A%1A%00%11%0A5%09%0F%1C%09%1E%0E%3C%0F%03%16%0D%0F,/%0B$%3E3x%1E%15gy4)%7B.#%02%00%0F%25%18%1E%1A%03z%04%094%05%0Fr%7C%18%17%7B%08/%04%18%11%080%20%14%3E%7B%1D%12%0E%0F%181%08%10%0A,%3E%3C%7F%10!z%0F%11%0E&%09%7C%0B%17%02-*9%60%15%02u%09%7C%00%02&%18%22%07%16*%0A$%1A8%1Fg%3E%00%09%09%0E%12s#%0E%07;'%12.%0E%03l%13y%16%3C9#%12.0%046a%1E%22l%20%0B%01%19%186%20%7B%01%1E%1E*%0F%1Ft7%0Aq9%08:9%09%25%22v(%05%205#%1Dj9r%18%0E!?%15r%20%01%3E%10%0A%09'94r%09s%08'',%08:4%19%17%3E%04#%12%0A%0Fn%02%0F0%1Dz?%1C%7Fl-x%18;%0D&%22%06%08%25%0D%22~%086%22&%18!%7D%00c%0C*%1F%1D.%1B%13%00%01'2h'%14&%22i8'%0C'%22*:%25$%7C%0Ba&'%22%3C%19%13i%0E(?%0C%00%05#%03%08%0Cr%09%088%60%19%12e%1C0r%198g%1Cw'%1E%007z%06%7C%0B4f=%00%02%09%1C4%3C%00%099%08;%03%00/=rc1j%0A%01%1B?%1B%03%1E%00+f%00xf%00%60%7D%059%1A9%18),%009%1B%00%13(%0E%1Ex4%60%60,%06%7B4#r-%08%3E%147.7$:%09h%20%17%0F%1Dk;%1C%10%1A%0F%20%169%00%00%3E%0C!?%14*%3C%0Cfx$%02#-%7Br%06%1B&%1C%07%0D%02*%1F%0B&(1%06%02*%1Fx5%25%1F%11%1Ez)%7B%1C%0C3-%17%0A%20%1Cg%0D%08%03%0F*%15%1A$#%08i:%0D%22%12%7D%015%065%3C4%113:;x*%1D%15%1E;%08%1B%08%60%04%06%1E%7B%0C&%122)4%155r%0Ax%7F%1C%12%0F%13-%1C%1Ccx)%06~%0F7%0A%15z%1E%1B%01%1A%09f%06*%3E%13v%1D~1a$/%0E%17%1B'#%073~%60%1F%3C,%05)%01d%1A8%08%1C%1D%3Cy+%05-m%60x%25%05-%14'f-r%7C%1F%03%0A%19%229%08;%0E%02%0C%0709y7%1E=n'9$%22%0B46--!%07*%1B(%00%0F%14!%01%0A%12x%05=%02%1A(,%0D2%1C%0A%06.%7B%1A;%18%078=%1C%19%078-%00%10%14%12r%05%058%11%07*%1A%1C%10%0120%059.9('2z1%13%1E%0F%12?%00%0A%0A%05%03%3E%1C%11x*&%1D%152%0C%0B%1A%1F%18?%1A%03%01%02%16hf%0A-%047%12%026%3E7)(%04,(%0B#b%20%14%1A9:;%1A%10~'+9*%00%0D'8d'%103%04%1C%11-%04(%06.%09%13%06%13&;%17,%12%0D%19%10%13?%03%09%0Ca79%02%0D!%0A%22%184s%175%08%02%10*%05%0E%3C%1E%09%3C%0F%1F%1D%000%18%1D%1C4%09/%13%14%0F%16$%18%1A%03%1Af%110%7F;%08%09'*%0E-4%12%25%0C,%09%20%14%095%036t%17&+26-h##;?:%19%07/%0D%0D%60?x%07%02%1Bm%15%0F)%0Dz%10=%02%0D%12%1B%1C#,%00%1C%1F!%04%25(%60%05%17%17%06%18%09%25-82%1B%02%1F%1C%07%3Cr%089%1C!)-2v;%13$%20'y7%18%001%3C%3E*1%19%10x'%0B%25:%04%22%0Ci%18%0F%06%1Cw.6%0C4'?%0E#%12%07,%01(f%250%02%25%10%7B%01&%0E%07%1C%18;1%0C6nh8,3z:%092u%0A%7B67%11w%7D'%0Efzy%12%08+(%0F2%04%7D%1Ca%09&%18%02%10%11;%22%1A%04%1C%01%09)&%0B15%7D%04%20v#%17f%08%18%1F%01%089%0E/y*3*%0F3(4%25xw%0F%140%25&s%3E%1F%0C'%7F%25%18z%18%1D%0D0#%0F%089%25%0F%03%02%3E(x,8%0D%12*y%22)6k'%08#:%1C%08%08!,%09%1F%1C8%60.x%14=1;&)%0Bo::$%3E%17:%00y.%3C%06%0B%25/%061%09%13%25%0F6y%1F%1F=~63/(%1A*.r7%1B%19%3E#%22%09%09:=%203%197%00%0E%17%19%02%007(%18&%01hc%13%09=%7Fj%00%09,%08&%18%00;%20%08%05i2%1A%0C%3C(%00=%22%03%02/8:%19%22%7B*%3Eb%06%02%0C%25?7%0D;%1E%3C/337y%01m%01%1A%11%0E%0C#)$(-%022%1B%0E&%7F%0546%0A%03$%09%0C%01,%16y%08%3E%0A%25%15,%0C7%1C%1Au%04%1C%20%11%116)em%7D%09+&%0F%019.%17%1A:%0A9/6%0C%0Ca3%1E-&%0F%11%1E;0r%08%119%0A%07%7F%1F%10b%1Aj%09%19%1B%03%1C%00%20%0F%0E)%3Eq)=.2.s%1D%3E1%18%1F%20!z%08'%009%02%0C;%13%22%0E%1A%17r%05%19q%7D%7Dkd%1B%10%1E?%0Di%02%18=4?8f%25%3C?%3Eg%09%04%01%0D(7%0E4%059%3E%17ys%0A%05%18h%09*%0F!%113%09%15%22%05%1F%1F%059%20%09%20b%0A%06,$%1B%07%08%22%03%0F%1A9%09'%19%0F;8&%00=%1C%106%1F%25%18%7B%1D%19%18'yc%3E%7D%04%10)98%15%09%14%12%1D%3Ee#%18%089%0A%01%01j:+%3C%11%06%0C%1Dy%18%16%1E%0D%1E%1C6%14%0E8!%1D%11*%02%18%20%07%10$%0C%052%0B%082%12'%3C%1D%13f,%0C%0Dx%10%09r0;%0C%0F%15!q,%03-6yx%1D%1A%00%16%03q%1Cz6(1%00'%0F5a%0F5%07%06%3C%17s3!v%12%13%18%04%0C%07%0D83&%1E&o%128%20y%1A%08%08%03%22%01+6?*$%1F)j%13%1C/$%1D%181%0El%22z0%12%07%22%1A=%0F!,9%08%0F2a8%0C%3C%03!%20%1A%0D%0C6%147%01%10.&jhy%20=%16m=%20p3&3%16%0F1%13%0B%03%11.4%13)0%20%0D%0Es%0D%0C'3%05%0A%0717%03%1B#%1D%13%02-%03*#%1F%18:%16%7F:.%04%0Eq%12%03%11;%09*%25%1F%11%20%18&%0A%08l%1E'%00%0A3k%7C%1C).%22u;%20-%20%253%7C%7Csxwi%7C%02%0D%0F#%13%11#%1B%02/.8!3%0A%0B6%11%7B%02%0C%0C!%11*&%116%18%13%7B%00%25%0A%18%1A,%00r%1D%20%12%7C%04%0A%1C%0E%13x%08%09-%60%07%09%09%0E%0F%12%01%08y%09$%12%16!6%09%00%03%12%03%00%09%3E%1C%11%0D%14%12%1B%1C%11%0E*%0E%0F%1C%07%0A%03#%0D%09%13%7D%08%1A%0F=%60%1E%00%11%16%0A4%1B%03?%14*i%0D%00%0D%02%1F;f%10%0A%1D%11%02$+%1E%0C%0D%11%0Aw%134.%18)3z%20%0F'%19.%076%60g%13%19$$%11c%08l%0C%00h%22%1C;%06%07!%15%08%19%13%1F%60&%04;%22%06%10%19%1F&%06%01#%7D%1D%0E!zi(%18%04%00%01%14)%2069z-%02?%18%7F%3C%15%15;5%06~m%19#%109%01%0A3,%0D2%7D%18%20%7C8==%08%3E/%0C%03%0Dj%25*%08(-o%16%00%1B%0C%141;(%00%1E%1Ai1x%15:%09%0C#y%04)+%18%14*3y:%0C2%00%06;%05%0E%04z0%07%1A%1661%07y%3C%09%0A,%25%1E&-%20%06%0E!%1E?21x.;7e&%06%1F?%0A%04%3C%12%00%05%0B'%0A%07#%01%14%1D%1Ar%0F%0F%18%15r6%02&%0F%25$%00%0C%02%08b%036%7B%0F%18%17y%13%08%08%0B%17%05)%3C%09!%03%05q%0A%085%60%11(%12*0h%19%12:-%0Dd%11%0Bs%1F1)%11%00%00%01%0D9%1C+,%04m%11%066&%18;%11%04%15%0Ez2#'%10%7F%06%18%11%1D6%0A%1C%3E%12)%0F%0E=%087%0A%25%13!6%12%20%1B%0A%0F%1F89j%07)%18%00%1A%00/%22h%02%3E%0F%19!k'%0A%00%11)%1B!%0Eq&)%1A3%091?6+%60%20%00%0A%0D,2%01%06*%08%14%11%0A%08%3Cz%16%05%0A%17,%7Fi!%1D%0E%0D)0:%19%00%0F%258%13%02q%01%0F:%06)%09%1E/%18%12%3C&%197o7%094%22*h%13(%15%00%17%18%1B98%0E%14:'%06%00%024%3E%3C-v%01%1D%10%3C/w(%17%0Ba%01%00sw%3E%60%131%08%09%3E%1Dz,$%0Fn%15%7C8%04z77%005)%1B79%02)%04+%12%20%13%0A%0D-+%06.0?%1A(3%05r%03%1983%7Fv%7C%17;%15swx%1Co%13%18%03-%1F%1E72%06%3C%7B%11?%7C%09%7Fw;3%7D,%60zo%061#sz%01%1C;%03%0C%09%0E%1Bz%16*%7D%0E%17%7Bs8%0Dkbz$)%18ja%7Fw=/%03&y&%7C%0A67%02+%0A%01%16%1D98$?%12%20:1:%7C)f,%03%05%3C%15%25.0%7D%020893%3E%3Eo'%08%0E%07;?!2.%0C988%3E%06%1E%17!%3E%0C%0F%7F#0=%3E%06f'8%3C%03%06%25+%0B%09%02%0B$%3E;%3C;%16z/h&%1C+)%00(b%7C#%0A%17o%7D~%1B%20%0C719%00%22%0F%1Bb/%0A%25%08%1B;%7D6%1F%01%1A%181)#%04(?%1D,*%7B%03#%7Dt%00+%09f%0E%04%1A%00%10%00$%04%1E%1C1f%20%12.%08%1F?)$'ya%04*x%03%04*%11.%20%18%01m%039%0C%19=#g8%16%60%16%1E6?j-%09=:%0A(%25%09*%1A%02%09%22%14%13%7B%22%10%19%05i%16%1F/%09=o%19%1A42%08%12%03%0A%17&x(%20%0Cw%1A%0C)%07%20%08%09%09r%18%7C2%19%1Cl;*$(%16%0C%07&%07'~8%0A%1D%04y%16%03%14%20%10%08!m%14%04%20%60%20%1C6!9%1Bz%1F3*&%20w+%02!%16%22%1C%13%1C%021?%04%14%18%1F7%09-l%19%1C18%18%1F3*%02%1D%022%3C&/*%1F.f%1C%04%1A+%13%18%034%19%14l%0A%25-%07%18%1E%22'%0F&+%1C!/%00%1A%05*%04~2/%18ng(%17%608%11%1C)0%1F%19%183/%00%7F%0C?9%20%05%00%08h%09%1D8%13%7F%0C%05%0F%13*%1Fh%17%22%0F&%06%13%02%05%0F'%1A%08%0A8r%11%1D%039x,%1D#(by'%11%0D%1D3:9%07z:6?v'%06%08a%190%25%1A86%20%02%1C%7F%3E%07%1A%09%02:k))p%20%1Br1*&%7B?%0D:%3E3:+%17%13%09-%13;ib%11%14%11vk%22%1F%13(%1E%039r49%7B(%06%12%0F%04,-%05%054%13%187%3Er5~~%0E%7B.%25%00%00%015%0A%06%06w%0B%16%08*sy3*xuy%021%1E!%12'%0B%1A%15%05x%06%7F%033%11%02%7B%163%04%1A%11%7B74%07%0A%08,%0F%1D%1E%19&;%17%13%069%0E%3E,%0F8xp%1D%7B2%11%0Eq!(n!%02.f!%18%1D9&%05%0F2%11%0E%04%07z%01)-p%0C%7Bmd&#%7B6=%1B#)~#8:%08%02%03%3E%1E%07%0C%19%05%01%0C1%7F%05%22/+%09$%00%09%19%16%1B%7D%18%00$%3Eg%11%053=%11%02~tx-i%1A~r%047.%1C$%0A%01%0Fi%1B%3El/%7C%17%03s1x=%1Ch%7D%00%0F7%16%19%12%022%7B6%1B3%15%7F(t19j%13?.%14%09%1B%06%18i:%08%10%1B%02,%16%0Ct3&%15%05%22%0A~%19o92(%08%09%10%04/;%20%22%01:!+2%05%15%20%013%00&%1D%1C%7D7#%0D;%03%1B,s#%147,.&%036%1A)0%029,;%3E8%0A/%01%11%0E%19%0C7%08%12,%062%01%18%00/%18%60%1E%08!3&;=%128!s%12%25ad%11%14%06w#)f4;%3Ct%7D%1Cy%7C'%18%1Fx(%0A%16%3C%25#%0F%0F%07%1B%7D9r%1D%03=i%08%02%1E'%13%1D%0Ap%60va%19%0A'y%20+%00%11%038%04i(%079%13$%3Ee.%06r)%1E%11%01r:%17%03%01%20%03%09%1D+%18%0A%09&%09%18:%0Aq%18%03%183;%00%1A%1F%0E%11$%05s%0Fk%1F$%04%1A=)7%7F%04%01%0F%15!%12$%3E&=%01%0A%05%11-%1Ed%05+9?%09%1D~%0B.%0C0%19%20#%3C%1A1%60!1%0Ewk%11%02l*%0F3h:%09%0A%065%20%0A%0E,%19%18%1E%22%02%0E)%17%22%0E%00*%0C%16%04%0A%02%1D%095%0A%20%0B,%7C%083#%0E%059*'%7D)%3E%060%1A8%1B%02%25%0B;!%0B%0E7%123%12%00%3E%1C%12%1A%01.%056%0C3%0A%09%0A%3E%3Eb%1A%00%0E:%09e)s~%0F6;%02%0E%0A%07!f%09+%0A%0F%1C%60'%09$%091%1A,p%0A'%1E%1C%0D7%19v((%0D%04%02%0C.%18&%09%1E/%135%1F%12')%11%11/.%1C%0C37%0E%11$%076#%096%0A~%08)%0Dt%01%0F%1D%05%0E%122%0Ao;s%12%127%18%7D!1%0C%0D4%13%1Dq%1E%04m%03%7B%03%19%1E6%16,%09#%07%1Bd&%0B%00%7D7?%0D%0Bs'i;%11%0Af%002&%0A*%09%04%0De%06%0A(%0F-;s+%18%205%1D:%25%1E=%3E=%01%06%08%05%11?%0C%10%0D=m%0A%1B%05;$5%1E%7Fj%0E%14%3E%00%0C4%0E**d8t%02%0F%01%04%3C9%22%05mh~%15!)%15(%03.%0A%0F%01;.%14%0A%0F$bg%02''42g#2-1$9.&/%3C%7C%7Du%7Bwk%7C%02%0D%0F#%13%11#%1B%02/.8!3%0A%096%12%0E%03%0C%0C!%11%05&%0D9%1Ca%3C%03;%0F%3E%1F36%08=%1B%14%0A%02%1A%0D%0C%12%1B%05%0A%04%3E%15%12%00%07%0F%15%01%0E%14%12%1F%18%14,%048%0F)7%03%14%0A-%3E%188%00%01%3C%08%12%18%00%059!9%0A%18!%25%08%11%0D%16%07%19%1Bh%02%00%18%19%1B?%1A%16%0E%0F%1F;%1Au%08%06i9x&%0A%17%08%13%22%08%0A%05(%01%3E(%0Cx/8.lf)%14%13%1A%17%1C%0F3%002%25%02%0F%11%20r%13%09zi%11%09%18f/%18'%0A%03%22%0A%18%25%3C%25f/%18%111%0F%00w%15%11%0C1f%060'%0A%15%25%1A%18b%0A%22%0A%09%08%11y%128,%1C%061%00%18%7C%3E!=%04%7B%7F+%02%0A+%0D%09%121%02%04%02%0F%0F%11%25%05%1C9?e%13%0C(#%10%1F2%22%1C%04%17%14%117%19v%0F9%03%22%01%066%01.%0D%05#%10(,%03x*%3C%11%19,/x%13'.&%11%171%00%06v%04%0Fah.%0Af%1B6gz-%3E%7C=i9y%3E%3Cl%11%60&%05%040%153%04%08%0F%0Bd%1F1%0F%7B6#=%0F%0A9)%1D.%0A$4%1A4%057sw%11$%01)%0D%1E%1A314%06~%0C%16$%00%09$%18%14%04%253z%1A)%1Cy%06%09%09%16$%00%0C%18a%0A%1Dr%0A%07%0A8!%08%18=%08?%18%16'z*%0727%0F%18%107%09,%0A%0C%16%11%0E%22%0A%1E%15=%07%05%0E6%0D%60%04%18%7B#%0D%18%01%05%0A/17%7F%03%04%0C%20%01%0Dw%02%1Fl%09%0E%14%06w%15%25-0=%18%08a%01#%0F%1C%0E%19(8%1A%0F%1D#~6%1A#2%1B%07%06%01%16%1C%1F%00%00%7F%0F%1F3%1E&%0A%01%1A%14&%12%02ej=%1F%0F%0A~h(,*1%1B%1C%08#%12%0F6%0A(.%19%11!o%12(%07%3C%08%0A%14/%00%02)h%05%19%16%20%197%0A%12%07!c%1C*%0E%0F%0D!%0A%19%0A%17,%03%16%04%3C3%25!%1D8%18tx#/9%1D%18842%12%12%14'+%1D%3E3*%1E%05-%1E$p;%1F%0D8%7F$%0C%1C;;,;%05+8%15)%02%0E%1A%203?*%0F?%0Cd,(#y%18%11z%0A%03%18#%11%09#%06$,b(%228%163%05=j%1Ax(4%7F%08%1A:6%7D'%02%0D%040?%1D(%18%0D;#%1E.%04%197%20%12)%00%036%18%06%10%1Ax%0D%7D1%25x8%60?%046%7F%07%16d%04%12:$.4#%0D%08;t9%1C%04.(01%01%048%0F:%19%1E#%0F~%1Cd%05%15%7B%0Ai%19%18q%22%7Ca7'%068%20%0A?%1B0%09%04/%158%06%08=6%17!%15%3E%0B%10%08%7F&%09%0C(%22%13%02%02(1%07!&%22%1C%3C%11#%12%0E!%0E8%0C%07%12-%18%12%08*?7.%12(/%0C:%18%1B$%13%13%0C%14%0A%7B%1B%12%185%07%05%1Bz%20%12%04%22%0D'%0F.%11%7F%17%0C%1A)%7B%08$%18#%1D%1F%7F3%0C8%1F7%1C,~%1E2&%196%03/%0Af%02%22#?%11?%11)%02%0A%16%11,%04,!%1E%19;#%3E)%08%09#2%0F)%01%11*2%06%7F%1B%09%00.#6:%13%3E*%18%05%13%15%3C%14#-%1F%05%08%13%05/6%07#%10%00)%0F%02%18%07%3C%0C0#%06%10;%7F%1D=%07)$%0D%3E%1B%0F4#)4f:%09,%16%1A7:%009)*%12%3C%09%08%0B57%00%00%19%16%1F'%1C%0A%20%08k%03%1D%17%1D6.%11%09t%12%1E%08'&%0E%08%0F;%11$%0F'%3E%003%08.%00%0D.%11%120!%1D%18%01%00w%1A%0A%3E%1F%18%07%0D%18t?,%112:%1C7%09%0F%1E~r%25%12x%089%14%7B%08%05%03%1E%03:%25%0E*%7Bn=.%25~87%7B)%07%1D%161%0A%0D%17%1E6%0C%163q?(%08=!%09%06)?%14;%1B'%7C%0Ee--%1B%0D%1F3%1D1%13%22?%06(%14z%14%1C4%1C//w.%14'7%1Ay%03%14%09p%13%19;:z'%1E%0A%0C%1E%1E&!%19%17%13z%17%1A%09-%12%03%19%0D%0D%17(%1E5%00%7F+%03%7F*%0F)%13$%1F*%3E%19l%18&%10%0D%7B%09%3C%60%10%0D%08h(%18%25%1E%7D7%06%059#%01%1F':+y%03%188%07%06%09%22%0E%05~%19'%0C%0F%16%18%17%11%1B%0F6r%14%1C%054:%1E%17'%08%60%11=%00%06%7F+%06%7B%2289%1A4/p=%180%00z&x%0A8%1E%7Fs%1F%173%19%0F%083%1A%0C%06%08w%0D%09%16%22%1A%02!&a%18!sy%0Bj$;%0E%03%18+?%1Es/%00?9*v%1F/%1D%60%7F;%08%0A-7rv%1B%1E%0F*%7Cssx%15?%1El%13w%0Ca%05%12z,%0E=!%0D%7F%01%08'9q%1B%05t%14*7$6+%1B%1B%20r%06%0C%05%600%1C%17(%1B%0E%0A~z%3E%1D)%03%04y:%04%60p%20%7D%11%0686%05y%10%05%7By/%0A*%1D%7B;*%1D,%60r/%048=*%03pscnh%7B%0B%7D%08%10&s;%7Cz,%12z%0D%09z1c%07%14%05%05n%14%002%7D7%1F%03%1Bt2%08%08%7D%09%199%19%09%17%095%0F%20m*?%13%06%25.4~%0E%7Bz%012-%07%7D%1E%00%06'q%7C~%1D%19%0D%19%03%03/%07r%11%04(%0E&z%17%05%7F%17%22-j~%01=%03%0D%00%01%07%1A)!r%0E%1E%20d9%0C%059o%22%22s3%7B;%09f%0Fs%1E.%14%0F%0B%1A%05%0A%1B%0A%0F%20z%01%178y%1F,%03%60%13/%25%1Ar%09%1D%17%7C%1B.c9x%019a%012&z%08,:%0A%12%3C+%60c*p%7Bw*6%194!6/g%09%10=)h%03%0A%18;%00%1A%60,%05%039%15;85%03%7B%60(-.%1B%1E%1B%1E8v%11%18%01%18?%0F%1Be%18%13%0F%1B%04~#&%1B%0Cy%1Dad%0D%141%013'#%03%18%0D%0C%17%1A%05%0C%01%3E=%3E)rxl%16z%119)a%7B%20+%02'%11%13%02%12%1A=1'%09.%02%1E#%148l%18%01;iz#%0A%0F%001!%0E#%1E6%07%0C%00%07%18%14%11%11%04%03%0A%0D%09~r%05=/%09%7D%0C%08e%1F%01%1B&%12)l%12f%00%7F%0D*%60.7=%0Ak%02s%06%7F%00%0D%00'%17%0A&j%60%0D%06%20%055$%1A%0C%0C8='%7Cxz(2'%20$?$.=frf!%00%3C%3C%16%0A%14l2%18;,8%01%1F%0D2%1D%7B%0B%12%1B.%00(1i%22)%03%06%1F%15%1A'%04;%01#%06,%0846%04%7F&%1C%25%1B%13%18q'c%11?%12%00%06)%3E%3C%1E%0B%08%1A%08!%04vr:%1F'%00(%18;%00%12(%04%13%0Di%12%0A%18%2041e!4%0C%7C%17d%13%07%0E;5%1E%1D%02%05%1F%14%1Dy%133%1E6h'4%02%25%0C%0599(%18%0A;%60r%00%14%0Cc%3C'%09%3C%1A%05%07%14%19%06%185%1F%12?%0Bo%00!4f*)?%09%0E%209%11%11%04%14%7Fz(7%06%02%7B%0B%3E%16%02%04%1A%05l%1E%0F%0Cyy7%1F%1E%00:%3E%187&%09%20%1E0%1A%3C*%1Ax13%0Er%07vte&t%00%0D%0B%17%0C%0E%12%0F%18%08&%02%22%086%1C%00%0D%1A%3E1%03%1E',%7B%13?%0F*#)%1A7%7D%16%3C%1F%08%12!%04,%03:%1D%020,!%01%11%03*%0E%07%157*%10#%0A%11;%3E%04%7B%0B*%14%02%12%3C%0D%1D%7B/%12x%7Bh%12%05%03'%0B1%092s%0D4%15%09%13%08%0A'%11?/-%1F%00%00'9*8%04%18%16(y#%0A1%60%096%00%0D4;*%00%086a%06%25%04%7B%1Fm%14#%15%014%184%0F%12&%22%0C8%02&;%06%1B1:(%0D-i%07%1C%20=%7C%11%02%1F-%7C%0241%0Cs%0A%02:%09%0A1%02%1A%1D%11%0A*%08%0F%0B%19*%03)%3C%00%3C%1E%00%1A%0F%0C%1E2v&67h%09%04%1B%0D*(%02)8%1Aa%11%7F%06y)59%1D%209w;%13%606%08%05%16%06%18r%7B%0A0;%0A%0C#%17%1De%1A*%02!%08;&t%0F$!$z%048%0D%14#%3C%09%18%0C%11%3C%1A%02f%7B%0A!%1D%16%068%1B%02:lze8%11!%0B%22%0A%0C%17%7Fp*!r%13%7B-%1A/:%15%0A;~&%1E%3E%0C%0E%09'r%11%1C%03%3C%0F%00%17%08%0D%22'%17%05*%18z6*1$%22%1C)%0D7sq9%08%0D%01%0E%25%05%0D(%25%09%1B9%18%0E!f5%09/)%60%1A%02%07(m%16$4,/2'%0E%12%07%1F%00dz)#$%18%12)%223%1D%18ir%18%1E&%1E%1C/+%0D%0F%1C8%0F&!%1C2%1F%7D%04s9:=27%00&%09%25~%00%00%0C18'%17%1E%0F%12%14%0A2%09%07%1Acyp%00!%0A%06%7B%0Dx%0F:#%19%20(%18.i:%0E%0A7%1B%09%0E$%1D9;f%11s%0A6%03%08%3Er%1D%03%1B%14x%09;%16%125y%08f%0C)b%3C7%22;2%18,%00%09+=%14%1A%006%7Cu%02$-'++79%20;%3E55g%15#+yi?)k%0A63?.9bncxr~b%10%1C%0F,%01%0F1%0A%02%20%3C&3%22%0A%08%3C%09%0C%12%0C%00&%0F%117%116%08~%18%1E%0A%0A%1A%0A*%12!%00%1C9%1D%15%09r%08):%02%3C%038%1F%1B%07%0A%17%1A%0B%17%18%1B%10%0Av2%01%09%0A%0A+.%13%18%00%1E%19%1C%11x%00%01!%1B=%1C%13%13%0A%10%25='%20%02%1F%04%11(~+%189%18%00;&%0D!%18%04%0A%17%0B%12%7B%18%7F%090%11%08%0A%02%0F%20%11%088!z%18%18$%10r)%1A%0A%03%04%0E%06%17%1F%1A%0F%089a%19%22%08%089=%1A/q!z*%1D,%18%60%0B%1D?(%10%18%03#%1A%09%0E%08~%00%11%09-%08%06%18%11%20%00%1F'#)%22%0B%01)?7:%0C:!%18a%0Cp9z1!),2;%18%18%057*9(?%0At%0D6n%01zqs%0F8%3C:%09%089%18%1F%06%0Cs%14a%19%0A%13%04)%0E%053%00%13)%12%25%03&/)+a,%00%1D%0C+%1B:4$(%1D%7B%3Cx%04%07%1C6%0C%0A2(7%11%3E%18%22%2254%0Fp1-%1Dc%03'%07w0g9&%05%0B,&%1C%00%0A~%1B%181%06?%1A6%60z,r%7F%3C%14#$,%1A%3C%09%13%0C%057%20%60%0A%04%1F%22(%06%1F%10$%22%1B9%089%3E%02!'%0A%04=~,e%3C%0B%0E%06*%11%09%17-%3E%13%19%06)%1A%1F-%00%0F%0B#%0F%18%3E%0A%02%3E%08%1C;%01%07(,%1B%11%08;y%201%1A%0E%19%06%033%13%0A2%22%03%20%7B,%14#%09%15%07%19%0F'#%0E%07%0A%03%11#/*%09%20%0E?1%09%7B%04%1E%0F%16*z%12%1A%01%18%11%3E+%03-6$%08%0C&v%1C%05'%18%19%22+c'%07%1C%18#%03%18%13%1F!%1Fb,x%25%04%1A%08,%00%0E*=#%0At%03&%109%0E%10$%18%1E%118)%1C%08%01%1A%09)%09%06%109%06%12:z%18%16~%0B'%01%138%1E%043&i%02#%04%08y+2!1$%05%08%16,0%7D%19%14%06%12%08*%0Dr%14z%1B%094%03$x%00-%1E%1D%198-3%0Dhh8%10/%14%0Fe991%7C%0B%04%05p#%0B%177=%00%1C%20%1F%60%01%1Br:%08%09%09%25s?h%3E%041%02*%17#.%03%05:k=(%17%0E%14%0D%0A%1B#'%1E=%14%05%1B%60*%20(%3E%03%1E--8%0A%15%7B%05%0Ff%3E%1B%04(hd%60%08%00%1E%15a?-?(%01%22%00#:)%1C%04f','!%3E9x%3Cv%1C%141%18/%1Aj%18%0Dy%0D%7D%01%17s%032%1F%0B3%1B,)%1B%17%1Ay%00%1F=j%602%15(8j%01%7Cyf%7D8%11%0F%22z)!%12%1A%0F%07%1C%1A%22z4*%0D%12*%3C)%09%06#%00%08%03%1D~%11%03%0Fr1#%0F%1E%1Es%03%1F%1C3%06%09.v%1C%11%029%0A%02.7'%05%7F%22/%12/s%00;%3C%13%1Dr%0A;%0Cf%05%103%7B%3Cc%08%17%22$!%11%7F%12%3E%00%1C#!9%07zi9%02%06,%1F%0Ac%03*#%0F8%1C%0Er%22%0B1%17%03%14-6t%1C%0F,#%256%142%0C%06%02%0A%19%0Cu&%0A5%1D%22'%22%17%10%60%7F%03%00%07%08ar,%22?=d8(1%0F%18%0A%18%08:%20%0A%12z%06%0Dv0%1A%7C%00%0A%03%20#%0Ex,%0F%1A!%1F%04&%05%0F%60%0Dqs#%15%11'&%18%0F%60%1D%3E%07%07%04%1B%1D%22.%1E?%12%1B%18%14%3E'a;%0602v)d%086%00%1A%1C%60s%0A%22%0B47)8r4l%04%3Cw$%1F%09%0A%7C%10%60%17%1B%15%04%00%11%14k?%22%25%3C%1B%0E)2%00%08!%13%16%076zy%0C%2222:'618%203%22%1E?,%1B9~%0Ab/3%04!j%09%09$;%05%20%11%0A%06''()-%0As=%3E%08%00%13?%1Dj2%061%0Cz%18%11%0F%18s;%18%1D9$%7Bz%0A%11%09%05%08%09%13*%0D9%0C%1C%0B8%00%13,%7C%01%09%04&%03%08%3E%11%09%11%0E%007%00%09%03%7B!%0F%13%18%12%3C)%0E%1F%0D%04%06%1C%0C%1A%20%10&%22(%1E%3C%03%3C%04%18(%02%22%19%1F*%1E%1F)#%0F*%00%02t%0F;%0C%19%07%03%09%7C%1Fd%1F-%19%02%1D%12%1C,%03%7B-!.9%12%0B%1D%03%004;')%19%18%06%08#%1D%01?x(!**%00%25$-3%01%193%01#%00d%1D0#x%1A=:'%3C:(%7D%18%0C%0A%0F%114;%0D%18)%0E%12-%06%60$%18%16%030%05%25%1A%13%00%0B'%1E%1F%06?%19%1D/%3E%04%3C%25%13%18%60%07%0D%03%1D%20%0E%1E%12%16%1E%19%0A8%12%10%114%1C7%07*%11%0D%0F%3C,5%12%00h%07&-%08~%00g(y%0E%3E;2?,3%1A-%13,&~%0B*%15%0A%16%09%07%1D%11:%06%0E%1B%0Ee%086%0C)a:'*,%7D%00%1E#s%25,-ax5-*1%09%0A%09%1D%1C%1B?%08&%1B%06%0E%09%09%13%12=%16%02%20v%7D%082%13%0A%14%0E)%03%16s%1B%1B%7C%1F7%19r%25(4%0A%1C%0D%1F:(%25%7C%1B&%076%059w%02%07%00%13%08%03%3C?%1B%1B%1C%00!%0D%106%1C%05(%7F!%1F%0F#z;,%12%7F2%0A)i%14%20%17%19=17%18r9+3%3E%13%18%60*1%00%25%1B8%051%1F%08.%0A%057%15%12%04%09~%3C'%12%13y%0F;7y%20fy7%07!tz#%00%03%03x,%0C%15%1E=%08%09=%18%60%3Et%7C8/%02~p%3C(7%0A%03ty%25%16%1E%7Bs%0E%06%18%133%0E%0A=%1C%06$6%0D)%18%119%0E%1A%07%3E%0A%0A%14%0F%07%126/%16%7Cvn1-;?:t%15yqr&8%01%09%10%01%0F%1E%01x%032%7Bl%17%02%07%03%07%3C9s%10%0F%20j%06%227/%7C.%12zw)9%08%1F?%19.%081i%7D%091$*6%0E%00?*72%0E%0D%1D$%14%11%1A%1B%0A=%1D%1A%7B2%0F%17%1C7*%032x.%17%3C%19%7B%0F%18%169u%19)%13%02=08%00%0F9-%17%60x*%20%0C%11%0Az%0F'?4%1C-09(%09%0E/%15%14%0A%1B%09&%18#%0C&)%0F-%07s%05#%7Bo%19z4%1B%1D%3C7%3C%02,%19!%1C=%11%0A&o#'v39%01:%122%7D%16*6%12%10%0F;*%11-s,*%3Ef#r%0F%3E%1153%20?,%1C%17z%08%1F%06%0B(x2%1B%0A%17%07%25%00%7F,%18%01%089%03%7F%1C;%1A6%22e%0D%13!%06.%062%0A-%06%60%06%1C6%0F%02%089%14%19:%03%18&?%18y8%02%16%1C;#4%18%09+;%07*%1B:%0D?%3C%03#%0Fi%1C$%22%20&%13#%22p%12%7F%15;%045%07%0118%3C%03s%07%1C%05%02q%19z3%09%25%17z?%0A',1)%0D%179;%0B%03%0D%16%08#l%08%05m4%07%04%19%074%20%3C%03&%06hc%7D%25%02!2%3E%0F4%03%0A%10i%03q.!l3y%13~6%08%13%3C%00,%081%19%08%14'z%09%01%12&%22%1D%1D%15%7Dq%1A%1F%09%19y%0A%0F%7Co%01%09%02%04)#%12y%05y%0Dm%1E%02%04%1Ec!%1F?%00&%0B%10?%1A%17%11%14/7%02-%12%0D0%09%3C%06%01~#%0A%20%063?%0F6%0E&?v%12%01y%07(%03%10%09%3E6%22%05%1B%16%0E&%02%1F%17%11%20%03%13%0F%09%1A%12%04%086%13%1E%1F%07%03%02%13%11%0F7%12%0B%14%1B%18%03%3C!%0B%05%22j%60%25%0Ab%18j%0C%0C%0E%7D%0C%00%19%1A#%3C=r%03?%18%14%04%20'z%18%1C%030%07z%0C%07z%03%60%0A+%05%12%0E%3C%05%1B:%09)%03=%18?%05x%0C%7Ch9f%09~%01%019su%0A%7F%60%1B%1Fp%0A%05%16%05%7C&%02%0C%0B2%22%06%02%05%18%05%0A%19%7F/%1A'%0A/8%0F%11%11%0C%0A%7D#((:%22x%09%3E%09%1F;%08%144%11%045%05%0F%18%1B'%15%22%0B%00%11%1A%18%19%0C%18%7B%08&%0D-%1D%11x%17'%3E%10%11%7B1%04%14%184,%00%08%20%1D%01%0378%0F%1A'8%03#%0B*%13%06%098?%3E5/5%03'%18%07%03q%08%18.%12~%09=%07:%05%12%03%3C%05%18d#%0E%0Dv%18!;%17%04%14%0F%07%7B%00z%1F%1A%00%02%0E:e2i%04#8%07%3C?)%22%22$%3E%14%05%13*?h%1E:v%13v%1Df%08l%07eh%1B%19%16:%7F)%08%0A+z%00%1B%17!%19%01#%09f%3C%0F%3C,%10%13#4%1F;%1E8%12%03%09!k($-%1E%17;%02%00%10%25%0F%1E%15%1D%22:4%17f9%0F%1E%05%1D*%13%0C,:i#%06%03?%7D%1C%15%7F%22?w%0B%1C%13%16?:?1,%10'%05m%15%05.f;oi,u,'%1D59x.%25%1E7%05%03%7C%25m%1B?%25$~%16%15!9%0A%19%1E%15%1C8%04%192%12%19%02r%7F:%1B%07%13/%07%15e%20%0A%00%19%0E%25&6%25%0Fh%15'%00%7B%19%08%12%3C0:%0F%0E7%07-%3E%07%0C%11%13%0A.%18%14%18~%18%00z%0F!s9%1D%7C%142(%14%7B%00%03%03%25%00;%0D%0D%07%22tr%3Cncy':%07%17%7Bxx%11wtb%138$%02od%11%0B%0A%20%1Bi%0E1%08%0F!%07%0A%0B%19%0D%1B(%00%09%1A,%3E%02%1A%16%08%047%07%25%16;%0C%0Bf%0E%04%25%07*%13%1A%16?%08n3%7F6%09!%1A%01%0F%13%1D%0C?%14%0F7f%16%1E&3*%09%1F%1A9%0F(%04%1B*7%02%00%08%0F%1B*%02%09%7B%1B%0E49w#7?%16%11)!%7C%0D9%1B%00%7F#%18%11%1A%11$%7C%1D8%086%0A9%18%13,;%0C%09i%1F.9%08+%0Ch%1C%07%1F/%1F%09%0A%11%3E%1C,%02'%09f%1C%17%1D%1A%0B?%17%18:%0A9&%040#%60(%254%14*%06%14%60+!%07x%25*!#b%25t%7Bx%0F%1Ds%0D%09yo%3C%19%22%0Av%14d%000!%7F%1E1%04q)!la;;/%14%1A%09%25-%1B%05%10e%22t~-?#%3C%04%22%18%0D%3E%25%04,%0A%03%12;3%1F%014i%04%17)+=%06%20;~%1D#%04%3E%0A%0F'%11%1D%04%04/'m$(%0A%1E%14m%1A1(%25%0C%17%12%60%16%18x%13c%1F%06%7Dw%12%08/%0F8%08%1C%1Bx%03%04%0C6%12%203%01%08%183'%05%11$?%1A%22%17y%06(%1C%0A%06%60%22%0C:1x%08+2%02.%25%1A~/*%0D%04)%0D%14%15;%0C%25%08%3E%179,%09&%3C%1F2-=%188%07'%09%0F%00;9%04%05.%1F%1A9%7F/%02%0Bm%09f%0D!%0F%15%13,%02*%00%18%12%1251%17%1B%11%02.%03v3%06-%06%09xt2%04%12(7l&s%10(e.%11%1Dx%20%0Cm%14%02%07~(+1%7D;%0F4;i%0E,%01%05%20%14!%0E:%1E%3E%16,%08,-6%1Azs%04%7D%01e(%13r%1E%001%07%0A%0D/%1B($%08*%0F%3E)/%08%04-%1C)%13%02%3E4%1Eb%19p%0F%14((%7F%0D%7Fzk%7D%25*$%0C%0F%1E3)%01%7Daa1%20%0C%1D%18%09%20%0C1%1F%097/8~%1At:%04%11!%7Dl%09%018%7F%0C%007%12%06/8-?%08;?%206%11%04'%08%05l%7D;/%25%19k:%05%0A%11%1Brc%0E%00s9%0C%14z%04%0F;.%09%19%06%09%25na%0D&%04%07%1E7-%13%19%0F%08%1B%07%07~%7F%15%00%1Ft?:#b%1B%13r%14n%12%05/%01%7Ck28l%11&%20f%0F%09%1B7j%14%3C38+%3E3%12)%097(%03%0A$%1Ae%3E#%0C6%1F)8%048/%1F+%1E3(jz%7D%1F%00#%04%3C)%11!%026%1C4%13%01$%04%19):%20%20%13%20%1F)&%07%07%05%0D%11#%09%0C%04z=(%01%15)e%0C%0A%0A+z:%13%7B:%20:!%0C';3%04zi%16%0A%25%3C%02%18%1D8t%12%05.%19%07s%1C80(%1B%02%227%14%3C%60#,%1A?%17%005f,o&%60%08%25+%3E%04%04%14%08e%18%06/7:'1%1F%0A%02%01%0F%1E%09%0A%17#%0Br%12%11%09%7C%18.%22%04%02%09%7B%11%15%0E%14%1B!%11%18%20u%7D#%18%12,%16%1De%1F%19%09%04x%16jb%1B%06%1A%08%09%13%1E,%13~44$%22%3C(t%02%06%25%7C%00?%19%08%14%12%0A%1A%14%08$%1D%0D%60%19%1C%10%03-)%13y%14z%0B%18%1B,%11z%0A%16%09%7D%12%20%09%18%1A)%0B%3C%14%03%17,%18=%0D)3%1A%11%04*%3E4%1F%22%02/%18%1E%0A%09&-%10%00%12%17*%1C%18%13,j-%1Aa%05%1A%15%3C%1E%10%16=%19(%03%18e,0%0C%0A.%05%02%05%04%013%09%0A%08,%1Eh2.%0B%3C%08%114%02%22%1A%09.%03%0A#,%09.4*%15%7C%03%3E%04!%12%0F%00;%03%0A%05%19%08%12%17%1A%18(%14%10%13$%0D=%03%10%14%0A%03=%1F%10%1A-%13,%7B%144$%06%3C%1A%08a%3C%17f%08%3E=%1A%25,%09%3E7,%14%1A%0A?%068%13%0A&%00%19%0Ay%0A%17/%1D%0C%18%0E%04.%1D:%03%12%0A%16%063%09%12%0C%00%1D1%1B%04%1F%14%06%1B%11$,o%08%3C%08,%0Aj%00%09%14z%16m%06%3C%02%3C%1F%09%13$%22*-%10%04%3C%14%7D%1D%18gs%14%09%16t%09%0A(%02+2%16,0%18%0D%60%17%02%20%0A%09%101%3C%18%0A%036%04%13%18%0A%03%13%01%1A9,%1E%1F%17%08%08,(%08:%02%0E,%076%03%1A%06*%04%10%07%20%22;%0D%185$%12%20%04%3E%17,%03%1A%0A%18%00%0A%12%0A%1D?%01$%06,%0044s%12%0A%06%18%06%1F%10%02%01%08%06%02t%1A#%3E%04,%03%1A%1D%18%05%19%0D%0A%04t1%20%0A%0C%1D%18%05%00%0C,;i%13,%25%0A%3E%1C%04$%12$:%0A5$$f%0D%1B%08%3C%0F%20%14%00%09(%20%0A%1F68%7B%14$#8%14:%12$&%0C%17$4$&6%7B%0A%08$x0%1E$+(%1A6g$)s%1E68%0A%00%12!%00;%12/%12-%00;s%12%12x%00'(%16%12v%103%3C%07%02'*%0A%124,%18%00$%20%03%3C*%0F%03s%0D,=m%7B%02%04$=6(%02%14%0A%0Fm8%0A%08%7F6%3E5$+%0A%08%12%09%19%19%7F%1F%1Ci$p%08%05mh%02%06%7D%0C%00%25%7F6%12z%00c%3C%0D%0A%0B*%1F%3C%18%1A%05%3E%18%0A%06%1A%1D%16%09%0A%14%09%1C%14%07%06%04%02%0D.%03%1A%04%19%0D%3E%00%11#,,%184,%07,%0C.3%1A%0A%12%05(%15%0A%00%7F%17%18%14%7B%0D.%1C%10)%7F$=%00%08*%7F5,82%3E$%12%20%1E%13%03%02%12%1A%0F%18%08%22%00%0A3k%7C%0C3*%3E)%3C.a%0C%3C6%25%25%258b%1E?/%1E%04(%06%12$/%20bnc~s%7Fb%10%1C%0F,%01%0F1%0A%02%20%3C&3%22%0A%0B%3C%0F2%14%0C%03)%0F%007/6%3C%06%1C%11%1B%00%0C9%1C;%09%13%0A%0B.%15s%00!%0F%037%0F%14%09%16%18%1C%1F%10%0D%22%3E%12#%00%09#6%11x%25!&%08%11%0D%25:%1C%0Ai%7D%00%01)%1A#%0A%0B3%0D%0C%7B,*%1C%037%04%11('%1F%3E%12%00%00%0F%20n%11%0A(,%20%13i%3C%0E%0E%0C%3C%12%7Fj:&%18%13%20%10?)%13?%09/%19%03m%13:7%25/%1Ch%02%06#%17%00%17s%1B%3E%1F%18%1D%3E%073-%03%15%0A%08=,!!%12)%01%05%0E%3C%11*%0C/%1C5%04%03%029%17%15%0D%16%1Azm%19*%14%02()%12.%179%7B4;%11%19%0A%16%13%14%7B%0B%1E%7Cki%078%09/1%06%11((%0F%18f,%008%1A%0B%11~$.%7F%08%02%1D%0E;%14398%183%0A%0F$%12%04%05#%0E=%1E*%046%15%19%03q%0A-*)%0F%02:9%3C7%3C%02%06%3E%16)s*%0A%0F(%11%02%20%0Ee%16'%0A%06,%0Ai%01&x-%7Dhi%1A#%3C%0A*%003j!%0Fr%01%04j%3C%0B6%1B%08%0C%60)%3E1%20%121%0A%00i%0D6%0A%0C=b%02%0C1%05%18%7D%03%08%0A%0C;%09$+%06%0F%1F79w%04%17%18%11%066%0A%7F%1C%03x(#%0D%0C%03s%08'%05%18%12%03%16%0Ae:(%04%18%0F%20%038%02)%1F%17r9%0F%1B%229:7%7F'%12%0F%3C's%0D%7B))%11;%17%00%03%10%14%1A.%00%04i!%012$%1B%01:%06(%3C%1F3;%049z%01%1F)%3E%0F%3C+%0D*%3C3%3C%18%00%1C%60&%00%04%10%1D%60%13%04%0F%18%18'w%01%1C07,%0D%1B%0A%1C%03%22q%19'*2!y)%1D.%03%18-%1C%0D8%02*l%12%25i%11%09-%1Cx3%13%08s%0F%22:%22%0Ay=%25%1A?%1C(s%19%0A7%05%00y%16%185%13%168%06)%3E%7D8%7D%0C4%1E%1Fs%18%0A%3E2%1E/%06x%011~r%19y%094%7Ft$%064!'%16:%20%16%1D%090%0E%0F%00%09%084z&%10%3E%08.r%09%00%3E%0Du%3C)%1Cd%05%00f%7C%0C?'%03:%20ih%04%1329%3E%04%25%22x%20a'%13%028%1B%0A!%1D%158%09%03g%05%14=%1E?%04%05%07%3C:%08%132%10%0F%0D%16%11%0F%12%11%22.%11%085%7C%20%10f%0E6y%0A-4%3E%07%0E#%60%0A#%03%1B9%18%18%07%058%0F%1B%01%03r%04%07%12%12(%00%0A%161%12%1E%06%1A+r#%0D6%1C%03%20%12)%0E%12%1D%11%3E&s%7D%04a%1B%1A%0D%22c,'%04%0Ds%08%08%1C%22y%22%1F.%12/%11%09z#%11%0F%06%1B%1C/%11%0A#%02%0C-%16%0A%19.,%20c%05%03%7B%09213#%0C&%128%01v%02%16%00g%07-%08%0F)%12(%06%22y%1Bd%11%10%09%06i%19%1Au%03%0B=%609%09%1A%0C%0B&%22%14%05%1C=%16%7B%103%1A%1E%01%1C1%0E%06*%0A;,&-%0A8%03%18%3E;m;%25%00%05'?8%06%06%0A(%3E;%05(z%0C84y%19~&%17%15)6%20%3Cm?%03%0C.%3Eh%3C%3E#%09'%1E%16%22)%7C%027%25.-~%08%155%00%02%08%07%08%1B%0F%08%20%05%17%04%22)8%3C%1F&%0D%06%0E%1C/%1A&7%22((%20%07/%3E/5%03%3Cw%1D%7B%10%14,%06,%19%0C'%0Duy71%18,%0E%086%13%20z%15(*%1E6%22%0C%01%0F5=%00%04%06%1B%01%1E%01%00%12/%16135#-%3C%1D1%05%7C%06%3Ed9%14%009%0B%06r%06%19y%18%11%00%20*%1A2c%20%10%069-(%0E%05,$%1D%60%07%00%09%18+%19%1A%0D1(+%12%11%17%0D)%3E%1F%08%17/%18h%122%11s%1B4%12%08q)y*1z%12%03:%03ax%168%022%7B%18%0B%13%18%10a(%1B%20%0Bh%04%1F%0F%7C%1Ch%1Dz-%198%16%03%12%1B$%1Ea*%08%14%0C%17%20%1B%0E%0B%1A%01%1Bc;%10%0A#2%068)y%07%1C%07f%16%02%05%0A&31%0A%03%0A*y%10$%7B%1A;8(-)%1E%11%02%09##%10%1D%13%03#%20m%22yv%1B%03i%1D%3C%0C%0A%17;a%18%00=%0C?%11'u%19%0F%18-ym%08'+3%3E-*:0?%25m%0E-1?85*%3Cuhztx%7Cu%19%07%05%1C%04%188%0E%07%1E%1E1%19%08%0A%3C%0F%20%03%09%0C%0A,%18%3E,%15%1A%09%00%11z%00%114.%11%7B%00'%0F%1B'%08%0C%06%0F%0E%09%0A%18%1A%08%1C9%0A3%0A%1F.%18%0E%03%04%0F%1Fd%0A%15%03)%1D%15(%08%1D'j2/j%3C=%0B%1F%0A%00;%0F%08%17%06.%0A%0C%08%12y%00/%7C3'%0At8%0F%1A)%3C%12%0E*%1Cg,%00%0E%163%1D!%12%20%0B8%3E%0A%0F%02%04/?%0A%12%02%1E%1E%0A%1A%00~%0B%1A$&%0A%3C%0F%0F%1D1)%19%07#8%02%00%0E%22%3E%06#%13&%1D%0E%12f%08%7B)%0C%16%0E%13$(%0C%02%1C%12%03%00%1C%19%3E%0A%18%7C%1C7%0A%1B%18:%1C%04%05%0D%22%7F%18%12%7D%0B'%3C%0A%60%1C%00%12%0B0%1B;%07y/n5$%03:%06)%1C&%0B%0D$.%01-%06$%09,)1%18%3E%03%1A?%3C/3;%1Ef%0E%0A%12%1C6%1A%0Dx%0D9=2()%08y0%3E%1D%18.,:%17%06uxv1%12%12)$-()%0E%0E*948%09q.%0A%1E%25%02%1B%20/%1E%18%1A%03%0C%1A;?-%06%3E%03%1E#%20%03%3Cv%0F%079%05%0C%0D%1F#%0A%02%7B%0F%121/%12%0F%7C%10?%0A%0F1x%18%18%20%0D!%0F%3C%11%091%0A%0A(i%18s%3C%088%1D%03%14.%1A8%20z%0A%0F%196#%1A%00%11)%18%08%0C%02%1E%14%3E%11%09,%01%09%0F%15x,&%3C%0Eb%18%04s%7B%18%7B%0E%09:%0F%1D%0A21%7F%0F%16(%0E%13%02%032d%1A%06%08%1F%0A8%1D%17%12%14%10%22%1A%0E&=)%17f%1B%7C9=%17,%00%0A%19?%06%60-%0D%17(%15$pz%04l%00y-%00%05t%1C%7Fsy=%60%06;+%04%14;%1F%016y%09%0F%1F*%06%1Ev%169%0D%0C%7B%0D%01!%0F%028%7F-%258xx)-%3C$-%08%053(z%04%0D%1C%60%01%05%13;%00%03??6%08%0B!%03%20..?%09%16%11%04%11%0F:%1D%19(%0A/%18%16%11w%1E7%0E52#=7t4%05%00%7F==%11%07l.%00.%1Fs(:v%18%1B%7Fy%1C%0B%18%071v-*6%17(.%01%0F%1C(!%09%12e%0F2%11#%18%0Cmc%12%09f*n%01%7D%04%02z7d%60%0C%1Ee%18%12%0E%0E%1B%0Fm%11%0Auz%7C%09$%7D1%7C/%0F%203s~w%03a3%0Ex%020%22%7F$%056%1B'%054%07c,%18r4%20%05%13%16%3C79;?3~r%7C%7C/%07r%00%07%16%0D3%13p1%00%60%22y%0C%12w%0D(%00%1Br'5%3E%18%02z9t%1Cs%071y%01h%3C%02%0F%19)'%0C)%07%0D08%3C7%08z%14'%3C+s%01%10;%22%04%0A%07a9%00%0D%02?0%01%0E.y'o%1A$s!x%10%09'+&%05%00!%22s%06z3:2%0A%7F%7D05%01%08=$%1B%19%0E6%22&%14%19,%13%7D#%0F3%11.%0E%08%12%3C%1F%03%00%01%00%13%085.%0F2%178%19%08%07%1F#%02%13%2294%1A?%0A%0A%02%3C%11%01%0A%20%22%0A'%0E%0F%12%7F%0D%05$%05#)%1F;3%00~#h%12%1F%12%20%1Bl%03%02%07%1Ew%0D%13%3C;)%1A!%3C%7Bl%18%07%1C%1D%7F.%05%0D%0D%051%14%3C=(*s%17!%1D%1B%09%1A%22#4%10%13%1E2%05%16%13#/;?'a;;'%07%1C%18%1B%1Er%06c%0C%019%02z%08/%1A%0A$%1F%1449;;%20%0A%0C?;%0F%02v.%09%204%00%0D%0A%17%09&.%08%16)~%00%0A%20?%062&%12e%1B%1C%1B%08%03%00m%14&%13%3C%01h%15%04%0D)%068%1A%0E%08?xh%11z%1284(%19%0Cw#%0A%0B%16,j%09,4hf%0B#;(%05%19%138%1F%0E(s%10%1C'6:%00%02%0C/!%22%3E%04;%3C%11hz&%7D=8%7D%1D%0A%0F%7D%0F!$%07:%07md%3E&%0F%08:!;$)%17k%11%1E2=%1C%0A)%7D%04%00'7%22:)%00?0;%08)%1E%3C%3E%18%3E0'%19%3E2*q%7F%0D6(z/%1E%3C%17%60*r%0F%03;5%13%089z!%05'%20%1E%25%1F%3C%08%00%7B%20%3E%1A%19%0Ez%1B%0D(%7D*%1F+69.%0B%60!6%18:%02%1E%1D%03%1A,&%08-)d&%04'&%18%12%7C%04#~1%03%12%03.%7F%15%18%1Aw%1Fx%0E=%22%18%3Ez%1Bh(%0By#,%0A~j$%02-%13%07%00%06%0F%18%02z%1B$64%16$%0D%19%07%11%1A%20%16:#%1F%3E&j%08%187=r%003-%3E%25%0A%1B~%0Cm%25%0A%19%7F'%1F?//r%1866%0E(%0D%0F%0E%1A%19%09s%0C4%1B%0E&%07%0C%0F4;7&%0C%03%16;r%00%17,:%0D%16%08z%08%1D;%09%7B%01%0E%16%12py#%0F5~5%1C)a%20=%10.%0Dm%06%0A%08%19%1F%01;(#3#45)%0B%22#%3C5;6%13%05?%20;,%1C+%18%1C%11s(%7Bi%00%25%1B%0A%18k5-%25%20#%15#$%198%0F%1C$%0D%05r?!%7D%08%08-%08%0A%60%7C%11%09v%0F%7B%07%03%12%19%00%03%09%10'z%0A(%12%19%02%04%091%11%15%20%16ie%0D,%3C%09%01h%07%00(x%141%3C(%08%07%0D#%1F%25%0E%0C5%09%1As,9%00%11%3C'%1Dw%0F%05%03&%22%06%1D;&%10~%08%60%08%1Ej%0Fz%18%1A%1D%02%1C%0B-8%1A%09:$%03%1E%7B21%17-!y#):a7%03#%07z4%08(%092#ji~u%09%1F%3E%19%03%00%04'?%13%06%00x%04,%1C(s%7F*%20g!r%06%1F%168%60w-6%13#%1B%0F%04-%1Af*2%0Fz%11%25%090%08%0F%1691r%25!/%0A.0r%7Fo2yr98%00%7B%0E%22%1A%0A?c:%04-%14%0E;%0A%0F%09~5(%0D%0B.%1D%17i%1F#&~-$)%16yw-%18*%07%3Cw*%08%01%03%19%03%20%16%22rf!%18'8%00%19%09n%1Ez#%3E%7D%0D%25x%25.z.%19%03)%25+%1B%0A,x%7C%0Bh%188/%0D%0C8%13%0E%03%05%0F.%15$%17%0E%1F%3E%03~%051%25:%01:,x%0A%0A%0A%00%06$%04m%03$%0C3)%1Bhx9%0A%0F%1Dc%20%14%1F%0Fr%09(x%03%0B!%60%066%07)5%12%1C%12%0A%054%1F%02%19#%16%1A%0A%03%042v;b%1E%00%1A&%0F%20/%03%1A%00%00%15%1A'%0A%0Dm9%3Cl!z78%03%052%7B*'%08%14%0E&%10%02#%22%19&%13%60%07%04%03)59%04t*%0D%08%11%12%18%3C~0(%7Dw%01%06%3E%09f,9%07%0B%02%02%028%0A2%05%3C;%0A%0D%1A%05%0D%13%00!%15%25%04%00%3E%0Am9%0E%001%07%08)%19%0D%0D+%09e,%1896=%1A%1A+%1E%08*%11%20%04%20%07%18%05%25y%0F%1D%0B;9%0B%04%1A3%12*%06%00%17%0C(%09q%1F%1D;%07%03p%07;%1F%11%04%10%7F%0A%14%16%7C%03$:);%0A%12%0A%3Ch8%008%1C%07h8%19%00y%032!%1As%016%14%1B%0C%20%7B)%11'%0F%04$%0Cl%19$%07%08=%181,%17//%18%15%098)%1F%115=%18y%20%18%12%3C%0B%7By%0B%08s;%20c%20i!v%0D%0757%7B%03%7F%08n%18%3C'%11%20%3E:%0C6,%7D/#%3Ct37n%17%7B6%3E-%11%1B~%0F2y4e3%00%0A7%0F;%07;,%0F%1E%16%1E%0Dy%02%18%07,4%08+%1C=/%0C%60%14%1A%14*%20%00%05%11?8t%11%03!%19%0F&%0C%17%16?1%13%0F%1D4;?%0A%60%1Aa7%0D.?8%1F%252t%11y;b=5,%0Fa%17%0A%22%02=%1B%09!%08%0C%1D%177%19%12y%14%0F%1C%22/%00%1E%08%04(%15%09-a%16%7Dx%22%160&%03%0B%60%0D-d%7Cq%19/:'%60(%00?%1C%60%00*%3E%1D%1B8/y&%09%09a%12%12f*1;%18$%1C%22#e)l-&a%12%18%16;%08%1F1%02(%09%0B3?%0D%12$%05%00%22%099%19%00(%07%11r'%16%17%1A,%16%08%18%0F!96%198%15%06%19%05'/o&8%1B%1Ax1$%0Fu%09~1%11%08%20%60e#%13%25t8%00r4%7B4z(a%11%036%0A&%1A%11%20%13%7F%0A!%16%1A%0D%7C82e%04%0C9%05%03%7B=&%1A%09#d%1E),~m%00%1D%16=-%178%08%25%13%0F%1D%19%18(%22%01%1B%22%7Fq%1A%0D+;&uy$%1A%18%7F2%04((%7D%04p%13%1Al%3C.%0E1%1F%10d%0A2%19xm%258%0D%19%053a;%20/%06%3C!%00%13%18x-%19%09%11%19%7F-%06)&!%18%0D2?%14%60%3E%161y3'y;i%7D%25:%2557%135?v%0Cc&0%03%188%3E&%14%1F+%01%07$//$%1C%06$%05%13%18%1F#'%18%3E4%16e)x%0C%3C-%01%1A0r*o8%05s#%3Ej%01%1A7/%1B;%14zw=%7D%01?%04%0F%1E%25%601%0C;%7C/87/%20)%02%0C%0A9%09%1D#1a%0E%03(%1C%1A%1E-%19%04wh%1A*%1B%25%02+=%1C%11%05*%15%11r%1B%0A+j%09yq%0F%25;%1E)%13%3E%1C?!&%05s%0F%1F%08%013%05%17%16i%05%08%7Dc2;x%09%19&2%11:ps%7F0%22/%22%1C?%0B%12%03+&%18,%01%13j%3E94%20%02%05%7F%20%1C%11%187,%0C%1B%05%06%1198?%15%3C%0B%00%1C%0C%11%1C%00$%0B6%18%0A%0D2&%18$9#%12'l(9+x%06%18%16%19%02%0A%07%3E%07s5%08,%17%15%7B%15%18%22%1F2%22-%0C%04%14%02%1E&y%1B4%0A%06%10=%25r(1%0Fz%3Ct%15:%22%0C-%002%0F%03)6%0Fd*%04r%05.:80%00%18%01:%7D%00%12%08%03%1E#u#%1D?h%01.x=%0B%12%04%19%1C:%11%09;.%3E%7B%3Eh%098%22%25%10%7B*6%1F%1A%12%11%05%10%1Ey8fzw%1C%1A1%0A%0E%05%036-isvs%1E%1B%0A%0Er%11z!%20!.%0F%19%1D7%04%13#:4%22&p%1A*6e%1F%18r$0%14%054%1B%7F5#%1E%10%0A)%08%12%00%029%3C%1A2*)%0D%06%08$%20%0D%0Ex;h%22u%3E%0F8%14%7F%07%09%00:%18z-?+7%60%1B*%12%0Ft%60%05&%0C%7F%14%1A%0A%0A%3C%0B%10%128&%03%7F%14h%7F&%07-%14%13%01%25%1E%06,%03%0A%0E%1E%02#%07%13%06%09%002?%009%0E%0A#3%1Cj%3E%08;2x%07!x%1D=%095r,+%1E%0C%17%0C%08%0E%3C%1E%05*%07%1B%01%22%11-%7C%18g.%0C%1B%1F%60)%1F%1B%12%00%20*$.%1F90%19%08%22%1Aw=gz1%18'k%14%09)%06%05%15%06z+%00%0C%3E%1Fs%00%02)+%19%08%16%22%09m%17%05t2%1E%1B2%3E%05%03;a%05%00%06%06%7Cr(1%18%1C9r%1D(%0A%1B#%3Ca%0F%16~w%00%11%1A%209%0F+%1B%7D%0F%0E%03.%20,t%19%0B%1D%1D%07u%1E%08%1C%05y%13$%0D%14%13%11&%119%187-%00%0Az%12%19%1F%0A%09%7F%3E%11%02,y%0C6%13%0E9%19%0B#%16%0C&%0A%1F%1E%11yq;%0C!%02%11r%05%146%1F#u),%1B3%1B%22%08%03%0C8#%17&%09%1E%20%0A%18%3C%04%18$:s%25%04%60%14%7D/%22)o7%034:%1Em%08%7Fj%1E%00%15%1B%0A%0F%7C%1B%03%18%01),%0F%0D%04%04%0A1%1F%03%1E%3C;%08%0F%13%3C%7D%04%059%3C%12%01q%1A%06%20%15s#%12%1B%168%226%7C7%09%14!2%25!t4%11-:%013!%20%16%044%11%1F%1C%00%04%1D%09!%20)%1C%1D/%149%0E8%04%01e%1E$%22?%60%1B%0938/k&?0&%06ha%257%12&.%04.%0D%0F%00m%08%60%11f%03%0F%3E%0F%16%12%03%00%06%1D#%1Az%60e%13%03%7B%20o%18%136%60%14)f%0E%00!%7F%00=.2s%1B3%02%7D*%1B%1E%1B5yy$%09%15%13%130/%0F%3Eh%0A%0A%22%3C4%1Ezu%0D%01%3C:%1C%07/~%0C%12$1%04%25%1A5%60xz*;f%08l%1D'h%16%06%0C%03%2062%1B%10f~6#%1D*%0F)5%12r%121)+e%0C%0A=%05,a.1%18/l2,w%7F%1B%3E$~j~:m4,%25%7F%1A%1B4%7Cw%3Cwm%01!)%1F%3C(?%08)%08%25%3E:%7F%0B%09$o%1C%0F%0B%7C%08%1A%04~%1B!%3Eo%19%7C;%7D%7Dmi~%0D%7F%17n:%0Ft~,;f%3C%0A%7D,o(%0A%0C!%09%1A7%08%10%09yo%1F%7D%09%7C%00%1D%18%7C%14!;o%22%08%19~%3C%0A%7B%7F%04%0D%7Do%02%18%11%7C+08%7F3%0F%1F%1D%1D%0A%10,7l%0622,%0D%1D6%7Cj!%1F%1D%1B%7D%0D%08%7Fm%3C%0Fp%7C%1A%1A%1E%7Fs%1A'%0D7%0D%06~%1F%11:%0A6%0E,;'%09%12%0F%1A+%07%7D%07#%07%11)%7Fw%0A%3C%0A%111%12%0E%1A%1A)%030%7D%25.%1E%7F&%03%1917%0E%06%7F%1F%1E%19~0%0C%0A%181%0E%16%7D-%1C%19%0Es%09%07%1F%1B%0Fw%228%1A%22%1A6#cm)%0E%00%0C%07%1D)%0C%17%7D%05%11%07%0D%22%0C%09n%08%1A%0E%0Ew%1B%1F%0D%20%03%05%1Bi~w%0C&%1D%7B%08$%0Ev%18%7D%7Fj%7F#%11:%09,%0C%0F%1E%07%0Cw%7C%05%1Eb%0C0%0E%0Cn%0A%7D%20%0C9%1C%20%09%0A%0F%3E%1Di%7C%06%08&%1B%02,9#%1B%0A%09%0D%07%0F%17%1F'%7F;%7D%02%1Ab%0Ar%7C887%7Fj%03%0B%1E%14%08*%0D%7Dl1%0A&%08%1B%1E%07%07%06%08?%1A%01%0A%0C,:%1E6#%22%0A%01%3E%3E%7F-%22=%1C!%1F2%0E%1A%1D%1E%7F%06%7F%0Cm%00%7D/%0F%1El8~%19%1A!3%03~%1B%0Az%1A#%22x%03w%1E%14%0Cx%1A$%1C%1E%0D+%0E%07%1B%3E%7F%08%19%1A%11:%0A;%0E=l*%0D%03%7F%02%11h%0C%06%7C%03%1B:%0A8%7F%0D%1A#%08%16%02ym%14%0D%05%0C'%1Ag%0E%15%0F%03%1C%3C%08%09%0C%7C3%18%0C%0E%03%14%1C%1D%1F/%0Cv%1E#~%19%03&n%1D%096%11%7D%1E#%0Aw%09%1E%112%03*%1A(%1F%25%7C/%7Fc%1E%02%0Dl%0C~%08%11&%19%0D%02%1C%13%0E2%08%1Cm%22%012%22w%11%03)%00%0F%1C18%1Fu!%01n%16%0F%17%0C%07%1Aa%03%15%7D4m8~%0F%0D8%00$%0Cl~:%1Ci%0A%25%03%09%0A%11%01u~%0B%18%1D#%0F%00%1A%13%15'%14#%1Bo%3C%1F%15%11!%0Ai!q%7F8%03%1D%7D)%03%03l%22%12#%0F%3C%00?%08p:#%1D%17%09%06%08/0%1E%11,%08%16;%60%0C%08%7Fv%1D5%0D%14%1A%0536%11#*'%18'%0A%04%08%1F%1Df#%02%0A%17%1A&%189~&%08%1B'%14%18:%1A2)'%11#%1B%15%0Fj%08%1F7;%09%02%08*1%1E,%10%25%1A%184%1A%0C%1F%1F%1B9%20l%11%0B%1A8%0F#2'%18%15%08q%0F%7Cn%05%08%09%08y%08%1D%180&#5(2%20%25/4f&7%19-%1D5%19;%09~1e%03#%0A#2%25%25,&%192%05%0As'%7C72%18s%08%014%60%1F%0E&'7f%094%20+55%25%0E%7D8%18%1E%1A%22%25,%1B6%11%03%20%25%3E8%20w&%03%1B%7B%0A2%0A'%1A%07%008%7F%0D%1A%04%12x%1A;%1B1%08%14%0Az%18:%09v,%1Fl%25%19,%07%0A8%60%082%0F%03%181%0A%18,%22%1B'%11%0B%09z%18%07%11p&%1A8%1A%012%0A%04%11a%00%10%09-%1D%60%08-#%17%1B%19%0Fu%0E%1E%1D%12%0A%10%0A%0F%1Ah%1A%00%0A3k%7C%088(%220%3E,a%05!=58m%1F&%3Cpr5#n%1D?(5$%3Cuhzts%7Bu%19%07%05%1C%04%188%0E%098%1E1%19%08%0A%3C%0C%20%03%0F%0C%0A,%18%06,%08%3C%06%1C#%09%19%0A%02%08%15r%08%09%7B%09%11%01&%08%1B*%12!%00/%7C%1A?%0F%14%08%0F%15%1C%0A%12%1A%0F0%07%0A%00%3C%0C%1D%11%06%0A%1A%0F6%3E%1D%15%08v%1E%008/%11*%3C7%20%13%04##e%22*%0A%0A-%05)%18%0D%07%1D%05%0A%1B2%1C%0Dd%7F*%0C~%3E%121%18%0A%0A%1Fd%7B%18%0F+%16c,%00%096%18%258%06%02$%1E;%058%04'%132,%10%1D%0B%3E%11,%05%7B%0F%16?(%00%09y:%11%05%08%0A%3C%14%19%0A8,%0F%0A%15%04%0B%02%0C%0C%15%086%0A%0D8%20/%06%1D%07%18%06%0D(%08%16!%11%07%0B%09%0A%03%13'%13'%0Bh%1B%0D%16%02%028%17%1D/%1E%06%08:(s?y%0C%15%0F(%05%0A5c/%04%1F%0D%1C%1E%05(%0D%053%7D%12%17/%03!%14%07')%00+((%05%0F%1D%20#%7C5%1A)5%6034%02-t%14z(%3C)-2*2%25%08na#%09);%0D%7B%7C'%3Cwk%1F%13vf%005%13$%19%09%0C%01%13%0A%0D%02%02%15%12%7C%09/%17%01%1C*7(,t1%7D'%08%08%11%1B%00%10%01%0Ca%00%0A6:%0A%18%11%09,%3C#%1B8%060%7F%0B0%02%01,%0A%0D%60%099y2%17%0D%19%0A%00;%17%1A;%00%0B%05%0B!%02%01%00%0E%1B4'2%02(e%1B%19%0A%10%0A%082%17%3C%00%0A%09/%14%051%0A%0F%12%208&,%0F%1E%03%0D.;%1Ca%04%0D8%08-%3E#%018%3C%0F-#9&%089)%1E%22%22.-n%20%0A%00%00,%0A%25%1Dp%0E%168e%11%12$%07*%11%22(%02%196%0A%20))%1B*%11%1Fw%7F%0C7%19%0D%06=%0D,&%1Dv%1E%3E%0E%1A)%00%1D#k7,%22%02%1B%0Agx'%099%3Ci%25,%7Byn%1E%1E%08%11,k%14%7B2%019%3C9%08%14%7D%25i9%7D%10%0E%3C%1Aez4%19%0F%037%0A%22%0A*%0A%1918??:%03%18%07/%01h%1C%1Ap2*l%1C!s%3C%3C%3E8%3C%00':%1E%19%09/*%0B%12%7B3%00%1C$5$.;%7F%25%12%7B%0D#%02%05%10dz%08%05%1B%16?85!+%16%20%0E9~-/7%094,;%20%11%08#%00%25+%60%1D7%22:%178,+%00?%03%1B%0301%7D%16%07%13%0C'%1B0=%253%0A/t%1Dy%08%1D8%14%60#0%7D#k%1A&%17%05=%18%11%08%0C%1E%1C,8%7D%0B%18%3E%1Cb%20%05%22%01%16%11#'%09%0F%13%02%1E%03%7D%1834:%03%20%0Dl$%0A%00%0A%05%0C%012-%18,%10%13%0Cj9&6%19%09%03%00y%3E%19%04w%01:%1C)15:%19%0C7.%00%08%1D%18%3E%22%00%07%1F%1A%1C%09y%0E6%14%11%09%03)#%00%3C%1A%0F%09e%01d%7B/%18,)%1D%11w%3C%0D%179%06%17*y-%15%22%07%1C=%18%11%08%0E*%0B%003%0As%0E%1F*%11~%0D%7F+!'%0F%10%02%17(=%0E#2%1F8%08%1B9:#%1B%1C*u#x%0D9~/%06-%18(%08y%1E%14%18=%0E+%20,6h%19%20%00%25j7%7F4%7C'%1A%1A%7B%00z!:'%086%13e%0B%15%05%0C#%25%1B:&%13y%3E%002&%15%1F%01%3C%15%7D%07%7C%04%13%05%1A%02%01&*%04y%14%18%0F1=%01%00x/l%22:u%0D%22%17%16s%05%1C?%1B%04#%22%19v%11%12/**%0F%0Eh,%103%1B%18%20#%0C%7C,%187%18%03%04%0Fo%182*%09%18%10%14%07%07,-8%0A%20%0E%3Cx%3C%1B%0Cu%1A%0B%159.6%0A%0D6*8j;%14%16%142%0E%01%010%1D%1Esy%00h%16:+)%001%061%12%1E-m:%0D%10?#?9'%073%07%0F%19:p'%0F%03%1D*%1B)%19#%07%010%02-i$%015%12%17%13;%19%16%1A+0%60=0%7C%25m%1E%20%16$%09%12%1B/#%1C%7F%0F%15%1E8:%22#3%0Av%02+-%11r%05%07'82%000%20%05/%60r/.%25h%13:%17:%20%60%01z2;y%18)%00%0A%60%028%05,(/#%3C%15%7C%138z1d%03(%02%01%11%14,-%20=%1D;%18%12%13=%18(;%042#m8%18%0E%1A;me%0Ex%0A%02k%13%11%0A%12%14;a!%16=%1F%1Ah%18x%18;:%09%0E%0D%0E%22%17d%03-%7F%3C=%20%11%12%0A%7B%14%1Ez%0D%1A%0B.'%7B.?9;%19~%04,e(%19),24%3C%13%01+%1E~i%02s%12%13-%18%07%04%0F%1F%7B%0A%19(%04/%17,;1%13%0A%04m%1A;%0D%1F%7C%16%1F%09%00%0A%01%20%18&%14y%7Dl%0A%0A%0C%0A'%0B=%1C%03%3C%7Ch'%09%0F%0A4,g$*%04%3C/9;%03%3Ez%1C%17%1C-%04!%1D%1F%1C%02.9%10%0A%1Cwz%0C%13%01.%15'w%1A%02%11%00%19%17%00e;)%12'%0F%09%22t#?%1F%11%07%122%03t%14%1B%15,+%209%00)#67!%1C%03%08%25%08%13;%12%1F$%3Cc%05%081%0C%1F%20%06%02%1C,-%1B9%20%04%1Ca%14%076%0F%0A;a%07%15%208%012%11%1B%03=%3Cf,8%1F%1E=i3y$$%01%05*%10%0D#a7%09%00%1B=%185%7F%0A%12-%3C9r%16%1F%01%1Di%7D%14%60(%1F%15'4%06%16%16%02%20%00%0A%04#%1C%3C%05%1E';d&%15%0A%0F%1E'$21%0D%1Bb%22r%12%02%18%1B%02-'%00%09i%7C%08%05%04%0D7s.!~%115%0A&.&%121%059%19%02%08%1E(%1B%7B'%12d,%00%0Ez689&z%06%10:s%11#z%11%18$%22%0A%0F%15%3E.%09%02:%0C%00%22%0C%19%1C%16%01%09%0Ef%14n%02%08(%12%04;%15(*%0A)%1083%19%3E(%0A?%0E13%0D%00%01%0D).%0Ami%7B(%18%17%01%00:%10%12%1B%1B%11;%02%3C%02i%00%1A%11,%08%1F%7D%0921*/%06.%00%3E%3Et!%1D%07%3C!2%16%02%06%19=%3E%7B%13%13%039%0E8%039%18$%08%19$%20!%17%1Cd#%18#%0F%0E%09%00%14%07%07!%11r9%18%09m%1F%7B%02%1E%25%1B)%0A624%13%05%11%18r%0C-%01)%03(%0A+6%006%09(%00f!.%20%05%0Efz9%12$28%3C%00%02%0A%3E%17%1E2%0A%0F%1D4%09;%1D%0Al%11'%00%0C;=?%02s%00%0D%3C%19%130%01%1Ca%17%03%05)$*%0A%04%07;x%10%20&%00%06%071%15%1E%12r$%13%19(%16%208m9%18%06%07%07%0E%11%0D%19%12z/%06$%00:%7F%0C;%1E5%0E%221&971%0A63%12s=%07t%1A%19%00f%1E%20%16,%10%0E%25%1A%3C%0Cy%03):%7B96%1F%084%1F.5%1E#%00%06%22%08'%18%11%15%018%1D%0F%11%12%7F+;%09%10%19x#%19%3E%1B%1A%0F%05%1D%0B%18%01%016%07%0C%16%173%05s,%1C%14%11,2%005%01%0D(%0Ay%15%0A%1C8%06%0C+%00y%1B8%3C%0A%04%093)%7C%18%1D'%18)6%11%12%22%03%7F%0Fh%15%7F%05%09%3E%1Bd#%08%03=%1B%1B%1C&x%0C,%12%06%09%0F%02*d~%062$%1Ad#%0C%07vk%19~y-#t%1C%12%03,~%08f%1A+$+%1A%11#6%04%7Bo%02%3E%03%7F%0B%0A%1B%0A%11,%1A1%05%0A6%0D%05%14%1B%18%00%1C%0F%18%06%0A2f%0A2%19~71-%0E%7D%023%0F%05%3C%193%03%7C%08*%18%0C%1B%06x%03h%19%1B%254%14%07(2z%14o*-*%7C%02k2s6~%02%15:%254%08%0F+%11%7B%00%06%07%0C%14%13%0F%3E(:(~;1%167&%06j/v%60%3C3;f#%18$%60%12%08x%0F%7B16%1C%1F(%1F%3Es%1C%08a%1C%0E%19%02:%0B5%22;%0D%7C%159%13%09%1B6%00%03%7Ft%60%3C%60=%207%01%1A+42p%00%3E2*%006%03%03%20%11%088'%25+%1F%0D%04*c%032%00&%1C-(%12%1F8=%22%14%19%059%08%3C,%01s1~%02%20c%20'%00e%0B'%1E%07%06?%08%11&0y%1F(?%0D8:!%01'%0C7%04?3%05%08%0A%20%1B:%12%19%16%22$%1F%07%00%22%1D76%1E%18%00%0A%22%01%1Cr-%19=k%07*('%7F%3E%05%09%16?%3E?%03%60p!%057%05%3E0y%19o:'%25*%1A79%08%00%25%04?%3Cs%00%7F%0Cr%20%0D%18%0Cv%0F%19*1%1C6*:%1F,f%14%141%3C%19%0A%0F16%0C(%0A%7B6;%7B1:%7F%0B=x%17y/a%06~0)%1C*??%062%1Dify%15#%194a/0%03%18%14%25/%10%1Ce-%07'6xy%10i*8':j%22%7F%00%0E'n%01%0C2%1D9;%1A%1D)8%18%0F#y%17%1A%05%0B%60%197%03%1B=1%7Dq%7C%00%0F%20%3Ep%11#/%06%1Aw?#%1E?%1B%1B8%7F=%7D%0E8%1C%226%01'%12%22%14h!%7D%16y!%03%09%7Dt'%20(:y%118%7C85%7C-~yk%60%7F*r%0C.%17~l9%1C%0F%12$-*%09mi%1Fv%09~/%25%02t8;%17%02%7B(%11(-%04.,%25%18%0E2%1A%0F%0A/%1B%093u%0A?%0B)%18*%0E%20)d%00%10!)-b%3C%1Bx%1A%0E(%0F3%07%25%09%25%3E%19(%22:%01%18%13%3E64%18*%0B%0A%046a%7Cy%04w/&.%13=%7B)%18~%17%00,.!%0A%17%0A%1B1%00%3C.%09:%1D%02y%25r%06tb%074%0A%1E4e!%00%03'h9%1A%04%1B%1F%1F%03%1D)%3E?a19#%3E%7C-'%035%25%0D:2%1Et8%1A)%02%60%15%05%19%3E%1B%7B#%0F;%11%25yr8%07tb%7B%25.%07#%1D)%0F-%1B(&%0E%05%1A%20%1B8%09%10%01%20%09%04%1Bw~~%144%08q%11%0B#%02%07*8%183%20%0F&%0F%0C%17?9%05%0D%1A*c%09w?%0D%11iz%08()%1E%20?%059%3C!%12%06%00%3C%0C.%16%0Ar%259%1B)%11v%13+6:%00%09'%0312%028z8%1A%12,&%02%7C1%01%06p.%02=%17fq%07%3E%13%05%3E51%02%11%1D%3E.%08%3C+%3C:%05%05%02-c%3C#x/%138?917/a;&%3E%1F%1D7/&?%04*%11*6%0D8-%14%7D%03z:=%053p?)3%058+%13&%08%1A3l98ne%7B2.%03o%1A'+/%17#%11%068%7D%05%1F6%07l%0C'*%1C%11%22%7B:12%7B%00%04%0A%0D9%7B-;%0D*by%02%04y;%05sj%3Cy%18f%3E2%09%1A%1A%1A%05%06%7C?%01:%131.%03%60b%1E&))+%12s%07:x%08%1F%0339%1E*%3E%3Ejf7%1D%05%11%15$%0C4%02%0A%11%0E+%3E?%04%17%1B%06%09%132%13%20y%03c,%05'%7C:%18%7Fs%03*k%15(t%08%1C%20:8%12%1E%0F%1F%11-%25%006he)%0B2(-%7D(%0B1/%3C%19:%002-%11%09;s%1Fzi4%01%10%09%0C1%01%1B/%019%16%12%0C$!%17%0Bi*%12)%175%2086-=.%1A%7F3%1A%20,3%22#(c%60c%7C+#%0D%3C%1F%08%03%3C%3El%22%60r%1A%01%0Cd$p%1F%05%01%1D=%0E%01e%11%05%3E7%0A%1F%0D)8%03&%08%1C%1A%067%1A%22%08a;%18%7B?%138%19%06%22%0Ch%3E%19%07%22%03%103%20%05%19%1Ft8~l%08(%12%00%7B'%1B%0A%01a%00%228%0B%18%60%11%0B%7D%1F%18%22%01%0B%0F-2%11z%15%1B%1E:%1D%02%0B%02:(i%09%03$9%13%11%1F12,i8y-%1E%1C!%1B%06#%0Fc:%19%0Fx3?%0C7/$%0Ce2%16s%02%12%0B%1B%25%128%18/%17%18!%09%7D%1E=%25,)%3C%0F%10%13,$%1C=%3C%04-%0A%08%0A*%06%0F%22%03&%10%13f%10*%0C%12%14%1E%16%0Aw%1A9%0C%17:v.&3'%7B$)%18%11%0E%13~%0A%3C-%02%19e%60i2%18%19836&j?w!#%033=%3Er5%60%08%0Fy%20%11%0Cq%7F%0Fkg&(y7%3E1%7D%07%12)%20%01%0D%18%006)%11r8(%0D0%16$%09%3E-%3E%13,#'%1F%20:1(%0A'%0D9%0Cy%03%7Dj%22z%04%03%17%0D%142&%02$h%00z&%074%1B%02x+z%05%0F%15&*%0Ez23%0A%0B&-%1C42%00#7%1A%09%034%19%17%1A%7B%1D;z%1C%0C7%0Fy%13*i)%0E0%08%09%18#%1C(%09%7Di?%07rx%3Ch?%0733)%1E%14%3C+%3C$#21&%05%17%12?&%14%08%254%07%13s%08~0%3C%0Cuz%01%0Ab1$%1F%20#$%0E%25%7B%1A%115&ry%3Cj7%0D31!%17?%02%18%01%0Ak7%00&%01%17%15%09%00%14%02-%0D:z%14%06/%0E&%0E%17%22%04h%3E#72%22%11%15%20xz%3E.%7D!,,%7F5%03&r%0Dx3h%0F%14%00)%18d%0E%0C%0E6%0Dc%0C%08%0F:%1D3%199%03%192%1A%0F%0B,%09%0D%12%0E2%08%1F%107%0Au%0C%090%7B%18%22%0A9%1B%16%20&%0Cy%3E%17,*%1C'%1B1%0A1&'%1B%1D%1C7%25)%1A3%0A-%0E%02kd%0Fr%0D!%184&%14#%20%11%02&%03%09%05%1A%09%0F%0C%04-%18#%00q%22=%13%09%092%04%07%1De%08y,c%3E?%05%00#7%1F3%00&%03-%10%12%25&%08v%13h%07y%05%0F%18%13%1B5&%0D%164%0F%02%00'%189%062%08'%139%01%02%03'%09%03%0D8!%1C1%1D%1B%12%04'%1B3%0A0%07%0C%1B)%078%1B%14%1B%03%00%08%22-%16%12%09%22%04'%11%02%0A%153&%1E!%00%16%1Fv%143%0Ay%0Cz%18%15%0E9%1Fv79%0Ap%03%1E3%19%03.%1E9%3E%08%200%1D(%1A%01%0D.%0C%19%0F%02%1Cy%0Fv%0D%25%1A+%099%11%1A%092%1Ez!$%08%0F14%1A;%08%22%0A%0B%1A;%0A6%1A%0Ah9%0A.%04%05%16f%0D9%0C-%20!%0D0%3C+%125%01$%06%1F%1A%03,j%02%0B1%0A%19,%08%1F%18%11%0Du%02%1D%3E%116sg%0D6=;%209+y?9a%08!7$9%208:f%7C%0C./%11%166%14%03$%202%7C%7Cxr%7Da%7C%02%0D%0F%19%13%11#%1B%1B%0Am3%0A(8%0F(;,%15%0A%1A%3E%13%7F%06%06%0C!%11%06%10%0Ev%18$%0A%1B%1E)%1D3s%03%07%1D%18%15%1A%02%06%03%1B%07%0A%03!9%1F#%22%00=%0F%1A1%06%00%03%03%18%14%08%09%0A*%0D%1A%0E2%0A%0C%0D%19%0A#%07%09%17%0A8%00%1F'%18%13%22u2*%17;%07-:w)%25%0A%00;%1E79,%03~%02%08%15'.s%0F%162&%10%00%17%18%18(%18%08%08.%18%1E%10%11=%18%11&&%0F%010%1D%09%20%20%0C%0B5%7F#%0E%07%3E1%03)%0A%02%13%02%06%19%03%3E%3E%01%0F%12%7C)%3E%20%02%19)%3E1%06%20ts%04%11%02#%13%25%0Fk3&1%7F%1B%3E%15%0A%05%01%08%0F%03%1E%10%00+%0E%19%03.x%00%3E%04%1E%25%0D+%1E%12=%18#%2286%09%25%1F%14%0F%1F%12%10%044a%15%1F%00/%05j1%3C%0626%0A%11%0A%12%09%173%011%00%08%01m%01%7B%00r%0F%1A=&%14'z%18%12%7F%00)%0C0%1B%04%1B%09%07=%3E%0A%08%7B%00;%1C%3C%02%20%25*%06x%19%07)19%02u%0A%143?%0A%028%002;%1F+,%0F%18f$$%08!%14%022%05~%07%107=%0E*%0888%12%00%0A=%18%18?%0D%259%17%25$%00%02%17%18%1E%13,%3C%0F%18%0A#9%3C%3E%1F8,&%3E&l%7D=%03%0C%03%18)%08%25%0F?=*'%25)8:%19%02y%05%221'?%00%00%0C%60%19=*%7D)%08%11%091%06'%1A%11%20%09,7%1C'%3E%04%1A%0C%1F%60%60%00$78&%12%00%20#%0C%01%18%0B%7F%0Ao%09x%09%7F94;s-%07%094a%1F1%0E%07%158%0D,%18%20%0A%19%12t%25%0Dmc%04u~%03%0B%19%06%13$85?%0C#$%7C%0F5%25q,%084?-r%3C%08%13%60%06%20%02%1Aj5$%19%0A%1419%0A%11%3C%19%09%12%7F%02#v%14%12z%113=%16%07:%11;,%14g%1Bqz(%17(-82%255=*%07%20%0A%18%11%086%7F*0%60%0A%05'/j7%05*/?%1C3%3Exy;h%11!&%09%7C%11#r.%0E*66/(%01%17%00%03&%11%13'%15%03%13%13%19%25%18%12y%12%08-4%13%02%09,%3E%18%17$9z%7D%0B%1D%09s~%7C=a%3E%25%7B*%0B%11%0A%17%02%0B2%04%064%07%1C77,*%7C)%1A%11s/=;%1D%3E(+%3Cw3;%115%0C%0D%0Ff?p!&3(x%11/%20%20%00)%25,%03%0843%09%0A%07%13%12%3E%02%3C%1D%08%13%0D6%02%0D!(%0Aq(9%13%00%1B%25z%1D%3E%16%09%06%09%04%0B%13%05r%0A%22%1A%01%0D%008*2%1B%03%15%08%07%1A7'6%22%08%082#%07%0E%16%10;%05&%0A%04%08%18%0Ey%12$%10%3E82%0D%1774$q((:%01%08#%1D%0C4%13%09%12%09;%15%18/+%08%05%11%1C%22rx%0B+%05%1A%06y%03.(%08%18!v%01(,%0C%18&!%05%25%22%12%0A.%04(8%08)%1C%12%3C%07%3C%252%11%0D%25&%08m%18%0A8%0Dv%1F4%1E%059%18-gx%14%25=%13%1A%1B%20%18%7C%16%11%02-'%1E:%16%09%0C#%0F%18%12%0C%04%204%15%09%1C5&%08a%15'%10%0F=%107&93%07%13%1A%1E&%19%1F%16%1F%7C%17%0F%1E%20%18.%0D/%7C%18%11#%10%0A%0B8;%02/%0E%02.=3%0B%139k%17%06.%01(%1Bh#%223%0B%3E%1Ds(%1C%07%1D'2%04'%00%1A&1%14&%1D%17%00:.(%17%1E8%0F%18%09%06i*3q3%04%1C)1%0A%02%0D%20%22%00%22%0C48*8*%20%06%16g%018/6:%3E%22r%02v-(,%02)%16#%7D%04u%1A%02%3E$%08y%07%07,9y%0A%1E:%09%09%22%16;y%012%19%09%184%12%06%20%18%0D9a?%00.:%1D+%1B%220:8%01%07:%05=%06%0B!%1Fq%7B%3C%60%19%03%201%3C/%17%0A%14%1A$%17%1Ds;%07%01*b1%02%03%09)%22%03%0B%0A%168%0A?*r7%3E%05st%0A%1F%1B%1A%08&%22%18a%11%1A%22%18(%13g.9.wa%1D*%0E)v%00%15/%092#%17?%0E+%1C?!#(r?%04i?$%00%00%1D%18e%3C%19%19-%0E%1C%098*%07:;1(%01?n%08%22%08%0F%1E%1B%17%20%1B%19:%1E%03%11v%1Dw%01%2037%03%0617%1E%001%096%1As(.%17%16!%202%0D=7==-~x(%0A,%1B%1D%0D%3C%1A%20%19%0D+%11%1C%13%17-&m%12%01%12%18(%1E%071#%02%7D2'%0C%08%7F=%01%03%02t9$%102,v%12*n8%1A%12%04%03a;!u%05%7C%092%7F%22x8%03ixs%7D%20%0D%12%0A*%0E*%1E%06%03%128v%0B%05%03/%01-%0F)%129%08;%1E:%1Bs%02%0B%00%19~%25%1C%14%10e$%19?$%16g*%0B%04%1F*%15r7%04%0Bm%1C%3C4%09%25:%03%015%0C)%1F%12%03%16y%02!%18%1C%17%1A%7C%1D%1C%06%05%12'm%01%04%13%05%7D%0A%16=%0Cs47%15!&%7F*j5%7Fx%60%014h%03&=%06%0A%14s7%18e%18%16%3C*z-%00%11(%1324m%01%0C1(y%3E%14%20%04%09%1B%0B%11*%07.*%0B7%198:~%00%03&%0Ar!?%3Cr#%3E%04kh/)y;lg=%11x%17%11'f#%60%1A%1C5%03y(%0D,%08%0Ct8%190%12%1A%00,;2%16%19%00%1C%1A%1D'-%09'%020%05%0E*%11%7B%1A%12%0E%02%09%03.%05%0A%0F%0A%1E%3E5%0F%19%20%1E%0F%11%12x~'6%12%0E3%1C%0F%08%17%09j1%0F%1D'%01,%06;t%02%11&8'%13%12s%17.7%1B(~%10%09%04%1Cb%0F6%7B%1B%1B%14%0C%14y%04(5%0Aq%09-.%12%22w%0C#;%13,%05%7F%0A%18%1E%0A$%0A%25%10#%1E3**%1A%3C%08/%09%01a%13%22%06%02%01%081,5%12,%101%22%0A%0Cz%0Cc%09%18$w8%17%20%11%02%14%12%03#y'%14.=x%0A%20%1D%17%01r9%1B%1A)%12%1A%08%7F%19*:%09.$%1Ahh%03%03%127%03%11%7F%13%06%03%1D%25%02%07%12%7D*;%09%0B%0C=%1B#%0D%0Ex*i9%1A%03,%1A%08i%0E.%20w(*%0E%25%04,8(?+%7C%08%03%06%22%08s%07%3E%1C%22t#%04j3%12%14%02%0F%18-ym%0C%3C8%20$(%25:*%7C%20*'%252:gw%7F~jag%08%07%0A4%1A%0A)%11%078'#+9%0F%1D%09%0A*%0F%09%1B2%0A%18,*.%13%06%00&%08%18%06%3C%03%06~%1B%0A%0C%0D%0A%08.%13(%02%096%0B7%1Ar%0C%1F%1A%60%0Cs%22%0F%09%08%20%10%0F%7C%10%11%03%18%0A%7B%09%13%0A%00%22%0F%17:%19u%0A!%3E7%0F%02%02%1B%03%17%20%10%1D%25%18%199%03z9%1E%20%03%009)%1E%15%1B%09%22%04;4%60v.=%09%3E%07(%0Ew:5%7Cv14o&%0A#=$n5,%13%7C%0C%103~%20%08%0F%1A%1D%0A%06$%0B%0E%11%082%0A%0C%00%15%0A%0E$6*%11%08%12%04%0C%15%13%0A%0B$%0F%1E%20%0A.%0A%09%00%11z%00%0F~%0F4%1D%17%0A%0C.7*%03%1E%0F;:%1Ep~/j%06r%10%0A?%1A%01%08,%0A%07o%19%09)%026(%01&*./5%02%00%072?2%16z21%1E13%09%22%7B*%0F%06%0A%17%0A%01#%22%0D%10%0F%038%7B=%00%18%25%0Ai%0A%00%7C)%1C%1A%25%00%06$%1C(;%11%0Ez=%1621.?%18%11:*%19%04%0A%02!%0C%06*,g)%15?*%00%11%1F&%09x#'%20%00%20%177f.%10%1A%031%118%19%227%0D%03%0C%162;%0C%1B3%16%09%06%01!%3C%04*%02%01%07y%0F*%7D%0D;f%148%0B%1E%01%02;%0C%0B%20=%06;&%0D%20%07.%03%1C&.f&9yx.%1F%09%0F%11%1D3%1Bf%15%0E'%115%05;%3E%0Ah'1p.%06%20%7B%1B;%60z%10f%1A%0C:!%13%3C9%14#~%178%08%06%12'%159%22%13%18x%0A)%04%192%1C%0F%1Bs13%0A%0B%0A9%12%01%00%0B%1A%11%08%1A%25%0C7%0C%06%20%25%1A?%09&(+%1E%09%0A%13s%03%3E!';8%0F%1B;%005;,%18%11%0D%04%0D%1B%18%12..-%0A%006%08%14.$%14488%08%1Bi%14%7B%02.%0F%1B=%1A%04%0D+%10%13%7D%00%08%22%3E%18%20%00%06%7Bk%1B%22%10%03%031%13$%00%0D):!,0%3E%00*%18=x8-a%11%120%06,i!%22%25%22%0F%0B%1A%11%02:%14%0D)*%15%02%0Cn'%096%05'%0C%11%0A%18%13*og%0A(%0A%03+$%256%09=+%1F%0D.%04/*%1Ex9zx%14%60%05q%02%1E%1B$s%0D&%04%16%1A~%11%03%0B%1A3%07)%1A%0D%08%09%18%00%0A%1Aj%22%0E%05%7B9l%13%030r:5i/u,%1A;%08=-%13%1B:gr(xz%0D(%20$%22%17.%13%0A%0F%0F%0F%1B=%3C%03/%01%08%16,%079%17%1A2%250%1C%08;b%0D%16%05%17=%3E%7D%19%7D%00*b%7B%20?%20%16%15%09l%3E%0B%091%033y%0Fm%3E%20%0E%02z1#%7F%0C~z%0Bd%08t%07:14,l;&%157)23/m%18%25s3xo%1B&(%0D%1F0%7B?&%1B:,%18!%11,z;gy%0B%60,%1C%25%0E9%20%20%0B;%097%12):7(%0A%19%03o*%09u%1B68f,%0C%09%05%03%14%3Ey.7%08%15%20t%09%0B%148fw%1A%00%16g%7F%0F&)a;%20%1B%0A%03%0B%03%02%14~%0D2%18$;%08%1A+%07%3C%05=%06%1B*%0C,%016%20%113%07%7B8.d%032%09%0Cl%20%0A%00%08%19l%3C%7F%05,%025#%13*%1C%25%1E%14,4%25x%00%0A3-y%0F4%0A&%12%1F)%0F%3Er+%11*2%16%0At.&6%16%0Dp;;%0Be&%09%1A%00l%19%08j-%7B%3E%08%09#.*%3E%00$%17&%08o%1C%0D%0E'x%08%0A%19-:'%18e,8*z%1Ce%1F3&%04%0F%19%0Fus,=%02%7F%15%20%00;%19f%16%1D%25%17%3E%1E+*z%00ar'&%0A%3E%198%00z9,%1D%052x%01%15a9,%07(%00e#%25%1Azo%60)%14%60%25jb%09-%25'%11%05/w%7F%20%01%09%7D1%3E/m;%09%00%0A3k%7C%06$9)0%3E,a%1F%3C83%202g%1A15kx?&y%14$%22?!+%7C%7Fryyj%7C%02%0D%0F%09%13%11#%1B%02/.8!3%0A%05.%14%20%03*%0F%17%11%1E&%049%1C%1D%09p%0D%1E%18%03%1A%05%0E%0F5%11%1F6%0E~0%60%0A/%1E%0F=b%0A%09%20%0Fh%11(%10%0A=%18%1E&%10%0A'%187%0A6%0E%0F.%20%0A%02%22%0F%10'%09%0C*%03%01%19%0F%0C%11%0B%18%15%1D%0E=%1F%0A%00%0D%15%11'l%07$q%02%0F%1D%3E%3C%02:7%3C%1A%02%05&9%14%7B%0C%02%04-%10%1F%22%09%127%08%002%0F;%0F%12%11%012%0A+%3E%14%0E%15%13w%1C%15%0C%07,*k9%0E9%0A%0Fj%15%05&%60%0F%1E?%0A%13%22!%03%11%09*:%1Ci%14,%00%0F%03!%12%01y9%1C%14a%01%22%06%1D%1Cc%01%02%1E%034%1B%0A%072=(%03%1F%07%1B%05%1C%60%0A%02%1D7%1Cf%0A1%0E%20j7%7D9%06%25%08i%02%03'%166%12y%0D#%22%17%16;u%0E%05i;.%0C%3E$%10b=%06%0E%0F%1F%3C,%0C)%7Cod)u%1Cv,%12%00*%7D%1Fm=%7C3f%1D%08%11%1C%10.%0C:'=4?%03%3E%11%1F%25%20c%1C%171%15%1Bz%0B%1B%07%13*%0C%0E%11%0F%0Ef%7Dr'2%08%3E%7Fa%0620%0D%0F%1E%60%1B4f#%0B%22y%06~%1B%3E%01%05%13r6*%11%0Au%13%0C%1F5!),%160%1B.u%0A%0D+;%22%05%7C%1D%18%11%18p;%16%3E?:r%0C%7F%16%0A%3C%03%20$%14e9%07%11+.ey%08%00%0D%0C%60f%11%119%1B%20%08%19;9,b%125%04%17%1A8%7B%16~%0F%1F%1D%137r%175%0A%3E/!c%1D%19y#(==%16%7D%19#z:%12%1C%053z68%01+%19%7C)%12%7B&%0A%08%0C%11%0A%16z'%1C%128*%0Ae%1A%12y3%3C9%0E%60%1Ax%02%14%13%22?%03%02%0B%14:?%17%04%05%0F%13%7F%17%03%0D.%60%7B%16$%1F%1F%03:%11%0A%0F%117'%18%20%1F%18%00%111%20%05%03%1E%0A%1B&&:%089,%0A%0C%3C%11%0Eu%02%0A(i%1A&#!5f%19%02%1F%16%20%11%02u%01%1D8%3C:*%0E%00%1B%60-%1B%1C%08%1B3%12%09%0D%25%123%22,-%00%1B%08%0Eq%60%0Ak5%25&&x%1B=%01%16%1A%17)%19%7Fu%01%0F=%14%7F%22x%01j%11%0F%00!%18%20%1A%1B*%60%03%1F%1F%1C2%07%3E?:%05s%1F%3C%0A7yt2%19/%11/%0A%01%08%13?%1C%05-,n%1B3r%00?7%18%1C%113'%1A%1A#%0B&45%09!5%08w%3E%17%0E%04%01'.'%13.8%0D.3%3Cy%0D)%1F%11%00q%7B%16%0F%1D%19%06%18%0F%1A%13%1F%00%09%3E%1F#%1A,%1F/%00%1F%086%1B&1%12$%00#%18%11%13(y%19%1D/%12%09q3%0Fn;%0C%13%0A!%14%22%0A%00%006%1D%1Fz7%25=:(,%15%04%0Dle1%02/-%12%08s%09,%1B%0F%25%1E%22%60%07)%05%02%15%18w%08h%07%19%60%01h%05,8)%07a8'%18%09&5%1B%18t9#0%06,%20'%1C%14%13&-**)%1F%22p%0A%1D1%1F9%1B%18v%0F%09%03uz6%16%07%0A%22%19%0F*a!%08,%0A%0C6y(%0C98%15~%15%1A+%1A'%7D%07;%1C%18%7B~r%08=%15%1E~8%11(ae%1E%12%1B7%18%22r%12%0A%22%14i%0E%0A%0E$%1A?%1E%10%05%08%12#%0E(%7Fy%1F5%1B%17%12%0Fr%16%1E%18(/%3E?%18%10%7B%7C%18%1F#%07%1A'(%1B%3C%15%7D+%20?%0A%0A%3E*%09:~%0B%07!%0E#1%10%0E=%1C%7D%07%0F%1F%7C%3C%22)%0B%22'(%07=%06%05?%0B%01%7D,%0A%3C03,%07%0C%1D(9%090%20%1D%0E%19%06%09%1E&%17%19%03%25%09%04%03%1F%0E%08#%25#%19%125%1C%0A-%14,%02%1A)%00%09%7D%00%11%1Dm6%1B%229&%01:!$;%0Ci)%08%07;%20k%11')%0C%02%13%1A%0E%0F2%7Fl%20#%0F.%25%1A%11%20u%19(%0D(%0C6%0C%3E%1F%17%19-%3C%3C%00%11%22%03%60&%1F)y%09%12%17,%13&rr)%18%05%1B%22.%0Cm%09?x'&r%18%19s&%00%0F%15%0F%00z&%0D&%048%7C%3C-%25,v%0F4%08%17!%08%0Fz%1A%16%7F##;%1E;%02%00%1D%7C.7%20q%0F%25%1E%02%0C%0Cx%0F2e&%03%0C9%3E%25y%12%19%02%17%15%3E1x%0927%7F%22%13%14a%06%3E%25f%1678x%22%13%3E3a3%12')%1F%16%7C%073,!%1C%25%14%01%22h%15~%20'%07%0E%1B%18s$?%1Cb%0A%0F%7D%0B%11%1D$%06%04/%08418=x/%1C%1E%16:%0Fa%1B%13&%0A%09-%113%18(%02;c*s3%04l%15%1D)%09%00%0E%1A%0C%0Az8%01%04%06%0A2z%0B%20%3E%16(%1A%0D%02*1%20%14%14i%7F%15%12=4b!+?9j%00%25&%12%22%1C%14~%0A%1By5$x0%0E%7B,%17%04*%19%1A2e&#(%7Bk%00%11)%0A%3Ch6%09&=-t%17%19u,wr;%1B.%1E~%14%001#%0A%1D%09a1%15~%1Eh)1*%1E%7C%3C%1C%60tr&%1A%14*s%7C%7C%148%1C%03%20%03,%09%22t%12v%3C%12s4;%171%15;%17,%06%1A9%02%22s%1E%0D*~9%03x%1F?%081%0E%0A%1D%3Er1%08%0C%60%11%7F%03~z0:,x%3C-%14h%1D%1B%09%08j7%0C,%12w%3C%3E$4%18=1)-%08%1B%20:%09%0F-%12%180%12%05%0Cx&%1Bc%0Au%19x3%7Bzt%7F%0C%0E%11%09l$%1C?%22f%05%60?%13%11%03(%25c67)*%1Fv/%11fr%0D%03%18%7B(%14%0F%1A%08'%1B-%04%0Fo1.x.%3C4%182)%13%1E%1C%1E%1A5%07%1C%18a%0E%19%1Fz%16%13%119%13%0F%10%01%03%0B:;%17%25%7Fr%0C,-#%1C$'%0A%1C8%09%00%1A%09%3E%1C,%0B%0A7%00%1D%0E8%0A%07%1D%11%7B)y9a%11$%0A%3C,%18%19%1A%14,&%1A%15(%08%20%07%0C%11%1A)1%0C%1C%03%02p%1A%0F3%1A%03%02%04%0F%13%19%1E%00%7D%1F:2,s%0E%08.%1C,%1B%06%7B%1A%1F,.%08~%1D%11(%0B%7C%0C%0E%11%1E%09%3C%1E%3E?%0A$%09-%11%15)%08$%1C?(%22+;%0F*%03%0E%148%7B0%1C%032%0F9%111%0A%10?%1C31%11%02%7F%046%3C%0A'%0A%7B%1B%15%08u%07%0F%0A7.%18%7D%0C%00%15,%00%02/!$%224%7Dw%1B;%19%18s%04%1F9%051%1E%22%0C%14%1A%00%3Ey%18=%0E2%07%17%0B'9)%09%0F%3C%16s%0A%3C%00%1Cb%19%18%22%04%1C%07%04*%12%07t%1A%08('%0B%0B%16%0A,$$%0B%07%22%25%0Dx%10%1D%1E%18%206%03:%08,2%05*%04%12(3w3=&%12%00-%0Ady.%1C%04#%12%20%04%1E%034%07%0As%0A7%1Db%0E%20%13)%0E%1A8+%02%22l%1D%20%1B%067%0Bh%1F%04%25?h=:*'%0F+%13%22%058%03m%0A%0A##8%1D%7B%0E-%06%25%08%05y93%1A;%16(-%07%0F%0A%1A,(%099%1A!%1B%14%11!n%02%3E(%0C%3Ch%1F%06%20%12&!%1C%18%10%094%13%15%19qy6+%12%02%03y#%12%12#%22%20%14%3E%00%0D$%01v%01d,%0B%0D%0F%3E;#%0D%08%19i!%11%08%0A!5g%01%04%1Cvm%02%088%20%25%10%13%7B(8:%03%171%0C%25%14%17b(%22&%0F#*%01%07%03%07*%04%0A%15%1A8#b%0F%08%084%13%11%1F%08%04%0F2:-%03%02%0F%1Cd%1A%07%0Av%0C9%05%20)%173e!+,%0A%16%1E(%10,%08%1Cc31#?%11%05%116%7F%0F%17%11%0E%17%08%014%08%08u%199+%1F~9%0C%02%1A7%00%20%07%3E%3C8%1C%04/%05%0E%04%02,%22%09)?%0D)%1F'%20%11!%0D#%0B%1C$%00%18$%7B%0B%19%0A8,%1B(%20%1F%12'%0F=%1B%7B%03*=*1s0%0D%253%07%1E7%02%7B;%05%05%03%00%0F%1F%17%04&%0E%03%148%1A%17#y%1D6%03u%0E%07%117x9!%06(#%01#%224)%05%22%1B%20'%09;%1303%0F%1Ea%7D%17$%0C8%19$%148%0B1%04%0Eq%09%0B%09#.6%1D%07%18c~%0A%0F%17:%60%05%22%2277f%3E%10%05%09k%1E%08)%7F%7F%03%1B%7F%04&z%08%1B*3%09z%1E*%1E%08,%7B%0B%04:s%22%00#4%1C%09%3C%0C8d%7B%0B?%02%0A%19%1E%1B',obz5%20%1A(%7D%11+*%05.1%09#%1E%19-$%11#%19%22)%25%7C%1B&;-%09:%20%7B%0A(7%02%22%18%1F%1F%12%02%03%01%09%10%13,%0C%1A76*~%02%3E:%0A%19%7B%17?'%13%05)%13%3C%00%12!*%16%027%1B%07%09u%00%19:'(&s%0C%0C%13*%11%18'h7%7F3%1E=/&/q1%22%1C%11(#%01')%1C%7Fq8%7F%15&%1C&%09%7C2$%08&%04%0C7b%1B7*-%1B%7Bz%02%0A'%187%0Al%1De7i,&f%7D%18%13%1C+%02%14%14'%0C%12!,,%15)%209%3En%1B.*%02%0D.%16%09;r%1C%1B&z$9)#$%06%10'%0F%3E%00%094%0E-%20%60%0F%07%03%02%017%12&%05~8%14%09%09%12%03%1A%18,w%19%3E%1D%1B%0C%0B%1E%178%0A%1D)zw%10%12?;%0A%0B%1B%09%7D#383%7D%0C%03%024%14%15%7B%0B%60x%00%08z0%20v%10%00,%25%09%08!%14%7B%19?%1F%0B%602%18%20&(%18%02ts%25%1D#%224%04%1B%03d%7C%14%0Cv%18%3E%1B%07%08+%1B1%012%0Dz4%19%1D%12(%223%1A?%05%02?)%052.%1A%08%15%1E%0Dw%1F%0072%018%11%01#%06%05%06%1A&%60%22%0F%19%04#%18%0A%1A3%25%18%17%25%13%14%3C63)&-**%08%60%6031%02n1!%0A#%0F%1D)=-%11%03%1B%08%01(8e4b%115%25%04%0F%1C9%0E%1A'%01?%7C%00%1B%7Bm%12%3C%0E%12%0A%18&:)%08w%1A?%09,%0F%0Fi(%02%03%7F%0F2(3+%07;7%1C%1D%16%0Dx%149%7F%00y&%1A7%01%25%1E%1E%20&%00%16%7D%077%03%11/%18%0B%12%04%1C%191%22%1D*%02%0F$+%0F99-%1C%01%3E1=2%034:9;sr;n6%7F%04'%1C*%1E%09%06%3E%3E;%03%20%10%1D%0Fo$%19%20%7B~h%3C9s#%09%107%0E%04s%042%16%12,%01%01%08$%7Dx%11c+#%25t%04%05%03h%1B%04%05%0F%1A!'%14:8*%008%0A9%22o8%062*%3C?a%255%60%02%13a%1B%02%02%025?y-%19&%18)%096%06%1C%107%1D%00s%0D%0F3,%03r%22%18%08y%11%1B%7D-=1%16%7F%0F%18%1F,'%1A%0B2%1A%7F%17%196(%1E=%02%0D%098%25;%0D%3E%0C-&%1E%20%7B6.%13,'%0A;n1%0F6%0E*j%3C%25%16%20:l%07%07%06%1A%06%3E%11#0&%22-%031%1Bx%3C:=%0D%0C%02%25a?r()%02k%60%0F%12%0F&.:%25vs%7Ct%25%22v%19x%0A%7B%19y%09x%0C%152x-%17%14%0A:)%02%0F%087%02%07,/;%25%1F%13.+8*%1Fx;,?)!%1B%11%225c%3C$%13'/%3C.0%60#%60i!%17%18%1E%1F&%0E3z63!%0E%07%0A%22h%17~%09%22,5%08*7%138/1s%123c%60g%1B38%148:)%25#%0B%12%199%03%25!6%12%02%20%1A6%00%04%03%0B%25%03%17h)3%1F%01%0E5*%11)%16%3Cf%07s&,%01%11)%0B3%1A+%01%3C%00%07'%0B%04!%07,-+%0A%09$#!%1F%09%03%08%11%20)%18%1A'y%0F%13)%06p%7C%08/%11z%20%60%20%0D92%19%19=%017%04v'vn%60%0A%12=%16?%04%12%1B%07%0A#cs%06.:!%1C%7Dr%3E8j?%0E%00r%0Ah)%046-%07(%3Ez%11:%0F+)%3Cv%0A#4b%1C%13%11%04k)r%11'%1E%0D%043%25;%7Fh8%0F%11%3E&ri(%11%1A%7B,;%12s%25;%0D6%05u!%3C#)%04%06%7B%1C63%20%0E9)%16%00%1F%14%22%0C2%1C%1Bp%11vt9(w)%1Ar%04?'3%1785%01%18%0D%1B4e%253%1Be%60?%1E3?*a%12s4(y-7%0A%13%016-%3E81?%16*%1E/%0D/4%60%25%7Bl%05&%1B%1B,p8%1A%0Cf%1E%07s%162%3Csrr%25af%06%10%09%07%037%09$%0A%1D%60&z%10%0A/a%1D%7Bws%08*68*%0F%022%0A%0A%0C%0A%07%08d%7Blr$%0C)?p%06z%1D1s3/%05%1A%22s%18#%06%1B%05%0F%22(%09%0F;s2%0F%1Ba3%0F2%06%07%18%15%01&%0A%01*$r%00%0F%7B5%12s%18'&%60is1$%01%1B%18%0A%17%06%7F%14%1E%05%19s%0C%1A$%05%22%0F)%18e,.%06+%189%08*,ch%17%1Ap%0A?%18%06%0A%07%09%03%3E%06%0Fr%209%148%08%10%0A;l%7B'%03'&2#%09%13'624r1%0F+*%15%20%168%1F%18g%1A+re:%09%0Fx,%19%1A)%08s%0F$2;%08%19#==a?vr7%60%1Bs((e%1D%1F%05rs%03%60%07?&%09%1C%1F%02%0F%0Frx=%12%1D%09%0F%14%1C%20%05%1B%0F%1E%08%01%0Aj/!%1A%25s$r%1E*%03%08;r::%17r%00(%3E:%0A%0Al%0A%3C%1B1%0Fw%0F%253%608xs$h%00%19%09%09%04a%3C%08%1Bs90%1D%0F%0C%05e%1A*%0F*r%18%60%1C%3C%19%19%3C%1A%16%0A)%20?a%18%0F)r)%1A%3E%08%03s%16%1Da%120%0A%033:s%198%7D*3!u(v3%1E(l%0F%0Fh%17r.%0A%14%18%01/#r)0f%1Dy(%7B%60'%22%08?%073b%22%11r%02.b%1A%17,*%1Ai%0F)/%143d%08%02%22%0809!j$%14%1B%1C%200%20,51'v'%1F-%17'%15%0F~%14?!%0A/%07%18*%0A%0C%0A%0F2;%06%11?9-%16s%25%22:%17c%02%06%19%3C1%19#u#8%3E&%22-%1E8%0Cb(%03%22~-d%1D)r;%08%1D%3C%03%0A%0B%0B%20#%09%09+1%1E%20%22%09+%60%03%0Fx%206:%01%7B%0B/%020%3C%22.%19%07%18%16%0A%02%19%1Bh%1F89%0A%16a%19!w?)%17%11%1F&%1F%07%1B%14#%13%08%25%3E)%0A%1B%09z%60%18%1A.%1F%02*%09%1F9%1D&a'%08%04%1A?%08(8w%0A/%1B&'7,va%02(;!x%60%13%1D.%0A%0D%183%095%0A%220%08#%02%18%1Bh%20#%0F!#3%25%05%16%22%1634!.!%071%1E3%13%0F%09%13%17%18q%09?%0C%07%18%0B%08*i%20%08%14!%01%0D%02sl%3C!%1A%04r%18%0Fv3%02%1F%25%1D75%1E$l%09%05%0Ca%22%13%09%08%0Ai%05-%18&%1C%178%09z-%1A3%1A%10%09%0D%1D*z%25%0F%03%0A'z2%1F:%0F%15%083s&%3E%16%7B8%18x%1A9%7Bls%07%0D%15z%0A!%17%0D!%22%05s(%18%14~%08%09e%14c?;z'%10%09%01p%05%3Ci6%0Ey;%1B.%18,%0C$=)9~%0F%01c%03%1A%1Ew%0E%1D#%7D3%20%0Dc%3E%1436#/%3E!;*%0A%05%18(,j%0A'%1Bes%0B%09%09%186%0Ex,?l6#(~%0A1%1C%12l%7Fz3%032j2%1F%1B%14#r%11(%00%15%19'%09%25%1Be%0E%031e6%09%09j%06%01%18!%1A%02%06%08%1B%06z8%0A/%1D'1%12%3C7i*%11(%7F%1F%3E;?%09%1A%03%18$251?:5%09v%7B%0C.!%1A%12%11'%0081j16%3Ea2s~:%1B%09,*%019%03%19%09s%09&%3E%08%1A%14%7B%0B%17%01%01%05#%08m2;-%028%607%0A%03%0Ay%08f%0Ay%09%22%18%17%0Aq%0A%07%0B#%0Aw%18%1C1%1A%09$#%17m%1F%11%0B,;mh%0E%10,$#9%11u%11%05%1F%0A%02;1%05l%1A1j$%0F18%09s%09%1E%10?%19)%09%06%18%02%01v2%1F%18!%1A%18%09%1E%18%17%0E;~%14%1B%01%01s%0A%3E%0A%16%0F%12%1E%7C%1Be%0D%0F%09%17%18%19%00%08%0E9%12%17%00%15,%1F1%08%7F%10%0A%1F%3E%11%0As)-n9%25%223'%0E%13%7Fy%7Fvl%13$%12s%17%12%05z3)%25%14%0396%07-%1C%11.%00%13;%123,%22%7D%17%0F%1Dz%19(9%1D%1D:&%07%03.%06%0E4%1B%03-%25%1A23%07%00#%7F%122&%0F7(21z%0A#!%16%0E%0F%1D%01%03&/)%1F'%08&%1Fvl%1D%13%11-%1E%1E%01%00%0C:%1E%0D%02%06%06%06v(%13s%20-'r%13%3E%06%19%0Dj#=%12%20%1Dh%13%7D%00%0A%07%13%09%12%00%04%02%15%03%066%19~%1E%11%0Ax)%1F%097(%0F%019%0B'%07%0C%18%1F%3C%11%0F%02%199:e%1F.%05z%1C%11%08,*z2%11%04%04%1E%0D%0E%11%1F%08%13%1B5%3E%0F%00-%25n%01%25q=8%0B%13%3E%18%03-79!%00%07%7B%13%19%1Br%0E%07%14%01%0F8%7F=%1A5%0383%07%143%7C4%1B9%15;%06%22~%0F:%11%0F%14s=%00%01%0Du%04~%15e%136%039%0Df%01%0C%20%0F%12'%1C%22%7B=%3C3%20&%19-a?%22%0C#c%3C'%04&%02:%1B%01%0E%1B%18&%1D3%220x-m%11-%2294%08h,%12y%09%0Ch;0%20-%208%00y%22%1D1%15-6%18%0F%0E%19%1A%0A%7D%03%15%0A%07*)!%15%11%04*x%03%10%22%188%1B;?b(%18%06%0D%0C5%06%02(9:!%25%22,)%16%60%1E2%03/2=-%20%257l%11(%12;%0D?)$y%19c%0C%7B%18%08%07%0D%1E%01%00%04%1A'%20%11%1E%22-;%1A%05/&%00%19:1%08%06?;%13%09%7B%06?w%12;%0E9%08)%0F%01%04%10%08%0B%1E1%1C8%09%09-%25%0C6%12x.%19%006%01%16%10c%09%10%09%0D%10f%1Aq%18%0F%17%12%124%1C%03:%03%222%07)%10&%12%0B)z%14=%0C0-%05%157*$%0F%7C%09%25%0F%069~+%17%25)%13%09o)%0E0%0D%25=%13%054.%25%0C=~%12(#,%08%09%10%1F%1Ftf%11%16%1B)%0C5)%0A%06%1D5!2%00%0D#h7%05,8#%0C%05%0F%03%1B%0C%18!%1A%20%1E%1D%3C'%12%06#%0F%157%1A%16%25%09,%01%0Fq%04%25/=%1B%04%0E!*=%1B&%03%7C%003)*%01)%1B%1B)w(%17%0E%03)8=%17%1F%60%1B%04%03%1D%03?%05.%0F!%15?%1F%10*%17%1D9s%06=%19=)%1C0-?%1Bf%09u%044=%25%12%22)%1F%17%19*j%19%1D%097%18%00%13%07%1D%1D%06j%1B%19:%051$)%25%18%07%03%05%18%7F%1Cd%0A%00%13'%18%116sg%0807#5k,83%20m%0C;=%03?3*:ug~przu%19%07%05&%04%188%11%08*91:9%00%0Az%11%15%08%06%09%7F%18%1A,$39%1E%16%02%03%07%0F%0D%03%3C%05%20%0F7%15%0A%02%3C%0F238%00'%0F%1F%02%3C%18%08%25o3;w&%3C%1D$zu#%0D%18%09%3C%05%06%0B%18%1D;%18%0A,%14%11%08%0A%08%0F%13%1C%0A%00%02'%18%12%22((%03%3E%132%0C%124,%11%090%05%0F%1D#%0Av$)%1A9%20%00%02z+%15%3C%20%3C9j8%13r%22%0C6%14%7B%00%007(%11%0C%18%0A%02%3E%13:%0D%02%1F%18%14%0C%10%1A%25%1C?%0A%02%25%1F6%11%099%029%1B:%3C3,y%0E%11%086%60&:%12%60%1B!%07%14%11%046%0A/7%0A%00.%1C)%10d%11%03%12%1668%00%06%22x%10%07,%00*%02%088%0Cu%20%19%1D'%07.%1C%00/1%205:%7B%12b#)%0F%3C/e%09%18%11%0B!3%1D%03%00%0C%3E%142%05%07%7D%1E%7B%1A%02&-m4%03+(%7D%3C2%19q%02~%1Dc.l%1E(%3C%2593.c)%1F%3Ep?%3C%03%3E(%00%0A%1C0(x%12%0E%25)4%00%19%12%0F%18%1C%13%02%05~%3Ea!6-%7C%12%20%1A0z%18(i%1A&%7F%1Fi5%1A6%3C%1D4b&*9#%3E%3C%1C)-~%0A6'&/%0A%14%11%0E%18%1C%06%00%11%0F%088%086:%006=%0B%18%1F%0A%00y%08.7%18&%12&%1Bb%1A6%1C%07%089%1E%17%22v%0A%05*%09%08%16%167!92%25%09(9%10y+i%039%0E%04%25%1A%0A%7D(&%0D%0Eh%7B%09%0E%0F%1E%3C=%09%12%00%13%09%0A%0D%11%0F4%17%7D%04%0E7;%08%0A%22%0D%20%1D=%22u%0A%0C%3C%02%7B%06%0D%3C%00%08%1Cy%13$%12%16%25%06%13%1C%1B%3Cx%13;%05*f:/%03%0F%0D%08*r%13%19%1Aa%0Cq%0C#7%1C&/1=#;%09&%00%3E;%15%3C)%01%01%3E%1D%3E)%08%7B%12%05%02%0B%1A,%00%19%12$%1C%06%11c%00p9e3%1A%09/%00x%3E%19%0A%1B%3C*.'!%1B9%0A+%03?y)v5%169%0A%11%088%0As,-*.%04s%19$%18/%20%1D%03-%18%0E?9$%0A~=%3C998$%60=!-9$%1E%08%20*%0A%0F%0F%25y)%11%7C%14%25&%08%0F%7C)8?%10%0848%60%1Cl%18%1E%18b%1Bv%09!a%11%12%03,x%03'y%18s%7C5($%00%3E8%0Ca=4~%02j%08%1A%0F%1A%1E%1Ad9(r#)2%0A4%1C%08ld%01%14%7B%1A%0D&%1C%14*%00-=!v%0A8%101%09w'7:'/2%7D%1E%3E%17%01j.z)%16&r9c05%1F9%25=%1E%09%0E%10)+%0C%161+%09%0B%1D%25%024s%08k%1C%1A%05:!%0Fb%0E%0B%3E%20,?%09,%0A%19:*%032%04%0C%1C7%19,'y%01%20%09%0B9%7D-d%1D%09%1C8%108%08%17%00e4g%0A5%3E%07%18%09(9%7B?%3E%17%1A7%7F-%018%13%091%07%0Bd%7D%15,%04*d%117%04%3C!'-%04%05%3Er%18%7F*'!%0C(%04%04,%0A4'%1A%00%0Dy*%05%06/%0E%22%3E%07%1C&s%1A,%3C%12p:%1C%3E%3E%1A%15%7F%077(,%00%25%0D%3E%20&%0C*z:;%1C%22$;8%05%061r#(%09~r%03%20+(%05&%1E%17:4~$(%04%1B%3Es%00%0E%7B%0B#%02%07%7Cy45%7D$3z%11%0A,6%04%17%1B%04%20%20%19+r!%0C/s7%01;/t*%16%1E%11%0E$%18e%3C%25%1C%0B:%20%0Eb;%0F%06&%161%00%1B%0D%1C%0E%01%0F&=%7B%12%15%09)'z2%02%13%02%01%16%14%25#%25%0F+%17%06%25%05%06%3C%0E%1B%0A%00%03=h%03)%12%19e)'8%10?%1E%0F%16%02qf%16m%01%0C%08x$6;%039%1D-%18%05z%02%11'*'%097%02:%11%1C*p%06%20%18%11%7Fwx%1D7%01%13%12%0D*-6%1E%05%1E%00t%11%03%20%09%09%1A%08%1F%02%13%0A%18%1A%1A%03%117%08%1E%60w%1D%0F%0C%00%22%00s%0An%08%1C%06%0F$%1A%01ru%7B%03%3Ee%08%18%04)%18%119.!%3C3%19%7C%05*%01%00d%1E*x%1A;%20%7Fr%1F%1E%60h%03%00%0E:%60%18%1F%02?&7c%12x%25%19l&y%13%7F(%01$%0C%10f(%1F!%1A*.%09%03%60;%13/%3C%0C%12%0C%18%137j%05%0Du3%1E==%3E#~=#%25z0%1C46%05%7D1%12%7F5%15%7B%22%1Ez%10%1A%1A-%19%17%18%15%7D%0C%1E%05%0A%04%02&8%1F;%11%12%06,%7C3%07%08%02%13%1Cr%11%0A#8%14%0F$%1Cp%0A(3%3C%05#z;%0A%12)%058%7Cm;%11(%18%08%0E&%19%15#!5%03%1D%0E!%16!f?.$%1F%3E%3C,%12%22)%16%15%0A%03%06*%1B%60%04%08*%0D%0F%18)%0D=%09%03%1D%3C%13&%0776%22j%1A%2006%1C%03$%04%1A%20%0A%18%7C%220%13%0A1%00%18%18%18%0A%13%7B%08a%07%08%17%07%0F(:*%0B%1A+%1B;%0Dq%22!)b%25%10%02%03%14g%22'%05z7%01%01%0A%00!1%14%00%0B%19%1F%09!~3y;o%7D9)=%09o2%7C%22%3Ey;i%3E%0B%7By5%25%01y%0A&%10%09%05%18%0D9(%14%7C'8%0Ci%18%02%25#%7B%11%60.9f%06*h%3Ey%25?%3C%1A3/%19v%16i%12)%08%25-%15%7D%0F%0C%1Ej:1%07%7D%16l5%1Dx%13:?a%7Fr%1F%05=)%7C3/%1A.gxy%04%7Cn%22x'%3E%03%1B'%090%3C%7F5%22%07%00%04=%601%1A%00%05%25;%15y%1B8%08n%043&%01%20%1Fbsy%7Bz%09%06s0%20%010%15%0A%03,,ji$%09%12%0164%3Ct%1963%3E%03%17%09%22a%01%0A%00%04:,6%05%0Ey-t%12%7D&%08%1E?%16%1A8$%20o%1D%01''%16%1E%25/%22%0C%7B%17a%1B+f%0B%182(*%03c#d%12%00%7F!(%011%05$~%03%1D%0A%10,%051'%03%052)8%00%1C%03%7Fv%1C%16fs?$%09%1E%04w%0F%08o%05%0Aq%08)%0Db%01)$%1Am%1Bx*%1A%7D%3C%20%08%05%7F%1B%16$%22'%05%01-%138u~4#%25~%07%1A%22%109%7F-x%17%0B%08%1F)%7Cv%3C%16-9%0E*;%08%60%10!%3C;%05%005%3E%25%09%19~2%05%0D%16%19.1$%0B%183!%08%03%1F%15%18=%002+/9)%18$%07/?%7C%17%19%00*%1E%22%14&=%18%11%1Fp8%03%3E%13%08)!%0D%1Cg3%08-8:8%18%129/%0E%1C%1B4%12~)$!y%7D%19%0E%11%092%016#i%13%07=%7Cm%0Af'3626%0D1z/%01d%1A%0B%3C%1A%08%3E.p8%04%1C;.%0C%08z%1C%04%7B%10%19)!%1A%0C(%1E%20%1E%06:$%20%3C%13(#*%09%7B%16c8%10=+%03%14%0Ft%7B%056%06%7F0y%7F3:~%17%1B=:%11%13u%3C%0Fk%16'q*%18.:%607%08%19m%13%06,%13z%0D%20x%12%1A%22%0A%1C8%06%0A!%3C%05%1F%07%03%0A%13%05-%04:%14m)~w%13%014%0A%20v%01%03%18:%0A%0D%04%03%00%05'%1B%0D%1D2g9%0A8%1D%1A%7D8%0E2/2%07%20%0E%199)%20;;%1B%067%1F%0A%08%02$)%172s%25%0F%1A%13)%228%04k8%11%06%1B%03%1E%04%0E*%11%16%20%00'.%00e%0E;%25t(7m7%0A.%00-*#3%0B%1F%1F%01%11%0Ew%1D=%20%7B%1E%0D%60%7B=%18:%12%7F%7Fr%1A2%11%03%16%10%25%1Cy:%7B8%1B%3E*%12%3Eo%06%021%0E%0F%20%16%0D%05%04%1B%01%158%1B%20%0F%10%07*%0E%25#%0Ab%11q%0Az%1A1%0Dx,%1F!%0A%01(%22#+%1B1,%08v)4%07%08%1C%7Bk!-r%18x*%1C!/%3E%048%01%00x;%06:%1C%1D%02:6%0F%1F%05%00f%1Da%08%22.%01/af%1D29%1D%0C*%05j%11%0D%1F%06&xs%22%15%1E%06%22%1E:%03%14%00%03%1D%036#-u%1E%07l%02'%10:%0Am%11(t3%1C#%1F%1D,9%01%0Fc%13-:%02#%3Cy;y%0C2!%19s3%0Cm%01%1B9%1E!k%1A$;%0Dy%1C?//%00&k%03rr%11x%12%06.*%00%22?%22%05%14%1A%3C%12%03%7C%04%05%22%0A%7D%0F)8$%0E%11/-(/j%18%05%0C%1F(.e%0D-2+%0F%20$;%1C%0Bh%01%3E%0A(%7F%16%221%18%1885f!%11&%1A+4#v-%1Fi:z%05%1D!h3%087%1Dw8%18*%0F:%1A4%17%22%0F%05%1Dh'3.*(%1E%22?(%00%25ki9t-%7Ca?%7D%20;%09%18b1'%02x%13d%7D%19%1C%08)%3C%130%20:8:%11q%1D;25%08%0B/%1F%151%1C%038%14%01%079%259/%60%04?3#%18%20hz%12%00%1B%0F%07?%15.+.4%1Eu%3E%0F%16$%03#.%22l%05:%09z;)%3E.%16%60*:%0A%1Bq%7B!%1D4:.%05z%15%06xl;?%08%16%1B%25%03%02%16%60%021~%1D%3C%3C%05%12*%0Ch%03%02p%0Avr%141;%01%1B%1F%25%1A%18%60'%03!%0Ctx%09%1C%19%0F%16%1F%0At!?%19%036h%01y7r4;$xxx-01,x%11%06+%05%1E%18,%7F%0B!%0F%14!%05%08:;7%1A6t%1E%19%0A%1C%1E%0D?%3C%20%60w%1D%12%194%04%7F-%08-9r*%3E=%02t%1D&%0F9$%22y%1F%11%04%1C%09=%07r%12'sf,?%1C%1E%06%1A%08%165%60%18:%0B%16%1D%11%142&%60%04-&%1Dz(%17,%07;,%0D%1B%7D'x%0C6%1D%7B%1B&%3E%3Ef3%0E%20+l%0A%010193%05ys-=a%11%0A6(%06%1F%1D%184%1E%7B%16??8%18%14i5/%198%17=?x0z%19%18!%3Cv371%25%03%25%1D~%09h%02%1B%7F4%1B)1%11%22(%1Ab%097?%7F+%60~s*%25%03%01%04+%22%167%06%02$%12%7Cl%22%197%20?#%20%008x)h%06%19+:%1Ba29%19;#17%25q%13wi8:%07%60%08h%08!s%19,a4*j%1A%22%1B%03%1Fu%22%20%1B#%09%15%1F72#%1F5/%1Br?'%25,en*87%0F%22%3E2%05%20f%03m4f'#8.%0A%1C%20%25%22%1C!y%07%7B%0A*c*7%19%178b%0E9%02%0B%0D%18%13%0E.%1D%60$z+%7C%20%09%1E%11%252(hcz8%7C8h%3E%12%023*(gf%221%0Dj5&l/%20-3y3%12%7C%3C5z%0E%19%07%1A%07%054?/%00f%1Cp%07%18-%3Ey4%3C7he%20%00%0D!*%11z(*%0D%1A%16%0Au#%02%1A%05%08t,%1C%0E%60%22&%7C&,)%00%0B)%1F66#.!%19%08%1D%08;?%20a%07%22)%13%7F+%1E1/%25-!:%06%0E%0C%1B%18%1C%3C&%0F%042%11%0F%03%20-%18%1D(%19%0C%0727%08q%7C%17%15*%1Et%7C%20%18%1320:%06%1F'%0A2%0A9%18%17%0E(%0E%0B%14%12$%15y=%1D%14%0A%02%08%198%1D%19xy%0F%14%1F%7F%00%01%0C)%16%0C%02=%1B%201%19%22%19%17%09%11%0C)%02%1F%3C%11?%09,%0Di%17%0Dy%0A+%0D'%0A%08%7D/%18%17%03%14&~%1688)%1D6%1D$$%20%02%14%178%01.%0Cwn*z6'%074%0A%25%09%0D%7F%11'%7Fq%0A%18%00%1A~%152%17%0F$%05%12%1F((%16%1D%0B%0A%08%3C'%0Aq%0F'%18:;%14%0D-%01'%02u%09%08%3E%17s%0C%1B%07%18$%0A%02%7B%3Ej%1D%04/#%1F%1E3%60%02%11e#i%25%11%1E;%3C%20%7Fv%7C%19?%3E%7B%00'%0F%1A%7B%1A%06%7F%1Bj%60%22%02,w=#%0D1%0A9m%129%0A*%082%03$%13%1A%09%3E127.%0F%1Ca%1D%04%18w*%3E%22%078%0C(%1D,&(%18.%09%0A+!)%1D%1A%139%01%0Crbztx?/6#*%00%20l%01%030%0E%0B%0F%7B)y%12%0B%0A%1C~%17%25$tb(/~(o%3E%60;%1B+%1B4%7Ft%0A/%11%17%0A%14%0F4%00d%0Fp%0E?%1C%18%1D'x%3E!%1D'%20'%09%1Ab#%00%00)%15%25%09%17%25%20%0D%3E%0E&%03%0F%1F%05%0C2%0F%1F%1F%13%1Ej%0F%07%18%1C,vy=%1C%7D%3C%10%0E?%1D%09%0D+%226%1A%7B%083%0Ax3%1F%09%10%01(.'%20%07%3C%1F%1E%60%03%02%0E%25%1C7%0Du%0D%02k%11%03%10%02&%1B%19%0E&%01&%1Dg'vxy!7%0E0%0A'%3E2#6%03%1C5%1A'%20%20%17%13%00z%00%0C9%107%0D6%1B9%14;%0E%08%04%07%175%0F2%0C%015%041%08%0Aci?%04.%05!%13'%0A+#;i%15%1B%06%088%0Cgx0%03%17%14%25%08u%04=%1Bd%07u%07#7%05#*%0F+0%20#%04%01%0F%1D%15%00%0F,%25%177%0A,%0F%01%1B;%01'%7B/%18?%02&%08!%13?%07.%06&1%09%18%14%0A$4%1E#3#%1F%11%1E,%05,%251%08%0C2%25%1E%20%02%0D&%1B%0D%0B62%14%09%0C%1E%13%08w%099%1A%02%08+x%14%1A1,%05%0F%0C%1C%1B%0F2%03%09%20%1B%0E%0C%0C%7Bi%1A%0C%0B%0F%04%18%20%0C1%03%1Ehey&%0E%22%3E4%0F#'$i%17%0A%00%0Dz%3E%116sg%01+2%225%22%20%3Ep%0C3*%3E)%3C.a%1B!0%3E?2g%1A15kx?&y%14$%22?!+%7C~usza%7C%02%0D%0F#%13%11#%1B%02/.8!0%1A%0D%00%11%1E%05%0C%0C;%11%1E&%096%08%18%0E%00)%0F%0F'%08q%09%1E%0A%11%08%16%3C%0A%1C%12x%05%1A)%1Db%02%04'y%10%11x%00%1A9%1D!%0A%17,%0F%14%17%192%0A%0A%20%11%05%14%02%0F%15%04,%03%0D'%10&,%06%0D%07%18%05%1A%03%0C%0F%137%098%02y%08%17%12%0E%02%0F%10%20%1F%1B%08$*$%1E%20/%0C6f%11%00%0Ay?%02%04%02%00%0C5*%1A+%1E)78%07%10%3C%09%00%01%0A%11%12)%60%1D%0A%00&)%1D%1F%22%02%09e2%09&1*+2%0A%02%069#2%1F%08%0B%22=%18%11:&&%14o4&t;%172%1181%0A%0F%20%20~1y(%0Bd'%20y%07k4&1%09%17%0F%06:%15%13#%1D1%20%25'!7%01%1B%19y%1F%18(%25%05:%19%16i%22%1B:%1A%3Ed%20;%60%1B%01*%22%08?%1A%035*%25$%7C%18%3C)'%7Dy%10d,%07$%07=%18%1C%12.4.%11%0A0%12%17%3Ea%1D%19&%00%17b?r;93%009q%1B8%03%7D/%09,&%1F9r1=v%1C%1E%0A%09:%25%082s%17%3E%14%1A%11%0A;%00%7B-2%02q%0A%0D:)%05%20%1F%1D%0B=%05%0A:9%1B%11%08%14%7B$%0C%13%1Dy%7F%16*;%1B%222%1D%186&%02%00%1C%1D%11/%05%02%05%1A4=%12%02%0F%0C?%1A5&,%1Db%3E%02%02%00%1B%20%07+9#%20?%06%00%22%1C%17%03%13%15:%18m((%15%02%04%15%07/%0A%08!%128-(%0E%0F%0F(%1D8%0D%19a%02%1F%03%11%1B#$%13x%7D%06.8%11*z+#7%083(+;%02%110%258%15%20%19%00)%16(g(%02%03%19%1D:*%20;,:%22%11+%25*%1B%08%19%00%18%17n8%1E3r*%0Fc%120%3E%3E;%04(w%05%195%16$#2*%12%11%3C/%02%7C%60f%02%10=%1A-%1Dr,%7B'2%01%021;%00%13%03%05.8%1E%08%11%08v%20%06%207%1A0%7D%01%0B)%0D+%18%0F%1D%60%0A%09%11#!c%049x%1E%189%0A%0F%19*+$$58%0A##%18%10:%0B%0E!%13%04%02%0F%0B=%20%1B*%0B:=%7B%00&%25*%13%7Fj%25%0D%14%01%0A%06;%0C0%18y%133%7C%18%12%3C&%0C$%17%3E!v~:n%7D/%09%7C'.%11%09%0E%18%1C%18d%03q%7B#%1C%20%09(%0A#7(%03%08%0C$,6%0E%08%1F%06%10%04/%15x%1E%12%12#rx%17!7%1Br%0C%0C#%18%02%00%09%3E%00%19*%12s%17-%03x%0D%00=8*9%038##%11%20%22.%7Dn6()x,?3%01%00%0A%1Ci;*%22%1E%22a%1A%01%0A%0E8%1C3!s%0A%0Ba*xr%0C'%1Bb=%0E%09yje%189%02%06i%12%22%10%01);%13%096,60%02y&%3E%0A%1B8%22%04%0Ay7%19-(%3E%7F.hs%02%1B%1E%143%01q%3E%09%3E;,%00%0D#%00%228w%01z)9s%0F$z%182x%189%07%08%17-%17r%7Di%7D)x%02%08t6r%06%0E%0F%20%14#%0D%7F90%02%7B%04%20%0Dh%18%08%178%0C%1F%7B.%00%226%15%1D?%0Ay%3C:(*r9%1C-%13%09#%197%1Ba%20l%0F%3E%17%18%12%03%18%1E%108%09%18%00!3%04%048%7B;%20%122%12%3Cw%60%1C%12l3)4dz%0A%3E%7F%18#%004y-(%14%01-%0E&%1B%00%0E*:%02,(%0A%25%07#j;$(%22'%0C8%09x%0F%1Bk!%1E0%0E:%154%01%181%05nc%1D%0Bs%16%20%15%05y%1B7t%18sl%3C%0F6%13%0472&#*y%0A%7F%1Dh%12%22%19%19%0D2d%20%00!%7Ca%3C%08l%1B%1F6%1B8%0C%00x%157%0D0%60?:%1Cy&%0A%14%0E%12~*8%0B%03%0Ax/%19*5a%13$#%7F%20c%03%22y;%09%00%07%0E2+7%11%0A%02?7%11%16%1B9%05%0Bm!;%19%09+3#%081&9%11=3%04%60%0Ar%04%08%0E%7F%0D%0A!~2%02%3E%11%11%7C68/%203%0E%05%3E%04%134%08$%60$%081.&2%0B%1E9%0C%03%01%09i%7B1%08%0D&k1%09r%09&)%19%0E%0A%08%1Ao%16#j%0C%0Ci%02&%15%20-,%11%19%04:x#%04%252&%7Fnb.%12%25%3C%1D%00%7Bu%02?3%1A:%20%18%14k:?)(y%1A%3E%60%152/%1Ef%110%25#%16%60%11w%076!%02%22%032%0D%0A1/%0C*%04#%221p%12%7D(%19%0E%08(%0F,%19%093&)%3C=s%05%1A/5!%0A%12')%11%11*%02zy%1E%16.#%02w%00%00.(8%1A%0E%11%1B6%1D%04%3E%1B$%0B?zi%07%1A%25%05=%11%03$):%0F%0B%11%20l%1A%7B;b;s'+(%3C%13%0D,%0F%0C'z)y)l(9%0A%02%0C6%13%192')%1F%11$ly;%01%09$.8%0F2%3C%12%07%1B4#%04f%16%1A%0Fm%00%7D%15-wi%3E%07%1B%0F&6a%08)2%01!2#j%1C%7B%15%3C%60%0E%0E%06%3C%20%02%13%0F%027%04/#~&%183%08&-%1Ft1,yy%20%102&%05%1Ae%18%1E%190-;%12%03yl;9:%25%7D%20%22%0F*%12%0A%09%0A%7F%18%1A%08%161%17%1D9y&f%2011'3z%00%08%1D%09%00%1C%7Dn1/x97%60&%7F%00%1B?r8r&%0C%0D=%08,%04%02-!4%0C%08%18)%1F&%12%11%05%1B1?%0Dv%09%25%10%12%1C%032%0C%3E%19,$%1A-%10*%11%17%02%0F%1Ah:+%3C%03%08%06%1E%1B%12%0F%1D%05%0D1%0E%17%10?%0E%0C%0C%1Ft%14%0A%04/%01%13%11%02+s%18)5%03%00%0A%1B%1C%19%3C%00-%0A#c$%05,%06%3E%02%09w%0A'%11%19%07%14%04!3%12%7D%05%3C%0A%08%05%0A*%098%03%19%0C%10%04)%0A&%05%039%1Fi%13?(%7F+%18!%09-%1A%03%1F%09%1B%12%0F)!%60%7F%03%08%0F%0A%16(%05%0A/4i%096%08,17%05%0829%11#%1C%04,%0A2%1C%1E%04%3C%0C%10e%09%04%0E%05%12%11%04u%226jf$%0C%1E%03k%18%20v%01#!d%08%04%1D)%097%1A%02#%7Ba%1E%00%08$%16*%01,#%0E+i)%07q(%01%20%19%1A&%7F%03%0A%17%12%12%0A%1Cm3%0F&%03%0F%1E?%1B6%03%0C.%13rq%7D%0A%3E%03%3C%09%09%09%1A%15%09%20%1B=%097%7F+%1E'%14%12$%0B%3E%0D!%60%0D%07%22z%10%01%05%08%04z%15%12%7D%05%0C%09i%18%0E%12%0A%0F%1B%1C%0D%03%3E%0A%1A%138%0A%04%0A%0C1(0'~0%16%0C&%04%17%01(%60-%08$%1E%15,%09$%7D%08%22%11%0D%1A%0834%0A*$z%1B%01%1E%03%014%0A%1E%0E%0B;%14%1A%09%0F%12%0Av%1F%25%0D%00;%0F%14%16z%0C%18-2(%020%1F~5%20%0E,%0D%25+d%3E%15s#%1F%00,%0C%0A%7F%10h%020':%1B!%13%0Cz%07%1D%04(%09%05%1E6%1B%7Bx;%05%1B4%09%02%0Cx%0C)%1B1)%1F%1B%3C%0F%0F%18%0D%14%22%01l%02%044%1D%08,*%1F%3C%15%19p)&%13%1F%19%048$%13!1%06%20%7B%15)-j%07%142%12%22%0D%18$k3%22%10~w%0D%17'/%02;%0B%60$t%06%3E%091%04%0D%19%192%14%003%19#7?=%13%1C%03+%16%04%0A%08%16#)%04%04%0A%0F$bg%069'=9*/g%1D1%25%25*gyjfrvg%07%15%14&%0B%0A&%03%19*6#$+%11%08%18%0A%25%1D%17%09#%0A%00+%11#&%04!%1B9%0A3%22%0F%1E?%0A0%60/%1F%20%60%00%7C$%13%04%13%10s6%18%1B%02%03&%0F%15%11%0E%14%3E%0D%18%1D%02&%0A%0A%14%14%03%00%0Az6%3E%0A%00%19%0B%14%1D,%05,9m%12&%03$%7F%10?-%04%18%093(3%09;%20m%04'02%0Ah3%0Fp#~%3E%16$%00%25%0B%3C7%0At(%07m3%22%00r%0F%1A5%0A%07%02%0F*%20%09.%0A%08m)%0A%0B$%0F%14$%7C%00%0A%05(%01-,:%09%1879%13%1B!m%11%08&%0A-%18%1A%11%14%3C%0F%1B%1B.%10%0A+%0E%13%01y%0E%03%0D%11%13*%11-2%11%09%203)%10))5%20e(%20%254%3C%07%0B%20%22%06%0E%0F;?%05%25z%3C%1A%01%1C%00%25$%0F#&1%19&5%0A88)%0A13%1D-'*%0Ea%3C%052%1D1#%02%00%1F%0D*=%08/%7F%0F2%22%08%0C=%0D%11%1E$%0E%19%1F%0Ac%7B%05!%14%1A:%01r%1B%0F!d=%04r)1%1B%0A%02%05w1i!%04%0D)%1D;%11.%7F%0C%164%04(%129%0B%143&%02%0F%17%19$%15!%09%16%22%7F%0C)-%00%14%0A*%0D*%09%01%00%06;*%157%22%09%01%17i'%11%08%25%14%1C;%0A%0E2~%137%01%17%01v-%00;9'=?*3.,7,%1D~%04%0F~!%11%0A%0D%22%0B%10#%07%13%1F4%03!;%0D%25~%60%2224;%03%10#?%1B%19%0Cl%25%1F&%0A%04?%25%066$94%06%7Bw!9%163$%16&~i%12%124&-%18%1B1/%03)%1A(%02-%0E%1A0%02%1C0%0C%1F%1E%3C,$%01%16%03%02%02(%06%09%15%1E%0A%11/%7D%0E%00%13(r%1C%1E%229%10%0F%0F%185%19%0E:$%08e%3E$:%3C%1A8%7B)%0F$a%11%0C.%0A%03)?%0A%058%08%1Ad%0A&%0D-1%11%04&%1A%0F%1C%09%00%00%08=%161%0A%03%12%0F.7%1E%16%0F%20%007.%00%0F%7Ci%01%0A%06;%0F:%14%3C%14xz%3Cgy$x%22%1Ac~)%25%7Cray%13%7C%7C%1Ba%1A%00%069%1B%11%0F%0E%22%0A%0C%18,.#%06%17%20%0C(#%09%15%1F%0C%20%02%25%3E%1E%09*3%0B%00*%1D#%1Ac%11%00*&-%25#%20%7Cy%1E%7B%09%20f%14%07$%20%11%08%25%0E%01=7%0A.%00%1E%0B)%7F%0D&)%17%01%02-%0F%3E%0E%3C%12%18%0F%07%1F%11%13-.%20%1B::$%07&%3E1.+%08%1F%1D;%1B%03%02#02%7F&%00%19l%0A%1D+%1C*%00%1E8s)%17=%20%09u%7F%0A-??v!81%19%7D%15!%01ad%1A%0C,%1Dm%22&4%0C%7B;:%3E$%7F%06253%04!;%3C%3C%7D/!+.ex-%3C%0An%00,&%22%1C/8%601%09(%3E%1B%1Bu%08%06r%11%0D%00%18%0C%14%18!)%09%7D%03%01)%0B%02%7B.%01#%12%0E%07%18%07*%04%1D:%0E$)p$%7C%152?1y%0D2%15%12%0Ex%0B2%05%11%1B%03%0F%17%1F(u%02%04%18*%0Aq*;of)5%3E;nd%1B4#y%11!%11#%0E9%1C%20-%1B(%18%3Ci~%11=%07%08=--,%7Do%7D=j,%06%181%09%09%0D7%0A%11;%07r:%1B%1D%13%0A-%0C0%18%02%25%7D#2%09%1F1y%06o%08#t'w6%02*%028/%165%1E%15;%14%1F%17%22%0E%0Aw5%60%1Et!%09,33%09%25e=e%18%16%60%1B%0F&%12%03-6%1C%1414%60%07%0F8%19%0B%0E%16%0A4%0Du%0D6%0A%06%1B%20%01+%1B%1B%1D0%19%0F%10%03$%16%1C%194%09)1%04%0B%1E6%0D1%1D%0B%03e3%17%13;%0Ba%20%10%0A!0g%07&~w%11%1F%1E9%7C#-%07.%15%1D%167e%1B%07s%17%3E%1E%1F%25%18%046%06%22$%0D%1B5%02%1Ft=/:%1D%049,%3E%14a9s%1A%0D%1C%06%09%22%06&%16%011$#%7C5%09%131%3E%09%1E%02?%0B'%16*$f%1B'%18-),&%0D%183;%06%12~,2#%1C5)%187%0A3%0Bze%16a%05/%08%02=?%25(%11%042%052%17r%1E;)%1D$%12%7C.%02%058%0D%3E2%14(p%11%19%1D%03%7B+%13z%1B%05%7F;%0F,%17'~%132&k%08?p%1E!i4%7D%0E%05%14%60e%7Bu%60!l%03f%15%11/0%15f%253%1E%603rt%05e%13%04%22-%00v.%11%092%7F%17%18%16%11%0F%22%0F87%1E%001#%0E7%7F5%3E%19%08f?q%04=.%1Fy5%05;+%13%1B%04%01%18t%00%02u/*%01%18%19+;%7C0i!#%3Ez#$%7F)%3E'.;%09%20%07%02/%05%206%05%02i%05s%0F%1D%001h96%08/#%22.7%0A%03*%17%1E&%3C:%16%05%1Aw.y%175~;%1D=og)w%227%15$?%07%04y%0F1%06%0F%13+%0C8(q%12&%0F53%0D%1E:%0C29%10(%1E%01a%1Fp%20~%17%2522r%1A*%07%60;?v:%11$#2(%035%0F%16/%1Fo5%1Al%1Cy7'#.%02$3#%03%22%13w%019z+%7Fz%015%04#%7F%7Cr%17%7F%05%02%00m%1C1)%08%1B.*%19%08(%0F+%11%1B&%07!2%3C,%15%11%045%09-&%7D?%10%16(%09%0A!%1A9%1D--c)%00%7B0*$%08%15%02#s/%1E%1D%0C3%0A%03id#%04%09z3e1&%00%0Fi%1D%12%07%20z!%1C%7F%0C#867%07&/v%11g%1Br,(o%06%60%20$#3%19%01&%0E)m%11%7Bp%20%0Ch%11%1F(%0A%02%3C1%0A%12,%0F%183ru%037%09?%7B%04%1A%07%0B%20%0F%1B%0A)%0E)%00%03%08%0F%00%18xq-)%3E%20#2%3C%25%11&z%10%1C?%12%01%02%03=xtcf.%0Az%1B%3C,%12%19%257%11%126s;1%16)u%06%01%00%0A%02+%7F%3C%1A%05%0D%02%0F%1F=?%0E%00%7F%0F%60%14%0A%02%19%0D%18%03%22%16s%00#%14%09%10%0D)%1A7%0A%13%0C%0F%20%11%02$%7D%06%10%1B%11%0D%0F%09%12'%06q(65:&(%0C%01%60%16%020%3C~%10h,(%1B)%03%7D%1C%13%00%0D%14%15$%19:%0D%18%19%20%16r%0A3%16%22q%1F!%3E%19%1A%02%3C%1D2%1B%1D%0F%1Az.6#p%12%19%129%11%18%60%0F%15?%7C%04y%19%18%169%02%02%7Ba=%0E8%02c0%11%11&,%002%112%07-&%3E%0A,%0C%19%0A3%60%09%10%08%0C%18%191x!%09%0E%18.4%0Ev%08%19$%20&'4%01=%04#%3Ek%1A%20%04-%7C%08%1B%60%0D,z%1B9!%00%0C%07%1B%15%0E%00%00%0C%03%20%0C;%22%1603;%0B,4%11%02%00(%1E%7C%09'z%15%19%1Dh%00:%18%7B&)%1C%22%16&%05%12f%1C.%0892%118+%12%00;%14%0A%22%0A%031=%0Fq%22%7F)?%18%0C#).9%1A%03%18%1Ca%1F$#%08?%10%05%0Ay%029%17#%00%03%18%0Ao%1A%7D%18%12%04%08%11#%07%1875%05%07%08#%0Fh%12,%0D%0E%0D7%11%08%16(%25%181%18;%04%0F%173%0A2%7C%3E2:8%0A%7F%172%1B(*%09%05.?%0E%0E%01#%1B%1F%1B%0C%0E%0A%11%1E%04%12(-l2%22.%09%16%13%25*s%04%7B#7%0D%03%01#%3C1sr%20y%20c%7D'%00!%17hxt%206%03(%0A1%09%1Bt3%0D%22!/1%01;)%13%0Dk%1D1%103%06%10#,%02(cif%07*%08%17,%25)%22%7B)n%02%12)%0C%0B%136%7D%04'%06%1A%19%09'%1B%7D%15hr$%02%0C%12)%11%04y/%18%01,%16%0A%16%1A;%0C%20%02%04%0C%60%7C)%139:%1F%20%02%0A&)&%00%17,%3E%1F?%13q%1B%01:)%0F%161%0A%16%1D*6%3C%25%187%0A%3Cyb1%0Fysg&%062*3g%7Bka%7Csg%07%15%14%0C%0B%0A&%03%19*6#$+%11%0E.%03=%181%0A7%0A%25%3E%043%00%0F%18%14%11&%00%00%1F%18$%1A%031%09%10%602,#%0F%1C%01%09*?)%1B%02%12%00%12%1F%1C%06,%00.%1C%18%12%11%19,%04.7%7B%08%0A/!%14#%08%0A)%16%192%10?%0D%18%11%11&1%0B%18%13%06%10%11%17%1B7%0A2%22%03r%09?/%0F&%20g)2%0C$)%7Bsw=%0F;%0A12y%17%1B%1C%0Dj.:r7%1Av%3E'%13d%60%10%1A)%1B%15%18t%19%065f%60q%1C%7B%139-%203!?%15;%20%18%25%0E%07%19%03#%0D=%17~s%12&%1F%08%09,%01%3E:%08%09%07=#%03)%1D%19%60w%3C%3E#%07%1E~%17;%1Cp~%7B%00%07$%00%01%3C-%0A,%03%229%18%13y%1B%0A%0A,%18!8%08%1E%18%00*%00%1B%1D.%11%00u%0A-%3E%11%04%12s%17%18%22%0A%05%06%0F%1F?%1A(&%1F%18%1A'1%029%18%13%0C%00%25%1E#%07%7D6%0A%1815%7D%12%7F%02%11%1A%05'%0A=%13%12%7F*x%03%08%08%3C%00x%0Al%7D%07t9%1Em%19%07v.%16l%7D%01%15%1Az%18%11%19*%02;1%17%1C6$;%3E%11%7D.%19%17%1D8%09(8~%15%60%06%0B%0A%0F%1D%09%0A%0C%3C%0Fh%00%05%0A%1D%1A%12%01%0A%0E%0E%0F%18%13%13,%0A%01)a%1B%0B%07%05)4%02%00%00$*h%0A%03%25%1C%18%13%0D%20%0E*%1F2%01%20r*%11'$-%7C%060%01%1F*%13%04%0A%14(%1B%7C%0A%1B%1Dr,%1E?%1D*%0A%058//=%04p%1D/,%119%09&%04%16%1D%7D)%0A%254%09#%04%02%1Dk%02,6%0A%027$%7B%193?%18%12%1D%04,%1B%128%00%10#/7%07f%0F'?%3E%13(%119%18m%60,%00%0A%1B%0A%01%091%04%0Bo%12%03r%13%1Fn1x%09%07%7Fm%1E%7D%04%05%14n4%7B%20-%7D*%25%25%00%19%20%14$%1Et'%22:%3E%25y%3Cz%3E%19%1E(8%1B%0A!%1E8%3E%1B%12%20%1E0%3C8*:%13%20?%18o%3C82%3C%7D%1E%60%7B%08%0D%7D84%0E3%0A%06%11%15%1E%20%11%1826).$%25%18%1F%3C4r%04%08'-%1B-!)7*%19%07%00%1D%15.+%08%0C%0C%13%00%13%00%02%0B=%049%3E%1E!8%05%0B:w#%14%1Bp%7C%01%15a%071%0A%05%1D%12%19&%206%0E&%19%08%0A(1%25#/%00%0D%13?%09/37%13%13~q%1C%01%17%12!&%07%06%0Cb3p%1F=%10%1D%7F%00%06/%08%11%01q%1A%191%1C%1C5%1C~%11%03/%17z%7D%0Ci)py%7C%01%15%09#2%3E%10%1E(%08x%0614%1F%0B%18%1F%10%128$%0Dzi%04%01%1B%20~%10%06%06%12%03%1A%0D%1D%00%061%0Da%0327%07:%0E%08%124r)%1Ee%1B*%0E%0Cm%07,0z%08:%06%01%16'%19%0Fe%1E%17%11%18+b%7C%06%09%7Fk%20*%02%0F%1D%17%15%7B;%1C%0F?%3C&%02%03%0B:(%3C/%00*%03c%25%13/'%16%20%0D%22/%1D%10cz62$%16%153%05x%14%1F%05%1A9%07%0B:%043%00''%08%19y-%04%04h%061t%258%0Bh%1C%04%0D%00a%002l%03vt'%0A.%08%1F%15%11y%15:%1B%3E:8%08:%3E%157%7F%0C%1A&%1B%04%09%10&~%0B%3E?%13z%20%0D4%0Fp%1A%0D%60%12%180%19%03-3!%0D2~04%25%08#%0F.(%0A%20%22%0B%20%04%0D%0C%7B9#%1C%05%11%074:%13%229%7F$2%7B%07%0D%09%0C,%17%0A%04%18/j%15%602;%05;%17%07p%13%25.%22%00%12%1E%7F*%06%07v%00%0C,%15%7Bu/%1C%20b(%22%06%0B7%02zx%02%16%01%1C%00%192w2*%01%05%084-',%00%09%22%1A%22r;8!%60%18%05%11%0D7%0E%22(l%05%0C,%1E%08w=%01%18%12rt%22(%0D7%13rs4%60&zl-w%18%1F%0Aq%08#-2%12%20$%01,%25%00%04%02%1F%0B%02?%02?%08%12%60$61%02*%1C%1Cj%12%00)%0A%07#'%7C%00%06:%08%0E%07%08g)%0C%1B%0C%20%04y%22sv=%05*w%7D%09)%11(%18%60%084%1C#&%0E%09%00%04#%17%0E%7C*%1A%02#*%1A4',l%7C!(dy%0D%02%0C%1C%15%12%22%0E#8%12%02%09%0A%14%12%60%1B%121%0D*%202**z?'yv%0E%17j%09%0A-%09~%01d%09%09%7D%09%20%14x2%7Fv7%1C%1B%10&%3C)%0A2-%08%14m%13,j%0A%06%14='%04%0D%054593%18%1A%1E(%20+%13%7B09r*3;n%03%0A%19%1A%0F%0B%60!%16#;%3C;%1B/%1E8%08:%002%0477%14-%15%0D~#%09(,.%7C%01%08#%20%7F%0C%1E%15(/%7F%06%13)%099%20%0B%08%01%00%0Ds%14%3E%11%0F%1B%7D%18i%01%1A%12%1Dx%0C%12=%04%1F:%00'1%0B%1C6:e%0C%11%11%0Dr%1C=%18%7B%064%1A%12(s%3Cm%25z%11%09%19/7%03%06%11&%3E%04s%15:#n)%0E%06%0F#%18%03%06x%25%3E%147z,%04%0B%03%13%03%06%13%1F%0A%13%01%0E!%01%1Be%224%18%7B%1E%13~9,%3E(&%00j%20%1D!;%113'&l:%1C%0A.'m%25%06%0C%0A6%1C%1C%09%25f%7D/5%7Dx8%1A!:%0A4%0E%22#%16)9%0A6%1D%1F%02%0B%20%0Bo#3%12(x+=%04y%1E%08%3C%15%0Fu%1C%1Emd%1A%0C%20%05%1B%19%07%00%116%10%00%18%09%0A%1D!g*%22%25#%1E%7D%0E%002%00hg1s%25#%1E%04%1E%06r%0Do%1C2%119%168%7B%7B%10%7Cz%0E%17%1A%03%19%04i&%0A%13,!%1D'%09%22%0F%0F%3C(-9%00%0F%1D%178%0Ds%20%137%0A4%25%02%1F6%18%00z%0F.'%03px'*%1F%3Cy%3C%20%18%07%03,%02%20%1E%12%19%25%7C$#%15~%00%3C8%3C%18%09*%03#%1E7%0C%12%01%1F%14d%7F%10,%06/8%12%09%1A%1A%1D?,%02%0C%1F%16%09%1C&%25%1B%602%12%0B%7F%02%3E%7D%09)%0F'%1E;%1B%08(%0F%01?%0D91%0F0%15,%0Dx%0C%1B*%0F%16%03#%11%09%116%20%17j%14.%09s%07%09?%02.%199%18%02%0D(%02v%11%09*%13%22%1Fl%17%1C%07$%02,3%0A6%0A%18%1F!%02%08%1E%1Fn%1B%1C(%119%0C%1B$$%12-%3C4%08j%0E7%14#%086y9l9%0E%07%1C%02m2=%0E3%1418%0C(%1B%0B%0E%04%1C69$%03%16%7B%008%02%08%13%22*/(%1Fd%1By%11!*8%3C%12/%08o%19s%08%12x%1B%05s%15%0C6%10d-%04%25&0%03%09%09%01%07+%19%7Fx%01%253*%09%1B%02'%16dx%0B%25-%08%14'*%00+67%01%0B%0F%1D2?%08%04%0Cc:5x)%60z.%1E:%25%0Ee)%1D%08%04%20%7C%09d%18q%20%09%1D9%7B/%04%03%20%06z%0F3%01%0A%16%03%00%0C=43%1A%1B3%1A%18=!%0A%06%05.%12%09%193+1%1B%09&%19%1Bo%1A;(1%0C!%19%1C%18%7B%3E%03%03%18%17'%1F%1D%07%1Eu%7B%07%159?/%11%1E2%07%12%16,z:h2%09%02~:3%3C%0A%04$(%18?%03%22%16%1493(2e%1E&%07$%1C~3%0A%18x=%20=%1Ay%19sz%183!%0E;%0F,%17%1E%048%14%3E7xu%0C%0543%12s%01*#%15%0A%11%00%203%13;%1B(%05o%11%022%60%14*!%01%10%1A+4g%02%0E&4%1C%11%7D%0B%60%1D%08%12%0C%0C(%162'r%0A%0Fx%1F%2287%01+8h%0E%07)6j#s6%60'%08d%0E%08%05%025%03'6%7D%0An%17,8%06%09%10%03%0A(%02%07;?%1A.%117%1C%3C.;,%0D8=%22%0B%08:1h18%1D%1E%178%1F%0A%20%7Fo%1B%7D%03s%06%11%25%22-%3E9%18%60)*%3C%0B:3%02w&%00%00%12#*?8%00:;%0D#-ne1%0B%0D%05*%25%0C&3%1B0%18%18%20*%7B%13%1C/%0D%1E%19,%01%0A%08%19%1B%169%12%05%3C%0D%0C%1C%1A%202%09%1D%1C%22%209=%16%1D.*()%14%16#3%05/3%04%20s%1D%0C%3Eg%0Dq%0Dv%1C%19%7Cy'%0C%15%11%22%00%12%20m%3C,%19%1F%1F%18$%1A&%1A%17%15?/(%1A%0F6%17s%0D%12%1E3%1C%7C+x)1%11;%07$%0C.%07%02%06%0C%0C4'%7F)%0A%183:%0A%0B%06-%13%09-%00'%0C)&%04%03(%04%17$,%14%7B%1A)%03%19,%7F%0B1%128q%00$#1%08%02%3C%17o%03z%03%0F%02%00%17%20%00'/+%05z39%1Fk$%7F%0E:%3C18%06&%04%7C6%19%04&%3E%7C%0E%16%7C%1B*c-7%7C)z%02%11%17%08%10%606%0Cf%02(1=*%19$%14%05%0D%18%3C%7Bt?%16%03%11%02%04%0Dw0b'4%60%0A,)#%17)%04%1Ea=3%12%7C271#.$=?%20$.$-%05%226%0A%07%007%07$x%7B2%11%09p%0F!.%13%04s.%25=%1Ax%158=%1B%7Br%0Fxx*af5%7B%02%20%03%0A%14%02)%1628%02%05;0$%0E%06%0F%7D%085%1B%22%0A%1E8%22**%04%16-%011$:%7F4%188%0E%1B%3E+%03%0A%14&%3C#?%0A%18%0F%01%0D%11:+'4+;%18%08%22%031%25%3E'%09%0C1d%08s%098%0B%13%7D%0B)%0D%00%1Cs%07f%08)%12%22x:%0C,6(%00%0C%25#)1),%17*%1D%01-%11%011%01',%0A%03%0B%15;%1B%06$+%1A2%18%1A%0Flh%0E;%7C%17h=%09q%03:%1Ad%25%05%0D%0B%0B%13%7By%20)!%16%0A*%0E%07%11%17%016%0E%17%1A%14%60+%02%0A%14c%12%12%077%0A%1C%05.-%0D?%01y;%3Ey%03%1E%1E5%25%20%16987%19#%1B9$+./%0D%04%1D%0Df%01%1B%09,%03*~%15%1D%0F6?%01:%15'%12%25%1F,91p%0C%044%06%0Cu%0A%14%01f?%149z%14'%0A3)4%3C71(sc4%181%17%07;%1A%1Ax%19%1E!%147%01%00%188%09%3C%7F%09%7F/%154!%13%1B'8%3E#%22:%7B%0Ch%00*%05%17%3E%11?x$%0D4%3C%06#1%0C%169%0F-%06%0Da;~%1B(%02l%253*2%1A%16%07%03u%0E%0B:2,+$%0A.3%18%0B%03%0C+%03y%06!%00=1r.%03%1C%11%07%05w%7B%0B3%1Ez4%0D8%0E%1C%0F%118%09a%1E$%12$%7D%03%06%094%00%02%08%1E%07w%7C%1B%0C%11s%12%06%0A0%7B%0A%03.%1D%11%01%0A%3Cyb%098$5$%20y%04%3E#.b%0D8.ar:1p%0F.(:6%22gvrzncg%08%07%0A%0E%1A%0A)%11%1E%1Dd(%00%22=%18%1D,%17%1A%01%10%118%03%3E%0F%0D%04%0A%15,%08:%12%01%00%06%1F%1A%05%09%06%0A%1A%08%16?p,%0F%0B%11%0C8$%06*%11?%00%11%19%18%138)%0A%01;%13:9%0A%088%15%22%00%1F6%18%12%19%17#6nh#,%1E+%12%1A%1F((z%18%13%20%00%13)%1E%1D$%00%04%1F%00%11%04%20%1B%09%11%11%0A2%22%0F%18%1Ds%03s%0F%1D%1F%3C%00%06%05ki%02%16~%0F%1Bc%12%04%3C%1F%03=?3%1D%7F-%25%0E%00;)%1A%07/%04.%1B%3E%11.)%19%0B%18%19%0A%0B-%0D%1A%15%0D,%0A$%18%12%1D%04%05%09%0A%11%09;%02%0F%14'%0A%19/%0D)%00%19;$%07%0A%13%1A8%02#%15?%08.%18%0B%16%60,%00%05$%3E%15%1F%0A$~r%15r*x:m%1D,%09%12%0F%17%08%20*%00%3E%1A%19/%04s%0F%1B%02%03u%01%0F%20b3%052%0F%0C'y%08%03%3E23#%07%3C%0F8%3C%092(%7B6!.%17%1A?%0E(%09'%0A%092%3E%7F.f%1E!%16!u%7F?%0D%05%7F1),%12%19*%02%0D%17(?%060%1D%09)a%091%05%086g%09%00/%02+'%01%08%0A%141%1D%22%02yv5%1F%0E%05%0C%0Bk=(6%1C%1Dh%13*q%04%07%1Ab%08%11,~%18%1F-q,%04k%1B%0D8%3E%00#%25%0Fr.%1Ek%02%0E%09%60%14%16%01%0C%10%0A$4%04$%11#%1767%02$%1D?+%06%7D.%7B!%1C8%1B%0F1!%18%12z#%20w%18%03(%18$%0C%1A7%0F%03%0F$%0A11$*%02%3C%14%06%15%1C,%1D%08%0D'%12%0F%08a;q%1A%145b%3E5x;3',2%1Dv5?%60%16%3C%17n',$%1E%18m%1D#u;&%0C%20,%0C9%22.%17r(%1E)%12#%09%0B%3E%05k?%01$%3E%04.%18%1A*%08:4%1E*%191%1A%11a%1C%0F%3E%14%60%22%116%0Ex?a%01w*%027$rq%06%22,%1A'0%3E%02h%0A%0A28v%0F%0A99)%3C%1D3)w.,+1)-%12y%0B6)r)%1A/2%7C/y/(%0A%09$/%1C-%00%19&%027k%1D%1A$%01%7F1%00z8%7B%024%1Fy%0E%01%0F%3C%08%3Cus%1F%09%01%0A%09:z#%3C&v*7%10%1Bs%11%12%1E%1C%1B-;3w%00%00%0A%0C,%1B%12%15#)%0E%17:%11%02+%00$2%22#*'c/a%60.%06%25):%60%11%7C8)%7B,%06f%3E%18h#r%09=09.%0E,%01n?%0C%10&%0F%1A%1C,;%7C%17%12%7B%3C%06,,r%1D%0Fl#&%20%04$%13#%03%18%01-%0C%06%0F%3E%17%1A%19%229?%12%22%09%02%1Dr2%7F'!&?d%0A%13#+%1E7%1Du%11%0F%18%1A%11*%1Bz%10%11%04%02%3C%03.*%08%10%0A%0C%1E%14%0A%14%0D%1Bj%13%002%02x%18%11%0E;%12%00%3E*%7F;%05&%1E%15~%03%1E%7B.d%1E%10s#%3E%01%0Eu%0D=%14=%08&,%09.4,;%01z2%11%08%20%22%25%1A3%032%0A%0F8%20#0%12%0C0%3E%00%13#?2%1D.1%3C%0A*53t%07%0F%14%1B%60%05%7D%17%03%11%19,#%25;%11%0C%04;%01%1C%07%08%00%0C%1Di%02#&%1E%17:%16#%07%1E%08%0A%00!r$e%3E%3C%0E%05~(2%12%13%1B$%06%1B3%0A.%1E)8%12%0E%19;-%182%0D2%1F%3E%3E%04%7D%11%0D90%1A(-f#l%09%09%06%1D%14%0D8%1D%14f%22%1F4%3C9(%0Fi%15,%0A%12%03#),%08%01%0Ci%00%00%0F%09/%00%0A%09%13&%3E%3E%16%0A%03%059l%3C#%223%19%1E%1F%12%03%1F%09%18%03z%13%0A%19%18%11%1F&,z%18h%139,%20%1A1%01+%7D%1D=%1A8/%1C%1Ar$%200-:jd*%208%08%08&%0F(%079%3E%14%1A%0C2%0D%08%19y%05s(%12%1D2&%01%1F)9(%09%1A%7B4%01%0C6r%16?:%1D%04y%0F%0Di%13v%09%1F%0C!%028%09z,%1A%09%0Ez%20%014)pf%19%08%19%056y$%3C%1Ey%171%18%17%1F%0C;%1Feaa%07%18%06%1D3%22%1E%0B%02%2205,0%01%1B%1D%19%110-*%601%13%17%18%08t%60f.%0F7%0D%12%1D%10!$%20?$%0D%1C=%1A7%1E%0F/%1Ah6%13%22%0A%00%08%60!%16%05%00%096=%13%7D%01%1Ag%60%0D%09%09%1D%01%60%03%1A%0D%18%11%0A29%0Da%01%01j%05,%3C%1A%1E*2%14%3E3%25%15%1A*%10%12%7B6~%01%1C1-%08%1C%25%10%1B8py%7D%08'rs%1B-%60%22x7.%1A=%1Ef%12!:%16%05%3Cp%3C%0C%0C%18$.%12x:%11%03%0C%3Cw#&%04%08%3C%02%60$%08s!$%1E9s*%07%19a%1Dr%17%00%05%1E$%224)%17%0D!?v%11%3C%13c*u%7C%7Dof%3C1&%2083%0Al%0F%0F%1D4/q%1B%1B%60%1C%7B%14%0Cw%11a-#)%7F%09%7Bzj;-,b%7C%0D%1C%1F!a%25%0E%3C4#h%05y%7B$.6%08q%03%7B:8f%08%12+8#%7By?z#%18yp3e+(z'$*%60;!y%20e,%17f%00%067o%06~%13%25v%0A%0A%11,%1C%1C%09%09%60&*%20%0D%3C%05%121%05%1D)%25%11%09%25%15%60=%07'%19%08%3E$x%01~=%1A%60%15sy1%16%3E$%11%04,e3#%09*%1F*)8/%0Fk%08/%14=c%0D*%3E43=%0A).p1-%14%19xt8$%169,%25%1A%07%00)%0D-x-%16h%0A%04!#%083%01%00%0C%17)7x%02%077r%3C.%05%06%7B.&%22'%20e%14;%196%09)n%13%7F%11%3C%16%3Eh%7F%00,%09%1D3%09%08%1C%1F*%60:6;&2%1E%02%15%1A%22*!%0Fw%03%3E4c$(%1B9a%12/v~%1A:%22%0E%12%0A%17%0B2%0A%1B%09'%11%11%05&%0C%1F3%12%08%10%08%03r%18(#%0A7%18#%09%1B#v%11?%0C%25%224%13%14'-,$%129%1A%16%0A7#%1E%09%14%1F%0B/3%0C%09%25'2%02s%11%02%3E1%25%3C.%0C=%1B%11%0E%18%00%0Fa:%3E%10%06%0D%18%18&(se%13%60%0A*89%15%02z%1B%1Bx4=%18%00%1E%1E%1B2!y%0C%1B%16?/%101)%20%01%18%00%7B%05a%07.%033%1F%0D:%0C2%3C%08%1A%02%0E%00%7F%0C/%12$%03%22%0C%00d%0A1%19%1E%18i%1D%0C%02:;7:%08r%0F%1C%15%7D**%0C1=%127%22%140h)%10%7C%0C%1B%13%08%079#%1A%03%1Ev8%7Ca;!%08%0A?%3C''&%00%0C%01%12%19&%0E%1B%10;*.!6%1C#%0Dy%059%09%093%10%11%0B=%3E%20%17s%04!)!%17%03?%10%01%0E&%1F%1C)%03*6%7D%00%17%12%7C%0036%1F%1E,)%02%0F%09%1As%0F%7B!%10d%19;%18%04%11f%1B6%09~n3%18%1B%3E%25%12%19%60%09%7B&%18h,%17%0D?%10%60/8%1E%14%01(3,%7C%0B4%02y%103%1F%20%01%25%06x-/';%1B%1F%1A%14%12%22%08%20%1A%1F4%11%0D;%19.i%06%14%19v%18e%0A;%7B)3%1E%04%14%1C-l%25%19%0D&:4%25%1F%0C?78%02%7D,%1B%04%1C3s-;=%60b%20'%06,%1Fhx%1B%18$%60=%03%0C%0C(%18%14%18%0B1%0F%0F%7D%0F%15%03!(%0A%19(x%04,%07*5%086)#%00%19%20=%18%14%0E(&=%12%1C$9$%3E%0B%12%22l~%01%153%13v%1B68%1332%7F%05%08%3C%3E%121#%0Ae%11%22%00%04%11!%06%13%1C%09%0E%02%19%18%7D%19%10%14y%1828l7%3C%00%1C=*%7B%06%02%60%0F%1B%1B9/%1F%01l3,%18%0A%1C%0Bg&%0D%1B%04%0A#'&%0E&%3E%14=%0B%0D**c;%05%07%01%0B%1D;-%187,%06%7C5%1B&%12%22%09%12:z519v%0Dv(5%11%12,%0F=&:+%11%7D%08$&'%01%7C?%03%25t%11%3C%17922?%1724'j!%22%0F%159%17%1F(%1B%0A(%12%12%1Bo%253%00%0E%1A%18e'%00'+%3E$(%14)%047(%1D&#%7D8%1D%0A%22%7F#%18%08%1D3%20%1B%09%09$%0Fz%7Bi'%09%03:%1Ck%1A#/%01%05h%1C%0F%08%1B%09i?%1C%201%1F)&%18%03%20%18%18%01%7F*%0A%18%10b%0A%08(7%03%1D%3E%00%02%19.%17%3C'%228%1D8%0F%22%09*%0E;f(%19&%10%138%16%00-%3E%04%0A,%1F~.i%0A%0C%05%1D1%11%22%1B%00%20.%16&%15%06%06%18%1C%18s%08%01%1D%1E%02%1B.%1Ft%15%01%0A&%0B:%19=%07?%03.f%0E%0A%0E)%11%0732%0Cz/93%05)+%1E8%3Cw%0F%0F%08*?#%0F~%0B'%11v'$%08%14)%14%06%22%0Bi)%06y%0A%18)%07%11*v=f%02r%18%7F%092%18#%0A)%0Db%13u%0E%02=h%181%7F/29%1F2!%06r%3C%3C*%0A/%18d%3E%19%1De#%09&%03%07%7D%14%1E%0F%18y%1A%107%03s!%0F%3Ce%07%18%06)%0A%11%01%08!%1B6%1B%1E%19%0A)5%0A%7F%12%0A%03%13%12r8$%1F/%142%07%06%0A%13%012%1B;wi%13%0F%18%08~%1A'%1B3%22$%1A=%0A%00%0A%160%11%0A%3Cyb%0E8.-yb2;'*%20$ugxr%7F%7Bu%19%07%05&%04%188%11%08*91:9%00%0C!%18%60%08%06%096%1F%12%25%008;%1F8,%04%3C%0F,%25;%1B%0A$0%11%00%08%3C%0Dk%0A%0A%15,%0B%0318#,%0A%1A%113&%0C%17%10%11%01%10%09=i%11%02.%02%0F2#%0A%00%22w%1C%1C%04%00%09%7D%1B%11%3C%032%1B78%01u%09y%0B%13%0A%16#-1#%60%1Bxy#a%7F%09%19zaaz8%3C-%09%01%0A1,%0F:*%60%12%00%1E1%00/%07%7B%1F%1F%041%0C%7D%16jh%07%10%07%006%1535%7F%7Bj9%3Cj%7B-6!%7B%0C%1A%3Ci%1D-%113:%1Cay%03%1A9j%14(&%1B%1D2i%1E&%0A+0;2.%02%1C3%05%3C01(%162%7D%07%07467:%0D%0E%06%149%1C3%3E%0A%1A%22%06%10%18c-3%01%20%1C%3E88%0D(%0A%03j%11y1%11:%00%18&%00z%3E:2%7Fs%0E)%181!t'%3C%03%08,%16!%03%0F%11%0A*%7D%18%16%08,%00%0D%1B%3C%11%0F2%0F9.%3C%02%06)/?%16%13'')%1A;%3C'%7D%19%1Fc%0C)!e:'.%0F2%0Ca%01%0A%188%0F%09%15%01(%25*#%12%01;%25%03;%3E%020,%0C%0E1%19;%06'j%09%1Ay%0A%0F%14%11%0Eq%02%09a%11%05%08%0A%0Bk%25%1E%06%0A%03%16h%20%00%0E%7F%10!%1D%17y%0F%1E%061&%09%7C%1F%12%7B%02%19%25%15%11%02$%08%20%1Fg%25%00%08-%17'%0D%0B3;i%14&%03%04%7C2%22%04t2%040'*6%0A%3E%18%158t%1E%02%1C%1D%22-%1A%18h%0A:**%02!%02%09%03%1D%02%3E%14%00%05%1A?0%03%18)#%1D%18%12)%0A874#%3Cw&%7C#%06%1E%0E%7F%7B88%0A%12%07%0C0g$%00%0F~-8#%14-%3E08%18%05%13=%17%25%0Cj%06%09%182%0D-%1E%17%0F%1D%12%0A%08+%1Db:%0F3;%18*;%05&+%17%1F%12;%00/%1E1*%15%3E/%15%1B;%0Dz)%15%009%05%0C%1F3f%12%10$(%60%011%22%20/+h8s~=%0Dg.x%0D%195c-%0Cz%17%3E&%3E#%7C:;%14%12&%1F(%1Ddr%0D#*3%60%0E3,zn9%0A4~*%13h%12%09%1F;%01%009;%7F?%11%19%0A4$%7B,%7B%60%002%02%01%02,r%0Ez%09ex%11s%25/#~3%19z/%1D~v~'74%11'%18wn%03%1A%14%0D;*%07,%10%0A%0C%1E%16%0As%0E%17%1D%15%7C%15%12%0F%1Ba%0D%03%12%092%1B%0E%0F%0F~%10;%7B%04,%0F%182%04%1B/'(%04%082%069%3E%11%04%04%0940!%0A%00x,%1D#%1B%10%20'*%1C%3C&%0A%18%18%01%0A%04s#4%18%12%00%05%0C%08%03%08%0C%1A%0F%0F)%01%12%0F%0F%13%01,%00?%061%19%0E.%7C%0F6%02%1E#%22~%1A%19s+%06%05%3E%1B$%0E%13%0B(?%09%05%0Ev%0D2%09%07%03%0D%0E%15%1A%16%1A%7B%1B%01%0D%03%1C%00%18!%0E8%0Cz%20%13%01%07%0A%19m%03%0F5%04~r%12%3C%0A%18%14%143%06+3%04%1F%1319%01%1B%0A%11%0A%00%1E%7B3%1A*u%0D%09%18%09%0F%10%1B%0F(%13%12%0D,&%1A;%05%10%7D4%20%1C%3Cu%0A%0D%16%19s%12,%3E%10!!%20%1B!,%1E%0C%0E%12:0%1F%00ux$r%1D%0Eu%1F%1C%09%13s+%01%012h%18t%0672:%0D%0E%1E6%1B2%25*%0F%1D-%1D%12%09%18w%10%1D$8%1F%02%14%3C%0Av%1B%07()%06%0B8&(%03%02%22~4%01%19%1A'%20%1E%13%118%02%02%01%3Eb%0Fu%06%1Fl%13%7B%0E*z%15h%1B*s$%10%25%3Cw%00x%17=%05%10&%04%00i!%0E%01z/9%09%0A%3C%07%0A%02%06,,?%00%16*v%08v);%3C0%1D%07%083%09p%06~n%04/%11%7B9#:%05%0Cs7:#**%09%3E('y;%7C%3C8)%09y%0Av%1D%15x%16%0A%1Em5:yf%3C?%1B%0C&%07%1C);%20%0A%3C%3E2%20%7C%22%04%0F%0A92%15(%1D%1A%15%09u(%0C%1F#%18-*%1B/%071%20%06=%16c)%19=%7Cn28%0F8%090%18#%103%7F%0D%14%04y9%05(%25&3)8(%3E%0C2%00/4%03%1328wn%00%3Ejf%0F%08%15s7:(%14%17f8%19=1!$6)6+%13%60%20$%7C%11d%12&%04%1F)%17%19t)%25+%07?%0A?8%20%7D%032%11%25%3Ef%0D%0C,%16%18)%0E%22&%22%3E%11%0A%07'%05af%002%3Ex(290=/o3.2*%1D%14%0A%60;,%0A%0F%11%09t%1Cz%01%13%20%15%1Cc*e,%20f%01%1E'%00%0D%11#01%0D%20%0D%3Ck%1B%04%00%07%0F8%19%01%04%00%09%18%09.%0A'?%0Aa)%14$%7C%60%1C%09%18%20%3E%013=+:%3E;%16%0E%07%0A:%0C7%09&2%17,!93??,g%07%11%05&7%04(6r?%01%1F%3E%17'%7C=f%7C8x/%1Bc%25l*&i%1C%20j%0Dz%1B%20%0A%00%006%08#'%07%08;%1A%1F%1E%1B'#%16%1D.%15%7C%0251%035%1C%00%03%20%05ur(%13'yy%60%3E2%25:/;%22+1/%0D;4%20d%1A%07%0A?t%7B9/x+%1B%3C%3E,rw#%13%1Cj$;8%19%08)%01%09%1C%25'w%1B~;:,j%1Ev%0Dh%22%17*7,8%08$%01~2%14&;,%7D:f;*x%22m%08$4'x%038r%0D%7D%0D%182%1A%223%3C6%14%03,%25:%08%09%606#)j6&q%05%1C%034%1E-#(%12%1F*%0C~/%00'%1E7-%0B0:s%029%1E%20%1A80%18%0F%1B7%1Bu%1E7%17&%25%06&&=*%196%00:6a%11,%3C%0D%10%128%04x?n%13%09%098%1F;9%1A%079(%10%7B%22%02%02%0A7%12%0A%07%07%18%1B#?%18%7C7%20(?%14%13e%16%14s%1B%7F%00?%3C%0A%16%1E6%1A%0A%7C'%3C%02-2%18)3*?d%04%12%0A*%60%1E%3C+%0F9%1133%18%138:%17%0E%14%7F%0B0*#&,-m%13%7B%14%0C!.%15%12%11%1Ce.h%20w%1C%0723:%05%12%030&%7C%06x%25%08i%19%13%0A%0An%1B%7B%0E%60%208%14%19%00%06:%1Egxq%1F%0F/%02%7B%02%12/%1E%19,%0F%02-r;(;%0E%0A!&8%08%60+%0098%08%0E%7D.%02%0A%09,,%14%18%0C%142-%3C%01#%13-%00(%16=%17%1E%1C%12%16y,%22*nay&-8%0E%12%1A%12%3E%0B%3E%12%60%0C,'%13%7D/3~%0D%14'%18%08%20+%179%13ty%04%13%1B%20q#-%60%3C%03lx%07-;%7C%02%00'%0E%09%02%09%09%1E2%3E3)%18!%1F#%02%02%1D%00?(%3C%123%17%3E%13%7C3x%1Dr1%0F%03%0E%17%12)'&x%09%0D%04%0E*,%0Cm%00%0A%0F;=a6%7F%14%007?%00%1B1/%0D%08%13%25%05%0A-%14%25%3E.166%3C%06%02%1C%03(%0A%08%03%04%3Ea%1D%22#%1E%3E%03%1F%7B%06%25%19%14%1F9%18;%0488?-2%07%20%03%7Fl%1170%00%0E%08%0F%07%17d%7C$~4%0E%17%13%0F%7B%1C%14#;%08%18%1F%18%11%09-%3C%22%60)=4,!%3C%1B22%016%10;#y!%14%3C%16=/;%07%16%06%7B8y%0C#%11%1C%15#%0C;%08%18%03%7F%056%22!%0B%02%3E.=%0D6%09v%1B%06%06%13%1A=0(%06%15%19%08%1D%603'%02%00%0A%0A%1E%22~%3E%15%19%13(z6j%04%08%16~%07%3E%11%0A%0D3%04:'=93%1A%10%06%1E2&+%0C(%227%0F%1A%1Ca%04%13%11%17h%16&%07%7B%1B)*%11%20.%0B%18%7B%20%10%09!%1E5%04%18-%0F%11%02')%1D%08h8%12$%09%17%08e%098%0F:%1419%0C%0F%1F(7f%04%12%00!5z+:%03%1D%07;%25%1E%25%12%012%00%7D7-(,%0D9%17!%7D%3C$%0A%03%1D%13(%00%05;o';%02%1D%01%18%19%3C%25%12%0C!%0A&%10%0Fz%1E?%03&%19%04%1E%13%7D5/%17%3E%19z%0F,?09%0A%25%11#!a)%22:'%0C%08%3C%04%00c%178*%13%13%04)%1C*%16&9n%22%1F;#%0B+%04%0A%12%1C%03%1B%0A%0Axz:0%11%0E%0A*%0Fk2%0A%04,?k#?%08%09%1Bi=$9%02x+%1Ex%04#%19l!%07%14%1C4-?%7C%13%7B%18-%17%0A$%12%0F.7*s%7B%20=43%0A%0A%18%102%08%10%20%01%1F%05%19q%22%0C%00%06f9/%1E%3E%07yt3%7Fj%078%08%22%05%004%09%20%08%7F3%25%1F%22,-%16b%19p!9%1D%1A%04%00%0D%1D%1D8,%02%3C?2%1B3%25%12+%1F%07z%03!%25%15%19-%00*&%1C(.%0B%25(%0A%16%08%179%1Di',*%0D%19i;%00%00%05%0F(%13%1A)%18%180%1B,$%19#%18%05%059/%1C71x)%1D8%3C%13,%12%22%142?%1A%02%0F%17%1D#%11%05%02%17*%13$/%03%14%10%03r5%01,%3E%13%0E&%03/%1A;%01%00%04%1A%18%14%1A%11%3E%7C5;%0A%09#%0354%1A6%1E%0A%11!%12%00%1A/%3Eb,%06%0F8)7%19r,9%14f%7B%25(%06%13%149q%3C6-%18%0F4%09%07%18:%09%19%0D)%0B7%0F%06%13%1Br%179%20--3%3C%030%06%174%11%036)x%1C%11-%008%0F%0Ci*5%12y%11%0A#%22.)n%12sux%1B17%12%02%0Ax%0E%60%0A%20%0C6%17%09%116%7D*%1C%11/.~%0C%10%04%0A%0B%09%1C%3E%19;%16%07-%0B%1B=9:%0F%1D%12%20%05%18%0F2%13%1A%08%18-%1C%00%08%04%1D%0F1&%13w~)%0A!%02/r%1C6%052'%0E%03%1B#%09%08%09'%1F%13%3E)%1277)%20%09%18%14%08=%1C;y*/%02%0D4&9m3s7~*%15%09~%14%3E%1D%08f%0A%00%0Dz%3E%116sg%1C,%3E%25(%25)y?%3E5k!?p?(&+u;%20-%20%253%7C%7Cr%7F%7Di%7C%02%0D%0F#%13%11#%1B%02/.8!0%1A%06%10%17%1E%00&%0Ch%119%00%1D9%1C%1E(%00%7C%0F%0A%01%03%04%09%01%18%02,6%0C%08%10%11x%00%07%1F%1C$%02%00%0C%07o7%0C9%0C%17%1B%1F%09%00%0E9%18%00%02%22%02%0Ak%19%0A%089%0C%20%19,%02%7F%0C7%1A%1A%04(%1F%18%1B%1A%03.%0F%00),%00%01%1C%08%15z.%08-%12%02%0A%03%1D%09%1A%14$&%0A=+%19,%00%19-%14%13%3E%10%0A%1C1'%0F%12%22z0#%0A%16%7B%3E%17%11%0A%14%0A+2%01%02%20%0F%1C%0B%11%09%18%0A%05i%05(%0A%7B%18%0A%14%20&%1D%0F%1E%20,%17,%0F!%1F%22x86%3E%11%04%00%0Ev:%11z%04%06%14%3E%11'%09%0A%0Cj%13%03;,%02%1C?%7D%00%19z%1D%0A,%22%09,%08:&w%04%0F%033,%00%11,%10%12&'%04%3E%1Ca%25%0B&%17%1E%0A%00%00%3C%0Fh%0A%19%25y?%20h%02/'%14%1F%14%0E%17/%1A%0C%06%1D,%01%22a(#*z+%14=%03%00%0D%08%1E%7B%02+%18z%3C%12%7C8%0A%08=%02:%05%1A%1A%0E%20%05%07%12%02%3E%11%03%139%7B%18%12&%25%1A%0F)%3E%1A%0E%0A%0Fk%16%7C&,%0A%20b'%00.%0B%0Ah!*z#a6%20%14$%0F%10;1%149%0B02y&%13#%10%17%0C%143%22%0E%20%0F%14%13'%1E2%7B(8%0F%18%16?-:%06%0Fg&%0C%7D;l7%00py%3Eh%15?y%0A%0D6%25%19%0A%0F%00o:%19%15*%01%3E%15%12%02%09%061%13?3%0E%17%1A%22%18+~+%13:%02%17%22~%0A%3C%0A%058%1D%15?(%0A('%207%0D8%3E/1'/%16%0E%1F-h;%13.,.%7B9%00%22'1!3/%224%12%13!%19%02%25%16?%13,%0A%7F%1C%09:r%3E%0B%0B'3&%0E%0F%18%60=%0E%0C'(#8%13%7F-?e%0A(%0D95%16#3%0E%0B*%3C%1E4'%1D5%3C'%0D%20%0D2%068,%0E%055%05*7%1E#0%60y)%7B%0C%14'%0A%18%3C~%1C%1C3%22%05%09/4'%07%0F%1D%15!$%208647%3C2%0A8%1Fd%3C0%09%1D%14)%11%04%0E%07%3E%19%02&%7Fv%11%06%184%0C=%1F%09$';%1A%03491)%3C;2%7C%22%06%06%13%11%25%12%7D%03%1Ef%1B%17%7D(%01f%0Aw?7%1A%17%3Ct%03!he%129%09%1E%1De-%09,%1B%17%20%02%00%7F%25%0A%04#(~)%18%03%03%0B;%04%11%01%0C%03$%05*%1F%7F%04%07!2%14#)%3Cz87%02.%18%05%14%12%0E%03!/%14?%0C0%18%07i3%08%17=7%18:%0C%0E%1A'1';%08%12!%14?,%19$z%13%1D%13+%20%1E21%08j%0E%0B+(=%0C%0A%17.8:%10%7F%05%12%16%12%25%189*%09~89$:42%11%06v%17%18%19%05%3E%16.%7D%03y%0A%04%18&%20.%02%1F-%138%0As-0!%07.;'%60d%01/,%18%3E%09%07%00~%1D%14%1A%60q%1F(*%09!%02%7D%3C6h~%08:%1F#%13%3C%0B%0A6%183%05&!%1F6%16%7Fv%01&%17;%1C%02%60%00%08'!%14%0Fvh%11y%02%0A(%15%069%16&$h?y)%0E%07%1Ab)%18/%22k%00%12.%1B%7C%3Eg%0F0%04zl9?%0E8y#?%3E8%7C%0F%11%01$8%1F%02l$%0C1%1C#%149%20%11%0A~%0D%01%00%00%7F%07a='%03%1C%08%08%20%0E%133)%3E%1D%22%10%00%18%0B%06%1D%20'%3C%0A7%06.%3C9?%14,p%1D%1F%1D%7B~%05%05%1F%3E9%1Dq%1B%22%0B%05%7C,,%05%0C4%1F%08%13%16-%02s'%1C%3E%03ax%14?%18%00i%135%13%17%3E%60%1F%22%0A%7Dl%04%1F%0F8%7C%135z%0E~%14;%02%25%16%1D%17%0F%18%3C#%1Cv%0Ea;*87i%22/5%08%7F%113/%03x%14:%11%7F#x%00,;%08w%00*%1C%13%13%14,%7Fkc/%04%039%09%07%05&y%20=%7B%05q%05(=:%7B/%1De+ax%1Br#i%08%04%063%7F)%09'x2%7B%1F%14%7F%11%20%09:h%1Bv*%03%00*%02w%18%033c%039%08%0A%08%1B%7Bv%1D+/%15f%17%0D%14m5%0F%12%05%0Bl%05f%25/%093h.y%1E%018%1D%0A%05%22%0Ft%14;%03);3%60%185%0E')bx%20~%7F%016'us%1A%1D%00%19%0E%08%03:(9%04(%01!#x*%03%0Dac%029%1D%1B*%04)+%0F?%08%16%08%1B%05%0B%0A%1D%1E%0Cy%0Bh'%3C%14s%00%0D%141'%09%02%13##8%13%07a81%19%06+%1B%1B~%03%3C%7C#%1F%068%08z%3C%603%0D2,.g$6%068%10e9%04$%18%004%7F%18%08c!%3E2/%13%07%159%1A%07%12'%08').%3C)ab)%05%1E%19ab%60%15%1C43%00%7F%22%05%06.%13%05%05%18%09+8%22&-%0D4&))zzrif43c%11:%3E%10%0C%0Bl%12%09%0A%02'%0A%1A%0F%08%12%1F%148%7Cs?+l%20%22'f%165b=%00%0E%056:%0A-%18v%083%08u-%08%0B%7Br%0C-%25#8x4%60z%3E%04#%18%3C%1F%03%16%02(%0D?%00'%03#%0F=-%08%25%18s%08%60%15%12%0B%0D7%18c%7F-y%16%1F4%1D;%13wn%11%0D3~%03%17)r%11=c%08%19;r%05%0B%11%19/)3%0651(x%03%1E%17%15%13%09%3C%03%1C%15%25%0F%06%3Ek%3E%126%11%7F73r%18%7C%20#%25%1A%04%18%0C%15%19%22t%09*%18%04%1F.%08%09%117%3E)!%0C6%14%3C%03,+m*%01%20%7F%22ii;%15%079*?f%1B%079%08%00%09%1B,z%03)%0Fr%0A%0B%14%01%04.;%0Cm!?%02%0D%1Eh2&-?&%18%04%1Cl%03%1B%11f%0E%13#%0D+%16%0E%0C2%16.%1F%0A%0E%09!%18%1D%04%22%1Be%0Fa%06%04%1A%0Fr%15%0At8!%1De:%10%04);%11%60%03%22%0D%08%12%02*%1A%1E%18e,%16%09$%1A7%0F0%0E%0B%117s%13%3C%1A%03%11%22%06$w%0B1%22%20%02%09%189%1B%03%0F%1Co9%1D%07%7D%1E%0C4!%1B%3C4%3E%14%09p%0E%1C2%15%1E&r64%14%0A(#%006c%19)%22!%18%02%0Dp%02%17-%02%206/%09,%1E%253%3C'%18%3C#%0E%09%7F%1Bd%0C6%18%0F%1A8%3C;%06#:%0A%7F.%12%0C3%08%0C%14%0F%0D8dx8%11)#%22%0A%06%20,%10%7B%19(!%22%1E!%05%22%1D!3(9+%02#%1E%1F%06$9%19.'%0A;%0E%19%12#%1F%18%3E6%0E%04%03%04%3C%0C0%09%12x3%0A0i%0E%05y=%1D%11%0F&f$%18%3E%09%0F%08%1Dmb%01%08%0A-5f%04(.~.((%12%02%0C-%05%18%25%12%7B%13%13%22-%0D*%10%60%11*y%3E%1E:3-%0C%1E%13%3C%0A%1B$%1C%0D%06%22%16%04=;%09%609%25'7%17r%0D%7B%1A%0Ci%11(%0A%7D)7%0E%20(~%6079%12:%22o%19%22$%209!%00%1F6%208%0A%60%08%00%01%04::%19-;%03a%0A%06;3%03#%1E%0D;%02%1D,%11%19%1B24%0A%3C9%0F(%1C**3s2c4g%02&%1B%18%09(%0A%12!%25%1C%12%08%12($%0B%0A1%11%0C%16%10f%1A/%199-*#/x%00%0A1s3(8#%14%03.97%0F9%0D6()/;'%0F%1C+%0C%25;-%1F%0021%06%03%19%1B1%11.8%09%17,%16%1C%0A8%1E%18%08,&!%7B%1C%05%0F%08&%1F6%119%05%08%09%03%1D2%19%1A'%17?%130%05&%0F%15=-*$4:%06&(%0C.4%3C%22,e#%7B'%16%0277%111%08=%0C%00%16%1C%0D%0A%1B%3E%7B%1A%14%08%1D%1E%1D%04%06%18%0F%09%128%14,%0B!%08$/%1D%7B%18f%226%09%00%154%05w%20%0C4%12%7D.%7B(aa3%07%00x7c%0E.%00%1B%18%01?%0C%12%0Dj%06;'%1865*%07%16%13=*e/8x%22%03%1C%60%16/%1E%164%7B.%1Dz)=%08%06:77%19%05%00%02%0C(%1120%08%06%128%1D%12:%18%0F!$p%1D?7%06#%15%22%16%0D%1B%0F%13%06z%181%09%0F%0F%22%1C896~!%12%12%1D(%7F%0A.%1D%12%0D%0A8%1B=%0A%0C%08%08%18%01((!%1F:%15%117%1E*8f;+*%7F%11&%0D%18%07!%117%1B%08=%14,?%11%142%225%07%0As%1E-(e%1F8z%17%101%09%14%13%1E%11%0A%0A%14,6%1B%1E%0F%00%01%18%17%17y%0Fs,%1F%08%005%1D+(*%1Ds:=k*%1B%15%1D%03t%02%1Cwx#l&%00%07,%0C%18%7B%196%0F%08-%1C.%162:h2*r~%06+5%0C%17??%03%19%0A)?:%0F1%60u%1E%07!9f%03%22%1E6%08?%09:%0Ch%14;x*%01a4,%20%7F%18%0D?%06%0A%3C%06%18!?&%0A%1D!:)%0A%60%18%12f%20r9:%0D6%3E+%0D%0Ao4%1Dp%03'%10%01%09%00~%0Fl%14%257%3C%04%3C7%01p%7Dxi%1E?r%1C%7Ci%3C%0A%0A%03%7D/%18-%1B%60?%18%60,'xw(i(%0Ex%7F%00gf%19%08;%18d%00-!)!%19%09&%12).7%1Bq%7B%3C%00%1D%015%13-4:/%20)%02%0Fg:$(%0F=%14&%06%02%0F:%1F%0A%0D#=-%16*%02%04%1F%1B%22%1E%13%60w%13%18%03r%1B!6b%60+r%7D8;~q(w%00%1F%7Cp%02xt%06%13%0E%0A%010%7B%0D'%18;%097(&z%0D%0B4%0A/%7F%00+%20%1F%1B%3E'%0D%1F%7D%19%25%07=5%01.%02%1B.%198%12x%1F%14%15%1C*?+%11%16%05%17%3E%1B#5%3Ex%0D%09%20%1Dy.$%7D%085%7Fs,!kb%032%0A:%16%3C-%20%0F%1Et%25%06y3~#e&&%06v%1A%02%0Fl%04%1F#%19%7C%0F3%3C%3Ed&91%077c%04w?%1Fk%06%7B&%1A!%0C%13%1C%07;?%08%1Dr%00%1C%08%17%08;%02%7D%3Ea%1C%1Fw%04%03/!)%1B$%1B%08%3C%0Au?%7C%1A3%1B1=w%0B=&%0F%0A,%14h#(1%3E%20f%0F%04%08%08%1F%09%02%18()*?%3C%22%00z%138%0F%15%25%1C%14%06%12*z%0D%0E%11r9%01)%10%15%7B%05#6+%7B%03&8?=&(%13%25%14n%082%11:+%18%1C%7F%05%0A%1D%13%16%19%11%13%176%1E#+%0A%09%0D%1D%02226!($%0D#:h)%0C%17%1B6)2%0F/#%00%10%0A(s%01:%0B%12:49/%1B%11%07%25%139%10%12~%0E%03-%10)/5%1F%14j%1E%04%19()%12%11%18%10%0F&4:%1A%05$%1E%18%02%7C)%25%09%16%11-$y6%204%7Cr%1B:/%00%1D5%1F%1C;)%7C(8%0Fr33*s%3Co=/%17%1C:)%22%7F'1%08o7?6%7C%0Dl4%22%0D%07,%15%25%19%07%12%7B3)%60%12%13(h%00)%12%7D%00-g%7F%12%18*;:%20%08$%0F+%3C%04)%04%07%03%20%7C*%3E%20;=%01%0E%06w,=%06%039%3C%09==%09%12%7Bm:!3%0D%06%3C6%22*3xa%18%030%1C%1C*%15%7C%062%0Cm%3E%13s%1Ez%20f%00r%07%7F;%0A%13%19%1B%14%15%1B%7D3##rc%05%25%00+hf/.%0D%7Bj%198y%7F%0A=%11%0D6')%0D6%0F'365h)u%7D%04:%60%1F*%04%0Ajg84%1D;51%09j?%7C7%22%3E%10;7%00%1Fy;'%3Ca%1Fy5%02c%0E4zr9%0D%18%08%0As%09%0Aj:'v-%1A%1A6%097.%7D%08%08%1Au%02%3C%1De%1C%04%07,l2%01%19%0A+if/p%22=+(%0A%05%0F%1B%1F!r%05'%20%3E%07?$#+%60(%1Erx%7D%16hsx)x.%60%7Dw%1F&%3E%11#%003%0A;%12%0A%18%19%05%18%1F%0Cq%068h6%00l,%0A.%06$)%0E%0A%3E%1Bf%25%60%3Co%1A=%11%3Cca%1Dx0%12%7C%3E%1B-*%0A!a%13&p./%1Ei%0C6%00%1E%1A;,%09%0A%05-%1B%036%09x+6!*y%7B%0E%00&)%1C%0A%14%11%1Bp%0F%1An28/y9%10%01%1A;%0A%07%1B%09%09%03%0A'r1%60%14%09%1Cr%1D%09%0F8%14%3E%18%3C%08%3C%0D%1B%7B%00%08%0A%064*%1A*%22%0D%0E%20%0A%22,:4;%0A%0F%0E%19%18%60%7Bu%12~r%02%60%04%1A%22r%60%1A%04%1A-%10?%09%07%09%17%1B%09$%10$%1B%1B%25%609%7B%02%3Eb%1A%22%02v%089%7F$%0Ae%08%12,%00,e%0E#%098%06-%3E%0A%60%12%09:i%01%7B%11%09:i%20%0A;%1A~%3E!%7Bx%1C9%185&%0F,%05%18d%0A%0Ey8%10#.5%7D=%1B%1E%200%1E#r2%3Cs%60+r5%60'%60%16%1B%07#%20%1E%04r6%09%1B,%00rd%0A($%16*%7B%1A%22,6oi%7By,c%18%1D%0Aq,%7B%18*%1Aj,%20%18%19%0A%03%09%07%18%07%0A#s%1C%1B%1A%09(%0A%14%1B%3C%09-%09%7F%1B$%098%60%7C16#v%1E%1E%1B9%097%09%0D%0A%01%1A%02%1Ev%18&,u%0A%1A(4%0A;%1A%17.3,$%0A%0D%0C%22%3Cq%60!%3E%13%7B-,x%16%16#5%0E%7Dm7%7D%13%60%08%0C%03%09%02%0A?.%01$%11%00e%08%20%0E9%20%17%14%19%08%11%08x%14%3E,(%09%04o%06,*%3C%25%18*%02%06%0A9%3E%04%1E%0B$%00%148sy%60%3C%08e%60%0C%1A?.%1B%0A+%1A%09(%17%0A$%0A%08.1%06+(wa8%60%0E%19%14r5%19%03%19%7B%1C%20%0E#8%05:e%0A%14%02~!)%7B-%19#%14a%195%19w%0B',4$%07%1468;%02v!%1D%7Bv%19%0D%1B%3E%19r%198%0Bh%196%0A%3C.%60%1C%0A%0A%7D%12%14%0A*s$%0B%00%0Ar%7B%0C%0C5%06;%02%02%3E%17:%18%0A%19%18%19%1A$%0A4%18%1E,%02s%18%123s6%0A#%1B',5%7D%05('%02+%0A$%12%0A%3Cx%06#i%14%1813%7B!;%0A-3%01%18a30%7B:%1C*%1A%253%0A!;%06.%0A4!%3C%0A33y!!%1E%11%09-%3E%003'3%1727%01%10%1A9%13%1E%1E%18%01w.%0A34,%08!%08,%173%00!%20%02u%0A%0D%13:38%01%02!236%0A%06!%15%0A%25#%19%13%1D,73$%08%7D3$%01%0C%13$%0E5%1C%00%3Ed%011%01%25%13e%01q%01%22%13'%3C0%7B%00%13%03%01%0A%01/%13:%010%1E~%3E%088s%01%06%13%25%01%10%019%18%19%01#%3C)!6%019%01%0B%13%05%01%0C%01)%14g%60u;%1A!i%01w%01:%1C%03(%22;,%13%1F%01%00%01%1D)%1B;3()a%11%0A7%05/%0C%11%0A%3Cyb%0D5*,k%09+1;1'+y%07*31!75kbyb%16%3C/%069/)%20'$9bhh%7Bq~b%10%1C%080%01%0F1%09%0C%04%03%03%12%1B/%12%0A%1A%0C%11?%00%7D)%14%01%08u%08%1D%18?:&%01z%1A1%0A%06;%0F%16d%09%06%0Az(%18%0A%06$%0C%14%1F;%00;)%15%09%08%22%0A%18.'%09-%12%0F%1A#%0A2,)%18)%0A%07%1F%17%18%00%0A%0F%12%0F5%11%066%0A%3E%18%12%12%03!%0F%1B%1B%1A%001&2?%0E%10%0A%1C%0E%121%07:4;?%1B%09%1F%07%18%18%12%00~%095%11%125%07%092%11%0A%1B,%194%11%0C%023%0F%09%08y%001+%1E%11(%04%0E%00%089%19%00%0E%0D%1F3%1A%16%01~%08%20%0C%00%22%03%1A)sl%02%02%1A9%0E)1%06%1D%09sw%0D'0f;0s~%1D%02%201%03%03%0Ab?#*%7C%14%202%11%014.%1E9w%08%256%1A2%00%03=*f%09%17%607;!%0C7%04,%15%1B%12%19,%16j%1E%0C9)45a)%16%20*%14)%20%09:%7D%13;9%0A%00#%10%00%01j?%1C%1793%201:6f%3E3%1B%7D;a:%112==%00%25s$%0F%0B5%11%00%0A%1C1%09/%03%7F%0F%1F%09?%09%1A=%1A''%00%1A-%12e#-%19%07%18%11)%00%09#%18%17$%00%1B%1F%00*%0E%18,%0F:%19%0Fq*%07%182'(8/39%11+(-%18d%04%18(%3C%60%1C%00u%1C%0817%1A%0B2%08%3E%7D,(%06%0A%1B%19%07%08%0A%07%00%1D%03%00%7B%0B%20%158*%12?%1B?,%0589+%02*(%0D9)%113%06,%01%0D%3C%3C%02%60%02%1B%09%0A(%09e%1E'%00p%0A,%1A%60%3E(sz*%3C%03,%0A%3E%16%16-%04%0596h%25%0E%0A4%087%13r%60)%13%12%12%08#%1B%138(%0E$7%09%02%3C.;e%12%1A%3C5%05%14%10%20%1D%0B;%1B%1B%11r%0C%114%17%0A%7C%0C~%1E%15e%0A2$%03+%1A$.'9,%3C-0%1F%25%0A%19%08.,z%1B%06*.z+%1Aa(%03z+6)%07%00?%14%16%1E%0A$%01%7B)%04'%25,~%1F$%02%042%0F%12%12$%11%09%25%1688%11#%20*%3C%1B2%1F6%16%22%1C%0F39%3E'%0A%06'!%14%05%1B%0E%0C#%0A)y%132;;*%60%18%07~a%04%20t%00~l%1C8+3&%1F%04%0E%00,vr!.%0B:=%17%22/'97j%08%22%17%1C8%0E%04*q)%07%1B?'%0C%05%08%0A%11%020y%20%0Bc%13%25y%1E%0C%002%19%22%0C!%1A%1Cx%22%1C%113/%0B3%0F8%19%11q!+:%092%19.%00%18%1D3%25/%1B.%01%20%14%22%0Cj%00(%08%03'%08h%088%07%0B*%1C%3C3*v%08%14f%05%0Dyi$%19x%25%7F?%09%09%04&%0F%1Diy9/%02-c%1E%13%12'i%08%7C%17()%15g%12%03%1997%02%0A'%20%0D%11%01%1B%00%12%19%08#%0A%13%01%1F%14%11%12%03%1A%0B%0C%7B%08%00%0A%0F%0C%05%1E%0A%1C%1D%3C%11%3C%13%1F%22%10'%12%18%7B%1Aa%11%0A7%08%1F-%1A%7B(%19$%0A;,8%0F%25%0F1'%0624%1C%12%00%0C,(37%0F%09%1E%0C!%1B%7B%17%0A%09%18'%0A*/%0Cm%00%3Cu%0D-%15%1D*%06$%3E%181%0A%18%08%07k9%60%0F%0E%3C3$%05%04%0A%0F:%06%04%14%7C%22)%1C%7F#%1F%17-%60%3C8%0E%3C%0E%03(;%01%034a%0A/%06%25%1B%1B%0E%12%0C%0F%1C%03%06%0A,%18%1Bd%04)%05%0B%10%1C~'%09~%3Ca%03*,%0F%1B%1C%13t%1C$%0B%11%0A%16%1A!i%01%0A%0F%22%1B-%22'%0D%0E%00%1F%0A%0F(%3E%02%1C%22%7D0%11%02%1F%1D%7B;%1A&%3E%1E%02%0F%01%0F%0C%1C1%04%12%06%18%7D%08%14=&%0A%14$%14%1A%08%1B?%1B%13,%06id;&%03%07%13%02%60-%20e%0A%05%1A(??h%1D%7B/::%09%07f31?%12%092%149%03n%19%3C+%7F$.(3%18%09)r%12$%18,v%1F%133&%01%04i5%02%02'v/8,2%00%1F%12%11.%17%06%05%1D%20%7F%0A%00%17-%60%60%0A%07%3E1';*:%09-%1C%01r&%02%15%09%0D8%3C6a#%00u:%0D%1A%7B*%15,%06%12&%02%0B%0C?k%22*&*%3E+%079%031%3C,!#v%1F%17=%20f%0B%09%3E-1%7C%10%22?%11%1234%0A%0C%0B%0A%09%1B%0F%0F%1C%07%02#%19%09%1B?%04%00%08%0Fia)%13%3Ex%0A%11%20%14&%1B4%13#%20r%3Ck#;*%7D/;%20;%16%02%0F%03a%070%1D%0D%0D%1A%1C%1B%0A%0A4%25%11t$)r%09%12%00%1C&%3C;%1C%03s%25%139%13j%22%22t%19%11%18;%3C(%16)%1B~%1954%1D1&~-%07&%08y+%1B%0634%189%1F%01'%04%12%141*%09u%09%1F%1A%08%02%0F,v%18%02%03%13,%14-%17%7F%00:%0D%3E%20%0A7%08%7C%01'.(%60%7D/%1D/s%03z:%0A35%7B=)%04%07%04%22%07%17%17%06%20%00$%08%03:%08%00%25%3Ee%0F2%04%07a%1D%1C&%7B%7B%0F8#1%08$/%19,'!~%1E;%7F)z%1Eig;;%04%7F%03*%7C#,%0C%0B7%3Ey8!%18%22%22t%00)1)%60%05%7B%1E.e%7B%0B%19/%60=%094&x%20%16=y,%1A*%17%04j;%3C%0A%25r1%25;%0C%201q%12%0Ct*%3C4%19v!;=2*%25%08%1F;w9yne%7D8%137%1E%13%131%0A%18r2?4%02!j8%135%7F4a)%0E%18%11z%1868%09%7Fe6h8%18f%0B7%20%13%06.-a&%01t%0386%7D%03((*%0Ff=r*;t1&/s%178gy;;%01%1D'%19):%3C%1B%06s/$%09%1B2%19w#%3E%0C%01%0F&%1E%0F88%02%05y%1A%00%1D%08%00.$%0C#%22%042?/7z.%1D%1F;%20%1A%03%12%01m%1B,0%0A%0C%1A%7B%1A/%3Ev%15%11%05%05%25)5%17%12%13%0A%08%3E#,%0C,z%1D%05%03%10%04+%0A%191.%1C%0C.%11%02%0028%0Ba%12%10%09%07%0E%01%22)%12!a%09&p$%14%182%20%03'%170%1B%04%0A%00947%7C%02%09%0A4%11%12%09%01%14%3C'%0A2%0A%03%17!%08q)%01%089%19%07s%20%1C%0A8%00%0A8%1C%11%0A%3Cyb%0A%25%25#%3E%3C*$g%06$*%06%1F-%1E%09!7;gy%7B~kag%08%07%0A%0E%1A%0A)%11%1E%1Dd(%00%22=%18;,%17%1A%03.%14%1E%02%3E%0C%17%11%04s%3C%0Ba%12!%15%0D%0F%00%01%0A%18%0A%1A%18%1E%3C%02%7B%0F!%11%1F&%0A%1B4%11)%0F:)%10'%09%0C%0A%18%3E%12%04%08%0A%05%15%12*+%1D%3E!es)%12%25%18%13%20%00%13#%0A7%09t%0D+4:%3C%00~=%18%14%18%08%02%7B%18%14%3E6%0D'%1B%04%09;s%1D%1C%09%0A(%7B?%0E%17%0A%03%1F%1C%1A%11=2-%0F%0Dg$%17%08!%1B%03%09%0A%7F)%00%15%0A2;%0F%144'%06%09%002:%7F%11#%071%11%19%18%0A%0B%3E%13%0C(-#%1B;%0E&8-%18:%1A%16,%25%1F$,%05%22%0F%1B%20%0C%02%0D%1F%18i%0A%05%1E%0F%14%20%11%00%044%00%15%20&%0A%02-%08%3C$%20zr%03%00('$*%12%7B%00%1B%14%0F33%00y%0F%16!%1D%04%0D%02%1Ahz%05%0Ae%18%14%04%118%7B%17':&%0A%147c$%00%0E?i!%1D%05%0D%0B!%14'%0A%3C%18%104%1Ar%3C4%3Ca/%11-%7C%1D%15%00%03%1E%18%1F%09)%0A;x%10d%1B%1B%0F%01%0Ef%0A9%0A-%13!,%00%0A%19%15%01%0A+%0C-%13%11%0A%1B%06z/%172p%0C&)%09%0F3%0F,%08%1A,%03-/%11%15%7C/%18%7Bj%09;2%034j%01%0E%16*?%3Ed%085%0F%3C=%08$%05%02/%08%15%0C+(%09%189%186%0A%07%14%17%036;%096i%0E%0D%12%0C%00%3E%0Du%60%17%1C?%20%09%12x7%13%7Fq%00z.%03%25%14%7F%0F%0F%01%0D%08%07%07%14%20%20'%1D%20?%15%0F%00%7B%08%102%20#%1C%02%00%3E1%10%3E%09%10e%0D.!%0609%7B%08%05/%18=%1Dv%04%192(%13%0A$%3Cr%02%0Aq!%148%3E%137%0D%22?%19%12%1B%1E/%60%03%0C%13%60%0D%00(x6%11%7Dmd%08%04?~28%13*%7Dzr#90#%22%0B%11%06%03%13%16%1B$%20%10%02%7F:9%0D%13%20%0C%0E?%1Cs%7B%1B%3E%17%04%12'%7C%13b%1E18%22%129%20%1B2%178:%11q%3C%1E%14*%7D%07%3C~:dy,%60/ab%1B6%08=k;%13s%22%19%105%1B;%1D6i%02=8~8%12!#%08%1D-a)%0A%00%189%1B%11%18%0A1%22%1B%60%0A%00(%3E%1A%3E%22(s9%18b%037%7D!;%11%1E%22%1A%0Bi%189%20%7C%0A%003%0D3%1Cz%0Fb8%19%03%20%1Fcx;%1D%03a2%1B2%0A%0F%16%03%7D$#%1Dh%01%0A%023?/'%079'!%1A5!9%00%03h%02%1E/%09%0D%1A&%3Ej%1D,k$%60%0C%7D%7D6%139&%7C%09o%19%0E$&#i:%1A3%3Ew0%1C%0Fu~%3C6%16%0E2%079%14dy%03%7F%1E.%11%08s%07%0C%60%15%3C8%3C%09%167,(%3C%3C%1A%0A%0F%17%05)%0D%03/%04%7B%0749%18%0B%0A%04%11%13%7B%18''%0E'%1A/%18/%13%16!%0E%09%0C7%03.%0C%60##%11%0A(y%0F*3%022%07v%10#y%02,%05%3E%1C%08%09?%03r%13z%0B%0A%7D%1A%03-%0B%02%25%18%12%3C&%0D%25%0D%01%085%11%187%07%13%1Br'a#,%04%09%09%105y%02%07%03%10%12%08%0D%0A'j%12%06%07%1A%25%18%11%08.~%00%0C%1C%0A%16%0E9-%03%04%25%11%1A%0B%01%03%0Bz#%00%00%0Dp%20)%127%7B%05#%0C%18%60%1F%00%0A6%0D%178$3%20%113)9f%09%1A3%01p%20%1D%0F%1Az,2%1C%0Fh%20%16%01%0F%0F%11%0C%00%0A$)%05%7C(**)%25%25w%12%14!=&$%11%227%06-%0B)%25%16%05~y%20;%0C%1E%11&.%16%00%02%1F%00%0F%7B?;%09%14%0D%07%018%11%07%7B%19!%07'y'%04%01%06%7B,;/%17%60%25%00%09%07;%11y$%02v%1A%20%1B-%3E%0F*%073%09%0D%07%1F(%1B%07s%1F%13)%13p%18%0Fmc%18#%1D%0D%0C%1E%1Ep9%16.%16%20%08%0A*:(%04-%7D%1F%03%02%20,%1C%14%1F%3E%1B%16%019j%22/%0B%12%010%08%11%15%1F,%14(.%15%7C*%10%19%09;-%7Br%13%09%22%0D!%0C%02%1D%07%06%18!2?%18&,%08%3C%04q%01-%18%22%7D%02%0E%0C%16d.%06/%08h%16/%25%01%18j5%1D#z%1E%00%1E%07q%1B*%139'%0F%03~#%07*%03%0A%3E%3E1%1D1-%7F=%09%0F7%1E).%1E%08%14%1Ac3?%25%10%7C%143%1B/%05%20&%1A&%0D%18:%03%15%0A!8%7Bzk$%202%22%17%0D%1B%1C%10%3C%1A%1Ba%03%10,%183%05%7F%17%1D~j1%1Dxz,%0E%1A%1D%14%01/%60%3C%1C%10%099%0B*%0C%0B%1F%7Do%7D-xx%18%18cz.%06=r%14r,%7D%7F%15c86%7C%02a&%7B%25~85?3+%18%7D%00f?$%06%25#%11)%0F%22-%0Df%1D*3%1Aa%12y%22)%22j%16)%25%11%16!';;%06%7C#%3E%7F,%1A%05%3E*%1Et%06?7%3Estz%0F%14i(%05f%16%0A%60%7B%048%04%01%08/-?%03%00*%03%0C%13%09%12%14%00j!'h%0925%3E%00ra9%22.%19o%1A%22%22)%17%3C2%1Aq%0A%17%0F:%1A%04%13+%0E%1D.%25%01;%03%7B)+%04%18%01%3E%05%14%0D~i9%25%0C%1D!o%11s8%0A%17%0C%7D%1A%0D)8%1A*%13%19='ng&5%05%0Bj%25%02%00%0D,:%1Er%18:4%0E%18%004%19%7Dj%17%3E9~%0F%1E%7B!r?7:g;%00%05%06)a;,)%0C4%17r3)%3Ck%18%3E%0B-%17%01%1Drv%0A%0B68%13%10%1C%18:%00*(y8*%11%0E%20!-%18d28%0E=%11%12%12%12?%20n4z%17'%06?%25'x?,%20%07f&%1F%16r4%3C%19%0F4!%20:#.#k3%02%06)4%01&%01%16yw%0C?%03%22x)%1C=%1Ds%1A:(f.;%0D?l%13%60w%0F4n%25%188%22%0F8?$%25~%3Cm%1E-49%09%16f%1E)~%0B.%18$-%0F)%17h%60+%25$t%228%10%09:%1A#%7F%162%14*%11%044%07%0Ak%0A%00%13%1E#)%09%0A%11%06;%1E%19%01%079%16%1D%12r%22%09%06%16%038%19%11%086%07#%0C%0F%06%01#;r%1B%0C%1C4.v%18%07%0C%03%1Av*%160%1F%08%04%0F%07%18%11%0Fqy%04%18%1B%08%06%22%22m7%02%18%1C%0Fl8$%05%25%0A%1A%15%3C%0F%0E%01.%1B%0A+%22%06i%22%3Ev%086%03i%60%06$%07%0C4-%033%1A3d%08.%09%1C4d%254*:6e.%0D%20%1A+%09#j?%20%1F=%09%00%07%1B%01%1B%1D%03%1A%0C7%17%7F%06%11%03m%60%3C+%02?%18%09%0E%08%06;(%16%7F%03%05%0D%3E?%0E%0B$%7Bm=%0F%0C%1C%098%1D~(%05v48#%16%22%0961%1122%7F%18i%02%16%12=!%19%00%00;%0A1%1324%7F%08%18%7B,%16%0F4%16%11%0C6*%07%11%15&%00%7B%08%08%12%02%0B;%02%0Ab%202%0F!%15%20*.s7;%12%07%0C%11%1Ei9s%18262%04%00,%1F%03-e%7B8%7C#?%1D%60%128%7B%18%05%7B%0F%25%07k#%1B%0C2%0F2%11y&~%0B%0E%14%06%0E,!%0C%1A%0A%22%19%17%1D%01%03%08$%188:$6%08**%1A%0A%0C%7B%224&%22(%00e%1C%0Ay%0D%19%20%0D%13*%05%1A*lg1%0A%11(%13%1A%1D%06%00%1Fi%11f/%7D%06%13%06%0A%0C,%181%062&%09)%0C#=1%1E%1C%1B%3C%1B%0E3%1Da%25%11%221%1D%0139%0D%01=je%7D;)%0D6%1A9%09%0A%1E6%7B1%07%22%06%16%1F%19q%3E)?;)t%06%0A%10%1A%0A%10%1A;%0F%16%25v%0D+%03)%60%1B%12%1B48%0A%133*0%3E%02%18%3C%1B%10h$%0F(%0F%01%1B=ts&%0C?%0D%1B~%19l%02#p3vk(%06u(9%0A%0A$+$%09%00$%3C%10,%01%0B$%1A%06%08%1F%14(%05&%08%07%0E%1B%03,%7F%08(6%0A9%00z%103%0Fs%12%1Dk%0Ar2%1C$8$%0C%14%09%17%18%1Es%15%1C%09+%25%121)%03%0C%01%05-%1F%1C%3E%19*%20%3C%07%1B#%0A6%0D%1D%17%16%07%18%05%143%20%7B%03%18%02%0C%1D%7F%0F%09%176!%0E(%0Dv3%16,%108%18*!%12%09%22)519.#%0C+=%1B(#%000*%1Er&?%171,-%0A%7D%3E!%0A%10%0C%19%1D%11%0Et%0F%0Fo%12%11%02%1D%14ae'%002&5%02=%06%11%03)$%04;y~%1F%18(%02%1885118%7Cx%1D)%01%00%13%17%1Di%20/%0A%06m%1D%0A%19%1D%18%1C%01%1E5:'%12d%05.y%1427.%15%3E%00%3E%01s%07,4%13%60%0D6%03%1D%0C#%7B%03%7B%0A%1E%1B:%09%7F%1B*a%3Cq%7B%1F%1E'%0C%07-'%15%12%06%05s%08%18%1A%0A%06%05%1E%3E%7D%0A%00%13#%15%15%1E%08,%1F%60%13f%0E!%08%3E%03%0A2%02x%189%0A%11*%0D%01;)%10%1F%7C%1B%16(%08%04)%10%3C%7Cx%09%1F%1B&%13$y!%1Df%18%14-=%12%17%3E8$8n%7Dy%00/)67%01u%3Ey%10%1E)*%3Cy%1Bg%00%02%3C%0B%17%19(%04%0Av/%1B%02%033%7C%18%3E%03%03%60%03m#%02%0D%01=%1D?%08s%1D%0Di%12%0Fq1%25%3E%1D%3E/%3C%09+%17%037:$%09=%132z%1F%13%12z%00%19%04%3E18%22%0D+%0A7).3%09%013%199%09z%1F%18%3C;2%04%0A%1F%1A%06%06%1F%1B%14(28=7i%0F%0E%01%0F%18%1C3s*%0F%18-ym%0C%3C8%20;-.n%1E5*38nj%7C%1F).n%60$#a%0F!:$$3gvh%60%7Drg%07%15%14%1C%0B%0A&%03%00%0Fu(%0F0#%0A%02,%04%08%1D%3C%02%20%0F%0E%12!%00%08%1B%3E%17(%00?%0F%03%05%20%0D%02%06%0C%113%00%1F%7Di5%0A%02s%1F%1B%07%0A%17%1A%0B%14%123#,%06%14%11s&%0A%7Fi%11.6%08%1D%18%05%13%10%0A%7D%18%1A:%1B%0De%10%04%08tr%0C69%1F%11%25%02%0F%13r%22%0A%0A%1A%7B%1F%03%0A%0F(:%0A%09)%04m%6089$%0F%20%19%0F%1B%0A%0A,'.(%0A%0D%20==%02%18%140:s%08%07%02,;%05%05%0A%7C%14%11%0A%20,%0F:9%06*;?%0A%133%22/6)b/,3%1D2?~)(#r%25%0A%00%3E7;%1B%1A%00%1B%1F6%02%13%14~%0F%1A%1B$%17*%22%0F%11%0C6%1E&%18%148%22)%04%10%20%1C%09z'%18a%60*%0A%0D4%1B%11u%05:%087%056%0A%0C%20%1B%1A%04%0A%0A%13%00%1F8%13%000%17$&%19?a=.x%0A%0F*)/%02%077%0A#;%12%0E-;%132,%1D%0Ba%3C%02w%7F'74s%03%7C'%1Ch1y%05%0C;e%60j%13/n%14%1Cu%1D%0F%11g%02%04%02%18o%20%1E9%13/%13%14%1A.%3Cc1'%60%09%11%1C%1E%14%0D%06$?l'%0F%07;%046$%0D%0D?%1A6i%1B.%0F%06%1C7%0E#!%00;6%08%031%03o%19%08v%7C%14o*%12%03f%06%0373%00%03%17m&%0E%09%7Bw2%19%00t(%7B5%60#%05x%1Dl%1D%25us%25%0Fh%60%03-%0Bm#%7C%18%02%0C46%08%09%3C%195&%0Fu%02%1A5)%7F%16%02%09%11%60%11%07%20z;%1E%1D./,(i-3$$%1C%05#u(v%0C%602%19%3C%04%0E1%3Er%20e%0E7!%19%3C%02%013%25%14%1A%04i)'%19y%20j8%18,%1B%08k1%02%11%0A%16%039%7D-%1A%00kh!q%1A%0F%0Cc%08%0F%19v%1E%13%22%14%19%25%1Bf%7C%06%0C!i%11*&%0A~64%3E%06%06%0F%12g%7B%10,%0F%13'%1D4.%096(?;;$.%14%1Dl%3C%1A%10%13&%15(%7C%17%09,0%12%7B%184!%04)w06%7C;%12*%09%0A%0F/1%0A%0C%1C%11#.%1F%0Cg!(%3E%22.%7D%1F&-%182(%03q%7F%7C(%15%079)%02%1F59)%07%00%13%1D?%0A%04:%0F%1F%1F%122%16n2%0F%19-*oe%13%00s8*f%1F6%01%1A%1C%7D~y~%1A%0Fg%25%15/ej6sr%7F82%1B*t;:(1%1A69%07)1z2%20%0B%1C%17?%031,%1E7%1819%0B11#1%25!%20%3E%11+,%0C*d/+(%3C%13%03!)%0C%7B%003%0A%10%7F)%1C%12:3%0E/%12?*l;%1C%3E%1817#$(%11%18%0E%07%17#&.%18%03%1F+%13s%04%02%06(3%03%10%1F%0D%17g%0A%0E,%1A%03%16%1B9%3C#l:%081!+%14%13%1A*%7F%3E%18%03%088%0F#%1C%14%1A%02.8+%11%016*7%12%06&%17%19%7B2%03~0%20&%18d%0A*%0D6%1A%14,%0C%60=1%0A%0F(##%01%1F%11%1B%07-%13%11%0E%12%1B%0A%1A3;%16%0Ez%08'%00%07%1E!%1Ad%03,%0A%0D%14f%088%08zo%11%003%7Fe%1B%1A%0F2%20%0F%18%17)%06%1E%1B%3C%19&3;6l?-%16~x/;%60%12%13%03%3E(%1B#-%22o;%07%04*%1C%20%14%06%1B%19ym);j%02%09%0D:%19w%13%17%00%13%0Fw!%22r8%0D%17%11;,!(%17%0D%0D%1Cg%22%16~%14%0F&%60y%03!;1&%06%0F%3E5%11%25-%11%094%06%0E#z4ne%1Cj%0F%14%1F%04%19%0F%13%1C7%1B%0As~+%0B!~r:%0Cj!%7F5%3E%1C8$-4%1A'%119#j%20z5a!%18%13?k!%1E%14%1A%00/1*2%05%05%0E%00%0C%0F/7%1F%09&9%1D%028%068q/(%17a%7B%11.*=%08%0E%17&v5%01%1Ep8%08%17%03%0Ex%08%1C;i%1D93%1E%60%04%1A5%13;n%08f%22y'%0C%09%12%25s,%116*1z%0A%0Bi%02s%1D(%1D%19:r%1C%1C%60b8%25%19%1Ah%18%1D%25%1D%1B*%01%19#%0E%3C8;%7F%119%14%1D%12%7C%08%13%3E%12%3C%0F%11?%206%13%1C+(%1E%18#!5%13=%08:#%0C%12c%18%06%0C%11%1C%1A,%1Esx'-h%1D%1E%15?%06*%7D1%0C%03(?i-p%05%1C%0D%25~5/%19i%1D%069%0A;%11%1A%1A%15x%18m%02z%1By+14%7D7s?%60%09%1E%15%13*%0C%60'%13%60%14%01%00%18%0Dx%03%035%07s%1C%14*a'%0C%00%7F-%1E%1B9%1C%1D%20&%13+z%22i1%7D;%1C=6(1(%7D$8%1C%7Fq1%1C%15%00%05q.,%3C&%60.%03%3E*f%7D+%7F%08%0Ah%0F-%1F%1Dh3%1A%0F%19%16(?%1B%00%7F%0A%0A6%7B%0E%25%1B%0F)-%10$%16%03%03%0Dq%05%3E%16%11%0A%02%04%25#h%0A%00%25%0A:&%09(%18%0F%035%13%07%13%00=ay%00%3C%0A5%7D8)%09~%60%11?%00?9j:2%25x%05%096%11%0E%0A#7$%20r%3C%05hh%1B3.%1E%16%001%0A%1F7%01%60s%22,%1Ej%1A%0F6=!t%19%067y%19+f%20u%0Fz%1B%08z%22%1Fyj'%09v1%1E%1Bi1q-%04%60%1Czr%3C%0A;)%204%60%16%13&%0E0xv2?%08%10%03%0B%0D1.%0D%02+;%1F%1D%17s%0D/%7Bf+%3C8m%7Dy%09&c%13#s-=y%1898%0Df%030c37%016%18%11%0E%18%0A%08-%1F%08u%03);%01%04%08$%0C)%14%7B%09&%04%10%1A%1A%18#%07%18%11%095%3C%3El9:%0A%1A=1%20%0F%10:%0B%1A!%04t(&%03%14%22%06%7B%02%10%05%20%00%0A%062?%01%00%08&r%01%07%05%22%02%08%04,1%12%22%1A%60%0Cy,%1F*7;)%02%0C%0E%11%0E%11%1A%1A.%0A%0A9%0F%1B%10%09*%10:%0F%0F%01%3E&2%05(%1A,%20%19%033%191$%13#%1F%09%0D%00%7B%1F7%11%05%05%22%06%1C%058%12%0Fx%1A%3C%0F.%0E)%10%01x%00%0A%0C%14%25%0A%02%0Fv%1D9%1B%083%1C%0C%3C%7D%042%03+%3E%12,%19%7D1%1B%7D.%08=%11#%0D%00(6%3E%12%3C%0A%1A%1D%3E$%09%06%08=%1Cd%076%12%1F!(%0F%05%00%0B(%19%12$%0E%7C1%03%192%0A%1B%1Ed%0A%10s%07%3E%02~)(%04m%08%3C&%19%1F0%02%0D(%02%25%0F%19&)%0F%0Dl%15%00%0B%20-6%7D%015%08%7F%1C1%00q%18%0F%15%19%3E+r%09%1E%1F%06%15x%03!%3C!3%0C%7C%12%1B%1A6#6%13%13%25%04%3E%0283%0A%253%203d%08%05%0Fv:7z%03%7D%0A%14%18%12%0F%3C(%3E?#%09%18%0727%08.*%1Ba8%06%152%08%13%11s%228%0Fr%15%1A7%08-%16d)6f&%3E:#%06%22%1Em%1F%028%19%1B%0A)%206%08x;%01%201%22$4'9%0F%1A%04%0Cd%0A%06,/2%17%06%10%1E%172(!%129%06m%128%20(v1g%1F%07%03%01%171)%10?6%20)2%083%0C%18%19%06&%01%07#7%25+%07%0D%0F%1Dy%0B%0673%3E1%0A#%17*;%22%00%0A%3C8%019%03%09?4%11%7B%0A%204%03%17%18%25%25%14%09b)*y%08%03%14%08,%00%1E%161$)$%18#&#%06%13;%01%05~t%0D$%01%3E=%0F%60%14a;%0A%0227%1C%7D%1B2(%0F%0B7-)%20%19%18?%08%0D%7F&%1B%011%00&$%13%13%19%0C~%22%1F%13%12%171%0266%089#9%18%22%0F%22%03%1B:;r%18&%02i%3E)%0A2%16*7~$%18%022%3E%02%1B%1C%1F2%3C%09%12%0C)6%22s%03%7F%0B%18(%3C0%1C%1E%09!*%18y%22#%03%1B-%20%05r%0A%7B3%1D%3E%1D&%0A%22:%7B%08d%1D%00%3C%05r%07,0%08%19%14%60%01*1%08%1E%02%1B%07*%1F2%06%1D%10%20':%20%19%22%20&%209:5&%14%17b%1F*%3C%7B?%22s%15%1D%0A-%05$&'=3%0A%0F0%06~%0C%20%08%08%01?7;%05%08?%19a%3C;#%07)%18%12?%1B*z%60%3C%3C#%0A%1B%0C%16/'%7Fz%03%18:)%1C%1F)i%1C%0A3%1C%181',.%02%09%20%0C#%3Cz;#%1E0%3E$%3C!z%13&%3C0%06%011*%09%0Ai3%0C%3C%7B%15%1E!q%1Av+%1E~0&#l!?'*%3E5;9%12%0D%08,f)q96a%01%00rs%3C%1B%0A%7Du%1Dvn%11xp;%25%00b?%001,2%3E%7B%003%1929%05%0E%07%18%01d?+%1E%1Dm%20f#2%22)%25,%0B%0A%1E%3C=*;%1E8%14$%1A,&%7F%1D%14%0Dpf%04o%01%08)%3C%0C%0B5%1C%17$%08%3C%139p%60y%3E%131%08)*,%20%02%0C:%7B%0E%14%13u%08)=$20$%7Fm%20!%13:e%176*3y%0A,%25%11.%18%0F.%02%25q%7B?76%18l%05&8%0Az%17%0Ev%13%11%0F%13x%0F%0Fc%3C%0D%13+o'%1D%04%078%0C)%05x%19%0C,$%7B%061)%0B%15%02%02%0A%0C%1D;)%22%1D?-&)s&w%0Ff%1Eq%1D%05%0C!8%11%0F%7C8%13%05t%3E%02%08%07%7C%25%13y%1E%07%045('%3E%12%7F%08%00?h%60%11%00~%0Cj4%7B%15z%01*6,%08%1A%00-%20%7D%0Ez%07=dz$f$%1D%13/%17'%02h%0226z%3E1)%19+%3E%3E%3C%1A%3E-%20%20,%3E%18$%60%1D%0B8z1*%06%1Ad%09.2%3Em%14%1Cw%7D%7F%3E6%7C'%3Ez%17!%00%08!%1D%1B%00%1D(3%0A%09%18%07s$%14%10b%11y#*o%0A%22,%0A%0D%1E%1A2%25%0F%20%01%1E11(er8$x%09-%1A=%0A%0D?%1E%03%04%1A%09%05%7Ch#%129;%7C1%7B%7C5%04%0A%0E'%1B%03f%1A%1C%07%07q$%14n%07#&%1F%08%20%1C%06%068~%12%09%0A.2%16%01c%1F7-+5bz#%07%7B%16%11=2%0A%0C%604z#%7D%01%3E6%0Ar%3Ew%0D%01%13*%20%082d1%17%7C$=%08%3Eq%0D%04%14b(sr%1F4%60z%1B%25%0F%13a%25%0F#%09)%00%0E%1B%7D9%178%3Cv(%0D*2;3%1A6o%0Af/%12%7C%1B5%19%22%0Dz%18%12%12x%1B&%00%07zs=$3%08%1F%0Ex%3E8a%11v%3C%7Ck%1A%051.-jaz9~%09%03%05*/%00%03%17b!%11%25'*%08%12,~%3E,$%07%02y%06.%12(%06%0D%3E%0F%04x*%05%02%3C%1F*xz,%3E%3E%1Es%1D%00%20f%04s;%3E+h%041%11xji1x9#*#~#2%7F%13%15%7C.y%7F%17%7B*)y%18+%0480y%032%07:urv%60*x+%1B!t%19)%07%3C%22ob%11)%7D:!%7B%04-r%01j%18%1B'%3E%04n%01y%15z%3C%185%1E',%0C.%05%03r&'/%3E.)%11*l:%01%16%00;:2&w14-%1B%04%1986;%07z+&%25h%04)%11%7Fc*b%60.!%037%08%05%12%7F%7F%16%099;#%19#&!%18%08e)%7B%01(%1F%257*%0A$%7B$-%3Ey4%04+of=%20%12%1C%13%06%13%0F%0A%00%1D%25%1E#%22*%01%08/5%04(kb2&#%1A/%11%130%1F%22n28#%7D%2055%1F#9%1Bn%20%01&%7B%1C%1A%19%7C%11%1D%3C6*%7B%16%0E%7D:i%20%1B#7)%14%19%0A%13%0Co%161x$%20%1C6%22r%07=%1B1%0D%0A%25?76%06-*%1A%60%14%20324%0F%3C$%03%11eng%1B%14%1C%09/5%60%20%60%1D%3E%0033%18v%1Ci%05r?vjg%7C%0D.%0F/(%03%19s%060%25%0E%17%05c))39%257%0D1#%22%12w#%3E%257.+%606%08$%22%0B%03%16%20%00%1A%7Dm%11%09%0F%1E%06a%13%12#%07?%12b%7Fq!;%0F1%062%05)?8)lxya%16%01%18%3E4r8,%0E%1C%3E%17%15%07%08%03%06%3E%12%06%0E)%03:%06%0A%1B%0C%07%1Bf%09%0A%3C%1F%1B%03,l%0Av%1Fi%0E-%09%02%1C%13%0Dy%0A%0F%1B%1C%18%00))%12'%1E%18%1D%0F%1D!%1Fj%08%0C%0B%11%00.(6%16%1B%1D%02)%07%3C%12%1E+%18z%0F%11%13%00%0A%0F%1B*2q%05%098%15%1A%15%02%06%10%1D$%0D%02%09%1A%12-9%18%08%08%15%04%09%1A%0A8%18'&9%0C%10%17%22%00(&5%14%06%00%7F%1B?%07s%04%02%0D%08%16%0A%09%1E%09.%14,%0C%02%0F*9%22&*%0D(%11%7D/%01%0D(%15%02%0A$%036%1E%7F%07%1A%0B+:=q%1E%07?a$%0B%1E%03%12%14%12%0B%18%0A%16%11%08%07*9m%11%1D%13%1A%09-'*%05x&%1C%13%7F%06)%09%1A%12%0E%06s%0D%0A%14%01%13%0A%086%15;%17%0A%0F%09'%02%15%3C%18%1A*%22%04%1A%1F%10%04%12%00%1B9%00%12%02%02%3C%16%08%15-8%0A%1B%3E%07,%103%0B%3E%13=;'%0A#%18%7F%078%0D?a1%06%7B)6%1D%22%0C$%072%1E$%0A:%08.%139%07%3C%0B%00%1Ex%04f%25%1B%05.%06)%0C%08%13%06%0E%0A%0D%0A%11(,%7F%01;%118%10%02%18*%13%1A%03%03%19l%15%1A%14%02%1E1%11=p%18%09j%12%20%0C%22%032%13:%03=7%0C%1D%1E%0D%08%00%0C%1F*%0A'%09%08%15%1F/%20#0%11%7B%09%0E%19%18%132%04,%0F%12%18$%03%1A%0F%12%16,%06%0A%06m%11%7B%06$6a%17%0A%0D%1E&6%11%12%04%12%0D.%04%02%04%02%07*%14%22%07%1A%19%1C%06%06%04%1A%03%3E%17%1A%0C%0A%1A%08%19%1A%00%3C%05.%1Ey-%18%08.%1B*%0C%1F%0F%10%1F%02%11,%20:=:%11%02%046%1A*%0B%0A%0F%0C%11%12%0A%12%07k;%02%07%12%01%0A%06%09%04,%0D%0A%16(*s%7F%14%16(,8%02%14%17%1C%02%12%18.%14(%0C%7F%0B%0B%01%0E%05%22%084%1E%20%06%3C%09a%1By%0A%1E#5%03%01(:%0A%10%17%20%09%08%22%12%17%7F%09%1A%08%14%17%1C%09f%18%0A%11%08%113%09l%17%08%0F%08%1E%3E7%22%11%04%040%1A-;%22%07%0A%1B%18%0B%07%0C%0A%19(%00'%09%18%13(%06%20%09a%14,%02%0A%05m%17&%0A%12%0A4%19%1C%0C%3C%0D%0E%00,%16%0E%19m%17%7F%07-)k%19~%03s%1E%08%1D%3C%0A%1B%09.%1C%18%00%04%1E.%1B%02%0B%02%02%13%14%04%0A%22%04(%1B%3E%08,%0C,%1F%01%0C#%25%3C%1D%0C-%09%08%60(%22%00%7B%06*%18%19%128%04*%1C8%08(%05%1C%13(%0B(%02:%00$%00s%00%1B%19$%09%0A%19%18%03%7F/%19%04%0A%17,%023%03%16%1A3%073%075%1D%1A%193%01?%60%01%0C9%0B%0A%1C%3E%0D%0C%08%13%1F%0E)%1A%0F%15%12%1A%09%07%22%14%13%06+(%0C%3E%16%7F%06s%0C:%138%09y%19a9%1A%13%3C%1B2%05(%11$%080%13,%19%04%06%0E%19%7D/%20%03a8s+s)%1A%3E?%11%7F%0Cj%01:%00*%0B%16%16%7F%03%1F%22#%12(%02:%0Bm%18%04%0F%7F%0D5%1A%0A%03(%0A#%16%20%02;%25%0A%1B%7D%00(%0A%3E7(&%7B%06%12%16%06%02~%0Dr%1F%19%0F%60%1Er%1D%09%0B8%1C%1B%00%22%16%05%01l%12!%0E%0C%0C1%1C#%08%19%05%0B%1A%19%0E2%0A%17%1B%08%0B%08%05-%1A%19%07%06%0C-%1A%20%11?%011;%25%11%22%05=%1E'%0D/%01%207;%0E%0A%0C:%17s%02%20%25%0B%07%1B/%12%04l;,%05%00%1E)=%0A%00%1B%7F%0B%02%3E%00%7D%04r%14%22%07/4.%01%1Bp%07%0Ba%18%7F%02%07%01l%18%25/:%0Ba%15%02%07=%025%18*%11,%0A0%138%05.%166%15%3C%09,%18%00%19$%02?%01/%00%13*%05%0A*:*%11,%066%17%7F%04%3C%0B%3E%14%60%11%06%1D+%1A%0E%02)%08%1E%14x%0E%06%22a%12%1B%0A%1E$%09%1Ds%00=%00%15%13.%07%03$4%18=%11,$2%3C-%08,%06?%1Df%0Ef%00?:f%11y%06m%15%0A58#%3E%18%20-%0A8%18#,.%1B%7D%14%08%1E,$%07(%16x%11#%0A4%11%1Bq%3E%02%03%17%1A0,%08%08&%1A0%1A%09%10%14'%03%3C?%12%15-%0B%06%0B4%18%3C1%0A%0B%10&y%16f%01n%11%0A%07%7F)%18-ym%0C%3C8%20;-.n%1E5*38nk%7C%1F).n%60$#a%0F!:$$3gyieypg%07%15%14&%0B%0A&%03%19*6#$+%11%016%0A%25%1D%17%09#%0A%17%3E4%3C6%03%0B%18%00%0A%06%3C%0B2%12%19%00%0E%7F%10%15%7B%00%05%0F%12%01%08x2%0F%0B3%7F%25%7B)%13%01%032%0A%19%3E%17%1D&%0A%184!%0D%10$%166%02%1A%009%1D%0A7%08$%02%1D-*~%05%19%0B(%04%07,%00%7B(d%0063%1C%12%11%11)%22%04.%11*%13%0Fw%3E%11%12%13%09!%08%11%1D%12?%01%08h%18%0E%0C%1F%08h%18%03%3C%1F%00%19%3C%00%11~%08a%18%00%09%09%18%12%11%08%7F%0A.%60.%04!%7C%00%11%09p%0A%0B%0C%15%25%0C!%07%0D%1C%1A%00%0C%1F%0D?*&%09%1A%1B%1D;%08%06%1C%20h%03%03%1F-!%25%0Ar%18%0F%1Bf)%0C!%03.=%00,2%07%1B%0A%18%00%0A%06%01#*,%12%0A6%19%20%20&%0B%00%19%09%05%0F=%08!%3C%17:~%0B'%1C%08%05%026f%09%0C%07%195%3E's%0A%0A%0F%19%0A%04?%1D%18%14(%00%01)1h%3C&*%0B8%132%04,,!g,%0C%01%0D%1B%1D/%16%7D%00%10%1D%04,%0E%0F%1F4:%0B%1A%0F%1B%0A%7F%02%0A:%00%09%01%0D9e%1B%12;%05%09$?!%1A%14%03)%0A%1C%25%00%0F%1B*%16%09%06%04'/%15$)%1Dz8%1F%0A%22x%19%1C%13%1C%0E%1A%058a%18uy%7C(%04y%03y%01%03)%3E%0F2x;),ux%1B2%03:3%3C%1D%3C%11%60%0E%1D/%18%14%11)%0C)%18%1F2%09%18'%03%11%0A4%25~1%01%7B1r%1C%12'%0E%1316%0B(%02%10%0A%0F%0C%05%02%08%0C%07%0B%1B%0A%00%25%0F%1Bb=%09%02%3E1%11%1298%0967%0As%1C~i9'4?%1B%0D$r.%1A%17%20b94&y+%20%255%7D9%0F%12%7B2:,%0D%1A=2r/i3%0F-/:(1*8%1D%00%10=1r%0E%03:)(%20%1Azi=%22%05%7D%1D:1%7C%04z%3C%0F%14!%15%3C%22%1F=%3E%13%3C%17%0C7~9%0F'%01%09s%13;%09%18%11s.&%03%0A#~%18,~63(&%05%22%1B%14%02/%1D%0F%08;%7B5%1Ay%14:%1A%07%1C%2517%25%1B8%03.7%094%12;%15c%08%02%1C/=%02%04r%09/7%19%099%20?h%06%00r1%1B.h%1D%12(%7F89%12%1B#%04a%12%09%0B%03%08)%11~r1;*%22:%03~%25%0A6%04,,%0F%11%1C%25)#%01m%12%1D%1B%1F4!%12z%04%3E/%00%1E&0%18%05/%3E%08%061%0F%13!xu%7C#%16%1E)%0A,%0F%0B7%0A%05%0C?3%09%3C)%3E%00%13%00%06(%3Ex%60&%3E*%1A=%12%60%1B%18%0D%3Co%1C%0F%00%0De0%09$%192y%1B%06&*)x=#%0A-%0Cz;%07*%1B%7B%19(%16%1A6?%1C4f8%252%25%1D#)s%25%08l%17%19%0C%0E%03%03%03%0A*8%1A2f%22%0C%12)%122%06'%089%1D3/$-%0B%18%07%01%03%7F%05%0D%1F=%06%22%18%0E%15%0A%04%1E%1C0%13*-%22%01%13d,%12%19%02%1C3%0A1%03%25?%60%02-%1E%1A%0Bh%25q%1D%04%1A%12z%0D%01%00%20b%1C9&%22:%02%01%06%25%19:!%0D,%07%08%03%3E%1A0(%7B8%3E%20/~~2d%0Et%02%0Di%02~%12%20%01%08%16%03%0B%09%1D%18%111%13%19%0F4%033%10,=%1A%01%0A6%3E#4%09,w%1C%14%1F%20y%14%7D*5&'%11!%25%1A%18%0A%0C#/)3,4%05%22i%16%1D%02%09%18%16)%02%05s&%1B%18%02%17('=%05%02%07%7B%05%1D%1B&u%1B%3C(%04#.%1C:%3E;#%14%01%1E)b%00u='1%1C-7*%7B76',r%25%1B%1B'*%1E%1B;%05%12%19%008%1F'%08%0B%1C%7B%17%19)%17%1E%1D%0F%1E*-%7B%0Fr6%1D%08%1C*%004%07/(?=)%1D3%1F:%0C%07z%0E/%09h2%199%60%16%18%1C'%0Dx%0B%3C%3C$t%0D%1F2f%1E7?w8%07%1A%02%7Dcj1%12%13%3C%00%0D%1C%05%0Az+;4%20%0F%06+-!%7Cv(%0F%12%05y#?%207h%1D%16%19%7D%1A%01?%08%09%07j%14'%13%13*3%1Ez5#*0%3Ex$!6%09!%1A+%04%01l%13%05*%19$%00%0A%20q&-%0B%15%04%16%1D$h2%02r%11?j8%1D%18!%7C6i%01%12x%25r%03=%0C3%19%0D(x%03*4%0F%00%22%19!z,%15x%0B%00%03%10c,%05x9%60$%04%15;%145%09%06%10%0Cwo#,%05%1F%19*e%06;&,mb1v%209.%12%064%09%1B+*x%0616a&%25%20%07/0%173%0D:%25%0A%01%7C%1B8%1C%08%1C%1E%10y%7C%0D%00%04%14%7D%22%10%1E%11%13%0A*%14%04(%1B%7B%7D%0D%009%0C%7D%09.%22%7C%0C&9l%22=%223,t%3C%19x)%3E%095%11+2:%16a%07(;-a$%18%25%1A%7B%15)%02j2w(&%60xrx%0C%3E%06%19%19%19t%03%031%20xn%22%60%07%08*%119y%0B%3C,+%1F%04#!e=%20~%03(8%13d%01%258c%3Eg%222%114%1A#-%1B2%1A,6;jx%22/%05%7D%05$~%1E%05%03%14x%18t%08%07%11/~%0D:%7B%13%7C%06i%14.9x,-4y%111#%60e%01%16r6m%00%25%15%0Fen%00~%02%7F%7D;5%11)-%7C%16%7Bru%0C%165i',?/#%08?%22%02%09%11%1E$%13f4(h?j=%14%60%00%1A/%00%7C6h%7B%18;%7C%09%3E1%0Dy4-%20%11%1B1%1E7$%11$%7Fw+d%0Dq*%05t%15%0A&($%15*2%1B$8%03%25(%05%04z:*x%071%0A%3Ch/6%0D%0F%09!!'%02%7C%094%1Ew%1F4#%22~%0A%096%1D%12*$281%04%1Aj%0C=%11f%7Ds-;+%0A%09#s4%12%09%1B%05%22%7D;%7B%3E%05%12/%1A%05x1%1A%7C%0E4z%25%7F-7c=r%08%0C%00%14%040%256j9%0A6%19&%1A*$7%1Az87#,%1D-%0B7-6%18%22t%1A%3E%11%0F%01%00%1D%015%00%1F!b%04%02,4i%00%02%25%02%7B%12%11r%0D$~%168!/.%1C%0F%14%0C%09%08%030%15%13%17#e%0Bc$%07!%17%0E%14%0D.%0A%7F%16!%0E%07%7C!i%11%12%18%0D(%0B:%03%08%03%00%08%173%04%60'-%11%0A%032e3!%02p%19zr%05%60)%7F%0B:%1E%0Ax%02%1F%1F'%7Cx!%7D%11i%18%02%07%1B%1C!%1A%00r%02k%02%0C,~%0A%3E%3C%19%0E#%7F%18%19%04%00%047%1A%022%1B?%1E%136%1D*9%04%14c%04*%02/.%05%06,%7F%1D.%15%7D%20%0A%7F%0D2%19%19%20x6%05&*%0F%0F*)%1C%15%00%1Bh%18%0A1%0E/%0B4%06%03!~!%11%129,&(9%091%7D%17%13f%22x2%00%0B%3E%0D%04%25%07n%12%1C(%0F%06%10%11%0A%0Cy%22%1Ed%13&!)2%1A%7B%05:%05m%17%20,$%0B5%1A%01%12%1C%25#%7B9%15%1F%14%03%1C/)%06c%13%11%0Ej'%0Bk%1B%13+%12%140%01%00/%00%25%3C%08%1Ev%0C%0A%0D%1D%07%0F%1B:+3&%0E%7C%1D(=9*=%0A%1A%16~%22%20%0C4%1A,j%13%1B%14%0A%19%0C%01%25%08%202%05%06#%135%0E%09%1F%0F%1B%13%1E%06.%14%0C%09z,.&%0D%18%0E3(;%0B%15%25l%00%04(;3%0C%3C%02%20%3Ex%0E%7F%04m%0A%0E%152%06%13%018&&v%20f(%0A=%22%3E%22%1D%11%18e)%1B%1F%00%1Dwi%20%18%0C%7B%088%09%20%17%1F%01!?25y%03%128&3%1A%1C%01%1A%02%17%3E%1C%0C%08%124%02#%14%18&&%18%085%3E2%0A&%03%11?2%0B'%19,=%08%0C%02,:d3%20%22%1B%1E3%0F%12.=%0F%0A/)%22%0Ck%088&~%1C%20%19%0F)%20((%0A%05%18~%7F=%05%0D-?-(%1Az.%11v1%03&%17%0D?(%19.%17%13%1A?%113%0A%00%0D%0C%05;%1B%1A%1F%1Fd%042%03%0Fl8?*%12%228%14%0Cs%05%03;?%25%00%0F%1F%12%60(u(/ma%195%1F,%1Ef%01,$%0F%18!%18%07%3E?%60%1D,%0F%1A-.)*%0C%7B6(7%00q%06%1B)2%1C+%0D%3E%0D1%1Cv,+;*%20%08%03%20%18'%13&%0D/(%60r/%1F/%0E%3C%0A#)%1Di%01#%10%0F#(%03*%13,%0A%0B%15%04%00#%02%18%09#%10%1A%07%01%03%02%22%1C%0Fl%11(%03=%20m%19%3C%12%0A%3E%1B%1F%7B%1B$%1A%0C=y5%0C,%0Fb;4%22-%08%1F,,%194%3E%18#l%03%1F%1F7'%03%0A%1C%60%11%12%02%1C;-%1D%0A$%7B%14)%22%1D%16%60:t2z&.%0B%3E%19%1A%11$6%1B%13!8%0F(%155z%0F%03,6a/1f%16%1E&?%00%7D%0B%1B)'u%1B%07%09?%3C)%12$%12%17x%19%0Cw=%06%7D5xc+%08%1D%03%13%00r1$%00%1A%256%13.y,%7Bn%1Cy#?%1A%3C%0725;,naz7%12%0Fki%12',%7Dj%1B%0El%1E9%08%148%20f%7F%0F%25%7C%18%19$%17'%03%22z;1%11%04%03=!%13(%12&8%08%3Ee&-%3C%0D%11%05yy-$%0A8=%0F%08%0C%11%14,%09%12%02%10%16%0A%12%0E&%17d$r%1D%19k%04%7B%158%7F,%17%22%00;%1C.%15%01%0B%057%1B;%7B)%25*t%17s%0F;%3Eic%09u%0A77%06%058%13%2563/%08%12&%18%02%7B%09%18%02a%01%1A+#%07%1D%0A?,%02%1F?%11%3E.%09%00!?%02p%1Cz3%17)%09y%00,%01%08)%02z1(%0A%13!%3E.%1E%00%10%1A%19%0B%01%094%0E;%12%13%1E%04%19%0C%1D9%7B%1B!(%0B7%0F%15%03(k?%09%00%7F%1B-%13%02w3~%0D!%25%15%04;=%13%7D-%7B%3C*%1Dx93%00n%3E%12s%00+%14%1D%02%0F%3C%3E%1Bg)2%0A~h%1A%7C%15%1D,m%00%7D'%00v%0Fd%1F%0B&%08%133!%10%01%25%0Ad%00%03%07'o8%08%25&e%0Da%7Ds,%3E;:/tf%0A38:5%06%09%20%1A%7Bx%1A%25%18;%017%25%01%17%01%07%00#9t'%7F%03$%7C%17%25!%08%09%14%16%1D-#(%0F%0C7%1F%00:=0$%0E%0C%0A%1Fmg%0A%04%07#%1C%15%03y%02~%03%072qx?k*%0C()%067%03%05%11:=%13%11%07%0C,%16%3E%25%7F%05%086%1F!%07%0C%1Cz*%1A./9:6%18%0E%0B'%0C%60%18%20%11%04,%10%04%7F2=$*%3E/%0Ey*ag%0Dq%06%09%01%02%1Dq9%02%0E%09%7B%17%12&r%01%026%7D):%14%11%05-%0C%03!1%0F&y%14%1F*%222%7B/%11),%06(l7.p~;n%7B%11%0E%0F)nh%0F%00)%17%01b%1A4f-%20%1A%0Dw%07=%01%13%0F9(+a%14?39%1F%60%25r3%18x!';%05%0A%1F%1D%15%03%0Bf%1B%0Ag%0Eu%7D%0D%606%7Dy%3C%1B%11%1Fx%03-%0Dr%09%3C%25$y%0De8)%7B%221*')%03e%01;..s%08aa#%15383%1D:%25%12;6%01,%03%04'?%07/2%7D%1F%3C*!/%25%01,4%3C6%60%7C7%02%03w.e%00%07%01%00%099;%1F-7#-l%7Dr/%25(%09i=%00%09%0Ct*'+'%08*8'%16%03/%16%25%034%13%0B:%16%11%13%7B%18)%22./%1F+)d%03'&w%08%201%02.%19;$%7D%15;%7D%1F%1F:%25%3Ew%1Ec%1Fw%25%16/c8%03(%01%1C%16r/%0A+,3%0Ax~v+#%1B0=%22?7s)2%05%609%3E7%7F*l1%19u%1D:%11'x%04%04%3Er(%7C+3%00%1C%1A(l%0Ec-d%7Cw%13%22%09%08(+*%0Caiy%0Fx%0F:4r%06%11~8&x.%1Cx%60%12s%033%065%08%0F%09'(%60%22%0D8%0A%1B%1C%19%0A4s%04m%1Exr8%7Do%00%7Bj';03%1Bjy%19%15(ft%7F*k%04~r%06c%096%3Ev=%14n(%25%0A%60%3C%1A%1F%0Ejr%16ng%0F'%1By;%3E)'%1E%1E:%00-#%058%12%18%1Dw%0Ec%16%00%1B%19%038%13%00%02r%1D%1E%12%7D%1E5%08%3C%094%0Ax%05~%1Ec%1B%11%0E%20%03%7D%1A7%0D%7D=%7D%1E7%0F%7D:&%1Dv%1B4%13'%1D/%0A%0Fk&%12%00#8%1C%00%0E%19%118%096%03'%18%0F2%06%02q%0C%0Fn%1C)7%19%1E%08c%0D%11%0Cc%17%00%0D%008%7D%16%7D%1B4%12-%0B%7D)%00:(%0F%7D%127%04(?%3E%09'%06:;%7D%1D'.%0F=6%0F/.8%00%00%017(%0F2%08%0Al%00%1E%00%11%0A%00%19%7C%00%00!rz%7Fnb%1Fr%7C%7D))3q#6%11(8%05%03%7F-%60%0E%0B-7%15a%259s9ta%1F%19%0E%07%03b%13p%139ic%02%11r~6%00%20%0Bx%7F6%1F%186,%01!(%0D%14%0F%083(%12%0D%1B%7Ci%1D%1A%0C%7F%01%08%1D%03q%7F%03#'%1A%04%00%06%18%11%0E%0C%254%14%1C%3C%11%077*%00%0C8f4*%1Efs%22%1C2%1Dx9%0A%03;a(%0C%1E%1E%0F'%12%0C%00%1Cn%16%1B8%7B%07%08%19%7F%0E%1A7%1A%1D%0E9%7F%07%14%00?+%7D%0B.%19%256%07%7C7(%0E%0C8%07%10%1Df8%02%02%10'y%02%7F%0C%0A%1F(%0F%0A%046%1D2%0F%18%7C%0C%00-)%0A%0B%1E%15$%04%3E%7Fm%14%12%04$%0D%0E(%1C;%1C%7Fi%1F;6:~h(:;%7C%22%00:%7D%061%1F:a,%04%3E~lb(9%1A%0A%1A%11%1A+%20%0B3%05=6%036%12%1E%1F8&%1E-:-%062%0B%12%18&%0D,%0D%0E%1E%0A%03%1C%02%1A%16z%06f%1F%20%1A)9x~%16b%04q%00%19,%17%0A%06'%0Ao%18%02%04%02%08m%17%1C6(~%1E%1729%3E%7D.%00%25qr~6%16%1Es1%184b%7F%07%06%0Cm%18.%08%3C%0F%0E%1E%04%11%04%1E%0E%1A%1A%04y%05%08%1Fy%08%06%7Fk%1B:s&%1E%0C%14%1A*%0142%14%3C%07.%1E%3C%1F$%00(%7Dm%11%1A*%3E%0A%10%11%3C%038%03a%60%02%08-%1D4%60%04s%09%1E%00%17%20%0C%04%06%1B%1D#%11%06%09%0E%1C1pz%0Bk*%0A%0B%3E%1E;%05,%05-%09%0C(%1E%0A%0D%0B5b%0E%023%07r%1Arr3%01%10%14%1C%11%06%096%11%1E%0F%11%04%1F*%3E%0Az%7C%18%14%0D%03%0A%095%16~%0D.%1El%1C3%08%01%02r%17%01%0D%22%003%07%01%11%01%044)8%05:7:%17%22%03%08%1B%1C%13%7Bp.%00%10%17%60;%0C%05k%1C%7B%0D%059oc?*)%1B0%1F:%0E%0E%07*%00%3C;%1D%05%3Cc%60%0C%09%03)%00%22%07*%03%1D*%18%0E$%1E%0F*(%081%1A%0Faf%19%11%03l%1A%0D%13;4%20%00,%11%12%1E%1E%1F=s%1A%7F%1A%1C%7C&%7D%0C-%1A%3C%0B:%1E-%19sq/%01+%07/%08~%01%1B%1D$%09%1E%06=%1C%20%11*%01%60%1D%7D%0A%0A%7F%1F)!q,%0D%17%02%0F%0D%12%07/c#%11%05%00%0D%60?%0E!%01%14%1B%3C%0A%22%00.%1C-p%22%1E(%1F8%0Af78%1F,%04r%1B#%1Bxr%18%04%03%1C$%11y%7Co%1D%00%16%03%08%1E%02%0A%04%04%0F%00%1288%0D%07.%14?%10%1D&%0E%021%07*%0C%1D%3Cy%09%07#h%14%7D%03%12%0F%01%1B%13%0C%13%03m%06%13%0F/%09%08%14%00%162%0B%1E%07%18(s%0B%12%06s%03%01%0C%18%16%06%02%05%1A%1E%11x%0E2%0F5(%01%00%05%0C%09*%7D%04%12%0D%1Ac'p%09%0Ar%12%04%00%60%7D%1A%60%0E%02%1A'%0A%15%01%12,4%1B79%03;~%1C73%04%02%0D%17%14?%19?%06%60%05%0E%02%3C%09%18$%0A.%0D%1A%01%1D%1A%06%60%08%1B%14%1A%00%05%08%1B%16%7F%02%0D%080%14(%05%00%0D%15%12%0D%12%1B%1A)%11#%021%0Fr'%1B%0D%046%03(%0A%03#%16%00%15$%063%02%08%12%138%12%0B?%19%3E8%3E4r%139)%1F%0A%08b&%00y%1C%1D7y%14%0C%0C%18!%124%0A:4%18%25%0C%13%1E%00!%13%08,?m!*%00x%04%20%15)%09%12%0D#%18%0E8,&%18%11%22%04$%06%18%11%086s%0Ft%17%0A%048%06%00%18%0A%03%05%19%18%17~%11%12%0F0%15z%02,%0A%11%1B(%042%08%3E%18%05%09%1D%228%13~&,%09%1F%14%0A3%0A82%16*%061%19%01%1F%13%0E%7F8%14#;%028%0B%20%13:%04%19'l%172%05%1A&.%15=%0A%08%0A%08%18%089%3C%0At%14.%11$%08ob%1E%04%12%08m%13%60%0C%3E%080%16%0A%03%06;(%18%13%06%0E%09t%16*%04%3E%0D%00%11%0C%05%1A%0C%00%15%02%05$%06%1A%1B*%00%1A#7;%7D%04z%08%1B%15%0C%00%1F%1D%12:1%06%12;%00%25%0D%12%7F=h%16%22%09,=%08%22%00%04%09%0C.%14%1A%09%07%06-:3&%1C~%0D%08%0A%06y%18j%192%07%0E%3C:%16$%04%12%06h%1E~r%20%0B,)%12%07%09%0B2%11%3E%00%1A%25?%1D%18%14%02%0D%1F%18%1B%03%13%0Bt%1A%1F%132%09%3E%16f%11f%01r9%0A02;%18!%1C%17z'%3E%20,3,!%08!%1A1%1A:%1F%02%0D%19%02%09%20%13%1B%05f~k%3C&p&%0F1%189%061%1C:b%22%05%03%1F%01%01%0Cq%227.%16%02%02%05%084%14%1A%07%7F%09%18%14%00%06x%0B%3E%18%224%09%25%10%143%16~%0C+%16&%03:;r7y%15%0E%0D4!%3C%06%3E%19m&%12%003%0B6%13%001%00:%3E$%7F%03'%01%1B%1Es/x%1E%3E%13&s%06%06%18%13%12%0A%0E%3E*%17y.#%08m%16%7F%04%3E%0B%16%16%22q-%00%3E%18%088%1C%7C.%12%3C%02%1A%224%18%18%03%1A%0B%1B%14%25%15%0C%08,%22%1D%07,%0C%20%25z%03%04%09#%07%0A%07%7F%0B0%07%02%02%3C%08%13%022%02.8%0A#%1C%07.8%3C!%00+%05%19r$%600%7F=%12%11%090%0984$%093x%04%1E%20%0A%09%1E%03:%11%22%03%7D%09a%1D(1,%0C%12$(7(:m%15s1%1E%0Ca%22s.%08%3C:%18%18*%09%0C%20!%18%05(%1B%60%15%187%07%25%20%12%183%188r;2.%06%3E%18%202.,%3C%20?%000%1A;%12$%005%7F%3C!7*%14%00%0F1%11%7Bs)%1B%1E%06%1Eq%0C%0C?%1F*%09%13%09l!*%05$:%20%11%120~%3C%00$%061%13%07*!%0F.~%06%09%3C84,%09%20%13%7F%02~%0B;%01%11r%22%0A%20;%07%0Bf%0D#%17%3E23%16l%17#%05%1F%064%15r%02%18%0Aa%01r%19%0F!%08%15%04%061%1D%10%11!%10%1A%20%15%14%07/%1A%257%1F%01%13%22%08i%25*%09%0F%3C(8%3C%05(%06%14%12%19%06$%0B,%12'%0C%04%0C%20!:%07%1F:6%25%0A%09%00%08%15%14%0F..%0B%16%14-%05%3C%0B%00%17$%04%09%0F%0F%3E%3C%16%0A%06%0D$/%041;4=10#%1A#?%077%06%0F%08%3E,%06)%08%15#r%00%0C%0A0%162%03*%08*%20&%059!;#%3E%03:%0C;!%0F%09)?4%15%03%00%19)%09%1F83#%0B%3E%14%7C.%03!%00%13%030%7D%0Fh%01%1B%09%038-%15%251%0C%3C%09%20%2571%3E:c%257%18%22%0C%1B9%05%11%0C%01?97%13;+!x79!o&s5%0A%7D%12%25%0F4%02$8%17.5%7D%0Fr%08%0A$&%0B6%17%0E8&%0C%3E4,%1B%0C%0C.%11%1A%1B%0C%0D%085%1A%20*%0D%3C!,%20*%0F.3%3C%252%0D%0D%02%3C%22*%0A.6%3C%18%18%06%10%14%1A%22*%0D%18%116sg%09+1;1'+y%17.%209=u%04#$kw-8k%05$--?9m%7D%7Dmasm%02%02%1D=%01%00#%14%101%3C)!%3C%18%19%3C%00%20%0A%1E%12)%00%12)='%3C%09%0E%0F%09%11%0C6%0E%25%1B%02%0A%04z%07%1C%60%0A%0F%0A%05%08%13s%10%09%19%18%06%1A%04%05%0A%09%01%0Ay,9%1B%1B%0A$2%3C%1A%11)/%1A%0A%14%05!%0E%0C%1C=5f%08%1C%077%03~*#-%18%14%08%06%0C%1C%18%11%0042-%18%13%00%02(=%18%11%22%08*v%18',y%3C%1D0%14.%13%3C%01%0B%1B%0E(%7D%1Fj!%0A%00%07%01%1A%19'%0B%0A%0F%0E?!%13%06*%18%11%19&%0A%03%143%25%13%20%018%15s%0A%25%0F%0D%13&t.(27%25%0B%0A%0F%1D#%25,%3E%3E%00%16%1D%25%13+h%19)%13%7F%1D1%12z%17%0F%0F0%03z%08~;%08%13%0F&!%1F%18%1F:%17%07%160%15%0A%0B%3C*0%15%1E8%1F:%11=*%002&h%01%088%20%04%13%14%0E;%20%03%0A%02%06%07x%20%11%7B%0F%22%0F,%16)/%10%13%1Ah%0A%0A%06)%06h%08#%14%07'=%16%1E%15%03%22of(#%3C%0F/&%3E%1B%3E%02ji%03$%0A%0F%0E%11%09%22%12;%1C%11%1B%13=(m%16%05%0A%0E%1E%1B%7D%1D.%0A%01%0E8%22%09%09%0F%1D%09%0A%0C;!%18%148%00%0F%18%12%1F%11&%12%1F%1C%1A3&%01%22%038%20%14%19~%607(6%20-(%03%0A#%04%0Ak%1F%19%0D8%0A%16%1D%01%25%0A%25o%12%09%18-%0D*#%22%06(&%3E1%1A%00%097%01%16#%0D%1A%0B%13%02*6%18%0Dme$%0C%22%0C%1F%11%0F%0E=%1F%08e#2%1E%05%0F)%191%12%1E)%14%00%1B%07%02%03%18%00t%1B%04%18%16%196%136h%16%1E.%7F6h%1D%03%0C'%06%136%1C%00*%09%0A%1B3%18;%010%19xt%7B%16%1B%11%0C.8%160%13%1E%12%18%195$*y%12%20%00%1D%0A%03%03%09%10%22%18%10%02%25%1A%03(%04%0A%08%0E%193%13%1D*%1A%13%08%138!67?%19:*%134%1D%158;%095*%16/=%0D42%19%08%16)9=4%1F9%1C%14%3C'3&%16%1A%0E%05'%22ka%7B%0D'%0F%1F%1D%03%18%1D%07%1E!%13-:&j;r%18(,-%13&%22%1D%19%3C*%04%251+%3C;f%20%7C%0C%08*%1C;!%7Ck%18'%12%1B%7F%0B%12%05#x%1A)%09%0A%05%02%1C%0Ae$%14%1E=::%1E%19$%7B%01%17%0F)%7B%7B%17%1D10%25+%0D8%3E%10%7D%22.i$%00%0F%1D%20%0Ay%09%0E'(%19%0E8%08%1D0$%3C%22%18%0B%18%192%0D,&%18%3C9s!/l7%7F%02%09%1D)h8,%7B%0F;8%048%18?%3E5%02%03%03%25(%02,%039%0F%3E%19%09(,90%05%00$%3C'%15%16%04%25%018-h%19.%07?8)~/%03%0D%1E%18%0A%07#~%15%13&%0A%0E%3E%0A:%00%19)7(8%0F%0B2%25%00(%7C'%05%7C%00%3E=%00%04%0Bod%1C%0E%20%22%1D%22%19%02%09;%09%02%7C91%25!%03%7C,$x;%15%08+:%19m8#s%7F/3%22%06u%7F%0345%0Dt%13$%3C4%7F%10%0Ae%0Dd%7D(%60%057%7D%05u%0C%028=%7F%0C%3Ce47%22%0B%1A8%1C$%02%08%026%13?*%12%3E%01%1D%19%0E&y%1F%3C%20%0A%00%08+67=%08%1A%0F;%1A%04%02$6%1E%19%1A%16%0F%0B%18%11%1D('%7B1%17%0Ay%3C%0C%1F%14%20%0D2%1F%1F%3C9.%12%0D%3E%09%07v!%0B%0B:,(%19%14%1C%05%1D%13%05%06%03%06%60%0B%11%22%09%7B%7C%09%0A%1A%1C%20%7C&%3E%0C2%18%1A#%09%05l?%05%10%09%19-%1C'%09%1F%07?%1A%3E%13%0D%0F%10%0A%191%05%09.%12%0C%0Cy%05.%11%01%1B%7F*%17%16%1C*.%1C5%18%1E%25%119%18%13%050%006t$:$%0Fz%14b%0Cs(%1C%18%1Fzv%1A*%09))%12%05'%1Dg%1C4%06%1Fl%1D/%03%1A%7D%004%02%00~%08-%1A%1Cv%12%7Cl%60;%11/*8%01%09x%1B%3E?2:6%0F%01?!%0A%02%3E%14%08d%01s$%09?%14~%04%09e%00%25%111%3Ce%0Fb%0Dp%22?2%12%12%08?ej1%25%18/%0Ct7&*%09~%14b%05p%1F%1F.%09%1C%20/*1%14%09#~%7C%01i%18%00%007.%16%0D%00%05%1F%60%04x%05!*%1C%1B%3C%18%20%1A%13%12%1F#%22%7D(%19%082.%0Ah%02:%17;%1A%0B7%1D%0C%1A%01%1C%17%00qs%0F%10'%0A%04%3C%7F)'~%0C%25%14%18#%11%0Af&%16%14%3E5%0E*%3E%02%07%07%0F%1D%08%17&$y%0B%109%7C%06%7F!#%7D%04$%05%02%20%16&%0799%1Di%0A%16.;%3E%15%1F%0E%094%0D%07%0E%13%08v+%25%07%0F%3E%257%1Dy9%1C%05%08b%06+%05/o%17y.)%03##'%03$63%3Ex%18s%0F,%00%7Fu%1F%20j%03x%18;%1E!h%20%081'm)%05%11%7F9#%3Ez)~%20+%00%7F;%7C%1E+3%7Cv-%03%10%11%07v=?%20%3E%7B%0F%227%0F%05%3E%0F$%1Fa$%11%089e%16!2y%0C:%0D%049%0B%1E%09.c35%11%05;%7B%04&%01,%16%14%1Cx%0F**%3C%12v%25~,a%20#=zlg%7B%17%0Dw%0D6%3E9%0F%7B%179%7F3%22!%17(%07&%3C%07%0B%19%06.%08-%15%1C,%0A%0A%25%08%25%07&?'m%19%13t-%08a%00%01%22%0A%14%01a-.3%20t6'x%7F%04%187%01q%1B~%08&%02%02,;%132%606,%04!%18%7D%0D%22%19%18e%0A%22%08%075%15%026%18%0F)%12)v%1B9/&)%0F%0Az%13%0526%01);%11,23%0Fo%11%11r%0A%070%08%0El%19%7C%1A7%3Cl%22)%0C7%0E%13/%0Aoa%7F%11,%0D%10%14%09%04%0C9%157!%00%01e*%13%11%03%1E%00%3E3%0A%0B%12c%08%1C%0Fyz=%16&%1F$yw=g&%09x!?%09%60)%09%1An%3Ez&%1F(%16%7B8%05%03y%1A%1F-0f*r%3Es-%02)%1B%7D%25l%0A%0C%08%13%1A%07,%07%3E%01%3C%0A%09%05%1D%3E%7C6%06%17:%7D%1F%13rv%1A'-9%3C%07%1A%00$-#=%1Ed%1B6-~%0883%05%18%09%1C%18%02%1B%1A%3E%1B*s.%09~%166,6#6%60i,%02y%1E?%258%09%20/a%1E~#39%1D&%1B$%09v3d%25s((?%05%19p%08%04%11%05%076%0F%17%11%11$%03x/8'%1E%17,(r7%0F&%0C)%09%11%11%00%7D%0C%009?%04,%0F%08%07%7F0%60+0%22%7F%07%20z%159%03%00%3C&j%12%7D%03%0A%09%00&%09%03%08'%1C;%07%15%0C%1F/%11%0D%02/%06,%1E$%1B%02er%22!0%0E)%1F7%06%02%189%60%06%7F%02%60%05m%01%0E/#(%1A%01&%02%07%0D%0F6%08%0B%7F'%13;=p%22(%1C(%0A$%05%1B%1A%7Dy%12%1E!-%1A:+%06#%1F%1D=5$c%13%3Cr%0F'9%17:=q%026%1F%04/%00%3E%09(%02%1203w%0D%17%25%0F%01%7C%0B6%019%7C%1D+f/%0A%12%14%18%02%0E4#%22n%1F%0Au%13zn8%1A%15%60%091%00%3E%12f%0B%1851u$4%16&8%00%1E)%0D%11%06%15.%22%146%02t%11%05%0D%3C%031%07%1B%0B?%7C%0B%60$:;?%08%00%1B0?;s%1D%1D7%3C%05%22%07%17%15%12%04%02*#%0E%1C:%15%12;!!%07%0D~%7D%16?%12y36%15%13y%04%02%0F%15%19%06l3)%0D5%03%03%02%0B%0C%19%7D%0B%0A%02i%07%138%22%1D%10)%0A6,%1D56%202%01%1B%13%1A8%0Az%25%03%00%1E%17%20x1b10%0C%0F,%1B%1D(%22%3E%1B%19%04%0D%7F8%16%05%18);:0=%25s%00x%0E%60%22-;%02;;%7F%05%00%14.%03%3Cq%09%07%1D%07%031%1Dv)%3C%1B;3%22t%1A%09%22%0A%1F%1F%08%001%0D4%09!;%18%05%03i%1C%0D%06;%04%0C1%009%0D%0B(%05%1Er%1B%0C%17%1B%7F%00%7D%0A%3E%20%3E%06s%0F(h35%1F%3C%1C!;%0B/xa%3Cr%05?%18.%07;%1B%1E%1Fh%20%02%15%13%0A%16%7B%1C%0Cz%22%10:y%16%19%01%1B5%08%20%19%06%60%7B%1Cs3%0F%14%05%09%08(%1C%1D%13,%02,%3C0%1C%0Ap%09c%1D%15%0Dx%1Cx%1E%1E=3%0F%06%1E%1A3',%17%186~0%09$%1D%25%08%10%02&%18%11%7C%19#%1D.%25%7B9:$%0Ad,%25%25'o%11%0C1,%01%18%17%3C%16,%03%18;%04%03%059??%3C)%12%0C%08%08%7F%0F,%16%1C%1B%1D0%09%7B%10a%11%00%07%005%1Cx%04!%3C%11%08%0A%11%1A%1Bo%03%03)%1F%20=%01%1E%10'/t%05z.x-%3E:'j2%09i%06%06%08%03'2%1E#%0A%3C%7F%01%00%1D%14%3C4%0F%60)%08z6+f%080%0F%7B%08*%0C%16!%04%03%06&0%114%602%13)%07(+=f%02!&7%059%0F/(%1A:%115%7C9%0A%03;7%11x2%20%11%12%00%226%16%06%18:~%17%3C1%17%13%16%14c/4,*,%22.%19%7C;8%15&6%0F4%156'2%3E:%0C8s%05%207%3C%06s4,%7B:%07%0F6:%7D%0C%19=%07*)+a%1E0%20%03%20?%3C;%22&.%0A1%22%1B%0B+%06%1A%0E1w%08g%02q%20(h%04%0A%11%1A,%3E%1B%06+%00!!1&+%05?%08%1F%1A%25%20%19.f.6%02'i%3C%3E6%00%1F%15$x%008%01%3E%14%7C%16%01%3C=%3C96%1Ay(&#u$66f%11%0E%7D%0D%0E%00%60)'%0D7*%1D1:%25%0B=%7D%1B%11#%00%3C3%11/%3E2%19%1D01%7C%16%19(x)%19nar#%0F#%17%22(%04%3C,%1D*%7D%0D%20'%00%193j%7B4%0E%22%01%0F%7D%3C%112$%093%20%1D%18%061%3E%0F!e?;%12%06%0F%1Fs73%00%1B%22?3%0Cc%14%19)%07%1D+,$=%09%06%16a2(%088!%0D%1C%7Dy%06%1C*%19y%1B%224%03%1B;%11%01%17%1E%07'qz%1F%11!%1B1?!l=!;!%06a$8%11!%0B*%3Cz%22%07%7F4%3C%120%7B%087:%253%7C~m%22f%0A(%20%1D4%1C%18=8*3.%0B!%3E%18f-r%3C%1C:%00%01+%07%7D%01%08%04x--%60%15?%15.,%08%01!#,%7C%17iz/%0C-5%04/%10z6%60%14y%0Ax%0D79-%10%18x%15d)%13%04%1C+%07%3Cy%7F$%0A%08)%0F%7B!oh&2z?8%01%1B%1B-8/%02'j%0A%7Ca%60%1B%07sc%1Bh)%09:;%14c/q%19%18rg%0D%12''%0B%0A.y::%60%1A&(%04%04=%191%0B&9!%22f4%1E+:h%0F&%7C%01%01%7B88%074%0E'%1Bp%00%3E0b%7B%00%3C%06%17%15(4s%07%3E%1A%03%08%07%0B2%3E%00/2*%082%12%258%17%3E%1E%04%1B%09~m%0A20%01%20%15%1F)%03%06%06%03c%19p%1F%08%09?%1B%07%1D%1F%11*,%19%0E%18%0Dc%2509%19%0Fd%07%07%13%14-%25%0Fv$'%12%13$6%11%0F%0C%00%02%0A%0A%16%0D%7B%25%05%1B%09%00%7Bf%079w%01%03rp%7Fx:%1A%1A'$6%1B%1A%0F%14%0D%22+9(%0A~%0C%1A%11$%06%00%0C%1C%01,6,&:%09,(98%0B%15%08%10%1D(%0D1%7Fj948%06%1F%07%3E8:(%7D#%7C%06%1F%25%1E%05%0A$0%17%04,%3Cy%01%00%20%00%7Dxi%20%253%03%013$3l%7D%00*%03%3C%20%02'*'s4%7F%06kg%04%12%1Av%1A%11%1Cp%0D$%11%7B%0C%17%3E:%15%1E3%0B&%1E:5%0El)-%13%60~.%03%19%01%03.&s%22h*26r%3E63%13%18%7F~%01(%03/9%0F%1E(%7F0%1F%00%00%1E%7D%11%13%7F%0Ff3qzz=a&%04rc%3C%04%7B%15z8%20=%01$(c%0C%7B%12%18%008%3C%02%13xs#%605%3C'%3C(%08#%1D%11%06%093%20%1D*%60%09-(.+%7B9%20c2%03%1A)%14%188t%0A%1A%3E%15%1A%20.7h%17%04%07%02-%0B%16((;&%0A%1Fz%12%1E8r%3C%22%12&%221%02%22%00%057%1D*%1D%25%0C74%20!%18%1E#%3E3%096%0E7%1F%17%08%16%0C%08h%11%13*%03?%0A%19%0D%08%0E%7D0g%1E%0A%3C'%1E%1C%03%0D#%05%1B$%0C%101%3C%1B#%08%02%0Cz%1B%093%13%0F/%3E3&%00%05/%3E%14%0Eu%03y%1F%12,p,%0F%1A4%0A%13#%0C*%02%02%05%0F)%1D8%046$%3Ea?%04%08%1A%0F%1A'=92%25%11h%1A%00%7Cv%60%12%12%00&%0Cje%11%1B,%1F,a8%03%19)%0C%11?u9!%138%3C%10#%04%0C%01%7B%10%02)*%11'%02%1D%0D*%11%1E1%7B6ti%05%05-w%20%13/%05s)!%602)&%0B%187:%25%0A%1F;%12%22q%02&%0A%12/%0F%1A%17%108%0A%02%0C%04.%02%25.~65%14%03%02'%0A,%11!%00%7F%0Dthfx/%0A%09%13*6(%1B%1C'%12%00.%1C4%60$)/%0C+%12%046y%0C!(%1B%0B,%0Cl%09)%00%25%0F%1D%06%20%00%12%0D%00%12%02%00%06%1C%1F4%00q%03w0%60%3C%03%04%0F%03%11%18&f%7Bk%12%7B&%60!;%0A%3E%00%11%0A(7=y*9%18(%08%00%3E~;%14%11%05%0E%07/%14=x%18%0Fi%12%7D%05#%0Fi%01,&:%0A%1B%0A$%0C%3C%0A.%12%03qy)%00%11%13%008%00%3E%12%099%02%0F%1A'%03%03%0C~m:,%00%7F%0D%1C%14%00%00%7C*(%12%3C1r%17%0C%13%7B%02%06%0D*%13%01%18(%0D5%02/%00s%0D.%01%08%02%22%0D(%01%3C%08:$:7)%03%00%0A(%13%7D%02%0C%0D4%14r%02~%0B%1D7%1E.r%0C%15%11%025,%0F*%11r%00%25%0C%1F%3C%18)/%0C%1E%0A%09)%13%0F:%11&%03x*%1Dd%1C%222%22-%12%20%05%08%0C%0C%13%7F&%3E%7F%0A%12,%03%06%0D%0A%20%18)%0D$59%0C)%1D$0%14$%13%18%0A%179%1E)%1F9=9*%05*$%60:&%02%7D%1F%1D8*%02r%0F%01%12%1F9%07%0C.%0A/%00%086n%1Df%17)%0F%11%11%09%05%1E%0C%1C%02x%252$%0D7&%13%7C%0A.%02%22&%25%0A%11%13%13%02x%0D-%14%05%02$%1D(:%20%03%00%7Bn%12(%17%07%3E%3E%11sy)%0Ft%60!%00%1A%0C!7%08%05;!%01%122%00%19&+%02%13%10x!i%19%25%13$%0Ch8(%10%7B90%11(%00%11%0Fm7%7B%18.9!'-9$%1F07%07%00#%17:%12%7B(xz%113&%05%04%0Fta%0F)y%0F%11%02=%033%1Dr8(%13%0E%1Fa%12%0C%03:%0C%08%09%12-'%1A6%12%19%12#%1C3%04%01%15;%1A;%15~%15%7F%0F%1D%03'%12%03%1C%0F%03%25%10%0E%0F%17%03%06+%0A%1F%113%0F%15/%1A%60%01x%12'%1F3%04%3C&%1F%1D#%03%07%15%1A%142%1A%00+.%1Fk%033%12%3C4%11%03%11%12%13%1D6%16~%02%07%0C%1Ch%1B%12%01%1Ah%04%05%12f%1A%03%0A%1E%08=64%03%0C%15:)-%60%1A%15s)%1A*%088%08&%12%12r*:)%20*2;%019()%00;*7=8%08%03%7D4:7,%006%7Cu%12'4g%0C5%25)2:;04gxy%7Dagg%08%07%0Ak%1A%0A)%11%078'#(%1A%0B%0F7%09%07%20%08*%11.%03%0C%0B%18%1E,%0C%02%0C%1E%11%0E&%0C!%1A%07%0A9,%03.%12%224%0A&%3E%1F:.%1A%0C%129%0At!%078%05:p%0C%02=9%0A%03y%0F%16%01%0F4%02%0C(%11%0A2%7B)%12%19%02(%02%19%0E8%09*%1A(8%1D%0A%05%18%07%18%1D%7F1,xm%11%0Ep1?%153%0A%02:%0B%0A%1F%07/%0A%0F%037%0A%18%209%03%05%1F%08z8%08%1B%08%04%0A%0C2%11.&%09%19%18%15%20r%0A%0C=g%1F(%02%1E8)#*%0A%06%1C%11%1F,r!%1B;%08%00%1C%19:%7B%01%06%20%09%15%1Fs6,%096%11%11%15%02%0F=7;-%11%080%60#%09?%07%167%08*%11%0B%3E%1F%19%06,%0F%15%01%1D7%0A%3C=5%7F%0C%0F-29s*%1D%1B=&/%08%09%1A;%1F%0A%00%0F%197%15%05%04%22%17r%1D%1F*;%7C%08)%0A%03%05%14%09%25%09%22%7F+:%053%06%19%1Da6%0Cs!84%60%20%0Es:??%0A,)%7C%0F%19%0A%00(ym%1E2)1!%01%60,%17%09%01h*%18)2%05%1A%13%7B;%0F%09t'%1A%11%1E7%20c%7D%00%0Az%15$#.%1A)%0A=%1E*%01%1B8&%1D%068%7F%0E%20%0A%00%0Cy.%3C%091%054%15%17#%19%09%0A?%05)$%0A%0F%12%09%1D&%0A%0F*%1B9)%04%036%01;9$,25%0C*8%1D%1B6%0A%00;%1F%15%19%00%08s%07%00%19%20%05#/%13(%09%0B%01%05mi%09&=%04%1D%01%0E%0D%08%25%1Be%12%00%0A%18h%3C%08%093*%081%1F%13*%0B%1D1%1D%19%09%0D%1E%01%19%03'%3E%20a#1%0A%02%09%0A%25%0E~8%09e%0F-%06%03ja%1F7%1A9%1C4-5%18/,%07,%22%05:/$%1A',%1Dkh%7B+?7k%01x0%08~%00%3Cs%18z9%1C%04%7F9%1Fv#%04%0C61%1D:%13y$%00;%038%60%2019%1B:%13%13~%3C.%14y2%1A%1C%3C%25z'%1F%17:%1C%0D%22%08%057%06%0F39%0D%182y%0A)+%032x/8%1C%11%16s;%02%25%11%11;8$/%1Ea%09%15%11;(%14%11s%0A),a:/,=8%1Fz7%60#.%06%04s%1De%2093r%1F!o4%7B+%02%05kgfs%03c1*%0D%0D%3E%7Dh'%20%20/;%0D%0A%3C%0B&%1C%18%09%1Fy%13%1A)f%1E%10%256a%13)t%03'=%09z%02%1F%00%0F%20z%06%12+%00?%25%19%1B%00)%60=%10%01%1D%0F%0A%0F*%3E%1Cl%00%20%08%0D7%127%7Cs%60/%08?%04%0A%00%1B/)%7B%12%3C%1A#i%13y!%7F%16%1E'%0Ayc%10%1D%0A%03%1E90c%08%00%1C%1B%1A%1C%1A%00%08:h%3C'%07%7B%1B%094/%02%19%1A%1A4%0D%19%25!0%05$-3%19%0C4ys%01%1B%609,%0B!%0F3d$%0F%01%1C%1C&%7Bw%02%17l%60%3C(%0F%1E%109%08%1B%04w%16%1C/%0F%0F%1E%0B%07-+%0E%084%00%7Br%25%170%113%0C%1D%16%00%06%194%1D%1Aic%04%0Bz~2%1F%0C%15:&%17%19';%19%0F%17?f/&%06613.%00%08(%1B%08%19%02z%0A%7B%096%01%1A%10%1D,w%13v-%02)%14%7D%1E%17%1D2%10%13%1B%1D%07%08%17%1E%0F%11%3C')%20%17%036%1Fx%1E%0A%0D%07%01%02z%07%1B?%3E5%20%0A%08%17%07%1B%1A%1Do:3%17%0D%14%0A%13%22%08%11%1D%10c%0C%029%22%16%7B%0C0(7t%02%0A%06;%0C%03%22%22p*&%1B3%252%1D%3C%0F%14-%0D$%1D.%02(8r~2=%3C(%09%05***6%7D%7B%0A%19%08%08*%02%08*9%0B:%7B,%14%1D%0D%7B%7D%0A%7B1):*%3C%11%13%03*#*d%3E%15%12%0F%60!%7D&%7D%0D%20%18%18%00#%16k%20%0A5%0E%06%11%06%062%13%16%13%1F%0E/%1A7%11#%1A%0E%05%19-%25%3E5%19!2!1-%0D)!%15'6%3E%05h%093%05)w%11%11%22%02%1D8%13%259q%07'%03%01%015%05%1F3%60%06%0F%1C%1B%20%02%19%02y%005%11%06q8?3&%09%04.$%08%11%0C/%08%0Cr%1C,%04#4%1E:%03%0A%117.%1E2x1%07%1B%1291$,#%03%25%12-%04!g%12%1Br%01%039,%18%1D,t%19%01.&!%1B%1A3%00%08%20o%06%06%198%1F;%1C%13%0B%01%0C7%22%22%1B%7B=%12%13&x%0C%7C8%14%13318%0B%22%253,%17%1A%1C%09#%1C,%60%7B.%16%044%1D%00;s:~2%1E$p:%14%20$2%09%0C%00+)%7Cs,%093%7B?%03%13%20!%3C2%19%03)6a&p)%20%0D%19%07%07x%7Fk*%0A%0C,%1C2%25!%12%0A%0C%11%1F?%0B-%0F/%1C%19%25?%7B%034%11,%18%0C3%13%22#r%18?4r2.+%0E5%3Cp/%22%09c%1F+%05'%18%02!7%0C%7B-%0A%0A%02%1B/%3C$&%16)%1A5f)%0D%08?%1C%16$l%114%09%05%7Fr%18%0C-%07,%1B%00v?%7B%03%11%0A,#%3E%1D%08%0C9%1B4%0C6%03'%0E%1C*-=%05%0A%1D94s:%1B?%0C(%1A%16%11es%0E/+3b%02%05%1B+.%1B%1C&%198?1%00&%13e%1Bg%7F%00%08%25?5%125*-%3E%3C%07%1B%01%01%3C%05%083%20%0F-%15%04%0A%22%07%1E%7B.4%1D%17%01%7B%20%0C*%09a%08%22%18x!%14%25%60%0Bx(%0F%17%1D,z%22%18!%06'%0D723%7D%1B%09%7F5%3E)%18%0A%0A-%0A%7C%14%1D7%16c%014%13%1F%1E%14)s,%03%3E%0A%18%11z%02%15g%03j,,%18%1F%0Fy)%1D%1Cb$,%7B%06%1B%15%094%22%1Ah%02#%22%06%0B%204,%03%3C%03l%25y%1B%7F%00%03%7B%220%09;5#%088%60%7B%0C9%12%11r#%08e%18q,~%3E%08%25%03&%1A%12%17%01%05%7D%0B%01%15s41%03%08a%0F%0C),%20%60%08%10%0897h?t%12%07%20%3Ef%1B.!:7%0Eq2:4%60(j%0C%14%15g%60($-%15%08%7F%0C%0F)%1A9%06%19#%05%0B%12%05%18%0F%092%06%20$%3Ce%168%08%0F%0A%03%1B%07%06.%7Be%0C4%60%0634%0B%3E=%06y%073#%027%7B%7F%3E%20%00j'%0D%16ex%02f!%15%18%60%15?%17!%15%0Cv%00%16%0F%029+%3C%0B69?1%0D%06(%04sv%7F+%13$%0C*%1A/%16%1E-%09!%06a%04=%00%04%7B%10%1B%11s%05%06(%11%3C4&$6%11%7B%059%02(%12%19);%16;%25%00%19;%1D8%01y.?%0D4%1Af%0E%12%7D%16%11/%04%7D)#=&%04%7D%19-%05%08/%0A%0C6%1B%1E&$%08=e%7C%20%04()%05!%0C%11%0C%16%11%1E(%7B%0F+%11%184~(+g%0F%03$~2%15%3E%00%20y:bx3%00%0D%1E:!q2%06%1Bg90%05e3%16%20%08%7D%19%0B#%0A%0F%02%1Bic%0A%17%0F%0D%1238t;4r%1A%20%05%08%0B13~%1B1$4c%07%0E.'%01'%03)2%17%14%19%7F%11(&l#'&%09%16%13%25%1Ay!%7B%1D*%7B%13#%0D%03%18%1A'%22%0A%1A9!l%05;%033%7Dt%257.7%1A7%04%17%1Ad%0D.%00%00%187%0F)%12vn%01%7B%0D%1B#6?%3E%22%0A%07%1F%19%07q)x%113%08%221%7B%0C%1C-,x%05!2%01%19%0D%1D%15?)*;%04%0D%13&-%094:%11%11%04(%25m3%0D%13%00%0F%01??%0B.-r%3C%11%00%7B':%13%031%0A%0Bmi%077%20%17+%7B%1C82%08j*.%17%0F%7C2%05%00/~*%12(%136$%14%0C):%0A%00%02l%06$4%0D%14%20%25~09=%0F%20%0E%1B%12%7B%1D7%02%12%1D%1B.$;%1B%22%3C%0F#'/&8%09%1D%02%0A%7B%7F!%22%19%17%0C%3Ea%15%20%02z*1%13%1Ds=%18%01%1B%3Ep~%3Ci%09%12%04%05-%0A:'#:(%0C5;y%04)%0F%3C%073%11%1B4&/%10%7D4h%06:%10%7B'+%1A/%20%60%7F%15*%7B%18%06%01=%04%7Dpz%17;%7D%1E%138%0A%00%60)p%7C%02%0Cby1r%1D%1C%05%1E%00%09%1E%3C%17&#,~)$%0F%19&w5%11)%17%0F%05%1A:.%16&%00%01%1B%7Fr%1D%3E%13:%00)?#+'%7B%0B8%0A%08'/t(,:b33?%1F%0Ed?w%06%09%1B%3C;;%19%19t$%1B0.%18a%25%03%19%1C==2)%15%25~+%01%0D%14%189%18%11%25%25%0C,5%07%7B%20$%16%01%17;%25:yh%60r4!%18,b%0D%15)%22%1Be%0D%0B%04;i4%7F0%60%7C%17%22?%17%04%7D%0C%18%0Aq%224(&.%0E&wt%22%1Fr%25=%1D%04$#%054nex%099:%0D!;%17%03%0F%20%11%0379%1B%3Cg'*9~%03;%0E7%1A?oi%7C%20-%1B%182z%25$%04%60%1D%0C%19z98%22%19,%20%0F0*%20p1%3C%18%60y+%0F9%18?,&%119jfr%05%25,%14%00%1A#%1D/1g/%09)%22%03%02%0C%10~%1Cjir%0D%00%166(%1B%0B%3E%253d9,%04%0C-%16%0E%13%25w,%17%7C%16(*%0C%1B%00%02!%7C%15%09%1B%14%11w%08%1A%7F%00'%18/%60$%22%12%7D%1E9%1F%0D%06%7C%17%20=%1B-%047:%06,%60%1E03%19$!%0F.'&7'%1B;%7D%191=%08%3E1%0F%05%7B%14%1Cc;1!#7%11y%25%20%1Bl%07!+%0D%20%0F%11#%07%1E9!i%1F8&y%14*%1C6%7C6%60:%080%01%031%12%06v;%7C%0D%7D%03%19%06%0Ak#3%0E'41%3E%1D%03~%0B:f%11l1%0C4;%1Dt%09~#1%20%0D?#.$%7Cps95arv%07%0Ci%3C?%14%01%07%1A%11%3C%19%7B80#2j!%1D%08;%1Cl%1B%01?%16%1A6%0F92%12%3E%02%09=2%00%0Drz%1D7)%3E%17.?%60%3Cz%0Dr%19;%1D%00.:%7F%0Fi%0Cwz%7D%17!(yy'#%221%16-%06%0A1(lzy%1F7x4?%7F=%15f1r%22%1Cc%0Ar%01%188i%05j'-j%06%0A-?xo%1E#3%03%194&$q%7B'%17!%07%1B%1C:-4(%05%1E7%122%11,%7F~+5%0A%042%1C;%0Ayv%1E%16=f%03-?%0A3%07!4:%09%08%13%1D5%07$j%14?%05.%1F%124%7D%0D8%7D-%25%091%1A%16-%609%18x%14%10%08.0%60:t2%02%11%7B%1C%3Eg.sz6%15%3Exq%12v%085y%0B=y#c,%02(%09,gr1%7C%1Fj1~%00f+%20:%7C%09%7D%03j%09%1Aj%09%7B-7)lx%18%1B%06%09j%3C*a%3E*%0E%0C,%10e&u%1F9%17%1Dsy/9t)%3C+~%20*%1F'7%25%17)e%0Aw%25%1B%16*%22y~!):&/%7F%7D%3C4(6%11v-h%13%19%04,*%7B$4f%17?%3E%11%0E3*6%7D8%02%07)%01%16y%0A%08%7B=g)%0Dz%06%08b%00%002x!(1p%1A%08%1B%16-5/%3Ej%22?%19%188%085sx%12%08+'rw%3E,:%17r%07r,-%189%03%1F(.%7D%05j!%18%3E%3C%3E;-%05o%17%7C%18z%20j%00)4s%7B%0E%15%7C)x/%165%0E*f6m*$r:9?3.vre3%1B%7F*%3E+=?s2%0C%06(c%7B%11.+%0E%18/j14j7)%0D%0F6n*%7F/%3C%00%603%1El%09y%0B%7D%7B%05%1B8,%08/%05-x%15%3E!v%60(%0F%12y%04,%0A%08%0Ayl%20#%0A%11%00%02%0E&%10%19%12%10%1B%0F%18%13sy%22%0Ar%18x*/8%14%043y3%02%3C4s%05%06~r%60%09%05x9%1E7*6%7D%1B18%7F%0E%18%20.%07$w%09%14%1Ag(%00%1C)=%15:%03%02%0A%08%17%1E%04%25%08%1B;%0A%20y%01%1De%01%00%03%1F%207%60%02%7F~%3E%15%12%1B%1A%3E%3E%0A%7D%10%097a?%02%18%3C8/%19%06%07&%0A.6%00%1B3%1B%1Dfs&%07,%3E'%0A%04%07,)%11%00%0D%1B%07%09??%08%00%7D6%1C:2%05c-%03%04%20%04%20(%13%0A%229?%12%1C%01%00%0A%1F%183%22*%08=%1C%00%09%11&%14%1E%15%01$%01=%1Dh%01&%1B~%10%01(%10(9%1C)%09*%0E%1E1%01%18%11?)=%01%1F%10-9%1Dd%06&?%1E(7%022&%0D/f%09,%0A%1C+%19%1B%00%0E%1F%10d%0E%0B!%0F%1Ec9%10%126%1Fc,+%09%1B%14%01%1E%10*%078%11%03r%22%1E0%00&%11=9%0D%19(%04%0D%1E%3E'-.%1B8(7%04%20%0A%0B%1B%09%01%00%069%13?%0D%14%1B%17%18%01%04.;%08%13c8%04%01%7D0%19%18%08.%07%08%00;%10%11%1F%00%1A%07%08%11%17%001%0Cy:-%18%02&%22%07%07%17%03%0C%22%0C;+%19%1C%04%05%7F%1A%08%0A%00%0C70%16%0C%048%1C1%11%7B%13&%06%1Ddrt%1C%08%1B%18f%05%7Cz#d%06%06%7D%0D%0A%09%3C%00;%0D*%14.(%3C%0F%1C%13yt%09%0A%08%11s%02%0D?)%1A%02%05%7D%08%1B%13%0C%07.%080%15%18%09%60%093g%09%02%09%06%1B%16%1C%04y%09%18(y%09&&%0C%122%05%04%0B%14%13%7D%09%60$%13%17;%06%02%0A)%16%08%07%0C%06%03%17&%06%18%08l%15%11%04y%1D%1F%17%1C%09%0D%06%1C)'%06$%0C*82%05rz078%10%03%0A%182;+r%0F*'(%12%08%06%14:%08%07%11%09%1C%15&%06?%09%1Dg%18%06/%09%20%182%07#%0B.%14,%05:&+%20%0E%05,%0C%0A2,%03%0E%0A.%11%04%20%60&%1C%14$&%07$%00%14$%03%019%1E%22:(*%0D6%149%13%1B%07%3E%13z8%1A%0Do:%25%05(%0D%08%13%04%03~%06%0D%11%06%05%04%063%14:%13$%0A%0F%152%13%3E%0Bm!.%07%05%09%00%11%60%07%60%0B%15%18!%03-%02%15%152%06#%06%10%13%06%04y%08m%03-%04,%0D09%22+%0Ey%0C%17)%03%7F%081%11%0E%061%092%18%20%04%07%06%13%03%1A-%1A%20%15%18%7D%03%01%3E%1C%1C&%00%3C%0D4%13%07%0D:%08%15%16%09&%05%06%0D%18%0A/r%0A#%17~%09rz%0E%17%0E/%07%09+%17%3C/%7D%0C%13(-3%06?%10%3Ex)%0E%0Dt%16%11%10%0A%221%12%0A,1%09%3E%3C%06/%09%0C%1C%11%0E,8%20%00%15%3C-%3C%224%113&19?'3%0A%3C)=)~%00(%25#d%3C%00%1E%0F%20%13%1C%009%0D%11%12%7D+;%0C%3C%1C%60($%25%0Ddr%03%3C%20o%11%1E%00%7B%1Fi%13&9%7B%0F2%14%0C%03r6%00%15$%021%055%03%1A%05%1D%08-%129%06$%0F%14%14y%03%7B%0D%08%128(%03%0A/%13%1A9%00#%0B%01:*%09%1A,=:%02%1A%0C8%3E%18%00%7D%22o%3C%02%00%0A%0Da%1D%11%10%0A%0F$ag%03**y%00'%20?(6%22&m%19!:$$3%0F;*8glzb%10%1C%0Fs%01%0F1%0A%02%20%3C&0%01%0E%17,%085;%0D2%09'*%13%18s%20%0F#7%01.%0A/%18%03;&%0E%17%1D%1D%0A%14,%0Dm7%0A%0E%0A7-%01%0E6%097%18%14%03'%1A%0D0%11%0E;%07*.%03%18%10,%0D(:%0A%062!%1C%60%06%02%0A%0A,'%0A%0C%02&%1B%13%12%12%0C4%18%11/&%08v%18e%20*%0E/%18%0A,%09%20%3E%608%7Fu%1A,2%11(%109%20%1C%60%0A%07:%057;'r/%1E%1B%11%0A%13%12%08%60%7D%00%14#%25%18%11'1%18%1918%1Dq%22%1B%20%1E,u%00%1A=dz%0C%19~r%15'%17%1D%7C%203%22%06'%07%18%15%11%0C&%02a%03y.#x:%1F%18w39;&%110(%09%3Ec*%09%0A4h%1A%03%139%07*%19%0A%1B%12%04%15?%7D.%1F)%11%02%07*%0F%1F%18%07/3%00%0F%1A*%0C%08%11%0C%1D%16;%06,%0F%17%01'42%1F%14%03%0E/%7C)%18%17$1%1D%19.%11%1A6%04!k%1D%0C.%12%0F%18%16%05#=c%00#%20t3%7B17%0E&%09%02=e%02%0F%0A%0F%3C7%0A%09%0D%07=%173w%0E%1F;%17%0F%0E%0C-%18%1B%12%00%1D4:5%0E*%12%16%0Bi#%022%0B%3Ef#8*%06%08=%1C%14%18%0A%1A%09%1E*#%04r%15%0D%03%0E%07!%19%02%00%7C%1E%0D%25%0A%03%1C%17%0A7%08&%0A*%0B%09*%0A&%19%12;%04%0D3%04%0C%1A#%0A%60%04%14%01%11%0A%20%22%13f%0F)%7Be%0A%01#%15%3C,#%25%02%16.%07%129%7Br&?7%1B2%03%02%02%1E?%0A%04%7F'%13%12%0A%10%1E:%18e.%0C%0A%0F%14%09'%02%1C%20%12%3E:'%03'o%09%04%07%1D?(%01,l%1E%0F%1E%60?%0B%0F%17%20%1F%0E&&%19%00%1F%05,%1F%00%607?p;7-?86%03:.%15/.%1C*%60=%22%06,%1A%1C%17,%0Cy%0C%1E:%1A'%02%1F(;%0D;%13'%0B%17%01l%04%0F%18%1386%3C)=%1A%0Cw,%14%14d,%25%06%19%1A%3E,%00%0Cyn%19%0E6%13%06(d*%12%7C%03::8%08.%0F%18%14%7B4.%08%0C%038(s%1F-??%0D%0D%17%11a%1B%03?%18%0C5%0C%13%1C733z0%1E:%1F%001%02r%17%088%06j%3C%03%01%20x..%0D*:%0C*%0D%0Fi&%09%082z%18%3E9,%1E$3%1B2*?~13%1F4%20v%1D7%02$'%00%16%19%0D%18%119%3E#%09%08%03%0F;%03%06%10,'k?%0C&%12%0Ci%15,%13%08%07%08%05%0E%10%0E)#%19$2%0D9:5%0E%07%1A%1C1f%0D6%19%0D.)s%0F%3C'%151%08%00%25'm4%09u%0C%1F%0B8%02%0D%20/%1B%7B%0C%04(%1C%0A2%7F3%19v%1C7%0D)z%0B*%07%096%0A%0B%0C%02%01%04%20%3E!=%0D%14%1F&%08%15%12%13%08%221d%08%0E1%3C%0B%13%0A%00&%1B=8(%062*%14%17,%12%136%03%15%22%19#,%1F%13%1A1%7D%25%0C%05;%0A'%1D:(%04-%7B%14)h%25%10%12%3E%09%17%06%15$%178%1B(%00%7C%06%1A4%19%04%07%17%1B?8%032%0D%0B%1C,8%1E%14+%17y%17;%1445%1D9%05$#%1E(%15%1A)%1B?**%04%1D%03%18%0Dj%12;%18%06%09%22%7F&78/t;%25.%06%0D%04%026:%16%3C%05%20=%18%1E's/%3Em%06;%20%0E/%1C%20%19%07r#03%0Aj%1E%1F%1A%15%12%16'%175;%1Dt%12%08%0D%01%7D%02%0Ev%01%06%1F-=%201%03%08;%07%22%1E'%01%06%11:5%00%25%0B.%7F#%1A%0F5z4(%13%02%17%08%19-%01%051%1E*%00'%02q%7D%07%10%06%1E%20%1F%18%13%05*%15%05-j%04%06p%18%7C%0D%03%09('%3C%0A%02%13%13%11%1B%0F)yt/%00#%1B1'?zi$-p%04%7F%1F5%1Dj%22%02;%203p?/%0F4x%00%05)4b%1B%25?9%1E%1B*x%3C%18%60%05'%0Fz%7F;%16%0E%02%3E%04=%07x%19/w-cz%12%19%3C%3E%00(%1B%1F%7F%0D1?%1Bx%3C8d%03r%3C%7F%60%1E%0D%07%13:#?3%00%09%1Ci%09%7C52%0326%0C%0C%08%19,?%0A%05%18~0%25%0E%0E26%13%1E%7F%0D*%19)7=%02&%09%3E1)7%08%0B%10%19%1F)'%07%10#%01&x&a'%07p1%1E%09!*%05%0C%05%15d?(f%01%0C$%0A2$)3%01%06&(;!%22%11(%08!%1E1#%0D%00%08i%1A1%00%097(%25.2%1A%7B%1B%05%0A%08!%0Cm%13%0E$~%0F0%13*w%18%0D%1A3!y%7C,%18$'(%08%0F%18!%0E2%18w%1528%09%00)a%25%0069%09%01=%07+%3C%0A4%1F~t%06)%14%07~%0D(%0D%1893%0F%1E%3C2%141$%12$,4%22%00%04;8%1891%08%1B%1D%01%0F%05%0C7%1C%14%19;#%7C%1F$z%05$cn%25%7B%19/7%3Cg%0Cr?%19%0A%11%046%3C%0D:gzl%0F%0Fa%13%3Cy%0A%7F%18'%04.%09/%01%1C,%14?%176%1Dy%05%18%02%08;%08q~9#%19=%04:/%1A%01%0Cqs%7B1%14%7C.%1F%17%17':+%20%03%10)%01u%09!%20('/%1A%25%1D%1D;%15%20%0Ck%11%1E%09-45b,8%04yj%7D-%02%019a)&%0E%1F%3C33%0A;%06%1D.%13%3C%12s%3Ck&%0Cx'%0C%20%03;%19%03%05%11%0A'%049%0D%1D%08%0E'%0Aw7(-%17r%02%08c1788%0F5-%22%05y=%06%0A%02%1A%1A%3E%7B;%17%08%073%09%02%18%12+%1F%193t%18%7D%13%199%25%06%01!%0A%7C;y%1C%12?%1A%10'=%12%22*8;%01i%0A%1Ay8%0B%1B%14%20%25;/%0F'y%03*%0A%0C%15%09%07%0A#%1B3%08%04%03%0F%1Db%06&s+%18d%3E+$%01i%1F%1E%0D%09%14%18%16%7Cr1%0F%3C&(,%20%0A6%17%3C%11,+t%0A%1A%08;/0?%0D&%06=%14d~%10%00%0D%1A%17%0C%03%1A%14%00;%09%11%1Fx4%15%0F$%04z%097-&%7D%0F,%00%12%18%129%1Cb%12%16%0A%0F%15(%0A%006%7Fu%03;(%25%20058m%0C/%206%222#%0A%3C%3C%3E9.btag%08%07%0Ak%1A%0A)%11%078'#(%1A%0B%0F7%0E*%08?%1B=%18%00%03%0F%0B7%07%18%08=,%11%1C&%09!%1A)%3C%00%02&%3E%13%12%00%1C%0F)7%041&z%1D%17%0A%15%0E9%12%1A%20s%0A%0A.%13%06%0D%0A%01%10%09%02%00%019%1B%25%0E%00%06%05%08%11~*'!%18e%0A%07%12%1B2%7D%12%089%16n7%05%18%0C;1%1B%1A(~%008%013&%0C%0F%14ey%19%18/n6%1E%11%25%3C7'%114$%258%13/'%03%7D:%113%07$8%1C%1E(6%3E7%1D&*%0D/c%16%60!&3%05%0A%00%19%09!~3%00%08%04%1D%07%0A3%20%05%19%0B%18%11%20%00.$5)%7D19?(%18%00%00/%22+19%049#4%25%0A%00*%16!;%0A%04%06%7F%1A%17%06%0A:8;)%600)%1Ch%20%03s%7F%0F%18%20%1E5,%0F%1B;%1A%12%7F%09%11%028%1B#%0931&%0F%3E*6%3C3%07%05%7Fi6%0C%25?:%09%25=.%0C%1B%1C%12%04%1B9%177bx%22%3E+t?%191%05%17,%182%06x%04n%7B*j%7B%01%1A%11%0A,%25-%182%1E;=w)?%0F%1B,*57,4%04%0D%00%0A%0F%09%3E-%0C%02%7B3%3Ev%10%11%0Es%00&%1F%11%0A#%18%0D%16%15%0E%14%0A%0C%128%036%1C%084%11%09%22%7B%02%08%11%0F%0D%0A%0B%1E%16%08%03%1E%1D%1A*%02.,-6%11%0D)s%7B%08%11%03%02~w%14%09%3E%16%076%0B%1B%220#!%148%60%05%07$%1D4,%0C%12v%0C!%0A%069%0Bi;%1E0&~r%3C$%07%18*%1A%01*%0E%19-%1B1%7F%1B%0A%1D%13=.%00%0F%05%3C%05%18%00%0A%1B%18%1E%1Aj%04%7C;%01%07s%18%1B%3C*z$%20%0A%1E%07%138%227+%1E%18%13%12%0F%18%1D%13&%20%0D%00)%036%0E&%1D91%08#%0F%18%3E%0A%03%1B(%1B%07%7F%03%01:%1A%1B%01)*%054%01%12(/%00%167%0E%04s%0C%14%11/9%12%186%1A%3C%09%3C%0D%14%01(3%02%17-ef%0A%0D*1%16x7)%06%03)%7B4%0A()g%080%1D%07%1C%7B%002,!5%06%0A%07('%1A%17*%14%02%0F%1A%22%1Ds8%07%3C%25%057&;%08%08%08&.*#4)1%0F*j%252*%09?%1A%01,%0B%0C%05%16%05%0E--,,'%12$%1E%07%0C%14%12%02%06%03%117sl%1C%09mb&;%1B%14j%00~6=%08*#%1Ds%0A821%010%3C%02%3E%18%7Ft!)r%0A(%0B%0A%7Bo%08%22uz%7B%607,%22!%7D2'!v%1B)8%01%037'#m%16~&%1C%17%1A%7D%3E%16%1D!%185##%7F)%0E%12%13w%7F%1B%0E%1A%12%04%1D%19%1D%11#3%09*1%60)s%0E%0F8%11%18%06%22%22(%03%0F%03!#%0B%15%0E%14-&tf%0A%12%19!%1F%09.%13%1B%7B%0C639%03%0F%0C%1A%25us%18%1B92'%1B%1C%11'x)%0A%07;%19%12j3%0A%0F?$%25!=%3Eb&w%06%16%12%13%0A2%1C6%11%16(%22%01%1E%1E9%13j#%0B%1A%0A%01r%0Ez%3C%0A%09%07%0E/ra&,%1F&%0C%17%04%0A8'%1A%3C&%06%1Cy.6%3E8&?%0D'%7D-;%0B:;%0Aw%11%7C%3C;%1C%07%0A?)%17%19%10%25%09%3C%0A*%04%1F%0F%1A!%25%20%1A%06,%13%080!%01%01%113-,e%1A%1B,%04?%3C)%1E%0A%1B%02%1D(%1B%7F0%7B%00%0C%20%12)%07xm!%0D%22%1D%066%06%04%14%0D%19r%16%1D%18$%7F%3C%1B%01%17%22)%20e%1C%17)-%15%08%0A%04%1D,%0C5%22w%0F%19%0F%01%0A7%0E%0F%18-zm%19!-1&m%1D%7D%17%1F%06pxbtag%08%07%0Ak%1A%0A)%11%078'#(%1A%0B%0F7%0F%04%08?%1B2%0A/%0A%0C%3E%15%7B%03z%1E%1E%11%19&%02%0Da%11%1D%16%03%0F%16%01%0D-9%09%10%12y%00%099%3E%17%0Eq%094%13%11%09%07%09%0F%17)%01%08%0A!*%17%7F%05%09%07%18%1A%02.%02%25%18%1D%12&%06%7D%18%17%12%03~%04%14%17%1A%00;%0F%1B'%0A%16%1B+%00%25%13;*%17%18%14?%0A%0A6%1B%1D#%07%03%18%60(%0E%04%09x%1D&%06q%0A%16%1D%11%0A-)%25%13%3C%1Ap%06%258%11%0Ap(%0B5%19%0A%048%0F='r%04%079%18b%0A%06%1E%0F%1A%04%11.%22%19%0B%7D%0A%09%0E%0B%0E%15%18%14z%03(%01%060%3C%7D%12?ru%0A%09)*%11%02%00;%3C$%07&%11%3Ci;?.%7C%01n!9.%0A%0B%17d%188*%01,%06%0C3%08,h%07,%06%20w%16%01%02%00%1164%25sp%7C%086%07%09%17r-%11%15%09#z!%096%0C%0F%25?%15$3%03%04%7F*g%0C0:(/*.%02.%0B%0F&)j%7F%0C%3C%1F%20%25.%25;d%3E%09xx%18%1B%1A%132',a%3E%07#%0C1%60%3E%12%3C&o*%60%08%08%7C!c#%25%7B%7C*%1Ay1%3C=%1E%15,%00%08~%0E$3%14%0F:%00%20rr%0F%170%15%18/%0Dv%0E=#):%1D+%11%0A%0F%19%0A%03%1C%3C(%074*:%252:%0C%3C%1E%22%221%25%18%0A'%1B-%07l%60&%10%11%0F.!%0C&%3C%0D2'%09%1B)%01%1F%08&t=%07%0F7=-%3C;%187,%00%03'6%11%0D%20%18&%087%04%14%006%0C'%03/%0C%7F%01%17!%19%60%0F%1B%17.1,%07%1F%0980%0D%0D(%06~4/x*%15%11%07ze/%60#7/(%174%007r%20%17%16%7F1r%09%1Di*.%0F%3E,%06%3C.?%02+%01&%15%02%1D%08!%02%00%02%25:$%06#/%1B%03%14%22#%3C%05%00%01*(/%01%03%16%1C%20%0F%048e.%18%07%0B%1C3%191/%14;:%3C%1B%0D%18=%04z%0E%07#:7%117%07%22)2%08%05%22*?%06%0F#~v?%06=%18,:.%18%7B%22%7C=%3C%18%1F%229#%01*9%18:%25l%14%1Au%0D-a%06%12t%0A%3E%112r$%25%7C:$#%0D%0Fw,%11%11-x)tcx%1B/%1Cm%3C%01w%06%09;c%13%22)%08:%06%05lz%1B/%00%1Ew-=l6$%25=~%1C7%0C%14%1D%7F%15%03r/%7B%1E%14%06f9,%1C%0B%00z%19%1E%0D?c%0Aus%0F%144%12%02%3E%1A%01%14%20%13%3C%0A%17i%7C%14,%072%05%01%0F%04%0Ahaf%0D%08%0F%10:%0C%02%1A%01t%01!%0D%1E%17%0D%01s%093%14%0B%601%08z%0D%1A%00%1A+/)%1E?y+%0E%0B=%12'%16%0Cz%18%11)%12%0A%18%3E%19%09*,'.1zj%1A%03?(~%04%0E/%1D*%0C%22%02%08%129s%0Cr4%18)%13%048%08%0Ci%182%09%7F%15'%1C%04$%1C14%1Bq%60%22%1D%1B%06;~w%0E%01%119r%0C5%068%1B%1A%0B%09%15%1A%09&%0A%189%20p%0A%0F%15%11%0A%15%02%3E:%02%0E%07%1A=%1D'%1B)%0C%0B)%091%11%08v%16%20%0E%06s%0A%3Ea%1B%02z%1A17%0A%03%1F%17%1A%1B%020%7F%02%1C%11:%12~%05%0Dc%0621!%1F%01%1F%08%03%1C%09%173%25#)%1F%1A$%11,%09%0B7%0A%00%0C%1D%0B%14%1D%14%0D~%00%12%7C9'%07%10?%04-%0D%04%0A%1C%1A%12,%1F%18d%11%039%1D%12%1E%09%20%059%18%12%1B%20%7B=)1'%0A%1A%0D07%7F*%08%1D%3C%02%02(%1A%02.h%03q=%1Dl$)%08)%08*%1D&%17%7B!*!%1D%07%0F%1F%0F%123%06%0A(%1F!%0C%02#%7F;%1B%0C,3%18,%05*%0B%7D%0D%0A%19%18%19%02%0F%0Fb%1A%16%20z%08%20%02%20(%02%0A8%09%0F%1C!%1F%02%047~/i%15!%00%0A)%18%13%12%22%08%1D%18%12%1F%15%01+%16%11%09-r%3C%00'%7D%14%3E%01a)%02%00%20%031*84:yl%17%7F%0B2*%0D%152%00%0A%08%03e%228%7B%0Ft?%09u%03,%1D%12%22%09%0C%0D1e%00%18%12c%00%11%22-%7F6%1E%17%1C4'%09i%093v%03-?($%09%06%22%3E%00#t%22%05%3C8%1B%0E2%19%18%1F%08%12%04x=7.-%00%206)%25&%7B%0A%3C:%7D7;etfy%18~%3C45%11%14%1B%20?%16%19x%03e%0A(%25%09%11%17%13*%02()%7C/%02%18#$x%1Ea$%10.%17i%16;j&%7F8%0A9%16s,5d%0C%07.%7Bj%3E%60%18%11w%01%1E%11%1B%3E%7Dk%09%1A%0A%1E%14%01f%06;%0E%1Fa%03%25j%20y%15(%7C88%1D%187%0A%3C*%3C+?%3C2:;03%20%3C-/*$)$?/$79%20;%3E55:4%22-2-g%3C8%250%3E&%20%25/%3E59%3C8%250%3E&%20%25/%3E59%1E(%226#.%3C8%250%3E&%20%25/%3E59%1E8+-1(5%228%3C-8*%22%2041%25%20,++%0F.%25%22:$3*/(+5-8%20=+%18&*5*%3C$8%22%25.%1D29%25%0C*%2087.36=29%25,*%2087.3%14=29%25p%14':?%25%3C8%250%3E&%20%25/%3E59%1E8%250%3Ey%1E%22-6%3E62%20'7=*/*)%3C%22%142%20'7c%14((!7-8*%22%2041%25%20,++%0F8*%22%20m%0F%22%22$%20$#%20(%25#8%3E*&.%3C%06#%20(%25%7B%069(.%253*;%22/&/71,$9%11*;%22/z%1183?(=+-5356=29%25,*%2087.3%14=29%25s%14/:$%227.:%3C(?%3C8%250%3E&%20%25/%3E59%1E8%250%3Ex%1E*--9=$?+!$62%20'7=*/*)%3C%22%142%20'7d%14%20(:0&.5.6--8*%22%2041%25%20,++%0F8*%22%20l%0F*%22?'/5?$3:$#(%20'+qaesb31$?18tv%7F).%25%25k~%22.d=:%22%221?=v1=%20?/+%0F%3E1//-5e1#%3E$%25;%25*:%3C#'.?3,%20/%20?+8&*5*%3C$#%20(%25+=9?.9%11:?'.9%3E03%20$93*;%22/.*0$$3%14-6%3C$3;':;.3%14-8%3E=%2083*;%22/.*0$$3%14-6%3C$3;':;.3%14-8%3E=%208%11:%22$28&899%3C8%250%3E.%25%22:6%22%14%22$%226%22;((%25%3C%22%14#9'%3E8?/.=*%0F8-%22*%3C%2262%20'75/(?!+%0F(.'!+%20%22%22%20++%0F.9%22=-9%25&(!7$*(%25++-8*%22%20%3C4%225$%3C%063$-$%3C)9(*.%3C%06%22%22&#:-9'$6=29%25$/'-?9%1E(!5?91%22-259%1E'+?$?('+$#%20(%25+=9?.9%11:?'.9%3E03%20$9%11*1=$);-$$/6=29%25$/'-?9%1E(!5?91%22-259%1E(/73.-);-$$/6%3C%3E2c%3Cb341;$/'-?9%1E(!5?91%22-259%1E(%3C6#8)*'+3*%22#+$#%20(%25+=9?.9%11:?'.9%3E03%20$9%11%3C(%222?'77?('+$2'.(%25$#%20(%25+=9?.9%11)%22.7%22+.2$9%14=29%25%22$%20-1%22/.%3C$%3C$%20/+=-)%208+:?'.93!)62%20'75/(?!+3$/?/0%3E.36=29%25$/'-?9%1E'/%2059#$6$#%20(%25+=9?.9%11512$9,6(%142(%3C6%3C'%22$%20-1%22/.%3C$#%20(%25+=9?.9%11512$9,6(%14-*7%3C%22?%20)%22%3C-8*%22%20%3C4%225$%3C%06%3C*8.%3C;?3%1E(!5?93.---8*%22%20%3C4%225$%3C%06%209.;++$%22$8,6(62%20'75/(?!+%0F;3$%3E%3C%22?(.=;?3%1E?/;%3C.%3C8%250%3E.%25%22:6%22%1419+/9.6)!!-8*%22%20%3C4%225$%3C%06#*7.,,$?.%253*;%22/.*0$$3%14-8%3E($',,$?.%253*;%22/.*0$$3%14%3E+?;$9:058#$6%06%25;#%3E:-?%25%3C8%250%3E.%25%22:6%22%1419!)595%22+*2$9%14*6'%25#%3E:-?%25%3C8%250%3E.%25%22:6%22%1419!)595%22+*2$9%14*%3C%3C.5.,,$?.%253*;%22/.*0$$3%14%3E+?;$9:058#$6%062'.(%25%3C%2262%20'75/(?!+%0F;3.805%3C#$6%06$.%20&*+?;%25$97-8*%22%20%3C4%225$%3C%06%209$='%3C').3%11-5*,/%3C6%20/.%3C%20%06$%225'+$#%20(%25+=9?.9%11)%22.7%22+.2$9%14:%3C1&%259!)4$6%25%116%20?($%20h-8*%22%20%3C4%225$%3C%06%209$='%3C').3%11-5*,/%3C6%20/.%3C%20%06?;5%22!7b62%20'75/(?!+%0F;3.805%3C#$6%06$.%20&*+?;%25$97%0F$1?'6%3Ex%3C8%250%3E.%25%22:6%22%1419+/9.6)!!%0F?$*#=%22$1/!.%3E%14.;:0?%25u6=29%25$/'-?9%1E;%3C%3C&%22$%3C,6(%145./449.;*6'%25%1E$%3E-9$/~3*;%22/.*0$$3%14%3E+?;$9:058#$6%06$*#'+%06##%20;+$#%20(%25+=9?.9%11)%22$1.%3C-9.2)!!%0F?%20)%22%3C%0F3%3C8%250%3E.%25%22:6%22%1419!)595%22+*2$9%14:82'$%147$#%20(%25+=9?.9%11)%22$1.%3C-9.2)!!%0F?%20)%22%3C%0F*/,%22%3C-8*%22%20%3C4%225$%3C%06%209.;++$%22$8,6(%145*,55%142(/5562%20'75/(?!+%0F;3$%3E%3C%22?(.=;?3%1E?/;%3C.%1E-%220%203%3C8%250%3E.%25%22:6%22%1419!)595%22+*2$9%14:82'$%14(59;86=29%25$/'-?9%1E;%3C6%20.3?'%3C#).3%11:?'.9%3C%3C3?%3C8%250%3E.%25%22:6%22%149%14*6'%25%3C8%250%3E.%25%22:6%22%149%14;)-8*%22%20%3C4%225$%3C%06)%14%25$97-8*%22%20%3C4%225$%3C%06)%144;3*;%22/.*0$$3%14/77'$%14*6'%25%3C8%250%3E.%25%22:6%22%14%20%25)55%144;3*;%22/.*0$$3%14=:1'$%14*6'%25%3C8%250%3E.%25%22:6%22%142(/55%144;3%3E%22*#6/,$$%3C-%220%203%3C-%220%202%3C%18%1B%0B%15t%3C8%250%3E.%25%22:6%22%14-*7%3C%22).3%11512$9%208=.%3C%03%01%0F%15%19%12%0E%02%1C%13%1F%04%0F3%11%1F%1D%04%19%1B%17%03%0E%0D%0E%0D%0D%15%0F%3C%0E#)$2a'/%2059%3C8%250%3E.%25%22:6%22%14-*7%3C%22).3%11512$9%3E+5=(.9$#%20(%25+=9?.9%11512$9,6(%14-*7%3C%22;3.805%3C%1E%22#87.%3Ch3%0058%3C%05!$%60%7Bq%7B~$s(%22(-:36%05%0E%02%1C%04%0Ea%07%0F%00%15%19%3C8#%06%20%22%22%20++%13$/?/0%3E.3690%3E/.%3C%1D11/.%3C3*;%22/.*0$$3%14,8#%22%22(!5?91%22-259%1E(%226#.#%3E:-?%25%3C);-$$/%18&84$66=4%0F;((%25%3C%22%08.'!+%13$/?/0%3E.36=4%0F;((%25%3C%22%08.'!+%19%25/.%3C$#%20(%25+=9?.9%11*8*1.90%3E/.%3C3*;%22/.*0$$3%14=11;$%3C'74$6%14'41,$(!7$*(%25++-%3E3'f$'#$.%22$%11'(.%20ya6%00''%3C%3Eks6%0F59./k%7D$%11'(.%20yd6%00''%3C%3Ekt6%0F59./kx$%12*3)+=p%3C(9+ya6%03*%3C;5/a%3C'+5ks6%0C8%22)$/n.99$k%7D$%12*3)+=p%3C(9+yd6%03*%3C;5/a%3C'+5kt6%0C8%22)$/n.99$kx$%13%223(%22%3C-%083.=:5%2556%0D+?82k%7F$%139.8=yb6%029!*#kr6%0D+?82kz$%139.8=ye6%029!*#kw6%0D+?82ky$%16*%22.nh-%0D%20(+ya%7B%3C%0D/:5kpz3%1F1($k%7Fk-%0D%20(+yax%3C%0D/:5kp%7F3%1F1($k%7Fl-%0D%20(+ya%7D%3C%0D/:5kps3%1F1($k%7F%60-%0D%20(+yb6%07*-%3Cpyq6%0883.ay%7F$%16*%22.nkb6%07*-%3Cpx%3C%0D/:5ku6%0883.a~3%1F1($kx$%16*%22.nn-%0D%20(+yh6%07*-%3Cpr%3C%0D%228=.2k%7F$%16'%20&+*pzq6%0851&$8nk-%0D-*#%3C#kr6%0851&$8nm-%0D-*#%3C#kt6%0851&$8no-%0D-*#%3C#kv6%0851&$8na-%0D-*#%3C#kx6%1D2%25'-k%7F$%139.8=$%03?%2093%0D%22%22%20%25)556%069;77.a('+3'$6%09+%25%25&.n15*3?nh-%0C3%3E%20%3E5k)./+$ks6%09+%25%25&.n55*'k%7F$%1794%25)%3Cp'$*(yb6%069;77.a'+86kr6%1D2%25'-k%7C$%03#..n)%22%22/?3%111%25%25k%3E+9%2556%080%3E,$9n)%22%22/?3%09%22%22/?nk-%0C3%3E%20%3E5k-%22%20%3C#kp6%09+%25%25&.n59%25$8nk-%181'/--%1B$%25:87$/6%1C%3C3?%20%25)55kp6%1A+9*/,%22%3Cp?%20'%22ya6%13.--1%25&'+yb6%13.--1%25&'+yc6%13.--1%25&'+y6*56%1D%3C=%22a('+3'$6%1C6%25%25%25.*y%22.%22?/77'$6%036?%25%3C%1F%3C01%25&'+y5=$%253%0D%22%22%20%25)55k5*%225py%3C%18%3E51?az3%0A%20'%20?nk-%181'/-px%3C%18?,19$6%1C84%22.*--9=$k%7F$%07$3'*$%03%22&%25/5-%18*%3E%225p(3$=*p6%12%20;5%3Ckr6%0B!3'%20&/-9$/6%0B55(59':9?86%0D11%22/6%1D:?;$k%7F$%03(.;+yb6%13**0?*%22?'/5ks6%0C0?#%201/+46%07%22%3C%3Cpz%3C%04604%222.%3C$%18*;*%3C=?%3E26%0C8%3C'%3C%0A:6=%22%226%08+5.;.3%0E8%222;nh-%1C)%22=)py%3C%1C&0#;ax3%0E8%222;nm-%1C)%22=)p~%3C%1C&0#;a%7D3%0E8%222;nn-%1C)%22=)ps%3C%1C&0#;ar3%0E8%222;nh%606%16#'*%20kpz341%22/&+7%25.-.#%3C%3E?26,6%3E%20($-6%3E?%20%22%20%3C%2260%3E':;%1B-*7%0E9%25%25$9$!%3E((%25%09%3C*8%1C'74$6%14-5?8$6?,9(*%1B%228)%1C(%25*6'%14%02'/*#%22%22%09;-$$/6?,9(*%1B%228)%1C(%25*6'%14%009%3C6'8%03%3E:-?%25%3C:;03%20%11'/%20%07%22//!.%0F%0C3*%3E)%3C.%03%3E:-?%25%3C:;03%20%11'/%20%07%22//!.%0F%08-*=*9(%11'/%2059%02$;7$60%3E':;%1B-*7%0E9%25%25$9%06%1193$9*%00'%202++%13$4%25:$!%3E((%25%09%3C*8%1C'74$6%14%09+1;1'+%09%3C*8.%3C%1A?%3E/?3:%3C*28':%0F&(/3:%3C*28':%0F&(/%11(%25%22%22%20%3E512%3C(%228#8((%1149/%1E(;*$$,,/456%22'/*#%22%22%14#04%14/.9*-(-*=*9(%1E&'=%0F8*%22%20*-(-*=*9(%1E&'=%0F-3%22+74'(8:$3'%208=03%14,%22*%06$%3E5$%3C01'%3C;%3C%3C$?8&+7%25619+-$2%1E)!-$$,6%3E+5?52%11-?;%3C;%3C%3C$?8%14:6%20%14#*%3C$%209$?:%20%0F?.;%11*=*-'%11)%22.7%22+.-;3.:-)%145$%3E%06%3C.7.%22$%209$?:%20%0F?.;%1171&$6%3E+5?52%11-?;%1E;%228).3(!,%3E?%3C;%3C%3C$?8%14:6%20%14$3'--;3.:-)%145$%3E%06#.5?'778%3C;%3C%3C$?8%14:6%20%147$%22,=.%3C;%3C%3C$?8%14:6%20%147$%22,=.%1E&;*9(%3C;%3C%3C$?8%14:6%20%14).%22)-%25$%3C%1E512$9%09,9/$%08!7$*(%25++-%25$%3C%1E512$9%09,9/$%14:%3C(?%3C%25+.%00'%202++%17%3E(/+%063'.8+$%209$?:%20%0F%25$%3C=;%25?5$%20$%209$?:%20%0F-3%22+748#%3E:-?%25%3C;%3C%3C$?8%14:,$$3%22/52%3E5?!7-;3.:-)%141'/%202%3E5?!7-;3.:-)%142%20'7#)4?:6%3E619+-$2%1E?!)%0F9$;%228)619+-$2%1E?!)%0F9$;%228)%14#*-2-;3.:-)%145$%3E%06%22.1'/%20%0F%25$3:$%209$?:%20%0F?.;%11+5;-*7%06%22.1$%3C--;3.:-)%145$%3E%06%22.1'/%20%0F9$;!+$%145$!5$%2216%3E+5?52%11-?;%1E9+)%3C*8%14:%3C(?%3C;%3C%3C$?8%14:6%20%143.%3E512%1E-//-;3.:-)%145$%3E%06%22.1'/%20%0F-%20=%11-?$-?')-8,%14)8=.%02#!03.%02%3E=-?&%3C8#%067*,.%0D1?%22%22.%0D5182%22-$#&%1E,/45%08)$':5%0A39!.#62&%11%3E1&$%08&69($%0C%3C8%20;-.34?%3E2.%22%3C1=$6#6%258$.%20-59%3C./*5%02/%04;-%13%3E#%22-$%3E$&%3E'=56lx~)(6r%7B%3E!-&48':=%3E5.3)%22.5?7%06$$1%1486%3C%3E,.%1166-%3C;%3C%3C$?8%14:6%20%147$%22,=.%1E&;*9(%1E$(?-;3.:-)%145$%3E%068.-;%1166-%3C;%3C%3C$?8%14:6%20%143.%3E512%1E-//%0F().-25/%3C'!%3E9%256%22%20=?%3C%3C'!%3E9%256%22%20=?%3C%1E8;;=%225);-$$/6%2267%22/%3C'74$6%14;*59/*#%3C-'.,'7'%22//!.%0F;%208=.?9%256%2267%22/%3C'74$6%14+!%20'%20%22%20$%3C$&%22%20.9%25%25$9%06%22.,.#;59%1E(&%3C3%20#$6$%22.&%22=-596%22%20=?%3C%3C9+%3E985.%3C.9%25%25$9%06#%3E#&'-2%3E5?!7-9$,'*$.3%3C'74$6%14;*59/*#%3C-9$,'*$.3%3C'74$6%14%3E8#86$%3C=-9$,'*$.3%3C'74$6%14%3C%3C=.,)++%0F().-22$96/:3$4%25:%063'.8+$%3E.6890%3E/.%3C375%3C2%14-5?8$6%20%3C'86%22%20=?%3C%1E?'-%3C.%3C%25+.#%3C(%25*6'%14%22$%20-5%2556%20%3C'86%22%20=?%3C%1E)/:;6/.9*'%22//!.%0F-.998%22/%3C-%3C05%25%258%0D6%3E?%20%22%20%3C%226'9'%3C%3E/2%14-5?8$6(+9.//=%06%22.0%3E+*$8%1E?/;%3C.%3C-%3C05%25%258%116%3E'(%25+%06$*#'+$69(.%20=#%14.-(59%25$%14:82'$6(+9.//=%06%3C.&*-%20%0F?%20)%22%3C--3%22+748%1E?'-%3C.%1E'+%3E1(86(+9.//=%06%22.'9+*8%14#%3E:-?%25%3C-%3C05%25%258%1184/%1E);-$$/6(+9.//=%0A5%25%25%1C'74$6%08!7$*(%25++--3%22+748%12.%20=%07%22//!.%0F(%20%25-%3C%3C6'9'%3C%3E/2%18+74%1C(%25*6'%142.%20=--3%22+748%12.%20=%07%22//!.%0F%25%20&+$69(.%20=#%18$%25*%0E9%25%25$9%06%3C*#.%22$69(.%20=#%18$%25*%0E9%25%25$9%06%22.2;!7#.-*,%3C%3C62&%11%3E1&$%08&69($%1C'74$66=4%0F,%20&+%1A8$((+%08%25%22%22%20%0D5182%22-%1A?%3E/?3*=%14&*#%3C%13#.%22-%3C%01%3E((%25%18%229.%3C=%1A?%3E/?3*=%14&*#%3C%13#.%22-%3C%01%3E((%25%1E%22*1;%22%3C%13$4%25:$#&%1E,/45%08)$':5%1A4%22-2%03%22,;%22%3C%13$4%25:$#&%1E,/45%08)$':5%0848:6=%08.%3E%20--9$;%228)%083.*0$6qex$~eo)/*5/a$%20y-;3.:-)%145$%3E%06%22.1'/%20%0F-%20=%11=98%20)%22%3C46%22'':;6%12%1B%0F%17-8,%14-6%3E%25$(:0%3E,%02$%20-1%22/.%3C$#&%1E(!7%3E.%22?'77%1C(%25*6'%145$%3E;19%3C8#%063$/%25+:$%22/,%190%3E/.%3C%11-5356=4%0F(.%25%20%3C3?(%25)%0E9%25%25$9%1A1%25%22.%22%1B%25?5$%20$%22$.&%020#?%09%22*=5%25%3Cy~hifpzchi6%0F.9*p%3C(%25*6'k%20/*%3C4ea%07!%3E9%25a**=5/ok%080(.%25k,,7k6%22:1p8)9'7;%22/,n)%3C*5-!+=8a%25!-p%3C.9%250%3E,ok%030%3E$3k;*1)(''-)k(&%3E+?=$&+7$8o6%7Ciarlz%7Ftb%7B%3C%19!6=k-%22=-p%25.%3Cn*8$68n%3E1&$&!=5e%3Cy~hifpzckb6%15./4#k%20/*%3C4ea%1F&%3C%22.a(/7p%25.%3Cn;5k4;n-?kuk:%3C1&2gn8%3E/a(!5%3C%222%22!7#k#.:.5./k(+9.//%22%20p;-*7%3C%228a(/7p)$k:,%22%25$/n6%3Ek.9n66-ok%0F7)k#%3E)*p;-./*5k$&/0%3Ck#%3E)*%10).%25%25w9$%3Cy~hifpzckg6%00/*%3C4k#*-279.%3E%20=p9$;%228)8a?!y$#$k#89%25a&+7%25ea%1F7)5kf9+:?9%25ln0%3E?.k'7p,%20&+y3#%20?n-?k3.-6%22/a?&8$k3$;74k%20%25*y#.//n0$k5$n-8.a&/0%3Ek,.%20,~k%00/*%3C4k#%3E:-?%252k:6p!.%22%20y9%25%25%22804%3E%20'n-5*,8%60y%16%229.*y2%3E&k9159$k%22%3C&.-k=%3C%3C.%22?n.9%25%25$9y'$4'*y7.5k=-%25(*k!)5%25a*(-59a)+0%3E,a%20':;.%25en$b%7Bprchafsr3%184/$/n45%254k#,#%22%22en%0F598k%228%22,$k%3E1)8((=y9&1*--#k6%22%225p%25.%3Cn2%3E$%22%20n%20?%3Ea$(?p2.%3E%3Cy79%20;%3E55k(%25n*'%22/,n4?/$en%0E8./k%2267,$/n0%3Ega2!,%22k,*%3E*p*//n%20?%3E3k(8&$49'-58a(/7p%25.%3Cn;5k2.%22%3C3?$/n?%22$,k:15k%0D.8%3C%3Ck%12.%22%3C3?a%3C'74$6en%1B%25,a-'!58o6%7Ciarlz%7Ct%60%7C%3C%18%250%3E8a**=5/ok%006p.%25%22:6%22ga;%22%3C18$k;*5k5#+y?'%25k!75k'$%3Cy%3E$6en%0A'%22/,n4?/$k'4%209.=+=%7Ck8$;y3*/k%206'k.%25%22%20p86%22%20%3Ep-.9n8p'(&'-5/a?'45k4%25:0%3Ck8$;y%3C.5k)6~k%03.:-59a='*%25*-8n-?k2#!.p#.%3Cn4%25()k%226%3E,$9n%20?%3Ea(/7p#.'*y?%25a-!+~k%16%22%225p)$k:.5**.*y1%25%25k,8%3C*/(+=~k%07%226%3C4k5#+y7*,.n7??a9;7%3E%22/,n6%3Ek%25.803.2k:11?a/!7w?a8;)%20$3?n%0E5)%06%07%60y%16%229.*y#$,.n)%3C*8.%3C*p%25.?n:?'-%22*0%3E,a*(-59a890$()%22%20%3Ep)%20(%25y$$a%0D%08%18p-3$#y%04.%20&=w-yqzwtayl%7Bw$%16%229.*y!%3E((%25y%20'%202n5?,&%22%20%3Ep2.%3En6%25?ok%080(.%25k=6=.a8%250%3E8a%25!-p9$%25*%3C%22%22/,n0%3Ek-$,;)ea%0D'!5/a8!45k2%20'7#k3.%20=59(%25)y9%25%22$%3C+5(5'7wp%02'k76%259a8%250%3Ek2?'5%3Ck%25$+*%3El5k%226?%20a9'%3E8?a;%22%3C18$k+41%22-k,,78%01)!7;e($n.9?)k76%259a*-:?%3E/?n71&$en%184/$/n*?%3E//n??9a(&8$k,.=*1,$8%60y%19&19!/5/a?+8=k2%20'7#k5$n+5&.=+y1%258k/42%22&%3E'-)k'$%3Cy'#((&y$.%20&n%20?%3Ef9+y?%25ok%1E%3C%22-.9#8%3E($k'4%209.=+45%2558n??9a8%250%3Ek3.%20=59(%25)y9%25a'!;22o6%7Ciarlz%7Ctay%3C%06!+5k2%20'7p-(3+*p*//n;%25,a-'!58ok%1C%3C#?3%3E--%259$/n-8.a&/0%3Ek,.%20,p*a)'-~k%3Cy~hifpychc6%13.)0#?3*:0?%25a**=5/o6%7Ciarlz%7Cta%7D%3Cl%1C%3C=.,)++p&$ln?%25%25%22?'6%3E*-%22:%20p*%25/+=p-.9n83(.%3E%20-#k6#+7p'.,)0%3E,a%22%20v%22.&%22=-59(%25)w-yqzwtaylzw$%11/%25.*y6$3%3C/+4d#*-2%7F&%20;n:%22.%25%22:*p?.k#89%25a&+7%25k3.%3E5122en%1F93$/n*;%22/8n8%3E/a?&%3Cp,%20&+y1;1./+9%25&k,5%25932n6%3Ek)%22)1p9$8!5%25?($%20y#(3.+7#k6%22:1p/(8%3E512a8-8%3C%22/,%60y%16%229.*y1k,.#6%222a'+8;k5#/-p(.%3E%22=p(%20%3E=%3Cp?).n%3E1&$k:6p(3*=1~k%12?/+#k/$9y##.%3C%20y?%25a?&%3Cp%25$%3C=y2%3E5?!7p?.k=1?%3Ca?&%3C%22.f8n75%3C2k=0%3E($k:15k-*=-p?(&+y)$4k%3E512$/%60$b%7Bprchbfsx3%184/$/n82%22-%22:%20p?.k-,#?.&'*5k5#+y3$/?%3C6%3C8ok%1A152a*%3C%3Cp8%20=+=p?.k76%259a*-:?%3E/?%60$b%7Bs%7Bciafq%7C3%1F93$/n8%3E$5#++p)4,n.9?)k=29%252k%3C%3C%3E/$9'77k(%25-6%229$(:5)ea%0A*=5/a;%3C66*/%22:%20p-(':%3C%22e%3Cy~k%60fqzcii6%12%3C'77k3.%208=.%25k:6p,3*%3E)%3C.ok%0F=4.%25k/5$.3%25/-5k&9/)%20'$k#64.mk9159$k76%25k6%22%225p,3*,y?%25a?!y'#%20?+/59a%22=y3'.8+*$ga%22%20y1%258k*0%22.%22?'6%3Ega*=y?;1$=%3C4k5$n6%3E'8k=04.6*7*p-3$#y)$49n4?&$%25:,=k-%22%25%3Cp%22/k%3C%3C7%3E-*%3Cy79%20;%3E55k,$*%3C~k%02$#45%2558ty2%3E&8%0E;?%25*e'6-yqy~t%60zlz%7D$%11/%25.*y531.%3C0=./?/5p%0A39!.#k,$*%3C~6s%7B%7Ci%7D%7Bpf%7Fo-%19$**%20p/(%25)y1/%25.*wp%0A%25/+=p-3%22+74k22=-5&ok%1B7%3C%22*.n%1B?%25*k%7Fup?6$n)%3C*8.%3C*p&48:y2$5#n879$.n-?k#.n?%22%22$%25**p)$-!+5k5#+%20p(%20%25n*5.a./:8k.?&%3C%22k(%25n-8.a9!6=k-%22=-~k%05%3E+y$$a?&0#k8$;+p$-/n?%22%22$%25**p#%20=+y%3E$5k,%3C5%25a?%3C8%3E8'.%3C+5/a?!y%12$/%20nk%7Ck#%3E:y)$4k-8%3Ek2.%20=p?).#y%22.0%3E+*$8a&/7%25*-'7wp%1F).%3C%3Cp*3.n*?&$k,,78mk76%25k%22*%20~$k+$'7p*/2!75k(%25n(%25%22%22%20n)%3C*8k!+p%22/k/y%20*2896%22/$/n+?$,k(+?&a?&%3Cp-3%22+748a%3C'74$6k7%3C$ea%02=*%25.2tn;%25,2%0B,6%3E%20o%22!y-yqy~t%60zly%7F$%1193$9y%3C%22'.n0%3E(3./*5/a-%3C6=krk=%3C3$//=y$$a%7D%60y%179%20;%3E55k%20%22#y182%22=-p,3*%3E19(2k%206p'.%25)%3C%22k2#!.%3Ek'$%3Cy5%25$&7y%20'%202++#ea%1898%20;$/n-8.a**=%7F9$-%3C%3C##a);-$$/8n6%3Ek5#+y69(.%20=#k6%22%20=?%3Ca*%3C6%25%25%25en%14?9$k80#%22#%22%220$2a%22#)%22$7.#%3C%3E?2k(6%22k5./4p8*%22%20y3$-$%3C*~k%009%3C6'8a%25!.p8%20&+y3$-$%3Cy18a8%250%3Ek#*=%3Cp(.'!+%7Ck.9n-5*,k-6%3C$3k'?p;-*70%3E,a?+8=8ok%1A%3C1&a#'-#k%209+y%3E$6k/5'*88n66-a%22%20y$.%20&n%3E1&$8%60y%1193$9*p%25.k%226%3E,$9n19?a-%3C05%25%25'7y%20'%202++#ea%02%20y193$9*p&./+up*%25/+=p*a/+512a*:y$#$k=-195k!?p.%20(&y%22$4%25*y2.'$%3C%3Cp2.%3En:1%25a-'+5ea%0D'!5/a*%3C+?%3C2k)59?%22#'77k6#+7p?).7y3$,.n-?k%20k=-?;ok%080(.%25k/+%22$6k/0=k&9/)8%22%228n7??a9!-1?(%25)y#&.$:1%3C2o6%7Cib%7Bl%7B%7Ftby%3C%0D'!5/al'79?(*%22y4*5*n-9&$$;-wk#%3E)y'#$%25n3?%22/%22%20%3Ep9.$#*~k%00/*%3C4k%209%3C6'k1%22-2#k%22*:%3C7$32n-?k5#+y%3C.7.%22y#.-.--p%3C(%25*6'ea%06/=5k.9n2%3E$6k/7)k&$!=p&%20;=y6$3k%0F+%22$68qy%15&%20%22%22y2%3E&8%0E;?%25*e'6p*//n412#.n0$l-'n%3E5?a$%20y$#$k%220#?ok%080(.%25k:%3C1&a8%3E8'%25(%25)wp%06%20;n+5:4.=-p()*:y$.9?n/98()'59?8k'4%209.=+=~k%009%3C6'8a*'4p*28'*$k-%22%20%3Cp8-%22)1$'8k%226%3E,$9%60y%14.-*7y2.'$%3C%3Cp2.%3En:1%25a-'+5k%20?n-8.a8:8%22?a$(y1%25a*%3C+?%3C2k%3C6%25%25%25k&8%3C=$/%60y-yqy~t%60zly%7Cyxyh6%080(.%25k/y2%3E&k-8%258(%25)y%3C*&k/74k&*#%3Cp(3*=158ok3k%60yqf~h%7Dyt6%0F=4.%25k!)$%22.%25=y$$a/'*%20'%202n%1F%00%18mk/74k5$)%3E%3C.a*%20-9k%20''8#%22/,ntpkc%03'%3E8k0%3E/59?8k)+1;)%22-*rea%1F&%3Cp#.8:y?-a*n:%2585$#y%22$.&n:1%25a%25!.p()$!*5k5$n41%20$k=6=..%25+y5'2.n-8.a#!*$ga*%20=p,(=+y%25;a)+0%3E,a?&%3Cp#.8:y$#$&=%3C%3C-mk90$#.%3E:y%3C.%20='77ea%02(y)$4k/+5k2(%3C6%3C'$/n,%20k(%25n-8.a'!;22a(&8$ga%22:y%3E$a'!77.3k=:%22$-'=y4$6%25n-?k5#+y2$5?!4p.7.%3C%20p?(&+y1k,.=*1,$k'*p9$(+0&.%25en%0E8./k-59(*%22%20%3Ep%10%0D$/=%0Dk.%25n8p9$:;%3C#?$/n41;mk:15k-%22%202p()*%20%3E58a(!5?9a?!y##.%3Cn%20?%3Ea;%3C%3C&%22.%3E=5)k%22'':;.%25k'-~k%15#+y%3C$#)7y3*/k,%3Cp=(8;8%3C'8k%3C%3C#%22;.*y22a/%3C87,(%25)y$#$k,6$?.&n+9,)?n:?9/.%3Cwp6s%7B%7Ci%7D%7Bpf%7Di-%0A%25/+=p%0A39!.#k,$*%3Cp:4%22-2p;-*7wp%02,;%3C6&.%25k:,$$3%22/5~k%08&%3E+?=$/n*?%3E//n11%25%25''77k5$n)%22.7.%20-p(3*=158a*%20=p.9(+*#%227.%22%20p'.%3E*y#$4%25**~k%0F.9y=%3E2%22-y1/%25.*wp%19$/;:5/a?&%3Cp81.+=p*5k919()k76%25k%22*%20y$%3E3%25n%20?%3E3k/0=k(%25n8%229.%3C=y=$%25.n?%22$,kxy$$a~%60y%04#(8n41%20$8n0$k$*=059a?!y=**.n*=*-'n84!48:45%2558by1%25%25k#8;.2k'-p859/-5,((/5%3C2a&!+5k(&%3E6%22?%20%25:y$$a%20+%3C%20k59/:;k.-n.8%22%22#n.12a2!,p*//n%20?%3E3k!)%20$/.%20-#k-*=-p-(9+=~6s%7B%7Ci%7D%7Bsf~j-%0D(3+=p$'-n*39$.%20y3#(9%3Ey#$4%25*wp%0A%25/+=pya&/)#k5$n8%229.%3C=y%20%22%22%20=wp%0D(3+=p9$(!+4%22/,n+5;-*7*p%22/k?,9(*k%3E512a(%3C8##(%25)y$#$k)8=.ok%0F7??).%3Cy#%20(%25n+5%25%25.%3C0%3E,a);%3Ep-(3%60y%17%3E$8:*p8*%22%20y3$-$%3Cy98a%25!.p9%20%25*6=%222.*w-yqy~t%60yl%7By$%11/%25.*y#%20(%25n41%25%20,++p*//n*;%22/k+=9?.9%60y%169(.%20=9%25&k=6=..%25+y9%25a*n:%2585$#y7*,.n5?)#2n7?%3Ca8+748a?&%3C=k%20k%206$%22'%22-8$%22.%25n0%3Ek5#+y3#%20?%60y%04%22,.n-1%20$%25n-?k#.n29(*.*y6$3k,%3C9%25&k%0F%1F%1Bk(%25n8p:4%22-2p;-*7y7*,.n%3E%22.%20?%22%20p9$/;:5/o6%7Cib%7Bl%7B%7Ctax%3C%1C&%3C%3Ek2;/.%3E%22/,n0%3Ek5#+y#*,.n*%20*6%25n8#k.?&%3C%22k1'/%20592gn%20?%3Ef9+y%3E$6k/5'*88n=%22*6%25n6%3Ek5$%3Ewp%08.%3E%20-4$6%25n84/$/n.8./k=-195%22%20%3Ep*a,/45ea%0A*=5/a);-$$/k=6%25%25%258n8%3E/a,+759%20'n)?'(8&w-yqy~t%60ylzz$%02.%25%3E-%3C4k7$%22,=.a$(y#$,.n*?%3E//=wp%06.9+y%20$-%22=1~ksk#6%22.a&/)#k(%25n8%229.%3C=y%20%22%22%20=wp6s%7B%7Ci%7D%7Bsf%7Fl-%0D(3+=p)4,n.9?)k:%3C1&a8%3E8'%252k%206$k6$%3C29%25&k-6%229$(:5)ea%19+=%25($/n-9&$k/+%22$68n*$*8k!7p8%229+%3C%3Ek'9!4p%7Da8+:?%25%258n-?ktk=%3C3$//=wp%0D(3+=p)-*%202p8%229+%3C%3Ek#%3E)y'#$%25n-1)#%22%20%3Ep$4?n49/a,/45e%3Cy~k%60fqyck%606%19%1Bn0#k/$9y5*3%25+=p*//n)%22$&9+*#k5$98%22/2k76%259a%25+!$k-.8%3C%3Ck2#!.%3Ek%20)!/5k5#+y7*,.%60y%13%3E39+7$'8k%7Fi%6031k'*p.%209%20%3C4k'$%3Cy5*%22#n+?%3E//n.?%25mk:198a&/%20p)$k/=:%3E2?+=~k%00/*%3C4k/.9yw%0D3.=1wk,*%3E5985k:6p&%20;n5?*%25k90%3E/.%3C%60y-yqy~t%60ylyx$%11/%25.*y$.9?n8$k5#+y#?%209:y?-a./:8k3$;74k%25%22=)%3C*8%22%20%3Ep?).n%3E1&$k#64.mk:%3C1&2k-6%3E-(,;+1?($%20y1%25%25k%3C6%25%25%25k90%3Ek-%22#0$eak3k%60yqf~j%7D%7Bp6%0D11%25&.*y$#$k#89%25a&+7%25k,%3E=03k5$n8%3Ek$3%3E%3C%22%22,.%20-1'a)/:;,3$;74k%259!75ea%1F&%3Cp'(,&-p#$*%3C-5/a&;*9(a/'=%3El5k%3C%3C1'-2n?9?a?&%3Cp,%20&+y18a%3C+5%3Ck%208n0$k%25%22*y9%25a%09!7;kpgn8%3E/a&!*$k48++#k)**y9?a?;+%3E.%25k!?6ga8!y$98%22%20%3Ep*a&!+5k2.%3C0?%3E2k:6%3E.ok%0D6=&$%25:*p)4,=%192$/%20%600?6s%7B%7Ci%7D%7Brf~hpcsb3%0D%25%25$/n*?&$k!?p?).n%3E1&$k=6%25%25%258n-?k)*%3C4?%25(1+y'%225#n%3C1()k!-8.3k/74k3.*,3.%25k:15k1'/%2059a/+8$#a8!,%3E/a=!5%25&$en%1A?&,.%20-#k#%3E)*%10).%25%25w9$%3Cy~k%60fqxcie6%00/*%3C4k%25./-8k%209%3C6'8a&!=5e%3Cy~k%60fqxchf6%00/*%3C4k,$%3C%3Cp&%20;=y$$a*%3C+?%3C2k%3E03%202gn8%3E/a%3E%3E=1?$/n8%229.%3C=y!%3E((%25y%20'%202n-?k48+y1'-k!?p*39!.#k1%22-2#ea%07+/5'a.*0$$3k'*p(.&'77k/.6-%7Ck).%20:5k5#+y%3C*%22%20n66k4;*8$.2e3k%60yqf~m%7Dyp6%02%3C&.-k+=9?.9n0#k7.%3C%20p%25$*%3C5)k'%22%200##$/oy%04#(8n,%20/%20?+y=**.=y#$,.n49%25.9n%3C%3E,(%25+y$%3C$*%25*p'(=+y#$a8!45k.-n-8.a%25+.p-$*:,%22.2k!?p?).n%3C4%225$%3Cy3*/k,%3Cp?$8:%3C4k(%25n)%25)-%22-wp%0E9;+:$k,$%3C%3Cp%3E1//-58a8!6%3Ee%3Cy~k%60fq%7Fckc6%00/*%3C4k2#/=?%3C2k:6p;)2=03*-k!;:.%22?=y1%25%25k%3E512$9=y9%25a,/45ea%0D'!5/a/+8$#a*%3C+?%3C2k,51(*k!,$'(%25+y2.(%25)y?%3E58'=5k5#+y1(5%3E/5p*39!.~k%07%226%3C4k%22#/-p'.8'77k'$-,#k6#+7p,.%22%20%3Ep-3$#y9%25a,/45k5$n5?)#2%60y%1D$3.n%3C%3E,(%25+y$%3C$*%25*~6s%7B%7Ci%7D%7Buf%7Cjpcsb3%1F93$/n;%25,a%22%20y$$%25*7*p%3E1//-5k%22*;*9%25&k)8=.a'!:;%3E18n8%3E/a(%3C8##$8%60yak,*%3Ey%22.,$8%3C4k'9!4p*39!.#k0%3E':;k1'/%20~6s%7B%7Ci%7D%7Buf%7Cl-%06%20;n%3C4%225$%3Cy%22.-./*5/ok%086%22k/$9y)$4k-8%3Ek2*8%3Cp&%20;=y$$a2!,%22k%20(-6%25%255k,,$k/$:y%22.-./*5k5#+4p;4)%2203'8gn-8%222k90%3C'a(!45k.%25-%3Cp*a)+-$.3k86$%22/,a+1%25*%22%20%3Ep888:%3C=k)*=y2.$%25n)%25?a%22%20y%20'%20(+wp%12.%3En:1%25a8:0%3C'a'!84d2%3E)%3E585k:158$k#8%208a%22%20y3%3E2?!4p,%20&+*~k%15#++5k6%22%225p)$k,,78mk%3E55*2.n+5;.9:y$#$&n-?k#%3E)*%10).%25%25w9$mk/5?%25&k90$#a*%20%20p?)$;%3E8?2k!7p?).n%3C4%225$%3Cy1%25%25k%20%3C'k'./-%259$8%60y%00'$*=%3Cp)$k/.19$k:11?a*:y$#(8n%3C19-2n*$*&.n-8.3.i*p*a;!*#%22#%22%220$2a?&8$k%20%257y=*18n%20?%3Ea&/25k,*7y2.a/+55?$/n06k5#++5k%209+y#%22&%25'?9(%20%25:y3#%20%25)%3C#k(%25n-8.a-;-%259$k:6p?).n.12a&/)#k%209+y#*7.*up8.k%3E55*2.n=?%25f?n*%20.//n-?$a'!77k.%25n8%3E2a&/*$.3;'%3C3.2k/-p?)%22=y%20$(%25:wp%12.%3En:%2593.%20-%3C2a#//5k5#+y1)(''-)k5$n5?*%25k/7)$/.=y=*18n8%3E/a8//5k5#+4p?.k76%259a*-:?%3E/?by$#.%3E)1p?).n6%22%22&%22%208%3Ck,*%3Ey=**.%3C*p(3.*0$k6%22%225p)$k=8&.%25k90$#a?&%3Cp&%20;n-?$ok%1A198a%22=y%20*3?n66k%20k=%20#?$&n-8*5k90%3C'a#!)5-4'%22%20p*-'!.p;-*7%3C%228a?!y=**.n/19(*%20-#d(&%3E+?=$&+7$8a?!y53(8:0%3E,a&/)#ga%3C'-8$4?n*$.%20''77k5#+4p$3k%206$k&%2280%3E,a(%3C%3C4%225en$b%7Bs%7Bcidfs%7C3%1F93$/n3%25&1k&%3C9,)?n;5%22/,n5?%3C$9n-8*/k'7p%09.%25%25yaga(!7$9.'=y=*8k/5#$a-+%3C%3Ck,$%3C%3Cp9$8%3E6%3E8(=+y%3E$6en%184/$/n8pl%22$#)%3C.9k%3E1)8((=~p$1?'6%3Ek5$n-8.a%06/)p%0E%25%22:6%22ea%0A*=5/a*%20y%11%255%22c%0D%25%25/.%22y?;5%22!7p-.9n)%3C*5-!+=8ok%0F=4.%25k#6%22.a&/)p8(1+y?;5%22!7#ea%06/)#k/$9y#;%20%3C%20y79$.%20v).-'!.p?$*#y%20'%202++#k%20?n%3E%22.$%25a%205'-$9y$.%20&n*%20*6%25=up%3E/'+*#k5#+y=*1k*658/l:y8*7.n8%3E2a,%3C%3C5%25n2+5%3C$6k=)1%3C/8by9%25a%3C&03#a(/*5k(?n.9'-k=)1%3C/k:15&a*:y%22.%25d,5%25.a8%3E8'%252en%1F93$/n5??2k!?p.%25%22:6%22k#%3E)*jk+$'7$k%259/.p'(%25+y%3E$5k,%3C9%25&k=8&.%25gn+?/a!!0%3E?a8!?$%25$8=y%60k%22*;*9%25&k-+18).=up*//n8p(3*=1p(%20%3E=%3C4k#2n)?'8,!7#e%3Cy~k%60fq%7Fckh6%0C*'7p&$%25;y%22.1'/%20#k/$9y7%227.n:%22.%25%22:y$$a?&%3Cp$3%22)0%3E*-k#8%20k%229+8$$3k'?p%225l=y%3E$5k/7p$3%22)0%3E*-k#8%20ea%0A*=5/a*n*%3E*1k)+9/a?!y$#$k+=9?.9by9?2k=0*.a(/7p)$k=%3C$k(%25n-8.a%06/)p%1B3$%3E%3C%22?(.=w-yqy~t%60%7Flx~$%1D*1k%2261/a%3C'74$6k%206'k%20%3E:6p9$-%3C%3C##$8n%20?%3E3k!.%3Ek,*%3E*p%3C).%20y)$4k!)5%25a%22:wp%1B4)%2203'8k%3C%3C%3C.%208'77k%20%25*y&$5%22%20%3Ep$/k#8%208a%22=y3$,%22%20%3Ep8.$%20w-yqy~t%60~l%7B%7B$%11/%25.*y1)(''-)k5$n)%25)-%22=1p&%20;=up=.?+up*//n1??-%22=-p*%25/+=~k%00k%3E+5=($;*p%3E1//-5k6*%3C75/a%25!-p?.k=)5%25%25k:6?k-$%20%3Ep$/k#8%208a)+:1%3E2.n-8.8k#8)k&.:y'%221.*y9%25a*n?%25?49+y%25;%25*:%3C%7Ck5#'*p#%208%20~$k)*%3E)5%25$/n8%3E/a?&%3C%22.f8n7?k-$%20%3E59a*n+98*k!?p%225en%0D8.3.i*p,.%22%20%3Ep?.k,%3Cp8.&+y531.%3C0=./?/-9$/k90$#a?&%3Cp=.?'77k%20%25*y%22*/%20'77k22=-5&2gn+9,)?n7?%3Ca2!,p(%20%25n6%3E'8k:1%25&#8n,%20k,*%3E*%7Ck8$;y3*/k*6p%225k#,%3C?(;%22%3Cp?(&+*p*//n%20?%3Ea*%3C%3Cp./(!,%22*&.*y$$a/!y9?a-!+p&%20;=y)$4k%3C%3C%20.%20?+=%3C2a;%228)ea%02#)%22$7.*y!%3E%20''-)k.-n+584':*p%3C).%20y#.%209-19%25&k(6%22k,*%3E*~k%12./+3#(%25)y98a(;+%22./?%22%20p$/'7y6$3k%0Chp&%20;=y1%25%25k90%3C'a)+y1/%25.*y6$3k%0Ckp&%20;=y#$.%25%60$b%7Bs%7Bciefpy3%0C%19k3.*%3C#%22&%25+=~k%0C%3E=03k%20/*%3C4k#*-2p%22/en%15??2k#6%22.a;!598)k-6=%22/,%60y%11/%25.*y%7F&4?+y1%25%25ka,%3E&4?+y3$,&/748o6%7Cib%7Bl%7B%7Btax%3C%0D'!5/a%1E%07y2%3E&k!7p'.%3Cn+58.';-9$/k*%3C&%22%22.=wp%0D(3+=p'.),%20p*//n%3C4%225$%3Cy2.(%25)y1)-.n-?k#.n+58(1+=p)$2!74k5#+y2$4%25*8%22%22$8n66k5#+y7*,.%60$b%7Bs%7Bciefp%7D3%14?85'7y6%229.*y$#$k)8=.a-%3C%3C51(%25)y1-5.%3Cy%22.5%3E%3C79%25&k:6p%225k(+?&a*n=9-'.%3C%3C%3E?a)%3C6'8$9n-1)ok%1E512$9=y:$(%25'77k3$!4#k6%22:1p?$*#*p'.(%25%3C4k/$9y1'6*7*p!.%22%20y18a8%3E%3C3?%20?!+#ea%0D'!5/a'!;22a(&8$k/$:y#(3$%2259%25&k*6'%25a?!y$#$k,6$?.&n.8./k%3C%3C$%3E3%25'77k'9!4p*a,/45ea%02%20y7*,.n:8*5k!)1((?7y1%25%25k(6%3E?a%3C+07#5k-11%25&.*y$$a)%2263%20a?&%3Cp,%20&+y%3C.28n8%3E/a)+y=$3.n+5*%25*,55ea%08!4=*//=y3*/k,%3Cp%2228;%3C4k'9!4p%22/k)8=.a(&8$ea%08&8$?(%25)y9%25a:;03%20a;%228)k&*#%3C#k3.=%3C$8a%0A%08%12p?(&++%7Ck%20%25*y$%22,.%3Cy%22.-*6%3C4k5$n;5k-.=*p859':$ea%08&8%3E,$/n4%25?$k,%3C8*7%22!,%22k2$n-8*5k/7)$/.n:1%25a&;-5k%20%2576%3E.a.%22*5ga9/-8.3k:11%25a$%205)k5#+y8$2?n4%25?(%25)y#$,.!75k'$%3Cy$#$k91?'$k%3C6?&ok%0607#a:;8%3C%2252n%3E%22*1#':#k/$9y4.'*;5$8a?!y?-'k(6%22k%02#%3C6=.%0E%18n=5=((+*~6s%7B%7Ci%7D%7Btf%7Ch-%0A%25/+=p8$*%3C:8%22/,n??9a%09!7;ksk#8%208mk/74k%20/*0%3E,a&/)#k5$n%20?%3E3k(8&$49'-58ok%1B*5kn-//p$3ka,%3E-%20=n0%3Ek-$,;)k.9n0%3Ek&*#%3C~6s%7B%7Ci%7D%7Bwf~j-%1859+8='(%25+=p,%20&+y6$3k%20%3C'k1'/%20592en%175%3Ca8'4%20'$k)8=.a&!=5k%20/*%3C4k'$%3Cy%3E.6k%3E512$9=wp%0D(3+=p&%20;n5?*%25k90%3E/.%3Cn6%20./%22%20%3Ep?.$n519&.n6%3Ek2$#%3Cp'.%3Cn+58.';-9$/k*%3C&%22%22.=w-yqy~t%60%7Dl%7Bv$%1D./%3En45%254k:6%20k%20%25*y2$5?!4p)%209=y8%22%25.n.8./k#6&%22/,n4?%3E2.n6%25?2%22*%3Cp?).n%3E1&$en%1F93$/n8%25?.k%2267%22/k/74k'.::8%22/,n41%22/k#%3C%3E%3Ea9+)%3C*88n*?&$?'458a-/0%3C%22/,%60y%16%229.*y69(.%20=p%3C(%25*6'k.;+79%25&k:6?k-*%3C%3E5k.%25n*?&$k%226'k3.=6%3C%3E5%22!7p/$=':58o6%7Cib%7Bl%7Bxtaz%3C%05+-'$3%20n6%20?(&'*1?($%20*p*//n0=;3$8%3C=./?=wp%0A/2n;%25,2qn;%25,2%0B,6%3E%20o%22!$b%7Bs%7Bciffp~3%1E%22.%20?%22%20p9$/;:5/a'/%3E%7Ck2'!.4$6%25n8%3E/a&+4?98k;*1,$k:11?a,!-p;3$)+582%228%3C%3C2a%3C!+#.a?&%3Cp'.%25)%3C%22k8$;y8*%25k,%3C5%25a%22%20y7*,.%60y%179%20;%3E55k%119!!p%222k%206'k%069/)%20'$gn8%3E/a$%22=p%0C3*%3E)%3C.a#/*p)$.%20y%22.,$8%3C4ea%06/)p(3./-?92k-8%3Ek/$9y=*3%20n-8.(9n41;2k/*p/$8'%3E%3E.%25k(6%22k%20k%3E8%22?((;519a&!=5ga*%20=p?)%22=y98a8&6'%25a%22%20y$#$k#8%20k-$/=p%3C(%25*6'ea%0A*=5/a.6)59(&+7$*-k(+58)k%220#?a-!+p%09.%25%25ybk,*%3E*~6s%7B%7Ci%7D%7Bwf%7Fa-%0A%25/+=p9.$#y%3C%22/%20'77e%3Cy~k%60fq%7Dchi6%00/*%3C4k%20k%20%3C'k52%3E%3Cp$'k-8%20k;$%20%3Cp?)*:y98a?%3C07,$9+=p)8k!-8.3k%3E1)8((=y?)+.--#k(%25=-5*%25k!?p;-*7%3C%228mk/74k6%22%225p(%20%3E=%3Cp*a?+8=k5$n0%3E85*%20-%3C2a%3C'7~k%15#+*5k%22*%20y2.a%3E=%3C4k5$n%3C18('7y=**.n-5*,k,8#.%25k#8%208a%3C&%3C%22.a-!+p.9*#)%3C.a,+-$%22/,n8p)%20'%22y$#3$;%3E8k%20k)61'a%3C'7#k5#+y%22$4%25*y6$3k:15k5./4~6s%7B%7Ci%7D%7Bwf%7Cj-%07%209)%3Cp%0D%11%18n0=;3$8%3C=./?=y581.-01'-2n.8./k&07#a:;8%3C%2252n%3E%22*1#':#k%209+y5%25%20)%22%3C4ea%18%250%3E8a'!6;k2#/+%20.3en%1A?'.9+=p)%20%25**p9$&!/5/a%22%20y$.%20&n%3E1&$8by2%3E5k-6%3C$3.*y?%3E5''75k5#':;%25$8=y9%25%229+8#.%25en%09%3C*8k,,$?.%25=y?%25a&/0%3Ek,.%20,p8%22*%22%3Cp)$?:%3C%22ea%19+=%25($/n0%3Ek&*#%3Cp()*:y$$a~n59%25$8n-?k).%22)p9$/;:5k#'!:;%22/,%60$b%7Bs%7Bciffs%7D3%14?9$k,07k%07%1B%1Dy9&19!/5&$%25:*~k%07%226%3C4k5#+y=*1k%2261/a%3C'74$6k/74k$/'-?9a/'*%20'%202'77k(%25-6%229$(:5)k.%25n%1F99$-!!~6s%7B%7Ci%7D%7Bvf~m-%0D(3+=p8*%22%20*p/(8%3E512(%25)y9%25%22$%3C+5(5'7y9%25a:;03%20a;%228)ga*%20=p-(3+=p?).n-%25?.9'8%3Ck/$:y'$3%20'77ea%19+)%3C*88n7?%3Ca$%205)k%22*%3E-%259$k:15k-*=-pzqk=%3C3$//=y%25;a%3E%20-9'a?&%3Cp9$(!+4k#%3E:-?%25a%3C/*p;3.=*5/mk:6p)$?:%3C%22k)%22)1%3C%22&#:y79$*:y=$,.%20-#k3*:159a?&8%3Ek'%3E%225p9.%3E%20=#ea%02%20:%22.%208+=p?).n)?%3C$9n66k5#+y2$.8:%3C%228a$%20y%06%1F%0E%07n4?/$k:6p&%20%20+y6'8%22%20%3Ep*a)'-p.%208'%3C%22e%3Cy~k%60fqsch%606%08&%3E+?=$/n41;a=!-9%25&k:6p;3$#)$k1'/%20592k:6p=.?+y9%25a,/45ga*%20=p()*%20%3E5/a?!y?%25$k86$.a;++p*%22(!,%3E?o6%7Cib%7Bl%7Bvtaz%3C%06/)p'.**y'%22//!.p%3E1//-5/a?!y##.%3Cn4?9$k#8%20k(%25(6%22&%20?'6%3Ee%3Cy~k%60fqschd6%032n=5-%20%3E%22-p?).n*%20*%22.n252a%25!.p*%22?'/1?$8n15*72by1%25%25k/y$#(9*y#.5k!?p%20$2,619%25k-6%3E?3$%22*p(%20%25n;5k%22$%20?9,49+=~k%12&/5%3Ck(&%3E+?=$&+7$8a?!y$#$k-,#?.&n%3E1&$k%3C6?&a''*$e%3Cy~k%60fqschi6%00-:%3C%22k$*-1p9.%3E%20=p?).n.9%25/.%3C*p8*%22%20y98a%25!.p8)$97%7Ck%20%25*y%22$4%25*y$9%20%25=0$%22.%25n8%3E%22,*:0?%252k&8&.a)+%3C%3Ek5%22*05/a%3E%3Ewp%1F).n%3E1&$k90%3E/.%3Cn7?k-$%20%3E59a-'5%3C8a?&%3Cp./?'+5k2(%3C%3C5%25a$%20y%3C*3,+y=$/%22:6%228ok%0C83%20&9!,%3E/a,%3C84%22$%25:y3#%20%25)%3C4k5$n;5k-%22)1$.3k=6p%225l=y$#$k=8=.a*=y9%25a?&%3Cp$-/n/592%22!7p$'k%0C6%3E%20ok%080(.%25ki)%3C*8.%3Cy%3C.'?iy=.28/%3E58a8!45?(&+*p%25.?n8%20;$*%3C0%3E,a%22%20y9%25l,/45k%22#/-~6s%7B%7Ci%7D%7Byf%7Ck-%18.%3E%20=p=.';458a%22%20:%22.%208+=p?.k,%3Cp?).n*1&$k/*p%22/k%0C6%3E%20az%60y%03&%20'%22y3#%20%25)%3C#k5$n-8.a&!/5&$%25:y%20#88':#k5$n)%25?a?&%3C=k#*-2p?.k&6'k5#+%20p*3.n0%3Ek%03$%202pz%7Bk'?p2.%3Ei+5k,$80%3E,a%3E%3Ey1k2'!)5k8$;~%3C'a!;4%20k)%22)159mk/74k(-n%20?%3Ef9+y=$7%22%20%3Ep/.%3C%20y1k2'!)5k8$;y'$/?n3%25&1k/*p#(,&wp%02'k76%25l3.n1?'%25%22%20%3Ep%13a*%20=p*a/'+5(5%22!7p%20$2n%20?%3Ef'%22y3#%20%25)%3Cp/(9+:$%22.%25n*%3C%22&#:5)k2'!.59a?&8%3Ek8$;y4%22%25k,%3C6$3.%60y%00.3-!+=*/(+y?;5%22#0#*5%22!7#k5$n+5/4(+y69%20&+y%22*5.n=%22$18n8%3E/a8!,%3E/2k=6=.5%22#%3C#k#.'77k%25.%228).%25en%0A39$.%20y##%20%20+y9%25%229+8#.%25k:6p)$k/;?%3E5k:15k2*#%3Cp*2k'7p%09.%25%25yaga*%20=p)-*-2p)%209=y1?a?&%3Cp.%25,+*p$'k:15k2(%3C%3C5%25a/;+9%25&k=11%20$k(0(.%25en%1413a9+)%3C*8k%22%3C%3E,5#n0%3E(3./*5/a?!ya~a8+:?%25%258by1%25%25k'7$9./;:5/a*n49%25(&;4p'$%25)-8k.-nlp8$(!748ok3k%60yqf~a%7Dyt6%1A.5**.*y$#$k=6%25%25%258n-?k%20'%226'k2$#%3Cp/(8:6%22?($%20y1%25%25k#8;.a)!,%3E($k/74k%22$%2259/$k=6%25%25%258n5?%3E%25.%3Cwp%08)*%20%3E5/a?&%3Cp#(,&y!%3E%20''-)k&9/)8%22%228n6%20?($%20y9%25a?&%3Cp8$?:0%3E,2k:6p%22/8:%3C1/a)+y%3C$6d#%3C4%224&a19,)en%16%3Ek)%22)1p?).n31,&.*y5/&.=y$#%20?n,#.%25k:6p*1;+8%22k.%25n*?&$k%3E51?'$%3C4#k)*=y2.$%25n?93$/%60y%1D.%25%22;4p%3E2.=y1k'*=-p*/?'y1'(*=0%3E,a&+-8$%25k:11?f8n7??a*=y#&.$:1p)4?n0#k%20k)6?/a(!4%209.&'*5ea%07!.p#%208n7?k%20%25:0p*-%22/*9%25&k/74k2#!,%3C/a,'/5k&$!=p-3*#%3C%22*5.=y?%25a&!*$k%25.803.2e3k%60yqf~a%7Dyv6%0F=4.%25k%3E51?'$%3C4p).%3E%20:5k1*%3C-9(-.=wp%08)*%20%3E5/a/+8$#a;/+$%22%22'+*p?.k,%3Cp?).n*1&$k-6%3C$38n8#k5#+y%20'%202++#k2%20'7~k%00/*%3C4k%20k,,$?.%25n0%3Ek5#+y=*1k+=9?.9n-?k(%25=-1%255'7y$.2?n%20?%3E3k#8%20k(%25n%3E1&$gn.9?)k91?.7.%3Cy5'2.n0#k(%25n-8.a9!6=ea%18#8%3C'a='*%25*-k'4%209.=+45%2558n-?k5#+y=*1k+=9?.9n%0C%19ea%0D'!5/a);%3Ep%3C).%3C%3Cp%3C)%22:%3Cp).9*%3C%228a8!45?(&+*p*1;+8%22k.%25n-8.a9'%3E8?a*%20=p).?:6=k$/)%3C#k.-n;1(*,%3C6%25%25%258%60y%16%229.*y2%3E&k9159$k:15k&*#%3Cp%3C.%3E%22=p1.$#y%22%22&#:y9%25a*:y$#$k+74k.-n%3C1()k%3C6%25%25%25e3k%60yqf~%60%7Dzx6%0F=4.%25k(6??#*%225p&./+w-yqy~ta%7Bl%7B%7C$%13'%208=03k0%3E':;k1'/%20p%222k%206'k5#+y#*,.n=)%25%20&':p&%20;n+??%20?'6%3Ek%208n0%3Ek%03$%202pzok%0304k3$;74k%22$;7$/.%3C%20y$%22,.%3Cy1/%25.*wp%184;%3E6%22?a**=5/a-!+p--2'77k,*%3E*~k%07%226%3C4k1'/%20592k%206$k#.'77k3.#6&.%25k(+?&a?&%3Cp;(?-1p%22/k(6??#*%225p&./+y'#$%25n55*7%22%20%3Ep&(/n%3E1&$en%1F93$/n;%25,a(/,#%22/,n3%25&1k:6p8.&+-9&$8n7??a%3C!+;ea%0D'!5/a);%3Ep%22/k=6=.a%09!7;kpk#8%208a%3C&%3C%22.a9!-1?($%20y:$(%25:*p%3C.%3E%22=p8.&+-9&$8n;5k(%25n-8.a%3C%3C6%3E,a;!*9?($%20wp%1F)%22=y6%229k#8)k)*8%3Cp()*%20%3E5/a8!45k3$:8$%22.%25n3?%22/?=y9%25a.60#?(%25)y%12$/%20nkp&%20;=up%3E/-!+$%3E/*:%3C%3C2a?&0#k(8n75($8=8%222a?!y=**.n-8.a;&%20#%22%228n:?%252%22=-5%255k/:%22$28n;??)k8%3C%228($%20*p$'k:15k&*#%3C~k%3Cy~k%60fp%7Bchf6%14%02n:?'.9=y19$k,83%20a?!y$#$k-5182%22-y%12$/%20nhp852%22%3C~k%11$%220##$/n*?&$k#%3C%3E%3Ea*%20=p%1E%08k'-5&2en%1F93$/n;%25,a(/,#%22/,n*?%3E//=y$$a/'*$$3?n8%3E/a.8%3C%3E?4*%225)k2?!)p;-*70%3E,ok%080(.%25k,,7k%22*;*9%25&k:15k2*#%3Cp9$;%228)8a?!y#$,.:0=.2k%3C%3C%20.%20?%60y%13%3E2?!4p,%20&+y#.%209-1p)%209n+5&.=+=~6s%7B%7Ci%7Dzqf%7F%60-%08)*%20%3E5/a?&%3Cp/$-/,%3C?a'+/5'a8+55(5k-8$.&$%3C%20p-3$#y%169$8&y$$a%03!-~k%16#+7p,$?:0%3E,a*n59%25*k:6p8)*%3C%3Cp*a(;*$$,k%3C6?&mk:15k-%22%202p%222k%206'k%20%3E:6=*5%22-8%3C'8k-6%20%22$/n??9a2!,~k%07%226%3C4k#%3E)y9%25a?&%3Cp.%25%22:6%22k6#++5k3.%208=%22/,n8p%25$%3C%22%20p(3./-5/a8%3E8'%25a;!0%3E?a%3C!,%3C/a*--%25*-'7y%22./*#%3Cp%3C)*:%3C&.3k76%25k)**y#.-.--5/a;%3C%3C&%22.%3E=5)ea%0D'!5/a);%3Ep%22/k:15k$/'-?9a(/,#%22/,n7??a*%225p8)*%3E%3C#k5$n;5k%25.%22%3C$.%25k915%25a/+55?(%25)y1k#$*%20%7Ck6#':8k,./7$k5#+yw;)2=038a8&8%20.2ln:?%3E/?n.18a%22%20:?93.--~k%00%257y=*18n-8*5k/5%22.%20/7y8*7.n-8%222k,,7k6%22%225p85%22%225p#%20=+y9?mk,,$k5#+y5359/y##%20;+*p?)*:y19$k=-%25(*k96%3El5k-8%258$k/7)k1.%3C??9,*%20:5k2'!.4$6%25%60y-yqy~ta%7Blyz$%1D*1k86$%22/,n7?%3Ca?/258a;%2283.a*(-59a*n%3E1&$k&8#k'%22%200##$/by%22*5#++p?)*%20y2.5%3C+%3C%3Ek3$;748ok%176%25k%22*%20y1'2$n?1=.%3E%3C0$.a&/)#k'9!4p?)%22=y'%22//!.%7Ck%25$'77k5#'*p%3C('%22y3$4%25:y18a*%20y%25;7$:%3C~6s%7B%7Ci%7Dzqf%7Cn-%0E%25%22:6%22k4;*8$.%25k=6p?).n=%22$1/!.%3Ek'$%3Cy3#.$=0%3E,a?&%3Cp&./+y$#$k#8%20k(8n0%3E?$%25*%3C4k'$%3Cy98a&!+5k7%22=02'$en%0E8./k#8;%22/,n8p&%20;n0$l2k'4%20$3?/7$k5#/-p2.%3En*5?a?&0#k%20%25*y4$/l:y:%3E2?n55*7.n0$ja%12!,p(%20%25n7?%3Ca/+55?$k76%259a&/)#k'9!4p?).n55=$'n*5'$(:y'%22//!.%7Ck%20%25*y1'2$n+5&.=+y=*18n?%22$,k76%259a-//?%3E3%22:%3C#k-%22=-~k%00/*%3C4k%20k#,$.a);-$$/k:6p?).n)%3C*8.%3Cy49.;*6'%25a&+7%25k(%25n-8.a'!;22mk/74k%20/*%3C4k2$#%3Cp&.%3E=%3Cp8.%3E%20=#k5#/-p%3C$9+y=%2228'77e%3Cy~k%60fp%7Bckh6%07%226%3C4k#%3E)y3*48'77k2$#%3Cp%22/k)8=.a8!,%3E/2k:6p;-*7y$%3C((+wp%06(/n+?%3E//n.9%25/.%3Cy$.9?n??%255k-11%25&.*wp%0C4.=-p%25%20&+*p*//n*;%22/k-6%3C$38n8%22.a%25!.p8%20=+=p'.(/5%3C2o6%7Cib%7Blz~tc%7B%3C%1F&%3Cp#.?n5985k!7p?).n41;a'!84k6%22%20=?%3Ca%22=y%3E$6k=%3C%20*3*:%3C4k(%25:6pxa(/-5,.9'%3C#qa%0C+759%20'by%179%20;%3E55ga*%20=p%0F$*:1p%0A39!.#ea%18+8%22()%22%20%3Ep%3C('%22y#?('%22y#.%209-1p*-'n41;2en%1C4%2258n8%3E/a%0D%3C%3C##a#//5k#.+7p9$&!/5/ok%0F=4.%25k/y3$4%25:y6$3k:15k/%3E#;59a$(y%20'%202++#k%22%3E%3C+5%255'7y?%25-%22%20%3Cp?.k:15k5$%3Ey2*3e3k%60yqf%7Fh%7D%7Bu6%077p,%20&+y3#%20?n+5852%22%3C4ea%02#)%22$7.#%3C%3E?2k:6p?).n5?)#2ty'#$%25n)%3C*8.%3C*p&(%25'498$k:15k#9!.#.3k!+p()*%20%3E5k#9!.#.3k:82k5#+0%22k/.:.?9*k,8%22k6%22%225p%25.%3Cn-%259/k)+52a?!y9%25%25%22-8$.a?&0#ea%0A*=5/a*n-5*,k%2263%20a);-$$/en%1C1()k%3E512$9=y%20%22/,n0#k/$9y&%222%22,55k4%25*%3C%22k5#+0%22k/.:.?9*k,8%22ga%22%20y=%22-''*5(.%25**pc,8gwp%07.%3C++p%254&,%3C%22k(8n;5?5.%3Cwpk%12&/5%3Ck%14%02n;%25,'%226%3C#k%20%25*y?;5%22#0#*5%22!7#e%3Cy~k%60fpzcii6%069/)%20'$k?,9(*k%3E512a9+55*2.*wp%1F).n41;a9!-1?($%20y98a(;+%22./?%22%20p*a8:8$%22%22k%3C6$*5%22!7p$'k%7C%60p&%20;=up*//n4?9$k90%3C'a)+y1/%25.*y1-5.%3Cy9%25l,/45k%07%1B%1Dy8*2k,%3C5%25a%22#)%22$7.*w-yqy~tayl%7B%7D$%12%3E&8qy2%3E&8%0E;?%25*e'6qk%07%1B%1Dy9&19!/5/a.=)5((*%225)k.%25n:595*'7p&%20;=wp%1D$97y%3C*3,+y3%223(%22%3C#k(%25n41;2k#8)k)*8%3Cp;(3+51?$/n%3C4,$8n8#k%20k%3C%3C#%3E-?n66k5#+y?;5%22#0#*5%22!7#ea%0D'!5/a);%3Ep(%20%3E=0%3E,a;&8%3E?.&n;%3C%3E$k%3E512$9=y$$a*%3E)5*3k'7p:4%22-2p;-*7wp%0D(3+=p)4,n:1%3E2%22%20%3Ep;-*7%3C%228a%3C'-8k/$n*3$3.n-?k/$:y##.%3Cn,%20k(%25n-8.a8-6%22.a''*$k(%25n(%25%22%22%20n)%3C*8en%1F93$/n;%25,a(/,#%22/,n*?&$k%3E512$9=y$$a8+%3Cp*-'n*;%22/8by1%25%25k:15k'$!-2*-'n)9?%22#by18a%3C&0$.ok%074%209.=+=p*1;+8%22*/(+y?-a8%250%3E8a?!y%22.,$8%3Cp!%20,)%3C4k$/)%3C#ea%02#)%22$7.*y$.%20&n*;%22/8n-?k)*8%3Cp(-./+59a(!5?92en%10%3Ek%209%3C6'8a&!=58mk&%3C1=8k-8%3Ek/$n5?%25&.%3Cy2.a%3E=%3C4k%20?n-8.a8/45k5%22#%3Cp*2k*+1%3C(%25)y1%25a*%3C+?%3Cok%074%209.=+=p*39!.#k%20%22#0%3E,a,%3C8%20#((=wp%1D%15%04%02y%22.,$8%3C4e%3Cy~k%60fpycid6%07%226%3C4k#%3E)y3*48'77k5#+y3*,.%3C8p?.k46?&a%22%20y1?a?&%3Cp.//n66k3$;748a-!+p8.&+y%20'%202++#e%3Cy~k%60fpycidkiyg$%16%229.*y%03%22,;%22%3Cp:4%22-2p;-*7y%3E$5k96%22%20(%25)wp%0D(3+=p/$*:1p;%209:03'$8n0%3Ek5./4p,%20&+*p%25.?n;5%22/,n-8.a(!+%22.%22?n-5*,k-6%3C$38%60y%16%229.*y#$,.n49%25.9n%0C%19k#%3E)*~6s%7B%7Ci%7Dzsf%7Fi-%0A%25/+=p;-*7%3C%228a8%250%3E8a%25+!$k5$n%3C1()k!?p?).'+p&$8=87.2k'7p?).n5?)#2n-?k,*%25%3Cp%20$.%3E0%3E,a?%3C83%20a$(y'#.l=y#*8%22%20%3Ep%3C)*:y=%3E%22#n%3C18(.%3Cwp%0D(3+=p*39!.#k(%25n-5*,k)8=.2k%206$k48'77k5./4p(.'!+#e%3Cy~k%60fpychf6%13.%3E51($/n-8.a%0D%1E%0Ap(.%3E%20-59a%3C'-8k%20k#6%22.a8'4%20'$k!75k%20-:%3C%22k%25%22=:?=$9'77k5#+y?'%25k!75k6*=y1(5%3E/5%3C2a(/,#%22/,n8%3Ek%07%1B%1Dy49.;n66k%20)!,$ktnn0$8$'(wp%02,;%3C6&.,.%20-#k5$n-8.a?;-?9(*%22wp%1F4?!+9*-k,,$?.%25n0#k/$9y$$1k!?p?).n5985k(6%22k&%3E+*$8ok%1D0=;-%22(05/a?&%3Cp&%20;n5?*%25k90%3E/.%3Cn-?k.%25%22%20p#%20=+y$%3C.k-8$.&$%3C058a-!+p%09.%25%25ybk,*%3E*pfa%03!-p*//n%1D5*5#n%18%229.%3C=wp%1F).n:1?$,!+)k(8n=5?$9#0%3E.%25k/,$$,*:03*-'7cp?).n~%16$3k#64.fk=%3C$?(%25)y9%25a?&%3Cp.%25%22:6%22k/$n5?%25&.%3Cy1-'.--#k6#':8k%22*:%3C7$32n%20?%3E3k#8%20k6%22%225p)$k=1?%3C/k'7~k%12&/5%3Ck$/'-?9a%22#)%22$7.#%3C%3E?2k:6p?).n:?'.9n)9(*.%3Cy1%25%25k%220#?a$(y##%20;+*~k%15#+y$21.n66k2#/)5k(8n*8$6%25n8#k%20k%0Dup%19a$%3Cy%00ga*%20=p%225l=y##.%3C%20y9%25a''%3E8?a,%3C%3C)k(-n0$l2k%206p;)2=038ok%0262)8k%228)$4?n0=;3$8%3C4k2''%3E8?-2%60$b%7Bs%7Bchbfsx3%184/$/n4?/$k(0%3C?$9=y$$a?&%3Cp(48:6=k&*#%3Cp9.$#y%3C%222?%60y%19&19!/5&$%25:*p?.k:15k2%20'7p.%25%22:6%22ga'/%20592k-8%3Ek/$9y2.a*%20%20p(.'!+p2.%3En59%20$en%1D%22*&,'77k6%22:1p?).n4?%3E2.n839.8=y$#$k%3E+5=(.9y'%225#n8p'%202++p8$'+:$.%25k90%3C'a9+)?8(?'6%3Ek5#+y%3C*8.%3Cup*//n*39.'%220%3E,a%3C&0%3C.a?&%3Cp&.%3E=%3Cp%222k&%3C%3C/a/!.%3Ek6%22%225p8%22*%22%3Cp?).n512$9%60y%19-a2!,p*-8!y8$-/n-8.a8&06?a%20+%20p2.%3En.9'-k%3C6$*5.n-8.a'/%2059ok%1C6?&2k90$#a-%3C05%25%258n0%3Ek5#+4p*3.n7?%3Ca8!+$.%25k,%20p/(8:8%3E($en%0B5&.=+=p8(&%3E55k&*#%3Cp&./+wp%0D(3+=p?).n%3E1&$k*0#;-*70%3E,a%22%20:?93.--%3C2a$%20y#$,.n;%22$68++#k6%22:1p#(,&y*$.&n6%22k%25%22=)%3C*8k=:1'(%25)y#.5?'778ok%036%22.a;!598)k:6p?).n%0C%19e%3Cy~kafqzcha6%13%02%1Ey%16'%208&yjca%06'%3E%22*5.*y$$a&/0%3Ek%25$#89%25ok%080(.%25k=:1'(%25)y982%3E+*p$/k=6=.a#'%3E8k3.=6%3C%3E5%22!7p/$=':58a(/,#.%25k,%20p'%208:y%25;%25*:%3C~k%12&/5%3Ck#%3E)?93$8n8%3E/a%22#)%22$7.#%3C%3E?2k:6p?).n41;a.*0$$3en%1F%22%22$%25**p'(8:y%3E$6k=1?%3C2k(+9.//=y69.&n-8.a%0D%228##a=++#%22.%25n66k5#+y7*,.by#$a2!,p(%20%25n*5%25%25k:15&a-%3C05%25%25k%3C%3C!%3E$8:*~6s%7B%7Ch%7D%7Bpf%7Fm-%0D(3+=pl%12?/%20p'.,)%3C4k(%25iy%3E$5k96%22%20(%25)wp%0D(3+=p%2228;%3Cp%3C(?&y%12$/%20nhjk%0C2n%141;2k/74k%03$%202pz%7Bk%03%20p%0D%20==y%3C%222?=y%3E$5k%2261/(%25)y1%258k#6%22.a&/)#k6#+7p2.%3En*39.'%22%3C4k5$n-8.a)!-$$,gn8%3E/a%3C'-8k2$#%3Cp&%20;n+584':*p8)$90%3E,a%3E%3Ey?%3E5k!?p$3/++~k%3Cy~kafqzchh6%12%22)79-((/7$k%07%1B%1Dy9&19!/5&$%25:*~k%07%226%3C4k,*%3Ey#%3E&,+*$%22.%25=y9%25a(;*$$,k)8=.2k%206$k6$%3C29%25&e3k%60ypf~h%7Dyy6%1C%3C'$3%20+=p?).n%3E%22*1;%22%3Cp;)2=038a?!y2.a&!+5k3.%2201)-.n8%3E/a(!7#%222?+7$ea%0D'!5/a);%3E#k%22*;*9%25&k%3E512$9=y1%25%25k-8%20?49+y*$/.=y$$a8!45?(&+*p)4?n7??a*%22.122k,5?(*k)+1;1'+*~k%00/*%3C4k%20ki%17?k&9/)%20'$ln6%20?($%20y6$3k=11;$8n0%3Ek5#+y5/(?!+%7Ck2$n%20?%3Ea(/7p.%208'5)k2.:y##%20;+*p?.k%206$k#.n%3E%22*1;%22%3C1)-.%60y%04#$k&83%20a$(y%258(%25)y3*1?;+5k;$%20%3C#k2.:y$$a%22%20*$*/?n.9%25a%3C'5%3Ck2?'5%3Ck%20'=6p*%22(!4%20'(8&y$#(8by2%3E5k76%25k2#!,%3C/a%3E%3E=1?$k/7)k,*%3E*p?.k;*5kf%05!y79%20;%3E55la%22%20*$.%20/n;5(%20%3E=%3Cp?)%22=y8*%22%20n412a%25!-p%3C.9%25y9%25a?&%3Cp-4?;+5ea%0A*=5/a*%20yw%22/%25++p,3*%3E)%3C.fk!)$%22.%25n??9a8&8%20.2k'7p?).n%3C4%225$%3Cup%3C)%22-1p*-'!.#k1'/%20592k:6p,3*%3E)%3C.a?&%3Cp.%25,+y?-a*n)%3C*5-!+=k'9!4p%22/8'=5k(?%60y%16%229.*y1k%06%1B%1By=.,$%3C%20p'$*%25y'#$%25n-8.a)%3C6'8$9n.9%25%25$9y'*2k%3C%3C#%22;.*w-yqy%7Ft%60yl%7B%7F$%11/%25.*y1k3.%3E6%22?a);-$$/k(6%22k3.%3E5122k!7p?).n41%22/k#%3C%3E%3Eok%030%3E$3k#8%20k$/'-?9a);%3E6%229.=y1%25%25k%1B%10p?6./2#e%3Cy~kafqycid6%13.%3E51($/n%1B?%25*k%7Fcp%03.?n.9?)k%0C6%3E%20azty%04$1k%1C8$.%25en%1F93$/n8p)4,n.8.3.n-8.a&/)p8$*%3C:8k1*%3C8=.5.%3C*p%3C.%3E%22=p)$k*06-$9+7$k5$n.8*5k:15k%14%02n.18a8&6'%22/,%60$b%7Bszcibfps3%0A=*-'n;%25,'%226%3C#k%20%25*y?;5%22#0#*5%22!7#ea%08&8%3E,$8n-?k5#+y=*18n0%3Ek%009%3C6'8a%1A;03%20a%1B%228)qa9+4?=$/n%0D%22%22%20%25)551;1n;)k+$%3C+12ok%0F=4.%25k%1D-?%25$k%1E0%3C'%209=y22a%1F+8=k%009%3C6'8a%19/4%7Ck%11*%3C-9?($%20y%14.,$%220$%22.%25n;)k%15./4p%0A39!.#k%13*#up%08-%22(?#%22%25.n;)k%15#+%0B5/%0A%22%3C;)ga%0A%3C+?%3Ca%0C%3C6%25%25%258nk~%7Ba)7y%02*/%20++%0F%7Cp%7Cby1%25%25k%0F+%22$68n%0E19;$%20%3Cphuk,%20p%0C4/%1D-%22*5e3k%60ypf~l%7D%7Bv6%080(.%25k:15k-$,;)k%22#/-p8.&+-9&$8n?1%22-%22%20%3Ep?.k=:%22$-'n=?%3C/en%0E8./k/y%22$.&n1?85k%22%3C1=$8n8p9.$#up?).7y%3E$6k&8&.a?&%3Cp$1?'6%3Ek5$n%3C%3E/a?&%3Cp9.$#y9%252?+84k.-n-%22*/8(%3C%229(%25)y8$2?n-?k2$#%3C?%25$k+5#.o6%7Cibzl%7B%7Btaz%3C%0D'!5/a.6)%3C$(?n8%3C'.%3C'77k%209%3C6'8a?!y2.a%22%20/98()%22%3C~6s%7B%7Ch%7D%7Btf%7Fa-%E2%81%A9%07%226%3C4k5#+y5&1?7y2'4.n)%3C*8.%3Cy2%3E&gn-8%222k98#k%20'=6p(%20%3E=0%3E,a/+*)%25%228n0%3Ek0%3E':;k1'/%20~kLA%E2%81%AC%11?=$9'77k.=++p?).n+5;-*7y2%3E5?!7#k/$9y8%22%25.=y$#$k,+?%3C/k#89%25a&+7%25k#%3E:-?%252enTZ%E2%81%A9%07%226%3C4k5#+y29.%3C%20y=*(%25n45%254k,,$?.%25=y#$,.:0=.2k,%3C9%25&k&04/$%25n86?$9n+5?49%200%3E,a-%3C6=k0%3E':;k1'/%20~FK%E2%81%A9%176%25k%22*%20y%3E$6k*6%25)-.n:%3C%22%22%20n+?$,8n0%3Ek5#+y%22$.&n5985k:6p!.%22%20y$#$&by1%25%25k&0$k5#+y5%255.%3Cy;.8k/?$.3k:%20%20%22/,n0%3Ek%20k%3C6?&a;/*#%3C.9*y$$a(!7%3E.%22?%60$b%7Bszciefs~3%E2%81%BB%16%229.*y2%3E&k9159$k:.?k%209%3C6'8a-'+5/a*:y$#$k=8=.a?'45k%20;%3E%3C19a*=y$#$k=8=.a(!5?9oFD%E2%81%BB%11/%25.*y1k#%3E:-?%25a?!y6*7$;+9?$k:15k,*%3Ey3%3E39+7$'8k%3E512(%25)y9%25a?&%3Cp&%20%22%20y=./%3En+5;-*7TZ%E2%81%A9%07%226%3C4k#%3E)y'#$9+y=*18n*1=$/n.9?)k)+9/a8'#58a%3C'-8k%25.-0=*-k%3E69%2558n0%3Ek5#+4p%3C.%3E%22=p)$k%3C6%25%25%25.*up8.k:15k&9'=p/(/%20~$k-%22%20%3Cp%3E1k915%25a?&%3Cp&%20;n.18a'!84.%25k,83%20a%22%20-?k5#+y5/(?!+-yqy%7Ft%60sl%7B%7C$%E2%81%B2%041?'6%3Ek5$n~5%25%25k%3C6?&fk915%25a'+8&%22/,n8p9.$#y)$4l%3C%3Cp#.8:0%3E,a$%205)k2#!.#k(-n-8.3.n8%22.a$:159a;%228).38n*$%22-'n)%22.2.%20-~FK%E2%81%A9%080(.%25k,,7k(%25n-8.a8%250%3Ek3.%20=59(%25)y$#%20?n:?%3E-/n:1%3E2.n:%22*2#+*~FK%E2%81%A9%074%209.=+=p?).n41%22/k#%3C%3E%3Ea*%3E)5*3*%20:5e%3Cy~kafqsck%606%E2%81%A3%0A*=5/a%1B':;8a(/-5,.97y$$a?&%3Cp%06%20;n%15985en%0D8.2.n41;2k/+5k)*%20=p()$=%3C%3Ek#2n4?/$9/-?92en%09%3C.%208+y$*-%20n.9?)k:15&a*,6%25?a*%20%20p&%20;=y)$4k:19%25*k*%3C#.3=+y$$a)+y?%25a?&%3Cp%1B((%25*p'(8:up*//n.?9*k90$#a?&%3C=k5$n%3E5?a2!,%22k,*%3E*p,.$*y5%25.%3E)1p-.9n-8.a%1B':;8a''*$jLA%E2%81%AC%1F93$/n:%2585$#y7*,.n+?$,k%220%3E%202k%206$k6$%3C29%25&FD%E2%81%BB%16%229.*y=%22/$%3Cy79%20;&03*-k'*#%3E$k90$#a&/)p'(%20+y2*383k%60ysf~h%7D%7Bv6%E2%81%AC%184/$/n82%22-%22:%20p?.k-11%25&.n%20?%3E3k/:3$4%25:y%20*2896%22/mk*6p%225k(+?&a?&%3Cp8$?:0%3E,2k#%3C%3E%3Eo6%0D%18%1E%08%04%073%11%15%07%116%0C%18%13%00%1E%18%1E%18%13%0E%3C%1F%0F%1B-%08%0D%0E%0F%0B-%0E%0F%1F%0B%0B-%0E%0F%1F%0B%0B%0F%18%11%0E%0D%10%11%07%3C%18%06%10%16%1F%3C%08%01%17%04%19%0E%073%18%1C%1F%3C%1B%0F%0C%03%0E%3C%08%0F%09%03%14%0D%04%0D%12-%00%00%05%0F$%15%02%12%1E3%13%05%05%0B%0A3%1F%19%05%00%073%11%11%05%0B%0A3%1C%03%08%00%1B%0B$%13%04%0F%1D%0B%0B%046%0F%04%00%1A%1F%05%17%0E%1C%0D-%0A%02%08%0B%09%046%0C%04%0A%1C%13%03%00%05%09%1C-%18%11%0A%0D%1C-%1B%00%0C%0B%06%05%1B%3C%1B%0F%1E%15%14%05%04%19%17-%0E%0F%0F3%11%1F%06%046%02%1C%16%1Fa%0A%1C%0B%1F%1C%3C%1E%1Ey%11%19%13%04%19$%02%02%06%03%1Ay%11%19%13%04%19$%14%04%16%05n%18%02%19%0E%1C3%0A%15%07%04%08%1A$%00%19%08%05%1A$%15%13%04%08%1B%0D%156%11%19%07%17%04%18%02%19%0B%1C%1E6%08%05%1D%1C%02%1F%3C%0F%0B%15%15%1F%046%7C$c6u6%7B$g6y6w$%13%04%0D%04%00$%03%0E%0C%02%0D%16%1C%04%0F6%02%1C%03%18%1E%1F%06%18%1E6%04%1A%1B%18%1C%18%3C%0C%1C%1C%11%1F%04%19%11%0D%18%0A%0F6%1F%0C%15%18%15%02%01%17%0F%06%00%19%05$%11%1F%3C%0A3%1B-%08%3C%0F3%1C-%0D%3C%0C3%11-%02%3C%013%12-%07%3C%063%17-%04%3C%1B3%08-%19%3C%183%0D-%1E%3C%1D3%0E-%13%3C%123%03-%04%12%14%05%1C%096%02%04%00%0D%15%13%15%14%03%1C%1E%1E%3C%18%02%1C%15%1B%3C%05%1B%14%00%0A%05%7B3%17%05%06%11%0A%0Ah-%05%14%06%1E%18%14y%3C%05%1B%14%00%0A%05x3%17%05%06%11%0A%0Am-%05%14%06%1E%18%14~%3C%05%1B%14%00%0A%05%7D3%17%05%06%11%0A%0An-%05%14%06%1E%18%14s%3C%05%1B%14%00%0A%05r3%17%05%06%11%0A%0Ayz6%0F%1E%03%09%11%0Fa%603%0A%15%1B%00%19%0F%0D%1F%19%3C%05%1B%14%00%0A%05kc$%1E%1E%0C%1B%0F%1Dp%0F%04%073%1Fa6%07y3%1Fc6%07%7F3%1Fe6%07%7D3%1Fg6%07s3%1Fi6%07z~$%16zp6%08hb6%07z%7D$%16zu6%08he6%07zx$%16zv6%08hh6%07zw$%16yq6%08ka6%07y%7C$%16yr6%08kd6%0F%1E%03%06%1C%04%02%003%0A%13%19%0E%07%02%06%1C%04%02%003%0E%19%05%1E%04%0B%14%0F%0D%0B%14%04%10%03%03%0E6%19%10%1E%14%0E%0E%03%06%16%01%1E%06%0F%0A%03%03%0E%1E3%0E%19%05%1E%04%0B%14%0F%0D%0B%14%1A%16%05%19%0E%00%1B$%07%02%0F%14%01%1C%1D%14%07%01%11%15%1F%12%006%19%10%1E%14%0E%0E%03%06%16%01%1E%19%01%00%116%02%02%1C%1A%05%06%07%07%0B%01-%0E%19%08%02%18%1D%0A%15%02%01%17-%0F%0E%1E%0C%15%15%14%10%1E%01%0D%156%09%0A%1D%11-%0F%0E%07%02%18%026%11%0E%1C%1A%15%05%156%0F%14%00%0E%13%18%0F%17%146%14%05%0A%1C%02%18%02%04%1C%1C-%04%11%0E%00%06%00%0A%13%0E%00$%13%07%0E%18%0B%06%00%0A%13%0E%00$%11%18%15%0E%1C%10%03%00%3C%1B%02%0C%036%11%02%1E%1C-%03%18%1B%06%1C%1E%14%0C%02%00%0C%036%0E%1B%0B%17%0F%08%14%19%02%00%0F%09%13%0A%0D%12%15%1F%3C%08%02%16%03%0E%1E%08%1B%0B%1C%12%1E%09%1C%18%13%00%04%1F3%0D%19%07%05%0E3%0F%1F%07%14%06%0B%06%1D%1E%15%0E3%0F%1F%07%14%06%0B%06%14%04%16%053%0F%1F%07%14%06%0B%06%05%1B%3Cp3d-f%3Ce3%16%00%0E%0F%14%0C%0B%11%08%0A%0E%1A$%12%0A%02%00%11%0A%1C%0A%12%033%1A%1C%04%12%0E%11%1B%02%0A%02%00%0B%0D-%1A%14%04%1A%1C-%06%04%1F%0F$%11%07%15%0C%1C$%07%02%0F%14%07%1A%1F%14%09%0E%02%09-%1C%08%05%11%10%13%04%1E%7B~$%07%02%0F%14%07%1A%1F%14%02%07%0B%18%026%16%02%00%06%1F%0E%0C%14%1C%1C%03%0E%156%19%10%1E%14%0E%0E%03%06%1A%1E%0C%1B3%0E%19%05%1E%04%0B%14%0F%1B%00z3%0E%19%05%1E%04%0B%14%0F%1B%00y3%0E%19%05%1E%04%0B%14%0F%1B%00x3%0E%19%05%1E%04%0B%14%0F%1C%12%08%1A%0B%1C6%16%02%00%06%1F%0E%0C%14%0D%0C%03%0E%0D6%19%10%1E%14%0E%0E%03%06%11%1F%15%053%0E%19%05%1E%04%0B%14%0F%0D%08%05%07%0A%186%16%02%00%06%1F%0E%0C%14%0D%16%00%12%3C%1C%07%17%0F%04%04%06%11%18%05%1F%0E6%19%10%1E%14%0E%0E%03%06%15%05%0D%1C3%0E%19%05%1E%04%0B%14%0F%09%00%08%05%0D%11%09%3C%0A%1A%0D%1E6%02%19%1D%1C%1C6%04%13%1D%1C%1C6%04%19%0B%16%166%11%07%0F%00-%11%0E%04%03$%00%0Ap6%19%10%1E%14%0E%0E%03%06%13%07%04%0A%1C$%7Dyv%7B%3E!-.%208+%10%3E%084)':-fsr~)(6/.9*3$4%25:$zk%0F%0E%19%0Apa%3C8%226'6)?:)#qnd,6%3E%20se'6%7F8%229')$8n(!42%22/.*)%3C*8.%3C:?%3E/?%60-(?%3Ctn6%3E'(%25+$ok1'/%20592k!7%3C%22/.3y?%25-%22%20%3C-k1'/%20592k!7%3C%22/.315*%25.%3C%062$/%20%11)%3C*8.%3C:?%3E/?3q-k.%25%220%3E.h6&%3C1/$9%11:19%1E;%228).3(!,%3E?%3C./*5%044?%1D0%3E.%3Cfzi%203%3C&+=9%3E,6=6%25%25%25d%7Fkh%146&,w=;r6=6%25%25%25d%7Fkh%147/%3Ew=;r6%1F,9(*k%1E512%3C%0C+-$%22/,n+?$,e%60w-#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d,*::8&%20%20'77%140%3E++)e1#%3E$%1A$(%25'77k%20k)8=.oe%60$%139$*:0%3E,a*n%3E1&$e%60w-%1A4%22-2p%0C%20&+$:$(%25%208=.%3C9!6=%14'%3E%225-9.$#%06%3E$5%14(6%25%25%256!54%143$:8$%22.%253e29adp$%1E%0E%16%183;%22$6%25%0C,$?.%25%0A0#*#'+=-#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d'9'%3C%3E/2e%3E1%206&.:?%22%22$%25**-%0D3%22+748a%0D%3C6=k%07'/*8k%17.%3C*9$/ke$%169(.%20=#k%079!4p%0D-*=1p%1D$9=0?%25af3%17?%25$6(+9.//=%063.-'%1171&$6%1D%1C%1E%0Fa%19%0B%08%05%0E%12%1F3?%22%22$%25**%0F8$%25*+5:4.=-%0F)4?:6%3E6#9!.%3E%094?:6%3E6#9!.%3E%094?:6%3E%14%22'/*#%22%226(+9.//=%06%22.0%3E+*$%14#%3E:-?%25%3C%19%0B%14%1F%1D%046%04%16%19%05%3C-%3C05%25%258%11%3C=;52%11:5'-6;769(.%20=-/$'+-59$:;%3C#?%3C*-:5;56%3C8$.-%22#0$.%256%176%25l3.n=?%22/,n-8*5k:6?k,%3E-1q648++%3E*,.%110%3E=%20''=-%1F)*:y%3E*,.n0#k(%2588%3C%22%256;*59/*#%3C%0F%25.?%11??%3E//3%17?k%20(-6%25%2558n??%3E//n.9?)k:11?a%25/456%22*%20-%0F-3%22+74%142.%22?-%08%20%25i-p-3%22+74k8$;+#.--o$1'3./=)%14'9'%3C%3E/26%176%25l3.n8%3C9$**%20p-3%22+748%606/5%22.%20/7%06#./?%11+5:4.=--%12.%3Ei/5k%20'%3C%3C1/8k=%3C%3E?a?&%3C=k%20k(+9.//n+5:4.=--%19%04%1F%1C%00-8$%25*%06#%3E%22(+*#6%079'%3C%3E/a9+(%25.2?n*5%255k=,3($8=?%25'-2o$1(%22.%3E-%0F84(-%3C#8%3C%1F&%3C)k2.%20-p*a9+(%25.2?n-?$mk=6p2.%3En8%22.a%25!.p-3%22+748%606%0F%17%1F%1F%09%0E%1C$%14%04%0F%0E3%0A%15%05%056&-$;2qav2$/%20%7Cw9$n8-+9;58a+5,(8:%3C%22%14-.)832o;&)-%1E2.%3C71&$k-6%3E?%20%22%20*p%22/=/59/a(&8%22*%22?++#6p%7F~)(648++%3E*,.%11-1%20$%253%0C#.3%25/45k/$:y1=%20%22%2282'$6%3C8$.%1E''49?$/3%09%3C.%208+y$98k/%3E1%22/k%228$.36*8$*%1E&'*#%22/,3%09%3C.%208+y5%255.%3Cy2$5#n8p%3E2.%3C71&$k/74k1*=*'$3/3)182%3C!+4%146./2-%1F)%22=y%20*2896%22/a%22=y$$.k9%3C1%20%60k%038;.a%22:y#?3$%20%3E59%606%7Ci%60;96&-$;2qav2$/%20%7Cw9$n8-+9;58a5?,(%25%1155,%20(7w%20#16;*59/*#%3C%0F-%20%22%22$%1E$a*-:?%3E/?n.9?)k:11?a%3E=%3C%22%25%20&+$2*/%25+=-%1F)%22=y1(%22$;7$k)*=y2.$%25n;1%25/.*w-%1B%208=.?9%25k'73$39+:$ga;%22%3C18$k-15(*k/74k597y1,%20%22%20$%139$*:0%3E,a%0C/456%029+8$%22/,n+?$,e%60w-%01.%22%200%3E,a%0C/456%07.::8%22/,n84/3.=*~eo6&-$;2qav2$/%20%7Cw9$n8-+9;58a%3E5?3$!41/%259+*#e1#%3E$%11/%259+*#k'.::8k'*'55/%3C%0C!-p*%25/%3C%3C#8mk-6%3E%25$(:0%3E,oe%60$$.2?n3?%22/k%208=.%3C%0E%3C+?9%7Bk3%10%1C%0Fs%08%0B%0E%04%3C%202&0%01%0E%17,%0B2%11&%00%01%0F87%09&%0F%25%18(%0A%15,%08:%11?%00%0F%1F%1E%1E,%03#%0F:%01%08*%09%20%18%04%18.%0A-%182%0C&%0066%11%1C%0B%00%07%1D=%08%00%09%17%1B%1C%0A%04*%030%11%05,;!%18*%0A%09'%0B%0E4:p%1A%04o%19%1E%0C%08%07%0A%13%02%00%04z%17%1C%0A%20%19%0A.%14%3C%0D%08%06;%02%1E%00%1E%1C%18%12%11%04%09%031%01x-!$%081%06%00.9%18%11%003:%096=,%00%22%0F%12?,y.%0F%18:%030%027%1C%04%3C%12%07%06%1E?=*%0D%0C%0C%04%0A%1B:%04,d%0D;~%7B6)%06.9%25o8%12r%7B7%15%18;+.%7F%10d%06)%12%0F%1D%1B%22*%0F%1D*%18(%0C!9%18%12.%00%1B%1D%0E?:(%3C%25%3E%14%1E%0A%1A%0C%122!p%07%25*%11%0Aw&%7F%08%3E%3E%05%18%0B/%3C&s%7D%03%0E2?,%02%25%16%17%03(%038%14%06)%04%22%0C%00;%0Dr%18%1Ch'%09&%0A%02(3!9%1A%165%13%12v%0D%0C%00%07%1F%00xy%603%0E&%18%0F%18%1D16$%25ai%08%16%1F)1g%1C%12%0D%06%20)%0F%22%1F~,'%08.%059%08e%1D*%09%00%16(%19%0E%18%0A:i%03%00%01%04%08:%0F%08:%1E8#%13%02%0E91c,%00%03%040c%021%08%201'%0A%03%0F%05%1C%16%13%08%0A%14%08%25#%11%0A%0F%1F#*%22%094%1Ee%00+')%1B%01!%11%20;4e%3C%1B%0A%0F%1A%22%1F%13%0F%22%0D*%18;%02%17%1B%3E%0A%1B%01%0C%1E2%05%08%7B%03m!'%02%25)%11%14*(y$%15!%06%0C%1D%1F%18%0A%0F%03yc%03%19%0A%17%206%0E%06%60t%1A%0F7&)%12(%0F%18%1B)&s!%00%60%1F,%13!?%12:.9%3E6%00:%25%08%02%0A:y%0F%18,%1B!%08;%09,%15%06)3%12%0A%10%16%3C%1084!%60),%02$%13c%03*yy%3E%09%1D%1B&%18re%7C&%1E%01%00(!03%1B/%07%7C%00.#%0Ed%0Fr%06%3C%18%18%0E%1B%19$4%17&t%03%0A%129%0D%25%02&i%16%05)%0C~a1%1E%17%3C~%14(%076&/-6xv%098%1D%09;(/~od%0A4!?l%17%3El%0C-7f%0A-/%01t%07%0F&%09+j!%0F9.&?%1A/%08%11%0A%144%19%15!%7D1%1Cx%02,&r%13%0E%0A,%0F%1C4%02&x%1E%13%1E&%09-6%3E%11~%06%12'%1Fg%19%03()h%18r%15#%20%1D$%20%03%08%09i%09%13%03%08=6a%19%1B%02%0C.%7D%059%03%7F=%09%09s%0C%02%0E#%06%05%1F%0A)%00%0A,%05%25!;s%13!#%16$%01y$%0A%083%3Cq%089%0F%14,%072%0D%3E#%053%19%1F,'%1A%20;&%08%7B%1E%0F~)%0B3%09%0B%09z4%058%00%0A%00!%20%18%00%60%1C%18!%1F%07%088%03%12%0C%03%18%0Am(%0E*%0C%22%208%60%20%06~%1D%06%0D%0C%60%1F5%12%0E0%18?%1B%01*%0C&%140=%1B2%22%0Dk%1A%0A%05%1E9h;=%18965%11%18*%1B%07m%04//%0A%0F%1Bb%19;8~%00%11%0A/(%1Aj9%1A%11%12w%10%1B%04(%7F%05:'$%0E%00z79%60%0As8%208%04+%19)!%19%1D%02%18%3E%13;%7D%0C%0D%05%0Cd%0A%17%07%1B3%03?%0B%7Bx%124%13%00%1A72%15%7F*1-%0D%1D%228f%0C(f2%02%204%3C%1C%0C)(~%14c%07&%00%3E%0C!,$;(%12h%0A%0A,:)%1D%072$'k#%00.%19%0D%00%03%0A-%08)l?%1C7'%7C)%11%05%14*)r%13#4%19:%158'q%12%051a$%00%01$%123%0A7%1Fx,%04%7F(1%0F%03%15%018%11%225?%00$#%0B%01%11%1F#%0E%08%1Ch%18$%08%25k%12'6%00&%0Fb%08%162%05%18%25,s%20%1F%09%18%06%0F~%1B(%22~%22%07%1F%17%12%00%0D%02=%1F%17?%08y%22-?%1D%0C%199%0A9%7D%09)%206b%7Cy,%0D%15%12%1D%08%1D(%1D2,%22%0F%02t=sq%06%04/%16%0E%02%0C635%1F&%13?%17%17%0E%02%11%0856&y%1Ex%16:(%03%7D%1E%1A?%11);%0665%1F%021-%09%113%09s!%08%11%0Ay%18%0Bk%1A!&%0F%0B%0D'./%22%05%3E%17%00./%1D%11'%3C%1B#%7B%16%09%00)%3E%02%03%04!&%0C%25%0B%01%0A%058%1D%1B%19%0A)//%1A3%02)%089%0D%09'-%0A%04%03!%06%13-=j%17%0Dj#%19%1F%05%0F%17/%148%07%09t%06%7C%15d%00%09%06%02%3E5'8%06%1F*%12$%0F%3C7%119%0C%07%7D%0B25%0D)-%0D%0A%02#%13$*1%06%0Ct%1F$o%12%18%00#%1757%08%1Br8%0C%1E%7C%00%06v%0F%02%1C%09%1E-.%7B'5&%08l8%089%19%170d%1F%18z%166%00'%06%0A%7F%15a#%25%22(;%7D%1Bx:?/%3E~*%0F%0F%14%03%06%18%06%08%1D3%09x%3E%00r%1A%20%03!%0B1e#6%06%14%08%14%0E%18%1E%17%0B%7B*9%12%060%19,7(%25:%1A%1C%05y+%00%16%02%08/%1A%09%12#%16%0A%197b%7B%0Cx%0D%10%1E%20%0B%1D%1B%128%60%06%0A%09%1C)%0F6%0E)%18*%0E%1B,%0C?&%03.%0A94622%0F%7B%17;.-%03%02%1B%16%08./%1F%0C%3E%1E%11%20,1=%0A#%0C%1F%14%3E%1Dy%136#%14#%03#%06*%13%12%06%09%04%188%1C%18%0F9%1C%13%02%04%05%1F-%13%1C%05%3C(%3E%1D%029,%0C1?%01%08(e%14%19%01&%3C)%1D%1B%3C%13%1A(li96%22%0B%11)*%10%19%0F%00%03z;%3C%05%18%17%06%04%3C7%18d%086%09%03%0E%11%1F)%22$%10%15y%0A%3C%08%10%07%09%11%0F%0Dk%09%02.%1C%7C,#%3E%05%18%0F.%18,%19.?6%1B%0F%16%09%0D2#(%08%7F%1F%08%1C%7F)%0A%09h%1E%08%05%0A%09%0D%3E%3C*$9%14%018%03%1D%0Do%1D%20%07%0D%16%0Eg%091%09%1B%11:8%0A%1F9%14%093)%20%06a%3C%3C%0D%7Fy%181%0F;%03v,%02%1E%0C%3E:%0E%14%7C%15%0E%1E%13%02%1A%04$%7C%0D7%09%08%00%09:%19%0C.%05%1D%3C%13%0E%07s%1A%00a%19%18%227%1Bf%0C%10(9%1C'%60%13%12%0C1%12-%16%0A%1F1i;%04%08!%16%11%07%00$%176!3%05(%03%12%13%12##%04%1D%203+%1B%03%0E%19?%13(%0C%15%18%03/%22%1E%18%16%0A4%0F6%1D%15%00.%059*%01zu%1E%0B5%13%1A%0D%7B%0C%1B%17%0A%03%09?%1Ed-&1%0F!%132%09%12%0A%1A%03%02%0C%02%05%1Afy2%09?%3C%091%00%60%1Ca9%227%3C%02i%19%0D)%11$%1B'%012%07%0F%1F:#%208%092%16,%0F%3C,%10%13%09x%03%17%1A%16%11%00)%07!%19%05r%09?m3%7B%0A%11/1%18%19.%01%1A%107%0C6z4j%05%0C/1%1F%0C!%01t%02%3E%1D%01%0F&(%03a%01%05%10%12%0A%03%19.%18$%7B%60i%07%06%22?%13%1C-.%3C%0C%09%14,)%7D%0D%08%09%1E8%09%7B3=%03%18%0E%07%01%1F:)%13%1D%00%03z3%22%174c%12%16)#%1F9%00%25.)%1C(%7F(%3C%0C%01?%3C%25%1A=%08%13%0A*%0C%7F%1A?yyx&%11=2%06%0A%04%16%01(2%20%14%0B%25%0F/%07'%3C%19r8r$7%19f%06,+%3E%11%05%08%08=%0C%1A%0A%18%00xk%0A%7D%05%18%25%3E%00%0E%14%7D;)%1D%18%228%05%1E%03%20%18%20%0F%14%13$5y%07%0E%01$%17%00/%0C%05!%00%0D%1B%1B%3C%3C%0D&%18%0A%04%11%13%20%0A5%08%00#3%22%1De%1C%20%02%18!%20%19%19,%09a%17*%00%0C%0D%18%20%1C%182)%1C%15(p%05!%0A%13%25%19%06%07%12:%1Dx:%0B%1D5%09x%0F%03%17'33#%1D%20%01s%112)%0F(:%0F%19~jf!%25)-%3C%11%1Ar?%06%18%19%20%19(%7D%08%12%12%0A'=%1C4%12$%7B%17ig%0A02$81%3Cj$%04%0C%20%20%15%1F/%187%05%04%7D%05#%08&2%1C'%0C&zs:%3C%0Ea-p%19%1B%0Da3%12%02%7C8%3E?%11%0C&i2%1A/%137,4%0D%0C%05%0F%18b%022%12%1E.%01:4)/.%25%3E%08;%19(%11%0C%22#%0C%15%13$%05%08%08%10e,y%0Fv%1F%1A%1D%0C%0C%7F%0A%11f,#&)%1F~%15%7D%16%181*%0A'%017#%02%16%0C%1B-%18%11%14%20$8%15%082%20%17.7%1C%03%01%0F%0E%01%07%0D%7D%0C%14%12&%08%3C%0B8&%0D%0B%11%02%1A%1F%22%03%0E%00-%05%7F8)%0D%1F%17%0Cj/%3C6i%22%0A%09%7C,%13-s%60%1F6!%7F%10%1E?%3C?:)~%7D%01%14%19r%11%05,4;9('%1C*%1A7%7C%0C%60%02%0A%001=%1D%15%08%07%1C%1Bm%11%08%03$%06%0C%00%06#.%01%1B%7B%0F,%07%1F%15%15%11%0E%19%0F%139.%03%18%1E%14%03$8%01&%0A)%0A%05%0F)%00%07;%05)%146%14%02%07%3C%1F1%17$%0A%09%3E%1F9%1B%0C%1D%07*%12%0A%04&%1E%60;%22%14%0D%07%0C%13%09u%08w%09%13%07q%1B%1F%0C7#%14y%0A%081%3Cx%11%01%157%0D%14%04%0F%11?%1B%03'#%3E%15%05%0B%7F%0A%0C%01#u%22xi%09%0A%10.%17%0C#%0F%03-%08%08%06%7D%22%02%04%1B%7B%093?'%16'%06%18%09%0F%0Ef8%09$%0C0)%1C3%08%1F%15f(%14%0F)%0A%01%03&%01%1Al%00&%05%1A%14%18e%09;%09/h;%07%08%01%17%1B%129%05s%06%00%1E;%19%04e%10%1D%09%22%09%1D%1D7%05,%7F%0C%1A%16s%04%1E%03%03%08%1Cl'%1F%1F3%08%08%04%0F%0E%01&9y%0F88))-%1D%08%7D%209%22&0d%07%04%07%0F%01?%1B%00%20%08h%20%02%22%0A%03%13=%09'%09%1D%1C%19%0C%0Cf%25/:#%03$%05%185,%06%0A~%1Dc%0C%07%0C7%3C%03s9#,n%08%207%1A%18%03d%09t,v%1D%17%0E%1B14%60%12y%03%12#%18%1F%0F%04%00=%3E1%089%0D%1B%1E%1D%08j:)??%09&$%0D)%07%0Ay%01%057(1%1B%0C7%01%07%1E%0F%0C%09(%14%11%02%0D*%08%7D%09t!(%1E%11%04.%19)6%12%01%03%1E%06k%20%02%0D%7F%7F%3E%09%03j%19z%1C#%08%18%13%3E.%14&%07%1D%0B%08%19%1F%123%09%15%13'%05%03v.%02%7C%03/,%12's%0C%20%1A%12%19%0Ey%0A/3%17%02.%03)%0D(%12.%1A%22%08%14%19%13$%06%1C%16%028%1C%17%14%03%20&%1A)%01%1C8%00$%1E-%1E%0A%11%09w+%13-6%60%0F%17;f*2%0D%12%172p,-%10%05%1F%06%09%17%1Ad%1Bt%0A)6%11.&%1E*l:%08%0C%60+%18h%09+%03%1B%1D%60%03%009%0C(%04%7C%10%0F%1El%06,u%19%20,!%09+%0Dx=%01%09%03%01%0Ck9%1C%0A$-r#x)%11;%11;8%0D%05%0F%1F%12%3C+.%074%17%02%18%1C%171%05!9%099%133%7B&!%0Fr%01%7F%05%1A%0F%08%09%1Cu%3C%02m%03&%10%09%1F%3C%03$%18%05%1A+%13%221%02%00%18)%03%06%0Fy%0A'%0C%0C%0C%03r%60%00%00%09%20%0D$%02%15%12%0B)%06-2%03#%11)%1D&%05%0C%00%25%18%06s%17=b%1A%20%09%04%1B%02z(%1B%19%0B7z&s%0A1%17r$$%09%3Ee%7D%12#:%18%03ft%08%17!5%18l%0De4%13%13%14=%3E%3C%03%0A7%7B%3C%20%0826~)%13%02%1E%05%0D%06m%01=5.7a7%0A3y%7Do&%19$ychh)s%00%0C.%22-$s*t=%0Cr&/%176#y%02%0D8%22%20%20%0A%0Bt1f-r%06hc%3E''+ri%05y%01%00%1A%0A-1.%08%60:%60vy%1Eh6%121f&%1D%7D%258%1B%20?=%60wf)%18'%012%1C%1F%00%02%1E%05%25%05%09)=*f%1Dr5f;%7F8l#%03.%05c%11%11)j-9t9%60(f/rgrvz(j63%10%03%1F%1A%7D1r%7B(j%7D1%11x,.21%192)%18%18%0372%7D.7%063%3C%0F%16%003&%07%08%1C%04%1A%10%07%3C%20%01%0032)%15%3E%1F%10%02%1F%1E%04%0E6%1B,h%7Dz%11yci%01%1B6%1B%22%0F%3E1%08%009%13%19%00'1%7D#%04!%1B%0C%17%11$%0D%0A%08%07%167%7Bv%7B)%16?%07%0D%3C%17%12%09%02%10%0E~%1A?%1B%00%05!%10d%1B%00%02!%13%11%0E(%03z%14%3Ex%18%04%1F%17'%1Br%3C%1F%1D%60%0D%18%04%7D#?%04%093%0B%16%11%0A'%13%0B%16%00%7B%04%00%25%14d%04&1%071%11%088%25%25%16'%01%0D3%1F%106y%14%01-3%05%01l%7B%25%13'%00q%01%25%166%0F%00%02%25%15%7D%7Bq%04%0B%09g%3C%10%0D%00%11%60%02q%06=%143%05&%05%1F%1D6%1F%0C%06%1F%153%06%0C%04%25%179%0A-%03'%11e,%10%0A,%0F3%022%1Bv%12#%04u%1B:%1E%1C%03%02%1B=%093%05vx!%18?%0Ey%09%07%3E%01%08+%0A9%1D3%0A.%097#%15%08%16%0A%22%1E%02z%0Cx=3#%20%18#%0F%1F9%0A,%08z%18%07#%0D%1F%7B%18%1B%00%0A%1B=4%11%0Ap%0D%1B%1E%19%1A%10%0D%7D%08%19%0E%16%18w%1D%19%03%18%0E%7C%1B%03%09u%0A!%1A%20%0Ap%0D%3C0%19%03%0C%0C!%18=%03*!%06h#%053z%1B%1E%17%05%06%00%3Eha%226%0Dv%1E7%08%06%0D'%1B'%096%0F%07%1F;%0A-%0E%160)%04%10%0F%0B%119%0C$%7B%25%1B?%0E%18%099%1E;%02%0C%04%02%20%1D%1B%08%06,!%7D%0F/%0D'h%07%00x%0E%25%1E)36%0D)%1D%01%08%08%03%14id%03%00%09z%189%04%0D1)5%09%19%06%07,#5%029%20v%1C%01%193%189%1F%01%09%20%06%7C%1D1%02w%00x%13f%1B%00%0Fx%10%05%0E%06%00!%1C=%07#1%09%14%22%3C,%00e%17%22zu%22%1D%12%08%1D%25%09%0B%1C%07%04%16%05%19%09%07%04s%08%7C%13b%07s%02%01%12#%00%0E%1B%06k%1A%04*%0Ev%1E;%086'%1F%119%1C%00%0E;%10%3C%0C4%05;%09%25%06$%05%0F%1E5%05$%1B'%13%1C%3Cj%07&%17%223j%02%7B%1F%1316%03%22%18h%086&%0C%17%12%06w%04x%17f%1Bw%01&%12e%063%3C%1C%17%1C2%13%05%09%09?%0Ex1%1F%1D=%1B.%0Av%1A(%01%16%07%19%12i!9%04%7C%14;%0Ds%1B%7C%14%1F%07y%04%01%14%1F%07%00'%08%1B%11%04*%09%0F%1D%20%02%1B%06%7C%1D%25%02$%00+%17%03%1F%1B%07%06ie%04%13%06%3C!e%1Bv%0C%08%1A%15%03%11'%0D%11%01%0E2%0C%08%091%05%07%02&%128%02%06%00%09%124%05%0D3%22%13%1C1-%1B&%10%06%02%05%08%18%16&%03%0F%0F%18%13(%06p%06%7C%16a%05p%00%04%10%15%01j%01%01%12'%04%0F%047%1F%01%0F$'%3E%13'%084%01;%12$%00%1B%05:%135%01%25%06-%1A%3C%05%0D3*%10e%1D&%09%3E%10h%09w%19%05%1F1%05x%1B%0C%09%16%04)%00%0A%17%17%01y%07%0A%09%1C%01%0D1%1B%0Ad%0C%16%19$%15?%0F+%02%7F%10b%1B9%01%7F%14%1A%1Bp%07%1A%14%1F%01&%01c%1E%06%0A5%02%02%16$%04%1B%05%14%17%1C%06j%07%06!4%04%18%0F*%10i%02y%0C=%1A%12%02#%07%0C%15%16%06)%02%22%172%1B)%1B,%16%1Cx%05%01%1C%10%1D%09v%06=%1C7%03.%08%03%18%18%059%06%1A%10%1A%07p%04%04%10%1E%05%0B%1B%0F%15%15%0C2%08%19%1D7'%10%0F%091%3E%06%1B%01:%13%0A%075%06%16%14g%04%0D3%16%15%08%01%16&%0F%1E%04%09x%01%7D%09i%1Br%05&%16%14%00v%00%1E%10=%09%11%04%22%09?%03(%0F%07%18d#+%1B&%1B&%02%15%04%06%16%04%07%09%1B%14%14%1E%04%0B%05%0F%1Ch%0C%07%0C%02%1F%01%0Dv%0Cc%14%1C%05l%02%16%15'$9!%02%177:%00%3E!-e%008%13%032i%01w%0Cw%16c%07x%04,%14%14%01&9,%17%09%06%10;%0A%15%00%05v%06)%1B%3E%7B6:%06%12%04%05%09%06(%09%18%04%0B%06%20%13%11%055z4%09*%01l%1B%20%09%7D%02%18;%0F%1A%08%04j%04%1B+%01%03u%0F%1F%1D%1E%06x%07%7F%11%22%01%03%06,%17c%02%05%06%22%15?8%1B'z*%11;%1B%088%13%19%0Er%048%181%1Du%22%19%09%06%057%049/%15?%15%04!/%04%1B#z(%096%01%00%02%7D%11%199/%04%02%09$%07#%7B*%16%08%1B%14=!%1E%22%05%00;%03%1E7%0E4%1E-%1Ch%096%0D#7;%09%08%03%252%17%03.%0A%07%1D%11y%02,v2%1B%0D%0A%01!1f%0Cq%06%1F%1E!%06%0A%05?%14%7D%1A%0A8%05%1Dh%03%0A%0F%7B27%0D%10%0F%22%0F%01%081%1Dei3%0D%10%03%0F%1C99u%19'-7%088%00%07%1D'%08,%18%3E%1D4%1C;%08%07%1A%18%1E%1B%03%7F%20%16%0F%0A%02?%14%07'8;?%14%1B;%06%3E%0C%0F%13%0F%0A;%05-!;%00%0890?%0Cy%03!%1D%17%09.%1D%25%1F%05%0E5&!%1E%09%0F%06%0F%7B%18$#u%03%25k%12%1Ft%0Ey%0C1%03%02%03%7D%01)%09%06%02%05%18=%03t17*%09'r%0D%09*%7D%197%7B#)%1B?%00%01%22%1Ci%04%0C%0F%19k%11%03%22y%08%1B'%0A.%0C%17%1B%07%096%0C%08%1D2%1D$%0F%1F%1D%0A%0E5%13%1D-f=8%0D%05%09%1B%01%0D%13#0!%01%08%03%01/):4:;,%1B$,9%05+&%1A%03%1C%3E%1C%7D2$;%0F%1B?%0A%05%08+.?%0D%18%0D%25%11b#7#$%1E:%059%03%17%1B%22%1C%06%0A%01*%1B%0C%0E=7%1F%1F;0%02;-8?);;6%02;%00%02-%18%18%08%0C%03=.982%0C%17%1Ch%09u%09%07%1D;%0D%14%0C%19%09%09%03s#9%1A%14%0F3&%0C%0F8'%0E%0F%046%1B%0A%0E$%09,%1C%1D%00%08%3E,884?%3E-%25%251?%05-%11;/x%0F%1A:%0At:%7B-7%0D9;8%3E'%0C%12%18w%1C%60%223%08%20%20b%0A9x7%11%16:%0E8%145%15%0A,%0E%0C6%06:4:%18((%0C%0A?z5!=08%7B)%1A%1Eu%0382h%037%0C%25%1A%25%1F%129x*)%3E8$%1F%1A%1798;:)%17=)%3E%18-%01%09/%7B6%14#%0Fq%08%07%1E5=%0C%0F%09%1A5x%10%1Ez%1B%07$-%0C%087;%22%16=;%1E;%0A+%03%0F%1E%20'j%08:*%1B%0A,%0C%1B%1A%3C9%05%3C#%1C%13%1C1%3E%0A)%17:,=:+e#%00%05%1B%13:8%0C%03$/b%22x%09z%1Fa%3E9%3E%7F6%14%0Cw%0Ay%18%16%0Dj%0F%00-%15%0A18:+%1F;0%1B%22/%1C9%18!:+%25;%22%0Cw%0D!%00(%08%07%1F%01%0Dp%22%1C+(%0F,%3E=!8%0Fs%04%082;%0A6%0E%17%1A43.%0A%22%1B%03%0F%06%0E90%05%1Cy%20&%0Eg8%0E?y6$:%10%0D%22*%18%3E%09%3E;)%01%0D4$*/%139%17%3E#+%193%08%0F%09%11;%09u%08/*e&%00%09z%1F2%095%08%0A%1F*%3E5%3E%0F%18%1C=%03$%197d%09%0D%3E&,5$7;:%0C%22?4;%0F%102%1F3%3E%0F%1E%16%22s16%09e;%08%0D%17%1Ad,%17%3C9%1A%13%06%0A%0E%3E%1B'#l=4*%1C$%00*%0F=%1C=%0E9%0F?%3E%1A&%12#)%11%04%0D%09)%03%03%0E21%7C3%15%0D%05x%07%18?%0C%07%03%0F%11?%0D9:%19%11a9%10%0C%0C/%20&1%1A&%1C%1492,'%11=%08%0D:%18%1D%0098:%06(%19%12%25%0Ac%20%1E8x%1B,%1D%0A$%18%0C%1F%1F7%0E%0F%0C%04%18%02%0D%17%1C9%03%1F?6%12%09/'%11%00%11%0B:(#%08.%3C6%06%1Dj#)%007%1As?%19%0Cd%08%17%06%1F?%1D%0D%05%09!%11g'7%1D%22%1D9#%06%0A7+f9%03$%09*8;%00%12x6%60*'%0D%0A(%22?%10%0A%03%11%11%09%04%0E%0B*9;w%0F%7C%13d%099$%1B%1A:%05q%3C%1D('%0D/?%00%1D%7B,#%1D%01%1D*%3E%14%12%0F?=!%14)%02)3-%20%22~;=2%03%1A%25%1B%06%01%00%0D#6%09%09%15:z%1C&x%04%1F%1F%1B%09%09u%0Ax%10%02%1C*%0A%01%1D%7B!t%0A,%11;''#&%1A%07%09%00'%16%17a&%05%19':%20;%14%11%02%08%03(%08*%1D?9#%12%12ck%609q-%03%18%1D%12u%08!%1E%1D)9?%03%3C%03%09;$c%1C%09%08%16%0C%22%18=%08w%07$4%16%0F%08%0A7%16;%0Ap%03%17%03)%03w$%0F:3.1%3E-%00f%12%25%0F-:=8x%1B;7g%09%00%0F+1=%7B8.v%11%11%0Dp&%0B!?%0C%0F%25z%18)%1B.%08%07%1E%09%3E$%20%17%1D%17%09%0F;%19%03?'%03:%02/%07.):%7C;%09#s(%1C(3%09%25%1C=+%13%227%07%0F)%11%09j%0C4%0A)-.%097;))6%0A%05:%01%1F%03%04%7F3%1B/3%0A?=g%3E0/??!(%20/c/%7D:%0D9/8%1B%00j)%170f%11%00%05%7B3%02=,1x:b%0E%0C(%09;%15%09%0C)%03?%11%09%00%20:%0C)%0E%0F9%073%17x%00%0F%1F%1A?%0A%08%08z%1F%14%0D(%08%0F=5/%16%12-%3Cd%11)?6%3Cb%11%16,%14/3%0Du,v%1F%609%162%7D%1D%1E%1C%20%0D%0501%22'%084%17%25%0C%198%25%1F%14%085%00$%12'%0A%08%09&%0A?%0A6%0F%07%1Fc8%0A%25'%1B%03$x%0E)%118%25,z%25:f%00j%0D%0A%1B%0A-%17(%7F:h%09%07x!%0Cc%0E$%1A%14%11%1E%19s%094i%09%09%19:%18:%16;%10%12:=%01?(%03;%1B8%0Cy%06?2b%0C$/e%1B%3Ez%08''%1Fa%25%00%0A%09%03d%0Fu%0C%25%11%11%0F%06%0F%7C%12%19%0D%14%0D%25%1D%1E%04$?%18%153%0A%173!%1A'%08%16%09%1D%1Cc;0%1D!:?%034%18%20#%3C%12%22%0E%7C%3Cb*%14z%0F%11%04%1A%07-z%1D7z%06%08e%16%15)%02%08%0F%3C%09%03$-:%006%0F#%03%3E%3C8%09%14%06%05%1C%09%03$%00$%0A%11%0A%3C%0E%20%3C=2a%1B%228).36:,$(.&%3E55?$6=%3C$?(%25)*%13$/?/0%3E.36=%3C$?(%25)*%0F(%20%25-%3C%3C%094?:6%3E62.:-9%25&8%11:%3C$2.3*5?5%22%20%3E#%142*8%3C%12%3E5?!7-9$/+?9%25$%08!7$9.'=%06$*#'+$#.5?'778%1E-'5$.3;%3C66*/%22:%20%0F().-22$96=%3C$?(%25)*%0F-18%11:8.%22%20,6(62.:-9%25&8%11%3E%22*1#':#:4*%220$2%3C8+-$%22/,=%063#%20%25)%3C%0F;%208=.?9%25%14%2282.-6=%3C$?(%25)*%0F()*%20%3E5%141*=*'$3/%1151)$'%11=98%20)%22%3C-%07$-:$%02%22&#:$%05;%3C%0F!.%3E6%09.//)6%12;+:9*-6%7Fnu6s%7Ck$%22.%25.(0%3E.%02$%20-%22$-8%11*5'$(:0?%25%02.%225-eoe31$?18tv%7F).%25%25k~%22.d=:%22%221?=v1(%22$;7$%142*8%3C3$/?%3C6%3C8o;&)-;%208=.?9%25%08&8%3E,$%08!7$*(%25++-;%208=.?9%25%08&8%3E,$%14-8%3E($'%0C,$?.%253)182%3C!+4%08)*%20%3E5%14%22'!*561*=*'$3/%0D11%25&.%11*1=$%09;-$$/6%3E8#86$%3C=%13#%20%25)%3C%0F85*:,#'%20)+5-;%208=.?9%25%08&8%3E,$%14!54;%208=$%20*2896%22/%02#/77.%1E%25+.%20*28%7F$%20*2896%22/%02#/77.%1E%25+.%20*28%7C$%13#%20%25)%3Cp2.%3E%3Cy1(%22$;7$k1*=*'$3/n159$en%00?%3Ea(/7p$/'7y3#%20%25)%3Cp$/.n83(.%3E%20-p;%208=.?9%25k+/598k%7Cmp#.%3E%3C*~6py%3E!-%0D%20%22%22%3C4qa%05+.p;%208=.?9%258n=?%25f?n41?%22#o$c%7D133%1F1%22-.*cp%05$%3Cn)182%3C!+4k#'/7;6)?:)#qnd,6%3E%20se'6%7F8%229')$8n*-:?%3E/?%11:8*/,+)182%3C!+4e1#%3E$%16*('+=jk%18$;y19$k*69%25&k:11?a?!6p&4(&up;-./*5k597y1,%20%22%20y9%25ayzy8$49=$b%7C133%1F1%22-.*cp%1B-./*5k-$)y?%3E5k/74k(%25n87*(%25n8%3E/a?%3C%20p*&*'7-8$98%3C%22%14$9%3C6%22%14p6=%3C%22=$9%11%3C%229.9%11k-%0D%20%22%22%3C4qa%1B%22%3C18$k:+)k%20,/0%3E6.'*)182%149+?%25&6%0889'$/ty%1F'%25k%3E8#86$%3C=p%222k'73$39+:$j%3C*;-?%07.,'7%13$/?/0%3E.36/,$$%0D$)0%3E%14%22*%20:5'%03%3E:-?%25%3C*;-?%07.,'7%0F?$3:$7%3E$8:%16%22%0A%22(!,%3E?%02$%20-1%22/.%3C$7%3E$8:%16%22%0A%22(!,%3E?%02$%20-1%22/.%3C%067%3E$8:%1B%25?5$%20$7%3E$8:%16%22%0A%22(!,%3E?%02$%20-1%22/.%3C%061(%22$;7$%094?:6%3E6&%3E+*$%043%0A-:?%3E/?%0D6%3E?%20%22%20%3C%22%14&%3E+*$%09.33%3E%25.2?%01+%11(%22$;7$%08.%25:89%25$9%1183(.%3E%20-%12$96),585%08!7$*(%25++-,4.=-%0F(-$=%3C-,4.=-%00'%202%0C,$?.%253%3E%25.2?%11*;%22/)!!-,4.=-%0F%25%20&+-5356/:3$4%25:%1A?%255*'759%3C'!%3E9%25'%22+54?(;35?,(%25(05'%25?')%0F?$3:$%22.&%22=-59'%22+54?(;3+5,(8:%3C%22-(.%22=$%221%14:%3C(?%3C-/*$6l%7C~)(6%00%3E:6=*5%22-8%3C'8k%2267,(%25)y)$4k'7~eo6&-$;2qav2$/%20%7Cw9$n8-+9;58a5?,(%25%118%25?.e%3E1%206%00%3E:6p'.,'7p-%20%22%22%3C4ja%1B%22%3C18$k%2267k(%25n87*(%25%60$%1C$.%20=y%3C%22*.n%20?%3Ef9+y%3E.6k&%3C%22.oFDy%13'((%25yr%1B-*7y18a%0C;%3C#?ck=6p2.%3En=?%25f?n11=$kCS$$a&/25k%20%25n83(.%3E%20--fs%7B~)(6$*=%3C%1F%3E5%09/:;6r%7B~)(6$*=%3C%19%25%10%3E/=-,4.=-%3E*,.3%3E%25.2?-6%3C6%04%25:%3C%22k%20k%208=.a*%20=p()$!*5k8$;+p;-*7%3C%22kLA-6%3C$3en%16%22k+%3E=-p'$*8%3Cp?).#y18a?&%3C)k%209+upFK*%20=p(-%22-2p%1B-*7$%7Dzt%7B%3E!-%0C4.=--)-%3E+%1B%25?5$%20%1D98%20)%22%3C46#9!.%3E%094?:6%3E%14%25%22=82'$/%11:%3C*28':-%077k3%0D8%222k'*p?).n41%22/k#%3C%3E%3Eok%0D59(*FD%08%25%22%22%20n%09%3C*8k:6p!.%22%20y1k,%3E%22-9;-*7%3C%22k&*#%3Cq6%00%3E:6p%01.%22%200%3E,oe%60$8?5;=c%7Fd#$%202be($a*39(;:*%7F'.,'7%0F(-./+1%3E5$%60)8;%3C='*9)(''-)()*%20%3E563$!4%3C%222?3+?$,''*$%14%22'!*563$!4%1C%222?%0D6%3E?%20%22%20%3C%2263$!4%3C%222?:82'$6(+9.//=%0D?$-%1F')--3%22+748%15$!5%04%221%14%220#?%3C9!6='(8:?9'5.%3C;%25?5$%20$%22$.&%220#?'%22%22-596%22%20=?%3C%3C9!6='(8:?9'5.%3C.9%25%25$9%063'.8+$%22$.&%220#?'%22%22-596%22%20=?%3C%1E(&%3C3%20%1E(%228#8((3+?$,''*$-(':%3C%22%3C(%25*6'%14%22#+:;%14%209%3C6'8%3C9!6='(8:?9'5.%3C.9%25%25$9%063#$(%25%064.%20?&8%229.%3C=$%22$.&%220#?'%22%22-596%22%20=?%3C%1E(&%3C3%20%1E,%3C8%20;-.3+?$,''*$-(':%3C%22%3C(%25*6'%14%22#+:;%14'$!-2*-'3+?$,''*$(3./-5%3C(%25*6'(.%25:89%25$93+?$,''*$%14%229+8$.%1E(%226#.%3C9!6='(8:19/$;/*#%3C.9*%3C4().-22$96%3C6?&-%22=-#?%20?;*$.9?3+?$,''*$!.%22%20)182%3C!+4%3C(%25*6'(.%25:89%25$93+?$,''*$!.%22%20)182%3C!+4?$3:$%22$.&%220#?1*=*:$(%25,,$?.%253+?$,''*$;%208=:1%25%22.%22;%25?5$%20$%22$.&%220#?3.(+58));-$$/6%3C6?&-%22=-:$(%25,,$?.%253+?$,''*$(3./-5)4?:6%3E6%07%02%02%0D%15%19a%06%01%1D%15%18%3Czn%14%1F%0F%04k%08%10%1C%1F%04%19%0B%1D-k%0C%04%0A%1C%03k%07%02%02%0D%15%19%04%0F3TZ6%06.:-9%25&k%3C6?&2e%60w-#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d&.:+?$,8%60)8;%3C%08!,%3C//l:y7.5k%3C6?&2gn)%3C.%208+y$98k/%3E1%22/6%04%16%19%05%04%0F3+?$,''*$?%20)%22%3C:$(%25+=-%0C%036%1B%0A-/%20?/t=2%08%0F3%0C%1E%18%04%07%0B%1A%04%0E%056%08%0B%19%0E%0F%0F%1D%09%02%0E%12%0E%00%0D-xqn3hcn%3Czw%7C-zun3h%60n%3C%7D%3E!-%0A/2n55=$'3ep6%7Fk3y%7Dk%3Ck#0-k*&3%60u6&9/)8%22%228a?%3C*&8a$~;/,3m%203%3Cxk$79%20;&038n'!:;e1%25)$%04#$9+y19$k-,%229$%25:5)k/$n+?$,8o$%1E$a9!6=8a&/-3#(%25)y)$49n*5*3(&$xt%7B%152%05#b%3Ccqx%0C%18h6n%11%1F%1D%04%19%1B%17%03%0E%0D%0E%0D%0D%15%0F%3C%18%0B%15%15%08%15%0E%0A$p%1E%0F%18%0B%15%15%08%15%0E%0A$p%03%0E%1D%0B%0B%03%0E%0D%0E%0D%0D%15%0F%3Ck%1D%1C%1C%0E%02%1F%0B%1D-9.$#5985(%3C%3C1?$(%3C%3C1?$);-$$/6%3C6?&-%22=-39$*:%3C3*/(+52%3E5?!7-9.$#5985(%3C%3C1?$%3C'74$6,/45%25%20&+$%22$.&%220#?%229+8$.6%22%20=?%3C1*=*'$3/3+?$,''*$(3./-5%3C(%25*6'&%203%3E512$9=$%22$.&%220#?%229+8$.6%22%20=?%3C,%22%2055=$'3+?$,''*$(3./-5%3C(%25*6'&%203%22%3C&.-6%3C6?&-%22=-39$*:%3C'%22//!.%25%25-%22=-5/%22#+:;).33+?$,''*$(3./-5%3C(%25*6'%3E/''*$.%25'/;5'%3Cl=y7*,.375%3C#$%202%3C$#)7$%3E.6)!7;'.),%20%0F()*:%063$/?+7$6/.9;?%25*'!;22%1E8+-$%22/,=;?3%3C%25+.2$/%20%2262)8%14:6?'5%22%3E$%3E.6)!7;'.),%20%0F&./+-5356%20%3C').%25%255?)#2%1141;5.6--%25$%3C,6%3E%20-$,;)%14,*%3E8%25?)$%3C-5356%20%3C').%25%255?)#2%1141;19+/9.6(!7$*(%25++-%25$%3C,6%3E%20-$,;)%143$;748(%25%3E,$6/.9;?%25*'!;22%1E8%3E%3C3).3%11%3C%3C.,.%20-3$/?/0%3E.36%20%3C').%25%255?)#2%11)%3C*8.%3C;?3%1E.%22%3C=./?-6%3E?%20%22%20%3C%226/.9;?%25*'!;22%1E;%228).3)!!%0F&(/*55'(%25+$%3E.6)!7;'.),%20%0F;-*7%3C%22).3%1155-5.%22%3C=./?-6%3E?%20%22%20%3C%226/.9;?%25*'!;22%1E;%228).3)!!%0F9(,&-5'$&+7$(.%25:89%25$9341;-$/='%22//!.#.%209-19%251%3E:$%3E.6)!7;'.),%20%0F?$*#;%25?5$%20*3$/?/0%3E.36%20%3C').%25%255?)#2%11?6*#%3E:-?%25%3C%25+.2$/%20%2262)8%14=)5(#%3E:-?%25%3C%25+.2$/%20%2262)8%14%3C%3C4)4?:6%3E6/.9;?%25*'!;22%1E)%22,5)4?:6%3E6/.9;?%25*'!;22%1E,%3C%3C5%25#%3E:-?%25%3C%25+.2$/%20%2262)8%147%3C%3C'.%3C,,$?.%25375%3C#$%202%3C$#)7%06$.%20&%2263%20#%3E:-?%25%3C%25+.2$/%20%2262)8%1486$.6%22%20=?%3C%1E(!7$*(%25++-%25$%3C,6%3E%20-$,;)%147$:%3C'%22//!.%0F(-$=%3C-%25$%3C,6%3E%20-$,;)%147$:%3C'%22//!.%0F?)%3E#;3$/?/0%3E.36%20%3C').%25%255?)#2%11/??$%3C'74$6%14#8%20?(?%22%3C%0F%25%20&+$%3E.6)!7;'.),%20%0F=.?+.9%25%25$9%06=*1?'-%3C.%1E*;-8$36%20%3C').%25%255?)#2%11/??$%3C'74$6%1486$.#%3E:-?%25%1E%3E%3E$%3E.6)!7;'.),%20%0F=.?+.9%25%25$9%06&$5.,,$?.%25%11=?%3C/6%20%3C').%25%255?)#2%11/??$%3C'74$6%1486$.#%3E:-?%25%1E-//?%3E3%22:%3C-%25$%3C,6%3E%20-$,;)%147$:%3C'%22//!.%0F=.?+:?%3E/?%11,%206/.9;?%25*'!;22%1E=!-5%3C(%25*6'%147$:%3C3$4%25:%064$6%25375%3C#$%202%3C$#)7%06#?%209:;%25?5$%20$%3E.6)!7;'.),%20%0F&%20;,,$?.%25375%3C#$%202%3C$#)7%06%22.%20/7;%25?5$%20$%3E.6)!7;'.),%20%0F&./+;%25?5$%20$%3E.6)!7;'.),%20%0F.%25%22:6%22)4?:6%3E6/.9;?%25*'!;22%1E''7;)4?:6%3E6/.9;?%25*'!;22%1E?+8=8#%3E:-?%25%3C%25+.2$/%20%2262)8%14:%3C1&2%14#04/-.:%3C(?%3C&/)%13#.8+7-)%20(%25%09%22.28+=-()*:%06%22*5.%1159&(?3sp%12.%3Ei+5k%25$'77k5#/-p?.$n4%25()j3z3(u%7Fzm-%0A%03%04%1C%0D-%18%15%0A%1C%0D-#5?%3E*jdn)!7;e($a$zk%12.%20=p?)%22=y%3C%22/%20n-?k8$;+p-3%22+748a8!y$#$2n:1%25a!!0%3Ek5#'*p,%20&+y4%223.--%3C2%3Ch~%60e~%22%7C3sp%12.%3E%3Cy3'(;,619%25k&8#k#.+7p8$?n-?q%3C?+!$*3./$%22.%20/!7%3C2%3C*,*?'4?+$%7Drxrw)(6%22$%3E%20-%25$%3C,6%3E%20-$,;)%14%22#/-%0F85*:,#6%1A6%13$%3E.6)!7;'.),%20%0F()*:%06%3C%22/%203sp%0C%20&+y#?%209:0%3E,a%22%20y-aa%08!,%3E?%25$97p*#$%3C-5/%606%20%3C').%25%255?)#2%11)%3C*8.%3C%3C%3E?32%1145%254#'%3E8'(,&-5/%3C&!,#.,$8%3C-%1F).n%3C4%225$%3Cy8*2%25i-p)$.%20y1/%25.*y$$a?&0#k&*#%3Cp2$?%60y%19%25a?&%3Cp&$*%20-9&$gn%20?%3Ea(/7p85%22%225p(3./-5k,*%3E*p$/k%0C6%3E%20azn8%3E/a?&%3C)k6%22%225p%22/8:8%3E?-2n;5k1'/%201)-.n159$e3sp%12.%3En8%3E/a6n8%22.a%25!.p-3%22+748%3Ch~if%7Ct/375%3C#$%202%3C$#)7%063#%20?%11;%226/.9;?%25*'!;22%1E(&8$%14,8)%06%3E*,.375%3C#$%202%3C$#)7%06=*18;%3E7.2?%115?%3C%3Ck%3C%3C!%3E$8:*p6/.9;?%25*'!;22%1E&/)#%3E&,+*$%14)%22)1-%10%0D$/=%0D6b%7C/hir%206mmds%20-($%3E.6)!7;'.),%20%0F()*:%06=8&%14-6%3C$3)!!-%25$%3C,6%3E%20-$,;)%14%22#/-%0F&2,%118&*5*%3C$jk%3C%25+.2$/%20%2262)8%14-11?%1E&=%3E%0F?9?3y8*2k$69%25$/n-8.a,/456a#/*p'$-:y$#$k)8=.%3Chvi%60/w.3y8*2k)0&./k&6#?a;%3C0&%22-.)%3C#k5$n$%7Ck6#!y98a%25!.p?).n%3E1&$k&6#?o6dy%09$4k/+5k/$9y$#$k&6#?a$(y$#(8n%3E1&$6%20%3C').%25%255?)#2%11)%3C*8.%3C%3C%3E?32375%3C#$%202%3C$#)7%06%20'%202++5%25597%068*--375%3C#$%202%3C$#)7%06%20'%202++5%25597%061=%20?/+-%25$%3C,6%3E%20-$,;)%141'/%2059$%25:+)%14/*#%3C-%25$%3C,6%3E%20-$,;)%141'/%2059$%25:+)%14-.8%3C%3C6%0D.8%3C%3Ck%3C%25+.2$/%20%2262)8%14%3E512$9+7$98%14,8%3C*/(+$%3E.6)!7;'.),%20%0F;-*7%3C%22./?%3C%20%0F)%20'/73.%1E);?66j6%20%3C').%25%255?)#2%11)%3C*8.%3C%3C%3E?32%11;1'%20%25-%3C%0F%25$9($79%20;&038n;'77%14te%3E776/.9;?%25*'!;22%1E;%228).3.%20-%222%1E;'776/.9;?%25*'!;22%1E;%228).3.%20-%222%1E;'77?$3:$79%20;&038n9+8425%22-2~;/,375%3C#$%202%3C$#)7%06%20'%202++5%25597%06%22.%20/7$79%20;&038n#!*$%14qe%3E776/.9;?%25*'!;22%1E;%228).3.%20-%222%1E#!*$6/.9;?%25*'!;22%1E;%228).3.%20-%222%1E&+7%256/.9;?%25*'!;22%1E;%228).3.%20-%222%1E&+7%25%14#%3E:-?%25%3C%00%07%1A%1B6%14%05%03%0C%04%0E%3C%25+.2$/%20%2262)8%14%3E512$9+7$98%14#%3C%3E%3E%1E);-$$/%1498%22%25%3C%06%1B%0D%156%0C%04%18%1Cp%1F%0Ee%60w-%25$%3C,6%3E%20-$,;)%141'/%2059$%25:+)%14,.%20,%0F84)#%3C%3E%3E%3C%18%1E%1C%13%1F%00%1F%0B$%02%0E%05k%1A%1C%11%06%3C%09%02%0C%15k%15%0E%0F%14-%0C%13%0E%0B%17p%1F%04%0A%03$%09%0E%0D%07%01%0Ep%1F%04%0A%03$%17%02%17%0En%11%1F%18%156%00%1C%02%0Da6%0C%0C%16%0Da6%00%1C%02%0Dn%09%1B%1F%166/.9;?%25*'!;22%1E;%228).3.%20-%222%1E)/51%25%22.-6%3E?%20%22%20%3C%226/.9;?%25*'!;22%1E;%228).3.%20-%222%1E)/51%25%22.:%3C(?%3C%22%20)%25?%3C9/77.%3C(!4%20*%22?%1D59/$93*%3C%22%25.%3C$%3E.6)!7;'.),%20%0F;-*7%3C%22./?%3C%20%0F)%20'/73.2''=59%3C%1E%00%1F%02%02%04%05%0A$%11%08%02%0E%1E%0Dp%0D%13%02%0B%17%146%00%0F%0Ay%16%19%08%0E%00%1D-?%20)3%3E%22*1#':#d1%22%20%3E%0F6%15*,$%7D&26)+1;)%22-*%7F#.8:%06-%25$%3C,6%3E%20-$,;)%145./4%3C$%22%20,,$?.%25%11.19/6%20%3C').%25%255?)#2%11-5*,'!:;)4?:6%3E%14/$#6%258$6%20%3C').%25%255?)#2%11-5*,);-$$/8-6%3E?%20%22%20%3C%22%14s6%20%3C').%25%255?)#2%1141;5#;426/.9;?%25*'!;22%1E&/)$#4&,%069&%20,+$%04%0E%00%06%1Dy%1F%05%3C%1F%0B%18%1D%18a%04%08%1F-%25$%3C,6%3E%20-$,;)%147$:%3C'%22//!.%0F%22,*)%3C-%20%3Ck/:3.1?+=p2.%3E%3Cy69(.%20=p9$:;%3C#?%3Ck=%3C%3E?a2!,p*a-%3C05%25%25k%3C%3C!%3E$8:$%11(%22.%3E--&%20;%2261/6%22%20=?%3C%3C&/)%3C$%20/90%3E/.%3C-6%3E?%20%22%20%3C%226,*%3E5?*%25%3C'74$6%14-5?8$6#8%20'.**.9%25%25$9-?;5.6--&%20;%2261/6%22%20=?%3C,*%3E*3$/?/0%3E.36#8%20'.**-);$/%3C6%20/.%3C%20$=*1'!84?8;+=%22$1/!.%3E?(?%22%3C-&%20;%2261/52%3E%3C49.;*6'%25.;:0?%25p6#8%20'.**-);$/%3C6%20/.%3C%206%20?($%20k-&%20;%2261/52%3E%3C49.;*6'%25.;:0?%25r6#8%20'.**-);$/%3C6%20/.%3C%206%20?($%20m-&%20;%2261/52%3E%3C49.;*6'%25.;:0?%25v6#8%20'.**-);$/%3C6%20/.%3C%206%20?($%20a-&%20;%2261/52%3E%3C49.;*6'%25.;:0?%25%1E#!-4.%20?&8%229.%3C=$=*1'!84?8;+=%22$1/!.%3E$1?'6%3Ezq6#8%20'.**-);$/%3C6%20/.%3C%206%20?($%20ha6,*%3E5?*%25?7)5/3$%3E=?%3C/*%3C+?%3C%3C&/)%3C$%20/90%3E/.%3C&6$%25$8=*%3C%22%25.%3C$=*1'!84%3C(%25*6'#.?%20%3C#82''=59(%25%3E,$6,*%3E5?*%25%3C'74$68:8$%3E2?+!$6,*%3E5?*%25%3C'74$68+8%22());-$$/6#8%20'.**.9%25%25$9*5*3(&6%20?($%20*-&%20;%2261/6%22%20=?%3C2./+3#.;:0?%252%14=6%22?#2341;-$/='%22//!.#.%209-1?;5%22!7#%14/*#%3C%3C*#.%22$=*1'!84%3C(%25*6'8$*%3C:8$1?'6%3E8%1E*;-8$3'/;5'%3C&/)%3C$%20/90%3E/.%3C=%3C19%22#!)$%22.%25=%06%3E*,.'74%22%22*:6%226,*%3E5?*%25%3C'74$68+8%22()$%3E-9$/8%118%25?)$%3C0%3E/((/-?9%3C%09%0B%0A%046%12%04%1C%0Dp%09%18qn$=*1'!84%3C(%25*6'$1?'6%3E8$'+:$.%256,k%20%22%22%20=$%1E%0E%16%0E%1D%0D-#.?3:%259%20?+=-*4?&6%228.%3C%20$6*783;b$6%253;b#.?)%3C%3E.3*%22$2y)$:=5*5#/+%22$683;b-%20==$2$5#3=%22$1/!.%3Ef.;:0?%25l/'*1)-.*$'%3C6e,55#o(!4%7Ft%3Ct3%7F-8$*%3C:86%07.::8%22/,%60w~6#y=%3C19%22#3%1B%1F%05%0Ak%7Fcp%18%04%0A%1C%1A%18k%13%0E%1D%0C%1C%1F%126%0C%16%1E%00azty%04%04%11k%1C%18%04%0E%056%0C%16%1E%00azty%13%04%0C%06%1B%17%19%1F%18k%1E%10%13%00%126-,%22*5.*%06193$9*-%09pqn%18%02%19%0E%1Cn%09%19%08%0A%183%11%1F%1F%3C)%7C1??&9/)%20'$6%0Ckjk%06%19%0F%09%00%07%046,k69$8&$%12y%7Bk%08%0B%15%18%096%03%00p%0D%00%1D%1D$%1D%12a%06%0F%09%036%11%02%0D%12%036%12%0E%0F%0B%13%03a%19%0B%0A%05%07%15%183;5856%20%3C'.2?3?1'2.31$?18tv%7F).%25%25k~%22.d=:%22%221?=v=*1%14)%3C$8$*%3C:8e1#%3E$%16.5(&y593$%3C$8?5;=c%7Fd#$%202be($a*39(;:*%7F&%20;%11%3E5?'9+*8e1#%3E$8?5;=c%7Fd#$%202be($a*39(;:*%7F&%20;%11%3E5?'*8%3C~;);3;b#.?+=9?26&-$;2qav2$/%20%7Cw9$n8-+9;58a1??,*%3E*%7F(%20(&%3C%0F.%25%22:*%0F6o?6--#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d)$:41;2d-83#$x%11$%0F6)?:)#qnd,6%3E%20se'6%7F8%229')$8n#!-=*18a)9(*8%60-(?%3C#:-%208%7Bda;?%25*y%600?d2(%3C0%20?2d#8%20%14&.:6'%25o;&)-#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d,*%3E%062z%1E,+-6*7.%60)8;%3C#:-%208%7Bda;?%25*y%600?d2(%3C0%20?2d#8%20%14#z%11%3E5?.%3C%20w%20#16&-$;2qav2$/%20%7Cw9$n8-+9;58a41;%1E)%7F%067.5)+*$e1#%3E$3?36&-$;2qav2$/%20%7Cw9$n8-+9;58a41;%1E)%7F%067.58+8%22()e%3E1%206,*%3E5?*%25%3C'74$6)/+3$/?/0%3E.3%14%3E03%2026#8%20'.**.9%25%25$9;19%22$%20-1%22/.%3C$=*1'!84%3C(%25*6')%209-6%3E?%20%22%20%3C%22%14-.(--&%20;%2261/6%22%20=?%3C#*%3C:?%255*'759%1E9'%3E8?%3C&/)%3C$%20/90%3E/.%3C,8%22(.%25:89%25$9%117?=.?+*-&%20;%2261/6%22%20=?%3C5.6--&%20;%2261/6%22%20=?%3C5.6-&$5.*06-%1E;':;8%3C&/)%3C$%20/90%3E/.%3C:%3C(?7$:%3C4%22'-3%17?k%0C*%3E*-&%20;%2261/6%22%20=?%3C,*%3E=9=%3C&/)%3C$%20/90%3E/.%3C:%3C(?/*#%3C-&%20;%2261/6%22%20=?%3C5.6-1%3E5#!+-&%20;%2261/6%22%20=?%3C5.6-=$%25.3%18%3E2a%06!=56,*%3E5?*%25%3C'74$6?+!$*&.3%00%09%12%18f%03%14%7D%0F%05k%06%11j&,q=*-&%20;%2261/6%22%20=?%3C4%258?1=#%3E:-?%25%3C%1E%00%1F%11%1D%3C%7B%60j-&%20;%2261/6%22%20=?%3C,*%3E=9=$/'--&%20;%2261/6%22%20=?%3C5.6-2*2.*6%3E6#*=%3C4k.%25341;-$/='%22//!.$.9?!+9,(%25/5%3E*,.341;-$/='%22//!.$.9?!+9,(%25/51%3E5#!+-&%20;%2261/6%22%20=?%3C,*%3E=9=%1E;':;8%3C&/)%3C$%20/90%3E/.%3C:%3C(?%1E;':;8%3C&/)%3C$%20/90%3E/.%3C:%3C(?/*#%3C%0F;((%25*-&%20;%2261/6%22%20=?%3C5.6-1%3E5#!+%0F;((%25*-&%20;%2261/6%22%20=?%3C5.6-=$%25.%11)9(*8341;-$/='%22//!.$.9?/=4.%25)7%06%20%22%22%20=$%11/%25.*y22%7Bk341;-$/='%22//!.$.9?-6=&$%25:%06%20%22%22%20=$=*1'!84%3C(%25*6'?$3:87.%1E;':;8%3C&/)%3C$%20/90%3E/.%3C:%3C(?1%3E,598).*$%00%3E#'':-%1B3%2288$.%3C&/)%3C$%20/90%3E/.%3C*%3C%3C.5.,,$?.%2531$?18tv%7F).%25%25k~%22.d=:%22%221?=v=*1%14*%3C%3C.5.%60)8;%3C?&,=)2%3E%3E$$#4&,*4$6%25341;-$/='%22//!.=*1/'/2z%3Ckc$2y%3C%0D;-%259$k#8%20k7.%3C*9$/gn)%3C.%208+y%22.'9+*8k1*)%3C-%25.*;-8$36%206%3E*,.3%0C%3E%25%20&+=-%0F$-n%1F93%3C%18%3E8'%25%3C%0F+?p;3%22=$%14.'k)%3C19%3C%3E%202%3E$6%25n*8*1.n%10%146%02*%3Ey%0A$/.n%1B?/86=0=;-.%03%3C%3E%3E%02$%2089%25$9%11%0C%19%08.%25:89%25$93;79$;%228)6#,%3C%3C%20'%202%11-9&$8-+%25)%3C#:-%208%7Bda;?%25*y%600?d2(%3C0%20?2d%3C%3C%20'%202%11%3E5?o;&)-#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d3.%3E512%1E9+)?95e%3E1%206q3341;$/'-?9%22$%20-1%22/.%3C$=*1.*0$$36#8%20.%25%22:6%22%14%22'!*56,*%3E%3C4%225$%3C%06=%22%25)!!%0F;3.805%3C%22$%20-1%22/.%3C$=*1.*0$$3%14%22%3C6?#$6%06%3E.6(!5?9#$6$pc$/'-y6%0D%04%0F%1D%15%0F%0C%0A%1E$=*1.*0$$3%14#04).3%1175%3C#%3E:-?%25%3C&/)5/(?!+%0F&(/,6(%14-$/=2%3E5?!7-&%20;+=9?.9%1149/#$6%06#*7.,,$?.%25341;$/'-?9%1E&'=2$9%14;74$#%3E:-?%25%3C&/)5/(?!+%0F&(/,6(%143.*62%3E5?!7-&%20;+=9?.9%1149/#$6%06$.2?,,$?.%25341;$/'-?9%1E8//5%146%22%20=?%3C%3C&/)5/(?!+%0F8%20=+%06?=$99+9?$%1490%3E/.%3C341;$/'-?9%1E8//5%146%22%20=?%3C%1E8//56,*%3E%3C4%225$%3C%06#*7.%11.9%25%25$9%063*/(+5-&%20;+=9?.9%11*1=$%1490%3E/.%3C%11?9.-/341;$/'-?9%1E8//5%146%22%20=?%3C%1E;;;%3C%22%226#8%20.%25%22:6%22%142*8%3C%0F$7.%3C.%22%225.%11.9%25%25$9%06#*7.341;$/'-?9%1E8//5%14.=++'9(?+%06'%22//!.%0F(%20%25-%3C%3C6%0F%0E%19$%1E%0E%16%06%0F%09-#5?%3E*jdn)!7;yo%22!v#(3%22%3E-#d,*%3E%06#*7.%11)%25)o;&)-$7.%3C.%22%225.%11:?%25'%22%3C4-%06%20;n*1=$ky?%25a?&%3Cp85*)%3Cp?.k#8%22%20a%3C&%3C%22.a2!,p%3C%20%25:y$#$k-%3C%3E?$9n66k5#+y3%223(%22%3Cp?.k,%3C~k%02'':;k%02*%20:5'a%0F%3C8'%22/,n8$k5#+y$$1k:6p*#$%3C-~6%0F%0E%19%1A%19%19%02%07%0B%09%1C%0A%15y3%14?=$k:15k,$;*5k5$n*5?a?&%3Cp((9-55k2%224%3C%7Ck%20%25*y3'((%25y1,%20%22%20y'#$%25n%20?%3Ef9+y8*1;7w-%05%04%1C%0D%10%02%08%0D%0E%1E%15%11%1Fr6%1E51?'$%3C4p(3./-5/ok%090&.a%22:y1k/*#%3Cp?.k%25%3C5;a?&0%3E,2k!+7*/%22=%3C4e%3C%05%0B%0E%12%04%19%1B%02%18%04z%3C%08%2203%20a$%20y$#$k=-1,$k9159$k76%25k6*%20-p$/.n%3C%3E/a$(y$#$k%3C%3C3?%20%25)55k5$n;5e%3C%05%0B%0E%12%04%19%1B%02%18%04y%3C%08%2203%20a$%20y$#$k=-1,$k9159$k76%25k6*%20-p?).n6$#$9n%3C%3E/a$(y$#$k%3C%3C3?%20%25)55k5$n;5e%3C%05%0B%0E%12%04%19%1B%02%18%04x%3C%06!/5k5#+y=$48+y$$a8+-p?).n+5(5*%20%3E%3C.a#+07#5gn8%3E/a(%2203%20a*)89%25a%3C&%3C%3Ek8$;~%22.a#/)%202o6%00%1C%07%09%0E%13%1E%15%11%1Fu6%00%1C%07%1B%0E%07%17%09%1C%0A%15z3%1A%3C%22%22%20n6%3Ek5#+y#?%20,+y$$a8+-p?).n:5%255.%3Cy%20$(%25:y?-a?&%3Cp;.'7%3E?%25ok%1915%25a8-8%3C%22/,n6%22k3$:8$%22/,n-8.a;!5),.%25by$#(8n0#k5#+y%20$(%25:y9?a%3C'5%3Ck#.n=?%25$k/+?%3E//%60y%19?a8&6%25'%25k,%3Cp%22/k:15k%22.%20-59a$(y1'-k:15k1$'7$8mk,,$k(?n=?.2%25i-p%25$.*y$$a)+y%20.3-+:$e%3C%05%0B%0E%00%04%0D%12%1E%15%11%1Fs6%0D59(*k=6=.6#++5k5$n)%3C*%22.n-8.a-'+#?a;!0%3E?a$(y$#$k%3E6%3C2&$%20wp%12.%3En:1%25a;%2283.a*=y=*/2n)?%22/?=y18a2!,p'(%20+up)4?n+5&$&,%3C%22k5#/-p$/'7y3$/=+!p;.'7%3E?%252k-8%3Ek)*8%3Cp;)2=038o6%00%1C%07%1B%0E%07%17%09%1C%0A%15x3%1A?%255%22%20,5k%22'':;%22/,n-?k*.+)p;-*-0%3E,a&!+5k1$'7$8a$(y$#$k%3E6%3C2&$%20wp%08-%22-2p?).n?992?n)?%22/?n-?k%22$#)%3C.5.n-8.a8&8%20.ok%176%25k%22*%20y%20'%20(+y18a&/7)k1$'7$8a*=y)$4k%220;.mk,,$k3.#%3C=)$9n-8*5k!7%3C2a(!7&.9k%3E6%3C2&$%20*p(%20%25n11=$k%3E1)8((=w-%05%04%1C%1E%16%1C%12%11%07%0F%0Dd6%12%03%0F%09%15%0D%13%02%0D%09%1C%0A%18%0E%1C%0A-%1C).:159a$%3Cy%3E$5k:198a;%228$-.9#*p-3%22--9$/k88%3C%3E$k90%3C'a*%22*?k%20;%3E5)k'9':$%22.%25n-?k1'/%20592eDS%1F%1D%04%19%1C%10%14%0E%7Bk%1A198a8+-$%22/,n.9'-k!7%3C2a)+y1;1''%3C4k5$n-8%222k=11;$gn7??a?&%3Cp%3C)$%22%3Cp;-*:??9,en%0A5?a?&0#k5$n;%3C*/%20n-?k48+y$#$k88%3C%3E$k(6%22k5#+y'#.'+y%20'%20?(6%22&mk=%3C$k(%25n;18((n)%22$1.%3C-9.2e3%0A%18%0A%11%0E%08%0B%19%08%3C%03!.p&4(&y69((:0?%25a?&0#k2#/)5k)*=wp%1B-*:??9,8n.9?)k&07#$9n?%22%22%22?'6%3Ek6%22%225p8-$9y4$6%25n4?9$k915%25a8%2204%22/,n87*(%25=-p$5#++p;-*:??9,8%60SZ%04%17%0E%1C%0B%19%0F%04qn%0D8%222k=%3C$?(%25)y'%22-'n6%3E'8k,%3Cp*1;%2205/a?!y$#(8n*8*1.by%3E$5k:15k6#!55k1'/-6$3&%60y%03.5k:198a?!y2'%20%25%25y$$a%3E=%3Cp?).n/1'4.n??9a?&%3Cp%3C)$%22%3Cp;-*:??9,gn*5?a%22%20y2*2%22-y%209.;++$%22$8%60$%03%03%00%1B%0B%1D%15%05%12%02%1A%00-%03.%3Cn=5%252.n-8%222k=11;$k'*~k%09%22)159a/+7#%2252n*8*1.=y19$k&%3C1=(.%3Cy$#%20%25n5?%3C$9n=5%252%22:%20p8)*%3E%3C#k.-n-8.a8/45k2%224%3C~AK%04%18%1C%02%19%08%0F%0Bcp%1F)%22=y#.5?'77k6%22%225p$/'7y2.a*%3E)%3C%22$/n-?k5#'*p8)*%3E%3C%7Ck/$:y$#$k91?'$k%3E51?'$%3C4~k%12.:y$#(8n-?k#'/7;k5$n,#.a?&%3Cp=%20';%3Cp-.9n-8.a%3C&6%3C.a;%228$-.9#up8$?n0%3Ek#*=03k19!)595%22+*~6%12%03%0F%09%15%09%0E%1E%00%1A%19%05%04%18%1D$%18$6k(8#?a?&0#k.9n8%3E$5#++p8)*%3E%3Cp&.=+*p*'?++p*a(!5%3C%222%22!7~k%08-n-'$a8&8%20.2k90$#a/'?6.3.%20-p).%3E%20:9%25$8=y&*-%3E+*p(.'%2204.mk'?p).?&y&*-%3E+*p*3.n)?8(?'/5ga?&%3Cp#(,&%3C%22k#$;73%22/.=*p=%20';%3Cp%222k;*5/ok%07?p$/.n0#k/.)8$%227.by$#$2n8%22.a(!42%22/.*up-.9n%3C(*,;%22%3Cp%7Bosn8%3E/af~wek%7Ck~wcea%18!y9%25a&!*$k%22*=%3C#ga%3E=%3Cp*a%25;42.3k,%3C$%3C$.%20y%7Dza*%20=p%7Ba?!y=**.n-8%222k%3E51?'$%3C4p'$8=y2$4%25-%20~k%11'/%20592k/+5kqewl~AK%04%18%1C%02%19%08%0F%0Bcp%1F)%22=y#.5?'77k6%22%225p$/'7y2.a*%3E)%3C%22$/n-?k5#'*p8)*%3E%3C%7Ck/$:y$#$k91?'$k%3E51?'$%3C4~k%12.:y$#(8n-?k#'/7;k5$n,#.a?&%3Cp=%20';%3Cp-.9n-8.a%3C&6%3C.a;%228$-.9#up8$?n0%3Ek#*=03k19!)595%22+*~6%12%03%0F%09%15%0F%04%0A%1A%11-%00('%22*p;-*7%3C%228a%22(y$#$2n-?%3E%22#n0$e%3C%18%06%18%00%0E%0F%04%1E%11%09%18%08%08%1D$%19-a%25!y%20#88':#k(8n%3C%3E*#'+=%7Ck5#'*p8)*%3E%3Cp%3C('%22y?%25-2n;5k7%22=,1'mk'-p%3C.%25i-p?%20%20+y%20*3?n0%3Ek%20%257y%20#88':#k%22*%22:%25'%20?'6%3E8ok%1B*5k5#'*p-.9n*3./.%3C%20p*//n:?8,.:03k%25.:89'2en%00?%3Ea8&6%25'%25k=%3C$k%208n41%258k!?p2.%3E%3Cy##%20;+*p*2k%3E6#8()%22%3Cp?.k,%3Cp%25.f%3E1)8((=up?.k%3C%3C4%3E%22.n-8.a'/%3Ep$/k76%259a&/)~k%0F$%20t3$/=+!p;.'7%3E?%25a8&8%20.2k#,#?a)+y%3E$l;&%20#%22%228%60$%03%03%00%1B%0B%17%1F%0C%13%0A%1E%09%1C%0E%3C%02(y%3E$a,%3C8%20;-.n0#k$%25/;%3C.%25gn)%3C*8.%3C*p%3C('%22y%3E$5k,%3Cp*#'+y$$a,%3C8%20;-.n0$k6#+7p;-*70%3E,a%0C%3C8%20;-.n4?/$en%106k/$n)822%22-*p%222k!7%7Ck8$;y4$/l:y%3E.$/n-?k5%3E%3C7p$/k%206p,3*%3E)%3C.a*=y'.-'%60y%19-a2!,p%3C%20%25:y$$a)+y1)-.n-?k&9/)%20'$k:198a8&8%20.a);-p2.%3En=?%25f?n.1%255k%3E512$9=y$$a(!5%3C%22%25.n.9?)k'-%7Ck5%3E%3C7p$'-n~%13$-''=5k6%22:1jk%11'/%20592ln0%3Ek%03*=03k%119!)595%22+*p*//n55*7.n~%3E$a,%3C8%20;-.iy?-'e3%0A%18%0A%11%0E%07%17%1E%0E%13%0C%1C%18%00%1B%0D%0E3%106k(%25%20%3C%22k&9/)%20'$k'*p./*,55/mk%3E512$9=y%20*28'77k5#%3C6%25,)k:198a8&8%20.ac,%3C3*48+y9?2ki%1A?'-%22*%3Cp%3C(?&cp;-*7%3C%228fk'*p$'-gy'%22-'n;5k%20)%22%3Cp?.k'79?(*:%3Cp*a,%3C8%20;-.n6%3Ek5#+y5/&.n66k5#+y##%20;+y69.&n0%3E8(/+y9?ok%07?p%225l=y4%222*,55/mk:152a%3C!7$e%3C%18%06%18%00%0E%12%03%1C%10%1E%00%3C%02(y$#(8n*8*1.n0#k%20k%3C%3C3?%20%25)55k.9n:99%22'+up%225k-8%3Ek2#%3C0%3E%20a,%3C84%3E%20'%22%20~6%11%04%02%00%03%08%00%07%0B$%058$k:198a?!y##3%22%202p$3k)+?%3Ca?&%3Cp;.'7%3E?%25a8&8%20.ok%0F5%3Ck5#+y%20$(%25:*p%22/k:15k1$%22%207$/k90%3C'a)+y#(%20'+=p-3$#y$#$k-%3C%3E?$9n)?%22/?by#.5k915%25a?&%3Cp8)*%3E%3Cp%3C%208n:%22.%20?+=~6%11%04%02%00%11%05%06%07%0B$%058$k:198a?!y%22$5*:%3Cp?).n)?'8,!7p8)*%3E%3C%7Ck%209!,%3E/a?&%3Cp($%25:%3C%22k1$'7$ga8+-p%3C).%20y$#$k=11;$k98#k%229+8$.%25e3%09%1F%07%18%123%0D8.a%12n)?8(?'6%3Ek.-n-8.a;!5),.%25n*8*1.by%22.-*:0&.a?!y$#$k-%3C%3E?$9n66k5#+y%20'%20?(6%22&ok%07?p2.%3En11=$k%3C6$*5.*y)$49n)%3C*5-!+=ga%13n.9'-k%206p'.%25)%3C%22k#.n55-5k/74k3%22)1$k%20%25*y%09k6%22%225p%25.k%226%3E,$9n;5k4;n8%3E/a/!.%3Ee%3C%1B%01%15%09%13%3C%1F&%3Cp%13a;!*9?($%20y?-a?&%3Cp;.'7%3E?%25a8&8%20.mk%3C%3C%3C*5%228%3Cp?.k:15k%22.%20-59a$(y$#$k%3E51?'$%3C4~k%08-n%20?%3Ea#//5k3$:8$.%25k76%259a;%228$-.9#up%13a%3C'5%3Ck/$n5?%25&.%3Cy2.a'+?$k%20%25*y%22%22&#:y1%25%25k%17y'%22-'n7?k-$%20%3E59a)+y%25;a*%20=p/.%3C%20w-%1B%0E%07%17%1A%1F%05%17%0E%16$%07#$?&%3C%22k.9n7??a2!,%22k1$%22%207$/k=11;$k'*p(.%258%3C(ea%1B!5),.%25n*8*1.=y=%3E2?n;5k%22$%20/53a%22(y)$4k98%3E?a?&%3C=k5$n11=$k%3E1)8((=wp%0C.$)55k%22$%20:1=$k8*p(.%258%3C(k(-n%20?%3Ea/!7w?a%20%206'k5#+y4%22'-++5%25%22.oy%04#$k+8#%22$8:y'*8k:6p9$&+42.3k'*p?)*:y3$/(//5k2#/)58a#//5kf(//58fk'7p?).#up(.%258%3C(k2#/)58a/!7w?%606%0D%10%02%08%0D%0E%1C%18%14%02%14%183%0D8.a9/=9%3E2k!?p?).n:99%22'+y##%20;+w-%08%08%19%0D%15%15%12%3C%1F&%3Cp%12a;!*9?($%20y?-a?&%3Cp((9-55k2#/)5ga9+51?(=+y$$a?&%3Cp($%25:%3C%22k.-n-8.a;%228$-.9#wp%02'k76%25k)*8%3Cp9.?/-5/a2!,%22k1'/-6$3&by%08k6%22%225p%25.k%226%3E,$9n;5k-.(-p*//n+9,)?n8%3E/a%12n.9'-k%206p'.%25)%3C%22k#.n,%20k%20%25*y4$6%25%60$%13%02%13%08%02%1C%086%15#+y%08k1$=0$%22.%25n66k5#+y3%223(%22%3Cp8)*%3E%3C%7Ck3.%228$%227.n-?k5#+y3./?++p$'k:15k1'/-6$3&%60y%19-a2!,p#%20=+y%22$5*:%3C4k8$;+p;-*:??9,gn%01p%3C('%22y%3E$a'!77.3k,%3Cp'$-:y1%25%25k%3C07#5k/74k%18k90%3C'a%25!y%3C$/,++p)$k;)p*//n=?%3C/e3%1B%08%0A%0F%0C%02%1C-%1F).n8%3E,-.n66k5#+y%22.%22?/77'$k=11;$gn+5'%20?'/5k5$n-8.a*%20%3E%3C.a$(y$#$k%3E51?'$%3C4~6%03%13%06%1C%19%0C%09%1F3%0D8.a#+07#5k!?p?).n+5(5*%20%3E%3C.a8&8%20.o6%0C%01%07%02%05%1F%06$%04#$k904?)k!?p?).n+5(5*%20%3E%3C.a8&8%20.o6%0C%01%096%15#+y%09k1$=0$%22.%25n66k5#+y%22.%22?/77'$k=11;$gn+5'%20?'/5k5$n-8.a(+7$.3k!?p?).n)%3C*5-!+=ea%02(y)$4k&8&.a9!-1?$/n%20?%3E3k%3E51?'$%3C4%7Ck%19k90%3C'a%25!y%3C$/,++p)$k%22%3C6?a*%20=p9(,&-p*//n%00p%3C('%22y%3E$a'!77.3k,%3Cp%3E1k/74k%25$97~6%03%13%16$%04#$k%16y%20$2%22:0?%25a$(y$#$k%3C%3C3?%20%25)55k2#/)5ga9+51?(=+y$$a?&%3Cp($%25:%3C%22k.-n-8.a;%228$-.9#wp%02'k76%25k)*8%3Cp9.?/-5/a2!,%22k1'/-6$3&by%08k6%22%225p%25.k%226%3E,$9n;5k-.(-p*//n+9,)?n8%3E/a%12n.9'-k%206p'.%25)%3C%22k#.n,%20k%20%25*y4$6%25%60$%1A%04%08%05%1A%1B%02%0E%00%00%08%16%02%08%046%07?p?)%22=y98a8+-p?.k~up?).n3?%22/?n.9'-k%20%3C&.3k,+5**en%106k(?n0#k2.:y8%22&#++p?)*%20y*.3$by$#$k$69%255k90%3C'a)%3C%3C1%20a%22(y=$3.n-8*/k:11?a&;:8k'$%3C:5k(8n)%25?a?&+?%3E&#n0$ea%1F&0#k'$%3C:5k%22*%20y3$,.n?%22$,k:15k6.'%3E8?a$(y$#$k%3E51?'$%3C4#k5#+4#.-=+*%7Ck%20%25*y69.&n:?'-%22=0?%252e3%13%1F%02%0F%1F%0A%0B%11%1C%0D%02%00%1C-%1C).:159a$%3Cy%3E$5k:6p/3*9y1k-%22%20%3Cp-.9n-8.a!!0%3E?a%22%20y7*,.%60y%1E%04%15%0Ety%3C%22/.=y19$k/5'*88n=%22*6%25n??9a!!0%3E?2k'7#%22%25.n-8.a.*0$$3e3%15%00%01%0C%04%18%1C%16%04%13%08%0B$%18$6k#,3#a-!+3.a%22=y%258$/n-?k%20(-%3C%3C.3*:%3Cp?).n)%3C*5-!+=k%20'!77k5#+y%20*5#%60$%1C%1B%0B%06%01%0F%15%18%11%0E%0B%1D-%1F).n*%20.$/n59&(?n66k5#+y%20'%20?(6%22&ok%07?p%225k#6&.2k(8#?$9n-8*/k:198a8%3E%3C5/mk:15k,$8%3Cp-.9-%3Cp%3C('%22y2.a*%3E)%3C%22$/n-?k19+/5%255k'-p-3$#y=$7%22%20%3Ep-%208:%3C%22k5#/7p?)%22=y#;$.*y%3C%22,%22:w-%07%11%01%1E%18%04%03%0D%0E%00%1E%04%03%3C%03!.p-%209n-8.a;%228$-.9#y=$7.=y2.'$%3C%3Cp()*%20%3E9%25&k*0%22.%22?'6%3Ee%3C%07%1E%13%00%0A%15%03%0F%17%17%07%046%1A15k%20%25)55k.-n-8.a;/-8k5#+y%20'%20?(6%22&a&!/58a*%226%3E,o6%02%0A%1A%18%11%19%07%17%17%07%04%05%09%0D%186%15#+y4.'*;5$k-.%20%3E$#a$(y$#$k=)%22%22/,%60y%19?a%3C'5%3Ck2?%3C%3C$()k%226%3E,$9n-8*/k:198a'+77?)k'?p?).n??9%22.n0#k5$!y'.%20%20n-?k,$8%3Cp?).n)%3C*5-!+=e%3C%07%1D%13%03%1B%13%02%00%1E%16%04%13%08%0B$%04#$k=-%22./,:1p$'k:15k2;%3C0%3E,mk&6'k,%3E-1p-.9-%3Cp%225k/)%20'(.=y$$a&!/5k5#+y%20'%20?(6%22&ok%07?p%225k'*p?.$n.5**k'-p%3C.%25:y2.a*,55k5$n1?'%25k:15k1'/-6$3&n,%20e%3C%01%01%10%1E%1F%02%083%0D8%222k-15(*)!!p%3C('%22y?%25-2n=?k%20%257-8%22/,n06k5#+y:$(%25:*p%0A5?/:8k%15$n118a)+%3C%3Ek2.:y$$a*%206$#$9n)%3C*5-!+=ea%02(y9?a%22=y3#$(%25%3C4ga?&0#k1'/-6$3&n.9'-k-6%3C'(/+y'%225#n-8*5k%3E51?'$%3C4%7Ck(-n0$l2k%206$k5#+7p%225k96%3E?o6%1C%16%14%0F%00%06%1E%10%1E%0C%3C%1F&0#k6%22%225p$/'7y4$a*%20%20$#(%25)y9-a?&%3Cp%18.-:7582k'*%3El5k=%3C$k5$n#59.en%10%3E(3./*9%25&k*8=;(%25)y'%22-'n45*/k:11?a?&%3Cp;-*:??9,k*658/l:y2$4%25-%3Cp-.9+/59a%3C&%3C%3Ek5#+y:$(%25:y98a8!?$e%3C%19%01%1D%03%04%07%1F%00%1C%03%18%3C%03!.p8.-:y$#(8n3?%22/?n0#klk&6'k,%3E-1p?).n+?/a!!0%3E?a%22=y1'-$9%3C4k5$n*$9$?-1p$3k-6=;3.=*p-3$#y9?2k!+9,(%25/5p'$%25)-8ea%1F&%3Cp/$-/,%3C?a%22=y#.5k:6p%7Bozn;5(%20%3E=%3Cp8.&+y6'$3';9'(?7y8.-;=y%209$=+7$k&''-3#$8by2%3E5k;*5kqk'?p2.%3En.1%255k'-p?.k,%3Cp9(,'=~6%13%04%0A%18%04%1F%00%1F%0D%11%096%15#+y%09k%22$c6%22/(%25/-5k.-n.8.3.n-8.a-/+p.//n66k5#'*p!.%22%20-p*5?/:8.2k:6%7Ck6#++5kqg~y98a?&%3Cp($%25:%3C%22e%3C%19%01%1D%11%1F%15%0A%1A%1A%18%13%3C%1F&%3Cp%13a(!t?9%25%22%208$.a$(y'#$9+y$#$k(8%22k$%25*y?-a?&0#k+$'7$k%20?:83#$8n-?ga%3C&%3C%22.a%7Bbip%222k:15k%22.%20-59o6%1C%16%14%07%0E%08%0F%15%096%15#+y%09k%22$c6%22/(%25/-5k.-n.8.3.n6%3Ek5#'*p;-*:??9,k:15k3$*y:$(%25:y1?5*-158a?!w-%19%0E%0F%02%16%13%0A%0D%133%0D8.a%13n:?f.9*0%3E*5.n66k6#++5k.%25n-8%222k%3E51?'$%3C4p?).n+?/a!!0%3E?a*:-1().=y$$o6%1C%0F%11%05%06%07%0B%0D%1F6%15#'*p%3C('%22y?%25-2n=?k%20%257-8%22/,n06k%00%25)55k%0D%22#0$k(8n:8.%22%20+=~k%08-n*?ga?&%3Cp!.%22%20-p%3C('%22y%3E$5k,%3Cp*-'!.5/a?!y%22$5*:%3Cp$4?=04.a$(y$#$8+y$%3C.k/77'$8%60$%02%1D%00%05%09%15%15%0D%13%04%03$%04#(8n.9'-k!7%3C2a/!y1%258?&0%3E,a%22(y1%25&'+y%3C%22,%22:y98a(&%3C3%20$/%60y%19-a8!up?).n3?%22/?n.9'-k%206$k#.n8%3C'.%3C+=p?.k%3C6$*5.n6%25?2%22*%3Cp$'k:158$k:.?k%20%25)558o6%1C%0F%11%05%06%07%0B%15%19%06%08%1F3%09%22.7.%20-p?)%22=y:$(%25:y69.&n+??%20?'77k.%3E:*9/$k!?p?).n*%20.%22%22(05/a*%20%3E%3C.2en%141%20$k=,%22.a2!,p8$?n-8.a-%3C6=k%20%25*y$$a*%20%3E%3C.2e3%0B%06%1F%14%19%00%1F%1F%19%02%0E3%0D8%222k90%3C'a$%205)k%25$n8%3E25#'77k(-n%1C%3E*#'+y%1D$5$%3Cy98a(&%3C3%20$/%60y%04#$k/4?%3E/?n66k'$%3C:5k48+=p?.k%3C6$*5.n-8.a;%228$-.9#w-%19%17%1F%1B%0B%1E%18%11%0E%0B%1D-%1F)%22=y'%22-'n6%3E'8k*6p*/2:19%25&k'?p%0E/*,55k%0C$:6%22k(8n:8.%22%20+=~k%15#+y=*9k=)5.%25k:15k,$:6%22k6%22%225p*%22(+559%20?+y$#$k%3E51?'$%3C4p?.e3%0B%06%0E%0F%0A%0C%15%15%06%0E%1F%01%0B-%1C).:159a?&%3Cp!.%22%20-p%3C('%22y1;1'7y1k'$%3C:5k5$n-%259/k:15k1'/-6$3&%60$%02%1D%11%02%18%16%04%12%3C%1F&%3Cp%12a(!t?9%25%22%208$.a$(y$#$k%3E69%255k:198a;%228$-.9#y'%22-'n+??%20?+y19.%3E%20=~k%15#'*p;.%22%20-p%222k/5'*88n+5'%20?'/5k5$n-8.a;!*9?($%20y?-a?&%3Cp;-*:??9,e3%0B%06%1B%08%1D%01%0D%086%15#+y%08k%22$c6%22/(%25/-5k.-n-8.a;!0%3E?a?&0#k1'/-6$3&n.9'-k%3C6$*5.n8%22$4%25*wp%1F)%22=y%20$(%25:y98a*%22.122k%3C%3C%3C*5%228%3Cp?.k:15k1$=0$%22.%25n66k5#+y%20'%20?(6%22&o6%1C%0F%11%1F%15%0A%1A%1A%18%1F%0E6%1B*5k5#'*p?.k=%3C%3C.%22?n8p;-*:??9,k:6p*5?/:8k5#+y%20%227$:y%20$(%25:y$$o6%1C%16%14%0A%15%1F%0F%1A%18%1F%0E6%1B*5k5#'*p?.k=%3C%3C.%22?n8p;-*:??9,k:6p*5?/:8k5#+y6*3k+74k.-n-8.a9!=p!.%22%20-p?.e3%11?%3Ca?&%3Cp;)2=038a$(y$#(8n)%3C*5-!+=k#.&8&.2eD%0A$*5%22!7198qn%175=$9n4?=$8%60S%169$.n4?=(%25)cp%06.=+*p*//n:?'-%22*%3C#k6%22:1p$5#++p;-*:??9,8%60S%1B%22/.#8$%22%22qn%14?=$8n;%25?a%3C'5%3Ck/.8%3C%22k#.n86-$(:%3C4k#2n8%3E25#'77k$'=%3C~k%15#+%20p%3C('%22y%20*28n-89.%3E)1p$5#++p%20(%25+41?((n6%22k2?/-9(a)!=9.2en%0C#.a?&%3Cp85*%3C-p81.+=%7F81%22%20y&*-%3E+*p?.k#8;.a?&%3C=k,$8%3C~6%15#+y%08k1$=0$%22.%25n66k5#'*p)./7wp%7Bm%7Bn0#k5#+y3./?++p$'k:15k2?/%3E5e%3C%1F&%3Cp%12a;!*9?($%20y?-a?&0#k#$*%20~kqg~y98a?&%3Cp($%25:%3C%22k.-n-8.a8:87.o6%1A15k%20%25)55k.-n-8%222k%3E51?'$%3C4%7Ck(%25n=5,3.+*%7Ck%22'!:;%3C(8+w-%03.%3Cn?185k:198a$%3Cy1%25.?&%3C%22k1'/-6$3&n4?=$8n86?$9n8p(.'%220#%22.%25%60y%19-a?96p8)*%3E%3C#k6%22:1p/(-(%3C%22./?n;?%3E/('7582k88%3C%3E$8n:?'-%22*%3C%7Ck(-n;??)k88%3C%3E$8n8%22.a;!*9?(=+up?).n19,).%3Cy2$4%25-0%3E.28n/1'4.n0#k48+=~k%08-n6%3E.a%22=y%3E.&*:0&.mk:152a*%3C%3Cp(.&,0%3E.%25gn??9a.68=;-.ni~sa*%20=pfqe%7Bymkqe%7Dwp%18.k'7p&.8:y3*2.=up%3E2.n8p%254&,%3C%22k#.:.5./kchp*//nip?.k#8;.a?&0#k1'/-6$3&n5582k,6%25%25%222%60y%00'%202++#k%209+y%60ex~%60SZ%04%17%0E%1C%0B%19%0F%00%09%02%1Cjk%15#'*p=%20';%3Cp*1;%22058a?!y1'-k=11;$8n0%3Ek5#+y%20'%20?(6%22&mk;7%3C.28n8p81.-06%22%22k88%3C%3E$k&8#k#.+7p8$?n??9a*n*8*1.3%11?%3Ca/+7#.a?&0#k2#/)5k(8%60y%18%22&#++p/$%25=0$2a8&8%20.2k/+5k).//9.3k:11%25a'!.59a/+7#%2252n*8*1.=y?-a?&%3Cp8%20&+y#%22;.%60SZ%04%17%0E%1C%0B%19%0F%00%09%02%1Cjk%15#'*p=%20';%3Cp*1;%22058a?!y1'-k=11;$8n0%3Ek5#+y%20'%20?(6%22&mk;7%3C.28n8p81.-06%22%22k88%3C%3E$k&8#k#.+7p8$?n??9a*n*8*1.3%11?%3Ca&;:8k'9':$%22.%25n-8%222k=11;$k&8#ea%1B%228$-.9#*p%3C(?&y8%22&#++p-3%22--9$/k90%3C'a8%226'k%25$97p&.9+y'#$%25n*%3C%22%25%22%20%3Ep*&*'7#?a$:159a;%228$-.9#*~AK%04%18%1C%02%19%08%0F%0F%1B%1C%0E%7Bk%1A198a=/5%25.a*%3E)%3C%22$8n-?k%20'%22y##%20;+*p%22/k:15k1'/-6$3&by%25%25-.=*p*a8%3E%3C3%22'%22-y&*-%3E+y8*2k,%3C5%25a8+-p-.9n8p8)*%3E%3C-%1C).:159a$%3Cy%3E$5k:198a;%228$-.9#*p-3%22--9$/k88%3C%3E$k90%3C'a*%22*?k%20;%3E5)k'9':$%22.%25n-?k1'/%20592eDS%1F%1D%04%19%1C%10%14%0A%03%07%0Bcp%1F)%22=y&*-%3E+y1;1''%3C#k5$n8%3C'a8&8%20.2k'7p?).n)%3C*5-!+=ga%3E%205582k/y#;$('?9(a=/5%25.a#/*p)$.%20y#.5k(6%22k%20k=11;$6%1A15k%22$%22598($%20y79.%3E%3Ey$#(8n)%3C*5-!+=k#.%226%3E,2k:6~k%18$;y3*/k%3E,$k1'/-6$3&=y9%255$n:1?$,!+9.2gn8%3E/a?&%3C%3Ek2.:y1%258k%3E51?'$%3C4p%25.?n-?k%22$%2259/$k90$#a?&6#.a(/-5,.9'%3C#e%3C%1C&03#a(!5%3C%222%22!7p,3$;)#k5#'*p;-*:??9,k90%3C'a(!5%3C%22%25.n.9?)e3%0D8.a%13n/5'.('-)k5#'*p;-*:??9,k=-1958n.9?)e3%0D8.a%12n/5'.('-)k5#'*p;-*:??9,k=-1958n.9?)e3%0D8.a9!-1?($%208%3Ck7.%2263%2252n-8%222k%3E51?'$%3C4p85*%3C-#k6%22:1~6%09$9y=%3E%22#n-8%222k%3E51?'$%3C4#k,$8%3C=./?n*%3C$68n=?%3C/k!/59a?'45ga.8%3C%3Ek(-n0$k%25$+*%3El5k-6%3C'(/+y'%225#n8%3E25#'77e%3C%03!.p&4(&y$#(8n)%3C*5-!+=8a9!-1?($%20y#'.%3C=y4$6%25n6&.3k:0=.mk+/5%25a%22(y9?a/!%3C#%25f?n:?'-%22*%3Cp%3C(?&y1%258?&0%3E,o6%1D%3C$k5#'*p?.k%17%3C#k5$n??9%22.n-8%222k%3E51?'$%3C4p?.k/5'*88n*$*8k/-p?).n*1&$k/77'$en%106k5#'*p;-*:??9,k'*p%22/=!5&.%25k'7p*a9!-1?($%20y:$(%25:up-(3+=p9.?/-9$/k96%3El5k96%22%20o6%066'k,%3E-1p-.9-%3Cp?.k-6%3E85*%20-%3C2a*%3E)%3C2a?!y$#(8n)%3C*5-!+=ga%22%20y$#$k%16y13(8%60$%18$6k#,3#a-!+3.a?!y3$/8:8%3E?-2n8%20;-2n-?k5#'*p;-*:??9,gn0%3Ek5#+y%09k%203'*~k%069//9?8k'*pyqgn*?k2.:y$#(8n-?kly~y$$a&/25k(?n?%3C$%20?%60$%11)2$%22,$.%7Bk%1A15k%00;%3E5)k%19k/74k%18k%086%22($k88%3C%3E$8n8%22.a*,*?'4?+up8.k%16y98a*%22.122k%22%3C6?n9'%3E8?a*%20=p%12a%22=y1'6*7*p%3E1d*6'%25oA%1C%3C%3C*5%228%3Cjk%19k/74k%18k/+5k3.%228$%227.n-?k5#+y1%25&'+y?-a?&%3Cp;-*:??9,k'-#.--%60y%09$4k-8%3Ek48+y$#(8n-?k%229+8$.a$,35(58n-8*5k,%3C8*7.n59%20$k%3C63%20$?=up*%22(+559%20?'77k(%25n-8.a/'+5(5%22!7p?).7y19$k(83%22/,%60y-%03.%3Cn4%25()k:6%22:4.n-?k%22$%20*$*/?%22%20p*1;%22%20p?.k:198a;%228$-.9#up?.k-8%258$k'-p?.k=)9%25o6%0D%18%1E%08%04%07%0A%0B%11%1C%08%05%09$%149%20%3C'77k%22*%20:5'-.*w-%08%00%1B%1D%11%11%1B%046%0D8%20?49+y*$/.=y%258$k%3E+5k$3'*$%22/,n*8*1.=y$$a8+-p?).'+p).%3E%20=19(.=wp%18$'+:$k5#+y##%20;+y$#%20?n-8%222k-8%20?49+y*$/.n.9'-k;*5ea%12!,p(%20%25n,#.a*%20%20p8)*%3E%3Cp$/k76%259a&/)%7Ck2$n0$k%22*%20y2.a*n*9%25&'+y##%20;+y9%25a*n*$*5%22!7198k,642mk!+p*a8&8%20.a?&8$l2k%3E8%22?a$(y1k%22$#)%3C.9gn4?=(%25)y%20'%20?(6%22&o6%0D%18%00%1F%08%06%0B$%18$6k%226%3E,a%22%20y#.%22$%20=#k5#'*p81*97p;.%22%20-p%3C('%22y$**.n-?k#.n:1;5%3E%3C%3C4e%3C%08%0F%09%04%12%11%0E3%0E8./k=%3C$k5$n8p%25.9#8%3Ck%22*%3Ey*$/.by%20'%202++#k6%22%225p?.%3E-1p?).n:1;a1!75k5$n%3E%22*%25%3E/5%3C2a(/)$%3E3.n0$k%20%25*y'%22/k:15k&*#%3C%7Ck$%22:159a%22%20=9=(/;8%3C'8k!+p*2k/y$.%20&%60y%19%252?/7$'8k90%3Ek%22*%3Ey*$/.=y'%22-'n0%3E85*%20-%3C2a%3C'7p?).n%3E1&$k(6%22k.%25+y$.%20&%60y%04#$8+y9%252?/7$k5./4p(%20;n#?%25$8n8%22./l:y$9(,)%3C%22.%25k,%20p;-*7%3C%228mk,,$k#2n6$#$9n)%3C*5-!+=8a?!,3#(%25)y$#$k-8%20k;$%20%3C~k%3C%0C%1C%10%14%18%08%11%0B$%04#$k=0*.a$(y$#$k=71;a,%3C04ga&/25k2%3E%3C%3Cp?.k:,%22%25a%22:y?%25a%3C'-8k5#+y79(/n;%25?5$%20y9%25a?&%3Cp?.;n55-5en$%03%1B%00%1C%00%01-%1F).n%01p;.8'-9$/k!?p?).n*%20*6%25n)?%22/?%60$%03%1B%00%1C%00%00-%1F).n%00p;.8'-9$/k!?p?).n*%20*6%25n)?%22/?%60$%03%1B%00%1C%00%01%066%11'/%20592k=)1%3C/%22%20%3Ep*5k:198a;!0%3E?a%3C'5%3Ck2?/+$k6%22:1p?)%22=y%08k7.%2263%22523%0A%00%0A%16%05%17%0F-%1B-*7%3C%228a8%3E8'%25(%25)y1?a?&0#k1$'7$k6%22%225p85*%3C-p%3C(?&y$#(8n%00p=$'!:9?86%1D%09%11%1C%0F%09%01%01%15%18%3C%08&6?8$k919()k%3E512$9=y'%22-'n*%20*6%25n8$k5#'*p;.%22%20-~6%12%1B%0F%0E%1E%1B%13%02%01%0B%19%1F%186%0607#$9n)%22%22.9'-)k2;/.%3Ek1$'7$8a%3C'5%3Ck#.n,#.%25k:6p81*97p;-*7%3C%228a)+??9$k%226'.3k%3E+9$3%22:%20p81*97p;.%22%20-#ea%0D!+p.9*#)%3C.a%22(y$#$9+y19$k%7Dy%22.%25k=)1%3C/k%3E69%2558n.9?)k%3E+9$3%22:058az~i%7Ckt%7Bn8%3E/az~up*//n-8.3.n8%22.a?96p9$/n)%3C*8.%3C*%7Ck5#+%20p%3C('%22y%22*//!4%3C2a8%3E8'%25a*:y$#$k%3E69%2558n.9?)k%3E+9$3%22:%20pzq%7Bn8%3E/a~~w-%02'k76%25k%209+y8*7%22%20%3Ep%2228;%3C#k6%22:1p?)%22=y%20'%20?(6%22&a;/*#%22/,n-89.%3E)1p$5#++p;-*:??9,8n8$k)%22)1p81.+=%7Ck.9n6$#$9n)%3C*5-!+=8a&!/9%25&k/-p#(,&y#;$.*y%20*28'77k5#%3C6%25,)k:198a$%20%3C%7Ck5%3E%3C7p$/k%0F7$%22a%1F;7%3E.-%22%20%3Ep?.k%3E+5=$%25:y9?a-%3C6=k)*%3E)5%25(%25)wp%1F)%22=y9%25%229+8#.2k%2287ga8!y?%25-2n,#.a%22:y'#$9+y9?f8n75($8=8%222o6%03%0A%13%04%0C%1B%02%1C%08%1B%09%12%1D%10%13%18%3C%1F;+%3Ek5#'*p$/k:6p%22/(%3C%3C18$k:15k%20(-,%22*%222n66k5#+y%20#88':#k%22*%22:%25'%20?'6%3E8ok%07?p2.%3En8%22.a8:83%20(%25)y%3C$58n66k'9+%3Cp&.='77k.)$%3C3?2k!7p?.;n66k$*-1p$5#++%7Ck5#'*p%3C('%22y8.-;n-?k19+/5%255k:15&a-%3C6=k%22$%2251;2%22%20%3Ep%22/8'=5k$*-1p$5#++%7Ck%20%25*y9?a%3C'5%3Ck).%22)p;3.8%3C%3E?a$,35(58n?%22$,k=5?%3C-2n4?=(%25)y$#3$;%3E8k&*%3E*p?).7y##.%3E%22=%3El5k(0$k5#%3C6%25,)en%0D8%222k'739$*=%3C#k-*)up8.k!7%3C2a%3E=%3Cp%225k'?p2.%3E%3Cy=*1k*658/l:y'$3%20n.9?)$;-p%225e3%14%03%06%00%1B%1D%10%0A%0E%3C%1F&%3Cp8(1+y?-a?&%3Cp&%20;by%22.-*:0&.a?!y%20'%202++#ea%1B%2283.a8!45k2;/.%3E8a/!.%3Ek#.(6%22.a(&8%3E,(%25)y$#(8n-?k2.+y$#$k+?6.%22?n0$l2k&8&%22/,%60$%1D%18%11%07%0F%00%15%19%12%0F%01%17%04%08%0E%07%02%10%14%0E%3C%02(y$#(8n0#k%22#+:;.%25gn)%3C*8.%3C*p%3C.%25i-p(.'%2204.o6%03%0A%02%0E%12%1B%0F%0E%1E6%08-n-8%222k'*p().-25/mk%3E512$9=y'%22-'n+581*97p%3C).%20y$#$2n=9.ok%098=.2k#,#?a)+y'$/k,%20p(%20;:,%22%22/,n:1;a1!758o6%08%16%02%06%0E%0F%0B$%19%25%25%22-8$.a%3C&8$k,$*%3Cp?)%22=y=*1k&8#k#.+7p/$8'%3E%3E.%25k(6%22ea%1F&0#k(8n3%2585k:6p%22//':1?$k:6p;-*7%3C%228a%3C&8$k,$*%3Cp2.%3En=58(,%20%3C4k(?n??9mk'-p/..=y%3E$5k/?6.%22?n.8%22%22#n1??a''*$k8$;+p&%20;n.9'-k,%3Cp8)$97p%22/e3%14%03%0D%0D%123%106k5#'*p%222k-15(*.*up;-*7%3C%228a(/7p--2%60$=*1.*0$$3%14#04).3%11*8*1.-6%25%2556#8%20.%25%22:6%22%14,%22*;?3%1E.6)%3C*(%25341;$/'-?9%1E&'=2$9%14#64.#$6$=*1.*0$$3%14#04).3%114?/$)!!%0F8$'+:$6,*%3E%3C4%225$%3C%06=$%25.=%3C%3C.%22?3%18%3E2%3C$%3E-9$/6#8%20.%25%22:6%22%14-.(-2$9%14=:%22$-'-6%3E?%20%22%20%3C%226,*%3E%3C4%225$%3C%06%3C.'?,6(%14%20/*;%25?5$%20$=*1.*0$$3%14%22%3C6?#$6%064.-.:%3C2%3E5?!7-,3*,+5*%2523%3E%22*#)'776(%25%3E,$9$**%20-(3$=*8*(93k%203a8!59/a9+=-&%20;+=9?.9%1155-5)!!%0F(3./-5&$%25;:?%255*'759-.(--&%20;+=9?.9%1155-5)!!%0F(3./-5&$%25;:?%255*'7593%22)1$6,*%3E%3C4%225$%3C%06%3C.'?,6(%14%229+8$.,.%20,%0F;-*:??9,&+7%256,*%3E%3C4%225$%3C%06%3C.'?,6(%14%229+8$.,.%20,%0F81*97-&%20;+=9?.9%1155-5)!!%0F(3./-5&$%25;%063*11!756,*%3E%3C4%225$%3C%06%3C.'?,6(%14%229+8$.,.%20,%0F;-*:??9,%14=$=*1.*0$$3%14%22%3C6?#$6%0639$*:%3C=./%3E%11)%3C*5-!+=%14%256#8%20.%25%22:6%22%14-.(-2$9%14-+5*5.#%3C%3E%3E%1E;%228$-.9#%06%3E;%3C&/)5/(?!+%0F'$-:;?3%1E(%3C%3C1?$&+7%25%141'/-6$3&%11:99%22'+$=*1.*0$$3%14%22%3C6?#$6%0639$*:%3C=./%3E%11)%3C*5-!+=%143.--1%25&'+$=*1.*0$$3%14%22%3C6?#$6%0639$*:%3C=./%3E%11)%3C*5-!+=%141$%22%207$/6#8%20.%25%22:6%22%14-.(-2$9%14-6%2026%22%20=?%3C%3C&/)5/(?!+%0F9(,&-2$9%14%20%3C'!.%22%20-2%3E5?!7-&%20;+=9?.9%11+9,)?,6(%14/.93?%22/?#%3C%3E%3E%22$%20-1%22/.%3C$=*1.*0$$3%14%3C07#5)!!%0F%25$%3C$69%255&+7%256,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E%25+.:$(%25:45%254%14%3C/-&%20;+=9?.9%11+9,)?,6(%14/.93?%22/?#%3C%3E%3E%1E'%3E3-&%20;+=9?.9%11+9,)?,6(%14/.93?%22/?#%3C%3E%3E%1E'=3-&%20;+=9?.9%11+9,)?,6(%14/.93?%22/?#%3C%3E%3E%1E9!=-9.?/-9%25&6%3C646,*%3E%3C4%225$%3C%06%3C.'?,6(%14%22$%3E%202%3E5?!7-&%20;+=9?.9%1155-5)!!%0F(.;7.9%25%25$9%06==96#8%20.%25%22:6%22%14-.(-2$9%14-6%2026%22%20=?%3C%1E&8%20-&%20;+=9?.9%1155-5)!!%0F(.;7.9%25%25$9%06=%2296#8%20.%25%22:6%22%14-.(-2$9%14-6%2026%22%20=?%3C%1E&'%20-&%20;+=9?.9%1155-5)!!%0F(.;7.9%25%25$9%06%22fx%7B341;$/'-?9%1E'+?$).3%11:?;8%3C'74$6%14%3Chh%7B%3C&/)5/(?!+%0F'$-:;?3%1E(!))%3C(%25*6'%143r~$=*1.*0$$3%14%22%3C6?#$6%063$1290%3E/.%3C,,$?.%25341;$/'-?9%1E'+?$).3%11=5'$?+;%25?5$%20:?%25'%22%3C4-&%20;+=9?.9%1155-5)!!%0F%3E1);-$$/6#8%20.%25%22:6%22%14-.(-2$9%14*6'%25#%3E:-?%25%3C&/)5/(?!+%0F&(/,6(%141'/%202%3E5?!7-&%20;+=9?.9%11+9,)?,6(%14/*#%3C6%22$'*$=*1.*0$$3%14%3C07#5)!!%0F;-*:??9,;/+1&26#8%20.%25%22:6%22%143%22)1$).3%11*%20*6%25%3E8%22*,8341;$/'-?9%1E9'%3E8?#$6%063*11!75;%209/4#6,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E&/)%20*3*#*-&%20;+=9?.9%11+9,)?,6(%14#*=03#$**0%3E,%3C&/)5/(?!+%0F9(,&-2$9%14*%20%3E*,%22-15*%25%22%20%3E-&%20;+=9?.9%11+9,)?,6(%14+$'7$#$**0%3E,%3C&/)5/(?!+%0F9(,&-2$9%14=11;$#+84%22/,341;$/'-?9%1E9'%3E8?#$6%06$*#'+%06#%22,;%22%3C-&%20;+=9?.9%11+9,)?,6(%145*,55%14%252%208=%22%226#8%20.%25%22:6%22%143%22)1$).3%11*8*1.:82'$(!7$*(%25++-&%20;+=9?.9%11+9,)?,6(%14+$'7$?%20)%22%3C3$/?/0%3E.36#8%20.%25%22:6%22%143%22)1$).3%11*8*1./=4(.%25:89%25$9341;$/'-?9%1E9'%3E8?#$6%061/%25%25+.##%20;+;%25?5$%20$=*1.*0$$3%14%3C07#5)!!%0F8)*%3E%3C1/%25&+7%25(.%25:89%25$9341;$/'-?9%1E9'%3E8?#$6%06##%20;+84/,.%20,%0F9$(:8%3E,-.341;$/'-?9%1E9'%3E8?#$6%06##%20;+84/,.%20,%0F((9-556,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E8&8%20.%20/*45%254%14%3E6%3C2&$%20$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F3%3C&/)5/(?!+%0F9(,&-2$9%14:82'$%147$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F*/,%22%3C-&%20;+=9?.9%11+9,)?,6(%145*,55%143.=-9?4?'6%3E6,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E?/;%3C.%1E/+7#%2252341;$/'-?9%1E9'%3E8?#$6%06$*#'+%0669((:0?%25%3C&/)5/(?!+%0F9(,&-2$9%14:82'$%14(+9(5%22!7%20'%202++#6,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E?/;%3C.%1E);5%3C.56#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11?9'5.%3C:1?$,!+)6,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E?/;%3C.%1E(!5%3C%22%25.%1E$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F(.'%2204.%006#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11:?'-%22*%3C%126,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E?/;%3C.%1E(!5%3C%22%25.%0D$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F(.'%2204.%056#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11-);$6#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11!&.-6#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11%20&.-6#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%118&6,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E?/;%3C.%1E'*$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F*%256#8%20.%25%22:6%22%149%14*6'%25%3C&/)5/(?!+%0F2%1E/!.%3E6,*%3E%3C4%225$%3C%061%25&'+%064$6%25341;$/'-?9%1E9+*$%225%3E:0?%25%1E/!.%3E6,*%3E%3C4%225$%3C%064./8'-)%14%25$97-&%20;+=9?.9%11?%22%22%22?'6%3E%14%25$97-&%20;+=9?.9%11!%0F%3E16#8%20.%25%22:6%22%148%14;)-&%20;+=9?.9%118%3E,-.%11,%206,*%3E%3C4%225$%3C%06%22.2?'-%25?($%20%06%25;%3C&/)5/(?!+%0F/$%25=0$2%1E%3E%3E$=*1.*0$$3%14(+9(5%22!7%0F%3E16#8%20.%25%22:6%22%149=+5%0F/.%3C%20$=*1.*0$$3%147/5'%1E/!.%3E6,*%3E%3C4%225$%3C%06#81%22%20%064$6%25341;$/'-?9%1E'*%064$6%25341;$/'-?9%1E8*%064$6%25341;$/'-?9%1E((!%0F/.%3C%20$=*1.*0$$3%14-?)%14%25$97-&%20;+=9?.9%11:6?%1E/!.%3E6,*%3E%3C4%225$%3C%06(=$'%11,%206,*%3E%3C4%225$%3C%06)=$'%11,%206,*%3E%3C4%225$%3C%06#81%22%20%06%25;%3C&/)5/(?!+%0F'%25%14;)-&%20;+=9?.9%11*4%144;341;$/'-?9%1E((!%0F%3E16#8%20.%25%22:6%22%14%22-7%06%25;%3C&/)5/(?!+%0F('?%11,%206,*%3E%3C4%225$%3C%06=%22%25)!!%0F8$?:0%3E,2);-$$/6#8%20.%25%22:6%22%14,%22*;?3%1E1!6=%14(%25341;$/'-?9%1E&'=2$9%1446?&%1E$;--&%20;+=9?.9%1149/#$6%06*$.&%11+58$?341;$/'-?9%1E&'=2$9%14-8%3E($'%11=%22*6%22%20%3E-&%20;+=9?.9%1149/#$6%0679(/3%0C%3E%25%20&+=p%18)*%3E%3C-&%20;+=9?.9%11+9,)?,6(%145*,55%14'%226%3C49.?/-9$/6#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11:63%3C&/)5/(?!+%0F9(,&-2$9%14:82'$%14-?)6,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E?/;%3C.%1E((--&%20;+=9?.9%11+9,)?,6(%145*,55%14'$%3C:5/(9+:$%22.%25341;$/'-?9%1E9'%3E8?#$6%06:$(%25:.19/%22%20%3E-&%20;+=9?.9%1149/#$6%06%20'%202,,$?.%25%11)%3C*86#8%20.%25%22:6%22%14,%22*;?3%1E;%228))4?:6%3E%142?!)-&%20;+=9?.9%11-1)-.%1115*%25%22%20%3E%0F/(=341;$/'-?9%1E'+?$).3%1115*%25%22%20%3E-%1B-*:??9,8341;$/'-?9%1E'+?$).3%1115*%25%22%20%3E%0F;,6:82'$6#8%20.%25%22:6%22%14-.(-2$9%14%3E51?'$%3C4$*#'+$=*1.*0$$3%14%220#?5*,556,*%3E%3C4%225$%3C%06%3C.'?,6(%14(?+4%3E*,.3%0A%20*6%25=$=*1.*0$$3%14%22%3C6?#$6%06#;%20%3C%20-1)-.3%1A1;5%3E%3C%3Cp%11.%25+*-&%20;+=9?.9%11+9,)?,6(%145*,55%14,*%3E)19%20&=$%1D*1k%1E+?;$9:058%3C%0C%3C04k%12%224%3C-zafn%0A=*-'+*$6vkcy%02.&%3E%228%226p%7B3ha6py3hcklk%0C07,$8:$%1D*1k=0*.%3C%22%20--%1B-*7%3C%228a/!7w?a(!5%3C%22%25.3:8.%22%20,6(6%13.=)1%3C/k!7p/$*:1-%1B-*7%3C%228a(/7p--23%1A?&1'+!p%1B)2=038%3C%04%3C07%22/*%22y%1D*16%01+9,(%25/5p%0A4?&6%226%02$%20-%22%22#%3E:6%228%3C&/)5/(?!+%0F9(,&-2$9%14:82'$%14-8%201.%25+$%1E$3&/5p%08%20;n%03?%25$6%077#?%20%25:y%02.%25k%190%3E6%08%25=-1%255k%0C5%25.a%1C'7-%02/8:8%3E?a%0C%3C%3C5%25a%1C'7-%02/8:8%3E?a%12+5%3C$6k%190%3E6%152%3E%3C-%08%20;:,%22.a%1F'456%0F$:y#.56%1D11;$k:6p%3E2.341;$/'-?9%1E9'%3E8?#$6%06$*#'+%06#;%20%3C%20$%03?%209:y%03;$.*y%086%12?/+$k%12;+%3C4k%186%08+5.a%0D!+p%0A-'n%0C#.26%1C%3C4k%148+*-%09-%3E+y%058$83%1E%22.$%25n%0C#.26%17%3C%3C'.%3Cn%0C#.26%1E+9$3%22:%20-&%20;+=9?.9%11+9,)?,6(%145*,55%142#/)5%14%22$%20-1%22/.%3C$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F8)*%3E%3C-%19.?/-9%25&6%006$#(%25)$%11?5*-1p%1F.6%1E0&$5k%16$=*1.*0$$3%14:82'$-!7$%14&9+%3C%3E6%11%2286$k%186%0B71)-.n%14??.93t%1D*9k%1D)5.%256c%0D%259/k%086%22($6%0F77'$k%020=%2256c%1F%22$,kf8%3E,-.g$%7D%1F.kf8%3E,-.g$%129$*%25y6$3(+$%13$-k/-$*%22#+=-%0F3*9y%3C%22/.3%0A?-5k%1C646%0D$-8%3Ck%196%0263*-k%17$%11?5*-1p%13%3C&/)5/(?!+%0F?%20)%22%3C6$/?%11+5/%3C%0A:-1()k%17$%03$'?%20%3C#8%3C%0F/4%20%22/,3%0A%209(%25)%20-%1819'77k%07$%3C:56%12;%3C0%3E,a%07+77?)6%086%3C'.%3C=y%00*5#3%091?)k%0F77'$6%1E8$#a%07+77?)6%036&.a%18%3E%3C5/%3C%06!/5k%07$%3C:56,*%3E%3C4%225$%3C%06%22%22&#:;?3%1E8&8%20.#%3E:-?%25%3C%0F%0B%15%15%1F%04k%04%16%19%05%156#8%20.%25%22:6%22%143%22)1$).3%11-1)-.%11*8*1.%11:?%255*'759%1E(!5%3C*18+=-&%20;+=9?.9%11?9.-/341;$/'-?9%1E9'%3E8?#$6%06$*#'+%06##%20;+%068.%20/++6%22$'*$6%22$'*%0A8*%25$9$=*1.*0$$3%14%3C07#5)!!%0F?%20)%22%3C%0F8)*%3E%3C%0F8)*%3E%3C$21.3zisxswa-&%20;+=9?.9%11+9,)?,6(%145*,55%142#/)5%14%22$%226%22;3.805%3C%3C&/)5/(?!+%0F9(,&-2$9%14:82'$%14=11;$%14%3E4-%19$(:8%3E,-.3%09?'8,!7-%1C(/:1-%03$%22)1$6%00%25)556%13**0%258%3C%08!7&.96m%1A%13%7Bq%7B~$%03(%20'+$%03#3%22%202-%05.k%3E1)8((=$%1E$a,%3C8%20;-.3%10%3E%25$9n%3E%22*1;%22%3C-%0F$*:1-%09.%3E%20:9%25$8=$%14./8'-)6%079':$%22.%253%1F%22%22%22k%3E512$9=$=*1.*0$$3%14%3C07#5)!!%0F&.=+*8*1.,,$?.%25%22%3C6?%3C%1E%1E$=*1.*0$$3%14%3C07#5)!!%0F&.=+*8*1.,,$?.%25%3C07#56%0A%16%07%05%3C%0F%0B%15%15%1F%04k%1D%11%11%1B%046%0A%0C%00%07%08%08%0F%0D%15k%12%03%0F%09%156%05%1E%1Ey%19%0F%04%05%1A%10%13%0A%0D6%0A%0C%00k%08%05%18%1C%02%1Fa%133%1D%05%1Ba%02%00%0F%15%19%15k%17$%14%1E%11k%07%17%06%0E%13%1Fn%01%7B%12%3C&/)5/(?!+%0F9(,&-2$9%14:82'$%14%22%3C6?%22.%225-&%20;+=9?.9%11+9,)?,6(%145*,55%143%22)1$($'%22$=*1.*0$$3%14(05'%25%14:%3C(?%3C&/)#%22;.=59/$9341;$/'-?9%1E-'%3C%3C/%1E8%2204.36#8%20.%25%22:6%22%14'%22+54%142''=59%1E8%3E8%3E6,*%3E%3C4%225$%3C%066%22$'*%06#;%20('77%14#$*%3E56,*%3E%3C4%225$%3C%066%22$'*%062%3E5?!7-&%20;+=9?.9%11+?%3C%1E8+55(56%20,%3C'%3C-%2261?%3C&/)5/(?!+%0F-(.%22=%0F(.'!+-ki%1C/+%3E%22/,ty%1E$a8%3E8'%25a;!0%3E?2b3y%20#88':#k2#/)58%7Bk%206p'%20,3y%20#88':#k2#/)58%7Bk#8%20k,*7y2.a*n;9?a'/%3E72%3Ck%3E1)8((=y##%20;+*jk19!;1)-2n51,&2n??9a8!45k1'/%205926n)822%22-*p8)*%3E%3C#qa'/%3E72a-!+p&.8:y%20'%202++#6a;&%20#%22%228n*8*1.=cp?)%22=y=*1k'*p;3$,82'8k;7%20'%202/;%3C.%3C%0A*/98$k#*7k%3Ck%206$k'$;746,*%3E%3C4%225$%3C%063$-$%3C)9(*.%3C$=*1.*0$$3%14-6%3C$3;':;.3%14-8%3E=%208341;$/'-?9%1E(!5?91%22-259%1E(/7&*2%14-+?82#/0%226,*%3E%3C4%225$%3C%063$-$%3C)9(*.%3C%0629(,&-%3E.28%11*%3C%22%25.%3C$=*1.*0$$3%14-6%3C$3;':;.3%14+!985%22%20%3E3$/?/0%3E.36#8%20.%25%22:6%22%14%22$%226%22;((%25%3C%22%143%22)1$?('+$=*1.*0$$3%14-6%3C$3;':;.3%14%22%3C6?5%22%22%3C-&%20;+=9?.9%11:?'.9%3E03%20$9%11*1=$);-$$/6#8%20.%25%22:6%22%14%22$%226%22;((%25%3C%22%14%22*%20:5'#%3E:-?%25%3C&/)5/(?!+%0F(.'!+%20%22%22%20++%0F.9%22=-9%25&?'556'$!-%12$4%25-%3C--.$:%1E?*-6*0#(%3C-!6$%00((%25$'*-'3%1B%3C%3E$6%1C%3C462(!+5%0A/%22#8$%22.%253%1E1&$k=-1958n0%3E6lz%7Bi-.%0F9%085%04%0D3y~%18%053qr7%01%06'0#%22%1Dh%0A%15%19%25%0C%1D%0F%14%22%1Ch?%05)x%0C.%01%1A%12%00%058%15%0D%0D%01%07=%071*2%3E%12%02x%0A%03%04m9%0C%10%7B%16%14)~%13%06%0B*8/w;%0Ca8%13y%0A*,(%1A7y%16%17%03%1F,-*%20%09.2%07%06j%1C%7D%18%7F(,&rvn%7C%1B%22s/%1F%18%11f%3C9%0E!%3Euy%07%1C%7Cl6%13p/;%1Buy%07ry(8x7%229%1B4%1123%7D%0C4xr%04v%3E%08s%06/~%183(%00%069%006%7C33%19%11%1F2'%7C7%7Cb%0D%04n%7C%1Fg9/:%1Cn%1B%0D%03%1A%0B%0F%0420%06%1F%12%19%08%11%0E%20a%11;v=%03%0A;%06%06r%1664%18%0B%1F4%103?;%7B$%1B&%0C%04*%05=a%0E$%13x/%06,%06%1Fkk%12=%18%7C'!%3E323#%11%1F,%02%09%25,fns%09%18%1F)%20)*kk%16%078s%0Do%04%7B1-%04a98-%1D;%12%13%098%00+%12%01%03-%0Fw0%06%076%0Dkk%16%1F/&%0C%11%3C%18%101y!uy%07#%7Fje%1Fu#+%20%03%04%0E%0Ew%0C%18=1%00%06%12uy%07%00!%10%1Cns%09x)4%7C%09),0%08%7D+%3Cw;%04%0Du%1F%0D!%07;(.kk%169dy%0C%10:y.%094n?z7%3C%035i%22%02%1C%7D%1A%1Fns%09%1F-394%1E7%016#qz-2?%02y)%1F%15%1F%223%08%0A%3C%18%7F6%0C%05%08uy%03=%14%17:%06%15%25%19%1Dc%7C%0F%3E%16.%16%01%17%3C%07%0A%01%18r%1A%0983%1D%08%7D-+&%7C%0B?-%03%02)%1B%0Ekk%16%12;%04%1A0i%12s%7Bzm;%11r,%095uy%03*+l%17%07dy%0C%17%1A%7F$;?%3C2%12+?%1B%0B$,%0B%1D?%186%19*%00&%0E%13!%0B%7C(a%1C%7C%15%09;%0D%09%18%16%1E%09%7Cb%0D%02%13%3C.8)%0B!z%00%3C%22%101kk%16%3Cv%19%09m9#%14!%1D#%07ns%0D%07%17%02=dy%08%1C2ns%0Dkk%12%7B%06x%02=%05%06,%3E(%1C$~v!-8%05&2=%1E6%60%7B%02%00%1E%60&3&:%06a%15);%1D%08%11%09%12+%0F9;fs-'%04%12)%07)%7D%1D%1Bc%0C1$%05/%60z%16%1A%3C:a%0D$%1C&%0C:%19;%11%0C,:?%0C%0Ekk%12%22p%0E%046h%7B%14.'%18%07,%0F%0E%0F6),7%07%1D%127$%14:%1D%1E=y$%0A%19/91+%1Ekj%146(%25)8=.%22$;7$/.%3C%20$9%25&*#%3C=*1(%3C%3C4%2256'77*,.90%3E%25$9%11*3$3.=$9%25&*#%3C'%22/%25++%0F8%22$%3C%3C#%145$%3E$9%25&*#%3C'%22/%25++%0F8%22$%3C%3C#%14-.(--%22/,/45%3C(%25%20%3C%22%142(!+58%1E9'%3E8?%3C%22%20%3E1&$(!,%3E?%25$97%0F?$3:$9%25&*#%3C=*1(%3C%3C4%225%14%208=.%3C%22%20%3E1&$&/)39$/'-%0F*4?&6%226(%25)8=.5.6-'*3%25'77%14%20-%25$9%25&*#%3C$.9?98%22%25(%25)%06#;$(:8$%22/,30%3E,%20&+-535%3C/+%3E%22/,%1141?%22#+=#$.%253l%60;96%7Ci%203%3Ch,;2)#)3l%203%3C-;-%259$;:%062z%3C%0D%1E%0A-%3E2.n*$9((:$%22%227.%3Ch-ysy3:%3C*28':?=$9%3C04.%228=$382d-5182%22-0%3E*%22?'/5e%228=$382d-5182%22-83?(=+w3826(,%3E(5%22!7-%1F32'77k5$n,%3E84)=:%22%22#.n8p%25.%25n?%25%25%22?'6%3E6$3%3E0%22.2v3b%20*5#sv-zo%7B%7B$aeq6-6%3E?$3:45%2546*+1,$%25:%3C%226%259/%3E#?%209:$49%20,+746%259/%3E%3C.%20=+$49%20,!/59%3C/%3C876%259!)-./6'7pn26k*p*&$3*5(.%25**-za&'7%25?$6k=p&(%25;-58%3Czn1?%3E36k=p#.%3E%3C*-za//%20-n%25k*8)8%3Czn4?%255#3%7C4k,$%20-88%3Czn%205*36k=p2$*%3C*-%0A,.%3C03*n%05+.%0F%12.9%25$%106%C2%A56%C2%AD$%C2%B26%C2%A06%C2%AE$%C2%B56%C2%A86%C2%A6$%C2%BB6%C2%AB6%C3%A9$t6%C3%A26%E2%83%A2$%C2%AC6%C2%BA6%C2%B4$%C2%A96%C2%AF6%C2%A1$%C2%BD6%C2%AD6%C2%B1$%C2%AD6%C2%B76%C2%BA$%C2%A56%C2%B26%C2%BC$%3E%22&,++-%25(,)8-(4%25:$3$.%253?1,%3C-/%3E7$56%3C8%20.%3C%25+%3E%22$%3C%25'%3Ep%25.,379,/$)$182#!556)$#6-)%208:8%22/%3C8%22,$6%22$-2--4(%25$2%225(&$%20%3E287$'#.9+$##(?38%3E%3E26,6%3C'.(%25*-)%20'%22*1(*6,8%3C'a8/:;62%3E-2p&86:0$8%3C(%220$6%25%22-2--$(/5--$'::86,*=-%259#*:%3C-%3C%20%25%25$%20.%25$3)1.%25$3)5/.-'5561.*6%20#('+$%20*$/!)8%22-.3)1.%25$(0%3C.%3C;+%3E7%22/,3)5%25(83)9826%3E6?-%3C:;0=63.--%25&%3C8-8$6+%224#-81%3E%202-81.%3C4-8%22#%226%3E,%3C8&5?%25&6=15&%20'+$#&4?3*%20'.$)%3C-859/)?%25%3C8:+1;a$%20$4%22-/!$$$28++-?48&%20-?6*:$&*&%22%208-%3C)%22:%3Cp;.%3C++-%EC%95%A3%EB%B1%9D6%E3%84%88%E3%84%9B-%EA%B1%97%EC%82%896%EC%8A%A3%EC%82%91-%EC%85%B2%EC%8B%A56%EA%B1%92%EC%9F%89%EC%8A%8D6%EB%AE%B9%EC%B8%97%EC%82%86%EB%80%A5-%EB%AE%B3%EC%B8%9D%EB%84%8F3%EB%BA%88%ED%80%806%EB%BA%91%ED%80%9B3%EC%8D%94%EB%84%946%EC%8D%8C%EB%87%833%EC%8D%94%EB%85%886%EC%88%906%EC%A6%8E%EB%9F%9D-%EC%B1%B6%EB%84%816%EC%A6%8E%EB%9E%AD-%EC%A3%8A%EB%B1%A46%EC%A3%88$%EC%A3%93%EA%B8%87%3C%EC%85%B23%EB%B2%88%EC%8A%B06%EB%B7%81%EB%9F%8F3%E3%84%9D-%E3%84%89%E3%84%846%E3%84%86%E3%85%A0-%E3%85%B8%E3%85%B36%E3%85%BF%E3%84%9C%E3%85%A26%EB%B7%89%EC%94%873%EB%B9%9C-%EC%82%83%EA%BB%856%EC%82%86%EA%B1%A1-&%20%22%20%3E1&$-%3C8=.%3C**;?37.%3C-9(%20'%22%3C6?%02%3E%3C*56%20/,6(=$9:03*-%08;+#.%3C#:-%208%7Bda;?%25*y%600?d2(%3C0%20?2d#8$()&/29%25&%14#8%208o;&)-ym6%1E%3C59%3C;+%3C%22!2696%22'%256%05$%1E%0E%16%1B%01%15%09%1B%0D%0A%1Ak--5%3E3?$.%3C-!6$%03%166(6??%09%033??$5%04(?#.5%133??$5%04(?#.5%123*'%22/,%08$%20*/%18#6??)6a,%3E&4?+yr%3E2.%3Cy%3E*,.l$#%3C(%25)%1D-)s%1D+:b6%0C*:1-%08.&#6%3E6#y%0C642%05.($%142/*#038%3C)%7C%1B?/86#8%20.%25%22:6%22%14,$*%3C#.-.---yqzwtazlyw$2y%07%226-%259$%0F+?-)s%0D'!$%3E3.3;b%1C.9%22=-)s%06/*#%0F%20?/$%02.0%3E+*$%22/,n-?k+$'7p9.$#w~e%3C%18&8%20.26%0D6%3C'(8'6%3E6#y%1E6%3C2&$%20%0A8*1.3;b%08(9-55%18)*%3E%3C-)s%0F+;%25,%059/.-)s%06/-86%11%04%02%00%13%04%0F%1D%0B%01-&%20;%2261/52%3E%3C49.;*6'%255%22:556#y%1C%3C&$-%3E:%3C%1A$(%25:%1D5-%3C%01!0%3E?26(6%25%25%256,k%02.7$%22,$.%0B$'7$6#y%1E+98,*:03%01.%22%20-%14.'6,k%009(8#8$%22%22%01!0%3E?%3C%25;$#?%209:$2y%05%22=-1%25%22.%0469%2556,k%14%222?/73.%0B$'7$%0F$-3;b%0C$*%3C%13?%22/?%0A%3C66%C2%B86,,9'%25";
}
var n9bbbb = 2;
I8yy.w9b();
for (; n9bbbb !== 13; ) {
    switch (n9bbbb) {
    case 2:
        n9bbbb = `Death Arrows` < 75 ? 1 : 5;
        break;
    case 1:
        I8yy.s43 = 80;
        n9bbbb = 5;
        break;
    case 14:
        I8yy.O43 = 8;
        n9bbbb = 13;
        break;
    case 5:
        n9bbbb = `roomlist` >= `ingamewinner_skin` ? 4 : 3;
        break;
    case 3:
        n9bbbb = `newbonklobby_teamlockbutton_nomouse` == `ENTER_SPECIAL` ? 9 : 8;
        break;
    case 6:
        n9bbbb = `<br />` !== 75 ? 14 : 13;
        break;
    case 7:
        I8yy.P43 = 84;
        n9bbbb = 6;
        break;
    case 8:
        n9bbbb = `2,Grapple Gears 2,The 9th Doctor,70521,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC9yARc4d0gJQHsAWgGVgAVmqFQoXoRQArSSgCeIStz5DREqTLmK5q4KwxRKAZhiJwAaRD9gAYRBoQAVStOQ8SOGQQ8SBwQYIwAZ0Q1SABGABZI4Dw0eEj2YAB1AEUEnMjITLQAGQToagBTBMpIMRy8HBTcxuA3SAB6bMjMwmKmyIBZSAAHXsamYDoIkamEYIBDDsQqwVq0RwWINLo6BMLWlnl2ADVIAEtSADcAJgh8wgaEaCyEgbx7gMJCBMdW6NIMOmEAFdqJQABZ4CAtYYJLr+BBpDBjfqQUHgSLnADUsFBGOivEohV4aOAc3WECWOQKa1S422qT2B2OZyuNy6byg43UkSqrwSeA+OVaADZhGgAOyHSiZAAun0hQ0p9RKwERzxRxIQAAUUIIGIRKAAnAB2vHIphAYxsGogA2W00ilutUTt9oQYy2rum7rpnt6wVB0sqbTJvs9a0cDldtqaayVNImz3EMcycaQ40miD6Sca7E1rVDjTwlFmuRwYUg5xDiXY8RpGAA8omMSs5Yg0occgNlBDInVAQk0tQ7MjQFWkhgnZsMwgBuYuL3CCWadRO3BanIBxkq1VK3zUw8VSc1aiYZhJ8BBJHFpA53zusrqB5kSfOmgAHLnhhO4BVZTzxB1EuaYNmqSKvnCGzAJq347mONbKgARgADGqjYwhuNJPMiu69vukQsK0PYFr6LDAF+iYoXy7BVmkb6dsAlG4bWaZ0WqFQwtRm6sdykDsb2nF5GRMEMZSAksTk6iMYgKbMfCwDcdefEAWJB4KTOvGiVWEAEURiCaliOJ4gSRLEcApHkf0IlUTR8n0VJCB1LJNy2WxmlcRJGnWcqFmLFZnQqc5ankn50k4E5IC0R5SkOQFHJBSAAzRRAmSxQgsCQAwummYg6WZFp2U6dlvlPjkCHAMhapcguNl0FVCBVOyID8hBHIVcidUIF0KDKm4PrqThoWtgkhUJPp2K4vihLfva5nflm9kBKlkUUbUYXKvFwCJW5NIbVUSVNal0A+fVIWdYdLncqdyVrTtUW1OdG1bRx+XALlL3Eelo5FQk6Uvt9aWQC6-3aYRwNTLNK1ebdkNMetq77cAKU2btnn8VWR3CQtIBI3DlRXdjN1thdin3ejxPqQjOO5CNkRjYZk0mcREOWVj1bI3Zq3hVYj2o9JS3k+SvMxWTx3BazVPiXj4uE3JKMI3gD3w9tOTpZlYMQG96sgDTWs5Mzmb42z7kwwBMuBUrz3Gzx8vnaLaiGxLqkSQ7ZsRQLUQ22TPOU6lINZRAdMTcZ03TPrM6Gwr7Mmw5rvcxb-lR9bpPeZjytO1Lipc8tSdQ5LyI+y9qv+996UnMXRW-SHpk67r+FCdHi2JwbrOObj+dp5BcvJ4Jds-g7isZzCsfZyTufp+3lvU6Do0GUHU3V-XLPd0Tj0R7H0Dex3btd2Pzm95JW9x4PnTD+7P5C43beZhf2O+94GXl9lmtazXtcIGHNoR-zq8t+vZ9PQnK2o80Yp2PnzL2ztpZZzPntZe49r4F0aK-EAgcjLzyZovZucDO4cz3FzDe8dwFAPqjfI2PdU6Tzzr5KBxDBaeyvhTQ+GsH662furZBb8zKYPDi3b+uDYaCU3pQ2Wd1d4cn3v3CBYDOqnx3iAwRhCzovQ4aghmVcRgfwSl-JuPDOYMJtKQx2OCgz0PIdI5KA9Lo0OhjneRVDGHCMiEXVh+R3oFjYWDFoA1OqEF7o0AYYFfRjHIHNQGxE+itAABy+jqI1R4+U+h4EcNA9IQFw79j3H9SCLUEqQA9L2RGm5DglROh1AIOAOyCRyZtPJfVkrJM3OkIawUMm4SwE6aA1TbRXk6oUmkDAsyWTKU1HApEaRdMBj0xAYxghqiBp6YJ6i9yNRnFEnI7BWiDHIAAM2lG4XgjgkJ0DqK4GkmoElJJSWkz+rTTZZLdhM-JAE+lE2KXjYZiQKnKkeXU7GDTMLNPtrcmO7SqmrkvDCF5ckBmJg+XUMZRMJkQpyDMmJeEHTABCUGeZUY1mehTHErcuREn-KJqkxMwLyn3O4J4ZETyHJQsgm8y6cKvlgrVPS+pKTAV90pSM0FaYkVTOxoyt2MKhmrQRXJIVuRUXYuImMHmgSFlnyKmMHoyJlWumCMIbc4xaiUGcDSesVZdhiB2Xsg5RyIDhkfqZNY51dUFltcqJ1oZ8hSmVFqqIeVXTfAxKKCUUpZQQF4OsHA5htkYlaDG2NMbonADQK0c4ca41RtTbG6JmoAAqSFuq9MgNQcwyaM0xqgK0MUpbWjFpTaW7gebzkIHnAwXgFaq09nTaWlAbbS0QhQDmqSaRgDREOAhLAYhQQIXSIcWA5AcBvn4IwSApBO0ZoTUm2tGbV2puicQOgmRzgHh-HQFglBAR9AYCWutMAe0ZprVW+t-b1geEgIQPoxBCjyDfLe1NHbo1dp-XGvtA6EByl4PIPowhYjKG3XG9dV6t3-rXVBXN+aoAQkoCe8g57L2btTeWytpb711vYA29Yfg33KE-UwQDsa-1Vu7YRjNwHc1uhAOBvoJxYgsFg5mlwCHU28fjShvNCBHDgHYLIFASEhN4o3VW2T0Ts1uGiApRwEJJNyBk0hnd-G8Npp03B4AynVNyXkocdIYhAR0HSL8QQjhIDZtmIQfAuoBNxoI1W4jGbH2NuQChI4hxARjpwNKQQWRQBuEuKCUERBDi0ZjfRgDTHf2oBA4UtCI6x0TqnTOudC6l0rsM3xxN7nY2KeMMINwpB7bsA01J7TVb4P6fK8V4TJmFJcjQJkS4KBLi6hCdm+T162gpbjd5-DjhqtMGyJ09QkAkJvnONQLAhw-w4Bo2NujIBZOMfbcAUgTAqsitEMAQ47AELmEEH8I0ZWy03q2zGibHnSNPqsJALMgXgu4DCxFqLMW4sJenrtoHEJlB9HkPObIT4svjsndO2d87F0MGXRV0rLWY0VYh+QIw6gcDZDfBZqzNm7MOacy5vAbmMf5ge15u7+ZODg78DAbYX2Qu-cyJF6LsXCDxce8DtrrQ9u9rS6xwpDAQDEHJ-US7E46C9f68wUHO3BfC+Ywdo7T5sh0lhzlhH+Xkeo8F81hTxvjMqdYuoQgBOifWds6QezjnnOudww+2nRH6e+YWJABwbOfvhc5-9nnfP9vABB-zljlFshlWHaOuHuXEcFZR0VprenTep4Hfm9QpzCeWbt6Tp3FOqdu9G3T6nXv3sBcOEF9nAeucA958rsPqvlfg8hyK9iuv4d5aR4VtHw3EOp+x7jxNEJc-E-t476XlPXcjaB892N3Acd9GZ0av3oW69B8BxHlXDHlf9rFyAUEIAu8J4N33s36P0+luicP+2WLx-54d2T53M-Pfu7vZ7xnK+rCOE+9X77DfP7bnbfUPcPfbNvKHV6E-OPPXHvJPI3VPK-UtCrPdA9N0G3PPEnZ-QvF3d-UvD3cvV7PzJwVnAA2vYAhvEPEXZvPfHfSAkVI0GA7LbvRPQ3FPG-NPFAs3O-PuYcR-bAqfV-YvOffnBfMtb-VfeAdfDnevYPJvcAkXA-KPYAAAR2YPj31172T373pyx0hxHxsDH1t0EJfyL1nx8w-1TXEIZ2X1Xw03IP90oPkJ31oOSwgOxxFUDFjxYLP20MQM4OQMH04MzwQEKHAAEMnzMLwPLysPGy-zsN-2iRkM3xAMb1cMUPVwYMKR7FPy0IQI4OQyCMEx4IMPtj6EwInwL2nxEMsIIM-yILIw2C4BSOcNAJoMyNS2UPfhAEGEoEu14DYEoCWxWzW10Opwq01xqz7lYj6GzQc1gEu052cxQDCAQjkEjUvwHxKNTymPtjfGyEKHmLgCWNABWLCF1G-QyJbx30O2O0KWuGAGlD6HIEIF4GWwc0GGyxu3wPn090oFU2zVm24FMB4HeIwAWNOPOPWJQE2KQO2IM12Kq2mPUDQkJzkDwFePeOoAc34AQkuDIAwBsM80IIfSm0O2BPYGkMOHBMhPMGWLz11E2zAJuPbUgDfGUxUKFEl2ECxI+J93xOIDWPMGoAUNZJFzuK12ADFBAGlF5LeP5LxIJL+GJLiNjWJPJJmysDqycGiBCUEC01eNIG+zGK2L0LNw63tkbUiOqOEIsPwzVKe3+MBMpPiFaMDzSOoPVzcIzTV1-XZM5JFRpzyPgPYPGOv2Q1CL7g6BtJwJqPtI80dOrWdI5OBMoHUHdLkPaO9M6KA1Fyj0gCNRDLYIv3hPNNT0tOjOMKwKiNwLf1iPqOsK-yaOgE9UzK33SJZLoP226MKWHFGRAEOAYBsyFIwDtQVhWRzFaBDl2HLm1D6BYAXKXMXM4VXNdGQDKWyEGWSi8EKV8BJBAFMCNTGA3OyAlxJANBPz6EYCC3l1BD+BOA+3C0ECQiSEJSgzBgrBp0EgxEICNDtXtH9UECwGAtAoFTXMQG+FBDQANFBF4CFFiDcDKCLBFSPTpAhCzA+wPLOxZxABhXYEoGxLQBXyYEfIuyuz+CrhTDQ2mA2RDg2UGBAqYuAtmHnMXPYqXIgq4qaA3JyEbHYCzHEyghAAiEoHAACw8A-GAEsHYHABNWAG5PYAiE1CgDHKcEyFgHNHVlaC5ggGFDArAvkFaGzWXOXO4vMspCsEyCqERi5GyDQhwEvKCDQHCxwD-DePoF62UEYF4C+MuFiFABMuqHXGEG-FaEuCYAGDQBYEIDoHCKaAQmnk6E1FBEGATSKjzGYuYuFS4s1FiHgsQrKEBBwDQHLHtjxgW0TXAG2V3IyFErcFoEYH1N53kEuyYFBEkAuAQkfMSUICFHPBXE-JTRyGgF-P-O+iAqyuAqWV1igpgrgoQqQpQtFRFXIGyCPD-02lm1mAhHrGzRc2iDHQXQG0iywFICNFmDQF4GADKG3EgHiuBkIDxW5BrFmBqu+g2TECmqwGuW4vYAxEoCKpKtgt4BlOBN8n3PgCm2MHACYKEpsG2ohF4F4EuEOFi0fNgHCyW2wBwCQlmHSBQEBDnTGFurVFgByu1BOGzWAF4EiWICwFJRyCevSsWFeveqKjNW+t+q4sKABqBvmtBr3JGpAHUMcAiB6G8McpgBKtcvct4E8pUB8r8oCrcHSkBByqSDcU9ESvLkyBSrSv+kyoMpApyogryoKqQuKtKt4rxgaUKAhA02bUGVU0GBfOaHXG5qaDotyAYq5rYtMpXIsqDo5HPlsugGyC4C5EbQZ3iDykLJ-CzGusxX5GhDTHmE9CSD8Q9XDoQEOGzSIAjQQnLDLnQknOJRiF0uaHDrqhwDcHMBRGoEuBlMOByqqFTtouAHKFLDDoeEODfDwEYGoEBAVnwWAHTtdEzummzqhTzoLvMAQngGbFLs9AGDiFyBaFspmDrobsuBqBbqDHbqmEHARgPOsrhEgD7oHoYCHq6A1QPHHvtEnpGrPpnvzpc3nvSlUKrDZBXorvXurq3vro6v8tA3KuDuIjaGet6A+XAemEoGEymBgdgZGBwAQZGCQeQaaCeqgaaAwcwdyCTRwcaDwfwYSHIDQcaCAA` < `shapes` ? 7 : 6;
        break;
    case 4:
        I8yy.W43 = 61;
        n9bbbb = 3;
        break;
    case 9:
        I8yy.y43 = 33;
        n9bbbb = 8;
        break;
    }
}
var v8yy = [`Peer`, `peerjs`, `world`, `ftu`, `fte`, `footHW`, `footHH`, `footOffsetX`, `footOffsetY`, `swingF`, `swingD`, `b2Vec2`, `Math`, `Common`, `b2BodyDef`, `Dynamics`, `b2Body`, `b2FixtureDef`, `b2Fixture`, `b2World`, `b2MassData`, `Shapes`, `Collision`, `b2PolygonShape`, `b2CircleShape`, `b2DebugDraw`, `b2Math`, `b2RevoluteJointDef`, `Joints`, `b2RevoluteJoint`, `b2PrismaticJointDef`, `b2PrismaticJoint`, `b2DistanceJoint`, `b2DistanceJointDef`, `b2GearJointDef`, `b2AABB`, `createNewState`, `safeCos`, `safeSin`, `x`, `y`, `discs`, `discDeaths`, `physics`, `parse`, `stringify`, `ppm`, `length`, `bodies`, `p`, `cf`, `ct`, `type`, `lv`, `av`, `fixtures`, `fp`, `shapes`, `c`, `w`, `h`, `r`, `v`, `s`, `a`, `splice`, `re`, `joints`, `aa`, `ab`, `ut`, `d`, `lt`, `mmf`, `ms`, `bf`, `ba`, `bb`, `pax`, `pay`, `plen`, `pms`, `pf`, `sax`, `say`, `slen`, `sf`, `ra`, `la`, `ua`, `safeATan2`, `axa`, `safeTan`, `cs`, `Subtract`, `Length`, `len`, `fh`, `capZones`, `indexOf`, `i`, `push`, `ty`, `l`, `spawns`, `gr`, `ye`, `b`, `xv`, `yv`, `priority`, `sort`, `slice`, `id`, `tea`, `team`, `f`, `floor`, `mo`, `a1a`, `seed`, `players`, `scores`, `lscr`, `mm`, `m`, `rl`, `projectiles`, `step`, `prototype`, `now`, `globalStepVars`, `SetWarmStarting`, `contactListener`, `BeginContact`, `GetFixtureA`, `GetFixtureB`, `GetBody`, `GetUserData`, `death`, `diedThisStep`, `arrayID`, `capzone`, `capType`, `capEvent`, `SetEnabled`, `teamGoalEvent`, `nc`, `inputState`, `gameSettings`, `swing`, `swingCollideDestroyEvents`, `lhid`, `lht`, `discID`, `hitDiscsThisStep`, `hitWorldThisStep`, `EndContact`, `PreSolve`, `PostSolve`, `normalImpulses`, `soundsThisStep`, `impulsesThisStep`, `b2WorldManifold`, `GetWorldManifold`, `m_normal`, `m_points`, `GetType`, `GetShape`, `shakeAmount`, `Copy`, `Multiply`, `Add`, `abs`, `shakeVectorThisStep`, `SetContactListener`, `novakReset`, `GetGravity`, `SetGravity`, `playersLeft`, `capID`, `count`, `PI`, `tcd`, `a1`, `action`, `a2`, `action2`, `radius`, `ds`, `da`, `bal`, `max`, `min`, `ml`, `b2_dynamicBody`, `Set`, `position`, `fixedRotation`, `linearDamping`, `linearVelocity`, `angularVelocity`, `angle`, `angularDamping`, `userData`, `bullet`, `CreateBody`, `shape`, `density`, `friction`, `restitution`, `categoryBits`, `filter`, `CreateFixture`, `SetAsOrientedBox`, `body`, `SetLinearVelocity`, `GetGroundBody`, `SetUserData`, `SetAsArray`, `SetRadius`, `SetLocalPosition`, `fx`, `np`, `b2_staticBody`, `b2_kinematicBody`, `ld`, `ad`, `fr`, `bu`, `fric`, `fricp`, `de`, `isSensor`, `pow`, `f_c`, `maskBits`, `f_p`, `f_1`, `f_2`, `f_3`, `f_4`, `ng`, `ig`, `sh`, `GetWorldVector`, `GetLinearVelocity`, `GetAngularVelocity`, `SetAngularVelocity`, `pa`, `GetAngle`, `bodyA`, `localAnchorA`, `bodyB`, `localAnchorB`, `referenceAngle`, `upperTranslation`, `lowerTranslation`, `enableLimit`, `localAxisA`, `enableMotor`, `maxMotorForce`, `motorSpeed`, `GetPosition`, `CreateJoint`, `el`, `lowerAngle`, `upperAngle`, `em`, `maxMotorTorque`, `mmt`, `collideConnected`, `cc`, `GetJointTranslation`, `cd`, `SetMotorSpeed`, `GetMotorSpeed`, `changeSide`, `frequencyHz`, `dampingRatio`, `dr`, `joint1`, `ja`, `joint2`, `jb`, `ratio`, `GetWorldPoint`, `Distance`, `swingJoint`, `did`, `SetAsBox`, `fl`, `up`, `down`, `left`, `right`, `ApplyForce`, `GetWorldCenter`, `GetFilterData`, `RayCast`, `lowerBound`, `upperBound`, `noGrapple`, `QueryAABB`, `GetLocalPosition`, `GetRadius`, `SetV`, `GetVertices`, `innerGrapple`, `TestPoint`, `GetLocalPoint`, `wp`, `m_hit`, `m_point`, `m_fixture`, `ReportFixture`, `bind`, `pq`, `Step`, `ClearForces`, `shk`, `o`, `ot`, `rc`, `sts`, `bro`, `sk`, `GetReactionForce`, `GetLinearDamping`, `GetAngularDamping`, `IsFixedRotation`, `IsBullet`, `bg`, `SubtractVV`, `extraVelX`, `extraVelY`, `ni`, `sx`, `sy`, `sxv`, `syv`, `spawnTeamInfo`, `map`, `playersJoined`, `t`, `destroyThisStep`, `pc`, `gt`, `maps`, `q`, `getMap`, `getOrderedRandomMap`, `dontInterpolate`, `GetBodyList`, `GetNext`, `DestroyBody`, `GetJointList`, `DestroyJoint`, `preventDefault`, `button`, `getGameMousePosition`, `code`, `isDown`, `isUp`, `press`, `release`, `downHandler`, `keyCode`, `upHandler`, `addEventListener`, `left1`, `customControls`, `left2`, `left3`, `up1`, `up2`, `up3`, `right1`, `right2`, `right3`, `down1`, `down2`, `down3`, `heavy1`, `heavy2`, `heavy3`, `swing1`, `swing2`, `swing3`, `getInputs`, `lockKeyboard`, `unlockKeyboard`, `destroy`, `removeEventListener`, `panAmount`, `masterVolume`, `capIncrease`, `soundStrings`, `capDecrease`, `playSound`, `mute`, `preClickMute`, `howls`, `sumVolThisStep`, `volume`, `stereo`, `play`, `shift`, `on`, `resetSumVols`, `call`, `hasOwnProperty`, `layers`, `avatar`, `scale`, `color`, `flipX`, `flipY`, `toString`, `SVGResource`, `resources`, `svgStrings`, `layerProgress`, `svg`, `then`, `load`, `Sprite`, `Graphics`, `beginFill`, `bc`, `drawRect`, `endFill`, `addChild`, `from`, `Texture`, `tint`, `set`, `anchor`, `totalSize`, `create`, `RenderTexture`, `render`, `texture`, `destroyOneSkin`, `destroySkins`, `getElementById`, `Container`, `thumbRenderer`, `replayRenderer`, `view`, `editorRenderer`, `autoDetectRenderer`, `quality`, `devicePixelRatio`, `gameRenderer`, `appendChild`, `add`, `classList`, `visibility`, `style`, `AdjustmentFilter`, `filters`, `BlurFilter`, `FXAAFilter`, `panSmooth`, `getCanvas`, `createElement`, `getContext`, `width`, `height`, `createRadialGradient`, `addColorStop`, `fillStyle`, `fillRect`, `beginTextureFill`, `CanvasRenderer`, `alpha`, `lineStyle`, `Group`, `Text`, `resolution`, `visible`, `cos`, `sin`, `blur`, `pause`, `unblur`, `panStage`, `scaleStage`, `getStageScale`, `resetStage`, `screenRatioToPhysicsCoordinate`, `highlightPlatform`, `highlightFixture`, `clearHighlightPlatform`, `clearHighlightFixture`, `highlightSpawn`, `clearHighlightSpawn`, `highlightJoint`, `clearHighlightJoint`, `hideSnapGrid`, `clear`, `showSnapGrid`, `moveTo`, `lineTo`, `drawPolygonPreview`, `children`, `removeChildAt`, `rotation`, `clearPolygonPreview`, `checkAndResizeRenderer`, `offsetWidth`, `offsetHeight`, `resizeRenderer`, `resize`, `zoom`, `forceRendererSize`, `removeChild`, `parentNode`, `replayFadeOut`, `replayFadeIn`, `opacity`, `setPlayerArray`, `setLocalPlayerID`, `enableTutorialText`, `setCameraPans`, `showAfkWarn`, `clearAfkWarn`, `preShakeTime`, `postShakeTime`, `screenShake`, `removeAll`, `Tween`, `to`, `easing`, `Out`, `Cubic`, `Easing`, `onComplete`, `Elastic`, `start`, `tutorialTextSwitchLastScreen`, `offscreencontainer`, `container`, `border`, `random`, `getPageHeight`, `top`, `update`, `help`, `getCookie`, `modes`, `textContent`, `tutorialTitle`, `tutorialText`, `n`, `text`, `In`, `Quadratic`, `delay`, `chain`, `saturation`, `sat`, `contrast`, `brightness`, `wl`, `winnerTextAlpha`, `bgFaderAlpha`, `userName`, `score`, `animating`, `needsTweeningOut`, `transform`, `firstChild`, `createImage`, `gameStartName`, `topAlpha`, `midAlpha`, `botAlpha`, `totalRadius`, `drawCircle`, `skinRendered`, `blendMode`, `MULTIPLY`, `BLEND_MODES`, `inner`, `innerColor`, `mask`, `outline`, `fill`, `dropShadowDistance`, `dropShadowAlpha`, `nametext`, `addChildAt`, `drawPolygon`, `Point`, `pivot`, `offscreenarrow`, `offscreentext`, `Matrix`, `atan2`, `swingArc`, `sa1t`, `arc`, `DEG_TO_RAD`, `arrowDrawing`, `sqrt`, `getChildIndex`, `setChildIndex`, `dl`, `clone`, `bodyID`, `NORMAL`, `parent`, `closePath`, `LINEAR`, `SCALE_MODES`, `graphics`, `gravity`, `shrinkPerFrame`, `do`, `_lastObjectRendered`, `image`, `extract`, `setButtonSounds`, `networkEngine`, `roomName`, `quick`, `getGameSettings`, `closeClicked`, `onclick`, `sendNoHostSwap`, `hostID`, `getLSID`, `sendReturnToLobby`, `forEach`, `addMaps`, `fromObject`, `guest`, `level`, `show`, `split`, `charAt`, `substring`, `showStatusMessage`, `toLowerCase`, `sendBalance`, `updatePlayers`, `banPlayer`, `doTeamLock`, `changeOtherTeam`, `dbid`, `dbv`, `sendCurate`, `fail`, `done`, `post`, `e`, `chatStatus`, `sanitizeString`, `recvChatMessage`, `ready`, `tl`, `updateGameSettings`, `ping`, `updatePings`, `handlePlayerLeft`, `playerLeftChat`, `allHandlePlayerLeft`, `handleHostLeft`, `hostLeftChat`, `handleHostChange`, `oldHost`, `newHost`, `recvFriended`, `xp`, `xpToLevel`, `levelToXP`, `timeline`, `recvNewToken`, `sendNewPlayerState`, `hostHandlePlayerJoined`, `informInLobby`, `playerJoinedChat`, `handlePlayerJoined`, `setGameSettings`, `returnFromTesting`, `updateMaps`, `isFunction`, `isValue`, `compareValues`, `VALUE_UNCHANGED`, `isDate`, `getTime`, `VALUE_CREATED`, `VALUE_DELETED`, `VALUE_UPDATED`, `isObject`, `isArray`, `mergeIntoNewMap`, `recvMapSuggest`, `recvMapSuggestClient`, `ga`, `playerTyping`, `playerKicked`, `recvAdmin`, `recvAfkWarn`, `recvArmRecord`, `toUpperCase`, `decompressFromEncodedURIComponent`, `fromBase64`, `ByteBuffer`, `decode`, `pson`, `decodeFromDatabase`, `showingMapLoadWindow`, `closeMapLoadWindow`, `showingMapEditor`, `closeMapEditor`, `getTS`, `gameWorld`, `go`, `hide`, `generateRandomOrder`, `encode`, `toBase64`, `compressToEncodedURIComponent`, `encodeToDatabase`, `triggerStart`, `recvInputs`, `decodeInputs`, `inputs`, `data`, `fc`, `admin`, `state`, `gs`, `recvRandomOrder`, `goInProgress`, `stateID`, `updateLocalInputKeys`, `recvRevert`, `tabbed`, `maybeShowVoteWindow`, `value`, `eventName`, `callback`, `npma`, `nmpcw`, `autoJoinID`, `autoJoinPassBypass`, `server`, `emit`, `testPing`, `joinRoom`, `address`, `password`, `bypass`, `createRoom`, `formValues`, `peerID`, `peer`, `dataConnection`, `open`, `close`, `receivedMessages`, `time`, `metrics`, `pt`, `node`, `reverted`, `unreverted`, `p2pIgnored`, `frame`, `p2p`, `sid`, `newToken`, `newXP`, `mapsVotedFor`, `getDebug`, `sendInputs`, `send`, `changeOwnTeam`, `silencePlayer`, `chatMessage`, `informInGame`, `sendMapReorder`, `sendMapDelete`, `sendMapAdd`, `sendMapSuggest`, `sendGAMO`, `sendWL`, `sendTyping`, `sendAdminInputs`, `sendChangeMode`, `versionCheck`, `sendArmRecord`, `sendHostChange`, `sendStartCountdown`, `sendAbortCountdown`, `sendReqXP`, `sendMapVote`, `getPreVote`, `getMoreQuickPlayMaps`, `updateRC`, `desyncTest`, `sendDesyncRes`, `roundComplete`, `p2pReverts`, `p2pBanLevel`, `p2pBanUntil`, `connect`, `reportP2PMessageIgnored`, `lat`, `long`, `country`, `maxPlayers`, `minLevel`, `maxLevel`, `version`, `hidden`, `guestName`, `token`, `extraParams`, `getConnectedPlayers`, `setReady`, `allReadyReset`, `sendDebugWinner`, `sendTeamSettingsChange`, `sendFriended`, `unOn`, `receive`, `aro`, `subscribe`, `enterFrameDispatcher`, `focus`, `action3`, `mr`, `mx`, `my`, `encodeInputs`, `off`, `unsubscribe`, `resetRenderer`, `playerArray`, `startingState`, `adminInputs`, `mn`, `ma`, `es`, `mid`, `toDatabase`, `rxa`, `rxn`, `getRandomOrder`, `hostHandlePlayerLeft`, `increaseAccumulator`, `activeElement`, `remove`, `createTextNode`, `childElementCount`, `scrollTop`, `scrollHeight`, `enableTutorial`, `aliases`, `index`, `buffer`, `implicitClassAliasArray`, `implicitStringArray`, `bodgeCaptureZoneDataIdentifierArray`, `getUint8`, `setUint8`, `getInt32`, `setInt32`, `getInt16`, `setInt16`, `getUint16`, `setUint16`, `getUint32`, `setUint32`, `readByte`, `writeByte`, `getFloat64`, `setFloat64`, `getFloat32`, `setFloat32`, `textDec`, `textEnc`, `readExternal`, `T_UNDEFINED`, `T_NULL`, `T_TRUE`, `T_FALSE`, `T_OBJ`, `readAnonymous`, `T_ARRAY`, `T_STRING`, `fromCharCode`, `btoa`, `pako`, `atob`, `charCodeAt`, `inflate`, `byteOffset`, `byteLength`, `T_INT`, `T_DOUBLE`, `colors`, `makeSafe`, `writeShort`, `writeFloat`, `writeBoolean`, `writeInt`, `readShort`, `readFloat`, `readBoolean`, `readInt`, `stats`, `test`, `userAgent`, `writeUShort`, `readUShort`, `writeUint`, `readUint`, `halfSerialize`, `fromJSONObject`, `halfUnserialize`, `dict`, `StaticPair`, `PSON`, `mapname`, `author`, `platformArray`, `spawnArray`, `platformNames`, `spawnNames`, `capZoneArray`, `capZoneNames`, `discFriction`, `discRestitution`, `discDensity`, `discLinearDamping`, `discRadius`, `discAllForce`, `respawn`, `noCollide`, `readUTF`, `readDouble`, `readObject`, `classAlias`, `registerClassAlias`, `shapeArray`, `isDynamic`, `rotates`, `rotatePivotX`, `rotatePivotY`, `stiffness`, `springy`, `springyUpper`, `springyLower`, `springyAnchorX`, `springyAnchorY`, `springyForce`, `path`, `pathAngle`, `pathUpper`, `pathLower`, `pathAnchorX`, `pathAnchorY`, `pathMaxSpeed`, `pathForce`, `localX`, `localY`, `localAngle`, `shapeID`, `noPhysics`, `round`, `ffa`, `blue`, `red`, `captureLimit`, `ownerID`, `framesToDetonate`, `readInt29`, `lobbyModes`, `mapStrings`, `arrowMapStrings`, `grappleMapStrings`, `randomArray`, `randomArrayArrow`, `randomArrayGrapple`, `fromOldString`, `trainingOneStrings`, `trainingTwoStrings`, `onmousedown`, `bbs`, `onmouseover`, `bhs`, `rlc`, `activeAvatarNumber`, `allAvatars`, `hideEditorIfShowing`, `onmouseenter`, `onchange`, `oninput`, `onmouseup`, `onmousemove`, `getBoundingClientRect`, `target`, `clientX`, `clientY`, `backgroundColor`, `clearRect`, `drawImage`, `lastChild`, `numToHex`, `col`, `name`, `hue`, `display`, `showColorPicker`, `wipeColorHistory`, `closeColorPicker`, `avatarRenderer`, `setTeam`, `completeRedraw`, `clearMemory`, `teamify`, `layerID`, `baseTexture`, `redrawLayer`, `changeLayerProperty`, `dispose`, `cursor`, `propType`, `fromString`, `innerHTML`, `rows`, `deleteRow`, `insertRow`, `insertCell`, `src`, `rlh`, `colorVal`, `backgroundImage`, `bcs`, `pointerEvents`, `unshift`, `stopPropagation`, `screenX`, `screenY`, `shiftKey`, `deltaY`, `setRollFunctions`, `resizeGuide`, `setCookie`, `setItem`, `musicMute`, `showing`, `stopMusic`, `startMusic`, `onmouseleave`, `prevReplay`, `nextReplay`, `onmouseout`, `reportReplay`, `force`, `activateButtonSpinner`, `nodeName`, `spinnerTimeout`, `deactivateButtonSpinner`, `childNodes`, `classic`, `showGuestOrAccount`, `showGuest`, `getItem`, `returnToMain`, `resume`, `get`, `bonk`, `car`, `quick_classic`, `quick_arrows`, `quick_simple`, `custom`, `quick_grapple`, `total`, `document`, `anTime`, `anDel`, `stop`, `fade`, `_volume`, `quickMode`, `join`, `quickExcludeAddresses`, `refreshIfNecessary`, `recvToken`, `disableMouseEvents`, `enableMouseEvents`, `date`, `news`, `friends`, `legacyFriendsString`, `requests`, `playerID`, `roomid`, `roomID`, `checked`, `username`, `rememberToken`, `unserialize`, `controls`, `legacyFriends`, `loggedIn`, `straightIntoTutorial`, `selectedIndex`, `serialize`, `simpleFPS`, `antialias`, `options`, `avatarCache`, `paddingTop`, `bottom`, `insertBefore`, `autoJoin`, `passbypass`, `clearToken`, `randomBC`, `visibilityState`, `showingConnectingWindow`, `ar`, `ard`, `sp`, `rooms`, `city`, `createserver`, `distance`, `getLatLngDistance`, `latitude`, `longitude`, `distanceSort`, `alreadyJoined`, `mode_mo`, `mode_ga`, `lobbyName`, `filterOn`, `filterMode`, `getAttribute`, `setAttribute`, `ondblclick`, `cell1`, `overflow`, `roomname`, `textAlign`, `paddingLeft`, `maxplayers`, `minlevel`, `maxlevel`, `marginLeft`, `marginTop`, `className`, `replace`, `reset`, `refresh`, `ae`, `af`, `ag`, `ai`, `al`, `am`, `an`, `ao`, `as`, `at`, `au`, `aw`, `ax`, `az`, `bd`, `be`, `bh`, `bi`, `bj`, `bm`, `bn`, `bo`, `br`, `bs`, `bt`, `bv`, `bw`, `by`, `bz`, `ca`, `catalonia`, `cg`, `ch`, `ci`, `ck`, `cl`, `cm`, `cn`, `co`, `cr`, `cu`, `cv`, `cx`, `cy`, `cz`, `dj`, `dk`, `dm`, `dz`, `ec`, `ee`, `eg`, `eh`, `england`, `er`, `et`, `europeanunion`, `fam`, `fi`, `fj`, `fk`, `fm`, `fo`, `gb`, `gd`, `ge`, `gf`, `gh`, `gi`, `gl`, `gm`, `gn`, `gp`, `gq`, `gu`, `gw`, `gy`, `hk`, `hm`, `hn`, `hr`, `ht`, `hu`, `ie`, `il`, `in`, `io`, `iq`, `ir`, `is`, `it`, `jm`, `jo`, `jp`, `ke`, `kg`, `kh`, `ki`, `km`, `kn`, `kp`, `kr`, `kw`, `ky`, `kz`, `lb`, `lc`, `li`, `lk`, `lr`, `ls`, `lu`, `ly`, `mc`, `md`, `me`, `mg`, `mh`, `mk`, `mp`, `mq`, `mt`, `mu`, `mv`, `mw`, `mz`, `na`, `ne`, `nf`, `nl`, `no`, `nr`, `nu`, `nz`, `om`, `pe`, `pg`, `ph`, `pk`, `pl`, `pm`, `pn`, `pr`, `ps`, `pw`, `py`, `qa`, `ro`, `rs`, `ru`, `rw`, `sa`, `sb`, `sc`, `scotland`, `sd`, `se`, `sg`, `si`, `sj`, `sl`, `sm`, `sn`, `so`, `sr`, `st`, `sv`, `sz`, `tc`, `td`, `tf`, `tg`, `th`, `tj`, `tk`, `tm`, `tn`, `tr`, `tt`, `tv`, `tw`, `tz`, `ug`, `um`, `us`, `uy`, `uz`, `va`, `vc`, `ve`, `vg`, `vi`, `vn`, `vu`, `wales`, `wf`, `ws`, `yt`, `za`, `zm`, `zw`, `select`, `execCommand`, `doSearch`, `clientHeight`, `playChatSound`, `playCountdownSound`, `element`, `playerElement`, `lobbyDescription`, `updateFriends`, `suggestID`, `cloneNode`, `forceTeamCount`, `oneLevelDeeper`, `textCompanion`, `areWeFriends`, `friendName`, `friendShortID`, `friendNameToID`, `locallyRemoveFriend`, `lastSet`, `img`, `forceTeams`, `disabled`, `showVoteWindow`, `vd`, `getShowing`, `onscroll`, `listRowHover`, `enterKeySearch`, `enterKeyUnknown`, `div`, `href`, `substr`, `more`, `searchsort`, `searchauthor`, `searchmapname`, `startingfrom`, `searchstring`, `cant`, `getrule`, `ceil`, `leveldata`, `authorname`, `publisheddate`, `pub`, `published`, `editorCanTarget`, `fromNow`, `mapDiv`, `unfavButton`, `addedby`, `comment`, `creationdate`, `deleteButton`, `thumbScale`, `previewGraphics`, `hegiht`, `mapVersion`, `writeUTF`, `rxid`, `rxdb`, `writeDouble`, `MAX_VALUE`, `pu`, `getBlankMap`, `getNewBoxShape`, `getNewCircleShape`, `getNewPolyShape`, `getNewFixture`, `getNewBody`, `getNewSpawn`, `getNewCapZone`, `getNewRevoluteJoint`, `getNewDistanceJoint`, `getNewLPJJoint`, `getNewLSJJoint`, `getNewChainShape`, `fs`, `zp`, `deepDiffMapper`, `fromOldFormat`, `a3`, `mode`, `startingFrom`, `replays`, `fromDatabase`, `replaydata`, `pop`, `contains`, `HSLToHex`, `hexToHSL`, `toFixed`, `hueify`, `padStart`, `mapid`, `invertXPos`, `invertYPos`, `mirrorX`, `mirrorY`, `rotate`, `confirmState`, `atan`, `clientWidth`, `removeProperty`, `advice`, `labelClass`, `key`, `crementAmount`, `degRad`, `valueMult`, `allowNull`, `changeCallback`, `selected`, `variableType`, `conditionalFormatting`, `keys`, `goalHeight`, `borderThickness`, `borderThicknessXInner`, `borderThicknessYInner`, `ball`, `kickReady`, `applyInputs`, `doKick`, `clampToPitch`, `output`, `ballReference`, `SetFixedRotation`, `SetLinearDamping`, `SetBullet`, `discReference`, `GetNegative`, `ApplyImpulse`, `reverse`, `loader`, `Quartic`, `bgAlpha`, `textY`, `DropShadowFilter`, `countdownText`, `tweenArmed`, `mapList`, `fullListLength`, `backupMap`, `scaleRatio`, `displayObject`, `shadowContainer`, `jointContainer`, `rvLine`, `otherLines`, `isReplay`, `build`, `rotatePoint`, `gradientBackgroundCanvas`, `bgTex`, `lastRenderRoundCount`, `roundGraphics`, `discGraphics`, `arrowGraphics`, `stage`, `bgGradient`, `blurContainer`, `environmentContainer`, `discContainer`, `foregroundFader`, `renderer`, `domContainer`, `particleManager`, `gameInterfaceGraphics`, `shakeTweenGroup`, `shakeTweenObject`, `domLastWidth`, `domLastHeight`, `newWinnerDOM`, `countdownDOM`, `localPlayerID`, `createGradientBackground`, `offScreenContainer`, `destroyChildren`, `bodyGraphics`, `graphic`, `graphicTexture`, `shadow`, `shadowTexture`, `capFill`, `shrink`, `capZone`, `shapeType`, `teams`, `cacheTextures`, `createTexture`, `getLocalBounds`, `cacheAsBitmap`, `framebuffer`, `MSAA_QUALITY`, `multisample`, `HIGH`, `blit`, `soundManager`, `playerGraphic`, `teamOutline`, `offScreenArrow`, `offScreenText`, `specialGraphic`, `specialRing`, `arrowAimContainer`, `arrowAimGraphic`, `destroyed`, `playerObject`, `skinTextureObject`, `local`, `svgOversample`, `lastOffScreenBeep`, `check`, `drawTexture`, `createSkinTexture`, `nameText`, `bowSVG`, `checkAllSkinLayersLoaded`, `store`, `doOffScreen`, `doGrapple`, `doArrows`, `doSounds`, `offScreen`, `CACHE_SIZE`, `avatars`, `compare`, `bump`, `playerDeathTimers`, `playerBounceTimers`, `bounceTimers`, `lastAnimationTime`, `particles`, `particleTexture`, `generateTexture`, `updateParticles`, `deathArrowTexture`, `createDeathArrowTexture`, `WHITE`, `arrowID`, `newWinnerDOMTop`, `newWinnerDOMBottom`, `newWinnerDOMSkinContainer`, `newWinnerDOMSkinActual`, `newWinnerDOMSkinX`, `newWinnerDOMScores`, `newWinnerDOMScoresTop`, `newWinnerDOMScoresLeft`, `newWinnerDOMScoresRight`, `countdownDOMText`, `countdownState`, `countdownTweenArmed`, `creditDOM`, `creditName`, `creditAuthor`, `creditState`, `creditTweenArmed`, `winnerAvatarCache`, `plainAvatar`, `roundEndTweenGroup`, `colorAdjust`, `KawaseBlurFilter`, `localSpawnedYet`, `updateSeconds`, `currentCount`, `fontFamily`, `lrt`, `mart`, `upVotes`, `downVotes`, `disableClassic`, `enableClassic`, `classicButtonHover`, `classicButtonClick`, `classicButtonBack`, `listRowClick`, `popNote`, `digiBeep`, `callbacks`, `handler`, `dispatch`, `apply`, `setTime`, `toUTCString`, `cookie`, `animateButtonOver`, `animateButtonOut`, `frameDone`, `keyUpFunctions`, `removeKeyUpFunction`, `onkeyup`, `keyDownFunctions`, `removeKeyDownFunction`, `onkeydown`, `updateLocale`, `setDefault`, `charReplacements`, `stringReplaceAll`, `wab`, `profanityCheck`, `found`, `censorString`, `findindex`, `continuefrom`, `getPageWidth`, `onresize`, `resizeGame`, `maxWidth`, `maxHeight`, `yOffset`, `xOffset`, `resetAndRunAuction`, `lngtd`, `window`, `t1`, `socketio`, `peer.min`, `physics/box2dweb/Box2DModule`, `bx`, `po`, `rv`, `lpj`, `lsj`, `keydown`, `keyup`, `end`, `number`, `boolean`, `continue`, `0`, `xpbar`, `xpbarcontainer`, `ingametutorial`, `ingametutorial_title`, `ingametutorial_text`, `ingamevotewindow`, `thumb`, `replay`, `editor`, `replaycanvas`, `high-performance`, `gamecanvas`, `canvas`, `2d`, `#3b536b`, `#2c3e50`, `ingamewinner`, `ingamewinner_top`, `ingamewinner_bottom`, `ingamewinner_skin`, `ingamewinner_skin_skin`, `ingamewinner_skin_x`, `Chaz wins`, `futurept_demi_oblique`, `FIRST TO 6 WINS`, `futurept_medium_oblique`, `Chaz:\nFantao:\nFannyFlaps:`, `0\n0\n0`, `Map X by Author Y`, `futurept_book`, `You are currently spectating`, `You will join this game at the start of the next round`, `Please wait a moment`, `You will be matched with other players shortly`, `You are about to be kicked for inactivity`, `Press any movement key to stay in this room!`, `ARROWS`, `futurept_medium`, `5v1`, `FIRST TO 5 WINS`, `6`, `linear`, `px`, `1`, `center`, `TUTORIAL`, `TO MOVE`, `arrow keys`, `press up to jump`, `TO WIN`, `be the last player alive`, `at the end of a round`, `TO SURVIVE`, `stay on the level`, `and don\'t touch anything black`, `TO BOUNCE HIGHER`, `hold UP while rising`, `hold DOWN while falling`, `HOLD X TO MAKE YOURSELF HEAVIER`, `always hold X before hitting another player`, `so you have more momentum going into a collision`, `HOLD Z TO START DRAWING AN ARROW`, `then use LEFT and RIGHT to aim`, `kill this bot to proceed`, `CONTROL POINTS`, `stay inside the control point to capture it`, `this will win you the round and kill all enemy players`, `capture it to finish the tutorial`, `none`, ``, `training1`, `training2`, `noingamehelp`, `true`, `inherit`, ` by `, `Draw!`, ` wins`, `Red Team Wins`, `Blue Team Wins`, `Green Team Wins`, `Yellow Team Wins`, `\n`, `Red Team`, `Blue Team`, `Green Team`, `Yellow Team`, `:`, `FIRST TO `, ` WINS`, `Unknown`, `DRAW`, `WINS`, `SCORES`, `scale(1.3)`, `easeOutElastic(1, 0.8)`, `scale(1.5)`, `scale(1.0)`, `g`, `easeInSine`, `FREE FOR ALL`, `TEAMS`, `ft`, `discOffScreen`, `discDeath`, `platBounce`, `capComplete`, `discDisc`, `leaveconfirmwindowcontainer`, `leaveconfirmwindow_cancelbutton`, `leaveconfirmwindow_okbutton`, `hostleaveconfirmwindowcontainer`, `hostleaveconfirmwindow_cancelbutton`, `hostleaveconfirmwindow_okbutton`, `hostleaveconfirmwindow_endbutton`, `xpbarfill`, `xpbartext`, `joinedRoom`, `playerLeft`, `hostLeft`, `newPlayerJoined`, `createdRoom`, `scheduleGameStart`, `returnToLobby`, `readyChange`, `readyReset`, `teamLockChange`, `teamChange`, `playerMuted`, `playerUnmuted`, `nameChange`, `gotPingData`, `recvInLobby`, `recvInGame`, `recvLobbyMap`, `mapReorder`, `mapDelete`, `mapAdd`, `changeGAMO`, `changeWL`, `typing`, `kicked`, `afkWarn`, `disconnectedFromMona`, `mapSuggest`, `mapSuggestClient`, `changeMode`, `balance`, `debugWinner`, `teamSettingsChange`, `armRecord`, `hostChange`, `friended`, `playerLevelledUp`, `localGainedXP`, `localRevert`, `p2pRevert`, `onTabbed`, `curateResult`, `community`, `gameComplete`, `processCommand`, `startGame`, `testMap`, `favouriteMap`, `endSession`, `easeOutCubic`, ` `, `"`, `\'`, `/balance`, `* Must be room host to use this command`, `#cc3333`, `* Unavailable in quick play`, `* Buff/nerf amount must be between -100 and 100`, `* Balance failed, username `, ` not found in this room`, `* `, ` has had their buff/nerf reset.`, ` has had their buff/nerf set to `, `/kick`, `* Kick failed, username `, `/lock`, `/unlock`, `/move`, `* Move failed, username `, `* Move failed, usage /move "username" ffa or /move username spec`, `spec`, `/mute`, `* Mute failed, username `, `* Can\'t mute yourself!`, `* Muted `, `/unmute`, `* Unmute failed, username `, `* Unmuted `, `/fav`, `/fave`, `/favourite`, `/unfav`, `/unfave`, `/unfavourite`, `/curate`, `* Failed: This map hasn\'t been saved!`, `#6033cc`, `* Curating `, ` with comment: "`, `".`, ` with no comment.`, ` Please double check then type /curateyes or /curateno`, `/curateyes`, `* Type /curate followed by your comment`, `/curateno`, `* Cancelled.`, `* Command `, ` not recognised`, `* Accepted commands:`, `/kick "user name"`, `/mute "user name"`, `/unmute "user name"`, `/balance "user name" -100 to 100`, `* Success!`, `rate_limit`, `* Failed: Rate limited, please wait a few seconds then try /curateyes again`, `not_logged_in`, `* Failed: You\'re a guest!`, `invalid_mapid`, `* Failed: Map issue`, `invalid_comment`, `* Failed: Comment invalid`, `comment_too_long`, `* Failed: Comment too long`, `invalid_dbv`, `unauthorised`, `* Failed: You don\'t have those privileges`, `map_private`, `* Failed: Map is private, it must be published`, `* Failed: Unknown error`, `https://bonk2.io/scripts/map_fave.php`, `success`, `* Map added to favourites`, `map_unpublished`, `* Couldn\'t favourite map because it isn\'t public`, `already_faved`, `* This map is already in your favourites!`, `* Couldn\'t favourite, something went wrong`, `* You must be logged in and the map must be a Bonk 2 map`, `u`, `* Map removed from favourites`, `* Couldn\'t unfavourite map because it isn\'t public`, `not_faved`, `* This map isn\'t in your favourites!`, `* Couldn\'t unfavourite, something went wrong`, `sound/bell_full_1.mp3`, `* Teams have been locked, only the host can assign teams`, `* Teams have been unlocked`, ` has been muted`, ` has been unmuted`, `Level Up`, `+100xp`, `10px`, `-6px`, `easeOutQuad`, `-20px`, `fullyJoined`, `created`, `updated`, `deleted`, `unchanged`, `Invalid argument. Function given, object expected.`, `[object Function]`, `[object Array]`, `[object Date]`, `[object Object]`, `unknown`, `bonkquick`, `0px`, `%`, `ingamechatcontent`, `ingamechatinputtext`, `.bonk.io`, `https://`, `/`, `status`, `Connected, synchronizing...`, `connect_error`, `Connect error`, `connect_timeout`, `error`, `disconnect`, `reconnect`, `reconnect_attempt`, `reconnecting`, `reconnect_error`, `reconnect_failed`, `Initial data timeout.`, `Requesting to join room...`, `Creating new room`, `Room created`, `Joined room, awaiting first data`, `countdown`, `countdownaborted`, `onMoreQuickMaps`, `desyncReq`, `desyncRes`, `/myapp`, `P2P ready`, `connection`, `sync`, `Synchronized`, `Still waiting for P2P...`, `change`, `timeOffsetChanged`, `newbonkgamecontainer`, `gamerenderer`, `ingamevotewindow_upvote`, `ingamevotewindow_downvote`, `ingamechatbox`, `game`, `newbonklobby_chat_lowerinstruction`, `newbonklobby_chat_input`, `tutorialComplete`, `https://bonk2.io/scripts/replay_submit.php`, `* No replays in Football mode`, `* Please wait at least `, ` seconds since the last replay`, `* Recording failed`, `* Replay must be at least `, ` seconds long`, `* The last `, ` seconds have been recorded to the main menu`, `object`, `ingamechatinputtextbg`, `span`, `ingamechatname`, `ingamechatmessage`, `ingamechatstatus`, ` has left the game.`, ` has left the game and closed the room.`, ` has left the game and `, ` is now the game host.`, `* You are now the host of this game.`, ` has joined the game.`, `trying to decode object with alias we don\'t recognise`, `Trying to readObject on something that\'s not an object or array`, `Cool Map`, `Cool Man`, `string`, `lights`, `lasers`, `mms`, `New body`, `Box Shape`, `Circle Shape`, `Polygon Shape`, `EdgeChain Shape`, `Light`, `Laser`, `Cap Zone`, `BG Shape`, `Background Layer`, `Rotate Joint`, `Slider Joint`, `Rod Joint`, `Gear Joint`, `gmp`, `mspn`, `czs`, `Classic`, `CLASSIC`, `Classic Bonk. Hold X to increase your mass.`, `Classic Mode`, `•Use the arrow keys to move\r\n•Hold X, SHIFT or SPACE to make yourself heavier\r\n•Heavy becomes weaker the more you use it`, `VTOL`, `You have rockets on either side of your player.\nUse the up key to engage both jets, or left/right to only engage one.`, `VTOL Mode`, `•Hold up key to fly\r\n•Tap left/right gently to turn\r\n•Stay upright\r\n•Hit enemies jets to make them lose control`, `Grapple`, `GRAPPLE`, `Hold your special key (default z or y) to swing around the map. Knock enemies off their grapple by hitting them.`, `Grapple Mode`, `•Z key to grapple\r\n•Grapples nearest object in any direction\r\n•Hit enemies while they\'re grappling to knock them off`, `Arrows`, `Hold your special key (default z or y) to start drawing an arrow, use directions to aim. Release to fire.`, `Arrows Mode`, `•Hold Z to draw an arrow\r\n•Then use left/right to aim\r\n•Hold X to make yourself heavier`, `Death Arrows`, `DEATH ARROWS`, `Arrows mode, but arrows kill enemy players on impact.`, `Death Arrows Mode`, `•Hold Z to draw an arrow\r\n•Then use left/right to aim\r\n•Arrows will kill enemies instantly\r\n•Hold X to make yourself heavier`, `Simple`, `SIMPLE`, `Classic mode, but with no heavy.`, `Simple Mode`, `•Use the arrow keys to move\r\n•Push opponents off screen to win\r\n•Last player alive wins round\r\n•Press enter to chat`, `Football`, `FOOTBALL`, `Football mode, use X to kick the ball into your opposing team\'s goal`, `Football Mode`, `•Use the arrow keys to move\r\n•Press X to kick the ball`, `1,A E S T H E T I C   WAVES,Samm9,562748,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`, `1,Altum,Fantao,365,eNrjYmdPzy1gYGZgdcwpKc1lYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUMrAzogBFdwCG7AUIroEmwMZz/MI/B/uVMEJjlwAK18QEDVsDIQADAFTj0O0BoDqgAu09qWWqOgiEXK8K9Dp443ZvCgMu9Zzc30NG9RijujcTp3kic7rVua6Oje41R3Jt0AJd7PXG694hvBB3da4Li3kyc4auD070RG4uJdi/cWlMGTi52ztzigjyYxIE4XD5gZEhhYA0uSCzP4+I84ElANdDlUXDVDkSoDkCYHUnYJW4Is4lQbYNQDU0J+FxihHAJEao1EKozCbtEDuESIlSLQFVzMjICEQDitnxW`, `1,Antarctica,Tiysz,499943,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`, `1,Apocalypse,MuadDib,359162,eNrVWN9rFEccn41JLndWk5oU8rgFHwTxB3jV9OV20l6QIAa1pxDThrskd3FJbncvdxGu/ug22lpF/NEipYKgT+qL+NqnG/EfKPS9xMfQUoRCofRB93a+M2Zmd3b3SBCde5i93c989/vj8/3OdzaTSs1XHdSDMqOOPVtabDr1MkodXS7N5c0ZnEX+wDuRMIy/K/4wXsL/y1+/OPxk6Bz7j3cB8INMqsepoxSSR598A98cEWY+utAu4zjSOK7i0nkc/k9KgnrRviNFpOEZQp9bgMvBDPfXyad4G9Pn5n06TyDhPTKeLIJ8NsfoQybF51yfPJ1b/338fyG/Z9iLhIg3Yf4c5pNuuD4ML+nNQiLLN9Z+aY+7xu8H/GGsItXI9KAUbtJrcl6nF90E7uAbMDfDueIp+HD0iLeySB1Mvt0vOkwRcCafMGLE4c/uFwk1LupjrIEDAN9iXH1+xfeoygFagKlDAYgBzmWyZNIEvOf7NPCqfnZBTJGsAZ9qQFogD5FJFcTvHjvt4QFHZkioj9bhfR/hAuALIlmV+BIlJ5kH+dloPJmQ9MlH68/sJCxZR91oe7OSP7NiUgTwp0B/K6E/p0H+dCyexmsK5H8J9u6Nkc/0OUGEuqqUz/wzJ1JViQe/kzL4czgGPyfJ74vGd1hkOP2vwsW2QO7tVBaZNqEQvgjPrzjJDLoMzy8U6awr8e0ipuGrx+jz6YQO/t4Vq/5wjPw7FECyyfDcL9/gZPrwXQ5wKEafFSImUEzA8U0sFqQ4+QzfTCj/Ni3yBPSKlf8z5QH5bjUO3xFhg5tCENJaEzcF1eBsD98UulgR5jHLKTsTWlQdsHVB6pRy4Z1Mh0lKPpVupolzi75gSRersqnoBKAK4porVrVJBf60K7Z+sNHjgzCneWvj43lMFlkrB+u+wKHyOb7EHOYKdqzrHHw8T7LjgDsUoz+QmuSkAI5JeNCfGGz3d0V8Nlw+rhZFgoCZ+Fi4va1fNxbwLeQsKMaqSS7aAbh5Xwwgw0+j6IDcWY1uUySD2PuTZ20upKdc3+7y0c0rGrMZiy1RIOgM/9MPiWwgsNXzrM2KhaX18tmJkT3e2awHsrzAzjfFULzx519/fPXgo8e83d2ojyLa3cCSZtQR4g3deRVnFUtd2aiPGP5HksynncVMI5cGxDOdHIN/rn8yem3qX35GW3kK+ku8ZpUdQcyg0r6DMejqMAYax99+9HZyc/Nt7iW13zrjHcPVpNyccqPx0N3E8pThK7G5T3nnPA3v4uA40VoVeUdqoEeViPb2SfIpHr2TPO0sBm+6oOv6e8BTNJhJpat1x+JN4RJR7cmv7qGteVu37IZeLS2UM+lkawZmbaep2xW9cabsLXT2Jl2IkgL7P1tu6E17WZ8tWfpyPbFmg2ZDr9hLumnVHXOp1DBta/OVGzjq+Uqvm/OWWTE9BRtJF6Zmz5Ss+fLma9Rb8AQv1JPCt+n+gC+zmTRm31gmVUTV0FBbG76bqYAepQfbQJ4yE2rgDh9YL0YDvd+H/qvhmx+bwyQO+BJN8etumMR+X2LNjQVu94GNGIma/3khrWnp9uVrssBt5A==`, `1,The Architect,TamHill,423802,eNqlml1sVEUUgGcLpT+WBOOaEELihSBBI43YChSIO8VSWiGlP0uhFGW329vupdvdZXdrKZCwD02MxBifTDTBgNEHE+ITvGBMB+ODLxIjaGJMsCYmWjUGw5PxAXfvnDO7M3fm7l7ZEC6l3z33nDPnnDlz7rY2NU3PZkkjWRtN2lZ3LpF0CnaiQJqi8dk+J5WincT90HYifSJ/TbmfyH34efHczwc/DZ/Hn+k2AMOtTY3ZPGki6mc13cz/wY4X+S3wC3pIIRvKf4UIG+UcO8Y4t4VI93n4GZC7VzaB7oRrww8XLnZs+rZkvMtTivrIcul+vfzIynvlz/uROx3uJ7JMDJ/G7sMHhqOtjaRJuDMLcEhlKVhJ+8Gxv61e8/tTqw4Ef2pbd8rOFaxtiUx24Znywz3EWjoJJsfBpROya6tM3rrt6dL/Iw/K1eKZTWUejTPxiRjnJ69w7gT15zEkhpWQ6DTof1J2Lp3h3qPr/PWnPcAPwLXZwKeLUvSL5X6JX5dWNv0b7dm+vhRynAd/0g6Z04Q05+Mg31H8GeN3LP2jyI8SPR9f1vPj8PvXFH0M/hdBi6n2uv/61h+8jw9nMrO9ufisnfeL4Ab0MBuTNaWvGDyYoXp+wKDxA9C0psatE9msk1iYcAp5N9PB5QxcSdZ4Mn1xUO+sEClc+1JTGS5SE79w/WsNf8Ey8W99/p2GXyAm/vIXOn5u2cRfu31Pw+eYif/s7goJ1R8crYOpeGEqk5u1OrRRsYqBaqyzRt0JkdFkJwmxM0WZHyC+vIhzzA+b+vIBtopozrbzBqsmIHax6uJGtVEbuyGKsR4DzsINlmsfkbO/wr8M1oX9+fqt2mCfLdg5J1OwEraTctLTeSuenrTyc4mkIa0dpXCBali4q0ydf6e/pDoUQAobCE0bC9f1G+8GWpDBeMHJ6BfEE+GoZW9Rferdm29XMkIUHzPPPpip8HRMySAv//edq/8vg3ZoTWuj3aDqUVDxNFy7iNY03DnYLlJr53ZNY6eB36c0Z9CsVcUa52GH9vDP6nmagk7iOJUzFa8tgu8/3FfinSvyUtKiydWcT4J8lAecp/No5P4Rz0W9txKTP7n+yO9Qcnc30S49NtM0yiS/4E7u8Q/ycXmTQH5J5VGfcaXy7dTXnvpDsbk/7daGnDYQm8UDceGp/kBSevD+PbtLimJxHJMDRBOInJ+iUgslTgsqv4bzDB33HJFaR7rHEOiT+lZQ0+Jx+cjvkuVqWk7OTxW1clH/yK2fej8cvtwl+Lg/v6Tw9S9kS+9cLu0U5nK2diWfoUOQ8t2gAWpu2L4YlpCw0qodLOq3u3RM5kEuNu8eHlMxrKykiY8p+oRr8ENyCRH2rjPYq8gRK2OSP80C8UwpZeKobpRvBeJZWimhFjGVUM7DXi345hrykywYby/L7cygvH4ee4/CFoPrjIdQUoPH+UUNno0Af5LJ69VukJ9mMo/x+YIpPpcD8Xgo9+hjkh8NyE+zQDybgPpwCvg+4p8vUB/EPAjzsdsQb9PLwXjUZ4LI+pjWdwx4WAe1snrjGdvzYn086jOm5PsBAz8D8k9ReUdprsEfUXYgk72zsL5Yp2vpc5rI/kc+YoifsNJKrq9Rr2Ysma9Zz5eDyYd4FnyN+kNtqAc4XOvx97/gB+vkkRuC65GiZIeRh+GP4MmjtnBrjznpycy8NeXOa7S7/xpRPYaofGTe63n6Rx8vlqIFspLFY/KRfKOBH4XoxX5xq3F6y/kZHH0C9yJcN3v4yWSiqvoNKEf+dv0JU4wm40rjjwOryvT5zUvpIN5+7Fh5Rm/Nx1Op/COPdflhpv6xLufrH7q5fIAxMOfrHwNzvv6hHufrHxtzHgYgFCvXoaJpGsFj5YzCY8yYeIxZlHvSaC/nld/TlCV1aFV8fiFf4gv35TMUkQ+XKi/WC9cJOlmT/ABzh8pY1zDjwiXEucOAvDRV51I+ictZ8sS6Xz5mVR3fFF5pzrs8vDtYqt+01eXJnf4My9KKUdhh9hn8j3MePPwPFU3xCeuldN4DxHe9REfWqcRDh4EvDMrO7Tfm+9k3Fqv0x7ieNtYTPn6dVs7sW2S71UVnBWUupox5VT7AO7NsJpOyUpnMTGauYIhQHNo58sQEN4gq49qTyUpxEk6Iye+Ulr65Nbx7e94u8TvPnfPhuzz8nkvFQBE6WDJO+xayIcBbyIdDh0tpBMqwXiUi1unns0HelZbfWpa1FDu5I/a1fcoMZaTof8JU8kZcewx1/gTR85hPv8613WhLj4tZSlTh2hX+xz/vvXr1yU+QF/PfQ8oMxnsC+ereL5WhG04GhJejnmLo8iwoD/nDcGg4apxQcB732RFlGAh1aunm7ZUH5//4HuV77G03FGec4j+PUVWUO+BuT167PAvIC322KPqH9ftsgNlXObWsvDOp3wGCfNfhYWKgqkOp/V0Hztf/XQeXD/BdB5cP8q2D8ncd4J0taWxtapnNZ9MM34ZG9XeFQqGSao0j2fh8urUF88efbnNpfDvcIt7ddfnd9ET1TZV7x+WGTX/vBs29QgTNwzklGfMRscksAi4toVDpDyH/ASpgF8c=`, `1,At the mine,Flerax,332372,eNrtmc1rE0EUwGfTJjHpwUuRggcj9lAKFmkqNBTcicZ+iaK1kJaiJrVJk7b5MElNtVBDaU3aCgoeRE/FkycpHkTx0P0HlILgOT1JFIpQED8u7sfMZmc/ujtU9pRHyXR3f3nz5s17M282Xrd7OpUFTtASLPgKiZgvlUzHgKt/LpaLLsAeIApsB4Swe3FR2B/oeuX+7sDr1kV8DTsQeMzrdmbzwA3UwqhvwAeQaGVxgI7jRwHD1p4L8oL97BeFrQID8ZyP3p7NZebTU14ncHOJiHiXW0W2dcs9bowRg8ODlcUFent4mmu1yDtAr5/n4RB6vi6ZCEPoGunZfhtuG/4aKmv4jR1dniV5ps6PkXyXrj0MnOZIftzQ/sJMgr9/E+t/JbXn9IOAn8O9Wo3Xr+YDhrygX8v3GPLCh5b3U+rH86WNwcEgVPoH8ddK+vodIg9gFtL5R82b+UfNG/unr69Phzfzz2HH226oX/Kn2v+thvzThys69pvxd89Yzl8xvwpXyfwKlg7KR0bmcf6qeFadv7L+MZLvNMnH9YTURg387wKT42HF+lDZktpB1fqw/+hscH3iJ69/eaBTsGeT5PtV41Xz2J4K+l4EzcdASW2/wDNwGOkrSysqvFQi/M/+anZ9O9F0kd9TJB77x4j/86m2v/j9i8xje8rSQGHcxD8T6Pka8ssQGT8K/wg8H2/VA/ltNT8KyPlqM4nPKUp+tkTH5zg6/hYln9mk47H/8HyZ8Ti+rPLqeDC1n1I/zher/A30fG3BGp8t0fFhyvHe2aHj8f5f6bWov0TFW63UGGAqMgIfozmNScqCXSuiUZrqznOZL199F6K5glD8aRQ2yQrTaNKXDIuh+OAphQE4SZfIxVfBV8qrCn4GLTJFTr/4cICPH97xi817q2Vt80g0OacclGxyC4dWBC4JyAojpFkxn70cBQyXl3YGbo4z29FJPgat8SgiqXmr9uDxYj4AjJwsVjwyPwPp+GlK/TGL+vMRcr5CJM/+Pvl3NHS6ra7fR8VbPyu5wsn0VKYohJW8rTTCqhFWhwyrI1JY+brFwFpuBFYjsP5vYPl1d/d6KZomX4nIR4F6x1uRAE3HQIzkIZs75GzvcNzuDic5mztM2j3CDLS5w5zdLp2v2tzhPbsT3+60gHanBbQ7LaDdUQrtzkPtCQ7/w+HDZ9Fn9OZVfBMm8/iNhjH/JhpQ8lUz/smVLgWfihA8/hlHwYvFjHUHNI9kMnHAeN2eVD6bNj3mMwxwAuf1bLSY9jAM/wfAP2eJUn8=`, `1,Bad Platform,RoctorDush,339433,eNrjYmdPzy1gYGXgcUpMUQjISSxJyy/KZeAKyk8uyS9yKS3OcDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQzsDOgAQ8Sh3wKFhgMmBl5pDQZGh1Q09SkJWJ3GwMig7xzHwHiARPUY7klF1YfkHrB6TPcw4DJfQMkQm3vwq8ftHgZ094DV27+cCQKz7C8bg4H9AwYcgAsW0wrGXKxYooYPw2pSgw6310Q0rbCoF0GlkdRbt7UhuAf00MxnwAgKFPUORKp3CGtAdU9gA4p+dPUHSFSPM3ywq2d0SFJAzW0fcIQPE8P/uUEg9dDwgWpzkIHSAlBaSO3wntvP1wFz+v85SOodcKi3//3mXuxC0ZUg9bOB6g+Q4B6IegLuEe4xdeyK/oYwn4B7voVLeD13aYepJzapMzIQARC5wRCUGxx6UP3KwHEAKnJABs11OFITTL0Dseq7X6CmDgZUfZjmR5CoHtVHDoZQWgdrbmPEUK+C0/2Q2OvegapeAUfqgMV2Twde9Q6cir9DXHQlYOrh6qB1EQWxzQgzG16Y2kFox+nXS0BlHEbsI1KHEQM7FztnbnFBHrw4isTtECYG1uCCxPI8Lk6YFbhVMzIwM/CAVStoJOcXVGoCNfkR1sTCIIysCaEXWjrh08vKIIVFL9yIA4TcDPQiM9yHB/wIq2ZB9+EBQq5kBCUYbD7kZGTkBMkCADX93/M=`, `1,Balance,GayfishDeluxe,358129,eNrjYmdPzy1gYGVgd0rMScxLTmXgdU+sTMssznBJzSmtSHUwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUM7AzogA9dwKHsAoTOd0CVYGIwMjJiYHTwhKqLhNJJByC0CJpBbAwaGhoMjHBzEyDmOVgyoKi3/6n4O8RFVwJoPli9QzxUXQpUXeoDvObD1eMwfz+6+ekJEPn0A8Sp92cgST3MeQdg7opkICp8DiQnEOcetwaI+nQFiLqwBvzhEwI1P+sBUeYfqESL30z87j9QK4AaX4TUFzeQFF/2L2eCwCz7y8ZgYP+AAQfgCshJLEnLL8pVMOYC5qQD0AR8wBOWB+BB7QS10hHqFBU0kxgZsn0VkKIGlvuMGFDUw5MuK8P/HX5I6p2xq9+PQz08i3ii5lok85OSkpDMV0EtDRwEMIK6t7eXlKAThAediYJGcn5BpSYoBB1GQ5DoEJTACEGkgMRQzYzh4KIDWAt4qEMYDhQVoKpXQqXhgJVh69atIPPwq3fgRAkYhv2wCuQxfo8yMhABEBnRkIDvIwkmIxQ7iVAP8j2izoGFaiaqPqQyBhxa5JQxRgwcXOycucUFebAwxgUYgZCVgTW4ILE8j4sT5gf8qnnAqmFJiBNWyeLXJIysCaE3kxgLpbDohRtxgJAPGRkw3XwgkhhN2N18gJB/wXrxuzmTGOsVcRsBpTgZGTlBagFOVTJF`, `1,The Ball-cher Knife,Nopples,245742,eNrjYmdPzy1gYGEQDslIVXBKzMnRTc5ILVLwzstMS2Vg98svKMhJLXYwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVMXOysBcUMbAzogA/GcEh1gNClDyB0CJpKJoY5rUlwnkNaA1Q5VFuoA7rylROyEMrTD0DokgUQOqwBXfnOeSVYlDPgMv3g0kpM5cUJuNx+fmMTpvIiKB10AF35vX3dQMsVINKRUGV2UO0cEHr/7Tf3YheKrgSG6pWrVxgOEFBuj1B+8/ZthGPCGlDDnQPN7WjKY9Dcjl053DRYNIU7oDrmp+LvEBddCZhymGmZsPBuwKf8ALHKmSDKSXOM/cuZIDDL/rIxGNg/YMABuAJyEkvS8otyFQy5WBnYHKAp4kAkVJ79QCLExgNuUJuhMrC4QQo1c3NzBrhyGwZU5XoY6UlDQ4PhQCWqqEO6Akpq3T/xvtuioLmWQOVz58/HVA4LDmhqRVK+YdMmoHJoVhFBUw4tA+yvl/Js5cmLhsVJwwSI212gyi2xFxkMjAwGTmEMB+qg0o5QU6Mc8JkOixNYQYQrThgZCAJGWHTDQxeaihz7/k0C89GjERHNRgxsXOycucUFefAU64fDFqBLWBlYgwsSy/O4OB0KHhChmgesWkEjOb+gUhOoKY+BCE3CyJrgeg8Q0guErAxSWPQijCDkZrARiriNQJhEKKzAJmkQNAlKcTIyAhEDADznC64=`, `1,Balloon Fight,MuadDib,288041,eNrjYmdPzy1gYGXgdUrMycnPz1Nwy0zPKGFg9y1NTHHJTHIwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVsXOysBcUM7AcKHqCawMaABhw8sVvFwMiw3sUPSZ1bA4S2g/JdoE74qfg7xEVXAugZVPXxDhDaBM1pCJf8/7GAgeEATD7GAcUdDgJQ85+FS3g9d2mHqXcgoH4/mnoYOFCP5h5M/0ZsLAbqhwXtypkgMMv+AQNWwMhABBDwTcxOVSjOTM/LTMtMTswr4WIFxklYw2icDFycsCdnJOalp+qBosJhNCqoFBX7J953WxQ015KkqGALAUZFdjE4JkYLqoHMFDwKIACtfUDxge4aBmZ4eMHCtawBu/uYIO47UArRCQ83E9R4RFfvQKJ6mP8dIqHhQL7/GWFpA2aWgwiEdpx+vSSBATNuGBiQwwjTKodMtDDyb0D3AzgN7j8JiTuYeqL94CABpfst4GJqnnnFBZlFqSkKSZUK7qWpxSUKRgYGBgq5iQUKCrB2hmcYAwsXO2ducUEerB6CeRrDUkZGBhEGbpd8hbz8EqAp2alcnA5E6BFmEEjOL6hUyE9TKMlIBVmvx8UJa4jg0yjEIOBUWqJQmV+qAKwrFUqLUxWANhKhUZBBOLNEIS2/SCETHASJJZn5eXqcjIxAxMAAAKOxKTM=`, `1,Balls 2 The Wall,Stashington,16171,eNrjYmdPzy1gYGQQcErMySlWMFIIyUhVCAeyGbiDSxKLMzLz0kvy8xxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEzFztrQTEDCwM6YEUXcCgJwGoVAxNDxMZiBod8BzDvgB1UedABCC0C4e9/qfg7xEVXAqr8AAHl9qjKHQoNIMphyjwZ8Ck/QEA5mmPsX84EgVn2l43BwP4BA1bAyEAAYCiAWczAFZCTWJKWX5SrYMjFigjuA24NuHTaYY9ZiEpGqjkZ2WlGyE6DO50Zl6dwpIQDllC/QaUdLFGVo0ctAeVkxhWyv4wZOLjYOXOLC/Ickg6ghjtGcDECUz5rcEFieR4Xp0MkAxGqecCqFTSS8wsqNYGaUh+QoSnegQhNwsia4HoPENLLCMrNUlj0Iowg5GawEYq4jUCYRCiAwSZpEDQJYSChOAAbqE+sgVAKABuvzyY=`, `1,battle for the swing,JonesReal,7205,eNrjYmdPzy1gYGQQSUosKclJVUjLL1IoyUhVKC7PzEtn4PTKz0stDkpNzHEwYQADGA0D9u/SwMD+A5TfUvXQfZ1INYzvoAFVyMzFzlpQzMDCgA5YDthAlQpAaTsoLQI18lu4hNdzl3YGJoazmxsYHAgo34+m3BMifKD0AYoyuOk/FX+HuOhKQJUfIKAcDiDK4cFw2RgM7B8wYAWMDAQAXMGBegeIhZFQAcGAnMQSYLTkKpgpaCTnF1RqcrEigtGhE5cNDjAfqGC4PGJjMYP9y5kgMIuQyxkYuBAOQLE56QAhmyMxbK7cOwtus0O/BSTsiA0zeBqEakRxGgMbFztnbnFBHoat6MYyMjKwMrAGFySW53FxOmQSo5oHrBoW/JwHiNIkjKwJoTeSDAsdig6QbyFReqWw6IVSAOYIjJA=`, `1,Battlegrounds 2,HeyListen,68044,eNrtVD1v00AYfgMKxi5JitSBgeFAHVj4SOnQibxEFV9qpRAiRAtCWNgJlvyl2FABAxmQQAgJ1E4g/gALEgsS20mdmfgDMLIgdhbO9t0RJ3HtVKITry055zyPn+eee+80Rek5PuyHWlMPQ9vs9b37rhGQBVAvmQ9XrCA0XVyEuHAeUtX42Y2r8YuPnz76fvHD3GMxxhMceFBTyn4AZUGkVwfJDwXbNHlzlFNm+fNUWgr2wdbma6DTwXGZ65FCcGmvGJzu8usizeuDFG0I/mnxvBzhXCF448ebqN42PvPnN5hYJcgpCaB9mv7ncNsL9dBye6Rl62HX6ztaGcroYeLL5jEckM758uPtzFze3To9nrqYaH0MvvllFXBtBC7iHIWX4cX2FaA5cFSP/e4snzzC4XiTix/PhT94j0Bz4ENmNhhcLtLXs3FlLRJAtW317oWpoOn/oP9B0JUVs5vOWab6ailjy+AdnHgesuBufAwkEbefxaZ3EG96Yeg5pMnO3LtmSlxsvnHxc5MP4wRZKiqeew4AzKxahmGbpKnbdtyAHa78kuyRN/oEM7yp8bIJZ7jnzrJLS3ausCYNbD3nPUL1Qdra/Ei/jXTTdPDinT8jmp7Uz4CqKaoT+C5a/OtrGQGwBAyoJHO85usbLqlrqujWKVgLmkrztNhlwKF4paUUzZMaI0VKl3k/Wdmkdah2PJ/8JWqqbEMruxsuQCWisa1CgoSFeWKMtg61iDUUCOOJ832HEFtQSziRHufRPB67WlCNJ+YImloqsfsPEHkiNQ==`, `1,BoAt,FreeHugsDotOrg,9177,eNrjYmdPzy1gYGRgccp3LGHgcytKTfUoTS92yS/xL0p3MGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFjFzsrAXFDCwwjQ5JByAMFgY04JDvAKFV0CSYGM5ubmA4AJU+YAlV7smAotz+peLvEBddCahyBwLKHUT/7n65e3kpVDkMHMiESkeimf7gYJCFbnEqAyvD+Q/zGODevmwMBvYPGLACRgYCAK7gACxcYIArICexJC2/KFfBEBSInLnFBXnwoLLEYRojI9CBrMEFieV5AFB0QWM=`, `1,Boat Fight,MuadDib,324929,eNrjYmdPzy1gYGXgdspPLFFwy0zPKFFgYPctTUxxyUxyMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCF3FzsrAXFDOwwjQ6H2xvADA4GNODgid0qBiYGDftABkYS1Gu7RpGkXt87gST1yx29SVJ/xDeCJPW//i8mST0QMJKi/v+P7wyM9i9ngsAs+8vGYGD/gAEX4GJlYD+QBzUuHRJ/CAceCIOIOIjgsJAR7CGG/R9Q5XFZyMhAEDDa/1T8HeKiK+EQCTWz3wJFAYZrIX4IGVJ+CMHmB4ch5QcH7H4YUmnJAXtagomGQQVZHVzQMqAdqhv3PwuX8Hru0g4sa8F+OEBAvQPf9oNpf/9ZwdTD1cFoqH5YmYtWgCDUG0Jpxwbi1GuhqoeX5WgFFDwOOCiOA/T8ORqmVAtTh9EwpX6YjuZ96uf93g0QExOgfuRyKDoAEYHRlTjrBDABUwcLWwc/BhR9+6HlPDBMIepnMpBmPlQ9sebD1B3QQ61XcDTgGBzmBZCmHubunhP41TNCGqxw/xKrHiP8DYgzn0j18AboB8rrcHj6nQoxxCEQkn4d3R4ngMMUPXVB8nHJAohoFtRqoQNQEbh5PQoQOvoA1k7AARloHENpBxmcaQjcCTgAFT8gQVA9xHw1NPNh7SIFaJrb77Z7jsBkFZh74P0vmPlK+N0DL08Iq0fp9MDKBTjNgb2TdEAA1b0OAgTco4BqHtx9uNSLoJaD6Pr2fzgYZKFbnApzD9x+BiLNR1OHbs/+bdByHa1TCI9XNH/vP3Xu5efq19eAZQTEfAE09Upo7mK1VH5wSGoLXD1a/MP5DBjugahXQ1UPdz/MP7ff3ItdKLoSw/0qqO6G6dt/ARqebGjuESAuPEnodIKGDjhziwvy4K3C4APYMz+w7yvCwO2Sr5CXX6KQm5idysXpQIQeYQaB5PyCSoX8NIWSjFSgxgI9Lk54sx6PRiFg6cHpQIRCQQZ+p9IShcr8UoXkxDyF0mKgy+A9naIDuDz+fy6DcGaJQlp+kUJmXnFBZlFiSWZ+nh6xehmIVSjgCwwrheLM9LzMtEygA0uI1cienJGYl55KfRexhQANzi4mVjmvAhhAx6o4GRk5QcMgAPDX9x0=`, `1,Bullet Train,TamHill,414747,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`, `1,CDball,MuadDib,256870,eNq1lkFrE0EYhifWZslaarEVepyDoBd7KAoqSKY1WKvkYFUUVHCS7CZjk5npzqRQBclBKJT+AT0pnnrxB3jpiv/BgwdRD4og0lMRvLibzFZ23HQmkr7s5WOeb3jn+97Duo5Tb3FwGOQvlSq42QROuY1rJVJBZ0BX6ARIqfjT76q4o+qnjz4vvJ56nNTolAJHXGeUC5AHusbQSqeHXlQtiyBV7+kQ2Jq/BhDnveM7Gl5WDt7fnr76rbSe4A/D3rHfyca/pnGsMIqy8Z23S+dOCy/Bryh8pQ++m7o9NOG/f3y8//L4VoIbzCCQMhManopGNs/ObdzdTXDDIFE+7X3ANSk80R6uBQjkUrdb4tvfn8V6jt6td/uKn9QAf314cv7Nl1d/aYP2BdzRzLxW1JhnNauz2YPALxSmbWWuk5nXe2H2VhJcy+uSwh+gbFzL6wV1XOljRsurCdfyajCj59XwVD2vhkHqeR1wTQq3zetgeL+8bh98Xv/pQNc7/2M1S8dcp9ASnCZ1eAv1cZ0DU+BIiUHKJGzhZc8t2PVMVBlfg8yHsuFFjXzGthHYgkfn2xKusTasYgrbwtrZJJHQZwEkVHASYEkYHb65iXI0KyhInRKfRAalbaNTbWBa94bvKH8zunhZ2OJjMJb6iRi6mfEb3KsS3IzSMZCpeG+X8SoLiGTWq8ACLsIaqdGTEjbwqnVQxiWDPGAtJr04xdZtkbs6odHjfBII+8XXvDguM4VcLvrAHwjlO14=`, `1,Classic,Crabiki,2991,eNrjYmdPzy1gYGZgd85JLC7OTAYyihKTMrMzHUwYwMBBjwEF2L9LAwP7D1B+S9VD93Ui1TC+gwZUITsXO2tBMQMLAzpgRBdwKDoAoVXQJFgYDthaMti/nAkCs+wvG4OB/QMGrICRgQDArYArICexJC2/KFfBkIuVgQXuIE+cTnZswO5ksEpGYp2MbLMR2OZMqPmROG2GxQulNgsibFbQSM4vqNQEOyAOanzSAVwOUKGSA+QxHIBKgZxzgH7OUSPgHGRX0S+WJHC5CuwO+qVTzNTCwMHFzplbXJAHC40DnjiyHSMoJ7MGFySW53FxOhBSDYQsDDxg1TCvcjqkENbEzCCMrAmhN46wXiYGKSx6EUbkETaClUERtxFwkw7EEQ4rJnTfH0ghrIkZQ1MeYU2sqJo4GRmBCADleNIM`, `1,Climb,Fantao,31,eNrjYmdPzy1gYGZgdc7JzE1iYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVcXOysBcUMrDCNDlkOEAYjAxpwKDoAof3QJFgYug97Mdi/nAkCsxz6LSA2PmDACjDNhXkBqpGBgdUtJz+/iIuVgRVm14HSB4R0q6BJMFHoKiV0V3EF5CSWpOUX5SoYgZx2IK0B4rQahUHkNGNwqGVCQ63RYBA5zQTkNJjCA60Og8hpFigR2jVhEDnNEuS0/dBcewCmANMIT3o5jRvuNEMDcGLLh8TkgU6GAQ82JLdBMkLZBUJmQN3k0KOA7raIjcVwt9lfNgYDXG5DsdoQnJoGxGojBk4uds7c4oI8eIKIxBGaQPdwMbAHFySW5ykYcHHC1OFUD4ScMPWGQPVJBwiazwFTb8TFCfc1HvPZYeqNuTgPEOF+Nph6E6B6ItzPClNvClRPhPtZYOrNgP7NJGw+M0y9OdB8ItQzwdRbcDIyAhEAjbHfyQ==`, `1,Constellations,iRedi,495393,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`, `1,Cosmic Thunder,raspy 667,866659,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`, `1,Counterblow,ProBond,302013,eNrtls9r1EAUxydtl5AsKpUePI7owUOFBXtQLxltQYQKooKseDDZTncraSZMst1WLz0IeutZT+IfoAf/gQH/AcF/YP0HxB8HLR7i5MesNt3ZyVAJLPSxsJnJm/d9n7yXzNim2d0MQQM0l0k/iDH1fDIA5m1KrpNgDS2BzNB5cMCcL+uZOV+L8bMnn2+8XXgqxuhC4XjCNhthBEyxEAWv84smKBm6UvwvlG7MADf5wefvsKr+28kqn/cq+ydvUn8fVvX/nrh8nlaO/3M14fODsKp/O/VnmrxMk5dp8jJNXqbJ63x7mdor59OlzJwhkJnd+NtQ7LihjhvqvzYUGSoaSnzk/hHkZkgbSurvafpLHrDUn2rGlzxgmT/T5GWavEyTl2nyMl3evcv5/WoNhZaLsCIt41BD3TzYwc7+2d/3Vi6eEW/gaLcVu6xEcBQYfXi+K3ERsdH7F7lrAXPt7umP2bicbcbApoqBjWVAD8UsLEmJgk5gyL5stdahnG1eh6liYGMZUHdXwoD2kIoh2zFqrUM527wOU8XAxjKg8JGM4Z2SYT/dWWutQznbvA5HYfhVNwMby4D6UMZQSE1geFB7HcrZ5nU4CkO79jocYgCWbVqbURiMoj8eSuUbYL5N+rDnbmFIcUT8LbxmW+LUJ19pgDkwH/cw3AhiSiBZh3FvI7ItplrJRefAyU7P9X0cdPEijAnkgp5acBaccjsdHEUw1Q3wdszlPLXcLLBhFONwEa7cusqlihPYJKkZ0Bzs7ETYP9dqtZa4jGqNkR2oeHCq5jCAeR/zhGjAA1N1/vxnGYaVXv4BI3DOTA==`, `1,Cruisin\' 4A Bruisin\',raspy 667,874414,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`, `1,Curse of bonk,przemek1ni,8899,eNrjYmdPzy1gYGHgdS4tKk5VyE9TSMrPy2bgKiiqSs1NzTbMy3QwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIU8XOysBcUMrA5FCRCJSKgEIwMacAiE0jJoEkwM/9PCGexfzgSBWQ4KUBsfMGAFjAwEAFyBQ70DhPaECvC6JebkZOalKxRlpmeUcLEysB4YAq7mgbk6JzUN7GiH+ANgiQMyuB3tgMvRcf+nIBytRDVHN3KgOloEJagVcjNTUnJSwSE+BBwvhRziULcraCTnF1RqgrwA03cgUQGnFxpweSE89j/CCyJU80JTAaoXuGBeKC1AdrJDHM5Q98NeEIDSecIdhJM5qOVkuMUwJ7Pm5peWZKC4thOnJlgmwXSt39kjDPY7Ia61v2wMBjDX2v9U/B3ioiuBUC+g4QGM3tQ8haSc/OTs1CJwBDuUQkw/kN2Ay349HKEFVskICy10+zEBexIwnooVrMDW5jHQy1oOqLW64CxJP3s5YfZCLKZfOHPBLUbNwvkOdLLZGmgzAwcXO2ducUGeQwmhTAKCrI55KUWpXJwOBQ8IqmZiYPVKLM7PA6pOgXotEodqoAeYGVicMnNygIojCStmYWD2ygc64wAhtUDIwsDunJFYlJMJUp9CWD0zA5tXfnFqQQZQecEC/L5kBOVuNpfE3MxEoDcPEApCRpANINMzShM5GRmBiAEAIM/9mw==`, `1,Dancing in the Moonlight2,RoctorDush,351175,eNqtls1PE0EUwN+StksrfmA4aOKhJj1wsCQiiaiJnWoVGyMHBMTEGArSbqHdbdqlBT3YxEo0gXgkeJG/wGC8eGNunjwYDx7VeNGLcvCg8eJ0d2b2s+0gvMtmdn7z5n3texuR5VyxBEE4nsqos3k1F82rUV2Zi97QNLWQzyn6IETGtFldK6cWKwoaAkNQDByS+JE1JLFD1437X0Ze9j1ga9RPwe6IHCxVQMaTdWONl+lGCNE36PFv8zlGj446r4IuuLCyQk4q2NzP1p38gIffGFgHCV8HUf7yp0mQuD2d+Z/frhG+iET5K/pXwtc2Rfn3V5MgJb5vNOV54sMZQxKfwVck6CgSCp/8O56KH0PL/oAnOz2lQkbPauViPJtfigRB9hwJ4TK1PwVOf1SPP6d7j5B8zAjzBw/FLbcE+LODvcRHcf0H+vsIL27/+aPDNns0MxFoNer7aRC+GXLh/JEDl0aaIUZP2QXIpsj+SaC70OrKqVcVWzpTYvz2jnN/LyWW+ENLjHWME+Yzuf5Rn26u3d4FqkWtavj9ELl2eGiZrkdb/n6ETD8YjwV5vLbl1J9uHyfGY0GexZV3x/2I621/wBO9nuzinFJeJJ196dSyEd8Xb0xi3l1XXEcM2saLc+NiPK+r9N7953dT/9E5V125vQvomQW96Tdrara6WlOcfj+ZapVHc+RUsZNfgvY8rRNP6/Ly717XrSWP17Phdvr3cyQAHOYtnnyH5EfACNkqnbEF3EITL4HJutvEt7/ukVRTE1Hf3lPPpxbr1HfMRCYvNozLPdYGFNpSPLq6cY22iMaOs4Rp63CnEv0nz4qN82n/VOJd8ry15ylXrTvarI2fmJiwjQJ108nHfHkJzZuJwguUm3G2YDePd8lvs5LtOA0DtzKFAsgROVyslFSR/tAFwZulTE2NhFlV4qFWtAQBi6Z/Ymxc+tFBiy5Rj0db0yFO406WEMMtS3AnSwhtWYI7WSIBtyQsSeHm+h/4bEAJ`, `1,DEATH,emil900,1039,eNrjYmdPzy1gYGFgdXF1DPFgYE/NzcyxNDBwMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFslzsrAXFDKwM6IARXcAhErtVDEwMZzc3MNi/nAkCs+wvG4OB/QMGHIArICexJC2/KFfBkIuVgfVAzgGw8IGkA7hs9qS6zUYgmx3oZ7MgwmYFjeT8gkpNZK87DJQDHOjnAAkMByC5A6YIFiBY3IEjoUNUMpKTBoyRbXagvc2IKDBGTgORdPM6fgfQIQQkMByA7I5MugUEUe6gQ3jI43IHsnOKDtArWEhxDh1CR42Ac5DLsYHORA6DJBM5DJJM5DC4MpHD4MpEDoMyEx0odYDYmclAa1fpEucq5CCDOu5AWsMgDDI6uIqCIAsZhPF5gH6OMyHJcVgCEOaSwejGA/RzozU5bsQWnHGD3qkH6OdUJwqcii1wM4eCixlYudg5c4sL8uAdPzvsdoHcBvRdcEFieR4XJ7yLkOqAUzlCtQNRqnnAqmEhCdfkkIBdEyMjI1CTMLImuN4DROmVwqIXSnEyMgIRAwCNVclU`, `1,Death Valley,TheAngryBull,574754,eNrtWt9v00Ycv6C1IWlApWJSJ1XqFaGVDchWWsoKiFxL2ihbi0rpmFoewLRuktWJvcRVFRCb0Vaxx71uT/0L0P4D7n/ggdfukRfUV7QXHPvu7LNzsW8/1A35HhLZ/tzXH3++nzvfnS+bTlfqBugDuaKqmFV4V9E0tQ1yq1V1tlFptud2NA1NAaegs4ArhTdbTikckuOfHv1Ren76MT1G5wjww2y6z2iBNG7s8xFySEfcCfQD4v5ZOQbK81dACq25h3jnwMXVulMDKbB2p2j/BgrDh+PfuPqZHZ/wYf8R8fFD3JW3CM+uq/H4o2eGe71NcN993pv/k9/d6/cDz1F2YS/ejv25Wrw4bCfcxX/v5gqvExxN9RToHv+pJYf/8Wc5/N6BVH4Lr3/tlN8KLyedUjgAgpKdUza2K019p7GZ7QNpZghqwIGQVVpEyhUcpOrcH5OazALEmmjZPV+gUh8DI6MT3p3i4iX4dPDM6pSXqNXayKWlJR9eI3xuCVPj8MEf0/j7XFzW+l9z/L34xi8u/rSQz6vZRTv1IxRvxcMfp3iiy2BvPB6Wi896uUhr9ZeYrVi7LpJrH4TSSNMyErjQ59zbk23WksPflsQHW6QAL2phKEPS7bWwZU0xt/RmHV5ypPiSADdJp3/8/y4F4y3LR5HD0xYeO/6W9bdSyV4KrJzyUgnPbehG+5NORjE1N+nB3l9zh0t3RdhzU2/nQopE9WLk+ovDmPhArxuJvyDJZ0oSPyOJv8YrFom/IRn/K+IUwGdeiJ+T1LNoyfEpBfgM98ZLDGiYI6edxtkyEismVjwSK3qd47Svc0T6QeLIxJFH4sjhkCP945jFwFt7IDHmERtT1mjzFo+PMA5d/mB8Bv/drg83yDh0wRI5rMw3Qd/sv3rzvD1bHQRdF0zYbNvD7319xZutMuXyvfFUAZyPF5/Gw2S1gjpIONsm1/FdKx6enMdlHifETwX4TMaMfy8eH/SFHH+mzz0ravVF0mEDy03VNNtwtamqjrfqD/je60TSeyW9F+d1ev+Y/OnKXlz+/9BrmK3tJkZOjPwfN/KoyMj+lz79NjPjX2TinjcvWI7qB8XSuq3Pp+QlEnzuMP/igg+PYuDnbTyWiO/Hx40v81Kjek5MOtrRjxZ0wJRoJ9RuyKed334G/2kxkVAs4UdhCbmGTMZw1QeJkhFKQqGSXaZDiaDRgo5HCeofQVFdydf+RFexrvmYuvrlpT3qeiJvlLyX5eT1q/wt4lZEEpXFKl//Syp3+2BJPqj6zgQWgqK2RbCx+7QQz+3Aojsigsn0LTRx20DQTfI/wYtZ8HYwuWN+STzjgwJ8QMhcPJ5uZzgTmLUG8BLjuBX1Yl3ZVGFnjx1c1Ct6HvRn05l6y2ggDbqWm+leN5VK2Q904o7ebLahqcNtVTWyGbo7rHetk+1xxb7hrlIza43KmF2NpCai2jdKqzFuwrqybVeD2QyOVW2orhgtWGtABe5Wa5qaz+ftqqTN966am9sxYbkOHyob2zZNOiyLoLmsteCKYqqwpOubY5lUKtPZF/AOm+3qgg==`, `1,declines,JonesReal,151,eNrjYmdPzy1gYGTgSElNzsnMSy1m4PTKB1JBqYk5DiYMYOCgx4AC7N+lgYH9Byi/peqh+zqRahjfQQOqkJmLnbWgmIHJIQ8qkXQAQqc1oPDtX84EgVn2l43BwP4B1OBj4RJez13a4TYzMTBEbCxm4ArISSxJyy/KVTDlYmVgOkCm8fsJGm8GMh4m6+AJpe2gtAoDftf/VPwd4qIrATeeFcP1DFxc7Jy5xQV5B6BBfSCSAStgBGtnDy5ILM9TMODidCBKPR9UvYJGcn5BpSYX54FMQtoYgdqYi1JTgGqhoXogrAGPWi6gWoTxhRClB0LwGS+I0ILQWQK1LBCfZRIYOuEGOBAygBEUICxJOaWpQMWE3AlWzA1SjLCAUHCA9Qgh6UFoJRTqYK2SmFqhFABmiZg6`, `1,dfsfsg,Querp,656349,eNrdmM9rE0EUx2dt4zZpDlarFgWNRSSKtU0tJb24T6itjQZbPYgUobVtisE2oamK9pKD0KN4EkUP9aYHIR69ZEDw6EWJN60XpShS8B8w3X0z2Z39NRsaIc5lSPjO2/m89/a9l0RUdX4hT0Jk52ymkCnMk9DE7bmlPAwQfcFRYlna74y+tE38/OD+t9HXnSvsM8RRuC+ihvIFohJxKeIX8DDp+KiqMh49RBRt48nWeqp9PK0vbZ24rPbxW9PLmdzSQqy/PxIiKrxbLeqWp8AQtLo+G3e+dugX4HelWbDqr+H37b++XF/b+7KqvxjrIQpl3+ec9eX3V7tSP4ZXq/r4rv01X9AlatVPFA33Pvo68uLy8yFm380XWgXtOvgikTD7gp5BQUuzsAG7B1+7TWyx+Ewuf+/4FiIP6piIaAv3ABHDraeaTZ8yrgon0M1r1ivb9Phk6LbZf3MhWz3/3Xh7WKq7pbJCfBeXAHPvDWM/+/jz8pTDnUiEe23I7K3aHSm7fRapL+HejwH+dLD3zrPNdUYPPnpN0Mu/yFF+1WQsrWfvTUHBQwuz1kIFI5hdbz9s/Fn5WXENVQL3YYQTQgttmL1zxAIFKedUkIfrqmUvJq8ph+k/B6U+oOW6QQ+7gZp5sXiwIuLPW3bhZQHjvOeKjoGCTuSdoZZ3G0bRfqkhgYWGg9oC6wOqlRoaWFaW3HkHhUQuORdXYPspxuucmLzfzAr+YbyvrP7cXl4IzFsOyKsF5C3XzXvMh9eh5/LVSnPYBdhYMY57n0sX8dGLXQRmEHuyKGWf+ujr71K1hpp2cwU+Khsz9rT1TS9X+MSkjwfgo9dEPbZ8Okml7FMfvWi/HlckJat6t7UriZOSrYtJ6qmk/W2q6jZ1CxVBE8JbL069mwJon3e7toGeFKpc3e26wwbqTNi8oaxlaUKyJTcNmnPwJKbJpiGUasL/EW+AJiwxezQNdo8cdrBJs2noBwLRe5Vp0695kBs+fPT1Dwcdpl/zxo1JW0QNLxTyiyxz2XBm+5dDUUiIhK7kp+8uRsJUSh3V1cw3YV7lzxOPQ3vMh/hZHugxr7MHHM5yE6wEe5s44m7CbikLHpbivpZqnpEy2Ctr0O41T7uDAe3iFlaU8Nb/sn8Bddt4CQ==`, `1,Dib Pong,MuadDib,240064,eNrjYmdPzy1gYGHgcMlMUgjIz0tnYPctTUwB8hxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEXFztrQTED24F8B1QTmPdDlR6AGg03Ckrv/9Wec+PTwkQGJgYDhzCGAwpQkyWwKz/Ax8qxZNkRMahyByWocgEcysWTdfOypPdBle9H98cDBqyAkYEgYLT/qfg7xEVXwuFwewM2BRhBwRaSkZiXXczFysDmgBFM9oSC6fuezvNTd1yA+ZtQMIltKFkj9HAmLFQJBRPP/OnyP/zPDkAwYQQFjwIIQBMmKLBgAQlzLAPTAS+o3gKIjIMjxGgHdMOZGJY6eiFiJAXV1+ipHeIfRrJ972BHdiKB+40BOXkgfOwwbHzsgNXHRFhlidMLf/7vRpRUhLxwQAQaNCJ4Ui2ykxwCG9Cc5KAHpXWgdG4CJI9Cvc7ACo6E/SdngsAs+8vGYIDLSbjsY4KL9FtAI38ChO5RwBfpDpmoznJIc8CmHOYcUp1X7wALyTLUCIZXIlDnotkHT2Sk2XfAEz1FHEiDpv3SB6gBhuY/WIog138ONPMfAycXO2ducUEeRh2BkbYZGUQYuF3yFfLySxRyE7NTuTgdCOkBBpQwg0ByfkGlQn6aQklGKlBjgR4XJ4YPMTQyMnABA4NIhdxOpSUKlfmlCsmJecTq4SotTlXILFFIyy8iVgtPZl5xQWZRYklmfh71PSHgCwxTheLM9LzMtEygR0qI1cieDKzM01P1OBkZgYgBAKYdEzw=`, `1,duck and cover,JonesReal,366,eNrjYmdPzy1gYGbgSylNzlZIzEtRSM4vSy1i4PTKz0stDkpNzHEwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWcXOysBcUMrDCNDnFQBiMDGnCwg9J+aBJMDCdt7OAucOi3gNj4gAErYHSod2DAB+AWOxxORZXhCshJLEnLL8pVMOViRXJyzgFcTq7EHjpAJ69bWYoILFjgPCDgIri5UD/CaGSnGaI4LT+BdKdFScsQ7TQGBkGEzQoayfkFlZogBxyAuTASpx9g8ZWJ4YCIjcVwafvLxmCA2wGcOalpJQrliTk5IIsdFsYQCjy0hIJucSSxFnMVZaZnIGxGT6dYbO7EmxzsX84EgVmEbeaAhTk4qEUgggeScdoLVeHg3YCRc6ztcNpr/1Pxd4iLrgRCPTciro3AVltCrfYkaLUJA2VWCyFZjZTOYNIHIqnseUwgiekCKMXAwcXOmVtckHcAmpYdsnBkZEZGoJPZgwsSy/MUDLg4DxQdIEI9H1Q9zNucB+wIW8OCqc2BKG2iqNoQuonyG07dRPlUBqtuhCGRDJQbcoAoQ5TxGQKlOBkZgQgAEkTpJw==`, `1,Emergency Landing,Raspy 667,830018,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`, `1,En wie niet springt...2,Querp,408447,eNrjYmdPzy1gYGUQd81TKM9MVcjLTC1RKC4oysxLL9HT0zNiYA0sTS0qcDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhSxc7KwFxQzsDOiAEcZwyDkAoSOhfBE0lUwM/+/NZ2DYD7PqsjEY2D9gwAFYnBKLU7lYGdgdkhTQLHVIOoAi4FDwAMXS/Z9ddqgzCjZiWAqjcVrKFZCTWJKWX5SrYAGy+gCG1QcIWG1PttWCCKsVNJLzCyo1QS7AUMbmENaAGtJ++EP8AInqHRIh6g/YEWk+ieod0iEheCCFSPNJVE98CkNEthkDBxc7Z25xQR48tEIdsOphZGQE5jfW4ILE8jwuTgeiVPOAVcMilRMewG4NeDQJI2uC6z1AlF4pLHoRRsDCM/UBHiMUcRuB8AhRJmkQNAlhoAs0arPwGahPrIEILxNlrhmJ5kIpTkZGIGJgAAALz9q1`, `1,Epic Arena I,Mad bonkio user,996496,eNq9lk1rE0EYx2cj280uBQ9GKJ62kEMUWmkaJVB0n5RoiVpFjRZfadKkkpYmS5ZS1IM5CH4DQW96ULwIfoKMn0HwKPUkokhPgnhxd3Ym687uZGfx5blsZvOb/zPzzH8e1tC0O1s2UtHkKbuzZlb67W7DrKH9y42W2ex1Nzs9c9tp96GESEAehcL6tk7C2qPjh/c+Lr3O3WdjKFBQNzTVdpCG+FD4F/AAQs9RZFBx4QJSrM9PvHhqvZsnYe0iQWiL7gbMxSVDRRruUPXNgf/DiOS96v8DOcTnrZxbd9/XOT4fXxJ3R4THK5gMcY7j6djafXupPOO0mT6+7u8Xzwr4PY6/4a8XnxTwP6Z/1qszUyP+CuXLlDsxdv1KhC8KeXIu+Lw/xBVaR7aucmQ9Pk/riU9TvpTAs/3WEupP+SGzZKJPMs6cZxH4Y4vglBaBBIsMOYtAgkWGnEUgpUUgpUUgpUUgpUUgpUXgH1qk6FlkdLB9kwnxFqkLSxDX7BBcHIwtmXy3y7TmQktcBVGDraF4F0+gjcfP3WrIp2zOk97ahpDNYlLW/15K/67+15Shs2fmQhnsrIZTXhNcrwl6vVLy8vZUdsg5UA/hDQrquMQVhV24LG0Y31emznyqPnJ9bL984/bY/HjeCviex0eKLtYnPKTUB76xFDj9L18/3Hp28NWIPxauKBzh9N8H+i88vkr/n+WeovWcHUjzRJ9dtQWuIWUjDYnw8qbct9zcRllD07ccu8s+blifjH5jKe4XnnrZbux0DR23ZOhJQpuFtZ5997A76bbMpAO/TxrNhaS5ro9UdChmbiDRkpGYFksESh0ZpUKiUiDIPHQTjxE8KisYVDxJl1T8eEpd+tAVRfcW9gs+SZQZ`, `1,Fallen Bridge,GayfishDeluxe,940932,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`, `1,Fan,MuadDib,219505,eNqVlsFrE0EUxidukjVb0sQmaj25hSJeWgUrFC8Z20VpMRBLQEVEt+luuoTsbHY2aurBCkJRvPoHeBEE6cGLHgpOKfRqQfAiiF7sRaReeqk1TpLZwGy7mfbtIczu7733zTezs1FkuVx1QBRIV3QbyPm6PqdZs3AMtAMOAy5yv8125LbY+OnCj6vL2Uf+GJ5loKTIMQeDOAhGFrpqB7VYSpH9GpAnj4C3k3kAa+nO45uExyeYgi83Bqc3tSUfrzCsDHn8+mIH/8njs0wMusfjU6z61urM+Ag2GE4EOAQ8LhADpRcXLz+/ve3jgqnCOKedCIyEiaGdojYyGKhOwqr3/fp259XxNwHtJEx7//tVc/ffpYAzJOiMj6c5Z6AIz/55vT6+kQusaqiYE/yqiqZ6cuXZp5cfNnycGUkOtiPJ4XB4iz2uFXh8km2xbX5VRfgOv0wMJ0HcLzNwZm3l6+ZyQEwonuF25Ef/Nf98oR257yAkkmo72PGhxPZ586PwLm8QnCH7HjK0+d/mO0AOh3cxluZjfloITg6G+07AtaX2lvOdyK2z1WMRAYLoCbR8I9Osk7kYktGVOryn9jmtGCp1j5LuwTHVS9NRRU5UsWNDxIwaC5tYBGRBn4ZUG3lqVa8YSgLWzvfOoXPLgHQJOQ0Vmao3b9BEZ1RJEFEzmjhA/UoQUQd6HQOpibqnNlBdLem2WsctZS4R5qVBxvJUE7mqZWPHcnXPQnZLnCiXiku1xEGvIAT7QTpPvVKxVbYt06ICPdpBlEivJJBL87pdNkYTUkR5IsmlBTxkunrVwEWkGR6ydc+QHiZdfc6q49R9w8VUvtQ4VdIdr+4a16yq5Z1mg4KLyq6BcQo9sA13SovSPwQxGO987GOPm81maxPRuzK97w9p33iySDVUMPgPGYA75A==`, `1,The Fight On The Tower,G3nius,610164,eNrtmTFv00AUx8+lTuTAQqhQyoKRIlqGVmqSKu1kD1GrAiqlRCqBqmpakibQJCYpilKGZgDxGcqHYGBAYuIWhJAYkJCYYUIsiBWxYDs++3z22b5ALSviPFh2nu/9/vfenZ8viXh8r6EAHpwv1iriUn2vdiDeaIraRbHVrbRBbDnbrD/qyDmgNzkNbE36UdWb9NO4fnL4dfnFxGN0LU8bhlOJOK90QByQ7RR5Q+4Z5za0/zAGXr//CDhYMn6vE/YEGuDAq7cfVHujH/lI9rN/Cd8BTvp+rLXn0qes3qQvgNJOr+2XD6qtdkPMzCd4SxsiU3ukaSsBUttGcZXFdxLzLU7vtpTeFQ0BdSxvUREK9rPZYn+BkMcQYIgIk04EnARFPgQSkUqCRydEoCk/IJyrF17IZgNy4XEMEW+eDQ8fxDox+2MOSjQzmo7ZXynfUe9f69vtV+xnTJVmzyF7uAPt9iV3e4jsiX597evBeNAlbBJ60672IHhUEmZU5vSE+D/UJzbUZ62hxpO7JZPjSI44Ip51EGzeXneZskt9GvHR4UOWKWslR0ZPjgijWoObwQf3HhHsyBPDCBOnHMQueWy+SljAG7UyE7gu9F+BowK82mcHv75SOEnwizRwPGO64sDbfTly/Jd9+PEwRFjGTDAZeFBQ2dSKnpockxpcVISneJCZYtaRRqkRpbU10EyPMD/LTN/dHjjdh5FLIwYZMMIy2BcsWRl0Breou0c3DboJR+H/tL6mFtoGNSTVA4ea496mWvivEv0TG2FQuPS7WJhJAX7QP0299Muwcylb87q0bXlkpFlFo21jaISCl3IoxIWOUCg9haJXFaRveNK/S7XFZagtgAX8LROGayudF2ybeYNSEKJS0EmQtkfDbLw3gfR5I3X1W+GZ207z3GAD5G4/NN9JzDcunxkBS0JPhDdBESBzBIZHmHQiYCSmvxB2KLF/HfK2mfCgT1ttcpRcMN7w8jpksQeQ0X6YmbbotsyMgEJrGVu0SaOncNG7PBsmcbI5W+KE4DuJ+TYiC2KJuNDoKE1zDEruz3Iq1zjgbynlbjMhoG9VL+sxcEa3RjkkoG8Rr4d4cA5/yHwW+uGpxzjpEPpRqscYzaEfrHrw4ILLs8ZJ4DhBU/QHm6oYeg==`, `1,Floors,Gladi,216374,eNrjYmdPzy1gYGFgc8vJzy8qZmB1z0lMyXQwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIXMXOysBcUMbAzogBHGOJDvANHSbwGhPdFUMjGc3dzAcAAqbX/ZGAzsHzDgAFwBOYklaflFuQqGXKxYbOY4kHQAYnMk1LEwWgTD5iX9aQwOpCmHmQ4DeJSD/OVAmnKY6Q6kud2BNLc7ZJLkdiKV29+cCQKzSIlCI+QohKWu0SgcqCgkPhcKIqJQQSM5v6BSk4GDi50zt7gg70B2AyQ24rBrZQRCLgbW4ILE8jwuTgeYahPcqjnhqmFmO4TgVs2BYbZDWgNO1eyYLsHlbmCZxoXhEpzuBqrmxHRJCG7VHJi+xOVuoGqYuzkZGYGIAQDxmax4`, `1,Forgotten Floors,GayfishDeluxe,532611,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`, `1,Futuristic Slide Thing,The _ Llama,308681,eNqdls9rE0EUx2eTbNOsSHsI0oLgFnoo1UqwpVpqu2OMSksQaSP+OChLsk3XNrthN7G2HlpBKvgf6B8hiCdPWVH01JPguV4qXiQHEYqHOMnOTrKTbGbHl8Nkdj7z5jvvvZ0dKR4vlspABKeuVytVS7crel5e3dQLmpxb140iOJFb1+SHcnZTLalwBrQMngc+U36ttUyp4/7zne833iSfen04gcGoFBfLNogD2gT6AdyFvlY5Hvuby0yNgEgLF5Sfr5r2Wvk63TLlEASYlFbzG0XLrBoFSWwv7ViO+4c8gfgJ1PEu6pSnCLj71kYzM/155fOdkeUfmReIbzzaQHyOwX8j/M2DT4h/wOAPP6xcmrI1xH/5XUDjDD21tp6Dd3tonKGn1tbz8uMyGmfoqbX1zO/vo76n8whXRUBqBMA0gsBt3C71Bkk2Y2lza7OZZ4dSC852lZhXzeNdq9Ybxz1K8kIg36yLttZhf9V765ASFv3+YQq3yb51J8BJzA3iVvb3a39I3lq8w+AViocjOJa4Jet5MQY4z1i/w+BrdT9PcnXOv18IAvabouIP+vMOJ0+vT9rxXlUoCA4nD6hxchoOdulp8SRPE1SevPfsCOdrAOth8ArFEz2T4fSTU5vebzIg/rw83HPHMejVH9HfPvLdevP4+d777fDv8pcBn/85zCkh/V/E3BX/ex/o3zs/FkP6n/lP/16cWP49Ph2ST1HxBAw9Mp9/Ujch80XqK6R/eJrT/2Tv+Ad9L7p41vuV4ssvnObkZ6l6HmbEZ5bT/xwnv8AZzwXOeEI+PeGvkJ13YBCR4omSXTbgPfw5Wwy4uyBZIkiks7fl1bK6ZUgJhzUD/dCMlWsZd0YiKkjPovH8jh19ciavltH9XLtlmUVLs+0hc8vQrKXMSUst6FV7bM1SS5qdMzNaxTTUijb0WLNs3TSi26N4ZlYv6ZUYiAFxt9FoNPcaS3Z2gKi8dwOC1h0YverOku+bhgbAP+6Ltlw=`, `1,the Gap,Querp,632380,eNrjYmdPzy1gYGVgL8lIVXBPBDIDS1OLChxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEbFztrQTEDOwM6YEQXcOi3QKHhgAmsnNH+5UwQmGV/2RgM7B8w4ABcATmJJWn5RbkKZlxAHx0oYcBiIIrVMF9yQH3zUvF3iIuuBFCl0827CHUHohsIqX943RnEJ92phiCnOpDs1P0Iq//Pn0/YqUjqnW7cJcWpgginKmgk5xdUaiIHrkPJAjQXExFYqC7OJqi+Pfc/5S52INnF+9Gil5CL95PtYgkMFyM5HHcWcvCD0kUHIHS+A3oy2mg6GeEQh8PtYJfjcghm3hRgwMibiKRrysDOxc6ZW1yQdwBq8YFMHAYzMgLLGNbggsTyPC5OB6JU84BVw8KB0yHpABGahJE1wfUeIEqvFBa9COs9GYgwQhG3EQjHEGWSBkGT4AbCkyUeAxkZ9Ik1EEpxMjICEQMDACqf+TQ=`, `1,Gemspark Cave,G3nius,1103560,eNrVmn9Mk0cYx9+igDDcUDEhbpHijFYGiKVdgYrvgaUUQQUEHGEqVKgCAoWCgLrZZWrVbY3GGN3UTLdliduckuyHbkv6aoyOLWbsl8mWbEPZZtwWx7LIps5lL+3d9b1r37e9Lsvi/fPS8r3r87nn7nmeuzY+NnZdm52L5iYXN7U57A1drerFDRubuJji7PbmHgfQcd4Gkjii8Tds3saPwtfbNl0pfjNpM3oNNFCYGh8bbXdwsRzdouk3QD/5xC2KKwQrOZXQ7HuJnqAWPrcCnwm3Uu9UmTKSxZHzjRWivsP3PkD6ZlIvscSnXwj/3+n0PavIz/FQ4+P/UzpQAqfk8srkJddMLtF+r56//vx4e4H/PNvb+GFOpk0p39DQbevoalNnqzVrO+z98+Kj/TMoNMI/JgTM4Gz4LIAWj56tzMlwNIkWWzLMosU5cIREqEPOzYXvx1Ysm3txUC3q8+YaRT3UCZlQNwuN75shfgwSRnPWnFXyhCAR2hEmIfIUG2GRgYnQmDufjXD1CnlC/keowy05gFACKrSSS4wJNNViYgJNMeYxgRZZ6xRcGQc3AW4pcqASXmAVSDwWXo3FwsSrMRqYePlaqwLv1K+2bM1O/cxv6ZwQvFI3Q2yhwsmOnWmZxYStNs5kwi60LlDAntIdf3vbid1+SzPCw5bSr6F2c0oAvY6MnJIIrtUWiRS1ZKQGKKLDWePRbEVBPYwwwnqo58lZ9ryDI7JPbzvq09ucROTG+p9/+XbVsenHsb4R+hNliJVO0p6bH86c/sXJI1gPuYQuXz+wmhyf95jfP5y4bzbSAyPUo0y4hkym/B3SHjRvwiY1mYnQ+Nd6Et5OaK/D+hbf/Am9QlBefoicT9AE9X17SH/JzA/oAiQvXP94/F8p3p6s4Bl9Nlr1Y6MJSa35WO+o972/RsZf5x+cv/Hw6DDWt/mWs1AC9Usp3r90dX1p9TOx3g7tqYN2Z1Lj/5D78PC5GW8F6B8nObGeWs9gA7QjC+rSKHtunbq5q+ZclH98uN5Lg/Py1+H4MVDfS4ZZ0AD71Tjpisqn7yTfx+Mv4oLre+B81lL+SpfRb3YqVmyUXgU2Qr1VZn2i6KVC6yGR3C8wzqKI47l615jQe3EyHh/uc2GLOlTF5tOvdZLjU/7FTQX1Zmoe6fHp+EZzotdLg/oLV8DYX2ifVQWNhyq0LrH9aD2geHuB5EUVM96/aN3BuOWh5ocfDLeivQ9nD63BmxvQJ8hXejrSp5LMeChvrzjXFugbNdSZyLmWZEZ3mrhiANQJcG0DLXxWAjoznik6oZAZJ/726oWcId5vabw/M3prHccpYtK4CehMhNH08mg5mWxo89PZ0ExAoYj9/Vl9we66sVBlOqC2M5vzSlvYCHOtbIT8E//+qIUTt83JTph5qIyJcKG7nInQcKacpXCT8SEqpXRh+9AfvBa7xOM4yIMWF5BJAyyjNko099iAQwwuOkoP+4NyWJp+/9q8109u/0jUd47skyf0XKCPWv4NqJUeNoB9mB1N0+JiQtPvHGBCM60bUdiA1+nDld95WunyRBuwy36vOe8y7TwZQpQfGiNYnttdC5gIB45bmAhHrlgiCzFSQpwmWp3shK4tWjbCYzlMhN+MOFiuAJIDCKWu7IBF4wY1O2h1Htt2rDazbcf6aoXt6Nn7nfmlyiO5IV3ZDj+vrZ6dUF/ERpj16FNMhLmlgoIrJ02M+SllQlG4rkT3GfWAHbSqZBzUGDaoycDmyq66kchuILXBbiBLZOOOXpbw0gGz5AxfQN1BBNmVzeJYsoQVXEDc6S4bzxEyhNPo4k3Zle0hK5xFZOUiDT87ckVXIsOBk5wYdNiOPfhxYcW0/eOgb+SLrkym9A9xxKGcv1Je1gYmLRf1n46sV1qzXz+Z+97Vl+UL8B54ilkP2NGe9mZHBrRXGhnRnlFAu//ds7a7f+eFLN505Dch947zPGMPHMpadXtqyAK8x3fjJKwT2Am3l7uYCPfYB5gIT/QpRZqEFw+k/Ln8UriHKKEqEh+W6tl8WKxnIhx5brkCYdLBJU2TszNC+rAP3s6kRUKYPo+NMD+PjbC2WKEO/+ODXZ/sPz0U7rc5ffAauRMu1qj/zTWqA4OuwcrzYRoObLDKtgmh8nlNYA2qFwsRMAcaXkiB1iCDYAklHuRNO0TQYqSnJqQM5vMv4Q1rNNdrdivEkbN0aeZPAgZpeS2UcBGgdVnZ0Hb2M6G5mxsVFh+6VA+yvQxS58HLPKHxKDuhxpXORFjjTmMizGpJUSAcki/GpIT4Wr05Ah+aT19iIjTscDMRpve7WY5IMoTwQh1UA3TR+x9vQNkNdUO+9CAs7uYi31ca1zYmix9xMPqkyc3yFX0gIRcTHxvX5rC3YzyZpvL+bCR6hb2htz0+Dv8yQ6ekTvCq0VzG4Usc+rtx3Ekldpom7eTvaxXC6DsjSF//ELUhPl41bnOq/BB4JHzftohTGEkTciT4iFOp4sa7/AMkVIrS`, `1,Gentleman\'s Disagreement,Querp,321315,eNrjYmdPzy1gYGWQcE/NK8lJzU3MUy9WcMksTkwvSk3NBYoxsAaWphYVOJgwgIGDCgMKsH+XBgb2H6D8lqqH7utEqmF8Bw2oQk4udtaCYgZ2mEYHTyiD6UBaA4qRDiloKmCAiUHFxJWB0YFE9fYvZ4LALPvLxmBg/4ABB2BycudiZWA/kOUA5h6A+ZUd5msHEagvP6DSSFbq2gcjdBKrHgYOqJGo3gJqjxL22AGqBwJGRrh6aGw4GEBpBuzqYe6Gm8+A03wNDQ0GhPkGaO7BNL/P3B6hHp5acEQJI66Ycui3gLO5g0szSxQ0kvMLKjXB0Zd0YDT6hk70CSFFH1IsOoxmQtrFonP6OSrHIgsoFsHxNpr7hlK8oReeyHLYTYFVs1i8Aw5e4qtbNuf8nPzSInCZDa3THYoOoFl7IN8B1VrMWv7s5gaEtTBnkRwqWJQ4RENdpQfhO06/XpIAchO6a7kCchJL0vKLchVMwIFIiW/ObKqnrm8cOBV/h7joSuDyDYZrBRG+QUoZmK0leDDEoaUMPeyeciBRPfEpicUpsTiVgYWLnTO3uCAPo+pADxFgqEUBI43zACGFQBjFwA4LBE6MlgUW9QEMfGiVGacDIW1A9wQwiKJqg1KcjIycIHkAnL4bjg==`, `1,Get Stamped,raspy 667,863955,eNqVls9rE0EUx2dT003WSygeIgSMWKQXC21qakHdSQj5JYhpitpDNGvbtCXdZtsEij8OexDEcy9VFKLXgFSCJ5EMHrx68A+wnqSXogdB8dLJ7psk+yu7fQQ2mfnw3nf3fedtBJ5flRXkR6czK41osSHJysoyCm5LdeVhNB6fxTNICzyODCEeVbQQf8Hvp49+ZN6decx+4wkARwTer9QRj8zBmRfwDtGvNWzc8KHFCxOIEw9fdOOl+C2mhXiAHMKXzAj+fkm8CF8EHIKVsl4Cb6n69YFeuvPme/rt/Os5WrJUKtF1xksgrQL8OjLz1WoVcTiKDPtDeEVRKC839f0V4HLIic9ms4gjSZYP9Kcd+a5+rp/PlS8UCv2WkJhJf8rCt1otmxYCx56r+HeXOze1N0n9ZeBJyp7HYx8+/T56skf5drs9wKdNeiYtejS+w9zoapHRZK3RqMldm5AAFCnB3lkcYeWgPVuK02O7+75O1xm/HDXeznrZzCcSiQGbSKqbTfQ2MpssNU02adq2sWeTe8jY9rWmra16+UqqJ5vgVf2+8H3dVr1Dv3Zgb3PIRxbAhlngL0K7vtwJ53+mnlFeGwwkresgRdWW73xNf3wV2h3v8WW9LrkF+TMmvq9H47EEeubhWGfVoTzZgPwYuPxwPVjWnw9huvPD7xdXIH8BOHacYg56wJfkhuqJx9sh47ELG4f0AK9NWrK1r/Ns+Acc+VwkSvkN8MMccNftXxpUijYmLfw1R147LxY+dsL80yfMfxWucE7Fw/P/F1KXwszPbnzHKx+x5B+uJ2LJr/FOYw8HgXN65VqD6/zb//P89mdfbzTDbEgsjRU1T5in5chCTUEBgQ/KdWWz93ch55Ce41AA8UVF2tmMTglB4oHnGT9N+Zvu/CjjY0IQe+D9jJ+h/KI7f4rxl6keD/wI4+OUl1RX3sf4WarHA88x/kqQ4+gHoWO5Z24L`, `1,Grasstail,GayfishDeluxe,695345,eNrjYmdPzy1gYGXgdC9KLC4uSczMYeB1T6xMyyzOcEnNKa1IdTBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhUxc7KwFxQzsDOiABcZwCDoAoQMcILQKmkomhqzIjQiuQ74DqnrHBgz1EUjqDxBhPor6ZgtU9ZXY1e+Hef2yMRjYP2DAAbgCchJL0vKLchUMuVixBAWbQyaqgIMlA3anMjIELgwEOpFE9TDzHZIOkGQ+seph5h8g0Xxi1ds/hgYxCUFtxMDDxc6ZW1yQBzfdE7seRkZGYBZgDS5ILM/j4jxAlGoesGoFjeT8gkpNLk64FZn4NAkja4LrPUCUXiksejGsPxCJzwhF3EZgOAa/SRoETUI4LRM1l2MzkIVBn1gDEQ4lylwzEs3FcPYBvMbbkmc8hifw2+JCkS2YXspRwGOZNzUsw/QgXjuDqGgnlOJkZAQiBgYA5/EWiA==`, `1,Hamster run,MuadDib,304194,eNq1lUFoE0EUhifJptukhFbbYntyCgp6aBGqED2YUQNasbaUVJRCdU0n6Vqyu+7sWlvFKiqoePGsB/GgB0XqwVMPnV68CVVP4qVWFHqRKCKUUuI2mdm6Y6bGg++wy+x8b96bf/+djatqvmCBKGg4ohWIg21ouwZQe11tJK2fRbtBOdA2EIjU11w5UkU2vjH58fDzlkt8jHYwMBJXoxYBKhBDQcbVwANeQiwFQqC0Mg0A/UeeB8+rlUc18ohL8a67HKmFynj20909B+4M/VxPSMByMEnj0SpqtIsPEEay6s8O9XrPx2mQP826zgh8mPOMO1HJQ2fY+sfZLubnBpKdBPu8M8/6WKjOLwj8+X6mnoRf6ljJpDvbfF5/WJm3i9X5orD+MJt3YXX+x7fHr5LzKc77ujCdfH04vxzsh3JduE7i+qsDfYt9t7/7PNeF6yTwCAT7p1wXrpPIh99fnurueOvzXBeuk8grwf1SrgvXSeTV2JvE/itPff4v/kExQR+mC5X4BzXs236/58NNn2e6UIl/UELQk+lCJf5Bjecmdw4mh32e6UIl/kFNgv5MFyrxD9r0Oj80ffSB6B8q8Q/aHHxf/LuiEv+g5s/3Hr1crvd5pguV+acl+H75d0Vl/mldnVmaeeL6PNOFyvyzJegH/l1RmX/aWr/smhtc5PxsUXL68XNhPaoeeGFfYJ0V2Cs9bvmlMn/9VuUu+TN5K598QdYbRKf4gSUYmy+PbAo2itCGs/VxNVYglvHHdnRhlVBo7R+bNqFhOrCgjeF4rLacpqxpTUAzB51R7CVaXbUmgporHHQdOGG6MKsZ0CUY1prYrDswZ9pQN4il25qjm8Z/6K7XEwsSPW/oOd3r0Kk1Uc2OakYed8Uiofi1iJqdJO1ZzXJcGx/TC7rTkbO1AiYZM40d09AcHJmIXGy8gG3ibSNhayO6S7ayhH7bzNuYkEZz3MB2T1qpU4BSKpWSCohOefc1bynh3wZezbpExqs/5lnxF59MeT8=`, `1,Hellevator,raspy 667,868128,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`, `1,Horizon,iRedi,513720,eNrtms1vG0UUwMexHTfmoxbkUKRKbKMcoipYVuNK7YF467pOQtIkJFHTiBbs1mtnS/3RXaclSZWsCwhxor0gwYkDZ87cGP6DiB4KN3PspeJQEDez9s7bZsY7OzuhSBy8lryx97dv33vzZt5748RjsUq1gaIoNls39J16DUX1Fa2kq2nUO+AMR+ZZuXdk/iCfP9v5feaH0V34rE4Q8M14LNowUQzr5EIFO38MI+ZQvzrnnMeZCyF0kJ2231m+rvL4J0sXPHjQoJ9/unnJg7+BefxfnYUXPN5j9NcZfgj9mM8e4luWiP/+7BQKZZ5+0z2+zTye6h2ZNuIcISVuD5wrH/QN91k0x/HAMOoUyyik5i2aH+d6rMdjST64RahrEDacAcCrKs+gRXI+zTFonlHwtMAgSV7WoIZjCE5zRyhHzgrHoAuMgorAIEle0iB1g4TcojDkJgKG3IRkyE28XIPKZG5OI1HIjQUMuTHJkBt7uQbBHMpxDSKmqpMcg84z/KTAIEledg6RVR+/T/w2yZ1D497rsHoJBV21ejyW5T8k14mG7hRIeuuDVzDNJ/3lqxrJe3k6Vrn2Fi2aF+jv5smgfJnheFMe9CnQedtnCjv8NhOoecvXn+rdFM2L/Ll7IMe3Dqg8K/S/1aZ5kT8fYDl+X/WON54+rRTNi+QT/dV1TNub4MjfZ/iEQP6OSiURV/+0d12k3lNoPs2V7/C7jp34CjNfePLvE/lJJPKnw5P4xEnheDk8Ga/APOjD6O0R/w5P6lE8K5yPDm89pPkJgT4kflx/bgj8A/qw6xtP/wd0ynL9c4LHN2j+hED/TxNyPBQ588z8OsPRZ5bhzwjk37Dk+Cty8Qx29vn/JIcnerj8SX99IOEH5gmHmXnlsZ44/GVE8wmB/FVLij9qET9DvhzrK0DS3IB1FjwmcHwC0CkQJHl1lG4E4TMvIWCmcfRxWK8RhwUiME+6KKwwPMF+Ovh55dw7pmZXnE8W7cYd5OAEoz/i6A/25gRdG/gf5F+0/P0DFW1ajlc3CzSX9C8A3QIqIRxfx59lRg8Rf6sgJ/9WQU6+9TfdGqVEBdFDwlvB5MOGSWAeEp9Fz8fRvg6H6HPVub7ELEj9PJH/nRwPBc61gAXXPknI6wH5XZIAFyxRk+/we0yCGg3Ko2A8LPAfYNEuCtUQBOZd+Zak/IA89MyQ0M5zNmUg4TeXaV4RJPA7KSleMkH1fRnBTRKwsHBAhwed6hu/3d+fOvULiqKz1by94I0zO6Cw0wqdG8O7HSZUgmvM/Sy/1aZ5kLvhrc+/dcAwhgeCIXwHZL9Ytx0wzRgA5zVv3i0JWfkwwiwP11kH8OSD/rcxLZ/DwyaJO+BMS8XyR3Swu0s2hKEH/ZJc+bzNC+n3vi4eMuBRSrT3P/PoOkJH3DkGf9l2Imbt4m+z/fn8+aHN+oA8ZtZ+Ea9K8n01Jn/N+LWd5Y9opk1qLcZhEGAkYAYOEzlsjvk5a+Awf4e5S10NDRwWKMIgJ5C1fOAwUYRBsisNIiyYw+7Q5eDAYT4OQ2Px2EjVbNRc2QXVs/4I9V6vKsu3taKpKbmlxbX4iPub1EfeRUso1O0mXlcu1hvbytqmbiqXiw37NqjvrlvcZ4VRTNnr/a+GmHcGOaTYJFS+1yyuQhEUUVY/3rbhEsCIq0bUNnmuZjZ0Qysp2e5NuuCmULdBfkWZ3zJ2KppZrDTte2pwD9+3dvVpgxC6PuofCwJ2j2OORwbkgByQ/ztySPlPHj8SDsVb4djNHTP8yfG7mmHq9dprRrGkb5nh7eP1ezXNmMu9fbPYaG4Z2rJRrxiaaZ4qG8WqZq7Vc1qzXis2tbcIsKBX9Wak0+m8G92337tpJBKPtKZffOq+ovZDh8N2TvoHvh3wlg==`, `1,Hoverboard battle,MuadDib,178935,eNrtlrFu2zAQhk+ubdZK0yipH4BDh0we2g7JUhNFgHQJEAQBim6VHdkREouCRBVIunRo58zpUPQJggzdy3fIC7hjlyJv0JIiKcSKZUa7DwZknr87/veTgOwiNJ7E0IT1t/RjkAyonxzhgc/YaQBoL/OPdsIBeQV5kOcwE/2/ozz6t3r95fz37lX3k1mTTQ22XdSKU0AkUmvOfqgvTdOKMK6e23rtzW4Fbbj9dy7yW4a/Vs9uBe8ontfkTfCLrRmuPLrhf5nRf+rRpzA3HLBGgZCvqgnRGop82T1wW4D4ocnC0tPant5zL/eUmGz6Yelp/Xtadk/dU3N7E770tP49LbuXe1pUDXS2ZTJGG8l0v/elHRvzlS3gv7/evaPnQJ8Z+6yecI+XHjlc/17wZp/efJ7U5Pt/LmV8M35VnUHJsMLGBk+mM4devLsqDCA1eSOwf/MyjwUCwXNRZ5LGEd9XY/PK2+JAF1Z2KI4owxP/JHA7thp51g54QxqfYTrC7DgQhXHP7RBdSHBFnSh8JtyzgrJ/A1beZAyf0QwP/UioOlUweVE9yQa4WRrgkOERTewlcpBH8CSM0jhMfBbSSA6hi/hm9RDr+RAWULZvgrcnPMVpOI7CUSgGYULWO249Ew/Q8NiPxkHPzssxWrkiDS7yfw3ah6LxSWrHZeM2rGEd+h+c0EOn1pN4KvXYQCkc5cI1uMjz1YeAsuVjgI7jiA/8B33pIJc=`, `1,Hurdle Easy,MuadDib,489142,eNqtl01oE0EUgGdb45K0xYg9FLyMkEOKWBBFD0IzlTQKEokYehAF1/xum+yu2U1j9GAOFTz0INhTUShE/EcrFsUfTPRS8VTQeyt4EAQR8aRI3WT2bdhNs5mVvsvwdr95+37m562P5zN5BXlQ39FiIZlL4XFBLSM+WhSSYfEc2Y+aQkaRRULf000J/TD0mYufjzwavAQ6CRpgr4/3KCrikV167Q/ILKZj2faiBwVDJxAHal3EVj7ext8ZO9ZS6yJi4bkahPJxX1NCa6iD+GI5QUvLhTw+4PMgnjyZox8q1On7oPlEoTbIiOHCRGVDV8nDr5TXFtj423cpLyErf3zjVJCFLOVz2MpHKs58SWHj52KUn66w+XOZuIt3ackd//yTu/y8/OUuP8Cz5ufNoLv81Of/bz1cOGvlR5Fzflj5dzspf5qucBJGltEUD/q9XkUcrPtOPPHu+hMP7xkC3lw/k4TNH8gnKw/7EeIt4U787vFTuj+wH8F+Nx7WJysP9YL6duOhXqw87F/jROrKw3pm5aFecL5146FejHzdeG7mc7aL/bdVd/ziFmu8BkfOUD20Gnl1w389YPJPA458zc7fe2+NF/gJOta+3B9+8PjKB5N/FnbkQ3a+epXy6qKVjxj8z7+H+kvLAyb/IunI1+z8/DXKn19hs/96xpFvs2/UxzyfgY9WjO4iuLz3mxgz+dotR75m4+EqJwHD3zXbuWMIh7oKB3PgDIG7a2xokur227/VHRxsdAdtFnvMhgcamekVpkaGQCPjzLtoZLa3GhkcTMhKeRj1+3hvXlUks3uCsNpl/SbqC8tYkjWcF6ZSPi/bHH/jQ1hOYy2b0icqI6wTESu47XBRw2W5iBOChIsqs2c7RA3r2cCipCpiQdBEWdp85/xRPVdYFTOSmBZ1BzXWiXwiK0iZ1OZ7tDWuG55SWfEB3BTjB6E1q605gR3Ecfo97zmpCCXJy3Hehv4PP4ypUA==`, `1,i came to drop bombs,JonesReal,637,eNrjYmdPzy1gYGQQyVRITsxNVSjJV0gpyi9QSMrPTSpm4PTKz0stDkpNzHEwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUMLAfSGlBNYGRAAw6pDhBaAk2CiaFy7yyEzTCbHkD4+6+FS3g9d2nHaS46YIRZdMAfTYY/ICexJC2/KFdBIzm/oFKTi5WBxYFW7rYn2d0HcLlbDM3dSM4/kAZ1pBoZzj//YR7C+ZeNwQBXsON1hQOtXGGP4QpZ7K5AcgxM5QHvBlyOwZHoGVjBjrF/ORMEZmE45qfi7xAXXSQfcMAcw8DGxc6ZW1yQ52AJtTz1AfZIZmQE2sIaXJBYnsfFeYAo1Txg1TAfch4IOgDRlMmAR5Mwsia4Xgei9Eph0YswIh6aSnMU8BihiNsIhEeIMkmDoElQCgDJ9MBx`, `1,Indiana Jones simulator,Querp,194122,eNrjYmdPzy1gYGEQ98xLyUzMS1Twys9LLVYozswtzUksyS9iYA0sTS0qcDBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhSxc7KwFxQxsDOiAEcZwKD8AoesdILQKmkomhv9Z2QwOjDNBYJb9ZWMwsH/AgANwO+WX5iWnFik45ZdwsWKxmgVudQ7U6kIDCJ3YgG712c0NDA5lEyDSmVBtAlA6D81gsFWMB4hVzoQaDmEwx0DDgQPD9IU9KQz7YSFOMBxYnBKLU0EBAHeIYwNa2MPtdmHAHvaMKHbCUgEuOxkdRBgIAqCzcnKQ4+UAzFlMDmVQEXOofbDUBzXW/sPBIAvd4lRoyB0goHw/qnJYPBAOOQ63nMyCgtSiYgZGLnbO3OKCPFjKcAg6gN3njIwMrAyswQWJ5XmcjIxAxAAAKE9kMQ==`, `1,It\'s Cold Outside,VulcanKittie,1057557,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`, `1,Just brawl,Querp,347461,eNrjYmdPzy1gYGXg8iotLlFIKkosz2FgDSxNLSpwMGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFzFzsrAXFDOwM6IARXcCh3wKFhgMmBnXLQAZG+5czQWCW/WVjMLB/wIADcAXkJJak5RflKphwsWKxmuVAPkSvQ24ChPaEOkGFAd3qs5sbgOIkqj9QOgEin3QARR1MH4b5JKonJygMsQYFM0YsEPJakQKYe4BYr5GonnivCSK8pqCRnF9QqcnAwcXOmVtckOeQ7wCxJBK7VkZGRmBqZw0uSCzP4+I8QJRqHrBqqE1cnA52EMkDnrg1saBrOkCUJmFkTQi9sDTiQoyfHIhSje4nWFxlNxATbESpRrGCk5ERiBgYAOqlkqg=`, `1,Just Fight,HeyListen,84917,eNrjYmdPzy1gYGHg8iotLlFwy0zPKGHg9Eit9MksLknNczBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQysDOiAC8Y4kOcA0eIC1SqAppIJRDA6ZDeQovwAacodygIgyiNRlcG0oZtOmnKY6Q5JB0gxnUjl8IBMgHoVFmdQev9Pxd8hLroSEJVw5Q6JkBBykIDyPfGa7pCPZjoDVuX2L2eCwCz7y8ZgYP+AAQfgdklNLMlQCE/MySnmYsWSQljhVqZDw8EParUCmko2htjKWIYDpCmHewyWMuwYUMIDyWM1i2qA/n+AGsouOExnYlhxewXQMSQpJz7YOANyEkvS8otysQcam0MsNFqzEyB00AGU+Np/YzKjvOEMPaDFfmePMBwgoNweVbmDC1R53gMU72BJDWDTSVMOD+O4BtQowWE6acr3w8oqgmHM7JmcysDBxc6ZW1yQB3dUUgNWxYzALJLCwBQSxMV5gJBSIAQp9eHihBVnDqkLcJpqxMDsFGQIVFtIWK0GSK0R0AmEzAVCkLk+QHMPFBJWCzLXB2SuHjRszRlwquViYPIFOZeQUqBzRYBKjTgZGYGIAQAKHrKo`, `1,kys,JonesReal,9331,eNrjYmdPzy1gYGRgzq4sZuD0ys9LLQ5KTcxxMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCF7FzsrAXFDCwwjQ72UAYjAxpwqMRuFQMTg3VbG8JmmE0PGLACTHP7LVBonAoYuAJyEkvS8otyFQy5WJGc7EmGk4/4RhDtZAYGQYTNChrJ+QWVmigOMMLpAKjFsGBHcgBIuf3LmSAwy/6yMRjgdgDC68Ygmx2yG8DCB/Rw2hzgAKEZKLRZAmEz1OtIIXCAfu6Qx+UOJOc45EOsOWBIKEKwOAeUIsiJEDNwQNDPZkRaNIN6nYGNi50zt7gg70Am1A4FHHmPkZGBlYE9uCCxPE/BgIvzQNEBItTzQdXDAprTgShrRFG1IXQTZakMVt0IQyIZKDfkAFGGKOMzBEoBAAy1vko=`, `1,Log Fight,raspy 667,826797,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`, `1,M Slide,MuadDib,191974,eNqdVc9r1EAUnhR3Y6K2i60geHCEHry4Iip6kGYqiyK4ILgIItRNt/tj3G4SmmxhrWgOehM9FNFD8Q/w4M2Th8yfICjosR69aK9SQWd3frCTJo7ru8wk+d68733vzYttmu1eAArArMKbq3ilSTd9d6WCl9E5MDI0DxRzvrdG5uzw58f3v159O7chntFJDtxnm4UgBKZwJBsltimClKFbMVtXCTvy54ndWuXUUUrrzeJ1+v7hZHgyKd7juDuxim8zfJLmMyFe8mjz9flFti6khJhi+ERI+/HsyJxtkGPFWsf1uqFdGJP5AeT6y7BurIRLVxQYKk3iI0UuhLNpyvMfId35u7/fZeDLQFmlMdmMhKctOy1HBiNPHaHz0A7CofHeVvR6wo+dEm0g3XkeefmjCfGyrP+bzxgEWazF0FNWbTRgHxZffo7qY0CZHRjPGV3jm+k9Odf+3iNoQjwRvXee427z9QLX4Bu/KkJTDT5J4SWPFvdb/6BczT01i/j3S6nzUZzJh2jweXyI4LOk0fMux99jVUPdWOGffDp2en1rZ1uOKg2eFF+/aAbPfslR1YnVOgn+dXYHnR9X3m+VNudlvhp8ksYv8xmxpM4K4ed82TSOn3lVlvpr8EkK/++jEID9tmn1wsAjdZQ9XqX0BpgDByo+9PwI9txu07aQzodeyllQavjBAPotGHWa1DEo2xYRAlXj3GCH6e2zkA5IIxwBM5f7ERz4fdhwPdgPKTNyQ1QE5QYogVkcwZa/BrEXBnjNjbDvUXJI50tjzgzJkQW1DFlBpkGpSrWCIW57uIUpwYhG0DnSCIeA2aC/qXazbBmGNXzzB/rzEqM=`, `1,Meridian,Fantao,240,eNrjYmdPzy1gYGHg8E0tykzJTMxjYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIUsXOysBcUMrAzogOlAHKqAQ1gDhJZBV8lwdnMDgwNpyu1fzgSBWfaXjcHA/gEDVsDIQABgKHCod4Aw2ILySxJLUrlYGVgPNHeAhQ40RuDS1Qml4zCce8Q3Aqdz7T+pHd5z+/k6hHoWn9S0EpCdDrSy84Cg1LqZkQIVCPWsQZnpGWBL4UbnQRnMGJbGQePFBqulBwIbUBKUQySUDj0ApvdvC5fweu7SDrQKpNyBgHIHzitbxGan20CVExvrwMhzyi8pyc9l4OJi58wtLsg7kAQx8EAkrmTAyCDCwBpckFiex8XpQEg1MC6E4aoPhDAQNFsIYTYh1UCzBRFmR6IGDDbVfAizCakGQl6E2Y4NBM3mQZhNSDUQciNUx0BDEBqS2MzmR7iEkGogFICq5mRkBCIGAA21nbU=`, `1,mess,Querp,299228,eNrjYmdPzy1gYGVgyU0tLmZgDSxNLSpwMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFzFzsrAXFDOwwjQ5JByAM3gNQlkNYA4SGWcUBNfJYuITXc5d2BiaGiI3FDAwHSh3A4gciGbCq349Qf+7DPKC6nAMoTsZjvnVbG8LcA4HY3bN/G1y939kjCHMPRONwP0L98S8pSO4gbP7/rGxESB3wJOj+s5sbEObi9C/C/CO+EUDxNKg7QhgIuWdjxkqgeN4CiLwdQfP/TysCipdA5YMOEFK/9dB/oHiRAsS/ONIDUvxW/M8Hqis6gNf9SObv9PkF5L+cCQKz7C8bg4H9AwYcgCsgJ7EkLb8oV8GQixWRdGEJYzTpjibdwZF0HTgVf4e46EogQk4QkXQVNJLzCyo1kVMwHDDCU0A+JGU69FtgLedhMQQv90nIPMYMHFzsnLnFBXkO0PTvYIhdDyMjI7DeYQ0uSCzP4+KEp57UBUSoPlA0AWJ2tgMxqqEp4UAMPpfwgFXDApDTAZa9NIhxPjyTBxwgRjU06R8IOUBC0DiEElbNycgIRAwMAO3uPNM=`, `1,Musical Chairs,Juju54,264212,eNqtlT1s00AUx5/z5cYCCqIDZQBH6hAGiiilUqVKOURUlIqiABmgQ8FNnOAqsY3PbmkRapG6wABsCAbE2AnByMRJ7CyMLIGNBWUEMZTEvrPjxFZsibdcLP3e/33cexeB5xstHdJwZNnCSlVqitV7kmJgyCxZ69bFWTQLtqFp8FnhV922Qod+721/v/Ju4iH7Zn6QEfi0joFHm8SvIJDru/YPMk9d8vSc8IOQgS+dN12O8iguf4PE4klMHt1B8fRj8khux9OPyaNnb51TpPyTAT4BTz8v9ek3iZ8vBfOf2Gh8fNWz14U2BBoHI40r/Mn9rRTPnkAvdSemQmP/XnfOoekqNyWzrhkt8byQBp6UKa+GBUUbtBtTwdUUftIqvl6wLaya/tAzdmjWNhY6gfB7f+hSyEUlgtvz/1I95qUq5quavnWmlzEyOyNuiEVGGhrMYP/bft/Vx8hgtj8DfNfpGT7qYNmhDNi7ND/Ug1sfcNez6HySUkS+QvnbEflVyq+RaHyN8kpEfcoR2uGRPJ0uYkTM5z6dSqsdiWdGdmg+LM5UMB91AqIsP8rS5X+OfHtyaXrPLmJoWsaWFdUypYZs758y9PyxWgb+21B9N3D/WE8j84t0P9lsXIPgXnGUt17E4ylHGqLfbzr4/XC3dd3pn/uf3Qnmo74fUe7O3ddHzh2hmv/uhm7Hez3nYEzgsy2sq67IAIzoEHMcB2VI39SlTVXIomIIrbddugaHbJq9OVlUCXNCrtMKHO938nxXQ3w1z3cRTgb4ehK1EAlae09iBnLhEq4SCaveEF2lBciPVPIEwzpDt6InmIdzUQW9kpUQ3aanewrmYurSI5vkhMdJvrqNJ6uSblqGfFVpKWbywWFDqikWztUNqSXjilaUTU2VTDm5dZqCZUNrGDLG4xuygRVNHdc2VdkoFVPp1EJKSEHq4ODgRwrSO92zN1Duj27MzORlR0Rc0VQZ4B8wypfu`, `1,NeedForSpeed,Querp,678035,eNrjYmdPzy1gYGXg8UtNTXHLLwouANIMrIGlqUUFDiYMYOCgx4AC7N+lgYH9Byi/peqh+zqRahjfQQOqkIWLnbWgmIGdAR0wO/R9QBFwUIHSJmgqmRiO+EYwMBwgUT1cXXEChK6E8r0bUNWzgAhGhgP9FhD5egeIlx4wYAWMDAQBXIlD4woIDTXbcfr1kgRsOpj9S0u4WLEEE4ZtMKNg3kdSqcGjyMBo/3ImCMyyv2wMBri8AQwnJ3esVrLjtBIzpMFWOrRooKovXICiD0k9yJ2MB0hU79B+AFW9Cc6Yj9hYDEwpJKqHq8uB6HMo2wBJAR8w1K806kZSX+CAot7BHqt6RJTAMgs1UlbZBexhhhHLnnnIsXygE8OkIqivRaD8tAasvob5wuFwewNJvsBIqcAUI3Szpt5Y8ZJDowREiR92s+Cu5QrISSxJyy/KVTBh4OBi58wtLsiDmx+CwyGMjMBSjTW4ILE8j4vzgCcxqnnAqhU0kvMLKjWBmiKJ0SSMrAmhN+kAEXqlsOhFGJFJjPWKuI1AmJTvQIRJGgRNQhhYRIzv9Ik1EGFu6QMizDUj0VwoxcnICEQMDAAAb9Co`, `1,Neon Triangles Beta,ProBond,328588,eNrtls9r1EAUx9/YLmlCwYM/EE8reFgPImiVnprHUtDSbWnrQi1YSNiNa7FNwq5S1EsO3j23p/boxX+h49/gUZD2WChl/wPNTt5kmzSZ2eLRfZdssp/5vu97mXnEMozOTggVuLHsBX612d1y/c6216vWvfcuGCvdoB74bZwBEXgfMmGfvxFh9+n+y6eT599vfpb3WCNwwjIqYQ8MyAfLP8Cvs5lrGtcEzuzTvUHs2z+fiLCPoSSsutt61+kGH/y2VQGDb+X+vy1/8AVK3cSkij7kUy/9acTcPHEzxbzd/7E2+7DnxXwj5hlq+KMcz6Wf1wmH7VI/DeFng7gl0m87Kj+AG8QtSx5UftLgzSjh3Ujlh/FV4mTdOf6SHw2f7w/eIU7WMQfq/kvec0bjm8kb4ItRIX/Jj3OQ8Kv0HhbUPJe87OcLUPdzHbP7c07N4ybP6st9B1B4lLiT9IWvkP/HWf5CfwQvTz+6vFD/KM975H89y5ftB+5Rf15FGT+6/YlvSf+psj/xeuJbxxku9f/r7Pfm4a1vsp/plNOMGgaaUAFTcuQOZhT+64xi4xkVqf1cbUax8Ywaz6j/fkZdlzOqWmsF4ccHMGUZ5k4v9NFL0nEHS0RZ/GlZeRm6u75l4nZ1BHpa0JTJMrkuRWw8/nq9uGi4VpdQrL1bsDaVkOeY07kv8jwJ98olhkpdPoJSTas0rE4nGFc3CY9GFRzq6koWus+uqEsXkzFzIPAXadH0xg==`, `1,Niko,GayfishDeluxe,426752,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`, `1,Nuke Alert.,ROBOCRAFT GAME,412973,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`, `1,The Obelisk of Thoth,Stashington,268062,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`, `1,Omega,MuadDib,212593,eNqdlMFrE0EUxidN4pq1MdVWqCB0Cj14sAXRQ0E0Y12QUqutBIsiwjaZpEPJzrqzsbZFG8GjNy8ePQmK+C/seGlPilTwXG+KIEq9iEicJjPb7pi4rS+H2dn85nvfzrx5pmFUqi5Ig/SVKq7YwJis2SWLzKLToBloCEQi/7XcjPw3OX+49PHiq75lNUfHJZg0jbTLgAH0OMIZaj7wc3IJiY7Bz8FfBWu4X5h6PjYh3u+RV8Fpax1akeO1etRJl9SnGy2+JHVnW3N0S+pvvL46Osyw4nkMn9d4dEP6V74vy3G6Pc9jeN2P2gcONX5c6r94+3lz+cuHUD+GDzQelZ62/lf7j+R4Vuqv/z7TvbCWDfVj+EDnlZ8peU5qtKT+G3N9bTV/76/v7cAHGs/LrXPnc9LXTRTdn0+PEwMnn4yE+jF8oPF8QvLzdemHR/V/fH+2OvouH+rH8IHG64EewUj976jnYWsGJML6v67xGLWr/21eXXm73vbqC/LEhZk2fAF04pv+A9Uq3p9qRn4DdIhuuBWyA5np7eahrhbo4r62GUMdk282Xor3e+WHdmsW7DQYRoofU11Bnur5emRXO3WrsKstyNOa7tCt/ldf8f0gsk7X3/1pAbDfNDJV5jphJ7zVnkuIXx84YFHoUB9W7XlsZlDcGlFnvaCnSN1FSMvQn8NioTtiZsK2+I9kh8XpZBCJz3AI5MZqPlykNVi0HVhjwhl34hP0gF7iwzL1IHGYSzzbJ9QR5pATnzO3ZY7frscmOQh6JsVeQUYqDikTYdAXGeIWigxZYBTnbKeCRzLJhPkgaRSXWPJu1rNLpMaOFm3Xr3n4EqkSf7Ds2VXMCtTCPnVsH+fogoO9cSu5mLuDPSa+akDyUx6teJixFEh1pYwUSK80Go2t4kiJ8f72DIic+7IFkX+eAfAHNp1IGA==`, `1,Overhead,Official,10,eNrjYmdPzy1gYGTg8C9LLcpITUxhYHAwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVMXOysBcVAQ6HAIbsBQmdC+SpQA17OBIFZ9peNwYABF2ACYi5WhIEHEh6guNAhrIFEAxkZCACE4+Md0OXYuNg5c4sL8g6kNeA3A2gIK9DlnAcSHAgqZAErDGEgqJAZpNCBkNVACLbagZDVQAi22oGQ1UAItBoA1P0uNw==`, `1,Phantom Menace,MuadDib,282835,eNrdV89r01Ac/2bYxVa2VreDxyfIGIgdYx5E6PI6OnXoxOEU5kGWpukaR5OsebFUBaNMvMg8eBAFQfDgzX/BgH+CB6/zuIt4VQ/zNb+2JE3SbV0ZfnN4Tfr5vvf5fH+8vGRYdqWuQgqGb9Z4mSh1NC/KvCACO6/zlZJUxhfAMnwWfMb9rFrG/XLu1x/+uPJ59JF7j8cdYDbDplQNWFP2TwCM+8Msm7bLdcd1KYAcgE/Fa3SJrbdte8d9m7KM24Qoy6ToglXDnr71wX54zP0Xa8v2mHPuFRxc8Nzs3R2CIbxDOEjQE/I654tZFN6b/7HNFB8H37gL/2f74y4+zrxRAdiJ7KuLEQFiuN9n/i6Wzp8OBrs4vW6RCUXPjum9fifxBvQ7iXNwtJIYbclJDEbPimlMvRxOEnHfk4j/oyTijknE/e5E3PftFB+17fQgSey4neJ+vxNDDweDD2IWHOcWgAnWXRLe3Cte9xcPFpxkNszOfPaIDwW4YcQFmPninm/2GeABj5i7YCs+ACF8PEHYJ0H81Iiobrxg+EZuyy7tUJstJbQN/vrCSGgbnHba5vmmT3TxzXeyvJuTy9avYQMOW4NZSmx9T8NLFK9hw7edPrHrFj9TowqlaPjGoAYzH6jkacf/suPn8KKHe1+hYKn3p0f3fetpCKqzD3MH1owTNHu2X8172OKDmkPqAEYybLquqd4ubwY3pR3bfg8nSgqSFYLq/KqYSXfnkxMUtYWUKiI1kTqq+W4doVtgdkYnqKXoSOBlpGtdMxuRCKoqDSTJmio1eCIpcu/J5eZprJAmrchSVaIESbeOrEA/d1fE3jMaXKQTr2rdwoeQZc7HdiZtugVdiipUBkbbbHASkJb0COTmrOiLFVRu0RKRKC/zjpHoeApSmiDKNNc4CU2vkzBTI0TVLk1MNJvNPK0VopfFvKDUJ5o8EWrcg0Lr6lpl9laxsbp2e6wq8kRviAULly+LY6QwOTlFibk9HbNUzpKeBKQKsm2geR8nAoetGZOA9BoCSDNMuu3zDys20iY=`, `1,Planets,facetious,1566,eNrjYmdPzy1gYGRgD8hJzEstKWbgTEtMTi3JzC8tdjBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhaxc7KwFxQzMDGjAIRJKq0ANeDkTBGbZXzYGA/sHDNgBIyMDAQBXcKDeAWKHJ1Tg/Id5//8zMHAB/VmSll+Uq2DIxcrA7JCJ5jTPAXBaxMZiVKcZgZx2YBA5TRDhNAWN5PyCSk1w4BUdQHWhJf1cCAfdh71wu/DAIHKhBIYLoRQDGxc7Z25xQR4sxg9E4nIEIwMrA2twQWJ5HhenA1GqecCqYUHCCYvYA0kH8GgSRtYE13uAKL1SWPQirIfGB0luPkCUJmxuBgCYqK6p`, `1,Quicksand,MuadDib,286014,eNrdl71rFEEYxt8VLutuiDmTFJYTSGHjNUlht69yIBYxBgISEHLr5u4yHLe7ZneLM4JBLAQFS9E6ZUifKgP+CSlsky5VSGssdHZn7mD35hhBEJmnGfbm43l+895+jGvb3X4MNXDWMxr0Ej/cBns187eb9AWuQCFsQEneZaeQdyWv3706f3S0sDe8xrtyYN21a3ECNntNimv2QfZYUBFuyvbT/XLHDTjAxwAnV+Vx3hkoZYFWFjqLPzea9+4glWs2Rfvg8/e0laespp3a2PHDXuLWOEksgmCX6UiegJpEJvdOlwtNIgGYIYVkMXL3YQ/7eDHJvd0S7dKY+/Wvwz/fR64CNxDLscFomaHR27j031DgFoajyG+wPL6h2Z7jL7m+/k2hvR+y0P5+uTTf3otMVTrBvAUmM1fpBPMzNJm5SieY14yu85qyzp7RzJ6KeZTYSOYxuoIZja4zKuuMRt/PqLyf0ejnNiqf22j0+xmV72c0+jsMld9h+F8dGkaeEw4NY2kFwz88LgDcdG2nn8Qhk274nE2AsWABppsRCaOU9P1e23VQN4cnn4d6EMUDEnVIutPmE+OG67B+S2s2x3fDQd1A7nAbZh9mKRlEGQn8kGQJT8Ze7msN6jBPU9KJdgkNk5ju+imNQh4OdXO552wejqVPtSa3oL7K94oktBvSDuUBU+6gm8gdZsAO+Amy2244luXkv/wGNIO0Hw==`, `1,Rasputin\'s Foray,Raspy 667,861261,eNrtmM9LFGEYx9/ZWmdnsVjCg4fK1SSXoEjdVkNqH9KUIo3WX6su1oImGzlOTiJm0BLhP+CpTh46BxKd9z0EnYowKrzZKTQIo1NE0Luzz7vuvM6rM2fnvbzOO5993ud5n+/7PDhhVZ2aNkiQRFJZ05h7mNObzGj3zGx2gWizbGUhmki0QZxYAxqJbSR/3rVGchufnz361vOqZpE/QwzBqrAaNEyiEnEo4gLM09JsgP1FwMKV5Obz4niR/NRqjeQGkYzAlZ5wcGdLuIx/HIWhfGklhfM4EiGM4vtc9ZtqfYxtGYvFiALXS+u0D7k+O1/Y+rD5e/HHF87vCqnL+fQYOdrQ5MB3SvmReic+KeUH6k478HEp33fylJM/eE5RPJ/N+r8DXWdrWbwS/+18wS1/fJd9Z/8FviDwgMqBBM410nitfFFAew0uea6XqzgPU7sevgr6GUb9jAr2Q8723Us81G9kdX1y1iwKneZW7EKvg2u40RA62I2B8uu79q+jev7dEebo2970zkFDLc4XkdsW9q0i6VWzIiGNwsx/9wcTEyQdS0sOiRR4OLb++Elr/RrjYXmZHdwZXD+PcwTnc9yvhc8nXsZ+Mf9X10cq/Bfi5IKvqCVWvBTLEzQL9vG5sGP//es88wcTBu1CImsE+8GSP/SSEGfEfr5ibQOPPB3B96PgKl90Hz0UBD2AW/uBkv0yPwau9EA98mX7aepKP9QjDxn0I0Nd6Y0OUk88DOH7TN7OtzjrjWa88cALzHjenT7T3ni4I+RrP33eop54SIEzH5XYvy2x3+jMl+tDv1BXJIW+zN8ke9tX8L7wejLgjqceefeNQblR7Aj8vtAJvyP4HcHvCH5H8DvCge0IKasjTEVt+vQ7gt8R/I7gdwS/IxzAjtBb+XmUzmzIvsg+pbITs260+x3Vzsnc/Zw+RUJhVZs2DZ2aEVtwu1xk+QgRtd/IzuvR5rAGDz6W+IkVKa9yvoXx/B+geyDlqzjfyvgc8mN5KR/kfDyslQ9vD/4w5y8w+4Owr/+HOJ8Ia5QX1T3OJ8D5NsbjJ0Aal/MK59s1RdGKgv8PhRK6Mg==`, `1,the Rising,raspy 667,863711,eNrFmE1ME0EUx2dLS2lPaDiQ6KEkHIyxplAoHpR9EFM0GlI+YjQapUCLxVAWSoJUoRtEowkHTEyMHgwXryZevDImJp6MRg/GGx7xYDh4MR50dnemdL/oGxPjXLq7/fXNm/+8/8xOo+Hw1IxGQiQ6ej0XGy6UCsUpEpnPlrSlWCrVA13EbHCc2Jr6PW82dZffr5W/DrxouSXu4QgHm6LhkFYiYeJsivMBLFLrcxbsXwRMXFF3nhjtqfopaTZ1m/i0QP9ANOTRZZOrS94VtLuSO6SqHinOxvx4M0UXP07l4o9vysUv6tbnWT4LO22/Rk/HW5lk3vEd/BaWP6M7+f3z4bzq4PFT2DhsVqAxjZDlQe9yWoGljHlBC7zb6W1v2YLk7Y9JIw10tyMLs1ps2OiWVnhtjFvdkxBU7IUJl/jstnh3C3easfzv6Rvs+c0xNF8w+Hs6lh96zqSCOTleyCZG7SebuwweuBA4+OV2Jdn2EV4/slVg3+PPC8aoXWoH+7OlXK2L4WHCujgAK9YFdbjLNf0BS1c6Z/2SznNerGkFF3+yPGjoJMdTbcPOt/vyhq4KzH3A8hdflohSzX/FWlyhldjyUn9yl4XMulNAkq/Gr+ievJg7xm99u1YTH8nv6c/n+LDveNMbV2riI/m9/ME+zl0X78i/Lu/QJ4Hi4a/5XXs9NBPPjZBK8tjlTyF1myJqB1Z57fZZNdCXPXrftgQItwYzHfGUzcfrGvcx1a1E6Cip52NzPaWTm1hfHsvn2XNZPreN9eWp9XU2byI+1peCx/qsmn9dH6SWl2vj4+p6j09I8sg6nRiT0pNK6kkl9aR4PZPlcm183LpCJfWkknr+Ux/3Em8fC7cGM53xbp/9WN/A7seD794w7pyO9eWz3jR7LstnAFt374cus7oW8bE+FjzWx9X869bdq4FMbXykj6t8QpJH+jito/XMMD2ppJ5UUk8qoWc6Uxsf6WNJPamknv95P07Gu8zzzSo/y67xYTW4XuPHwO9YZbyXVhvl7/IwQXF8jscd3H+/lz22nTf+bIjMlLSiWM3gqo9s7OjaRMIjWnaxGOuIRiiCDwu+k/EX9Lp8o+CT0Qgg+JDguxgvVtJ9+KDgu1k+CL5B8CnGT0NdPiD4HpYPglcEfyKiKBHjv4E/Us1GhA==`, `1,Roof Fight !,catqwerty2020,555053,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`, `1,[TRNA] Rust Valley,GayfishDeluxe,787166,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`, `1,Salt Factory,ROBOCRAFT GAME,305275,eNrtWF1IFFEUvmOu624SSgYiQStJ2IOBaeoWtNeyFftzW7Uy+9FM03DdzZXEemgUQ1CjB1EoCLK3CCoqEuphxx56DnosbCMiCglfSqIfm9059+7embk7M1LUQ5eF4c5855zvnnPuueeu024/HQihdJRV39rd5/K2tvUFewfQKn/djrqd/ipvg6umat8uXIbiAxciZng+dcSHZwHmw+ff1NzJvUDmuAiA2U67LRRGdtylzKUm+LCCqCJvcC48m1hTKA2NjY0iAWcD3i8puG2AzyaUZmY7fvzcKuOnpiaRoNKCsFdkqEWmX3tv+q+7UQZ6/GRGlv9wNTau0SVFke4QkMGgAOkkMA1i8mqlr7u1ryPYG3CVlDhtyC4dVSBSEKzZcaMCxtuBdh48Dyj0Pc8O5e1+Xz0iL3NoaBAJElmWSTzeD9/LWPfhPYCPzvori8PtFF8L32tVeNATUePdxL7EZA6Ri7ycnzs2veaWjBcHRZl/lcjwpfphPR4VnoaTpE0zyK3VpA0TVpz+28JKLI+EyKscGtZSV1FbMDSwMR7cXnDBQZFjgzrVBeQescGiOfmiND545BFyUgYVimlFI26JmjQdeTu+pWq0+Yt104nFVyQtHodbmLimYLBBkxkWGeRpGCRHAYhI1ciISLYmhcTBi3winnfu9dGn+Q8TAusokXKWSLJj+pW0kU5gHh+ylbs0fO4/uJtUqSxkRTljOtDCM01SFnaxZxaKpGXTORpXxBjQPSR2GjFIFE1Ti/eQcq6TFeU6WXHuORP7FFGAKm6WSITsYQNXkOogFSKTG8S0K2YtuYJ4mh68Du7RWahXE7WVE9fBc6/IfrChyyMjOgv1SYwcPYNk/Pi4Dl6l37NA8ZeGh03o/1rwraG6OE/GT05M6OCrEW+9+nzcfLwun018fMw/JPUoPjcln4T9K5Xmzjh8+7DlQzBRS5TO5X/W/GNZI/3xrLnXaTlrErWvJLn2NaqSx0bJ1Kra2FpN7VPaXrcqyQzwvLOezNVtrxE+wsFTOdJmQ1ua1Iaztw0LZ3hpvFrzXWfSFZJFV/9t10WW7Tr9tpza6YbW165hAH2Sug7LDOLpjqF1w6dYTTo77dXcnOxxchHsusH0Njr4j/PzSR6kctyd/HlxUT4vzkIzc0TFS4v/vrQk8yE9lg/wx1PjNRWon+0SVY3Jsq4tm1Gm0+4IhEM91LtekVNuBJSJbPWh1v4ep0MyQguxAGfF0SQJHPhMFG7oLq6JDI1Qu4GQEBNcnSxEZSW4XUudLVyD6TxZYpcnK8T+TcnXkU2ogL8XCA0982kGKvp8igofTsGigK8CHg5BkH/oF91pjD8=`, `1,Salt Factory 2,ROBOCRAFT GAME,307796,eNrNl21MHEUYx2drj+MuBqnFhDQar6Exh0lNQTAQk+4cL0fB2OJBtQStnAgE5WXhiHq06HmAROMHlQ++k9IYk2KslmqNkeSmJWljExJqU23SWM8YJcRGsb60pl9cbp5njpnbvTu+Oblks7e/mf0/z/znmVm309nVa5CNJK8p2DPk8Qfbh/oHw55SkhfYU7WnOuDzN3vqfA/W0jKSaHQbkZr+W2ei6StwPzb8Y93RggN4T70A5ridDiNEnPQJlrhn3fAglyiNeuDaxUn99COFDUs1E2QDGRgwiMaabfgWIvM5wNcovD/Cr4XA/6KMv5P/z5BT+Ni3Ct9G+fNqGP9hhb9y4OIbx2cmk3xc0psy/uLJQMX2UIfg64F7ICJfkf+5sih+astngg8AHwRuN5HjvXrX/NylpaPI68tvr7Z39PP3JpoeJzbN3dgTHOrsH+z1lLsdxCkSOsgnihTR/ZC6xyElGOoAlxK72ke/6ygtIg4yNfUu0Wg3f84GPbLkAgjtr5nijz4ZP2tKnZgYN3mDpOX165PanSVv3SP4Xv6c9YOehxT+z/Ozj27+8GnkkWNdMD6mHvlzP/gPB96vFDzExSBukWrkl7feaK7ZXih441POt/OMUZ8S7+8XPj9X5M0T/EFYLCOGrAcsTW95arh4b8V+zCeLco49f4g/R10Qd2xa6Of8OMQbjsj5gffEVsIX7vjA+0cKDzMudBSkLA2u/zmId6RN1mPHR3ne2QswX62g53brfNLoIucjbTIP+vXL3jMlv3Y3mqWA+20M/IN5DEG/dn6N/fRque+V1n9EPlF3vbKklCpINLK8vGTymBcochR9l8pfu/a3qScC+YSSJqos5j/m/+q9/Mltpv6FhbPm/2GYV+TxPTZ66CjPP+2g0jq01QPvFX7GeMAXom3gethYI+f3wbhYChsg/68Lv3H+ZRj/oEcugbAZ6OhPiJeF8jkf3SXPA/SLxUWp5DzmE9YB7VT8PK3oQT8PHZLHhy1FvyjqCefBl2z4Nc5VyflMiTcEPOrYKc9zbMH9zZnT+gjyGBfmlT4j61fzTydgvaAPUD/Mn35CrC/Ov3RdXl+7lXwuyvmkUag/o/myn+uV9Yv+xPo5HJfyYuE3zoM/2Yv7LOvJmq2f8+AvNloh+ycM/I0rlx+bvu0Irl/c2sT82GxtGsnYNOritQffhVp9TbcuSscL3A2Tu2XJ6m5Jx7hmBppNjdDYXshqPowA92tmm1dHPJhglUC+Ambje+EmztfB7lQruxT76ZcgW8CnHMRwNqD6xo7J7hb6n2TyQcxmtsVB40u4ZjsbNO1ZpDSR3ValsqUeK6vkvSS2Al7XrB1AG4CvQ+8A7yBzJ45ZiFT5f2GvcpCZw1MW/C7ga5Xa6iDzp05m5vUVoWf+uJUe3XY25ua+sODLbPnZ2Y9N/9+v8AVpxyfiiyDDsVIIoW8a616cSReUrboA93XxiZBrm5VsXYCH8+osXaDymVxQE5FOghldoPAZXVC5ThfsSO8CVq7w+f8DF2xKusDjbe83wsWJkgCHCvw+Mz9y7Qpcoc322rJOHrffu2WOqjbMkXmWJS8K6NfrLKDiax0qr7x07iO5bqerN2T0iQACzGZgzVxSjiYj+Gyf20UHdmSkNXJzgsZ5cdEeT/pO2mrHzWs7ib4sC3k56gvF5KV5odPuhS2Z+zrIFou+ySG6Mw9xE9lqP0RyJDzkpYl+o2UgLk0zf+Q/QMfN6w==`, `1,Sandstone Cave,Sirestyx,231553,eNrjYmdPzy1gYGHgC07MSykuyc9LVXBOLEtl4AjOLEotLqmscDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhaxc7KwFxQxsMI0Hkg5AGMxwkQQHiJYQqFZPCL3/p+LvEBddCQZWEI8RrjwSqiysAUUbkvKZk03hDj0AUxbYgKINSfnmdcEM+2H+uGwMBvYPoLZwQpXBAaevs4JGcn5BpSYXKwObQxnEuAM5UG+xwi2GWZjJgOIAJIu7WvQZ0AFceRqG8nkzzBgwTIcFGjQQkb21Phih3AXVETBbkJTv2l+H6Rg/KF2HofzE8QkkBBpTkDMotA6MhhZRoeXjjJy2HEZDCxFamIApyA05bY2GFv7Q8nFjYOFi58wtLshzKIS6IbEBq1pGRkag+azBBYnleVycB4hSzQNWDSshOWGx4ZD6gHhNB4jSJIysCUpxMjNyNTKzJ1cV8xYlpmSWFssnJxaUlBalBhTlpwNrtGL+stSi4sz8PP788rzUIk8X5grmSsW0osTc1OKQfJdUYA2YWJIqCdXkk5mbWcLCxMLAWv///3+QW+AMFgYWIKsOSLEA7WSTdIboUIgCVqEMADGvSz8=`, `1,Simplex,MuadDib,228036,eNqVkj9OwzAUxl8qikn400J7AA8MTF3onqiqxIDaBZaOaUlaq8S2agdRWDowwcI1kBBXwHfgAnABhMQBwCmxqgaQ4VvsZ33Pv0/P9hAaJhzKgI5Iwk+jc0CdNDxpk37QhLmCXViS/xrP5b/l9dXFy8FD/dLUwV5uLHmozAUgKKpkNkE8+1rP8rWvis671uGiVDcF//Xtj/5HE+1pfy7/GX7R6vEopGPhlRcxVdNcpuSy2UyiOBFw4P3jXp//17/y15gbOFP+MLDmITcRnJqk5qXgG8aBOqy3GaZM4iQcR54b2HocgBpUB4xPMYuxHEW6kTc8V3XtsB0ATejaCdtQaaUST1mKByHFqdDJVM8OqEKNSByzCSZUcDIJJWFUhwt6dmYlC6fCmRWyBdWOnhUWZEhJTHRAqQm2Rk3YBDTQ32kYNVzHcbOTT8cLYtY=`, `1,Slopesy,raspy 667,808262,eNrjYmdPzy1gYGVgD87JL0gtrmTgLEosLqhUMDMzdzBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhexc7KwFxQzsDOiAEV3AofwAhC46gCrBxJClqY9QD7fqAQMOwOTkzgX0zYHsBjD3gCdOKyOhNAeaBBvD2c1Azft3zgSBWfaXjcEAZuX+CweDLHSLUxEauANyEkvS8otyFUJ9kO12CGugo90+YLsdKLF7cmMM0A5YrBK0WwBut1OQQnB+WgmyAw74MdDRAaEIBxwQgBpvQm0H2GM4gB/uAF9EAJRAtMMCgoEDw35L7PkK6FKQ/ZjutcCpHiVzwNUbkGi+Honmw9wjAQ2Xl4q/Q1x0JYCZFb/7oer3E6teBEM9fveIYLgHrN7+JfbchAlYg0BlHwMHFztnbnFB3oFMqMGe2JUzMjIC0wx7cEFieZ6CMRcnTP2BSNzqOWDqDbk4HfIIq2eHqTdCqMfnHlaYehOge6BZAEZjU88CU28KNN8Fqj4Et3pmmHozoPmF0LyedACneiaYenOg+VB1+NQzwtRbcDIyAhEDAwC1XNIF`, `1,Sobriety Check,CatAndTie,899334,eNrjYmdPzy1gYGXgC85PKspMLalUcM5ITc5m4HROLHHMSwnJTHUwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIUcXOysBcUM7AzogNGh9AGKANwqE3SVDBcSAoFWXDYGAzj9gAEHEAzISSxJyy/KVTBR0EjOL6jU5GLF5wKHpANUdoEEhgvwOuQA8UERsbGYDg4hIkRIdIg8LofgdQ+6AB733L2RBHTPy5kgMIvW7iEifEh0jxoB9+BPyKnQaAuCOisS6iwVNJVMDGc3NzAw7IflWoLO4oI7yxRHiqGZ1YhcbAr1PKgw4cwtLsg7kO+AVQvMckYgTGFgDS5ILM/j4jyQyUBQtTcDD1g1LJg5D0BjGJ8mIwZhZE0IvZGELZRkkMKiF26EAyEjgElRkkERtxEIkwh5BGiSEYMGQZMQBmYSdpo3gz6xBiLMJRSpQHNTGMxINBdKcTIycoIMAAA9JQ+s`, `1,Space Jam,Raspy 667,874036,eNrtm01oJEUUx2uyTuaDCKOsMIiwrQbJIZuPScyHgXRtjJtsjG528rFms8aZZCfJrk6cZCLBD9gGDaJ4WNnDqihmvQlBEPXkYUovnhbED1SEGC8rAZEcXUSwZ+pVZ6u6a7rq4K3q0qT7169fvXpdr+qfnmQstlwsoShKTJbyiwVrLF9EifV8ufSi1dPTi7tRreE2xDX7r6Vasw/g79de+n3kk6Mvs79xC4DRZCxaKqMYEltEPIE3CT2WMH+hoYZH7P13q+09+/uuWrP3kKQ1DI0koyhG3hDON/keeQqOzaIF9NSnZff8ZeoKuQi9POCPt3WmykfwWxa1F87v7Owc8uQ5Esb/kBt1+TevUP6Uov3XIaTzofzW1pbLv91B7S8QNfuvgP9TofbdkXN5iKdCfCi/RceYzCrG/9UUtX9Usb9XVvisPpDkA9hXTcEICm0R+9b9/0wNH09ji3/miWs/beSqfRazNzq5kV8vVxMb5x16C4QdrePVHA3UQ2AszXeosk8f5ib2jc/cm8kkWBiG4yzmAlf5+WrkWOc7bS6/u7uLIownEt4W+VnhRcth3mOvUzXeSziPH4PjBBb52lxACuBHFnPBCxg46g/wRJU/L/jfEsLPK/M1//EzWIjPHj9tHk5Ei2cHXb9zND7kBIuPw8f/5s27L9/6Zc2LP/BYwldE/hzEZRj4ARZ/ON41MV7E8dNu/FtaWg7zAffB9UHpREp5ljdQRvB9cGyV8FMOd93rh2+qB//7hfhbwWWL2ccrQr5BXPADPp5OdAWsx88IfCqEB3ukVzF/8pr+n3eC/WmW8GOOlv9k3NGKv49PI1n+U/tZgY/DMQP5fP23kx9lP+hHjVA4hETxeFl8hDxkt4eNF1YcLzFtvUIjsy+sgbyFSnfg/OnP/5B44lUcPF4pyfsyK8Rl2QourA1QWIEnqvyMw/u95CjxRJWH+YSweb+wrcR7daIQYr+YCx5ff/xpfi7v6fHPOnr8xW09fsnS4y9o9ndB05+cZnzmsR4/h/T4KaLHn9Xkz2jyT2jmw6hmfzOa/JCmPwOa9ps1+bgeT3R5S5MfFOpFN1+3K5WTX76futrsra8egetdfF0R++XV0xkUXK/FetFI5ysfH+ef5/N/GuZDyCMsbPh8+4VpWH+OOmr8jKT+ZiTrgTlh3ZmS1l/aX1a/HnXU+Dnw/zFFHvYLHh+X8isrK1V/MO9PGD+H+f7GJfnA+Hm2bnb4eMr8n3c43stnlt+wWXXzh+6/2H5uTNG+wNfZaFP7WdjvtCE1+2xfp8jjNdgvs3UPFgSDb7/K9h0vFyA/EeOxhK+IfHFba33IeOX1fynFvR9efkI+VL77d6Bp85s7vfUw8ETC2yK/Buu3Vj0etyr6s3bAz2uKPGlW9QeEo3hoPtTeF8ZjVb60x+9jFXmizCNez1HksSJPYD/I8qfO+0j5xRynt4TyTM8YUbTfjfT8mQD/hxw1ns3Pjyvy/Xw+q/JElYf9ry6v7M8ZrBfPBYvXl4T3wN735n/KX4Dr0zh4PfNj/4N7X9/7OdPuGU8kvC3ySzB/PsnrCGx/WPnjhaYvmlbnPB7yDPcI+lJasl46x+eb+B6LvEz4xU0fXjv29+kbhzccmbGytX8+GI32/9VokdFojUZrNFqj0RqN1mi0RqM1Gq3RaI1GazRao9EajdZotEajNRqt0WiNRms0WqPRVn79c/fp6/d8zGm047XvaDegB5cAFSs1wv3SMclkMgHfsPfpaQy4Q8q3t7cH2G/TtN/Lx84+1Jg7OztRKH+bJt3R0VGHT/v4+v6kff4gvW/8o9nqTxRQPBlLFMulVfZFvChqe/FxfYmj2GQpv7lqdSYTTKxhi54gPsb4jMuD+M1ekiC+kfFdyQRR4KOM73b556kf5JLcnzsY/7DrjwJ/hPE9yQQ7z35pEMQ3ML7X9WcD1W1VPsL4vkQkkqgO9n+bSlSA`, `1,Spinnies,GayfishDeluxe,841943,eNrjYmdPzy1gYGXgCC7IzMvLTC1m4HVPrEzLLM5wSc0prUh1MGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFLFzsrAXFDOwHkg6A+Qc8oRJMDkEHUIyEWYFuFQMjw7ILWUCdxKuf+OQC0Ekwp7BAnfiAAStgZCAAMBQ4uMCZXAE5iSVp+UW5CkZcrAzsDpT4cgLI1QdIDBW6+FIQ4UsFjeT8gkpNsGfzHSAKI+kQpRPoFqUSGJ5F8vMBSvw8eCNYHpefoRQDBxc7Z25xQZ5D6gP8ljAyAksTjeCCxPI8rCahBSnnAaIM1CfWQLi5DiUBRJhrRqK5CGcTZbwtecYjPJGjAClOImnjCaKMp9gT0ASP3xYXimxBeIkoy7ypYRmU4mRkBCIGBgCP4hFW`, `1,Square is safe,MuadDib,316556,eNqlVc9r1EAUfrHsxkRtt2sPHqfgQRDXQz14y7SsSNEuFotQT6a72W0om8T8OKwWWqQeBEHQk548iYooeOnR+RNET97q0Yt4F9HJZibdTHbSDb7LMG++N+9735uX6Kra63tQgembdyPTt5AdoMDsWqCuRGanaW/gSzA0fBYyZvzsDs34xfZ7975ffT93n+95HFR1teIFoIJoVdGBn1xO1nXh4Bicv3IblBx+PRsn4rFPknMbsmv+/nPGKiiE4cmEeFwST0ryMX48j+2F8XVhaMYBSKy6tmk6W4FeARV/wMIZ/shodl4m6R6jZL2BxbRvF69TP8PjAWTxjH4O/wbK3c/wZe9P287xkmfC+U+K/8RkFWXG2vzvteaFMxyuwJGWQvCr18n6KNkvPqt/Hu7F7pxEsbFZi/vHDwhjDVPkAevHU7buJHfghwc5vZZivUrgY31TzhzPxyqPL9RLKkaBXrj+bXtnYf4L3oOxeuXUgFGNsIslqfCt3bFfLVrDn7/7lPvEozW77ASe7VsdtDFAq5Hle6MM5MWmKuZf3cVrd8oMN4wd6ynumeBrErdZ4fh0TDl+/JgqeN/LFrSczSM+I1lB/zVG71Amd+oX1QA4rqtaP/Ac0mKQluxuBebgRNNFjhuivrll6Ro+KoYSOg21tusNkNtF4aZFA72GrqV8WvJC6rSBKZAUAGdhZikK0cCNUNt0UBRQZhxPCqqpQd0OUdf16b+bvlQztF2ncVgUKShqJuYmA4zmmIbaCpUKBXbPsbs25RceZpAG0gynQG3Tf1PPamiKosWef5P47d4=`, `1,Square pathway 2.0,antidonaldtrump,737187,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`, `1,steady,JonesReal,240703,eNrjYmdPzy1gYGFgKy5JTUypZOD0ys9LLQ5KTcxxMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFjFzsrAXFDGwM6AAu4uALpZMOQGi3BnSV5UuXw3kHCCsvAyp3yHdAEXWIgSoPgtD2PxV/h7joSkCVHyBNOdwxSQoQZaUPsAYTmnIH4pTvRw/UBwxYASMDAYBPAVdATmJJWn5RroIhAxsXO2ducUHegRBC5jEycDGwBhckludxcToQUg20nouBB6xaQSM5v6BSk4sTZsUBaABjs4KDQRhZE1yvAyG9QAvZGaSw6MUwwgGvEYq4jcDwiAMej7AxaBA0CUpxMjICEQMAhsN92w==`, `1,tallpendulum,JonesReal,53,eNrjYmdPzy1gYGbgKUnMySlIzUspzSnNZeD0ys9LLQ5KTcxxMGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFrFzsrAXFDCwwjQ55UAYjAxpwKFkAoVXQJJgYSkpLGexfzgSBWfaXjcHA/gEDDsCWlF9Skp/LxYqwFQ4wbYXa5pDdgG5re0cH0bYyMhAAcAUH8h1QZbgCchJL0vKLchXMkZ18oF2BkJPrHSgLKITNFiCb4RGQdACXzZ4MuKJohrEuA8w56Dbv/3AwyEK3OBWbzZYgmw/QymZ7DJu54TYbGjCwcbFz5hYX5DlkQsM8ElfkMTKwMjAXpaZwccLceADmVixqWRi4gGoVNJLzCyo1gVqgxh7IxG08M4MgQgtc5wFCOoEBxcwggaETYQAhnwENAEZAUk5pKlAxIa8BFbMwcIMUQy3gZGQEIgA/dI5H`, `1,Tam\'s Hill,TamHill,373046,eNqdl19IFEEcx2f1ztOjMlBC68ETtExUMk/MHu4mPCxRTPNUTIo7z9WuvNvj9vwb5Bk9BEUFRf8DewiCQFBCMiLX8qmXgixCIfSxl/Chl+jB9nZn7m53ZtY758HZdT/zm9/8fvP7zpzVYhkMhIAZWN3ewCHRdso/NAQs8nPsAdqB0mAV0DTn7wGlOTfR+7WJjZMz+ZfxOyxDoNlqMYdEYJFc6IMHqg85QNfg1BG1L9F94EBeKZT/6vmRqNpfiur5gspWCi96WPZbD9RS+BBk8edKKij8RSY/UVlO4fsBi396vI7C90ZZ/EJ7A4Vvk1j8ynALha9n+rPyoglwzl+PYu2x82uN0pzrgNGsbUPeyIAQDtiOWs1y6sfUwEt+9D2bmLqP6erq2ho5AfQyQ/H95zvK0jzM1Hz59pHCn2eG4sOnl2mlZnn5CeAgRN+bUW9n2p+buynzbYhrRFzFNjzipPLU+J2kskZJZRBN1IrLmwiFXdvHWwaYmX+QCJ1UrxUKeELtF/8W/3O7KgtkywoPHdqlYCHSCxLI0tqHNtQX6AQp4U9BRZJKwAtIHQaYqVxdGtpZ6OxK6Fy676W4HuJC4GdmTXg2K4csXyc0Pei9iQidymfr7LpR3x6l8vFQYB4lGXZtx0+rvUtbDUweCTasQ+8+D5WHkemd8Sn6k+BTWy+MbKKtMp1SPOEw2lKDNm2+Gln8Ha0/WBXtwDieqCjhKJrnILHVNfZx8epVzqn3ZzSkVU+Hdj6dfS5uH8Ujvl4Hwz7m3dq44zwk8eOvlpJ4XC/dhvWS8KcLcR1oHZ1SavbdTCm4Mvs8yT7mzzD9uTd/n8KfZvKq9On5JqY/79/covAuJv/57Q0K7wSG0gcnNzX7F/avG57aBO9jXsBeb/yh2O+zsfjrS6sU3sP0J5ZfjtBb9ilP59mnvOIPwfcAw/USfLfhLYjkO6X07LtBev63R9OLT6txPUq3j6l1l8bRWR07OuOJQgcd2MO6EOKfH0nSpNxdCZ7tauxuTF44m6PGS8NSrb8F7SVuKcogLO1SiryUOq+WXur+0C/YjcapJ3gHMJTKNH5rKFLJvFUypJLgq4ChVBJ8CTCUSoLPN5bK+FZfQLdFtNUXf9zliqofViXwbZoRkKiSWmCyWnICYiiIaxJvGMIex8nHnbkj5B0NWnMkXt0gUm/UgN6l0LYynxAaPywPQrWGj3n6oLzkQYmxaCLJAQzG7qeMRV1OJmedyrT4JsTMsczx3WFvv39YLPR5Q5HhMN/iD/gjxQNhb4AX3YKLjwhBb4TPHeHDol8I5gqjQT7c5CpCdFtYGAzzomi6Wm3a2trymOE+1QlThgmYJ+V/xZIWfzABee6swgZ1sO2sEOQB+A+dfyDG`, `1,teh foolser,Querp,562053,eNrjYmdPzy1gYGXgLknNUEjLz88pTi1iYA0sTS0qcDBhAAMYDQP279LAwP4DlN9S9dB9nUg1jO+gAVXIwsXOWlDMwM6ADpjQBRz6LVBoJJV6TsEMjHB1+Q4QuugAhK53wFDvCFS/H+a0y8ZgYP+AAQdgcnLnYkU48YAnlIGwsrAB1UoVDM+c3QxUQryVnE6JxakKSfklCsg2O+RCNbDA3aKCGv5YbP7/zw/BPRDdgKIOQz0jWD0jhnolnOr37tuLpL4Sqq5GAUKnQfTb/1T8HeKiKwFMRfaRRQyM9i9ngsAsh8PtYAW4QoKRgSDAjAVo/DhOv16SgJyAYKHHHZCTWJKWX5SrYGhAIGLLD6BGbPQBbBFLQlrigUesgpM7AzsXO2ducUEe3L70BTj8yMiQwsAaXJBYnsfF6RDggF81IyODCAMPWLWCRnJ+QaUmF+cBQprAUBhZE0JvAmELGRmksOiFG+GQQNh6fgZF3EYgTMpIIGgSH4MGQZMQviPCQCYGfWINhFKczIxcjczsyVXFzBX8ZalFxZn5ebxFiSmZpcWKaUWJuanFIfkuqSX5eYklqZLJiQUlpUWpPpm5mSX8+eV5qUWeLvJQwYCi/PSi1OJi5koWBtb6////g9IWCy8LsOhEcBlYgCwBoJ1sks4QbQpR+XmpDAwAwFHkTw==`, `1,Thunder Spectre,GayfishDeluxe,843868,eNqlll9IFEEcx2et87wtKcxAejrjKnvw0jzNC7kd4UgMukyv7AiNO91Tyz/n3ampD0kEvYQ9F0TWWz0IvdRLsCNBjyEEQgR1vShihBQEIkl7uzOzO7t7d3vXII4rn/nO7/eb3+83wzudQ2MJ4ACHwsNT44Ni0t2TEAfSSRFUdkRn4yOp4aA4OnVHhD6gDOgBzBB+xpUhbOPv+3PfO5ar58k3rMMgzzsdiRRwkoXwGVT/KAOGATutt5LJtplFwBXBexqbASdsPs6OJ8KnJmUIGZBj8F2j0XR8Ijnm9vMOzVQ6TP+Bs3hOItPWN0TAoYj6ieILKoe/ySyt9dZc3Ag+kOPvuTkMOOIKimI+DJhZ2F7pbq1PiTJ/PBKT9YfUfREJQT87S3tvV+J/985n9ftlfTSlBh3F1HWwm52FDKsPR7A9V6Gl/cK6Zn9f1n4cDzS4pHLEDzzreEW/lKM5qz8ahDcEFaajCeL5nulovP1xiyzCHFmn4+vt8DR0dvlfJ9+/+7KxbJenqWKX3/rxte/50ZeEhw/dLO/JUTWc+gsVyUuk4P0kHtYHyYECIx+gZUFzNguIjWguk2Mt9Nq0egLasxoezmm3sFO7Gw7W18BH0BIwWat502TZbirppn5Du+k05eiJKxHNSBQ01EDImke4raCAoZNiXtrFOeRQeXhtgdUPsLzwgeaoykdwuyFtox23gxprHomY97G6NKdff7vwovupn+ob25/Bb2HFwI9g/jq2w8f6If1Zr7q783mS+IvSS6y/4fzxh5MN1vEh+m+wv+WYTxvib6gxGh/CT+P4kzh62Sw36RtruDp/NdBLnVzipdawvho8wN7QqsGXrQZiO7maLGrbx86601Bw+iTZ/s+OJCMS8YZkGr5A2weqVpVvo7WaNy3MfUWisZ96ETLUttf8irkU1jWgXsTyZu9PhfR8zM3yAfP9dlnPj7oL9ZqWrnBpV3ez/mDN8Uf+AldNGdu0i9n6nGWH3Ue3Jg+iQM5TaJte1OXerQzbEWLI6u2p8eShFc79tpX1OaEE11otXStH+O1G3nA0qthUXfNVTIUFeMnAI9zsTLyo2iys0geRql+Alww8eauaePwtvfq4+Xt+a43qF+AFA28/1AdoqBsbQAXvdI2lEuM0c4bc1i2D4+RrxNGTiM6M8y6ST+j2Qh76oEK76wYmErOneReyteiIfhFdW7CjKWuPWaylEqZOYSlRm1tCc8SWUl1BJc20UI7mxwiesSuoGWpLt6VIXTy5OE7+AeAfh031CA==`, `1,Traptic,Fantao,1871,eNrjYmdPzy1gYGHgDilKLCjJTFYw0jNgYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIXsXOysBcUMbAcKGyAS6QcgEkwwow6IQLX4QWkRVKuAKv///QvnORBWDgSM9i9ngsAsmLT9AwasgJGBAMBQ4BAJZ3IF5CSWpOUX5SoYcrEC/Zg4rP1oBPIjXMXw9KMxyI8OwzseTcB+HN750RScH8sJ6lWB0v0W2PwIc7T9ZWMwwOVoBgaO8MScHJ/UtBJw2NLPXk6QvUGZ6RklDFxc7Jy5xQV5B+ygZgcdwB6AQNfEM7AGFySW53FxOhBSDYQJCNXRDQTNjmPgAatW0EjOL6jUBGpKdSBoRQyDMLImuN4DhPQCLYxmkMKiF2F9PmEjEvEbcSCfsA+SGBRxG4FwTHECQZOSiTLpACGTgN5KYdAgaBLCQEJxC4SxxBvIycgIRAwA9yQC+w==`, `1,tunnel,Guest 2000,359280,eNqll89rE0EUx9/WpkkWb+Yg0kMKOcSDGpMgFKR5gUItXuKPitWCTTVtk+bH5kcV9RKKB/8BLXoMPYvQP8A5ehEED3oJxKMgxYsH8VA32Zndnd1sdl+dy7DZz3zz5n3nTV7UcHirpkEIZjq79XqpCurSbqndiadTqRRmYTQwAdLIHW2ORu4Xf37x7PvSu9hz8YxJDk6r4ZDWhjA4R8T5AT7+bMwNlF9MwcG3Y1DEI9tgMr8KTv6a9tPGLzv0Ey7+1Ue7/o2uH793aOfv+PKVAzt/35dfe6nz2OTvHxj5wAKfuSW5P3N/by9eOKvzmqaBwoh87seb4Xib+5IZjdwAPIZaqBY7m41WLZ5WQ5aV2OFmp/GmYQl7FDfeXBx/aowkKAoj8mbqKnxL9/h8vetM3WgR7nH9Mtdd8NQ/+r2mp1rwWzye2OR4TL5i5Axng/Ig73fWYU2I54cYPyPGz4jxM2L8Lr94ieKy66j3+31baWwxmY+5+OPKju5XgcdT5fudB+mo2/herwfuePK8BBcD8iL/+e7k+AXPdcVFZiu9kT6mQI4/IefVedUwIu/KT9ZHn5hPRtTHYpdU79ik8Yyoz6j6vE4C3z//y/vUC6PyTeOmZjXOXZVnG2/8lLTinF+Xz8O8x/kR8QSo3/LOmPh96tHF+9Sjp75HPbLqgFaP20R+o0urLyfvV19Ef5HoLxL9RaK/SPQXif4i0V8k+otEf5Hor2jVzFbOo1VTwHeYCO5rxtwyPM3vf+2s29tx0d1Z3V/W3v2ZI2quKPs22sPdA7bfS7eVOXvwjMiLyF2N8IJH9RN5sT8mTsWqPH+wuqHM6xWdC86nh7yZPxHPinzKbfEMeYUR+ZM0/pfHWm8dJg1l690/RJ8Ouyf76gxE1HC01tbqoqxEW2y2XXeNI6zonWcEQre04pO6GjX/lEygZ+D0iI4nHza0p+f1RTyHkxZNwxn7ImttaeC7dgrOjVlrSrAAOwzDnLeEpRRg9yFI+ipZggEycwouBRW0dANkTYErRF0+RRUlOvw78g/4P0/w`, `1,Up & Over,Tyler_89,276361,eNrjYmdPzy1gYGXgDC1QUFPwL0stYuAIqcxJLYq3sHQwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVsXOysBcUM7AzogBFdwKESlYYDJgZPT08GRvuXM0Fglv1lYzCwf8CAA3AF5CSWpOUX5SqYcbEirD4Qgm61Q1gDKg31pf1Pxd8hLroSQKv///wJFBeBisN8i8NqRgaCAGF3vwOELjoAph2nXy9JQFIIdy3CN4bIvsFiYj7UxLILEDreAT0gA3b9B5rcbwHxBQkBaUzA6sIFhKz2qyfJakGE1QoayfkFlZoEXFBM0AWhPiS5QALDBfgcwgqLR4ckiIkOLlCH2UFpoZs19caKl4AZ7e8/kENIVA83Pw2aVj0ZcKVZVPOJVA8PyFKCAYminpRUZMTAyMXOmVtckOeQBHWdCY5swsgI9DhrcEFieR4nMyNXIzN7clUxb1FiSmZpMT+wiCrOzM9TTCtKzE0tDsl3SS3Jz0ssSWWuZK6QT04sKCktSg0oyk8vSi0uloTyfTJzM0v488vzUos8XVgdxCDlF2v9////QS5nYWABsqJZQAwWuCjQajZJZ4gBClH5eakMDAC2j9WU`, `1,V Slide,MuadDib,177674,eNrtVTFs00AU/SFxjd2mSaFDmbhKDAiJLO3A1JyQBapEq0pEHSO5ySU9lfgsn92QtBJUYmeGiZWFgY0pXpmZ2IqYWBArYgiX5M5qosaOByADz8P57r9////nfz5T15stF3Kg76PHT2idgL4T2HWLHuBNGALfgjGUvzeGKP+Q8xfdLw/frZ6oOb4tiVdNXXM5LCjH0AtHL1m1guUKPpBjcTyU8H3/YA9CZfbejMa1yzODzJCO09Gjut6+GuB1+RwuRQYSEVHwy3tj4yQiKZbRCFJzU7sgl4unyVWFWLmUeUa50tF7H6VMf1MuJQUkCBSMVvD+81iBlDlAMwmUjt77PMcCtWUH7cZ3kDK3Z+ugdPTe140h5lKgruygrXiBlLk7Wwelo/e+zV8HhUjuc4pnqjgdPcryVB61kpzfkf/mn+u/KtbdNdBGAqmr58O/Eggfy0Q3or6YAN6eUvGV8YqtdPRKOno1Hb2eih7SCTrBcfTyJ3nuz6d+jYG04X9p/4S0YJi60eKuE4UoTT8Rq7BoMeQwH7XsI2Ia6n831Uc4XYdijbkdxBrIPyTC0S2ZBk5yFM818d0NdeXERViBxfuBjzosQDXbEZvvJm9eBDPgBFEfNZgnwsi7PC5MAZaow13q2T5lzqCIJCfxLA+LqCYXkYfijtAUcdp0aIOKQnwRoZpcyRLotUPbaZKSkc2YZ1m91uXZpwXWdoi3bd2s2a4feGTPY02PcF44Jh4X6Wc7N6TlEW1RP+/ZdRrw9YZntwivMIv4zLF9kgPtWb/fH7TPxdezrZymqabKgQi8kK+IJI44/AbeBj+T`, `1,Vanishing Platform II,Echostar,965994,eNqtls9P02AYx9+yjrFFgzFo5GAcyQ7j4IQ4iV7oC0yxht8Qw4+DvM4yalzbtEXc1DATEmNi4tHoxf9Aws3Egz34Bxg9eEU9eTGEGzEGu/Zt17dduxZ4Oby822fv832+79O3TyqRKJUlEAdnbiOBV1Z5oZSeeoDUFVEup1kWdFwvroqKimSYB8aAGUAM5s+KMZhdvN6s/hh93/XYWsMsBk+lEnFJAQnrh/BJ2vwnBlwD3tXM+WWa/KINjM58BJS11GTM3YHm7MJ1PnupDDwDLjRPRed7+3Tels7ilHZA00GBloNi9nv+zhUunoPvsMZXV5uCthtUfyruMOnpsk8sS7wniXYwv63o5gwAIuBRkoBJnASP95w256HX39VlpyZLbaxfkYg0nkvYYW3BlQZLnonjLIw0YFSeDZe2x+jNXWsft9F5cnZHtLlFXC275OzmNf6Q1eUtnUZ1TdcIZGj29Bfip1Z27f1q/REnMrcqz85cy7u8zrTIXNwh+ZxP5vPm88p8u2yM0GeD9wW0rXCJtMQqTEfE4fHthoVQgS35CZ2HtVXyhqj4OmDwWkSe+f2mPt6GcKDP6UBjH7dyuIEzm8DVhCtCv9GZW1u6wgg8uxVFYQals0VRqvQGTRGTuFFzixqZ+BCQhJcfrvPhkziPjlH9oMfSm7OfA9T78OHVn0XHITvvkTG++DVAtg8fXnYnOpLenCf+HPoVoNeHD6+3Ax1OaMYTeOH+XoBQHz7CpYGaKqTtRqniuthxZHfDBCPymmh+ruFLBRZ8rkEKZHP1/SPw9f0/Wa/U1g4ozc/I4/lgcEQYkY9wRsWmr7Y2DTe9nrbDT2FEPkK5Fx3lrnXhN65liLdbv4ZnTDL/ZiZ/Tr7Y0xvR3EBVf6d2ubqKPMk7GtfcFQdvczl/Pl+N8njQY2JJBHQqkSwrkmAVubZU8+m/KP0JjM9KaF1IJa2C0AoggD5h0JZ9Sa1VCL1BaYTQWoUwaCJEMkalnsUSxarSXUSSuiZzY3yZV2OPOh9yssKLwkkZ3ePXlFilU1wXOJktXMDclCyWZE5RelZkVOaUObHAqaKAVI6maRDfODg4qNuoL6YaC/1PD9jePWJukV4UBQ6A/+s0wRo=`, `1,The Way of The Dragon!,Stashington,296965,eNrjYmdPzy1gYGEQC8lIVQhPrFTIT1MAMV2KEtPz8xQZuINLEoszMvPSS/LzHEwYwMBBhQEF2L9LAwP7D1B+S9VD93Ui1TC+gwZUIScXO2tBMQMbTKNDvgOEwciABhxEsFvFwMQQsbGYwf7lTBCYZX/ZGAzsHzDgAFwBOYklaflFuQpGXKwMbDAb6WCzIMJmBY3k/IJKTZADDtDPARIYDkB2R0kAvdwhj8sdSM5xoJ9z1Ag4B9lV8Q6oejFdFXQAxXVIrlrcl0q0qxgZCABMiz2xJHFjcMwOCUcjcocxcqosNADLHkg6MIjdLoHhduQ0MyS8II/LC1CKgYWLnTO3uCAPlgUOeOKwhJGRgZWBNbggsTyPi/MAaaphQZWJTzUPWDUshDkdiNIkjKwJSnEyMgIRAwDDduz4`, `1,The Web,TamHill,489003,eNrtmF9IFEEcx2fU87qLiEhBKtD+UFZmeFqclO4vvFCjP3qaVynlaXsleOehkVhGF0XWg0pBkRHSi0FBUj1JPrgV9ChGD5EvaSBRD+JDEFJgo7e3587OuDv3Vjgc7P1uP/udud3vfHdnnXb7uWAY2ZC9+ryc5ZMbyBd/sKypuRkK0EKDXKRr0nRgoUkzan3j0mTpYNrlWA3ZKuh02m3hNmRHdMP0D3AVotstBvLd6BTC0ve++fZQ+pi/0KQJxGnOimb/hUBLazArz2mLdw0t0Q7QakPXZxGv65fDY4yhNig8fmDwLYP3R3j8o4EhBl/PPRW9D54y+NPc8d/s6WfwtdzxdF6/y+BPcvVbO7oYfA1X/3Z7LYOv5uor8mEGX8nVHw9UMPijXP3xyDEGX87nH1cxeA+ff+1l8MVcnjUzEOxDS00NlMjUKNRNjeOKul+pjui7lqNWjE1sBed0f/ndmI6S0JWdd0hdSfGNND98K33VrznCF3ifkfoIPTXq9XxSCD7Jrs2Ez+9+TupSSv9MRM8ne4a24TXXCJ/bJ5O6hNKvo8aTUjydPHl/PeHLXu0h9X6KP0XxtrqvodSRacK/eDLPuyj+BDWe1P57crjnD+FHO4tIvYnifRS/IiX1R2byQcKPlUjGCwY+pOO1loSmPD3k+Bo1KjaofIDSR2+87l1tMuFdbhLmSq87ut/UKms0q+RnZTe2hDu2Mx3jABPHAOUYMHEMUI4BE8cA5RgwcQxQjgETxwDlGDBxDFCOARPHAOUYMHEMUI4BEwdAwg7IMDhgkRG0e5qMEosOLBgdWDA6sGB0YMHowILRgQWjAwtGBxaMDiwYHZhnHGlG5awZR6GNI5ogWDBBsGCCYMEEwYIJggUTBAsmCBZMECyYIFwjjBiMkMkzwlJ+WA6S/zxIeI+rifkHlvPkH88Tnh+MN5atJn5gPKgaXzhAWB3eRc4qUn1Qkj6Lr6rci7tWCmP7eQtA7fXJe1/GoW+eLtL1/IIamfEjovyEdsYt8ZIZX2BtAQs51JbNY0jTv2bSaiP/c+4DSRzr/Ozc7CLeFXOsxfFY5K0uwDEyaRqgNBn2rYy/1spDdqfdEWwLh7QzfSDCFsQY2dDaqrC/PURNEgcU6q8m+9h1jGM1CcWSxEa+RFypXH8p2UrZpkrxf2dJcLdVwbiuNxofyo6ldPcK6sbPgyX5osTk1Y0DY/JB6C/uKiFW`, `1,Go for the Gold,CatAndTie,-1,eNrjYmdPzy1gYGXgd89XSMsvUijJSFVwz89JYeB0TixxzEsJyUx1MGEAAwc9BhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFrFzsrAXFDOwM6IAJXcChEpVGUpkmZ8LACOMeyHeAqEs6AKEjMdR3aLgyMNq%2FnAkCs%2BwvG4OB%2FQMGHIArICexBBgAuQqmXKxYnIqwOoUBxUoHFQyrDx7IYmDYDwsVEqw2Qbb6QNEBqIEHYKECFXEou4DLarBLHUhUT2woMTIQBIwOnIq%2FQ1x0JRxKFkDs9IRIOOq1NCArhPsO4XtD%2FAHvAIvz0ge4fLNx%2FQYGBnLi3Air1cxwx7pAnQCjRbDHuUMmVH34AULqp04JBKojUT05acqYgYOLnTO3uCDPIRUacNkN2OMOGNSsDKzBBYnleVycDvEO%2BFUDISsDD1i1gkZyfkGlJlBT0AEirBBG1oTQa8lAhIVSWPTCjThAyAiw9Yq4jUCYRMgjYMdoEDQJYSCh4AQ7TZ9YAxHmEopUsEPNSDQXSnEyM3I1MrMnVxUrphUl5qYWh%2BS7pJbk5yWWpDJXMFfKJycWlJQWpQYU5acXpRYX8%2BeX56UWebpIQsV9MnMzS%2FjLUouKM%2FPzeIsSUzJLi1kYgPD%2F%2F%2F%2FyLAys9UAa5HoWdgSTGWgnm6QzxACFqPy8VAYGAPSODRY%3D`, `1,Commando,CatAndTie,990796,eNrjYmdPzy1gYGXgcM7PzU3MS8ln4HROLHHMSwnJTHUwYQADBz0GFGD%2FLg0M7D9A%2BS1VD93XiVTD%2BA4aUIV8XOysBcUM7AzogBFdwKESlYYDJgZpW2EGRvuXM0Fglv1lYzCwf8CAA3AH5CSWpOUX5SoYmnCxMrAfsISIH0g6ALX7gCfULhgtAvXGBwxXRmwsBuqEyRO0mwtutxGy1Q50sFoQYbWCRnJ%2BQaUmyAUOGJ53GCAXONDBBRIYLkByCGY6cCg6MJAOcaCDQ%2BRxOQRvGjlAM%2FcQm0YODEzUOKQ%2BQAsKjHIq3gHFQUjllNnGbAaG%2FR%2BIcwgjAwGAabMnlmLGHJygKHG1Kd1cjYh7c%2BTcAHW8w%2BB2vASG47Ekm0HuB3lcfkDyCm4DHYKgWRLWKFDBUJmy0RToBaJraqRkzMDBxc6ZW1yQ5xAJLYwycfgP6B5WBtbggsTyPC5Oh3wH%2FKqBkJWBB6wa5knOA4Q0ga0QRtaE0EvIeWALpbDoxTAC5lPsRijiNgLDIzhNAntEg6BJcAMdCBkIdpo%2BsQYizCXkZbBDzUg0F0pxMjJyggwAAESObig%3D`, `1,Spike Island,CatAndTie,992539,eNrjYmdPzy1gYGXgCS7IzE5V8CzOScxLYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFbFzsrAXFDOwM6IARXcAh3wFCi2ConLdxJQOj%2FcuZIDDL%2FrIxGNg%2FYMABuAJyEkvS8otyFQy5WLFYzQRjHID6yiETSkdCffNT8XeIi64EMGBQXHogugFFnQOmyREbixkY9sNChQSnGmF3qkOOAnanBjhgdSpcPcypUHVYnOp39ggpThVEOFVBIzm%2FoFITu4sPkOjiAzRzsQSGi%2FE5nNEhHmpxKsREXGkf6OaNGVZAB5CRILHHMuMBEqxOJ8lqzFhj4OBi58wtLshzsISm6ngHrFoZGRmBccQaXJBYnsfF6RB0gAjVPGDVsGDmPECUFcLImhB6ibJQCotehBHQIgW%2FEYq4jYCb5ECUSRoETUIYmElMyOgTayDCy0SZa0aiuVCKk5ERiBgYAGiD7s4%3D`, `1,Towers - No Bounce,CatAndTie,1040432,eNrjYmdPzy1gYGUQCskvTy0qVtBV8MtXcMovzUtOZeB0TixxzEsJyUx1MGEAAxgNA%2Fbv0sDA%2FgOU31L10H2dSDWM76ABVcjJxc5aUMzAzoAOGNEFHCpRaThgYjAWdmBgtH85EwRm2V82BgP7Bww4AFdATmJJWn5RroIZFys2qx0yoVbB6EgorYJh9cYZjgwM%2B2G%2BJMFqQ%2FxWH4ikttWCCKsVNJLzCyo1sbvgAM1cIIHhAqIcQv1YkMflEOLc40lt96gRcA9eZznQzFm6xDkLr%2BtgjAOWqAUFhusYGTY6OANdRUYuNsJvtUO8A5WtRmQlI6jnGTi42DlziwvyYLGBCzAyMgILVdbggsTyPC5OeG5POoBHNQ9YNSyY4Zoc8GoSRtYE13uAKL1SWPRiGIHfh4q4jcAwCb%2FvNQiaBDcQntj88DlNn1gDMcx1CGvAY64ZieZCKU5GRiBiYAAA5d0SXw%3D%3D`, `1,Blockhead,CatAndTie,1042197,eNrjYmdPzy1gYGXgdMrJT87OSE1MYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFPFzsrAXFDOwM6IARXcCh3gGFhgMmhukbpzIw2r%2BcCQKz7C8bg4H9AwYcgDsgJ7EkLb8oV8HQkIsVYbeDJU67PbF7E2j3lxteQO8RbTcXwm5kqxHedsiDMA4kHYBYaceAQiNZ%2FeyMG3lWG%2BG32iGTgZDVadHypFgtiLBaQSM5v6BSE7sLDtDM8xIYLiDKIdQPCnlcDsHrHoeSBShJFI97Dq6xIsU9agTcgz%2BYaOYsXeKchd918dASI5Kg67qqtUhxnQlJrsMfszRzpDU5jsTi1gMtAWjFokNJAGqx6ILhVrByYt3KyEAQMNr%2FVPwd4qIr4VB0AMVuR72WBmSFcNciijtjlEI%2BRwFXIa%2BCo5BnZHCzFyWzpGXg4GLnzC0uyIOX65k4PAh0DysDa3BBYnkeF%2BcBQqqBkJWBB6waFmVwTbCkhF2TMLImuF4HQnrBzpPCohdhBLQwOGCJzwhF3EYgPELIJLBHNAiahDAQlsnwGqhPrIEILxMyF%2BxlMxLNhVKczIxcjczsyVXFzBX8%2BeV5qUWeLvLJiQUlpUWpAUX56UWpxcWKaUWJuanFIfkuqSX5eYklqcyV%2FGWpRcWZ%2BXmSUKU%2BmbmZJbxFiSmZpcUsDKz1%2F%2F%2F%2FByVcFhAEsp%2FDRVgdpCCuZmECWs0m6QzRrxCVn5fKwAAArsyofw%3D%3D`, `1,Nothing interesting,MEGA-SKILL,1216849,eNrjYmdPzy1gYGUQ9ssvycjMS1fIzCtJLUotLgGyGbh8Xd0ddYO9PX18HEwYwMBBjwEF2L9LAwP7D1B%2BS9VD93Ui1TC%2BgwZUISMXO2tBMQM7TKODHZTBxYAGHPotILQKmgQjg45dAAOjQ8wBiDzMSSEM2NWzMZj5JjMwHCBevSlIPdwdkVC66ABe9Q6uDRB5LdQggtH7j4VLeD13aQeGMlj9AQLqHbjac258WpgIVw%2B1%2F4AnVN4T1f32Hw4GWegWp8LdQ0D9fjT1B6D%2BPJCCGjNw9RfQzCeg3h5N%2FX5Y0rhsDAb2DxhwAK6AnMSStPyiXAUjBg4uds7c4oK8A6k4lUMSBSMDMKDYgwsSy%2FMUDLk4DyQQVs8CU28EVB9%2BgKB6Zph6Y6B67waC6plg6k24OB0IqQdCuHpToHpC7gFCuHvMgOoJ%2BRcIWYBBy%2BmQSlghKwMDJzMjVyMze3JVMW9RYkpmaTFzhWRyYkFJaVGqT2ZuZgl%2FWWpRcWZ%2BHnMlf355XmqRp4tiWlFibmpxSL5Lakl%2BXmJJqjxUfUBRfjqwKClmdeCBWMHCwOogBGGy1v%2F%2F%2Fx%2FkIBYgLYXgASHQBWySzhAjFKLy81IZGACrY6kl`, `1,Dungeon Master,CatAndTie,1366182,eNrjYmdPzy1gYGXgcynNS0%2FNz1PwTSwuSS1i4HROLHHMSwnJTHUwYQADBxUGFGD%2FLg0M7D9A%2BS1VD93XiVTD%2BA4aUIUsXOysBcUM7AzogAVdwKHeAYWGAyaG2JgYBkYM9ZVQOhPqhJ%2BKv0NcdCWA6qMiI7GoDzqAog%2FJ%2FNy8JIR6h%2BoGVPdkYqh3dXZmYLR%2FORMEZtlfNgYD%2BwcMOABXQE5iSVp%2BUa6CMRcrlqBgd4hEc6ob1AkKGFZ7uLkxMB4gUT2MewDqFQc7BrzqHfIhXj%2BQBA0ybwLuIVG9QyokrByKClDVR%2BIwn0T15ESNCY6oQfeaJzToRDCsnjF1KlAdCeqnTMX0goMLfvUHSFSPEfWWBNwDD2o090ficA%2BJ6vfDCgwSosYQa9SwwYMA5jVT7GUVMP2j5AK4ehOc6mdebQGKlwSgqrfCbz6GekscQQE1%2FwCJ5h%2FAZT4O99uTEdRGDFxc7Jy5xQV58NCKxK6HERierAyswQWJ5XlcnA6FBpBklupAhOoDhFQDISsDD1i1gkZyfkGlJlATzNupD4jX5EBIE9hdwsia4HrhWSdHAY%2BF8BCAhtMBS2LC6wAh1Vg9A0sAnkRZQUg1phWcjIycIEMAMPjdkg%3D%3D`, `1,Battlegrounds 2,HeyListen,68044,eNrtVD1v00AYfgMKxi5JitSBgeFAHVj4SOnQibxEFV9qpRAiRAtCWNgJlvyl2FABAxmQQAgJ1E4g%2FgALEgsS20mdmfgDMLIgdhbO9t0RJ3HtVKITry055zyPn%2Beee%2B80Rek5PuyHWlMPQ9vs9b37rhGQBVAvmQ9XrCA0XVyEuHAeUtX42Y2r8YuPnz76fvHD3GMxxhMceFBTyn4AZUGkVwfJDwXbNHlzlFNm%2BfNUWgr2wdbma6DTwXGZ65FCcGmvGJzu8usizeuDFG0I%2FmnxvBzhXCF448ebqN42PvPnN5hYJcgpCaB9mv7ncNsL9dBye6Rl62HX6ztaGcroYeLL5jEckM758uPtzFze3To9nrqYaH0MvvllFXBtBC7iHIWX4cX2FaA5cFSP%2Fe4snzzC4XiTix%2FPhT94j0Bz4ENmNhhcLtLXs3FlLRJAtW317oWpoOn%2FoP9B0JUVs5vOWab6ailjy%2BAdnHgesuBufAwkEbefxaZ3EG96Yeg5pMnO3LtmSlxsvnHxc5MP4wRZKiqeew4AzKxahmGbpKnbdtyAHa78kuyRN%2FoEM7yp8bIJZ7jnzrJLS3ausCYNbD3nPUL1Qdra%2FEi%2FjXTTdPDinT8jmp7Uz4CqKaoT%2BC5a%2FOtrGQGwBAyoJHO85usbLqlrqujWKVgLmkrztNhlwKF4paUUzZMaI0VKl3k%2FWdmkdah2PJ%2F8JWqqbEMruxsuQCWisa1CgoSFeWKMtg61iDUUCOOJ832HEFtQSziRHufRPB67WlCNJ%2BYImloqsfsPEHkiNQ%3D%3D`, `1,Slopesy,raspy 667,808262,eNrjYmdPzy1gYGVgD87JL0gtrmTgLEosLqhUMDMzdzBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhexc7KwFxQzsDOiAEV3AofwAhC46gCrBxJClqY9QD7fqAQMOwOTkzgX0zYHsBjD3gCdOKyOhNAeaBBvD2c1Azft3zgSBWfaXjcEAZuX%2BCweDLHSLUxEauANyEkvS8otyFUJ9kO12CGugo90%2BYLsdKLF7cmMM0A5YrBK0WwBut1OQQnB%2BWgmyAw74MdDRAaEIBxwQgBpvQm0H2GM4gB%2FuAF9EAJRAtMMCgoEDw35L7PkK6FKQ%2FZjutcCpHiVzwNUbkGi%2BHonmw9wjAQ2Xl4q%2FQ1x0JYCZFb%2F7oer3E6teBEM9fveIYLgHrN7%2BJfbchAlYg0BlHwMHFztnbnFB3oFMqMGe2JUzMjIC0wx7cEFieZ6CMRcnTP2BSNzqOWDqDbk4HfIIq2eHqTdCqMfnHlaYehOge6BZAEZjU88CU28KNN8Fqj4Et3pmmHozoPmF0LyedACneiaYenOg%2BVB1%2BNQzwtRbcDIyAhEDAwC1XNIF`, `1,Gang Grounds 2.0,billioninjoe,1308302,eNrFlTFr20AUx09yXVlqhlD8ATRkUMDUiR1oNh3BwQQSKKaEFLJIdWzkypKR3KHJ4iGQ0XMy5RMEshd6pB8hX8AduxQv2XNSTmfdyYesLH3L6Y4fuv97%2Br8nTVH6wxEog%2FW25fX1duB%2F97qh3viwBdZsx3Ud33O8gX8Gd0AccAMwYf7rxWHOyf7y%2FE%2F7rnqR7KFBQEVTyqMQKICPEn8Ap7vMSkMG9XodSJTzIctz0jBvGEaKd1EeX6vVgGT%2BvY7ixnxsxmHOgCBku6%2BVFykha%2FLy8C6T0pfJ8islVuKCByKeKQHlD9iVLwF%2FTnmBHlSQz7x%2Fh135T4heySOOE9UHvpKHK%2FKoIL%2B6pd7HbbiX6jw9bTF4TCxWpie%2Fr%2BIj2oBz7o1vwMl9iCW3CO%2BQtcruUyXfh01ckoI8bQLOirCDeH4wGKQ%2BvZNjMTnWD37NuXwFJVwISQS3QGacVI6crv7JtcZRbZE%2FYzOTi9Y2044kZ3gGl%2Bae5GL%2BNJ4epqebYjtURtgJVqAfRkKhWCjJ7f8L7TBuTYSWUG%2FCXrwhbJj4YliQz%2Fw7RG4ihUjSzW%2FINRv%2FEb%2F%2B0G3LdUMmufEt57jcaUmsvPo00CKP9vxgqH8EbzVFHYYjDwb68llJKyLh6SB3GpoKv01WQrc1FeWhUjRzZBujtME%2Bi1EJo80UeiAWgNEAoygvLSKgoUqSGm2eAWvizjU%3D`, `1,Quadular Grounds,billioninjoe,1324297,eNqllr9v00AUx%2B9cjGsDUoU6MHrokCEiahMhJnytiqJWDMBQYLSbNNg4drDJQod6qMTIDH9Epap%2FQO8fYOIfKBNiQZ0QG5yD7%2Bw7%2B2q7vOXpok%2Fefd%2BPe4mhaZPpDKhg5dncHs19OzKHUTgPRjG47bi%2B74aBG3jhGA3AwtAa4Mz6ebAw6zI7H7%2F%2FNjxZPaRn1MnAm4amzmKgAdFKn6CPDznPTAG9Xg9AxoWI5wVphO90OgXex3V8t9sFENO4bva91cxHWOQfoz6AqCWPHdwufkve%2BvEptc%2FW1%2F7CrAsgMcWZGGpFS26VWvIqqS4Z5Euc80DGcy1k%2FA7vxRaKnzNeoge35EvxB7wXRxBfk8cCJ6sPuiaPGvK4Jd98pO4O7WBibhU2h1k5Yqr42tkCuRTIG%2BDlaUwk0%2Bmnr2EvkY2M53mF19KQp%2FExHd2G8Zvy5zS%2F2hKqT337XVysGjpCNFZm%2BG122yN%2BJxRu%2FeO%2ByY%2BM30ykvEd463em8oL3oDQX4rIWA0K6AzbvHyfcW6HJACNN9CCMpuaDyhlZwtvCpqdju%2FzPn%2F96cW%2F3%2B%2FYHov7LGbkE1fCWwJeSkK2JbAab9%2FDOE3se7L8eR%2BZz2%2FUl2e0Iatf420vZ1fD%2Fmx3rfW12Kyy7LfJXYX8cgWVD06fxLGDa9hLJ3EBynRKtG7r4MKvQJYJuGDr9xcQjIEUVgvYJmgm4CiVwNMhRqQCYlkZx1nMBV6FEq7ORpyUVANPHpjhEK6rTClO9ijPQIdTTw1%2F6LfRC`, `1,Double Katana,katanaioninja,1353828,eNrjYmdPzy1gYGXgdckvTcpJVfBOLEnMS2TgzQbTmfl5mXlZiQ4mDGDgoMKAAuzfpYGB%2FQcov6Xqofs6kWoY30EDqpCDi521oJiBnQEdMKILOFRC6aIDqBJMDDExMQyM9i9ngsAs%2B8vGYGD%2FgAEH4ArISSxJyy%2FKVTDmYsViNQ%2BG1Z7YfQl0ZHFxMRanujXgUg92KoZ6Syitx4DuNbD5MHm4ej387jlAonoHIzT1Kgx43X%2BARPUO4Q5g7gETtPCUgdD7P6kd3nP7%2BTqgf2tqaoDqAyDqHVyg6mD6FNDUszHk5%2BcD1QdB1VugqeeApr7bb%2B7FLhRdCQ%2FPeKh7PLHHr%2F23cAmv5y7tsKTlEAZVD%2FW3gyM0fhkw3N%2FS0kJeUjTBmhRZYUHngCPo7HEE3QEcQWePI%2BgO4Ai6%2FTiCzgFH0O3HEXQOOILOnsigc%2BBU%2FB3ioiuBCBpBRNApaCTnF1RqYg1BpgMpCyAmRKJlBhE0lWwM%2FzOzgeIkqM8CqocXcRSXO0wHciCx5JAJtTLoAIpTkMoFUOQxOJCo%2FoAKsU5FBK4xvsCFl2QO%2BWjJIgijkAZFL1mBBc4ZByrR5JkdmiBWHMhEK0RVsDmSEV5%2FEK0%2BkzT15AQu%2FpTrUDABtZiF5R0RHNFLqnoV0iPDFFRjc%2BYWF%2BQ5ZEGjPKwBqx5GRkZg64E1uCCxPI%2BL8wBRqnnAqmGBwulQQIamA0RpEkbWhNALi%2BN4ByL85ECUanQ%2FQXPKAT0GYoKNKNUoVnAyMgIRAwMALJw18w%3D%3D`, `2,Stone Pillars,Team Arrows Ram,54144,ILDmJAhZIawhjrAIwBUAmBxAnAVwC0BlSARQEMB1ADwGcBNADQCkAvEHAVQMoDEAXAJIBRXgE8AxgFscAZgljIRepQAMIUsAAKANSw6AFgCMSkCQDtmANwyyAsqE5SBIZgYnhgqgCwxE4OxBBBGR6EE5IABtfRGBSXhxYpOTkrQB6WAMAahQAJWEAGVzPYF5gck1Y4UgCZNIsSsQAEWAiRoQCtIBWQQAzfk5cgGFVMKh6+FjoSnaIOzhkgHdhScQhtKyiAAkAdh1hUn4sBAjaYNj41ZDgCVok+dqkqwzsvMLiiDKjIaTqx9jFlsCkkWjMkp0ev1BiMxsAhqQtgAmRYpVFo4DHCBNHQ6PBGZz8HikRyIgzufRpHZpak06ko4C9LK02k4SnMmmLSAAS3oUnOUBAKB0+K6xkoOlggl4ADkAPZMKKM9nUgAcIC2aWeyqVyrVnF4ZH8wGlOkoXTwKhQkQIQ0gaHIWF4iwIjE1yrSUDZytkbuVwGEKGlaHagWxuPxAiJJLJEgpVOV9J17NZ8fZnKokVlCGEguFUlFRnFkpl8sYiqZuvVvvZSeZat65i6WRCmhNZotlCtNrtDqdLurzM9qeZPq17OATVA3gA8gLgOdGIFIEK8QSiajqpR0Uk0jEkus1SC0mg7KxT+f2Nur9eb7ft5poKRqnEc4aIDmwBONCBFzAVxHCTBO9t13VE0gANgIKQoJgqQACtjwvC9gJQ1C0KSB8X0fD9NDKYBOFRQIunQ5IyifZAoB0aVFiYDA8EBYFYhaeg7hIpByLiBAdDQWNeFkIxYEgMR6UQRYsEYtiTmwhBeE4WRIAMDBER2YACExRB5iIETJNKLCQiomjGDo+oPmafDWJ0mAOPabjeP4koQAAXiAA`, `2,Partition Demolition,Team Arrows Ram,177474,ILDuJAhZIawhiQEVgFU0HEBiBPAJpgDYAMAhgOoCcArgJICiASkQEbUDOZAGkwA6sATABZgAEQCMLAJoUSAc2TcAUrlYBmfAC862ZQAtWqCPCQNxUorIVLVG7boNGEAaQnJ55iAGEQ4YPII5t6okMgAEgCOxgjQFDFIiSjYpojeAPQA1ADK4QDsAGoMyAAumAhokABsqQjIKYnQ8hyJDJAAWkkACumw+plSDAAyTIEg2MCsJK0dSRFDjcDSLUhi6QCsdABmJWhM3iTSPshiK4jQW75mkADGSceni8szd-cwyHT4-rEBmGNviFA2CoAIBlU6iWQYUWNzOQWAolB9wm8Va6DmdAWq2A3C8SKQYQaBOAE3xCCBAA8yUgQggJAVWABbdaGCgFWC6AByAHtpNxIEQtpl0iLRSKABwgcLpABuYrFQvloslkQpHH+P2A9KZLPY7K5vP5guFSvSkuA0rlpsVppVao1PhA2uZrP12B5fIFNqV5stpvS3vldvViTEToZLr1HPdhq9Jp9IDWFMZ7RTaekgbFkr4kRKTDRWojurZ0Y9RszysT6WTqdrjLIFYlwD4VTziVJzuLbrLcf9vtl-sbZuAAEsxOtoMA8cByoWda7S7HjX2pQPrfGg8B1tgyJPEOFw-OowbPcvbaurUqh5Lt7vEnRD5GSyfyxusxfB2-K7e9wgrtgtBAdo0HsIgbgAOy6YBYRmMNqRAdJEVDYA6AdKsABUAFktGw3DAPggjCKI-FQmAZA2jI4JEC8QI4NCQIDwCEBuEw4BvFgAxpEEEpwJuRkqAkJkEmuLZhKRRC3nSKo6zrAArdIsJwpTsOI1S1LU0jyOgciUBJEBZOAfBSUQTDID4dT20o39IAKTlQD5fAaFAcIGG+CAwzIMT1LCCiEgKdCbhwdRWFgSAKVYpBQEwWoLJASpKIQbA0HUSB9HwQR1kM4yEFM8zYsSqzYls+zuEc0AxBixNgAAeS8tSfO0hB-MC7BgvgTLEnKyqLPinSICSlK0sEPIljhCBTNE-L+sKiAbLshyaGQTAsUQMNuGmKb3l8pqAqC1gHQAXiAA`, `2,Cliffside,TheRedKirby,177491,ILDuJAhZIawhiQEVgClkCYAeAHAWgLb4BeAhgOoBKANiAC4CqZA4gGoDK+1AMmQBpoAlgFNUEAPYJowAKLAAwgEYqE-GzQ18s+rgDGhNAFZEAJzYAVYOJABJRQHNgACRABNEOAUhG0lC-AAERskUIQAWUh+cCRkWW8w4AAOYBNQ0ED4JGgKEIhw1LCMrMQcvIRg4BYiGuIpRMi9GMRQZ1lmpA7YlhK-NwBnUNlIbALE0Og9KzDK8cTh6NC4hLCkyHwizIngAHly4AK02K3s4FzEyuria-x6sOGm9LauhBeEZB65oZGxlpYebZTC77L5yKJOWKyMjjNYbdInUq7faHMLIBF+c5hSAffgQvqDJCRNhvD4AMTCAHoANQcZwAdjYsmQ9BYCAADKDQoFgGwACzfFh4pAABSRoRRS1JvQg3L24sKkuliEYkH6JIU+25aDCBUwnLCADl9Z1SQAzbbIewzYpcsVIYZwzromV2xAO8bk-Aib5CN6gM3bNy+JCBClGWymphUBRsjwgS61Gp3cWQR6dZ6JN4QD5KmDAAbfUbGvNArFo-bQMj8+0KFi-YtfRgKcJWxBo3PQAAmAGYU46G8ByUbvqYhRBQBqB6DsaTWadcQ3kKToUgFNTaQymSyEPAjvroKY2a3Qiqksfs7Jc3NItqp4PgIRAmO5ApnHo73eNc5MC9uYwCW6kAAG4giAX4-iGwD-t8e6hOBv5QQBCDxAoWbxsKFIflOkCRP2ryXramKIJEHB+gRxa4XeKo0NWbb-NsbDvvakAABb7EBFKwCxVIqLIPBUHiw4Dku3qnKoFz+rmsr7PIsHjs6UCush6wesAABG9YQPIV7IJOkEGs++qzA2CwkvEMIqfCHZKfkCrHNZRHZDiz7QAWzGLN05Kruu9KMsyc4gBykA3NcK5YsA-CaSAkRFjq4zDLgDaTNMxGQL6SwZmEJAUmhWHjFQZzIpApGKraHAyZZxrQOVU5DvckCjhlYV+MgcYDtixl+FWKaYIZcQBQ2zgdEobBqYQRgsWpFBsLAtikgaEhuPwkA0KaVIUhtm0bSkLgUhxW2bWtB2bSkACuKhCX4wAjWNE1TTNc0LUtK1HcdFI7c4e1vRSr3HWdF1wSAN3jZN02zfNi3Lat61vR9X1vb9B3-VQl0utdo0g-d4NPVDiNbTtoaJqFeMncAvIAHa4MmWlAxjd1g49kMvTDf0gJ9+3HST22eOE3J5F5wP0w9EPPdD31wxzB1c+9PN84gc6C6Dws48z4ts-DnMs0jsvWIgrjo7dSvY0zYuwyAPAUoZwDS8jqN2LThtY4zos2+rktba750oyA8gQLeitOyLuNa-jbvfZ7ANyAgADSDuYwzQeq2bXyuxTVOhACBvx8rJuu7t7uHSHpNgLzusRHHQvGy7Rfc-n4c1zLJdywgw4BwnKum6zdcIw3O2gKXeQ7BXRvO8Havd5rasAJ6yHQoSilnlej0nXfs-XasWN2U9Idmw+Bx3edrz3G9bzvIAFYvI+J532sT1LvfAOTFBGKYPsIBwe-t7nD93x7D+wDQIwolfYgGmG3HO1dx5H0nmbQgWgKBvwgMGcBVcx7J2gffNWuBYC4FjlHCAbBP4QLQV3C2VsI7eyQAgy++9v5QI1pg5O-dm4QH4EQ1BK9b4YL-uPZhZcIBxhQcvG+odgBkLCBQu2wA4RCOvofBhPCzZe2HCA4AK5ZEHx-twwuatlGIJAGpdhwi85zFTpTamIAmIaLocncRoRJGhE7EYuRWiFE6KUZHVRolrGQPQW4jaDj8FsxAKSEg59+jcHwGyUALAACcZVQKJGFFScYySQpJgpGyEg4Rsm5PCLlPKhSik02sMMUpMh3zYiqJYxQIBbxSFJKgVM4AoSYBoP0DSkAlC0VePRYsoYrbAFDLgdJhAyDCliTkqZeTimzLmVdMpcRoCoG5MAQYqzhxSgYCQPQLBSTdjUkISAbJWA0FOvgXKMSnz9MthcCkIyibjMmXkmZ8y3lFJkL7JZusEj8kCOASyzg2DP1Om4CgSgtBzGQNHOkAA2G5gyLZZgmdM1F7z0VYRkLYZZiy8wyAimMQw5MlyZ0RMgAp88UlJKpKM24mSXlTIpRi5lQwUCLLKbrJkwAP44XvDAR4pIDA0HJmQZwBU1IckJJAW8xYKQ9KQBSWFRMiAACsKQWFRbkll2rjRNPKaUmA4AEGpmqdImAUgWDgCYqEkAnY6ZG3GNyGqxZkmpJpcqiQ9LNX5J1b6uYXz2VYpcKgUSKr1JRQOJACggy7zkjiKUNgBpQBLU7KdZAzhrmIG5GwCxeUqnLIQJYXZ+y1KDCpSaZqxTgz80YN2VinZMB0mkTtVK0b5lxtUTARNyb+CprRPK+MPJc2Yr1YgIteyDn9EgKAAdYBlxvJVPwkJtb62YBMBpFMba5leQ5VAbtKa00sHNJBHN8z81LvHSWoUVomVwR8pufysgWD8CUN2AShTZCBECCxAdcQrwgH2kZO88g0ARijDGNwyB8Cml7QND8yBwg7GcGOaA0EZi1zmEAA`, `2,Arrow Grounds 2.0,Ranker_717,173728,ILDuJAhZIawhiQEVgCVkA0BSBPARgMwDGA5modgG4AmA6gKyzG7C4AyAViAMIA22ABb4AtgBc+xPgA5CAWQAqxBAFEkMEAAcAygE1GAJwBaOAGYA5AF4rCIIWWA9NARw0JSwANIhwPVBABVRxAACRQYD2hgOUcPHhAAZ2AwmGQAcXgkaABLf3V8gsL1AMgg9WQAETyimtqEADFgADV8tQAGOs66yGR66ohocy7hopKjfMr+kengRrop4HaZ5ah09nUchZW6krKkZD9tmcaW9TVMo+GelQXB6eQQzA8ZkrTnxEqLzpVIAEYAFmWjTQAHszsAGBMVF8BsAaAAFZbXW7AIZnSDYCYhBTgF6QNTlKrqCrAbQLH5tMHHdBUxBqSHqUDQjZw7wzHoZFm5S4jV7vBCfEY-AFA9CtYAdK5wgCmSOQKgAhiyAPLkjFYnHLEoE-ZErKktVtaSi0HghlIJkwqCsuU3FlopAxPYfEJpFZ8wlW4AkxrogAe-OGwPFkotzP1NDZ0x6fXtPJGsB48OV8cQJU0tIFAElYJnU4VGgqlUgVDxsFH84VlBAKk0mgBXUT1MRGeakAIAJkEgmIaSaAHoAOz9kejke40wAajHY4AnEOZ6PQJBJ6YAHaAkveuuNkTN1vIdtdnt9heL-sT6fn+fD8+gCoKAJNHUILPbhtNlttzvd3sD2+Lpe579jewH3o+z7qDEtYfnuX6Hj+J7-mBIBTsBoF3g+T4vhAqAwbu+7fsef5noBqFXouGGASu66bmm74EfBR6-qeAEzkB16kexNEbuougMZ+B7MUhXFjhxlGiUuPF0Qgyj4YJREschd7kehknjtJ6gePJcFCYhJFsWJqmcYZUmrrxSDwDphEIcRrEocAaEmWBPAhII-zVogYLWUx+n2SpjkUTOVHcXwrbOhASQ+XpdnKWRgVqaZGlhXQEU+AJumKSJSUXsZEk5aArnuZ5CAdNFWUGQ5Tn5S5bkeeogLlbZSnqblCXOXekApWlwDGk1wmVQF1XBa1y7mTJ1oZTZA3+fFw1zqNXXhVkaj9X5cXsXlI0FUV9WIJAb5rbFo1bQtBVLalWTQTuCnNdlVVBWdtXFVkeE3Zld2DXNj2jiFYkXWlpRTb5x0Fadv2jbtJVQPxR0tWD7U1Z13VZHJ73TetJ2I9tz17QgkDaejIPww9iVgVhkH7VZRMxSTQ0-SOf1SaAxApMAeSQN5NMVbNm3Y09Kn9vCljGvtUXc59vNGfzENg0LIuMiAmAxDwKg0AQhANkYPCQHIoBpLOLKmKGqjANgWamGIARoDwbS6PCk6FFQ-YFP2bSWHIHte3rla+-GahRPjIAeG8CBgoc6xgN6HhovUmSCAkuiYA2uhdpIsCQJoExxyyPDaCEg7PsgYhpBU-aBggZeaCIRg13XCoHFshQxF6ftt7C0QQASqBRAS8yOGkfqCPQDCcAqfa4PrXrQEW4Lm5b1u2-bjsFM7+TQJi7db-76XhL3wcwOMwBZvgaT1L8ojmCCJjrA36JH-swCwIIk6-GgKjsGgpD9hNiD9gAbLXIBdd4Ct0KCSTe28oHs29B3busDZiWBAOYOQWZ6jQGIEkR0wAV7DB-gUHg-ZRZIDLgoT25CvbQKoTUHu7Mfh0PCASeoSDUTaDQSSTBUEcHTHwfkQhxDECkIoRQ6hoiJgaHlNAeU4RfTMJAIIEIxARCzgviIQ8+Am7syzFmCuRQhHe0oUUeEs5hHezEeYuBUj6G0OAPxYAysYB0FAKQYg8RcBrGJMAfuwwHZOxdvkN2BjyG4gsWI7u1j6GLBgOASAxBwD1GINkSAoAswVHWLoLBiA5CQAfl0Xh6h+H5H0aY0JFjaGSIYTAt8iD5GKOUaow8CgfhUAWA8Q2+o84FyLiXMuuiQDsDakgYxpjyGlLEVEKYqBvCQCiuAHuagVAeAUKkWYHgWixJAP3Hgg9h6MDHhPdI09gCzy3PPK2Ns7a+NXv4-UkCxljIJCEmxag3QwDiY4ZAzA-b5PUAA4BwDOD9jIUElh9yqHlIieEI+ghgDEDuV3SAdBfaNGkfjJo5hQBJxoPWUAIRDj7WaH0lYPQJEICaEoM+hB8AJEztnSO+YqSopAPUAIhBIDDw7JCO+JZIDaBCfGbwTKoDosxZgbFTJdHQFyfGa4Viojkt7PUKlGdqn7DSJorUcqYEsrZRyyEugvTZJoPynkKLIWQBFVinFaR4UgBJJgaGlxZV0PlRSpV+B+T+BNXkyc+dC43BLn7c4WJ6XqFMCOToJIZhlwYBbc5S9kB0DkNoAI3qZi9CORkghI4BHrxADEGY8J+zP1fu-T+RLiVm1aJASeBQi2DJqGmuo-ZfVdIDWkFQ9ROAqD4AWo4PxpW4TSKGxAPBnY3MKMgAAvFOoAA`, `2,Arrows Warzone #4,GudStrat,94011,ILDuJBhYCEEUKKSBAlOANAUgTwEYDMAJgF4CSAYkQBYDGAdgA4BueAtgKoDmZJCkAUSIBGAFoUAcgAZabClIgwA1FwgARVcARlUBAGoBrDgVQ4AmhgTA5OEBWYB5UAMTRgB4G4ASIDrBAA4iBkKIgAssBhCPAACtSMABxIMMBKAfTgyFnZObkcagAsAIYAZshwkAW52QIwAJaZ1dkUqemNIC4Ark3IKaIA9j3ZsfFJiCkAMppDKAGMM1n5xWVIFVULwLXdG4gtaRlIXTtqwGYAzjuKcHGJycBTO6ABRZcQS6XllTthMACOVpc9m1DsBtgsTnhpjt4F4vADFPcoa8kAB6JQAZS8AHY9AI4AAXIJvGAADwUn3WdwA6vChjEUQZqEphKgBBNUNMWrQiFkjllQBQPBs1CiAKxkEr4jioSBSMxXWG0-wPZA-eY7NGYnF4wmIDik8mrL69YBFJVNemM5ms9mc4Dc3mg7JwLwTY5iiVSmVyhVwk0qpA-HDtIaa7G4glE3wwUBC1YUFIm9Hm6qWpkstkciBcrC8+Dm5xxmYi8WS6Wy+UgGGQJUpDguVX1EM9MPayN6mNFiBwBNZFLnHZp62Zu20XPIWpwc1wAIATndpa9FYVNZN9ayP2YKdyrYjuuJsayPcTSBORAApoOGembVm7Pbx4d80evBgkU0S57yz6qz2u1XgAkbIfjvGZIBRYQABtaDMdFOiIARqEaDwwRmFJUCafUG0+c0z0uZhr2HW1s2ADDHX-FA-Q2CYPTLb1K1gOABAolInA3GAACY-AWcCMXDHUo2AfVH1WNQLhNIhIJ2AirQzYj7xExAXHfEBQDIUVa3tWxXngChKXGYBk2RYyUOhUjMPcZ03BNAArKSJxgchkRaGlHUNeNBKGEUqT0ElqAAaVFKRMSuAQWAwSAbOEUB+nnMJmyaUA1Gwy59TdI81Fw05REdUAVKGFp0QSlx3MQGcAk0sIQh0uA1G4u4WnYmzBk+YyhOAYRnXgPtTgANkdfKCqEhilOAElnQoEgshON9kV0zyAKidjaASgV9J2fVLyPZi2teFpZocxSIDU+ddr7Ht1oAoyJ0gGJtzazbnR2s6Nn2lTaiOl7qngZ67jYxsOJSnpeK1PdBOE50xJ6mhpMIuS72SxAJD0KlRU6MwqSg0RIBgAAVIoAgoUBRAwFECJRCnKZRKsUSxKmqYIMn6cp4AvAkAgzHAE9QmR1H0cxyDsbxgmiZJpnmep2BaYllFGfJ5ngDIOoJiIaIkFUXm0YxrGcfxwnidJ+X6ZpumJblmXFeV1X-EQcBNf5nXhf1sWjapk2ZfNiXLZVtWEUAlGtYFoW9dFw2Lal03mc9hWlZ9m3f39vntcF3WRYN8WFYjj2M+N2Pre5mANYDh2U6d0Oc7drOzYrlm899qs7eL5Pg7Tl3w5gaXq9d2urfrzwQHt5vU+dsOvarqOa4p7389cBBB6D4fy+7qfx-p6Pc97+PPCLpOF7L9Pl8ljvI7XyfqbrrfIEb3fHZDg-287ifD+nvuTkTwPb9b0fM+P7Pn4v7mmV34lxbiPM+7su4WwAYgDQwCh77zbmPX+kCvbQPUNfD+pc76IJ-o-U+-9N7cwbPPT+YDn6rwZuAtBHQ55Nz3tg7+xsKGU3Xm7ahmwd6YNAUvB+J9KEELjkQjBIDF73yQXg-hUDCG7AHnQ0hPDxF8JYVQ6R2ZaE3ywV-cBzCKasJ7oI3YnCREIMYZXZBT8pEGOzMI+BDDtHmPwZYmeEAiQkM0WQ3hf8LYSA4kof4yAKpwPoVo8hDjJFewCBhGI74AhGNsSEzxKCFYCFnAkAATlkAINjgkeMUV4r2KT0lZB8EE+RYjcFKN0dogoMQKpAz9G47h5SmFhOUeQmpdSkBeDiTkhRFT8kK0icAaJyAvDZLKTglpEi2kWyGSMpA1VGmiMmWY6ZVTn4CAcFfJUZB1FcOWaYlmOjZbgM2ds5AZAekTMOSvVp6zvG+P8Qs8Z7i+lMOACiXqog2DfN+Wweg4D6T9GEO+ccSyTH2LWSc5+Pi-FKiwHs4xdjQlQr0VPWFTzEBYCua85plcPlfJ+US75ALn5ApBcgLALymkrKOQSv5fzSUW3Je+fysiNE0puUfVF4CMVKn8oi+JuT+lJONny5A-kcWcshZU6FFszmgH5dSg5MqBnGzme+dK4LkWJIsQUrZirkATEFb0vFRy7lyv1ec7mDxtUJLyaKt2Gqt4TGVRClFsq0XU38kUUUoEIARFKbi2ltyeXPx9X698bgYArWAP5MwcgbJFA4kQfA+hOg5S+jAlEg0RSMGJUSooMRZxhBIKW8tZas1VurTbWoWg60IBGlofukQbaNXlDGRWIAPCQFUOlcAQCHAgCSA2DCMAQgCHAH4GAfgKCqAwHYKawA9CgDwITGQCVuwUHutkEUg0IjVWQMWitJ6a1nrOomBtDbgC5kgBEIkdRPAIARdYTwtA40gHVIKEA2MiAYFQFIPAHEsTACIPVcIMAgZnRONZU8SgODnk6BQLwaTqCoBA+e4ytUd2XH4B0CADZVA5RgOsDAEROJYDoPQLAjASaHsw8gcCYxkAilxiestS6GNcYWHhzYyBVAvBgOJMjsAqSoEghYVALVq09hsjkAiOQURSA4yezd3H1MgmbQZZtrqwCwHAH6GAmaBC0A4hQDiohaAxmnF4TmVaRSXRADEAoqBeoFAQ0hrw4kNNnQiEoS4iYyApCYsF4AJwYBJH8uAbY37gC-v-YBjiopQPgYDZB6tMHd3wcQ8h1D6GfMLCSjhnYvHsKEeAKoQQIBXIwDZtQIgbA9D2ig5sTigas1oiywIHLKG0MYYK21E48yNh4ZC-W1SwBfieHAMaxWAoKInDY9WmMdakB6FxrQQmBA8AGCM9kZwnGs3vvG9mYwMB6vAdOC12ouNBrIhcExZIegJCgAsEQToM5uYIg4I5tqiZQsQHW5tig22ziFwLAIQ7X0zAA9OwQc7RAktXfYvFatRJVtVme69jA72is9SAjW5wsPl0ba2zt4ApVuxAOrT8E7dgzsXfWKoXZZm1IUBYOwJrn0IArH4AICQdAcZFCA6KSCFRtySuAI1KwamBtNBcP5145NizIk-HRZcNa-x7Qpsxpo7W5cbBSMNjYeAKay6QObncfE2z7mrbUTN0I6XVAALzO6AA`, `2,Spinny Capture Thingy,TheRedKirby,79820,ILDWJAhZPD4cAisAagVQMyQA4CMBbAViIEkBRAOQAsBjACQCUBGWg9Ac1QHFr8CAJkRAAXdAENuqAMoAtAOqMAMuIAaAKQCWAUxTRgYyTIXK1W3cADCtTBAAq2gBzJ4pYABEQn4OXiWYEOAAroihCNCyAJ5hgcAhMWGeUQlgcWFI3LQcKQnBYQDumdk5YXmhhfrhwACavrlpoRmV8NC1KWWITaGebfXxiBXdNXUxHSVewMl9BUXjoWPwGe7FLcCqAAztDQPcy4ieG+2QtChzZ+iWAAqnCEikAvlnTzEAsgD0AJwvAF4-f983Z45bj5ABicAQngA8oCIORILICu4IatDk8kODQtAYaEXgj0sihmjnu8vr9yT87G8yAAzMSMSzrapA+AgzH7YA4xDwxHlQmIaDEuYYlEQbGwkB43mdfmQtabZ7NYCUVDyIhBaryZgAG1klkgdkkoPyslUbwAbm8rdarVA3gB2G02zAWp3WqzUN7qFY+DyoVBBQigkQKJAcdAAJmodCkDrdVsewBpAGp4584-HHgB7GmRZkQfzAZioQhEah4eSoUCkUGULPVVSQbUptPOYD0V3xlvx5wAaXojgICEeKrVGq1uv1hu4xtNnbddsd8ZdlvjHq9PpQ7n9gYIwdD4ajMdQGbdie7bo+p6d2dz+ZAoJAxdL5cr1dr9cbzdTPZAHdXboXk6fYDkOYrZKO6qajqeoGkaJpmgBTqLmmK5puu3rwLQfoBkGIbyGGkbRrQsZLmeIBATaV5kTewA5nmrhPiWxCvlWNZ1g2TaUdabb-mm3FWiBg5+CgkHjjBU7wXOSE2ihy7zshliephEBZjhu77gRh7EaRabnj+l7Xjat4MRAShMS+FZsR+nHfq2f4KTaAlvEJYETMqqpQROsHTrOiHoTARnWmha7kB8jgAE4IJs264Xu+GEUeJEnjRxkUQZTrUXpwD5Iw0jYS4UIWSxVnvhxX7ObxjnWpVwDSKoAAscC+O4I6eeJk5wTOCHVbagWpcFvVvD42rJuoUCSiABEwMWGkJSyORvA1CRLWEVJ2P8-wLdtO07XoyDwi4VgIHU2TeHoKDcCABWqC8M1xZpEq7SAq0xG8ABssgEF9P0EAAVm8G0UuSz2g2DKT7Ugh1QyAKB3cAoLfCAWiyIm4MeG8PqQm8ODfXjX3iJcZKbb86Nk+j+jQ9DHggDF2SXCAjCTNEiB4uNZOPlDzSQKglD5A2AhBIUWQctIT07ZAXNHSAqB2CRoKYHgWPDuQoqg+g0AwxAoJYJA1ACBGy2vJAADObjo5zh1irz-OqILIC+JYVB0Pq4h4BGRDakgsAxN4lOw+TgfY28aMxOQAC8QA`, `2,Get Squashed,The 9th Doctor,81600,ILDWJAhZPD4cAisAsgJQEwDUAMBJAMQDkAPAEwHVCAvAQwHFs4BWAVUbYHMB5ADXQB7fAFF0ANwCaAZgkBjLjBDtOvAcLFTZ4hcADCc6RAAqAdhAoI+YABEQhCyADu8ESEUBle8C7HEwET09F39Q22AAM1wwmKgkUQAWRGguUEVYhCcACQBODJi2PQZoxCRc-IrKtAB6AA4q-LtfMIZskRD4Ow9LBFRIAAdQp0I85OA6Hvg+iMmIMvbELtmQEUhSVH8yvnTO4Dk-RFWARiTQ1DqGjKaD-3QnBm3F4D4S3sgASw74e4AZfzsXv5pstgMM4AgAa8ppAPF8IL9-sBukDIDN-E4bODdoCGgixjwQcDNiIsRBIf5VrD0Qw-mNKITUSCkCNETiEKtPtTaQhoAAtACmKLRpQeOzJwHpKIANqdMoRSQgaNU4ZdEKg9JANv5IA4BUKmTTEZIAM4Uxnoll0hnChDM7m7E1mgBSQ0tPOABP1DTsjrVwBYrtGEKR1pBw3t4t9b15gdZUIgRMQeODUehMotQd2erVkBjm1FT0loRsAAVqqrYk5RCqoMa1lrMiTERMvSKFeE2a56+im2N9maTuisgt3eRBaFIEgGO3oC7Lsz25VwGxXTOJSD4MvQgvtevYivF1P23ZeYIKxkXQ4UQBbMVzeWxS9nSC3i2LiAOOeHAbbhh0c+xHoSCTrup5mnmYRASBYxgTmEETkgQG7i2AEVlu3p7mEIhikc2AAEbXiwAAWeGUMwRDEIIkh8JAUoRAA1NUTHMUx9TAFk1TiCxLEMdxzH1MYhA8HCKDENglAsAArpIlBHFKvIasYjCEE4vJ8JxfFMVA1SmJp1TSBpmm2JIND8kgbggNYNjYNgkkEYQAAuvL0lwbCYERRFyEwOl6SEvGaTkPmaS4-I-LgFkoHYwC4QRxGkeRJBUTRdGMZpbEcVxmn+Xx9TEDQxABpY0DAGJEnSbJ8mKcpqnqZlfHabpmkGXV3EBKQximkowArtZtn2U5LluR5XnYEFfF+alfGBY142amw5iOAwIAxYRJFkaAFFJbR2Xcelhl8TtLG5flhVQC4pVSTJckKZASkMCpan7a1MBjdxzV6foREluOECKLALA6AwREsIYT0sQ1envUZehfeOxXgP9gPA6DLXgy9M1vWDzGfd9UAgGe7FY1p6OQ0T5Yw7j8CmojXnI1D9Uk01ZM43DzgwKAAO0yD9PPZAr0sTz4MU6zwAlBlH2M3xgvY8LCBJDTQPc8zkuY6jMuw3jwD1ArdPK3zGMC8zstKMVhNq8T+uk+b5MaxAkBuDrSvWxDTPO8bxUrs8GyQLgxBSnQlCkP0BFyKhYTVLKiB6Bc-zVMYqA0AnSc0GHqdpxUKCmxAFlihZfAbJi5AAJ7UZATh4Qw3BsAwOTBwAdugKfp-AJb0TEXHh7gifd0nNbN-3YcRaE1MuNYYD6IotIuDYKA8CA9QWeg9hN-0egycQABOvLSE64hUCw76oa3MSt9evJnxfp7VF3ye9wP9-p0PFLuDAeZZEgO9HHI7lSnIxp6CWSOFRqj0Q8FkUw2ARBIAcgwGw1Q7zwB+MqUIZYH5oJiBseMFRioWXgCgPQjhQSvxAO-T+38iK-1AAAoBGRo6gPAZA6BsD4FhCQX3VB6DOG9FFqqHBpR9AgBXJARQ+B7iDDGChKo2RHjanMtASY2BjBeUINIPCdZORtkuH0QcoQ2DyNwcAQgbBpCQCIuQTA5hsAE3ZD+DCY4wgODkfASA2BiBOGouQSSGIaFKEkZUaRCC4irGQPARRyjVHgDbvmQ+z4dH+D0cgAxRiTFmMwAGKxZpxFVDsPY0Ijjgl21ce4vgnipwRjxn4ioASELBIUUo+6ETIAAEcDQxJRHExACTzLwGSaY8xkcCFoHPCgUARF6JHHQCIH46AiKQB+IILwadoByAMdnbqJ8mJ93RPfEQIhJJETHqnVYTgmTQW1GWcs+QAC8VygA`, `2,Cubic Combat,Clqy,33467,ILCqJAhZIawhjrAB4BEAmB1AUgBwE0BPSNAIwCYBGASwIA0BFGAUQDkBnAY3vmGZaMKKFAFNmAYS4BmCAEkA0gHYQAd2CDgEkCzUIADMDQBzYAAUYUEDhDgJpuSA4xTAWRBdgAcWaRGLPiRgAGVmRHCIyKiI0EgbCP9A6OSUiIAxELDEFjjUvPyYRIjoUIKy6NAJL0NwxgAJAE5y5vCM+PCconUWnr8JLIRoLmcenvAkhHqAGVGIswB6WAALAGoqACUWKfXTEDbIzu7ZiDR5gFY5ADMAF1B1iX0CCD6B5+Bh4+bxyOnPhAXlmtNttdsB9hFDn8Ci9iu8RlD5itgnUlAA1QTXLwIWJ1UGTFiiKEFDLrAAsEMguKJeT8BNhZOpeRxeIg-kJjJSGVKHVyHOStPZQQZfIqvNqARF0RJ5J5VMlxSK4RKr3lEGZCTpqtamQp7S1zzZ9Jl+pAPgQVFRZAAtmclmQsKjYHI0mwAPYMSAAG0uK3mfv9foAHCA6vMAG4BgM+yP+4MAFWkRHhIGYbFRWDOAFcCFgqJ6AFoSSBxgCGXjSqnz9HDMb9UHmSlr82kNdrGgagYATohHGhUajM9a0td81hGMZQBQlksuF5UQ2m91o7WGgva6pIGZLgojkYQBbrbb7Y7nW6Pd7fbXg8BQxHa8uY-HE8nkGmM9ncwWi6Xy5Xq3eY3rRtaxbADIxgfRrjCZBwD7AchxHMcJynGc5zXGMl0vGNV2AjDgAwKZwAQLFgAPG07QdJ0XXdegvQfSNr1vJt6IDYM6mCKgkHUN8sxzPNC2LMsKyrVtAJgdDI1ApsIKgxBTDgwcrWHUdx0nadZ3nXDI0wpscMXfDCMQeIyKPSjTxouisIYkNRMjFjYxvDjEHsYAeI-fjvyEv9bIDICmykttIEg15nAUhCVOQ9S0K0gMdJXCTYoMoiIHcUjLXI48qLPWiLybRifP9eyg0cziEDQVN014z8BJ-YT-2k8SYv9ALAKC2TLGAckwqUxDVJQjSEv9OLsMGv11AI5LmAsNLDwok9qPPIr5nysCoys1iSogXRdFcyr3K-QTfxE1b-T8kCCrrNroNYIx+0U5SkLU1DNP04Alr09dN23Xdgn3dLTPm7LLLymyTr9Ja2KcnQNG4va+IO2rvLB+YzpjFrwJYDtuwNW74J6iKnoGpqxpAd7RvmcbDJTYBUT+2bMvMxb1ocm8LvmCHgATJMEDSUw3PhmqvOOhrIHJ9HfKuqxIE8bqHr6qKXvXUnmb9D6MK+ncECeGaMrMhaco51nkY59jSo0DRfHzU1GGkVEaHzX79FUNJMwiNBgHoZL8jMFZoh9q18wDoP8zwYAxxNXRHASMwljwa9BhSVRyuaHb-GgNOQCj6mwT4fNMFwT05DQGwsGNBAcgwFUUnmMvwnmAA2QOm6D2BICtk1mBZKwVi8AA7Xdoeid22BaZh3Yz-wQFMZAZXDuA2CoAgrVAYxXC4SAyC7-g0jN-JTi3kBTjwYOg5LRg0gmSVoG0CE0FJEtLgSZJ3BqMpkEYdOcn4LRM6MS3rdtvbX6AAvc+rtwju09uUH2fsVgnybqHcO+pI4-BjnHJUidk7lB2sYL+GdgBR3UNNNIwCQANC8Dma4hcWA4CWAQCg1xe5cCtA0Kg1oq6fBrtEBuzdm4ACt5hxlcMA4RojSEmgkVEXw-A8Gp3NjnfcbAyDSBDtaLgE5yxEAwNoLodQyADz3GfaBvsogbirtAS4r9JHWOiKnORW1CgwHbmwOMWAGgUBLBmXuzpIAzl7uONgrcKDx0mF4S+KR95RHcF7SYjQbHxKiMgL+8irDAG1uHNAoAqBhgwFaT0mZ8wkEYAwHA+gi58OAEYnkFAiDlC4ZEd2GQKTzA4QkmxAhB5ZGYHUPYfAqBKJUXgNRGi0haO0PoRgYS3b4Q4AfKIMDTF+FhJYtpqyHHICSQ4m+bcQAuLcR4rxPi-HjjXpAYJERVBTLKJEyI0SfhxLWaszZ39kAdT4BkrJOS8kFKKSUspaAR5VMQK4M5tSyj1OmU0nkLTHmrI6dIyYwAFC9MUco1RVp1GgE0do0i9R9EYKBd7ExkQzHLKsbC6xcjnnmwkOoHZrlXHuM8WcbxaRfFcH8cYNggZIChwSHorOeQbkRDufypoFL4nv2pR1boc9YALyXivNg693QJD7nMhp8w5lH3gVaM+F8JE8N1bAO+D8n7RBfs0KVMj04-0gNtae7cfCAIdsACgkylhd2gCWQURLYG6pDmHVpjIdW8L1YwNBITUnRCTsGqIO1VCyOQI4Fg6giIGuAHnbAOBC6YEqSRYFvLa6pAhREI1YbW7t31P7MNgae79w6MkYeo8f4TxwTTGA6TfDysXsvYwAB5EFqrwiXN7hqt2WqoihpPvq8JIpy0nxNffR+tRn7AHJTSHQn9bXaGlt4TOztwGIHdlWok2hkkIE9MEAm0hfEYAoGcMOxbgAgrnbMHpGhXlaFgDgDg2AV6gFvUse9KhS4Uh2IyEi9iHgYCIKOAcp5VAMAwJmMBsJQDayJEs15yAUD5lHCgDgyjMVAZA-mkVkAwxxqtTI5yqIc01VnGkaQZBW7DsQJc8V1Io6TwgAoRgVoUBUAdsWJjLG2OYdCdR5oqUukvqwA6IjXgGjSEQ8hzMlzPUYNPVCDZg9gDXDqMw1EnoyA0FE+WFjDgrB8OAQfeIKA2AMGAMYVxF8RMSFEHGUOtmD5NOgL5yIyLgDrHIOWM4jA5CBmfT-FMUWYu0pC252AInGDKLYMAzxv6PNeZ83ZyIJEAv5ZFWQ699B8yeg5WwAsLBYMMBDhgOonpgCBYiB+3YBjN0SGRGiDEXgWBzgwMEV0fwcj1y3ufN9kBLh1iFXyRg+ZURUAUOO-I9QACOsIkERC8MVPIqVmgAlWBsLY6wlhek9ptz40BRAjZ5DpxAM2Kb5E66kCQiIevokYJiAbqIht3eOGNibGaIgSAWCjObHIFtLZW38DbW3Wk4D26kA70DFjHeBGdi7oArvHBuwD8u9LIidhJnkV7KRr6fb679-7o3IDjYSCD8I73ZupHdi0KY5wri3HuI8aHy3Vt5Hhxg7b4RXDI+iEAA`, `2,Orbs,kklkkj,64477,ILDmJAhZIawhjrAEoAUDGBbAUgLxAC0AnAQwCYAPM8gexAEVgBxCgFwGd2BHEfDCAGoAnAAZkEcDhAcYIACIgAkjADuc4AE1gAYSYrgAVV3gIADhCGd0xIwCi8W04QBZSAFdnXxADFgAM1EnO0hCZ1UACQATdW9beQB6AFYlfzZDFB1RbRA9PTiCrzymQtKEYrLK3QZ8qtKKusKGxrjmlqKakvavSAYlRyRgAHkustVmYW7DSATRiAYHJ0UogGY6tATYAAtBAEYUOwAZFFNgaRtur3PL72ub5wsIADkANQB1JPdNN92AG0IdJAACqkZg+VSEAAaCQAbgl4Qj4VAEgB2RGIlaw9EI4B2YRmYiIOzAeQvF7uABGWB8bEIbwYoEM5C2WwwzBeqOx8Ni-kEXISwk5XNUkDQ-gA0rFciBdi8qUkthS3i9YEofE9aJpIZBfrz+Y8IliuXquRYgThSAA7RDqV4fL4-f6AkFgiHQuFc5FormYj3Y3GkTSwKXAJik8lUml0hlMllsjne7E8vlcwWJ9EitBYUhBCB+YCy+WK5Wq9Wa7W6lPYg1G7Em6vAIGEdwABwQkHAds+3z+AOBoPBUNr6K9-N9-NxQwAygArUYCcOU6m0+mM5ms9lCpMgevotP8kVDS2kWQQAyFrAKpUqtUarU63eImt+9GPhEWFCaQRvcpMLsO3tnQHN1h0RUcfVAnE7FIHAsEQehF0jFcY3XeMtwzHcqz3dDEUzCUQ0OGU5UvYsbzLe9K31EBDRfRE33hM0VgAT1PBQQH-HsnX7V0h1onEYBwhFx09OwmNgX4QyCRDl2jNc403dNcMw-l92FSAXiwQkECGIii2vUs7wreiEmffljIsKcADZxQAS3KdRQigCkLAGe5CkSFssEILyfNIDY3NKaALkQRIQyqNwwicfy4hCUNYqYZADHpEA3kmSLbGJQQAoQBJLO8-KfJnBIwuypxOmcEz2kUQwckQQ5iriaAFia4lQxJEAfEcHwYXGXhbGgSFWICtBBB8grCFoSrSu8YlXIQaKWlUHwAFMKqSSEdBnXZVFoYQMC6Zq4uQYlkEcmBnMgGyDBtHx-Gmjyxt8hbpqcILnFC9o3FIU4EDhF4ImILYUEsgAWQxTni+KNGMYBkthyZIQEWw3CwEqbly8bCoal7nHKpwpsaRQ3iRuqEiB0HDGW9wfGulqWsYFgOq6nqIkI+JgEIEHppGx78smx4cYy4A5ogZ66iW618YFrxDsO3E1BgSLIApcQJEQBhmEhe6Ek8zG-ISQXXrOd7scaNxfmu36DZium2uQUw4dS4AMFqhAQinNHLgx3msCKz2cbx2wCbqRQXjmBQEh+o3ZdapgbE6jqeuYcP2owHRudGzGJuDw2QFm5wxaqJao9yBIubiGPjvaxWnPEVRLYgcYmO13XHv13PBmChAPpaCK0bQMwfYmiBIaajRc0dg2MCGkfgFzUrvcxv2O4QQPEBzyoifLkKEg4KmfABoGUQgW2FgZnTgBnLQ4ORyAZwb+4-BjmAXieVQtSidwGB8cUlmAHNpq9FHiAF4QI2Q+BWBSWAkAWyu0bswbe2VphHTaj4QwKxIBbCiOQY+UR06324PQUqT9IYvzfh-dwqg7BEJCqgEuNwgG22AKA8BkDoHcBTiKFONxkGy2AGgjBWCcHACiBfRAbhmAvRIfTdS5DISf2-g-OQbwaEBUYSg5hYCwSQJ+qeeAMMV7AFULURoDEyjSHzIYkIItGDyEQbYfwSJ6gMF6IY9qpBVEj0gMtf29VTYFH0W4oxzAlAl1DtLHeG8rj8KCSEGIThxgUh6Bsa2TQXHcJeooaeTg3CWnoSAaE-i4iBLcQsVqgxCAk1sMwMxpQLGxMgJQeh382avX4mk1xhjFDpXEZAeuXgipFO8CUwxDAIhgHZhSJRfBamFHqW4twTE0YMHkBknQHpSgAF5NlAA`, `2,Whel,kklkkj,72390,ILDmJAhZIawhjrAEoA0CGBxAagZxAC0AnDAJgA9SyB7EARWC3IBc9WBHEAKQC8BjKFjwBNZBHABpEAFUYUEAEkEAEWABhCPC6IQAd0UAZXSdPBtZs9FAFLFk-QASHRojUBTAA6XzwHbr1nVwRoLx97XXojH3C-GN1rWzMIxECXXQ9vOziHIITgMOz-VOj40xSEKOMykwr4tRtY4rLEptM04IhQrOScgLy3Ap7yvsQndMHC3uaIcc6FKZGZhkcAUT0a3TqGUs2EbeADar2tUbKGpKWT1qLTOfzF2rPZgdUhtpMOjPfbz9eun5mGTqSTwSKKRwAFhOMMQ3DAAE9wIhVuoAGLQ2Hw0AAG2RCFRGNhwGxSN0AFl0ZiYdi8RSqcT4ZJ8QhyZAKOTiWjgJ4AMwmVbAOTE4kslQ4HAAVwARgBbNEsQgAdXooBkZAAFhr+LgAPQAdl1RuNRo2wAAZgBqE0mgCcBptxr0kAACubJGaFMAAIw4OUAVg10qVOFgijRADkaCI0JAcVbHUaABwgRy6gBuid1CcTKYAKryEZcwMAIzglf7JSIld6cYR1JA89g0XpCGgM1moA7E7yO4ngKtbUniIhOeKpXKFcrVeqtTqcN3HWac477YbE863R6CSBfQGgyGw5Ho7H49bc6m+46Vzb84XLpBGGWK1Wa3WG02sC221ebV3146vaZv2g7DogIjAOOMryoqKpqpq2p6gBNrLueq6Lihrrup6wCOLufqyoGwahuGUYxnGN4mimuG-ialHGneRYIJopblpW1a1vWjbNq27bAY6-5ZkBnarAiAB2dKnFBk6wTOCHzhhJqoVma5Zs65KeP6EEQNIPoEURh6kSeFFobel78Ta9HJsAeaSO4SrMRsz7sW+XGft+fGdjAinGsJIHiZJ+iQRK0FTnBs6IQuyFKSAVm6qpG6QBpWkIBG+H7sRR5kaecXUWmFl0aZVE2XZDkQCo4DOa+nEfjxP4Fcagk9rRjWiRJLIptJMHTvBc5IWpsVFcaCVLklmnaQw6WEQeJHHuRZ5ZnlLVGrlNmeEqdAQKsT5sdV77cV+vHLbqTWAcdA4BfikDKF1YVyX1UUDRaQ1GiNmHJRNNlTQZs3ZSZi3mVmq22fZCDcqxL4cft7lHQ1RqnTafkCW1gWQHIt2yb1kU+aag0qTjurqeNCBlXu02ZUZ82rTRcPZi9ur5qVYNObtUNuXVnn9t50W+edKNXeAGM9RFCk87jz342LhNjSlECEN9M1ZcZC0XjTQP0ymWAIgADNRgpYJVrOubVh31V5kAE0jf7qIo-oAMrgNAkAEEL4Xyf1G544mb0xdKhh5majCCHpGWGXNOUa4DiarYoABWOK6YKjg7ZDxsHR553c0J53OywLoKJA0Ku-d2NS8p3sE86ADyOIYCy5oKxT4f-ar+XqwDBZMV0jCQPLuFG5xhLUiK5W6iyiCGITdzklXjjjyKLpJrKhDL6vhCbSPm8mMggomMoJbqIwukuyAaXAEXGyQBgGyOAPdY+PQqxgpsKhj2Yk84ZUM9zy-upr--W87iAO3iAXeuhNDIB-r3VMd9CCUiJMA1+88IAf2nrPZBsJ0xLxXjg5eG9gGAJ3qYZQkBBSrHAHmGAjA0SMAcpAQQWAoD8A2OoEQspg4EJALqYeuhdQADZcG4NjrqPM5JeBiIkbwTh0jpE92AI-aAj8qHAHlpAOgWANiCEgNrEAaBOTACVGlZkJg2QchONwsw6huHiJsZIkRkjJEyKcYAuRKJJoNxUcAHApg2QAEtP5b25AokIOAIx6BjAAE0lHoGhJg1AiGLFvR8qxFEIBwHmHUaJeTSlgHAdoWBjgEPoIosBwA0QyF5JADUESyD6k8SYyA-jpGCmCV0UJ4S0BRPoFgHhIB4mJK3noFJ8i0kZK-NkvAkBJT5MKcAtk8jSnlMqdUsgmJGCKHoGQFs4ZPDpjlN4+EZgPGuEds4s5IAXTwxiK485TjgLxHoAAXkeUAA`, `2,Climb,bychtromae,64092,ILDmJAhZIawhjrAGoBEBGBxANgFwE1wBpAgOxwCsBDACQCUBPDAJgEYALALQEUYQADgEsApgHUAcgHsAJrQBSANwxiAYjkQAFWLWB8IASWBoQWEAFkQ4CH0i3gAYQCiIAKqQuiG6vhe--gMCQVWAjPydIAHp9RB40ABY-aAwABiDAuwd-aAAzNK9LAGp-HiwATnTA2AcAGQA2SsbEVzAS2gqvE01rRAjFGKaIEIAVAnDWwf5XMcmIOycWJNDZvR8ViHcJHoQeLNmIxgB3deARmd6JwegZYhPM7OA88eK-Uo71lu2d9r8ur5A+gNJiExECAR4TpD5osvNAwpMeKozCdNv89HtJhFPCczuM0UFoABjADOdx4CyW8MGPFoAGV8ZV3AIShjISsQoSWl4sWyvDVIgBmABOAEcAPLmLDExT0OY0mTHJDAahg4BOByQF6IQ5YEUM9LufqvVQ1JbDRWIcyQADs5wQmkKLGJXEOKA4AFcUgAOCDmSI+3mTNA01xgkzUEXhSDxSxeXZo6BcFwFSDdAIg1URWkWnZYFj-EzENFoSIAVgMOTwrnoDhS53mviVYszkBYUleDnxkUKtNo1pQTh4eGRbkgzNeaEbCETyctkDqU4gih7AA1KHVzABbMju2ccsXjUv+Q6qd4IQto-lCFJioViSCbsUoOWnpYhKMoHMQQ6T-zd3v9oOw4IO4OSqjwdhLCu-iWEefiaJEsAcIUbD0E4NT0D0IS0i28glGsnSoPqBJvEsGCsoGjTuEIX4gBBqrXCIfhWjgiReAhSEoWhGFYcABCktywBcnGtAKoRXBMZ0ZYVlWNZ1nKTiLlAwA4VGTp+CeSmDO4rGvFgWm5PkvRwHaS6IchqHoZhIDOAgEgoGIpbugQYhsDgXAasM1BYKohxcCukSKJEwUhcFUCRNaoWhQKgVRSFwBisMQp1DmLhoCgKDuhgm6qHgXCgqArgsBwHCElgKARXFwWKkF2SVVVxwAB5YPQwmOCAbAoNlpYcCoKCwAYqjSAQK6QDgOSFFV-ogPytEgBNU0+uY9CwM+CDHPZjnOa57med5vn+bFVXhZFVUxUFx0tfQmjHMgfDpZl2W5flPCFcVpXlfVcU1ZEdWnd9wDlvQ7ZDB1XWbj1fUDUNUgjWNC1VQGtBHXFCNxUtK1rS4kDgJtTkuW5HmQF5Pl+QFF1xSdU3nVNxhOFwqj2MAhLGBlWU5XlBVFSVZUVf9UWKmjUVlF9AvAM1rV0cswCdd1vViP1g3DaN42TYjIDIxTUVC6FGOrQCjh8Hj22E3tpOHVroU2dNfia7TaD04zCDtg97PPVz7286LoU-X9U1NS1bWmjL4OQwr0PK-DavoxrKPa9HUU+qWYqKEK54gMbBO7cT+1k3HVswN7IU08dDsM0zaSu09nOvdzH18-780J6FIv8z74uB1LB4h3LUNK7DKs6yFSP5yFQ-BXrWPGBtDn4ztRMkwd5O04XbfF6PYVl070DIFXHMvW9POfWv1VN1Nrf+5OdSFAJICyj3EPy4rMNw6ri2x5bY-N8PwDDJQKSKANk4XGs8TbZ0XnnT+YVV7Uw3r9Jw8Qyg1FujASwe93a109sfRujxv7BQvg1SAYpNC0gDHwLkstH59xfoPPBNs7ZVXHtNP+ACDZO0zvPM2S84FUzOjwhBSCUGQDGOgmuh965F1Prg8+kjIiHCISQshwBoIPzDs-SOb91bAAYajOhPoWGALVMAZEHDTY53NsvY6MC+FQPgYg5B-A4Cs0evvD2R8G4NTPlVAh30FGkKltQMGvdw791fkwketjwm-3-oYlwWAZ5bSzgvXOFsV5RBPoKfh9ihHHFEQfOuXsMmCzoT4gWkBCS0l-HoYAMgglUJCTQqO79tFwKiSuYBcEXC0BAYkzh5juG2N4XFEulNVCNQMM2RxPo8luIkUUrxcVSk+3KZU3wfBrCULURHAeTStE6Pju-dpoBOkwHAOU44qgMC0EgFIEQK5NDM27nOUAqpAgmHkPiJwkQ6hcE3L8-5m5KCRGGOYAAXmCiFoLKLQphSUfg5JoDkhgCg6WwQQBjEgMcMIqgoXAHkEILgaQhDHkuE0EsDISwCD+dS351BNBlEhYy2FzLYXIAiHodlTNYwrksJAFc8hDh0BwKCmkaACx8VnE0Q4DhTJzAdDSmlUhIgpHBaqiFc0WWav2HRTl7LmaG2ALcYApITDAAkCARIaBbrYlUAQAUNy7mxn8BEPCsxIhsT8A4G2gliVar9bC+wCKOVS30DikAMhYD5QkIoQkm5Djxt1EsCMswHSBHlQC-5SqVWMvBRq-1+aAjJiDUG41ao+C0lQacEAz5hGnGOBi+AWBwAYGCLiiNUaY1xsaocWgTg80rFTQEdNCquBZrVWq-tBap0QCLf4FougakwESLQY41hhjABbcxSA99YUhGLdjFAEhDgjRkO6E8wcmyvKhPu5AKBhhlVUAKDAsBIC321KoSV0L3AcsRacVw9qOAyBYEeVwb6Z2AxZXu3VMBD3HpXKe2I-Bp2wviukHgABedDQA`, `2,Rollergrapple,The 9th Doctor,73335,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-LjALCgCaNABYtzYBAIoH8jVfGB6-bOScy5v8Qc+wAV9kB4DIF5fra6zDzb9EmJKyDjOqPgFgIgcoJ12O3X5cR9PYaLKFaBxoIaAgydIOcEyXCuzG2R1DZqx4L442-nkoBVNxhJ381zaGSAYkMzQPgdy5T-jOPj35YJy4BYgYGdvtoCztnoAOfCK5-pnnW2jNKZU+3EA8wUD1EDuwYRGBk71FgOIGgfRRAQKLF51LPT5ttz2PR9Z7BNnJ22bs-Zhy6DHPy3DwrsegcYhByqSAeQ+gsGwTgaTsnTeGcc+13FPhEwgHqIwWzJQoERgcpkRkQpvLFNCHsBMO4dxJTb+UZAj1tJ+qaqoUwprO40FAdwLAMs5YKwIL2WvixPCiyMl+bgTfGKt-b6v+InegTOUC+AVdvqihOACJAGYAVhE+BZH7VwrOCB5HEEUPoHHk46mABgWV+FIBE3X32PGQFPCUmX0mdocwf-RMd7NfICUYDCDCeVC9IWQHcpC2U1EAKgP1DOY6SkGAJbJwZZGgYvCpcQPOdgdTcIaANAHmcIPYVaRACg+fT8UQTwPIFvXcMA5gqGDwUIDOOjYAIgP1beJwFHdIcQGwSAbgGwdaT7MgTjSDNbSADRFKGQYcZICoLvMIDABvQIJfRg5MdoGwTQ1wV-FgmQdgGgggUQDfVsRAhYIA8AYvMGYEJwMqBYDOVxHYBYMzZOQMVPPob6XwIgD3PBU1X4VwCwQPCocacITwU6SA78UBX-YAiIekFgqSC9GIaAGIawYAMoTXYAMJQQxgPFGCIgfQjIOgIoSQGaJIWkcpCAeoSkJgGgBQDAPASASfQoGgNmd8SAHAVTQIOQVI5QmgTgBQSAURLAJ-akKGSAUKMgu0CgdApEToSotSeoe-CBXwNkZYYcaAQoh0UomaDqSohUGouoho+AIo6iNojcTo7oh8PohAAYoYkYnYcYk8SY6YwcWY8IcwFIisZYugVYtkBwdVS8Lgs4+IEosoxIUAA4hAI4xgeojAFKYRX4QE9o1CK48IG6BYu4wY4Y3wLAEsOwYQKgHAGQSOYAUBRMWMEICwSQERCgPZbgbAdgFgBwcQKYKqEAA4YAD0LeRIy4evNQz4tgvknoSkPJSISQAAXiAA`, `2,Grapple Grounds,God_Of_Bonk,73524,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAEwE8AjAZgDUBXALTQFlgBhABmoA3djhQAFdqRS96AJgCsAJxCU+gkWMnTZilQgBKADn7AAignJ9wOEBeB4+qhACkQtgJoBnRM4CqvnaE8IGhYYG8ZuQAMuFxcZEAIvbxqYhJKWlZkGaEeOBIwNEFWQ44IaUIfpBeVr5mkZXAXJD0JU229LyBahVZicAA6gAsTRA5ee1QRVOpZjisYxDVtYENmWmUkOxLIH0AcsyDCqwegwCMpOy8kAAqAIaE+OwAGgD0Qm9f319QbwDsPx+jA+QO+wEoKCM+ggakSzDY9FwABd2IMzKA-HIABbYojMAFgr6OYAAMwA1ES3ihCUS8IlKABHWA+cxOYDnZhIhTY+iDZiwcg4fYAew8L0gpApVKMIDQoKJ0qJsoUXjMiwQjkOx1OFyuNweTzwrwVYL+gKJIM+ROAAHl6JRiggLPDESi0Risbj8bSwSSlWCaRa-Yk0ABlW6jCC2DlcrA8vkCoWi8WSgNA2XAeXWsHpn6y6BmNT2SDgbUnM6Xa53R7Pd45oHmqlWqnOMBqEAYYCu1hInCo9GYnF4wgE4NA-2UolBqn08ORywgTnc3n8wXCsUSqVTsGZ7NUvPfTNFwtQCyQDCOADSZlwACt7nI6Ew2DtduFEm9ZhBPwAHLDsABQH3OIKBcAAXhBUGQe+sFwWMyBbOYSHnm26J8KQLi-uwOL8FQLi8iQwBdPB4zADGPRvAAbIBtFAXeby3NB0GkaxbGhKhJ7IXY7LlCApBcGi7B4ZQBH0IQ4HEd0rHQBRviUNRdF0QxTGQWpEHsZpmmcShHYuu4knANifhMGAfgkNi1Bad2X5hNEbwkr4oHMep1lubBiGFih7Lnuel5FLeKCCIQKDIkKNTihsrFvFGERvJmvifqpLnualSw6V5IDgGgWUwF42yhHgOCxJp1TcdGfiMJAlmKEMUXNJAYaOaxthceMzD7Hg4rUKwRV9GR7AAKaaTk3kQMwtxEDgjD0LABVrIQLzfrBZVFggOCVdV1ByP8UmBC0b7sa1SHtZ13WsLk+SJXVI1cZkE1TTN7R1M1lRvOSYZoP8zCUGYyKEJQOB3pQAmkVsh2IEW-WIKSvxpAMSz2Qo5CksifgGAIHhmIMXBhn4r27PM0MwMAYb1SAvBfAl4RAA`, `2,Circulation,Echostar,81532,ILDWJAhEFUPhICKwAySBMAbAngTQGYA1AZzwA0AlABwCMMAWYAYQFEiArAQwHEBOAF4ATHgDEcIVi3bd+wsROAApAQGMoABQB2Ad2jwA5sACywSEdE7gAEXjMjSkEanANIJvoASIPGZQA5ECtmKwAVMzhRIzhIAElgVhRmSWB-I0gUFERofURWSHNEIuKS2EgAZStETNLi1AB6JlrS0WAYEiKpF2a7eoBqHpLmJFjwQfGoGuyzYuMCownxuG6EKYRoJF9FwdbchC7inVYebcGM438hBYhocqyEOawmhB0eDGuIZkaGHQBGTbofGuMGskBw8VWrDGCFsAC0AKadSD2IoANz6AHkLjAeABpADq9S2wFaMHUeTap1KDWosQAZgAXGCUZgABmJGVE3mmrW2SE85A+EHqADZyp4AOxERIMk4QGCQShVVYZIrQOmspG-Z7wdGgAAWfV+lFYqEo11J5P2lKK-L422s9VpjOZbOJw2GVOaGU8OiFM0CXqDCs1tus93gtlolCKjx1EFR9QNRpNZotwCExSkoeqPFZEZAcMRiAaAFZ6UyWeybvy-dNA4sdAL-eNwO8iq8AK48WEAWz7fdoGcoJAExjHY+VbZbSB43YH-d7Q6EI4n4+MU+ABEOPA4AA412Pt6p7aVpx259Z1xO3Lir4eNxBwNuL-uH9ukKJFwvrufc5372vW9ALXTcX1zN9r2MY9TxKZ9ilnSC1w-L8Fz7X8wCDWpwGhLCihwvC4Mwwj8OIkiEAI8iKLIqiQEo2i6Jo2j6IYljmKYqi2M4jjyK43ieJIvjBIEwihMIgR6mVcZoEFKlTBKOYCCteAkGsXCIFsIRiwmJtKALeAJKklSwENY1TUoDhgFkxA5m1BTSkU5SIFU9TCwzbTxl0-SIEM4oNCTUzUwsqz8VjSBYQchzICUsNXJsdzti8kpfLRAKU3M-UQrC1FvJAeTZmipzkDUopNI8wYkuKCSGBgeFOy5AAnfVygY+BLPIHN4DmRwO1EOLbHaJEIt61A1SszqIG6hDRFg+Bbm8-JhuqURRsQWx8QWiojKCGaxruEprH81g6sa-VKD3VqoFqI44ugDFcqpebY2AUsvRSy6EKinrqhKqikChUrgHuqlWgba04Cox1nUrN0a3DMbeXIr4xUlaUkFlCA0ngJRO1UTx6kTeoieJ+ooHqCUSZJggCcp4mElhAB7Eh0hSYBe1LHQ6T6WmiYu4B8cJ2muZ5+oLtCLAMAAR1ZoxmFoLRIHJkWqmFnm+CVnm9AxcguAZ5B4uAX4iFodn9VofEiFAWJRH8BmKEgLBVdpvmBZFp3KYujFWC4QMpH0OWFY12mVe5tWg8pvQeC4VAIRQXkcbxmmebJimeepwXKfppmWeALZ2c50PnZAV2efdkmLsoXsAEtFD9qx-CIfFS07PB8V+LBYWYSBQl4SxYXIJPaZTkX05FmwGX8LAc6MawiCITsTdEBlYQ2gwYAwfV9VUHgiHDkmQ5F9XU+D4AJVCWEthQHqjZN0szYtq2bbt8gHbL4mXcHym3954BQgIHAOifCMA3JuLc24dy7j3MQOh+6fxJsPNOcC6asD4HuBqCAOiz3novZeq916b23rvY+EcQDf3qEfZWkANB0lxFJeSN9Tbm0ttbW29tHaFw9sXJBRMyFi3-oAwsARG7N1bu3Tu3de4wIHhneBZg97E1HsnFBaCEBNAwEoVEQgS5DzkcQqm3DSZKGoJ4SoMxgB83xAAD3kUTA+Yc9HEx0MwLglBWSAKmOIXhXCZHEy8b2UAQhVpdBQNYEQfAC4iw-j4nhHDy5swCUEhIRhcRhJ0LEHgliO5aCQAYYw0ix66JHgY-mrIRRICsDkUwzACCUFRKoLuOAuD4iEAzIQyRLFeP5gYrxdJQjUFsAkEkIAUn8DSRkrJOTjBaGKYUxB0TSbWH1LuFAOQ4DMF7BotpkASAr1hKyWI1hRA2MkqQ2JxMKGa0gHwDEoB5IoFCsAagVdaAEBybQHevY2nABwJ07RX8zk-y9j7FIlg0B4F7HwfZngjGwg3vsw5xy7G0wucHK5Ny7m5xAAyVkLzgAGFUL2LAWguCeEmdM+ZCDaaKKHos5ZMxIDgGYOozRDSmktK+T8gFotvFuy5Z7b2vtgA8GAcIsBYjIGSNgRS2ZVLinKPQTcTBc8F69iXivHJ+Ct470Racw+iKqE0KkuSBhd8mGP1YS-dhkSeWlz5b-fh8BSWpFFaIiBEjoFSoKYrBxRNqWZ3lXNJgWCVVqrwRvLVRDla6vsZQ6htD4B0hACa++zCn5sN+d0u1f8AHwAhCAkR4DxFQL7vk5OMrKZ+vgQGz4Uhg04PVWvcNhCdXADISiiOBr40QCrkm42jCH4sOfq-O1XT5leOzQI4AsR64usLRKj1padHeqKRS6tIBPR1tVbgjVTbtU+pOa2rl7b96dqklgXtt8U3mqHVanmUTeXWondjEVoDXVFslYuzO5b9GrtQQq9d6hN2hp3QQvdUbD16v3XoONUk9aGz7aagdabLUZrHVmh1EBcRCNfXO91JaZnLrmWPNdLA9ZAe3Y20DkbNbRuRfqmD8AFXJrNYO9NI6-kk3HRhkAq181irdcWqRBHjmVuQX+uwmpID4nEASvgBBUMPrvfEwJKRUAWAoEoHALyhAtrbYi5xrj3HAFRCAIgW8tCbNE0TSlFbilGJMRUg2UmZMQvk+xzN1r-EqcGcYbDBbxV4aE9KwjsqKVXj6AYFZNh4hSf8Jo3sRBOXWtHYpou5g8ByikI+awTTKANQU7a616WThZEDHxt9878PBZE3Z4xpjoDWDgORhtmrm1Qdo5TY9jiDNuP1lsUQAgQBKCrrCbahFHQtkLE6b8i4uAaD4FBNcH1lten0PkYA-0NgG1MJAKwEIBsgH1M84gLcMCJdUHuSAOULzWXGBNkoKxEDzcW+uFbb3Fj6DmBt9brNGVGFWlUDaIBQiPf2A7eMPQ9yTZYNyzooTwiICcQ9d71pSi2DBhMKLV1jKBgO8AIgrICWiG4GN5yPBbuDHu8UKGM2+xzYWw+McKPme1DW59YAQarArK6NEMwpg5REDML4UFEU2RoCMCZgZwAgfAA4KITKB1gAIm2BoCExREzFGgAQGA20pBxRZ3NZoOh4bbBcPcCMUhhVmGGpAYwJAtq2nJ9D6nig6gHuqP4X4+UNLKAN7UZHJhgATTOKzQZNwzCAJl6ENweBJ0QHyE8bYUOhiw7yPDjsno-dZlqOjqkWOzHOWAOSPqkhWSvDrOsJX5Ueiq9KBrsa2vtqmH11nvYhwTeLDN4X+P-MVnDWYMYVVbQ495XB0n6HXw+Zp6EAj1Ymes8UjR6kPPBe28oGLCXqdAg8AKirmN14FOejWFd0UBopOkCe+91db6C-Vi1FMMHnobPQ-0osVkDglB9Szgr5GKvKu1epSa5bg64Ugt5+5t4dgd4TBd76w94QjhTrqoChCkgj4JBj6LDJ7FCT5Zjp6I7z63495L4Y7jD55bb6wK6b6xAMjGCgCQB76O6H7NDH7Uju6rCX5rS+4EF36RSP7eih4rDQDMAQgy5VysgCDf7+jQDK6LC14lD17TCN42QiTgFG5QHjAwEbbwBSDTrW6FhIHy46ArSAzSETCyHq6kwN4gHWhgEG4QGI5qGDAaEW6cEIE2BIFKD6ivCrQwh-4yEAGIDyGV6KHWFcGG7XQOE9BOFaHKB956GhD+CeE8A-4+4mHjBmGAGWG67KG2GqEB7Z6aGwEpBKDpD97GChBRgxhUSYFFDYFw4z6LC2A37vag4+HEGDCkF35aAgCUGWLGCqCQAMgtGfhcAOgn4lisEqTsETDN4G4B4P6nDP5h5XQojS5ZA4Csi9H9GDG9QjENFjEIBn4IRTHjAzEs5zFB4LH8GG7MBjAy4CCsCWI74DFDGiC7ETDMElCHG2jHGOHZEMTnG8Gs5XHh7MBwZ3GsA6BPHbHkQfFu7n4-GRF-G0QAmXFLECEsCR4rJsi9HSbADRhhT4jO7FDVGIC1HT6z4h5NFvYtG-5tE9AdHGSAJ45EAMhNKTJElUhU6lTTZoS9j04vZM6hHM5rYbDrYoC1qmDGBGCaiNZmCXb0GI48DeFUQKjfZbaiAwAECQD6hCAYCvSx5hQKlUStCbbfZmBED+CQnkBCCdhNgQnTAdQMTQBik-ZEChDbyiAEC0D27UCHC7QMSqmmlxyanam6mvRcDeRzB0h5HbAmkunmmWkUA2l2nbS2COm0TOmin6BukelenO6vANQcnbBfZBkkghk6mMB+AsAiCWKy4CCTY9QuBaCUA4AjB7gQ5uRmLDa0CsDMAaAYglBwZJB4AWZ1mTaJJsAJH1KQBcD0ClhYBID4EPDBAQAAC8QAA`, `2,Cycling Nodes,The 9th Doctor,81585,ILDWJAhEHsPhICKwBySDMAbAVgIwHEsBXALQE9IB5PAJgCUsBjAd2CoDUCALLASQAiWAAwBDAMKQAonVTC8GPsnZdegkROmz5ikADtUbYFIDUAZyRT44kG0gBzYADF40YDeO3gABxAusGIjGkNyOiJbgQVEgAgD0AOocAB7cANIArMIAygASEOJIBUECwACapdGVIAVFiCXxALJBDZClRlE1KFWILaGVnUHQjc2t7UEDiNDl3dETCENNiFKj-YVdMxDLfbNrxcDDSys7tQgl0xuIc-D1iwgtbasnF71hHbuT+7fw92OX7-NlCoXBBXCALILLB7HdYXLavcb-a6fCFHKKQJB8PAwqDAABmwmBhMq4EiRJmAC9Yr8yYTIAApYCkKJNExRJAEUmwyCc+BIAQAFkGwAAGvDNpAAKpsggAGSFopR8TFyCcgsJywAtsrgCwpNicec7pAAKbSuV1EXa5ZSoIsAiiIWoZkhbUsAT64BnIFGvCuvV7UpWJbAVm2ggcIUS73fBwe9nm077NUIZb2D0sJweiCU6k0i6QErC51uRAZgAcAdSIzytqcSSFdO1LQ1yd5Lj2wrghwAltGIBnaEK+xAWjltez4kK+FbIKI41INUOostjeOpEx5cvgBuguyACbKkr0VvitNhgjKqZKHqz3OWXMlUimnrAa-M2IVvM0hq6m2JmVNsAACMURuh6JSpE2kDiOOAhfBAJRUB6VjdqBkC5tAAAKUQylSbICG+rhoIBBK7gIO6JtEyztqWUgeACSAniALQCLB8ExMABBbmYlQNB+X40nSbpMZ6wCNiMVa7tEiFWsAACOaEYcA2EQsA5L4exwDQIYqmEbyQaXPxqmBLa4h6Ti5nMcAxC8UZAmEjkbo8RaKk3g4u7iCJ0A1ocwCwX+RENMhkBjmR2pYbmTTOeE6F7JJUQCJhsT2USAhmJA3a5rq4FlNF8DWqBThcR8HBdkaAW8gQxUAphM7bAgSBOA6HykBVIDLFgcaZkOw6eKG4QELiewACozs+pZODyOJOiMU22N1FqjbNhVzSUc4jFQtmfilFxIVIq1lAZMaZbWzWJqIc0tJtYYJkRWQei0vq7k4NkWoGKKdbW1VEUyqlzcA7IetA9DLiabKqkKv09nek1CqVqn9Q1sp7AyKK+LaUgidmeE7Rs4h4HiIOHDglksDkSSXsAxpEym4hSOQu45E9AL2CZKYZb1jWvQC8S9SucYELElN4Hl4rdpZSA5MN1LQEww0otwbI5Eg+qIbmyzeCJjU00R8SXcAWONT5SIcEdYukzRAJ4JpLT2OOBAAOyHmU235ZAMAiRmWBw21wBNAzu7okOrvipBu4EGWlOoDOWCewIZW61BJQeTl9CRZARYY5phYiVYi5hqFALSyM-DPTgeyiKhhxnqWBCkQCpSTje3NIzBFpMCWbtKraOR8DLwDDb1LTkvXbZZHse6gyTPd9x8ojXUaQFm8gBAPsAe4KYcei9WTOD96U+fFEluMXORkAAJzLwDUib4mTAAGwoszCB2i3YLAKIllNP97INJTg8oj0HeAgehKaNxRLQNcZ0iK4gAE4ohrg1HIj8Ph4HHocAALneHItUPiMRROQBO-Z7RCiYJbEckAgIhxXufSoEpxCYQFheD490iSYXPqQYUBApCwL0PQPgFF-BszdvVeAup-qVFwokFIGRsg+XRHwWhHxSjQIoajYE4hYhAWYKULIxA9xSG4O0CUkByAwyzJUZY9BtQbBcDrfKwBfY6jokKW61xYjkhwAIDgGUsAADdBzVD5AlAGudoI2KCeIXqJR8GHDbjsZOFp6IpmAMIhEUS9jJIcWkv4iSGLIWAFXY4vVoAq1UkUtElhvrvzDocY2vI-JRA-PyFgQEkClG8Hgc+rwTFmOetUmYViIlVHEJyVAHB4jpGII3bRpBJDDVEAQJwLBOGxD8bEDZmyNlQFiA7LZWyMBrP2ZsrSTBrb2AMlYbxHBiB4A1E4DBpB4hIHsBKWg3BuBMHDLs45GyjC4hML82I58fm-LYBg0Q6QjoeCAhwO56RuB4ESKAPgThUAwFKMKSAWAAVAs-DkI5vzcW-IrDKeIxB7FsHGZM6Z8RZnzMWcs1Z6zfk7L2b8w5LLjnuCArA0AMIUDXNufcx5zzXnvM+d89lxz-mAt+SC6V+zwWQqOu2WF8LEXItReizF2LiXHPxYS45+r9mkvJTrdy1KpkzKwHMyACylkrOFEa-ZbKgWcqBTyvlMINxCruQ8p5Ly3kfK+RwUFMqQAmq2QqoFyqoXwGvOqjUCKkUcBRWijFWKcVyoNSAAlXL9lRs2Wail1gUBWtpfS+1jKnUuq2W6jldaTniCAnJfl8A4B+pFYG8VIapWxsjTm-ZMawXAAhfGiA5ok0pq1Rm3V2a8V5qbRsotGyS062ThWm1dqHVMudQW+tWlw37I9aylt3r4AEi7QGsVwbJVhsVVs2VQKR0RvHUda607NVpu1ZmvVQ6tmGoPZs1d-EyWloQlSiZ1q6W2oZY65lnqj2Ps2ae7l57204k9BwG5-rRVBolaG49T7B0vuI5suNR0iZftTemnVWbQNAaBYx4AqRySkEnp4KQjgt2wZ3TWxDrLkPuuXclcQSRuxmHaJAJo178O9vveRv5pH5VKbwqAVAUhPwoBtDR2d9H-2LuAPm5jAHi1iQEPQFSVhuq8arbu2twHtnCcbU5sTpR+TNWgK0bDuHu23sI-20deIzMbNfUqvEDQnBhBQJnPTP650MdC0ZEzRLksVjpDgDBNorDFTs3B6tCH91IcgGptDrrxBMAwBwFA3nwByZ7XeojKHlMhbIy1vCBggI2hQM1eLdG-0LpJUutzLHMuoCrrlqDNLt3wb3aJhtxzyv1pguQDgdgtJsAawFvtD6B1tdUx1tgjUsjXhQJx-rv750seM6JljdYzAMy6KFfL-GisLZc0thb0AODTi0lpCs22CO7bU8+w7A6usBTCJNG7qXjXpeM92UgbgrB8Fq6QOHrrPsnu+-yDUZToBmRAPEegoOVPHPCyRk7Z3gDl2cH42Hd2Ec5CRyjsSUAFAfdKx15bJyft-cJzaeIqAycHYp2T40dJQBBhQPnJwOBGejYR9aSbYlpswfswJ4rQnucibc-937jhCeOCBwp5r+3QOU4o1TKXMvOJ+HUuvAQTysBmFEJMvQlQ1pY0qJhRGiB1nRFiMIckDRQ-h5-CfKP0fPDX1KcsEA0ZJ6QArJJDckA1TPPcMIJItq9BBowJATpyb0h2lURxKMbD-cID9xqUgdeG+kF8CYEBuYySaNHjH6PdughwAICgeWseTfKCDsVDcHhIC-QaBKDUWA9CiGVq8wvxf0jpHZOX0SlfCR+99yYRvjfm+t9xsHrvp+e+ID7yAG04A27mi2yga6FYgyQFYKxpA9ycCiFoHucgCgblQyjziAiTiG8H33r1EHYTDygIj1P1gLzBR3j1KVEmkE4kcAJmcEdyAhyCYHuRYC+Vz1RUgD8Xd0yEqCGAsWiB30oL33r1oLrxgGDwjwjzbzgNYKomUCkmWX2C0ilG41OS2zeTnztEd0THem32r3gFrzoNoIYJD2gKgJYLYKUIcTj1UMaWvEViJ1nhvylHEk91pw-jmg1lSm3F6j8DUKgA4EMExT3GIDtDcRxHWkJDJgGTBEsCQIgA4GGi+ScAwBFkgG7gGgkWiBaApmiBMWvngCcAlEL24D3FoAdmUhnHRmBBKCYDMOcAsK0isJYBsOID5C8g-goNAhyFcKgHcIBngC8J8L8NAACPtmCOdDCKiAiMsCiJiJCHiPSFyjRhMPSOiBcAqLBByLyPZBSKIicOBBcOiHRATxhGqKWT8McA8G4AEExT8niA1HPjIHoUwgXkqVfCQFoGWVRW8D8TuQjBwHJBsU4xtCNzzCkCcAECkAwQD1iAoOKO6FxGcyqFqweKeJeMQCSg+IEhZRmCQAAF4ISgA`, `2,Compare or Contrast?,God_Of_Bonk,79938,ILDWJAhZPD4cAisAqkgTATgC4GMBxAMQE8AtAZUgDc8BLSAEQCMMBWABjwFsiAvACaMAHMADCHAdTJEsABTIAbLGNZsATiACi4ydNkLlq9puAApPnigB5LQElo8AObmQKYAHcYCFwHUQZsAAmgDOiMBakBRe4bEIgaHhALJRMXHpgQDS7ggpIXbphVk58JHRhRnA2cmp4UgEADJFVSUQKeWIHo3NgTUdFeGBvYhlafBdTZVOYQOz8ETAdK3awGyxSAASBYjQzACO4Q0A9ACmmUl4AB4AbBiKOZBIdnAI0NbLwCkksV3XLghiI4AZjoACsNkkTjgAA6oeCoMRyD5IIgvOaFahYAAsAHtLnwNuoAIYANXmwAAZhxwpFhgguh5-vBGMAyCdDqdzldbvcII8NlhwtAKB9Ivk6gQABpMiCAkHgyEwuEQBF0+AoyavYAkmUQSJ4D6Y3H4wmk8lLGm1TpEILhFmSnSIY5nC43O45MRIMRovloGbo2Ven0gFmof3wFJ0MaIT3eoXAZhiAPwWPB4Ch8MB1PxsOWqPpbM7P01fNxfyyklmaFkDAACw4di0ADla3gNkdqEcu92u1AjgB2Hs9oEdofdiJYYSmPXiLSXRRkAB2SCcmCIHgpAGox13RMB252d1ud0dRAAVIEkTMuLRnggk7gCA8nvuDncjw9jkZtGCV6t1jhjx3PdnyPbdgMQdxHAIJBuCwSQCFwICxxA0cwJPPd1SgFBGBJRCN3AlCQFAsdkKHTCICglwiFQbhFEXIkNgAJQHE8YjInssFYndo0cfcQCbVBmCBSBuLHdjCKHLi33ErUQG2MwxCYj8XxgMShxUncYDwTcyCgEBwFwkkAFdmF4HAyF8FdUDrVt73UnsJJPaS2OAIllPcFBMhAABGEkzLYWtmF8ElQDsIgmxxIJJUgRQOO7VDPyHeLd2AAhQAEakInELwmxJXw2GMoJfB8hcxEgM8iWIDwyElNCvzUmSNPqocYGhDYBH0zx0xJEyzKICyrKcGzazskkHO7Jydxcni3I8txgCbXz-O4QLgtC8LIui2KUtPYiWp7XbRHSzKVkYFw8oKoqSrKiqqvXWqDvHRqT00r9IHazrvGAUQjNM8zLOs2zCHGprHJAXaZtk9ygU85AQBJCgiV8AQcSfJ7exe98MaOb8YEdHymNoEjWqxsc3tJ0ooAKSA5wXRcWLByaIckziJq7XiIDPBGkZRtGSZ7V9XpxvHHhgUAzGoJ8ieYOqksFsnmvl56qZgZVCeJkXFeHLXVfh4BJSSfGWzbI3kwGI4sXSI5rjIbg7Yd7hQSOM8kj4N2Pb4c3vZ9326nTBAkEdGVHSs8RUHnJcVyYxCuGjP2IEYI5dWZI5oXtjO7aJOQsE9vOE4LwuBkcSJtGgFBHW2LxHWVQ2DLMDYi4QORN3SFvM8znEjg4d3e49+Om8HgvHSD8vS+AFwk1cYAcRyz4QGpc7gDkEBURAaFedRgRyq0YSmK9ofl9buJ28dh2u57vP3YHw-b+TEeH8cCuXG5sWiBQAgukFRAWTDwfHlLiUEkZ5CBECBMwUANAPgeDXkPVAY95ioBErWAQGB+zADwJmMu-RZgsiJB8VeyBx5QBJE2Dw0UBDGU2JqeA0BcwBi6GmbCgD4DANAeAkIsUradClCnBO8CiGIOQagtYbIaiKG4U3BYo9aGkPIZKSh8lZwm3KkSNQ9xPTpBQI4WsjBooT18HBYyZA4RMMDuIFY3skBJGsBsFO3d0iQBgTQ9Eok9qzEdObaxtj7FZViI8IgLi5hJ3cYUIAA`, `2,Grapoints,kklkkj,64031,ILDmJAhZIawhjrADYAkDGBbAYgdwCMAmFAVwBM0BZGLAFwCcCBxRgQ3GQC0G2iAPXkQD2IAHYA5PCAAiANjR4AoggDCIUZGkQVkAIrB1wGpHArgGEPHiJbd+7esPnLiE9ce77zz6vAbvj7egR7BIc5aCACMAGoEWACsABYEAOoxsACSOBLCAJoAGpAoAGYA1AD0VdVVABwgaBUAbjU15a3V9QAqCQCmAI6IBhIxqQmkealRKFyqkF1szPhcBc0dVVAVAOzrFQDMa+vASkS9AA7gEJnAMjExpPE4dFypeqAAqkRJSRjMMdu7bTtdYATgB6zwkAkYn6eQQMhAsXiyTSGWyuUKxWBHXqwEaLXW2Na3Tk-UsEGQIzGEymMzmCyWeBWhw6mx26wOBNZSjK-TEiHeNzuD1wz1eHy+Pz+4I6QMqoJlrUh0NhCGYiLiiRS6SyOXyRVK8pxDRZrSJNRJZIQkUgGGkkCoBgceGYAR8MgqlzsABkKtpbAAFEFUABeofDYfCUejMdsyCU0D0CeABmQEFeIC6AClgHkAM52KiQHMhCoAFgcqgquNsHv9sc8AYqMb0qidiARJZCqZTyaTIB7wBwNiUAAYXd67AiAMrtnwBsrOFoOasN3x16M0N0IPBt8LmJOJ5PHECcLhQCQYSAAT3rED0w5CHq9tl9d4gTbXvlXUc79i34TxkeiYwCANDABmwBdOQFgFrYCbnqWFb2FWNYdn6X6Ns20atnOEB-uEPaHr2A4nkOI4hs4M54R4C5Lthdg-phLgbsxa4Hn2x66KmiFQi+tgPtuHjPg4b72J+bEuExknRkBvYgcgcKRM6zB4Pxa6gMBKZDu8eyQEk5BEMh-6QNO74Nmg8kkZAMRSIU5CkHozCTrWwDvHBzGmJxyAxF0vw4HsBB5pAACW5l4DgLlsXkWkGDgun6YZxl2AmZmSTgVn9jZdkFA5ehoFF1puR5mHQN5IC+f5gXBbedgPoVmF6LFOl6QZRlqiA5gya4E5TrmJVID48bdR4TkNbI-WVkNnUja4Y19fmDgIsA1wuMNs3OL1rmLfY5hdQ460bU+k32BlniHUd64nXY6pua4kBAA`, `2,Merging Tracks,The 9th Doctor,43273,ILDGJAhZIawhjrAKwDkBaANAUgOwEMB1FPASQDEAlATwE0i0AnUAd2AHkA1AcQAsANmQAiAgAwEAwpACiAIwBMaMXIDMZEAEVOvQSPFTZi5Wo0IADnwCqyeJIDmwM+GCOcIOiHYyQPyNpAKAJsAegDETX9EEGFgd2iExAA3ENg+AGoARioZABkqR0DgADMxBJ8rRM1JcMSE3JCUMmKAFysqSTFPKE0ACVyE6ApEn3g6xMkQ9IBlXoB2LhlNFp4EK0keMujI2vGEAFlgMb264b4W8uBKk6Q4m7r-SQAWQeBcwvutMgATdk-EGzTP4RKLRaBWADO-3+wyIu18VyqFAG0Pu-mRr2G5UgQNR9xsAA4XBFejhgXiKe4ACrkiD7SAAS1pXgoq3G1OZwBkjM5rFZew52IKCU0-PZwBpCXpwu2YtOYCh0W5AFMXv9YlZunj-DI2bcsdF6Xh4cBWDx4ohJjR2pB0gAFUAAW1iEBskA+CB2rwwW0Q9IZJrtBIEMjtVOKVC4VHCw00WoQFSqPAAHglYkQAPZpkKZNAZmhcXrmABeAE4IDq9Qghol6RCTXyAI4JSalqkENB0fZWFBcYHFkKcimfNBXE0+D2engm6BmJWQYpI44JAdD4c3O3ADAjVyJPk+MFOWsLpfjN2TrSg25yWvAdKJFJoWDfb7Kx3KqnHWPxiCJhJmzlYjtC9gGEEJiwwXosCwcw8FgFAK00XVMRGSACCTABpFsQmTaYOCwPhhBoAhVHCc8RSvBB0xA7kGRAoMrAAKxDO1vnscxgTOC55zCdcKX8HgUVuUc+IpUITS9Q8LX+O1UgybI8hlYBhlKS5rmiVgalRMCmladpOi1AShOrZS8VYH41xOWAcRAs1jIgDUf2iGwaE5TQeCw6FpRA+53CsLN5yZf85USPyAr9SAlM9EKEjCoUQNFKsEi47FePVYA+FUYcagoSQ02AOhFQiqKwT6eyoAKudPj5JLoWszQEsE-LNT2erbJiiqWvGNqRQ6mAricgFGSqiBqkSWIMHUhNIHdBJZOEIhkzIYtWDtDgCQgYY6AZS4fPcrhXjjepB0yCFpn2AlhGLJJENy15phNekCAk4RfTxGwGpFGRlwrYAiB+hFy2HYYuCm39gAUPceB4Yt9lh+HR2mNVEDA1hTvOy7rtug7DzQGjID4CF4bhuGkIAV2wgk0DkGRGM3Ak5mBGwgu2SRLNEup3Gkg4cXZ8Vud-Xnh3cXpj1xSlgFF7FxbxLnUJl1E5alIWKS2oqE2AN6EHMoGOaQdzyv6vLUWqA8KXgAGtAxYcLb3a2xJ5EVhBNWJGK1vXTMKy4RpuWcTTRapkZM94TYsm2jjtw3PngYlED5KP7lt3qE5uGOkRTk5mbc52PZhAr1fBgvc-GR4g9+kPoU0MPzbASP1zT5P1yzkU2eL+59hCDa272MhWBkMuYi5Y8eB8upYhEpVgHCiIc8PTz5xH6FoCpEDDn9pCB9A4B54ijg9wcM8VZBF3gGmY9enouSshyfIPncYDlYViBNM3hB3A4R6j+154BWAB-oRfr-D+qJAHin-ogbkT8vA-3FMA+cUDTQwPlOA6ae9ermHyhXPENQtLRA1EXT4OCZxXAIQHJquNu43GbtsWelDEhBAQGgLgJAyYMEyAIDA0h2w8AoKwbAIQUghCEcIkIUAQhzBESI1QAjJHCOAJIUA6Qcbg2EFwLgZM5COgoC0DAcJ7BWAUHwPgoAeBcHEbIoRfxijpAsSEUs5iLHsDwHaAQtRjaZC4JolAfA5BEC4LASgeY6BYEgAIaxtiu69BkRY8JFiNpUlUDQAu7AmEsLYRwrhBAeF8KwNE2RYiJEWOkYI-JCilERFAmojRWidF6IMUYkxZjCmyKsTYix9jmmSKcS42oWJzBkEUMmWA2AyD2EaXgWJsjIl5MkZMyR8TEnq1mqklArCiDsM4ZAbhvD+ElMkQU2xxTbFclLASJgiBwCqPUZo7RuiGr1OMaYhxLSQBzJER02xrBIB2mKBhckZgPFeJ8X4gJFAgkhLCW0qZIAol7JEW84RCykkIC0istZGzMnZN2ccmAzzJFHIsTATQvz2DICzJATIOAkjfBIAE4QFA8UiNabYj5jjgDONcQgFE3xphqHUZw4ANAEVCOmXC4RwrO5xGLCgKaLpehWEdKWTImiGpoFhTiyAjLhEEtKYo5RIAygUqpTSlAdK0Bassa8qFkjWUvI5bUNBKAFGOgEMMhQVh7DfH4EIHg3xjHqsJbizpUiZkiPkXqxAG16VoBaIoUsEhTE0BEPsewVIA35KDYc0Nciyn6uQNG2NCh41ZK4Em4QKarB4GzUIg5RTq2iNzdWHwBa40JtLSIUZlb621tkTq-ZjaKwaBbUWttZbRlpu7ZmutYqa0DqgIcSQFBIBJGICgMQyoz5CutSI0VtiJUbRwNKqaWIyBWB4KWcwcg8BUCaPSi1g4rUsvvd0zlEAcbJipL40s1LvWgB2ktCgOBn2PvacB+1CAiAgA-V+n9gg-3ACWjIZMwGSjbuEbarp7KekICwFBz9RBv1ergztMQlAgPBuEcy0DFHLXgYgN0aDBHYMCHg6RpDKGJUYaZVh19IBtzAEBY6bxvj-GBIzME0J+6YX1qk8IPgdBFxD0XtQR0yYkhqHI58kDsiuOUZ47UG8AnPFCeBaJsF4mIVScljJtDIqpUyoQFLNF6TNnbJyZOzVNGQh9rDXOmAZQrnVNuXUwxjymladQ0+rzL7ajKhADyvlZMBXJis+m2ZtnJVLrOQiXo7AP54BwOYDAvqhC9CoBmDA0xIB4AkxxjLunLVWF6Mi4A2hCgJdUPyvKW6InSZnSEKTWXzlDzINoeVirlWOgavsHzcip29u7f4ElRsNBGupbSkQVA6tRa001lr2hGIgEE8JkFYmJOQt69Z-rsn5OKZ8PENACqlUqvsPsKrl6hMsarf1nt+LJ1PCILlo2lRhAyBwMRIgVA8CVcgB9lAX2PP3tmzW4AAOgfQEkJ4VRxqNvCFGaupLuBtvUa0xwCgfAu7aDwEd3lnWkt5WLGQHgAhqmltSzZ3rcmFMIk8o9ibL20DSDhwjn782-ui7R6S+R8B6UEy9fYMZqhIAQgIFgabuTReeazT9pbfyjZZll3weXivleq+m99jVSPFvEr1xjqEFAl1G5HiblXavXvva8Sx-97PrsZajbdhEKIrBnooBIaQxYTHJnMN8brTOWeaPbXe6L2mbXAbJxTrQwALiRTjFgcrZBehoFYHIZnpHQf2AJyM17FvA1a+nTiyXRsXgO7l870ASvXfTYZLDz38GetxL63uv3oEA9D1yOwfIqn1PqAryw7Amm2WRZJ2y9PlPTTxdp11hDPuh+9cPQ5ukY2nuTfN4jrzyOG0RockOrgOPTUiBkLP1Z8-ic6bT+TtfxYaeJYFUm5nrP+9oUrtd8B8uc7tgARJxtnsptXsNdLdz9u0-NhBKg1sTU6UF8Xkl839k86MQBIZgBeAS9v1QAa8M068FsfskDLkZAMAIQ40-9jUyt1M4Da8rdKCr8YhHBUDccGVk8sDU8cDsMIAEJgAOst9AD5lB8Ylh998poOBHAVM1MNNX8BCtNcDgA5goMeAiCkg-1GQ1AqAVAFBMgVD3kwMhCQAu5+lBlhksBRlxkd9pDesEkWsQA7Qj9+cYD9gWCyC2DjkkCXhsd1t79y9K8ic+DON38M9WtgBRFRDN96dBVHDZEpNZDPQQA+doCu8e9PsSCz9tcG9AcpcZA-ArBaD6Dkj0s98j1PRHBJ8lCZ8wiMDMN+CzDk9V9LwXRrCFAhkq8HDh9gCnCB8XD1YqAMjj8Xs3scj4c8jNc-DA1G9oAZAQdb9gi6V8c59wiItIj2iP9Lw2QVgdC9DhdZj4CCiFiij+oZBLkqkblal7lQtGlTD0MojKdIAzAMAAkkMPtwtF8ditN3IGRrhIh4hvgvilUvU2cBi0t4Vh9uQMwBAERphHBehNkcBe9SD9kxcQ0JdLilioRIAFACRU1OsxAX8Ij6tgNATgTIBDhRCkgyAZB49HQoTLsYTxVh8wCEQqQxs6AaBvlvg88Rczj69CVoACAcBtAliXhCSU1phNjmjuNWiXjdjojIhNxRDGJGS0BqUWSJCd0pCUjOTR8-woCT9YD8jRTdVylNo-BKU1iRBFS9NlShEGsH1cCcQQBCDz1dDMSw1sTtVECr8hgF0yS6Ci0-8ITE1KjYTqiD8fAD5IB+M3tz1iIYJ1Nr0fE8pUwHgMospi5NJ-ZJU6ESz-xaF-gDxwhagqpkAKAxg+AiB58JBGAfE9gq5fhi5DhLY-44jSy+yQBDh3ZfYERfBkB5EBz+oYB+MOAqQCMFBV1yAaDwzSwy0zZi4QgktHQMAtytzqceB70BwqQSZiYhz+zxg1y25tBYgkJwZIB2BhgXQU0ENQJDhF4bplIv9gABA7Q6A8BlAGA0AIRsA6SRhJBehY4OZJgu48EQgjziZ4ZKFZIzzK5Jz+oAhhB2BPIoRhBHARJ7yQAqQYBPAGEz5ZBQJ2ApSFDSU2B5FNBYAIKIEwKGKTgQhX4QAQgAA2bc7incxiWC48485CoS8YKU1rbkMSrwLcEAeAXuKcgc6YVM1XcwDMqgLMwVEuPMtuQsxIYs4SyhVgcsz4SsjWEADQHgdgFwCgT85MXPfPGQKMqPTRMGM8qC8afi+CuGRC3svSkS1C6AAIJYYAOLLSMwR0GAA9bQPgcNJwRwLMSQeADCRwc5ToN4EACma4kAOEUCWATIXUlnDAfk7Qn0vvRCuYHcnijAL5JIP3EIMQDy4sCeHyxIMc7uPwLkMc5AcADU8sYQF4O0L5XwHwT6JMkAKwWc0seckgRc8oiMh-ewOgItBQEZShDciq3c4AfcrzQ8gS2GU8pqkcyhK8iShEfwSAWIQK6MLZLkboLAOk3MIrSyPuf2cYMCUeMCcwcqncggO0UsHakmfany5AcSpCfyo8R-U+SILCGQKEQiyAUcfuCUdgKWcaCGtuJY0Gt9KkExCgVQOQCEGaWyBGtuGwY6wIKwJXI3BQBCI6Q0SANBYuWMcSisLgIvYJb4MmGqfKLgaeD2PuDGr0rGnhXG6yEqFkdCNuekUm5ScmuXBQTQ-6ZWPgUebKMSlqyAFm1gNmsmUUDBPBAqQaUSewYGhALgQWnGuQD0OkvmPEEosmPgH2YcbkJgBKb6cYWSbyvYF0PEHSZoNoDoLoTQaYDi8GvWdyWqfqB6B4OzduYcbQNIa+RSPgSAXIDMM+PWcUzebkAWHDS1E4AAXiAA`, `2,Fight back,GudStrat,75194,ILDmJAhZIawhjrAA4HECGB1AJgexwGFIBLATSwDkAnEACwAkcsAlAFRwYCk6cp6mrDt14hCAYwDMEAMpYAbMACKCAJLAAIiABiicMgCyMYzuABqNADsA7ogCikAI4rEwaww3hX3iBoD0AKyqAGYALgCqLIQADGQQkEoACnQoABxIwBjwrg7WACw+hcB+ZjIMAOwAanZKoWgI4ZBYXohKGi6IWgAaLQhG4kWDwLoWNvaktq5K2hhDrv5BYZExcVBKBgDyDL3G+QCmc4dHjc3ebR0I0D3e-Ufeurre-pOu1trZncAARix3SEkpdKXYAALXCN0g1jwf2KpQq1Vq9Qg4Q0eQwwSm2mkrmglWhf0SflgdDMAEYWHYADIsFojKwvEAOAA2FwgSgYhB2QwWIQiUVi8SUaHCXOgjxykPxrQ2e0SrOOkCZ6imCW80HEAGlvHYNJYALZAmG6EEybXAcFnDmi4ABeR0GFrYXW8XjKFnGXRBl3RpKs6qnHATXa3XWC1G0GmnLmnzszkBgKpbEwhJOgMuhC5KUIJQbYIYeWHH3K1r+jJBnK6gIAZwdwwjZrDrSt8b8lFrKZFaZ8mfdwT8XoVvpVBfVWoreA0dlrxsj9mjlrjGXkkAAVu2hZ2MumID2phtQCza0W-SPA2P7Bo8AYBg6Zw2Y82lxoAuvU1vu5L3XQNQPC4ri9mpbAuWF54JU0TTvWUaNtmj7AvIaB6lycwds6PgGJ+e4pFm3r-ieTxnsGYEQbeUFzjBEDuIu8F2LQDqoV2EJunuoBmAWczHsOBEgRml7XpBJr3t4VHWvIhCVK+m7AtuIAYcx0qgGQv4cXhXHzIR46TgJs4ZvOrxwfENp+H4kloUxOEgDmwQAF7sUMnElgWWg8TulY1qRgnQT4InxgAnCgpmMa4ckWcouaUMp9mqY53HnrxNgUYcd5ecJBn8AE5RsIF77me6ex4HZgwOYBTkaRe+qGn8yXkd5aXGAEeS+euWJqnW2pNMhOaKZFRWQDgv5KEBhl4kRXCJXMuhdDeNVnDMrWKAAHs1SbSR+pwsQtPVFI0-X4QGI3jokHxVcAU1CZiswBvItHLa1MnAA463SnQXSFdtfUDUN-AHaBGCXTCXDAJQBZyQN+6VAUPiA8D7XWGDjCQ940Mg5CYOgAArojrjI7DaOY4Uk3Tbp43TP98HAEt9HTCthn3Y9nW5v2R4fXtGQ-fFqQkeGZ0pRdrUBGYXy3UF4xPdmub5szu1qWzoU6pY1lE0cU4IJQlRYAE6MUKSTIgsQbAYGg2jWCCXR+AAbsZVtW1AfjlNb1uSBbDs24kZiSFWvRTholSVOjXx6tooQglgSigOEABMdB0OIaCVHbLvGZMwRmInfi+QnifWBoJCpAY7liCApKVAHAR0F8WCVLAqjaJQeBkF0iop2nQIMM7ifN4nQJKKohDKJRQPq5r2u6-rhvG6b7cu7b9uJ07luJ8AhIYNYFwqD7fsB0HIdh5H0ex-Hs8u8nqeJxnR8O9YhCktE6NGP3jzF6X5eV9Xtf143TKdy7rdTw738O27r3fuMBwBqw1lrLAOs9aQANkbE2ZsF7TxgJnF28804PV8qkOiEABgb39oHYOodw5RxjnHVBl8QAAOtufNO2c-B6gCPfFQyon6MJflXGudcG5N1Pj-EAbckH-z4YA4oqQzDo0ZMAQgKhwHDygaPWB48EF-2tjPNO6DF6UA0CgT2JhoT4K3kQ3epCD4UOtifNOtCs45zzu5FQlIi4l3YRXTh78eFfxEdbX+QjrbUKtukPI5sNCOIepoEAcjIHQLHvAyevibYoIvo7VRNsNiUmsAAT1sMgCChjCE7xIfvchSSraWLPuY0ptj86WWABsJxz9XFv24Z-fxxkfFp1aX4QJwTQne1sJEkeMC4ET0QRgxJGiUnGVqekrJxhkB5O3sQveZDD50KoV4q21jj5VPscAX4wA2Fl0aVwj+vCW4CMmX4Tp3SQlSLsGAoeUTFHDJUfEqZ4y56XOmZk7JMAjALOMYUlZFSk7rKsSC-sOyakWkORwpppzPHnOAIIjpGy2nACCbcsJ2hZGPMGTEkZXyPloK+Wkn5cy4gAoKcssxJTQXAE6Vsy+UL+5dHqS41+JyPHXIuW8q5aKukYp6VIpEAyFFDOUXEsZkAIWaOnmS2Z0A4CaF9gQxZJiimrKzmC8pdLIW52qf3S6sLjnuJaQK9pHcLVCqxVONA-S8XioJa86VsrSUzN+ZCFVm98lLNMcUtZDKBVMosf4UI5RlQqD4Ac5xRzOVmrOV3XlqLzl2z2BkqR2xB4QPxUo2JozF7EodnKh2S93Z6KVekKlfrNUQrKS7ENlS-DhsjWAdlca3HNMTfw5FlyeVpozWE1QuKc1OrzYSvl6jPmTrdh7fQ0j1DVo1cCvV9aHaNqTmGiNNS1wxoafGrtiKk29r5f28o6apGA2zfI6J46XWFplXqktajZ0VukeCJdQLaWBsZXWrdra9TtrhVy81SKUVWtTeewdU4uAOtHbel5UqH1upneW+dcZP00oDdqoN4LV3-pqQFPdHLO0Ip5SelNSaB1SI1A8+DzzJUFuQY+iZqG53GEIDWTD-qtXHx1Q2v9zbt393ciag9ZHrUUYg1RqDUjKQjpvQx-NRKWPTowa+9DBRuO1tXfx9dgmI5VhVioc2QHTWHvI+Bl2-bfLUGQFOe+YqEOMZUyh9TfgV4qGgFpbTK6f3BoM0Zmpg6xOke5ZJqzwjU22fs8AAwcHFMSuU5OotySZ0edXsYdo3q1WAqw7xyhuHdV0P8IZ4zByzPifC2Bvt1r052akZQOjiXnVIeY25rRvkqzpKy3g1VRjqU8brXpmhgn0X90hqF+F1Xj2Rb8da+QlBST4inBsBTTyksTtdU+oldg+7zsvDlgbNa-M4d-fhvwZWanlEq2F0Ds3avRYa2ExIETHXOeS9t1j7nPNZdyf131y7v1nYCxdq7-czC3em-dntc2rY2ee1ORICWNutaY6W1LVtn2uwy15kAFosA1iaCCFA4hLCUC5gRW0ig7huyKJbQofhojWQMCztn8WihX1rNznncxjMOGUALwgDJkADBkcAMcXGIkgC07YLzU57nACyqqHFwAsAwAGEiEEMBoT2sDDACCWaMR92AMO4AJBpFGCvUyaRcRYPAGhIQeAtHgC0GF8AeTwAI6aAGHUm0OhshVxDtoaIZNhJoG97z1wlImZnHF1Hw40AVYJ5TyYVtNSTfqFVJAFewA0DiAjpUFcXwI4BFgG8MPIAtAC0p3MOnhQGc+CZ+z9nPUuep477Wfn0AlAC+QG4U30iCg9dsFpAw4BrKaFkSoRQGgayveAE1VES9sniFsBqMggcVwYAjjgDJXxJB+2153qvfhkKn5QHqEEV+b8YESL5Vnj-2cn5f6n+zPeBd45AaHGAUDzY4D1EqEHVf3pxMlalGC2hAKgLuBVnnTnEgHAFUGsDQFCU+DIALg72sE-wQEqDYFjixC+CrA6jOBQJfwwkFwQG0HCEkEgF4FL2AHQIhBIEgJhD7l737xgEqAigbhwHRlJlakYJP1AGwIgFwPwMkEIOINeDsGOlTzIA-0oOoNoJwAjhu0EPGCvU73qHYMuC4OsB4L4LmnUhkDeiphEJADEKNgkNgAmDOBkJf0aAoIgCoJoLoMhhYSUAjmNhrhQHNgDgkhXGsnPyRFgPCRfyUBBGCC6BwCRCj3ZCagDDBEKDsHGyKEMG50JGJDJApGpHP152gElgdDblj0GAAF4gA`, `2,Orbiting Grapple Points,The 9th Doctor,54848,ILDmJAhZIawhjqQCYAUDGBbAUgBxQHEAbAVwC0BPSACWwDEB3DQgD2IEl7IA3AQwDqAVgAMGRsADyANUIALTgBFiIvgGFIAUQBGAJgByI7QGYOIAIpTZCjstUadBo6ZAA7fROCKBlzQjUgnhLQwGYQAPYg9MAAmgDOiCB+kYmpaekZIGrmkOCJisAAqgmZ6dm5pYkAspAAyp5p2fR4la2I2dmpBYVVqTXmDakdlonQPX2QAxnDqWO9iZqTg4kz+UXziItTZeado2Albf67I4gFoIdHWSezwAAqYYg1VXmNN2t3pwjPr0PvZ-dHghFi9pv8ENAHqkQb8VuZCAAzK5tbI0ACcyNaTSRmNKqwBACU0jUCV84XskPcySAfmCKRDAdDIKCdvSIAUoQtmbD2uCINBpLjrmyoMAiRNSXTqV4xcTIJLWdKCoKhfiEAVxVyFW8RTBZUztX96HwhZk1ezgCrcebRZqnvLpRAbXq7cCHWDjaapbcrZjndBXRASY7hUr9dV3YqupbTc6NWlFobydKAwnI296IQvTtM9m0ikQIppNJSNosPQAC7kHygQq6ORyFjSAD0AHZmx3Ox3PAiANRdrtotsDzsSQqEWqXEIARmkZaEcm0AmksC4+nCMQAGpBiH2Rx2ABwgGjNnj75t7-dH7iwABOSRA4H00mEpBiAmnxHIGjufEITHITdT3PKBh33YxgP3GBzHIABpYIaS8YtS3LKsazrBsmzAkce37fch3bfcJAAR0kacUl8JJKEvEcj2AE8z33GiB2vOB735SxIH0BiQJgbCBwgxiR2guDBhiEA7nIfiu1w88CPPMcJ0uGgkgAFmYrs6J4pi8No4Ab3YrIQGfV930-b9IF-f9GEAyDhL4wiR0EkC1HCVsBF+eAixLMtK2rcxa3rRtCBbRyB1k-DpNHYBSPIhBYKojTOy0uyBySw99LY-xgm41Ku1AsKu2cqDJlEhBPEkqLuxAdLm3koiiiUhB9DU2qUqEtLdJYzK73VJ8XyEN8Py-H8-wAoCOvyhzz2K4S1BiXRCk4kAj28lC-PQoKsMK6LgFq+qcL2gAZWB5ksEZZ3nRdl1Xeh1y3Hc2uPPLOyenAACtyHFPxNE4qpXBejsCpmwHmxE+D+TCO4CSq5sIpHA7wsaycEDuJJdCe+jQaegyEGiGBJG0+zIFh2aB3BhpIEKCT6Fh+GB0RmTkcuAREq6zTnsm172eSnrDP04IqjJqaSZ2jthc7Cn+TyaG6ZqnmO0Z6LxxRiByCSadMaJzrz1Y3qIEIcAuIBrmgem8DQalqASlgHAaC17GFebI9YPeisTWAPwVJgKoJt40WQdNsHSohqARAk-Q5b2p2leqlXLgAUw1h2g5xrKIBoCRslgFAo-2uXYoosAklYFPzzT-WQA4P6Tf90nLZDho1ChyOxbh+W5Ll+OEHepIRDLnTdb5hAcCgfQ-ag82nIbmDQ+ANRqfuKS2-pwcu6aiAsBAHA1AJCWzYDi2g-nhalr1NQMBAW37ad9ry9v4APq+h9gGCdXgEIcxdGISgFvYPNUhoF7BkIBWByBgIgeQcIzZVIAC8qjwMQVUZYADUFpEYIoEMGQ-DAEdOJAIj8VpeHAAUEIwAfDz3oDgHgRB6AiHILUOojB6DwDQUAkBvZIGQOgSvNBrQ0Cti4eAqBlQMFYPSDgx04BCASFcDAam9BwCbhgNIywHsWEgDkLUEwBI5BEEKKAO4ix36oMUM2Hk7Jmx4CEVgPgQCh58NKIoXsQgbEe0yL0cOyIQg4MSGYSAR4cDgHAGoPwHBwC906DgSwHBGCEBaPsPg4jUiMBoJuCx0FFi4IQNIO4LB6DGG0HESAABLFBuDCCsKODUacql0iFGgOYXx+lCjGEgHo3QrZLQFjdAko4BQUBJzSNEJpZCYDSA8FuFApAMF1MSckxIqT0lpEmFkr4uT8mFPgMA1I8IqltBqXM1IDTcHNPoK09pKBdBCG6UyPpbQBlDNSCMrJ-IJmMCmaQeER1bhJOREsjJqzGk5Lyf+LZkBiLSj2ciQ59TGlnIuR0o5MpPaOLRWkDKrRmnovRWMrFOKCXzyOEAA`, `2,Gridian,Shunk,73697,ILDmJAhZIawhjrACYAkDGBbANrAhgOoBiAriAGoAq+aFp+A7jJTXQ8xAKIBmALAEUuCAMIgADMDHAA4onAAREMMgDgw4BmBo1IofESGjxxHpn4TlqyD1cD1h0gFoAnEegA5cI4ciA9ACeAFIAspBoAF4yAJoAMt7AAKqQfmqGAgrRPo4ACgAcAJZUwABKeQAeWCJ8EMTAXkZckABaxgIybtk+qpnuwIRpiGEAboNd1rCQWAnjVsmpRhlZsybDhcVlldW1wDyShsIATCsmCn4AkrCMvCHNoORQS30DjZCjJ3PAx4vE9ghKACN9h9jEFgDkZo4BOdOiYwRDxgIANIoTjGOr4MbcYDAkFdPQKGpdLgiHJY0wZInZEkAOy0JgJVJ8tPpxlsfzxogyuM5ED0xAALiEIsLRTzZqpLn09ryupMIstZRB5uTgAJfuMwowmV06jwOcoWm00BYumcAKznHgCxIlETiRWqGQGlgeJXZRIiMGLNAPd3WPXi9RGrrQDAAeROqjQ5ueqrCh0hDj8AGoAMpoADsFC4AgFchAOgQAEYKACsOaABYAwgUWDnYgeAD20QAGpAcDwU34e72e3lC35hn2+12R72B1QAMwBADOiDUHgohHNpGihGLOGaIkgNBkxEYzVbQ-HPagfkzp78U5Pp-ULjyACdEOdgAoKPRy4LmgNQIlDpWlYYDIFAXlenBjqeLhgaejCQDkPBImib4gKW5ZVjWdYNs2bYdpB44Dtot7jvhI6TjO84QMgS4rmuG5bjue4HkexEjuel6njew53lwD7PggiRvh+pBfgKP4CH+AFASBMHjhB3ZQbJI5wQhSEIAWaEVtWtb1o2Lbtp2CkEYO3EkUZZHANOc4IJAzA0au66btuu74Puh7HqZbEwEpfZcVe95PvIQmflg36-v+gHAaBHFySApF9tBMXKfBiHId6mkYTp2H6Xh5l9oRaCsaOeUTpZFGiOA9l0U5jGucxHn+d5SW+UVvYBfxEDzu+IVhRJEXSdF4FxSVPaJeBKVqRAISoWWWmYbpOEGfFpVEZ5xVXuR1kQAoi7Lg59HOUx7mtWeTVXn5PF8YgNTdSJoVieFUlRT5vacMOxgpM1r2QCEVBcMhOQzeh2lYXpuGGRtJlXst-ZlVtyggFVjkMS5bksWtbVnZxJ1+O1NnCLdoniZJkUyV9PbyVeY2wRNyFpkDc1ZWDS0jX4BU4zDbNw5Ryh2Xt1Uo0d6ONZ9504+o5S-TZaiE-dxP9c95N+JTilK8wABs4YAFZNiAagUAzmWg4tuWQ6t0OswO2tNurCPEJV-PI4ddXHRjp2i9jbu4zt4huiwkBaLLvUkwNL0U8NVNh8rwCazrevAMsGUgwtOUQ6e7Ne5zVs67b6iyLttFO7VaMNXeUhc0YhVexLUtUbrQcPX1T1k0Nuys9TsW+zt8cAobyfZeDWdQ6eQ-W7nwhoIjjsHcX9Xi1j44XeOb42+G4DIN4LzhCUwzRIcArAPgLoklgTZJlYfg6qIFcHAoCiVlf-pP0qajQEIb8aGMGrAM04hEB4j5zgKA0MYFk4xL4MhvogLgd8H7P3gf6V+aomjIJgEg4A01kB1ATiALeaASgAAc94HyPo0EQIRpDZAgWyKBCAYH30fggphswkHv1QWqKQIBv6-3-oA4BlgSRknAYw8uhFb4MOYZIj4rCUFCDQdoEA4A9DACRCASiW8NzDBQFgCgARGAyAIe6HIKZLDGKwM0cxljmiGO9FIqw0I8giPgZ-WRKCMEoXqCAIkW9DjFi0TogIQCwSkKVNQ4wfh1YWKiZY+ALo7E2WAFrCI58mEyI-iAZggNkAyFfhgZgMRDj0BQCBAIz9jGWHeuE8QIoamimQvEhp2JkEf2QK+Lg4BijAGIBEEAKBZpGziXicpJgzHRKiU2Pw1TRS1PqY0hpLiWmKK6WoCwkAsjYNbDAcAMhmD0i1poSMhgwiQBSR8OobCqIUA8IwNsKBSD6J6YYJQAhFSylULIhA1BgLECnACWckAaSzOANcAs7pkjsK4YkKckBKwoEOJmBOPMEDHNOScc5bioBXJua2O5zgFBJmea83k7y36fKoN835kxZxApBU-cFcjahQphXC2MzQxHIsgCc-06LkCYuubc0g7RYhGEJf6ElHCIBfP3L89eIBKyZE2aAQgWAXCkGaIJU07hXwcOkCAhpvKVgpFoX0POcyDWzDOMawwkAgA`, `2,h_22,h_bar,52172,ILDGJAhZIawhjrAEoHsAaAvAkgTxADVMAmAKQAtQBzGI0ymhAEQBktgBRYAYQEVgAeRABZXgJwg0IAaxDhIAgOIyQtCAAZgzEACMQZYBgAsiM+YtnDhy7bsGjp+86vAbZzs2YBLF+et+gQ7uiJ4+QQgBES5RHl6+0W5JifaxofEpaSkWWRBhCdG52YhFXBmJpcXBFvmZyVX+9enhFU0NkW155YWoAJrtZgBiwAC2ZADuHjyCPAPaAPSwAK4AcgAOS8YArADMAFoQimQAJlpIwACGAnPzW6wAVhe6S4LHJNfAsJB4k3MQXwA3D5-L5rP4IL7eX5-JTQ4AARkIuhGWwougA6oRYDhBis0L0MJAADYAMwA1PNKVTKQAOEAACXmAOp1PJLKpdIAKjs8ABnRACFaEdFbJa9dHwol7HiQTkXJSDcZ7DBM9mUqDzADsavmO1VauArHmJOM6hAkmYhEIS2RgwALnt0XxqABVEgUKhKQhanW-NlqgCcPrV40gAAUSQBpOE6BH3XQ7a3HL14N6ENZ7d0af3sunARnMtU5llcnn8w4gIUisUSqUyuUKpUqwvsjXatV6lssw3G00IF3adErAHHEUaZVkfbookAOwu9JQwfZfopgaXLNDEejCBUCKRKLRmOxuPxhNJq9zDP17OL1LpAKDBRgkxWvRIAfhuhnKCJoBnxyJC50WONBjgLHU2x1TsIM4AMaQAJ0QWhLWtW0HSdV13U9b122XEBbypINcI3HhdTJSQIBseF40TJZk0IVMSHTTMKGzC8SyvLtWXYu9gG5PkEB4Wgq1FcVJWlWV5UVZVr27GB12paCDSNE0zWAflmCHEcxwnKdZ3nRdiOpFcdSI31wyjOExD3ZFUQxLEcTxAliQI2lOJ1Vz5nvR8WEFN8Py-H8-wAoCQLA2TqUgjsIqpLg4MQhBTBQm0RntR1nTdD1QC9BSqRMtcjLy0idnIhAwxAaiEyTFM0wzLNPLzcCix4jk+LLBBuGAESa3E+spKbGL1XkwrKSU1sVL7KBuE04dRy2ccMEnR19IXXLKXy9kzJDCztwgABlCr9zso9HNPFyWrc-NBuNC6vOAB95ifTgX38z9v1-f9AOA0CmtbYaoOuuKEIQRRtCtFK0owzLsLW+YNpZLbl2YVqIEIQ7bMPByT2c88dUa66GpAcY+FmLhgEGYThVE2sJIbaTmwg-7oq42LIBEEYcEmaBIHAZK0PSzCspyka4fw27EY3YAlB0X4BH6GyD3s48nLPQmrpZylCZ4Cg+AHMmlEFKmerrSTGxkjX5ii9kxu7SAXQAR0jWhuekPnUvQjKsOynDfTF0zYcme2XXha4BGEcn4HJyBxkEQQKL8ZgADZ6V0QQSV6UBvETtYwzJWxc5GPZC+LvY0HmJYi8r4u1PBWvgHGZhgT8Tqm7yEGDmASM9npMg1mOEZCHGXQSCJOjOB5iuS5GC5xgpqvK+kSxkZrlh5jWKei4uMMAxELBd-3ve69sTxjAuElzFbxAxDOIJkE6sxSc6rmO8UFeED4WP44QMkKBILAZxIPSHASx7acnmG-EAyN17z2nmGTUG9C6LyPrXa+0Q74WGQBRJ0vARgoDwBcDAexfxKADGsL8nJgAunLFfSA1AwwH13isOw8wnAWHmInGBRd7jzE5AwveHBkHmGgGSJQM44QgHvhYHQTDogCGQOYWgnU9bYJ4Lg-BhDiGkPIcAXoFxzAiEgL3BBzDWHmHYZwkY3DeH8IPoIoRwARFiI8HYaRiQ5GWFoLucAwAVFqIIUQ7KWiZwUKoeYcedC+EyMsCw2w5iEFWL4bvOxZhhGiPEWTWwrjZF0AsLQCikdfF4P8ZoshwSdF6I8IY6BU8TGxI4fEnhiSBHJIrI49JkjzBZIiO43JncQDlkKeogJJDSkoCEG-ce3h+4wNqdE+pMCEk2P4S0kGDi0nOMyV1NxOSFHAGsmcQZxTAmjKMKwBBXxehKBgRU6JpizBxIWY0pZSSVlQDWU40ILitnZPkWYWg4c8yHI0ccwKOjqHtBiXMixiy+GvLeW0jZS9vndJ2X84AcjOpAuGUEsZgg34GKmcY2JdzEAPKnjCpZcK6AIs+ZsqJQQem7IOmzEA6J+SQBGMcXkw9KD6FrsvJea8EFbx3s8w+iQ4EINLlSlw6D7GgyMGISAiIIboQoZyElezgCamiJCth8zyVPNhTKk16K6B8HHuiluwA0bkwEccI6mNYBhktvYjpLhc75zJFKsuGgxUiHSaa5JLdLUWuQAIRUOiYDwCULQayGDLiarsOMekcgMFhrNajTk2VBg7F0F8EI78lBLAiAYn4lgXTQAtQgQYLodiQAoG8LYPjL7j3ghApFoBwWIGGBmw4hAVjjAJMcJYfAlBpvOBcJNtgU0TpSRm4EhBs0KjzaCCwY6S1BDLYGkAlarU1rrQ2t4OqrhhMgO2oIOgu2WF7Za-tg7h1LHGCQ+xU6IizssIoUNCAl05tXZAIEF9i2lu+DuyhVbJG1vrY2kgzbejdokeejtUiwAIYgLe35kAB1DowCO2ekdJ3TssB+9N36s1-t0LySAUIgObsCNuitEGD3QePcAParakOXtQzeq1mHsOPprSAUmrzoAYDOTAqjlzrkSIiMhuufBBh4C2BvRC6JbCYL8F-FpBi9qBufcAGkzyzhgYsMJlZOhQlmAMREpZMjrJyYQA58Ez7Y1mB0HtC4nDFERC08kgxFAkEIHGJwEYCD+jIDM3YSLySLNofCfQ2zu7ZNUtnnOisvRmBiojeaTTVL-OBYgBa0LMDwtOcElSnQuiz1GJmVG4AZX6tUr4MwArbzegzi8-mHzVLuCJ3XUoMgJASvPl4H4aLdjRPianhcq5U8KkNYgAt9oCmlMbzBOiDlMC8k5ZcL5uxkyTOWH4EEcbgjoDwcSJHBrS2GjNda9oHRHWN60EjN1uFvWLDPsG8NoSo3ZVBuKLQNL67UUA8SMDi+ABeSHQA`, `2,Photon Tube,The 9th Doctor,79473,ILDWJAhZPD4cAisAMgVQOIAsBuATTATgFcBJAMQCUBGATQFt1gARAGyoHsAtAZWACshAObCqxAFaEiATxABRVhx78hmUeKJTic4ACkAXgGMoAOQYAOaPGHAAsiAAM8B8ADOwAMK29IW5AB3YEwQZmtrV1tuEApgCWdEeUgAehREAIAJfCCEFmAjABVENGSABzIAMwAXdCpPRzoISCQyImLoCoSEO0gANjgETKo0+E9k3t4MgHYANXkkKpCIdE8ABRH4JAy2xDyAUw2IHpkchFwAalBsc5oqeVQqWxBfAGkn4o-PxFj44qTU4pbbKIaCFYqoMqVGp1BpNFo7BAdLrwJIAZhMiC28lOEDGE2mcwWS1Ca0OIC2CPg0AOf0gJ2KFyuNzuD3eP2REH+ZOQGQAjmToPhYogIeVqrV6o0oEhPNzoAB1bk9AScYoBCgDBDjSazeaLeDMTWbDXFfYAQ1p0QZl2ut3ujwgsV8lo+WwY7wgeUV4Mh4phUpgMrlwG9iUgKsBJuK2oJeuJwHQkCtmNaXzTH1WNuZ9rZwE6f1J6aLnt90MluJlquL1ZAss8VZrxbrDcb6ebrablY7Rfb3bTvb7n2aqZBedRtPRgIy2MQeJ1hP1y0LmO2OJAeXw48QPQAHq4zlm7ayIK8PYPEKfzx9YPAMgUKEhhEYcAIjKjkrhkl-v1+oMkpj+P7vp+gG-pA8h3BsiieOgO7oGQmACLgz7YK+wGgb+MD-hhyToRhMAQfMMAgGQXiwfBiHIS+b4fjhf4ARheGgV4ZAAJZkP4IAOCwMwzCQABGDAUFU3CKsI6AAEzYNgz4zNhGE5BU5w4UQ8mgQE4FsMmCggGwdgzJ4kACaikCcHsAAaphqYBinKRhqkMepwDsex5LAMK+D6YZARmhkbAGEpOEWCAGS0RhgUYcFhFUFSPj3o+glED5fkBXZoHBcAoUgaBEXpcAbFsTpgT6PFwiJcl-m5YBGVZThVU-lFdwxcA0EgKYMzygIJB0PKNBaYZBRmpgFABNw5lhcxWGOYBTGAS1RAWAATgg4A8XxgnCaJj6SdJsnWT+tkqft34aasFQvDiLwgDQMyCQI2D8fKMygJQpicHQ5mQGw9XfjVE2AT9X7BQUqIyB4uJBO1nXdb1-WQINw2jeN2VzVNOGzT+81LYMSjrUJIliegqJUDIZqfd9aXVSF-0-oDyTBVQjjyooLWsCgUNdT1fXcANQ0jWNNPfvR6OC7+LBGDQ+BQCAAAsrC8QJ+NbeJUkyZgcnTQdIB0w5OEafIWkIKs123Qw92Pc9r3veTdN-SjtOUw1wBUHooY6cAHMw9zvOIwL9tC2jjGi8kLW8M9VKKGtiubYTqt7ZrJ3a47366wpmnacA-DADdd0PU9L0UG9H1fbb1P+1+pcu27LWQx1nOwzz8N80jwfC0H5ch-IYeas08t4zH21x+rx1fod9kj8k+uG-AMy6V5Rn8SZZmWRPY+ganTlNSzKDynPBkL0vFlWQno9J0dJ+T87hFueZJu5xbBdFzbydA2XdUv-TzuuxsSye1zcMI35sjOigdQIYyFl3cO8AEjmQcJAGYpg3CLy+leDM5wvifk+MkRwBg7C4PwXg84AgGDcBIWQs0qwphkNITQlsqD6Hpm3oiPw8Bd75TcrESAYRbAZBiHANgGQjBCQCM+HcbAyAsBZh8HoGdizJDllgjKiQWAyzNBUTEvcGHnikR8PIphuwoGsBAEYKA8juQMCAHmi8+J0AkswLR1ZP6mmSAUPBbj8GUOodQzgyQSA0K8WeBxQTjGswFCREA4BvBoBiBY4ApRPA9VMItbgqI9AEE6kaBhmYviZi8bQ7BBCCFrmCSU7s28kjIAqewlgKBXBRgEUIkaojxEsF8NwPYxQZEdnkV8JxyjVHqIQEgTRpSaw6NNB7AxxFNghIAPJ8N0oI4RzSJH6PwB07cSZukKI+H0hA8gVFqI0dyUZXxxm7EmR2QxQyQnG3cvwpZTTMBiIkTFdZLpWw9MUR8A5Az0gjNOUWc5uRLmtmuTMtyaR6mPJEc8lps92kfMbF83ZSj9mHMGfADSJzAV-DTHoqZRi3JuWatCxpsKXksADEimsKLoxopRBi-5OLcX7PxaCxs4KQluSzmS5ZcKJHqMRWGWRRY6WID2Yyv5gwAWss+MC+ABKrnTO5cgYARR7mLPJSslgEhgDvJFds3pDLORMplSyuV7tPhKrBSq4lar7F8qeZSgAdvqjZ3QtmfJ2fSn5ZrNiystYkdl+jlVErVTfBZcSYU6uxAETA5lAlegtcUbJnxVgh3aMAc4mAXVrkUPYoN150wBBqR2JhnJK1LDIPG0oWazQpvSBkVAQ4kAVI2AIcyZMuAIWwGwfivDhDcBdWk-iRhICsWKcgTAmT0w9AMNShAiZKnwFmTMHALS2CODNIZeQ-EJKmEcIvFtMw6EKEgHWxsG4vixDbeGhw6DAQztbD0RwZ7ljQDbUMlR9bG2DAyLPa8d6I3S1PbSbAgT2X4ELd8Sp4akiTsjH+lwkAaA4uXV+zYmBL3MNDY2TIgH2jAe5LYMgSAJIjUoKUXAglZ4SAMJB9yoQvDyFMDJQyZp90CDYC0CwPrijCmAAAXiAA`, `2,Whel2,kklkkj,73345,ILDmJAhZIawhjrAGoA0CGBxFBnAsuFhgEwAuupZAjiAKIwC2ZATgEZasbgDCAxgGYIAJQBs0AIoIAksAAi9ELOAB3BAwByUnhJ4B7RCAWhchs+Z37z14HR4811ywcPQApgAcz+SKPhPdF0QFTzM6X38LQLNoExt453iw+0coq0MQr0MfPxtE12BQw3DcgPSk9UgAeikyoIRjUwqzfOb6FLzogqLEHMiWruDCrMQS-tcJaWpahFiAM3A2pZtYHmA1pcb42EgAaj5lrZXgWjMVAAk6VOXgAFUeADsDwwlIGbafFXflgCkwf6WF3Ghj+cweNyB8QAYsAPEJindzBJznMbnIqgBWaRzMi3YQ8AAMAE0IG8ANIAE2uUGAMO8kAE1IqVV2AGVzgB2FB0CRkLAIeCnF7nACcNwFJxu0DmBO2krO5yJiwawApAEs5ULEMilQV1ZqkaLxRBBVLgDKDQqiSShhSABbKsymsw6m2zVUO45ahASLBi7oAD0thhUfpihSDXsNuG+MGAbFlUYVMYKCeD2qNxuAzpDmeNOYzKaGaaTuaLKpL1gLPrDGQj6YQof9Qzckar8s25sT7e9FWl3fM1Ygvub7tbDYgTfD49Lhdj0Erg47iAu5dJ8YHTuXPrz4qHIAuo5u++AyLXRg3E4P53P8kvs5rR4vM575indZfS97SQUFusWgQABGFA2EYDE7TYAB1FBYGkKEND0Ik0EgAAbOZdiqTCsMwgAOEBziqAA3bDsPQkisLwgAVAQAE8mmHYANBQSCMQAVyJSDAJQgAtHhIEo7AoRUbi0CI8jMKgKoOXEqoBDE8TbBFHCWEQWQ5BQFBWNAqEyG4yCJFAW4SDtO0+BwKSZMcMjxJFCzxJUSAAAU5jJa4FGAYDQPAqCYLghCkNQ6zyLw4ACOI8SgpIqjaPouNGOYtiOK43j+ME4TRPC8jJOk8S5MykjFOUxBbnkDStMYHS9IMoyTLMlA7PIqyMJshqSIc5zXIQfkPJAsCIOg2D4MQ5C0Oa4L8Pk8jIuw6K6NmNQmJY9jOJ4viBKwISRMmgqYFa7C8pkwqVIQcB1M07TdP0wzjNM8ycsakBpqw2z7rayB8A8DE3WAP4eq8-rfKGgLRpkkKwpkp7cOASiyTcSCEB4cBFsSlaUvWzaMsO3bXv27bsNsGiHhQx1TDO8rKqumrbvqnGsKamSXss97Pu+-AQE8vqfMG-yRshqowbxrC+ao2H4YgOQpGR5bkrWtKtvy-HsZkg6FMgXAyEcmlgAAFlK86Ksu6qbrqva6cesaSMZ+zgDVAB5W4XCkTW-s5ga-OGwKLZmiaFaFr2KOALAaIJEKGAYeKlqS1bUo29LBYkpXcvjqpbFEFAtUgBgyYuqrrtqu7LPNhnTcw9qXOuVl2d67y3aB3n-ah0Lk+F4BpAAKxQslFCuCOUZlmOMeT7LlaHtWNZpN49fJw28+pkuqnplradLpzy4QFAq-+rn3eBlum99zCW+ouaIChJGEul6P0bjg+U8T8iVayuhCeJ0kDmzg3c6pk3l4Xoul6Zh9L6CAbQcxroDHmntQY+whg3fm0NRZdUlhfKOaM5aYwUvfEij8CrPyJsqSABgP4UyNvnGmhdzRwKto1ZmwCIBsE3q7CBHsQbiQFrfI+iCIDnBAFLVBstY7yyxtUX+OD8Z4NflAWUxCZ7fwLtbShxdf4OSAd9NwjDwHcxYXvcGEU4Eizhggc4C0UGowEYPW+w8k6WIkcqDYMiv7G3kQ9RRAD7K0O+naDRAMtG730TAvR0CYaGIgNIc+kczEDxvsI+eYisIE3wRAHgbMHGUyceQhRfNqFvVURKF2mid712gfvWBQSuEgB+MgiJ-dr5CMwSIkeNiX52JJKk0hc9lH-3Itk7CKiWYIHBPknxhSoFsICVNfxwSxYgC7r3S+aDBEYKylg3GTTEkgB4PANps8f4UKyfPPpdCQCnDAcMuuozxolMCWMqZCBOp8MibUpZO0GnWMOrYpJahtlyIyS4-ZyiPEIDIN47e5zWGXN0RMspISQAABlwl9yvugoeKysJxIkh8jZeFvnpIOV0y2BzAWThBbXSB4KorjJIpwmFwB8BVMRQsixMTRFD0xfINSZUc5pLIXi1x3TCW5IgAALxJcwvxxTIVUsmeUxivDTE1ORZY1FmF0UpzZaeEA+kQBoGeOYfAHRlhVF1hYeBYQ5ByDtMarMDQqg-EYNxe1jqMDWpdUkKQyA6ytxgLrYx-weAMDCcANu6wpCVOAIwdYBxZmQD4GoHgRJGC6tdYgI1NgqiiAdZmx1bcqiUXwEK-NhaRXJpLaWmw7rTzhErTASWMBZA91tiAEKaA2bAEgq2stIBU0moxI6rN3EhW5qLUWzto7R0VtGAeYAwga20nddxKAVIbCQkOFUR0iBYV-xdPgW25x13WsIiKYdBaC1juTcgcO2R1jwDJOAFSDhgCwqkKxdYeFW1BjkLIfAahExeJnfSFCVrS0wgkFW0kKANAqCQhSViKgeRmAUNxdRna3hVveCgSiZkoQCDYDsZDIYsConHZIS9tJbgCEgHaCkJAOTADQPu2lkAHhMldQwUDHqYAQag2gGDvpgR3gwM60dcHJDr0wxtHDuBIAjBXFgRgDGXU+GrafcjlHqMYmAHwb6EAfAsAU9atY7HZhceg7B843UhgYCA6W0AaGxNYZw6dEAdo5BITAJBRgIpWLcRKvxqADBkDSAkCQIScEPCEVAhvX65gSqIn9RoUyfEMBsBIBiFCuhYynykHSZQmWz2dvRFumw4c8v5dLY5UuSQ6AAF4gA`, `2,Running out of time,kklkkj,73430,ILDmJAhZIawhjqQHIGUAmB1ArAVwENcA7ASQHEBOARgwGFIA3ALQEtIAGI6gGxGYBOBAEwAPIcID2IAIrByIgC4BnJQEcQAKQBeAYygAJRQE1oCcKRABVGCDogAsrIgARcMCuQARhwDSi4isAW0pNAAUAekQIaDRRABYAK0UcK0VSDkgVAGpgVgAxOi9sxgAOAE8cA1EMZgAlHAB3CHzgLEo6AR4DZgcBbQjm6OAZcgAZbIBmfOpE1nJmYGZKAwA1ZRd2qy8InlZFDEVdTUVVmJl8xhk1eMmHAFFG+IjS4eB7yAFdRqDQTWpNFYLgAHRr5ABmdQApnQOAA2F7ggDy2lAeES8jk1m8fkUoAIkzUrEib2gXmIGGUxlWpDUXiGb0isAAFtlqHV7mM6u5gK12p1Et8ACouRKDN6jRTaOgEYCBHhCtrEYCrSj5eJjIVi0SlADsSLocKciygFyuahwdWEQt8pRebw+rAiihqxnizKCjXIkOoXmA1EYq3uERwxgEAA0vOGiqssR4cf5AiFwlFhrEEslUulSlllLkCkVsmEKlUavUmi02h0BMwAYw0ELxcNGvdlFDSLqoasxmgwsAvF4wqBSMyZEEIgIIg48HVSuGsFYofpTZdrpbrbb7cMHJAnS6MG6PV6fX6A6tyCGw5Ho15YxBPD5fHgUNpIA4kSThi5gASHJpJHQGBoKsO4ELokDhhw4agIoSKMBEBjaMoGqSI0cCVvyAjGOQihwpIYoMogXo4JMXjkPkaC+EErxvMAYwhqQ4KKFYdSwsY5yrjcdyPM8NHRDuXw-H8AJAvkoIQtCsK8ciqLopi94JngVgYLA5SMJ+0TfsYjC6ro85IqQzCwJAxAcNgjQoF47JhNkWC+NQwjUD81A2CAfLVrWmj1o2hEIC2bYdl2PYoP2g7DqO45itOs7zouy7AHQoyTL5tGpWmMikPA0TQKA4I8mlBWFQpERxggMiQKVRVValrSgMowwfDg1VQD+5DNQgiV0PlRU7mgKUdTIXXtR8fWpZ13UtVY9XtXYg0TcA35TTNs2Je1O5ZbRnWVYVHwbW8W1pksy0rdtC1HcdB3ZcA4b3NukC6KdECXUg123dEHwPWNg2nd+N0Nfdj0nV+r13Z9m0XOGx1pYl9y5FD4PkGc8P7aMYzI6SMj3HxCDQK07VevE-VFZ4eDSNE5U-ddGj8e8UOaMADiA-DpBbuj0StEip23a51Xfl48TDPROCMcxrEcOxs3kHC83IxVUsTbjDqQFCZNESMUM2E1wwU8NTDzfBLJshyXI8hzXMeBK5Bw2zOMyC4e0xLybw7owMvI5rEoVYd4YC-xnynXILiQFYiQwbowg82bDUW82+TWzjP4cNHwCNDSGrhigfCmvbh14+9-ux-HjuQGE5BBKIiSJDIYQMh72te5pif-Xl2vAEKojAlS8QcC4fFR+9Mfkzh3u+4gThYwQZFIiFqYwHbDstXnY8F9EYJFyA34l2XFdVzX97AFr5MNy9Pv-QIp3NEHIdhxHlac9HPNEXHwMEEnNMp2nYwZ1nc9Y7nzuQESBLIi5BdATToCGHguhjBoDwBge4zJa4l09pTLwso-ZLwQPBZg4ZyD3AEMQOopB4qtCFP1bmlthATW-HUH6ERhCrFEMyXwOAOBoAMOcP+V1MEQA+EA5soD5qQOgbA+BiCQBIkQPA5gWBjCgDqEEHg8RwTZAiGo9RaiaIGAiPBDR6iVF6PUdjZwzgDB1ERkEUg9xmDAihNo3RhioARF1IYtRkwdGuNnrwiAlhOB1B4GwSAChwzMmcZ4oYBjXGUDCa43yZgzrAGkbI+RijlGqNcVojxrjImGOMerWwwAzEWKsTYuxWTHEwBiYY9xDi9ED2sDADg-jAnBNCS42JIAcl6Oie0wxcSIBtUSdY5JCilFdI0Zk2pGjxlGPJlAZoRTViWOsbY+xninG9L0TU9ZiA3pgEac09grSql6IiekwxPTwkvS0CAJJcjRlpM8ZMzxMzNFzISuARZyzSlrNcRszx2y-m7IgPVPxASjkEBCScjRZzPGXI6QnRwtzhn3NSa8rcvzDHoryViFwcgvklNWeUuplTNkaMBRUhAeyBYuFWKsPAXggj5EUDImQoArDCGZMyXQiNoXqNhVEvlajmjMgcBwdwcg+z+lWIynAzIvBYFWLAUg+QUCSGMOGSAPBsUgExXonV5A6iwBNLdN6kBmB6o0f81xFK6n3EoKUAQtMYC3VpfSxlzLWXss5dy3lZL+WdPOd0oV4pmCGqynINAIBqAyqCHKhVSqVVqo1VqnVhTiXTKDRM4AaBNDlEhrw5oKBVi4DwMYLAvBmAMCFAQcijQcEZvUda6pja1HvFYLoHgPIvZuoZUyllWA2Ucq5Ty1YIaBUXPHZAUgxBNDAJVNG2N8bFXKtVeqzV2qs2zPTVM-RW63m5vKFgBA+RwDFtLeWyt1ba35HreGVtqZIAhttVa+4UIxi-BiPoXtHqB1Dp9aO8dga4VToMKwHAqtgASxjbK+VK6k3rtTfujFD6dV1HiIQBA5A5DnvwJegJ1660Nt3W20lAKH3vHfZ+qA0gf39q9cO31Y7-XCuA4KljgxIBgYgwgP00rYMJtXcmjdabLV7qecAdDmGIAcOALhstFaCOQBrUR+9JHH3Poo2+j93ak50c9YO71I6-VXOAOi+FfSuPgcg1CRdAn4NrpTZuiTO6XnIdeJoIUwIsS3QMEWkteHFNVuUzeu9FGyM2oo3Qe42go22HsAtOlfaDP-uM8x0z5mgM8CRD-OQzI7Nxrg4mxzIn3O6tQ2V0gQoUCWFpqQM9AWFNXpC6p8LT6OMvqbZoUQlA4t2CcPpv9RmmNAbM8hizpy6DECFFYIYcgsowcK4JhDTnRMVYk1CWA9xJgIE0Dhxr+HgsqdvcRnZ7XyPqeAL4DASJFRPXYoNhjAGTMIsyxxxoLht1yGVPxpbDnhNIZc2JtRBquraBALdXwIB5OHcIydtTZ3NOXcgKASQDhmjQDoPAR7hnGOAfe2xyd73PtvPVtTRby7isA+cxk8r6mdVWtpr4fzF6gtw7C5diLLbLuRFY5jy+SXf1PbS6Nt74SSdbjkIoArlOhOIZp7kunbmJOM9umMBrrPmvHY54jjrFHefikx68HHqWRsE7GyB4nX2U4y6K3L1bZXXPZLK6rhm+3NdKe16doF53Is84DdAFwlgTfDfxxl8b46Jc0TkOD37suVulaB+t2nruQpyYO2zlr8O2tI-Wd13rCAXA2BD3jl7fTCfBve3QXQ4IrD5WELb5bJXAe06d1isrxADDUFq9DlngWtehe9xU333O889b6w066ThgAhAxDbBAYRKAOG0Mv1fK-gDwVohEDgK-d+r6JvPw-8M3qY2gKfkAo8Cm1eaG9GwKPCkgHAKtKHwB6rfjk25WPmhWDMAP1DT7bsn2wIQQzAIBYBBAi+a+UBR+MBNsZgHwIwCB+KIAHmzQkiCWpAcgtmkANEWA004Y0+R+EQl+0QEQcIoBFBYBYoQoUBu+x0Lg2QcI8Qi4eA+QBgAg+WsByMcgZ+SBt0Q0PBt0pAzQ0gq09WwAemNgKA4AO2vIset6sBNkqUm+bw2+e+e+f+XBWhaUJ+fBZgN+4AioXs+Qcgx6908g-AMA0g5AzQ+gnAIABBIAWAb8RBJBiAZBlBlB1BtBy+2hfh7UPBiBvBCSQQCU8Avg4ATqdAzQYwcgeACUrw0+ogC0lg6OFhtE34g6R+FUSBCAqwQoPK+QpExkYMICPC6MngiBJ6VgkwkAzIGAwgTUJoNMh88+rQ5+MQqwKAjQGqGAeAFwaMjc98h+ORZ+eRBR5EpEbsKc5AUI0xy0lRmM1RtR9RwguoIMfszI8xM07RCBnR3RvR8RwArw0WKA3KDAk8jRPA30BUeMzILgGqYAWAIQeAzANgC8VKc8wAmBwgt6KqwIjAjKZw9Mm0DSpx5xkAlxOA1xq0tEzQdxDxkMoAzxlArx7xqUPBcgPxfxYkgJQQwJNUYJ9wZxugFxXgVxNxpI4ACJjxyJLxbxwAHxEAdhWJMgvxjQ-xeJBJtEtWNg4JpJkJ5J0JlJwwq0NJSJKJaJjJqU0gXs2JHJuJQJwAIJbwgxfJxJEJUJMJgM7+4pTx9J6JtESccpbJOJAJSpKprcg8AAvNaUAA`, `2,Team Grapple Warzone #2,OldGrappler,18005,ILCqJAhYGEHMKKdSATUAtA6gMQC4CSAoqgJ4CaAGpAO4BGA4qHAGoBMOpApgLYCcAVwwBlYACsAsggAyAFTYAPANYAlAMwApABYBjABKQAzhkoEQARWBzFqzboPHTIAHYA5GlAYtLGkAAZgWmAGCxAPX2AzeGAcEENQiRAECFcQWJ0QpGAiMCy8-ILCiEhzHDY86Fii6pq80DRkpHMS2tba2MpyPJzwNr6CkoJyAHss6BV+ybqGvObLKYXgX3NGxbzl1bWkdMykHq3JkrKKmIPJ+tRNixazto6urP3b1qPysdPn2oAReZAARhYdB4AFYtHQsCwlAQcK5hlRIAAbABmAGoAPQYzEYgAcID0aIAblisajiZjccA4OYcr9LK4WFhgQJyFg-giMDBILIAIYMHA0EyEskYqBogDswrRaiFwpAxGgOTlwC+LBYAiB+GwK1AbC0ui84slHmApOFfENwo8nOAzQgX3+gJBYIhUJhcOoyPRwop+KJwtNZIpVJpUBA9MZzNZ7M5PL5AsoMrJoolwulfqTkSICog4BVao1eC1cB1eoyLAtZONAeJ5pTldg0FtIEyAKBoPBkOhsPhnslPsTxOrWNxwgwAGloMUPOGmSy2Ryubz+YL08Tk5K05LsjxhFTEAg8+qeJqsNrdfry3XiVWvWTa0bIBolMNFSAIq2nR3Xd2PUPyXiBxJW9iRHcdJxAaIZ0jecYyXeNAMxddUwQkUiB3PcIHiQ8CyLEsLwra8QD-DF70tR9n1fYBEmAD92xdLt3URYi0X7VcgL7YBRwnRAfkCHQPAYWQsARJQMAYBQEU+CAAAUUUKWSeAwRTlIwYY0T8AAvCQtJ0iRjSkgyDkValGyzEBKMgfjgDHUBxK0VAGAwAkdB4Pw4FcLMaGopAaAYCI2i+NErjtNEAAcVOU7lpL4bTYt0wyErWSczJMm1AnMkBKESGAESMKgVB4OhNEIL5fB0e1HkgABLX5WjRAAWQo0QANiUtrlLENFZDiuLEr6qZLFM0zQhgNINJAULzEYHA-CUvhSDoUQFBoPRgH04pgHIJR+lk+SUQitq1M0nqtPW-rzqKYyUrM7Iwj4jwxxYBg+BoYg8FCxgJJ0eICl8vhgsKQKAeVMKDp4KKYt0+KLphwpkqGtLJ3mLLYFywx8sK4qCC+aTgHKvIJGq2ragaprWrBzruqh7TYdp-JBpta7QiqHBxuABRZBZDAEWIbRGBoOACA01bRu6SAkUmUmCha9r2spk6abppWIAZ1LqVCTJWZADmuZ5og+YYAWhekWB8kJiX+il-IZYprqFbZ5WldVpm0tWmI2eBVxuSwFQlEYZhzB4BQCXINg8ARHRgZtG4AqCgpAvC2Xwei+3vMd2H4cZxt0spTLEiINGMaKjQSqIKkg5DsOI8MWg05VhhpCjvIgfj0Gk4h1P07pzO1Zz7bgBRgu8soAri5Kghy+D0Pw50JRa9mBum6yFv8gTsGO+prSu9pnuUpz0YB-zwuR8xkvsakQOp6r7756yXyGCXpAV+btuIo3hXt4z8yEYZ4AfsH4+o8sY-EnpXGec8vJ5Hvo-HicdV6v3au-amn8Ya72zpODwRhqrBV8noGBbR6hpUQDgUAahID2TYMCAejUsiEyqvg1oVQbpQBYO4KgqABC+Qnu8LANDnglGYRAFgsgMg4DUHQOeSIzoWBwAIAyvR1YQBIWQihYo8Ym1oZAbkBlYiKOKKwmg7CBDmAYHJZewAsAMNqC0bOQiRF8nEZsAAvEAA`, `2,Sunburst,God_Of_Bonk,80021,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-AAXmLEUIgQ9C-OjFgSAsI6AiAPaCXkbQT2BFcIOgIl79BQBvXe2oD6SUfsKGuyov7-2AdgogJ4u7INbkw7B7KCwENIcEA8vKIBx2AnHB+M4sILJsDoC2VC0BD0zkgMunwGrGHvqjPmXs1QJB1ARJgascFeSgboxGXcRxB4FHwzyJSOQGMQBDcsssn9DOJAALx2aAA`, `2,Grapple Gears 3,The 9th Doctor,81063,ILDWJAhZPD4cAisACgJQMwCkAWBjACUgGcAtAZUkLIHUAxAT30eAC8QBWAVQEMBxbgHMA8gA10AewCSAUXQA3AJqZF+ITC59BoiTPnLVC9cADC+TBAAqjAHbJ40sxoAyIDZADuweiACymvCSZij8ILLukNDA2MAAagAciMkpqSCxcdxp2dmxSko5hcm+uAAuybKQAPQoRXU5ACKoValVAGwUhADscbJIpWH1iA1+kACmKZ4NtQgNwAByKQEADJPTyXNiGogRq8me9AAsydCLySspSEcbCymVE8lI64ind8B7iE8z8NBb5++Xa7DW4VAH7IEIV6pUxXaJDQow-hw+HZRGDFGoq5wDFpJotFLtTo9PoDHEgEbjNbfCBzM6IC77Z6zYB-HZgxAHY4vEH09kIK5c5l0hD3S5Mn48kV8+BfE4s7YIBmfCHwWlvD4ITly4WIGH0ZFk4bNVodbq9frojEUh4c8U0yXwJWau3k+WgjXwLXcnUQJ0ylX2n3hSmPF2aIPAXZi6lQN28j0QAU3CNR8GCiURkB67GGo0AagA0oduGMAK70QgAJwVueGoxtzpjwDV-wTICmTc2NYgqY5AdjEb9if7zYdPZDnzDULZbeQU7jiulw-TgfVkxH042qELxbLFerhLNJMtKOtVOTSyX7bDXfd65XA8vs6TwJTE-585TV7nTd+3f834vkKa5ptqaQwrIpa1skEEGtBzbGgSprEhahpnoynZjgBs4djcrJSjhG5YcAQ4gEBqrEaKoa-pRgHzvhjqASOLYzveYHQrC8EIHqcHQTCN7AOgTZFPxwm5jCpjeMCQk4pASCyDmEDQCevrAJwayKVmVR5kS5qkhA4AkFxCDgM+shZDihmXOZZLcJAESPDCcpWE4QwKFUoC4HmACM6CyC46AKr4+BJDskAAGbGUUeImrpx5ofW56vk+SXMgxPbfl6kLEaRyDMZR74yp+IGTjR6XYYCD6jl+hFVZuuqcVFCE7iW5ZVv+8HobamGDplAnlZGmVEb1z75W+DZFTRNXRnKA25eRq53qB3q4tuRatfuQiHih+k4l1jYXq2qUUQNvaasNKWPGNdyFYmxVLaVs0dfN10PeddXEVm8lQU1sFNSE9CRb9VxxP9TQtXu7X-c2iUYYd8bHfap1DR9I2VfDIq3WR92sdRT1HVdVUsQRbErak4PrZDB7IXpKlDPtnoCWjcPAsjtXsQjhMY-AVGPWTuN89lc1MUTtHs-zMHff9f1NRTu5tdW0MMxAuHJQT3V4R1Z2ehd6v8q9YUTXdU0lR+ZXPSL3MZeL2WZs1lMK1tNPxWSyvXj1l0a6zWsoxzi6jaL40zRLPN0ebev+oHps66j4FS8DlTS1cQNRXqoPA4DSf0OnUVyfQoXZSF0NpOAACOkz8AAnDcvBiSAZeXFXNd12AwDl-shB09AtAtw3jyd3KPfZOAmntk3wK18PrePOPzKTyX08cgP3JDwvo-IMv2Wr6k4D4BX1cT73wB7zPB9z0fJ9L13wDbyku+XJvEq38koCQHETaeLIebOVV8Cv+-jwv4-2Hm-Js8lv7AisL-Mi3xvJxAAEYAFtOC4HgbQOIoBpD0HmJIJQYhIAABtwp5iqKQshpDQqECqO5chZDiG0LIUkAAHkoJACh+QLDiLQTgpYlC0G8gQsgphIBWAEPQTwZAxDUIYaQqAVQugyKqJgaRMjIzeXmFYFA0QnANDiHEUsSD6ClDoEgIQ3AABMuACD8DiPIxRUl6EyMrnYmR3hK6oCsHsFAcxgBwKQSgtBGCsE4LwYQxxDDKEqIYeE2hSRsAUG4AQ8IgR5hcJ4XwgRQiRFiIkVImhDC5EKJkco-JtC1EaK0SALIuj9GGOMT3MxljrG2KKQwhxJCnEuLacAdxnj4CDD8cg1B6DMHYNwfgohHSIkgCoaU8hMTyFJA8csA+EQvCcO4bw-hgjhGiP4OIyRUSykwC6bQkpijmwrNQJU4AGgakGMQUYkxjSrH4Bsac8h7TFHONabQtxyyyIxBAIMgJIzgnjLCVM2JMyjnzKhYskiAAraQrBBqmA0KkzZGSdnZP2bk2FZDCmKPOaohoVzvhGXuXU55FjXnvN+Z8kACyyE-PscARgfhkWAoCL4hBQzAmjJCRM5lFCYVzLofCxhwArDcHUck9YmL0nbKyXsg5eSLknIZWQklBSGgor8B4EAxwqWPPqaY2lzSPlkK+Z0rVpDvAcq5Q4VAwK+WgqCWM0JkzFGRPFaQkVVQkicpRckhyiqtmZN2Tkw5fr8TVDtUoglsjZDqM0UpCIJqnkNItW8lpbLgABtZa49lwbAUUFdf44ZHqhWQp9WKxRAalmeLPpGbw4bsUqujeq1RmriVJpaGS9xMw5LNj0Q8rN5qmm5qtfaplkrSFFu6b0rx8QK38rBZ64V87A31pkY2tAzbkn0AxWkiNOLVX4tjUS4p-bylpugJAPemazUvMtQmm1DDF1-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-O-Nfj-P2H4EAtsmgHklAvAsgoP3MXUmoIqF3PhDmAP0uLZGQqgFQvQqQGIDlBwqKEfJMEmHwpAEIv2W-O7AAF4gA`, `2,Grapple Gears 2,The 9th Doctor,70521,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC9yARc4d0gJQHsAWgGVgAVmqFQoXoRQArSSgCeIStz5DREqTLmK5q4KwxRKAZhiJwAaRD9gAYRBoQAVStOQ8SOGQQ8SBwQYIwAZ0Q1SABGABZI4Dw0eEj2YAB1AEUEnMjITLQAGQToagBTBMpIMRy8HBTcxuA3SAB6bMjMwmKmyIBZSAAHXsamYDoIkamEYIBDDsQqwVq0RwWINLo6BMLWlnl2ADVIAEtSADcAJgh8wgaEaCyEgbx7gMJCBMdW6NIMOmEAFdqJQABZ4CAtYYJLr+BBpDBjfqQUHgSLnADUsFBGOivEohV4aOAc3WECWOQKa1S422qT2B2OZyuNy6byg43UkSqrwSeA+OVaADZhGgAOyHSiZAAun0hQ0p9RKwERzxRxIQAAUUIIGIRKAAnAB2vHIphAYxsGogA2W00ilutUTt9oQYy2rum7rpnt6wVB0sqbTJvs9a0cDldtqaayVNImz3EMcycaQ40miD6Sca7E1rVDjTwlFmuRwYUg5xDiXY8RpGAA8omMSs5Yg0occgNlBDInVAQk0tQ7MjQFWkhgnZsMwgBuYuL3CCWadRO3BanIBxkq1VK3zUw8VSc1aiYZhJ8BBJHFpA53zusrqB5kSfOmgAHLnhhO4BVZTzxB1EuaYNmqSKvnCGzAJq347mONbKgARgADGqjYwhuNJPMiu69vukQsK0PYFr6LDAF+iYoXy7BVmkb6dsAlG4bWaZ0WqFQwtRm6sdykDsb2nF5GRMEMZSAksTk6iMYgKbMfCwDcdefEAWJB4KTOvGiVWEAEURiCaliOJ4gSRLEcApHkf0IlUTR8n0VJCB1LJNy2WxmlcRJGnWcqFmLFZnQqc5ankn50k4E5IC0R5SkOQFHJBSAAzRRAmSxQgsCQAwummYg6WZFp2U6dlvlPjkCHAMhapcguNl0FVCBVOyID8hBHIVcidUIF0KDKm4PrqThoWtgkhUJPp2K4vihLfva5nflm9kBKlkUUbUYXKvFwCJW5NIbVUSVNal0A+fVIWdYdLncqdyVrTtUW1OdG1bRx+XALlL3Eelo5FQk6Uvt9aWQC6-3aYRwNTLNK1ebdkNMetq77cAKU2btnn8VWR3CQtIBI3DlRXdjN1thdin3ejxPqQjOO5CNkRjYZk0mcREOWVj1bI3Zq3hVYj2o9JS3k+SvMxWTx3BazVPiXj4uE3JKMI3gD3w9tOTpZlYMQG96sgDTWs5Mzmb42z7kwwBMuBUrz3Gzx8vnaLaiGxLqkSQ7ZsRQLUQ22TPOU6lINZRAdMTcZ03TPrM6Gwr7Mmw5rvcxb-lR9bpPeZjytO1Lipc8tSdQ5LyI+y9qv+996UnMXRW-SHpk67r+FCdHi2JwbrOObj+dp5BcvJ4Jds-g7isZzCsfZyTufp+3lvU6Do0GUHU3V-XLPd0Tj0R7H0Dex3btd2Pzm95JW9x4PnTD+7P5C43beZhf2O+94GXl9lmtazXtcIGHNoR-zq8t+vZ9PQnK2o80Yp2PnzL2ztpZZzPntZe49r4F0aK-EAgcjLzyZovZucDO4cz3FzDe8dwFAPqjfI2PdU6Tzzr5KBxDBaeyvhTQ+GsH662furZBb8zKYPDi3b+uDYaCU3pQ2Wd1d4cn3v3CBYDOqnx3iAwRhCzovQ4aghmVcRgfwSl-JuPDOYMJtKQx2OCgz0PIdI5KA9Lo0OhjneRVDGHCMiEXVh+R3oFjYWDFoA1OqEF7o0AYYFfRjHIHNQGxE+itAABy+jqI1R4+U+h4EcNA9IQFw79j3H9SCLUEqQA9L2RGm5DglROh1AIOAOyCRyZtPJfVkrJM3OkIawUMm4SwE6aA1TbRXk6oUmkDAsyWTKU1HApEaRdMBj0xAYxghqiBp6YJ6i9yNRnFEnI7BWiDHIAAM2lG4XgjgkJ0DqK4GkmoElJJSWkz+rTTZZLdhM-JAE+lE2KXjYZiQKnKkeXU7GDTMLNPtrcmO7SqmrkvDCF5ckBmJg+XUMZRMJkQpyDMmJeEHTABCUGeZUY1mehTHErcuREn-KJqkxMwLyn3O4J4ZETyHJQsgm8y6cKvlgrVPS+pKTAV90pSM0FaYkVTOxoyt2MKhmrQRXJIVuRUXYuImMHmgSFlnyKmMHoyJlWumCMIbc4xaiUGcDSesVZdhiB2Xsg5RyIDhkfqZNY51dUFltcqJ1oZ8hSmVFqqIeVXTfAxKKCUUpZQQF4OsHA5htkYlaDG2NMbonADQK0c4ca41RtTbG6JmoAAqSFuq9MgNQcwyaM0xqgK0MUpbWjFpTaW7gebzkIHnAwXgFaq09nTaWlAbbS0QhQDmqSaRgDREOAhLAYhQQIXSIcWA5AcBvn4IwSApBO0ZoTUm2tGbV2puicQOgmRzgHh-HQFglBAR9AYCWutMAe0ZprVW+t-b1geEgIQPoxBCjyDfLe1NHbo1dp-XGvtA6EByl4PIPowhYjKG3XG9dV6t3-rXVBXN+aoAQkoCe8g57L2btTeWytpb711vYA29Yfg33KE-UwQDsa-1Vu7YRjNwHc1uhAOBvoJxYgsFg5mlwCHU28fjShvNCBHDgHYLIFASEhN4o3VW2T0Ts1uGiApRwEJJNyBk0hnd-G8Npp03B4AynVNyXkocdIYhAR0HSL8QQjhIDZtmIQfAuoBNxoI1W4jGbH2NuQChI4hxARjpwNKQQWRQBuEuKCUERBDi0ZjfRgDTHf2oBA4UtCI6x0TqnTOudC6l0rsM3xxN7nY2KeMMINwpB7bsA01J7TVb4P6fK8V4TJmFJcjQJkS4KBLi6hCdm+T162gpbjd5-DjhqtMGyJ09QkAkJvnONQLAhw-w4Bo2NujIBZOMfbcAUgTAqsitEMAQ47AELmEEH8I0ZWy03q2zGibHnSNPqsJALMgXgu4DCxFqLMW4sJenrtoHEJlB9HkPObIT4svjsndO2d87F0MGXRV0rLWY0VYh+QIw6gcDZDfBZqzNm7MOacy5vAbmMf5ge15u7+ZODg78DAbYX2Qu-cyJF6LsXCDxce8DtrrQ9u9rS6xwpDAQDEHJ-US7E46C9f68wUHO3BfC+Ywdo7T5sh0lhzlhH+Xkeo8F81hTxvjMqdYuoQgBOifWds6QezjnnOudww+2nRH6e+YWJABwbOfvhc5-9nnfP9vABB-zljlFshlWHaOuHuXEcFZR0VprenTep4Hfm9QpzCeWbt6Tp3FOqdu9G3T6nXv3sBcOEF9nAeucA958rsPqvlfg8hyK9iuv4d5aR4VtHw3EOp+x7jxNEJc-E-t476XlPXcjaB892N3Acd9GZ0av3oW69B8BxHlXDHlf9rFyAUEIAu8J4N33s36P0+luicP+2WLx-54d2T53M-Pfu7vZ7xnK+rCOE+9X77DfP7bnbfUPcPfbNvKHV6E-OPPXHvJPI3VPK-UtCrPdA9N0G3PPEnZ-QvF3d-UvD3cvV7PzJwVnAA2vYAhvEPEXZvPfHfSAkVI0GA7LbvRPQ3FPG-NPFAs3O-PuYcR-bAqfV-YvOffnBfMtb-VfeAdfDnevYPJvcAkXA-KPYAAAR2YPj31172T373pyx0hxHxsDH1t0EJfyL1nx8w-1TXEIZ2X1Xw03IP90oPkJ31oOSwgOxxFUDFjxYLP20MQM4OQMH04MzwQEKHAAEMnzMLwPLysPGy-zsN-2iRkM3xAMb1cMUPVwYMKR7FPy0IQI4OQyCMEx4IMPtj6EwInwL2nxEMsIIM-yILIw2C4BSOcNAJoMyNS2UPfhAEGEoEu14DYEoCWxWzW10Opwq01xqz7lYj6GzQc1gEu052cxQDCAQjkEjUvwHxKNTymPtjfGyEKHmLgCWNABWLCF1G-QyJbx30O2O0KWuGAGlD6HIEIF4GWwc0GGyxu3wPn090oFU2zVm24FMB4HeIwAWNOPOPWJQE2KQO2IM12Kq2mPUDQkJzkDwFePeOoAc34AQkuDIAwBsM80IIfSm0O2BPYGkMOHBMhPMGWLz11E2zAJuPbUgDfGUxUKFEl2ECxI+J93xOIDWPMGoAUNZJFzuK12ADFBAGlF5LeP5LxIJL+GJLiNjWJPJJmysDqycGiBCUEC01eNIG+zGK2L0LNw63tkbUiOqOEIsPwzVKe3+MBMpPiFaMDzSOoPVzcIzTV1-XZM5JFRpzyPgPYPGOv2Q1CL7g6BtJwJqPtI80dOrWdI5OBMoHUHdLkPaO9M6KA1Fyj0gCNRDLYIv3hPNNT0tOjOMKwKiNwLf1iPqOsK-yaOgE9UzK33SJZLoP226MKWHFGRAEOAYBsyFIwDtQVhWRzFaBDl2HLm1D6BYAXKXMXM4VXNdGQDKWyEGWSi8EKV8BJBAFMCNTGA3OyAlxJANBPz6EYCC3l1BD+BOA+3C0ECQiSEJSgzBgrBp0EgxEICNDtXtH9UECwGAtAoFTXMQG+FBDQANFBF4CFFiDcDKCLBFSPTpAhCzA+wPLOxZxABhXYEoGxLQBXyYEfIuyuz+CrhTDQ2mA2RDg2UGBAqYuAtmHnMXPYqXIgq4qaA3JyEbHYCzHEyghAAiEoHAACw8A-GAEsHYHABNWAG5PYAiE1CgDHKcEyFgHNHVlaC5ggGFDArAvkFaGzWXOXO4vMspCsEyCqERi5GyDQhwEvKCDQHCxwD-DePoF62UEYF4C+MuFiFABMuqHXGEG-FaEuCYAGDQBYEIDoHCKaAQmnk6E1FBEGATSKjzGYuYuFS4s1FiHgsQrKEBBwDQHLHtjxgW0TXAG2V3IyFErcFoEYH1N53kEuyYFBEkAuAQkfMSUICFHPBXE-JTRyGgF-P-O+iAqyuAqWV1igpgrgoQqQpQtFRFXIGyCPD-02lm1mAhHrGzRc2iDHQXQG0iywFICNFmDQF4GADKG3EgHiuBkIDxW5BrFmBqu+g2TECmqwGuW4vYAxEoCKpKtgt4BlOBN8n3PgCm2MHACYKEpsG2ohF4F4EuEOFi0fNgHCyW2wBwCQlmHSBQEBDnTGFurVFgByu1BOGzWAF4EiWICwFJRyCevSsWFeveqKjNW+t+q4sKABqBvmtBr3JGpAHUMcAiB6G8McpgBKtcvct4E8pUB8r8oCrcHSkBByqSDcU9ESvLkyBSrSv+kyoMpApyogryoKqQuKtKt4rxgaUKAhA02bUGVU0GBfOaHXG5qaDotyAYq5rYtMpXIsqDo5HPlsugGyC4C5EbQZ3iDykLJ-CzGusxX5GhDTHmE9CSD8Q9XDoQEOGzSIAjQQnLDLnQknOJRiF0uaHDrqhwDcHMBRGoEuBlMOByqqFTtouAHKFLDDoeEODfDwEYGoEBAVnwWAHTtdEzummzqhTzoLvMAQngGbFLs9AGDiFyBaFspmDrobsuBqBbqDHbqmEHARgPOsrhEgD7oHoYCHq6A1QPHHvtEnpGrPpnvzpc3nvSlUKrDZBXorvXurq3vro6v8tA3KuDuIjaGet6A+XAemEoGEymBgdgZGBwAQZGCQeQaaCeqgaaAwcwdyCTRwcaDwfwYSHIDQcaCAA`, `2,Grapple Gears,The 9th Doctor,63418,ILDmJAhZIawhjrAIwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC8QBWAVQENDPQA8gwBKAeyrCAbnQDMUjOGRde-IWInS5khcADCGGRAAKuycACKCcsAAiIa8Awg8wSiDeRwORKEi6Q3qAALOCIlJAAWojRMdAARgAMMcnRkOaE8KnATCm5efkgnJAADsnmupYFVdXe1IbR4ShB1VDAiS1I5uQCDgjQAOqVLXiEAJwdiEUyTtHmaAyh1QCykJJDEzkMSRMF3nH+DcDbOydQXT1ZAGbH1XhULidFUTHl66cbwAvvuZuL39HeAAWABcYuEAPRvf4FNKEPB-VoAOWhiHBADYAMpoADsADVKOZgYQEJxgJlZhkUR09gcwkcqSAbOD2ORLsDOMJdAk6BBYfCssiGchgaQAByXFhLQEJRawSC45oMiBFADOvQQ5hsUKVyRpYPpDKZLLZHK5PJAFRwXx1FUo4x1MHMlHJfWAaGSKxYpOiI350XBAGosXiCUSSWlta8YnYMABHGIrSQIkCScEAFWIxRVdCCCRsoogtXqdJdVTsuPeaWdsTdyXCXpivuTwEDwfxhOJEDll210LlAFMHYVIGqXlqh3k9YcbtCmcVWezOdzeek-a7BQzWzj22HlSP1RBNb3TpYADIRS5oUUscjUXo5XGDh05NMzqneThuQ6lw9oADSyZ2HEiqIEyCSitwcSEAIyLghAlr2ja5g4CBSp8sm0AbhOySqgeIBHkqRgBrAgIBigwiUKewiLFOdJvt8RoLqay5nHCGHAFh0LCmKEpSjKXbyqhDJykYx7fN2YnvAOE64WOklDrRCBuPR7xzkxS7mo6bECjqW4hh24ajrM44MmeF5Xjed4QA+T46i+Kn-N4GLam4Mw+mgiJQvEtIIIxJoaSuODIEg2QepAACeogvIQAbJOCoxGIQWDEAAVil5hGA8wBFDkLyQFlroYCgYL7jERjgiRZEUVRNHZV+JZlP+7HATEp7guBkHQbBK5oNQBWtLlHTIfJuRFAIZRpNGwBGM2KwAJZ4dNFWkeRlHUdZwACNqKx-tqeD4M2G2cRAO17QdPybSNiD7WuMQ5MdBQ3YdIA5FtJW7Y250pPddaQB9PpfbqwDOfqACuZQ4J2oGfD5EB+YuZpw+V2F1iqkBYIt+3anYdB-gmkB0M2N1TQwYWaddhDBb52X9SAKywFFANQ9T3DjdEKwYkTJBTbi3qICseD1RqVpTRgVMQOEGK08AIwAEw1pw5MnZAsZK-hODutEdgRLFDSQGme2EIi7G4oz-OeNLyFmFrwD9AWeugETOBzTWERC8ruLNuknM2xWKQ2MjNa6G2obMzslBoxjn3Y8AuP44Tn3S3YpPx8kIzi4yNP4wzn1h5nrP4z7Prc77fMIAL7vqyn0NiyVUuNoQ8tZIr+Oqy8GtTTrJUGw3xtZKb+OgJbODW9DdslY7n0u1kbv4570VF9TfuxD5Ni4rioNxLgwIRIMoCcLLgKAkQuLgti4IX5fF8PJcAZX1foxn-fl94JAgJ0P0QvICguJb+wgJxH6LiWA5AcCIlEIwSApBb7PwvvbNA4JUywJgbAgsxA6AZ3AIiXE-R2Cgw-igUgERdD614PgCIDBEGwLgjAJ+sCZBUNgcAJY-QLD81sOvTe29d7mH3ofY+hBT7n1gTfO+sDH7COfq-d+n8lIgB-n-ABQCQFgIgQwKBKDn7wMYc-TR98CwfxwICPolhsG4Pwf0QhxDSGEHIZQpBz8oB0Ofgwhx99gC2PfusHka8N5bxwDvPeB8j4n2cffUR1CJHULwDYHAoB3aawUVgf+gDgGgPAZA6BYitEgAQW4q+eir4Fk4LiHAwh3B6BAGYvBBCiEkLTGQvAFCdHuNoZI++rjqEgFgMCSw9V4C+K4QEnhfCQmCLCVfCJ4iJkv1ifExAeNUC-2SUotJqjMmFMvto-Jl9NlwNjv0IxFTdAuGqRYqx9TGnNJ2RfJx7Sr6dKYZAREuhl7OA4X47hQT+GhPuS-EAez4ozOvsAUgTAMTelMfI5ZKTlHpLURo7J+jcktIKUiop2VSnlNcLYLBOCamWLqTYuxqLL53OoY8xxLC2EIALIM-xgTeHBIEUI6JAL0WXyiSIyAwgSlfksJUJJsK1kZPUVk6h2zqGAuKViipBIOL4vOUShptimn2K6W0ilpLbk4DKZwSw0BIDWHpV8plPzxl-JBcAQFXKpFzPqpYNM0LFGpJUaKxFEqUU3PBNK4A6DgpuG8Aq8xtTrEqpJd68l9DtVwWpZUQ1pITXDO+WM1lIj2WROBeCaRH9+W2xAMUBIcRDCgCgriLA1B-DEF9W6GNvrDHGJxfgYAf5qBjDuCQIhAA7XhSwu0xqjS4gdni6AGpgOAGwWgMAkOBNwfowhYBQX4NgXEKVqB5I1ZALNlL3EjrHXAPQU6SHhTndQUQla-U1o3cgjl+yG0VMIHikNhKw1XPVUwzV0bI1xr6CqD5QzGWjJZVmqZz9bXhLfrm-CjhnUrNdfCjZt7wSSpvZ6kpZSKloFMYq0NlzVXXM3dugdureX7uaEmwDzLflsutUh8DkyeV8ug5cWDwq3UIvFagr1UqkMyowzihwZzcPErVQOz9Q7I0kf1TAPQbgKMjKoxamjNqQOQdkWw6ewIi0luwKQLt3AsOgD7WJrdlrwQ7qvh4oxo6ZO6CWP+hlCnzVpqkRm6ZZmYlxPdpkIVqz2OIc9bW719bDmNrcEwbDz6LkiYIx+0zWrJN6rHboHxnDHMpuAx5tzYHVO8vxNBrtrG-MIbFVeutvHMX8bcIsoTL68MRsI2ZizZKpPJYGWl01QHqPpto5mjzjH8tsPjEsl1cL1mlYq0Fnjnr704r-KcnDdWYvvsceJjpA6f3wRcPJjL3XXO9fc9EtTebQQjbg2N91nGclTdQ1x9D2K3CnifQS6L4bRORrWw84jSXbN0o68ms1qaQPZfvvRl+A280PF8-B8bHquM3d0RV+7FSliRZe8qt9JmiOJdIzJmwxr-uUec8Dg7OX+syLzWwP1Kpi20AwHNEcu8IgJHILEknKnydQbYdsYgNOZB04ZyqJnLObBMHZ3R1TFPoPFVQHzgXEVT3nqrWV4LFXZtuD7oiKCowZAUPIKAXT+nDPGY+-Fr9XS9146cJQfoxBJDUFlricK5BCAoGKBEQgwghcYgirvRECQVfTa4+rzaVTFuvcx6b7HFuUDAjiGOmw7XPkA660pnrHOjtx-6NsSwaIisw8u4H27OSQ8CAW1FjH+GVutLNxJmPceE-bcJ05oHWXSeg8l1zyw9pocXY40XxHnrAGx4qTNYN6PX1V6x014d1mE9-eT0T1vymJec-U+YYKveRX98m9ewfwfQsVPMGjpVk+Gtxej0wy3yBQgMHs5ATgEQaey1GOFIcRFciphSO1SUv+liSmlhRiANyDzVdGympjYUmgcBwEyFGCWGF1AXkHqSIFIE3i7UKwiGLHLhKBtGQzrBsCCG4BYxRDagcmANagDE4H7FBg1gACdARhBsRIDDgDhOwop8oOIQACwvxykH8QA789BYAmB35ZZgQu1sBRgUAt4roJhwQhJUQ0QIgsAlCVCsAUp0x-9NDf9yCdD8gx0yhmEAgqdAQbBi0IhSBdNQYIhACGJwRno5xlDHClDuAjA4C-8-9dDPCawcUEwYAeRm0ohdBrBOw2BxxPJgB5YbAnADVkAYCYBIAMRFdK0H9i0wBOAZASg-52B0g+obZuAZDqgv8awAxCAu0bDZDEIvDv9SA0B6DhA0QggqDBZoMwDwBH02gYAXAsNgBBxIACwHBG04jgA4CEDKA7dqBwp9YUC0CMCsCJYcClRdA8CwQCCiCqQwIqjcgbBKDqC6CGCmD9C5EDgUo9BLAItgAsA9AnBFlShdBGZBhXAcAmB3dD4WcyltBkDCBUC4gu1SBgBMCSpShFjliGhVjiDoRSDNiUhTwdiaDaj9jmC6QDhaC9AXBTxLBwZdACx7M-VbAHABDUBER3dyjTgmR7DwRignDHCXC3CtDNCoSqjkBK57BcVLpgA88bA-0jAQBxgCDpoXByARhrRXQ3o0InRoB1hcQ0wiAcAZA4g0YewxwfxoQigLAhYcB0i34HcmDOA-1Dh2AHRvBxS+hcREQ8BGBqBQYYllToBRShRjTJTpTbE5T4ADSlSHRVSnQEANSMjAQHcDTdT9Q3SlQjTwgTSzSLTQZkJKjeQ2SxSwzHSZSXSoF5CLBE8PSJT1TNS-TZZUIvxmSGTqgt0QT8gCzCyChKB9kqgyzyzJwqyKzaydhCB6zcggA`, `2,Blu,Blubsquid,92387,ILD2JAhZIawhiQEVgBFkFsAeBGEANgMIBGAEgGoCWAxgMwBiuAhgOqoQBKiA5jIaUq1GLdiAB2AOQDuIBqAAs0gKIIiIWWhBkQfaMADSIAM4pg64AE1zqLcACqESOLnAAZgAYkwZUTI1vQKCEABkAegBWAEk3ABd7TiIPayhkAHEATm9oBkCAWWc+JGkGLO8wgGoAZTIAdgplZFi0hHtIOgCkZEgORGgALQVvArde4MDcki8kVUdvdIBTbOAADWnENEiY+MTkp2QyABNZPuBc4ecUxGRS8fG2jvm0kO8tfoAmb2VIAAc74NyhzoX0gVBO1zShyKCC0zDG-wQPUyy36AA4LthoQgSmUkJUavVGs1WpAAG7wlBpNzLGhXBDfUbeAAKYVgAAsKrhOMoQpxobkeGksSBfAApQLIKI8IYIkDhaJxBJJK49BgvJDQELCkB5YAAV1lCHxdQaTRaEDaVXBCGQRBlpy1hpALPZnO5vP5DlMM31TvQwEdftSauWgcNtvtQfgS280jty2Q3qC0Yl8Y1wET4xT8zTGwzScC2eKuZh+azwBjXR5rwD2sQReu1fTYcLFcCKnVDrrCAb2KbeZb3nsRHF8zIkHApyoaG1BTZuqDZ2Agu1qngsaO1v+mwVO2V+yix3To6d0jIK27-2H-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-HXMD2sxOlzhnVB5Ec6Z-zBmkV5B0zakLtmwt718wl197LB0ltUJICAwX0visy+jSQkW-POfFQwDwkBuCBskPF31SnyuVeq9l1L9WbMKoq1V9G613Nqc82izrzWfHSac-17Fg3ut1dE-p9lE3A3JVa9N+lc3VAlt66NhrHWmvo00iNqLZWttdcDUyKbZm40reAEyRbZ27UXd6HltDjWjuqGQCVtLj3DtDeQKd6Ls3tuBpQXt0rY3ZIXeq+t-bIP0Rg7e21xLn30Y8Qe2Jv7z3gCcGu79p7Q3a5A-eyj7H6M3YQ+B5tgb-3VBVB+wd8naOGbI5m4TwNM88dw-ywj5nsOlvnYp5A6nUOzi85opjmn43edcwZ8t8XXObs+ou-YfnZOxdo-sCLgXF2KC5d7bL1HQ2KAy6xxz1QFBFftdp3rtXSvQe89YFrw96ubcG9F9btHrBTfw-N+jVgluzfK6G7Y1n3Pbu85WE7h3aOeEk-x4zo3qwfce79+jK4kuedo8sGHq30PeeWHd+zz3gbLDx7z4nwN9cU-B7R-0DPvuXdDf6Lnj7+fVB2EgDQZ2-kmSAKCEhIIYQPAAC88iD+H3kdvMTx8xLed8DM0+0BD3wGgaw6Uhh4OSnwWo6BZC7cAWgdEqBIDQGUEnFBkAa2OD5JAHQyg+C40gEYZQpgZ6QBy8oIYwvvIMFmDwfKZxUD68gLbgwAELbpAKLPIPotIK3oLqsN-tSOaOnqCAcrqKLJAAQAcikCsEPBPmZGEJeJsD8JgP0IQcQcwEyBkEPhQSPtgdQTQfwD4MgtPqgIsmCv6BmARrIPAEQI4EJjAG3rQYxF3gjBUMQUQaIaAH3iPiPmPvwTIcEFPgwfoPvqgOaAEBYJAMwJoFUPYAQOopFJ3sEJ3iISIeIQPpQZQYJLIZYYaG8qcARmcLINSGcGurIWEN1CXAAGyiFGEsRhA0RmHD495WFBH-D74z4MG6CSYwApCsDeiwAEC25BDQA8CFqpJID6FBCGFeFiESH+Gj7BCBHBFWE2GAx2HmhUByDOEMC6H+jJGpGIDpFCFGHZGmGSF5EZE2SFGWHFHEylGoBshyD94igsQHDAbpj9AswcSCHMjCFZGEEmGtGD7SGdGyHyFhEwDgDqhrpEDgBSbgBEDwAOa+hEDogLjYDoBJwGrqiaCoDrRPIgC1yQC6jnDcCQCOB5HTAMDOHjDqRoDVEyRuE4qeFNGYA+F+ELHjBfLLEyGhHICME2F4SfEgCiiijE7UGbB4FhAEGzGkHkELHJSQlQnLH6BJpELmAwCmCLLqFLFBgNHTHAn9DzG5H94WGEnLGrGwn6BJxfrMqIn3hEC-FZQAlhBAmzGglMnBBEAEmsnYEwlwlmAxgzwfwxKwgdy5Ackz4wAUAyCWArCHB6jpBeL+iokT49Bwn6AUA0Q0Cmx0AkDGB9xYEoCzKlSQDVFtBrGoAMD2B0CQBsiHDvCQxKmRQqkBTumqCQBanSA6l6lIAAC8MZQAA`, `1,Bad Platform,RoctorDush,-1,ILD2JAhZIawhiQEVgFlkFsBisCS2kAzgJoAaASpgEYDMAUgC4gAOAytQEwByADHfQCiAEzLdwSSQgCqjAGyoE0MCADuwAMIhBCYSGzAAdgC8A5kkEaAZgHkp9h44QbkAcQrnE0AFqKnkl3dPBAARYF9-KUhkAAlpSWhhV0iUyNg4KTd41MR0+ElVV2yciGlIAEZMmL8S2oh6cOS6xwbvZqcGg3aHAz1JHRrIsIAZYJLo6oTgHRLkDQAWdrKACzGIZBDFpGgANQluyQMSEn7gAGopVWwAQwOo2MGoYAAFNbv-Ysk5x5hgEgBLd5INAAegAHFIdGx6EQbGDOGcAKYAVzceEkYXR9hCyEg6hyaHQmWUSDCYUkhJ+EFBEIxIIA7PTuABWYSgCgAdRYaKmWKkOLxJUJhK+JMQZKklJ6Dh0+SQhTwbzuIWeIKi03mqnKyBILGoAE4iJBAQUtA5eMAAMYlCWnKnqfHi6YOFVqqQg-UAG0tJDYyOEgmWYONmTN9gt1pytoswHtwEdoWd9miGgTEGgM2BGjQfIQqkFzXiRGJ-OAACswwgdJG6gZM4gdMWCngAG77IEwXHq4aS7McjsIeAAD0ueFUSsi8QtotLFYH1PBtVUeGRWyjc1qUtFPzC9YQhM+wMXp3oeCsjGkFA0vBIy4AnrmUjjKykt0hcTuk8DgIelNOIFYZwgsBIHAbSMQgi2oGgYB0EgRCIQUEQEgzIosFwceEFQRh6FwRCwy8NwiLaCAni4dB4GQRhILkaB+GEcRSb4rR8EgFh1EsWBwAEURJEkpxmFUThQEYRClh4COzrRCAAmUdhcGydMGgSXxZEiXhbFCQp6kUUpKlScxOl0Zp8nQYpPGMToYaKcA7HCdRELYBosByCRLgyUZrG2VpZmeVxNjzNcTQgBoakOSZHF+YuAVBc4hnhd5pkwVFEIxcFwDksANl2dp4VpaEaEpRF9micA+UQCEYWlYlkV5YFTQ6CE8XVTlvnhSCzLlGwJGZtlPnJe1zJDt1zqCIVCWtQNpUdYwI06IIVUaTVJUaTNc3TM1S2TSBilrSRXRZUVy25dNzKzft40tf1O1FeV+iLbpx1taVd3ANgm2PdtwGKa9wV9UlN11bFECuJdW3Xd9t31SRrgPcZT1TatZ3ra4H3w19NFFXtzoxABR0Y7tyMkfGMCWuoADS0iuEOyxJN4LaWpgvCmGgabvCEIIThlIIsJg3h8wL1zPPqaDGKL4ti-OUtAsogjQMgcuxrZiCoGahLKF0JzAByquesQ5BUAIjB4CEe5AiCa6SCCcj87bAtliCAAqEsS9LbsHKg8uKwrGXmLjwDmO55MgMW5LcCAixNUrkDzeYjudiAOuaHrpCUDQDDGyEDRzh2Ft1Do-7u0Xdye7G3tWSAOwwCc71-DA8Cw8A1AwOoBaXLgUtYoM2DSLQkC05wzIvEqaCQG085hD7oTYNwqjkMIyJ4BoyxlnQkDMpTkB2AUHfzl2gyO73-fCJw8ymOTrjcAzMSwCwS8r2vG9lBySpXHKHZlErCDXEfA9nxfV9LQ3zvsvVefcN7dVACQTg+pVCIjYIYYeFIx5S3JIrdMOxZ7z2RKoQQlsKraypO0ZQ8sEBDkdpaVw2BaDUEBFAmBcCEHAD2Mg8eA4ujoO0OULBZAF73zAevcmkDoGwPge-ZQIpaioFgMsM45QKCCGGBQZYkBPT6mEDeO4Pgfg6AuPYYYwE2YWAALxAA`, `1,Spinnies,GayfishDeluxe,-1,ILD2JAhZIawhiQEVgEkCqBmSAHARgLYCsuAWgBoCywAIhgCYAWApgOpm4DGATEwKJk2ADwCMLAOIYIAJwBuEAMKQA5kloA5AFYUk-YIrX7gNYGuhKQi5NaQxgGAM52XSa7fUPnrnwZuokaCdfH3cAxFovENcwuyDvaLd-O0jgxKSPRHj0jPCEVISckDREAAkAejly6prqqHKAdlrarErmmuAAaXxkAEM1CGMKqvby+qbR1pH24AApUtgABkQS4GHRsZhGjamNudolxFN10fGdttPuvoGUEBOZrYn23cue-oRpNYuHyG3J7+a+0OCAAmncAbUzv9poDZgdlgguOCYZDHucUR0ru8IAE2KhFAAbSCOEEUABKhHwWFmABc0LQADLAEGFCBUSCzIogcoAFh85QAHC59MYuWLxRKiqhoMh+DLjDdgMY8UqAGrE0kUqm0+loFSdCQaORcBa4ZASJmeADKeUSAAUANQ+O2bQL2SUez1ekDGWXyiyrNSRYAAMXgkCYyHwEhDizIhAAnABPfBW4BJtCKJhaKmQYidNOgEE8BMAdxYVoJwHwCMQcrIYt5-KFdhF3vbHZy0uAfp7CqVIE+KsgolVAFciCGaUIACrV2sIeuNvmuQXCgedzdbpDd3uykBqCQgJGKOUElfbuwYeUIUDYCMMHg8-WG42mzPZ3P5wvFssV2AvkaJqwLgH45jg+ZcJA56Xi4159ggcj3kwj7PgaQHvlm4F5gWYC-uWVoAehb4gWBX64UWJYEVWDAhrBdh0b2EAaASGilqSDBjmREEUfh-6ASRoFYeRP5UfxxHAUJn48VBiyfPRHw3hAIbIY+xDVoodjsg2m6MXKCAsWxHFccJPGiX+hECZJ3E4eZBFEa+1mmThUGOKsiClmGW7wfuymqTw6lpEckA6Z2ekWFAqpGRQnGeZaETACqnaQHuCCqjOXAxlg+CKgEtrpNAZISqK4q0NUpYhL64qFcVHoVOUFW+FVYo1eKJVigy5WVbcLXAEVbUei6DWVQAvEAA`, `1,Rotam,V3NOM13,-1,ILD2JAhZIawhiQEVgDECqBbAnABgE0B1PGARgIC8AVWHAOQFlrGIB2ABwgGE0BzJABFBANyJIAosG4DBIAJIoIkAMYgM3AGYB5JMGQApABwAWPeYuXzaYADtKAxBMhFHV9xEEB6DvM0AXDAAlbkJlQ1MkaAA1cElIAEsAdw9ELwA2AGUACTZoiWR-AHEEWESU1MqQMqw3Ko94AGpzZCKuetLgZr0kto7O7qroAEN4SyaOuVGrCb1WgGk9OQIAZxmu817FoWBV9cHEBb1oPfGNnqLtxBO1s7GqqfvzeCeEVvb+4BeOkdekb4uH36AKQRyiu1uFhBh0uSwh6z+IC2x3hd02sJ2pwsGEgAC0WtxUDtYp93DYiESnF8WmhhqSrAANRDZLwiLzsjnsqBeNiczkAZlZfI50mQZAwqGgwCkwBZbOFXm5vIVgvlwuAggAHioAFaShQgOUKxUwHnG1XGjX+ABGepgIFYsqFCqV5ud6sEZF1+v0hvdfNdKv9nNF4p9GD9aoDpuVwotLrQmTISQqIAIkctMbdUZDibwKYQaidOZFWaDJa5eYLEEcRpdZbjwZFVdT1OLmcgZvLlpbCDidfVDb58fVvYgtwH0c7seHTcrmXzrYqk5DQ4Fc8VY5ApHb9en2cthLD9uAZl3g-33ZdR4lJ6MGb3XcbFcVN-1UvPU6fs5fodv0EgGUV1LS9n0PMV-xgRRP1XUCf3A48AMdYCuTXDkRwDN97UgIkUJNOD11-LCAIjGCQO-QjLUYTQ8HxZR0zI1CCPQjdgGo2jEEdBlWG4AAbSAVgIBkgiwa1+QMfx5EEaDzGcIFKi8M9zAyXEsFU9SsB1LwWEoRhdP0+lDKMz59WQZx9BlVsZQEPEQHmDAik1AALAATIpcREFQsDwPhGEpYzPC8OpEG8Dg1PC1ThgABTYCKIq4LEAqS5KT3MszoFQTIHRPGxdhgFJoPgGRgAAGSRDVUF0YB7xlIIoOlFJSLQSgQA4ZBrSKNBaNwABPa0spalKQCig4kCSeRIiQLw8H0vS5tbIbFsMmV0osqVFDQVBxGAfFqGCh1bKGmxVuUaJ6CSISXIAV2QWk4QpIacLShBNWoFROv5a0EjAAgACYcCSABTTJeOABl9rYw6UuO8yIAkMhzsuq75G4JydTEyAAFZ5iy0A-oB4HbDBiHGCh5KYY-YAil4xGGWulG0Yx7HcfxoHMlgPh5iKehPOyWAOCSO6dgelKnoyng0Dej6vp+-62Y5rmeZUPnfFR9H+SxnHZYJzIib2vRSbo6G1oQeY0Fp+m1aZrW8bl4GFe53n+YZ9XNZZu32YQKUZX6MzEQ8Sn+k7Lx7ysSAgA`, `arrowsquick`, `fastbeta`, `grapplequick`, `,`, `skinmanager`, `skinmanager_close`, `skinmanager_setactive`, `skinmanager_edit`, `cancel`, `saveAvatar`, `hideSkinManager`, `skinmanager_skin1_icon`, `skinmanager_skin2_icon`, `skinmanager_skin3_icon`, `skinmanager_skin4_icon`, `skinmanager_skin5_icon`, `skinmanager_skin1_activetext`, `skinmanager_skin2_activetext`, `skinmanager_skin3_activetext`, `skinmanager_skin4_activetext`, `skinmanager_skin5_activetext`, `scale(1.2)`, `https://bonk2.io/scripts/avatar_update.php`, `updateslot`, `updateavatar`, `skineditor_colorpicker`, `skineditor_colorpicker_canvas`, `skineditor_colorpicker_canvas_crosshair`, `skineditor_colorpicker_brightness_slider`, `skineditor_colorpicker_existingcontainer`, `skineditor_colorpicker_righttile`, `skineditor_colorpicker_lefttile`, `skineditor_colorpicker_savebutton`, `skineditor_colorpicker_cancelbutton`, `rgb(`, `)`, `mapeditor_colorpicker_crosshaircache`, `skineditor_colorpicker_existingtile`, `block`, `skineditor_previewbox_skincontainer`, `loaded`, `basecolor`, `xy`, `skineditorcontainer`, `skineditor_layerbox`, `skineditor_layerbox_scrollcontainer`, `skineditor_layerbox_layertable`, `skineditor_layerbox_colorrect`, `skineditor_propertiesbox`, `skineditor_propertiesbox_table`, `skineditor_previewbox`, `skineditor_savebutton`, `skineditor_cancelbutton`, `skineditor_propertiesbox_upbutton`, `skineditor_propertiesbox_downbutton`, `skineditor_propertiesbox_deletebutton`, `skineditor_propertiesbox_blocker`, `skineditor_previewbox_teamdropdown`, `skineditor_previewbox_teamdropdown_title`, `skineditor_previewbox_teamdropdown_option1`, `skineditor_previewbox_teamdropdown_option2`, `skineditor_previewbox_teamdropdown_option3`, `skineditor_previewbox_teamdropdown_option4`, `skineditor_previewbox_teamdropdown_option5`, `skineditor_propertiesbox_table_shape`, `skineditor_propertiesbox_table_x`, `skineditor_propertiesbox_table_y`, `skineditor_propertiesbox_table_angle`, `skineditor_propertiesbox_table_scale`, `skineditor_propertiesbox_table_flipx`, `skineditor_propertiesbox_table_flipy`, `skineditor_propertiesbox_colorrect`, `skineditor_x_down`, `skineditor_x_up`, `skineditor_y_down`, `skineditor_y_up`, `skineditor_angle_down`, `skineditor_angle_up`, `skineditor_scale_down`, `skineditor_scale_up`, `grab`, `auto`, `flipx`, `flipy`, `SURE?`, `skineditor_layerbox_layername`, `HOVERSELECTED`, `HOVERUNSELECTED`, `Empty layer`, `skineditor_layerbox_layerpreview`, `skineditor_layerbox_layerpreview_image`, `#`, `Yes`, `No`, `00000`, `#cccccc`, `DELETE LAYER`, `sm_pickerContainer`, `windowShadow`, `skineditor_basiccolorpicker_closebutton`, `buttonShadow`, `sm_pickerColorContainer`, `sm_pickerColorInner`, `skineditor_shapewindow`, `skineditor_shapewindow_imagecontainer`, `url(`, `wheel`, `Alien 1`, `Alien 2`, `Alien 3`, `Alien 4`, `Alien 5`, `Alien 6`, `Barbed wire 1`, `Barbed wire 2`, `Barbed wire 3`, `Barbed wire 4`, `Barbed wire 5`, `Barbed wire 6`, `Circle`, `Crescent`, `Cross 1`, `Cross 2`, `Cross 3`, `Cross 4`, `Cross 5`, `Cross 6`, `Cross 7`, `Face 1`, `Face 10`, `Face 11`, `Face 12`, `Face 13`, `Face 14`, `Face 15`, `Face 16`, `Face 18`, `Face 19`, `Face 2`, `Face 20`, `Face 21`, `Face 22`, `Face 3`, `Face 4`, `Face 5`, `Face 6`, `Face 7`, `Face 8`, `Face 9`, `Flames 1`, `Flames 10`, `Flames 2`, `Flames 3`, `Flames 4`, `Flames 5`, `Flames 6`, `Flames 7`, `Flames 8`, `Flames 9`, `Skull 1`, `Cross`, `Star`, `Triangle`, `Grunge circle`, `Grunge heart 1`, `Grunge heart 2`, `Grunge leaf 1`, `Grunge leaf 2`, `Grunge leaf 3`, `Skull 2`, `Shoe print`, `Hand print`, `Finger print`, `Print 2`, `Grunge lines 1`, `Grunge lines 2`, `Splat`, `Pentagon`, `Rectangle 1`, `Triangle tall 1`, `Rectangle 2`, `Rectangle 3`, `Rectangle fat`, `Semi circle`, `Rounded rectangle`, `Moon`, `Triangle even`, `Triangle tall 2`, `Splat 1`, `Splat 2`, `Splat 3`, `Square`, `Radioactive 1`, `World`, `Signal`, `Skull cross `, `Skull 3`, `Exclamation`, `Electricity`, `Chain`, `Scope 1`, `Scope 2`, `Radioactive 2`, `Biohazard`, `Fire 1`, `Oxidiser`, `Hazardous`, `Ball`, `Atomic`, `Freeze`, `Whisp 1`, `Whisp 2`, `Whisp 3`, `Whisp 4`, `Whisp 5`, `Whisp 6`, `Whisp 7`, `Whisp 8`, `Whisp 9`, `Whisp 10`, `Whisp 11`, `mainmenuelements`, `bonkiocontainer`, `quickPlayWindow`, `quickPlayWindow_close`, `quickPlayWindow_ClassicButton`, `quickPlayWindow_ArrowsButton`, `quickPlayWindow_GrappleButton`, `quickPlayWindow_ClassicPlayerCount`, `quickPlayWindow_ArrowsPlayerCount`, `quickPlayWindow_GrapplePlayerCount`, `classic_mid`, `classic_mid_quickplay`, `classic_mid_customgame`, `classic_mid_news`, `classic_mid_skins`, `classic_mid_friendlist`, `classic_mid_tutorial`, `prettymenu`, `pretty_bottom`, `pretty_top`, `pretty_top_bar`, `pretty_top_small_preview`, `pretty_top_level`, `pretty_top_name`, `pretty_top_playercount`, `pretty_top_exit`, `pretty_top_settings`, `pretty_top_volume`, `pretty_top_volume_music`, `pretty_top_help`, `newPlayerGuideContainer`, `newPlayerGuide_text`, `newPlayerGuide_close`, `pretty_newsbutton`, `pretty_friendsbutton`, `pretty_tutorialbutton`, `pretty_playbutton`, `pretty_skinsbutton`, `pretty_top_replay`, `pretty_top_replay_back`, `pretty_top_replay_next`, `pretty_top_replay_report`, `pretty_top_replay_report_tooltip`, `pretty_top_replay_text`, `pretty_top_replay_fav`, `pretty_top_replay_fav_tooltip`, `sm_gameChoiceCustom`, `sm_gameChoiceClassic`, `sm_gameChoiceArrows`, `sm_gameChoiceGrapple`, `mouseleave`, `mouseenter`, `easeInOutCubic`, `noguide`, `-30px`, `30px`, `musicmute`, `pretty_top_volume_off`, `pretty_top_volume_music_off`, `pretty_top_help_off`, `pretty_top_replay_fav_checked`, `loginwindow`, `loginwindow_submitbutton`, `loginwindow_username`, `loginwindow_password`, `loginwindow_explain`, `loginwindow_remember_checkbox`, `registerwindow`, `registerwindow_submitbutton`, `registerwindow_username`, `registerwindow_password`, `registerwindow_remember_checkbox`, `account_close`, `newswindow`, `news_close`, `newswindow_title`, `newswindow_content`, `newswindow_back`, `newswindow_forward`, `friendsContainer`, `friends_close`, `friends_requests_table`, `friends_online_table`, `friends_offline_table`, `friends_legacy_table`, `friends_title_legacy`, `friends_refresh_button`, `friends_add_button`, `friendsSendWindowContainer`, `friendsSendWindow_cancel`, `friendsSendWindow_send`, `friendsSendWindow_name`, `friendsSendWindow_label`, `friendsSendWindow_responselabel`, `sm_gameChoiceWindow`, `sm_gameChoiceQuickClassicCount`, `sm_gameChoiceQuickArrowsCount`, `sm_gameChoiceQuickGrappleCount`, `sm_gameChoiceQuickSimpleCount`, `sm_gameChoiceCustomCount`, `replayCredit`, `0.6`, `...based on `, `pretty_top_replay_fav_disabled`, `click`, `SPAN`, `sm_connectingContainer`, `sm_connectingWindow_topbar`, `sm_connectingWindow_text`, `sm_connectingWindowCancelButton`, `roomListHidden`, `2019-11-19`, `News window added. Login added. Fixed bug with shrinking platforms not working. Minor usability improvements.`, `2019-11-20`, `Room list now shows gamemode.`, `2019-11-22`, `Teams added. There can now be up to 4 teams, and collisions between friendly players can be turned on or off. Any bugs please email bugs@bonk.io`, `2019-11-27`, `Added background replays to the main menu. Type \'record\' into in game chat to record that round and send it to the main menu. Added buttons to join individual teams. Fixed bug where level select window would get stuck open after being kicked. `, `2019-11-29`, `Added menu music. Very large physics impacts will now knock you off your grapple in swing mode. When logged in, your maps and your favourites can now be selected from the Level Select window. Bug fixes.`, `2019-12-07`, `Skins added. No editor, please use the old one for now. Swing mode improved, you can now only swing for a limited time until you let go. Better visuals to show how much longer you can hold on for. Will be tweaked and balanced. Fixed the game not running on devices that don\'t support WebGL. Fixed some players not colliding after switching back to FFA from Teams.`, `2019-12-09`, `Fixed quick play logging you out. Fixed some skins not rendering in lobby. Fixed some skins rendering incorrectly. If your skin still doesn\'t look right please email bugs@bonk.io with your account name. Added sound for chat messages. Improved team skins to remove any ambiguity for which team you\'re on. Performance improvements for skin rendering in lobby.`, `2019-12-12`, `More skin fixes and bug fixes. Restructured the main menu a bit. `, `2019-12-13`, `Registration added.`, `2019-12-16`, `\'Remember me\' functionality added for accounts when logging in/registering.`, `2019-12-19`, `Added forward/back/map credits to main menu replays. Fixed skins and the game appearing blurry on high resolution screens with display scaling. Fixed a memory leak that could cause the game to crash. Stars now shown on the news button to show there\'s news since the last time you played.`, `2019-12-23`, `Added ability to customise the controls. They are saved to your account.`, `2020-01-07`, `Fixed another bug with skins rendering incorrectly. Added profanity filter.`, `2020-01-09`, `Swing renamed to grapple. Added alternate grapple mode, where you will grab on to whatever is closest, in any direction, as opposed to only sideways from your momentum like in regular grapple mode. Comments: bugs@bonk.io`, `2020-01-13`, `Added experimental Arrows mode.`, `2020-01-16`, `Ready ding added. Added friend system. Unlike Bonk 1, two players must both agree to be friends before they can see each other in the room list. Due to this your old friends have not been transferred to Bonk 2, but you can send them requests manually. There are some bugs, you can\'t join anyone in quick play or in a passworded room from the friends window yet. Issues? bugs@bonk.io `, `2020-01-21`, `Arrow life increased from 3 seconds to 6. Grapple aim assist graphics no longer shown for enemy players. Swapped the add/refresh buttons on the friends window around. More visibility improvements for team skin colors. Arrows now same color as skin base color, or team color if playing teams. Team hits are now always off in team games. Arrows no longer hit friendly players. In arrows mode, added a delay at the start of each round before you can fire. Fixed arrows glitching when they come to a stop. Fixed arrow aim graphics not rotating smoothly.`, `2020-01-22`, `Fixed \'initial data timeout\' bug when joining rooms. Added arrow picks category to the level select window. Made or know any good maps for Arrows? Email bugs@bonk.io and maybe it\'ll get on the list. Fixed team spawning. Map request chat text visibility improved. Arrows aim assist line slightly longer. Delay before you can fire at the start of an arrows round halved. `, `2020-01-22 (2)`, `Fixed a bug causing lag and game crashes. `, `2020-01-25`, `Added options to display FPS, and toggle anti aliasing -  "High quality graphics". The host of a custom room can now choose to make someone else the host, and give up being the host themself, without leaving. If you are scrolled up in the lobby chat, it no longer scrolls down to the bottom every time a message is received. When clicking [Load] on a requested map, the link changes color to show you previously clicked it. The lobby can be visually resized by dragging the bottom right corner. `, `2020-01-30`, `Added Arrows mode quick play. Improved tutorial. Improved sound handling to prevent crashes and excessively loud sounds. New music added. Reduced the speed at which you can turn your aim in arrows mode from 6 to 5. This makes it easier to make small adjustments, and makes it strategically more important to keep track of which way you and your opponents last fired.`, `2020-02-03`, `Fixed off screen chirp sound. Added 2 maps to arrows picks. Fixed recording replays in quick play crashing the game. Another skin rendering bug fix. Guests skin color is now randomised.`, `2020-02-07`, `Added skin manager and skin editor. Friending someone in a custom game lobby now sends them a notification in the chat. Time taken to be kicked for being AFK in a quick play game greatly reduced.`, `2020-02-13`, `When spawning in the same spawn as other players, you\'re now always drawn on top. Countdown added when starting a game. Added button sounds and general polish.`, `2020-02-14`, `Reduced volume of some sounds. More polish. 2 more maps in arrows picks. `, `2020-02-15`, `Fixed bug with team spawns not working correctly. Reduced time arrows stay on screen from 6 seconds to 5 seconds. Fixed blank screen bug when tabbing out mid game.`, `2020-02-20`, `XP is now earned and progress towards your next level shown above the game. Currently 100xp is earned for each round won, this may be adjusted. Added new \'Fresh\' maplist to map load window. `, `2020-02-26`, `Added text at the start of each round displaying the game mode, teams configuration and round win limit.  `, `2020-03-01`, `Changed the main menu music to an experimental background drone. The light hearted music didn\'t really fit the game as well as it did in Bonk 1, and most users had it turned off, so trying a more serious tone. Comments bugs@bonk.io`, `2020-03-01 (2)`, `Tuned some of the game sounds to harmonize with each other and reduced the player death sound volume. Comments bugs@bonk.io`, `2020-03-05`, `Added death arrows mode.`, `2020-03-16`, `Added more maps to arrows picks, and updated arrows quick play to use all of arrows picks. Level editor is coming next, hence the lack of updates.`, `2020-04-21`, `Level editor is very nearly finished! This update makes some minor engine tweaks live so some of the new features of the editor can be tested in public. Expect more updates soon.`, `2020-04-23`, `Added shadows to physical objects and players in game. Fixed death arrows black outline being outside the actual arrow. Fixed chat losing focus when going from in game to lobby. More engine tweaks.`, `2020-04-23 (2)`, `Fixed bug in todays update causing game lockups and crashes. 1 map removed from arrows quick play.`, `2020-04-25`, `Map editor released. For now you can save maps to your account but not release them publicly, this will come once a better voting/ranking system has been put in place. You can still load/suggest these maps in custom games. There will be bugs, please report them to bugs@bonk.io, along with any thoughts on the editor and new features. Please be aware that at this early stage there\'s a possibility that any maps you make may be deleted if there are significant changes in the future to the way maps are saved, so please don\'t spend too long on any masterpieces at this point. You currently have the ability to load anyones maps and save them to your account, though the original map makers credit will be saved with the map too. This is part of a system that will hopefully allow players to make variants/improvements to existing maps, without stealing them or not giving credit. `, `2020-04-27`, `Fixed jump height being lower than in Bonk 1, controls may also feel more responsive now. Added a \'complex physics\' option to the Map Editor. Added an Anti-Tunnel option for platforms. Added more map size options. Maps now spawn green/yellow team players at green/yellow team spawns, unless the map doesn\'t have any green/yellow spawns, in which case it will spawn them at red/blue spawns. Fixed lots of editor bugs: joint draw line not being saved, rod joint softness 0 causing crashes, and a crash caused by polygons.`, `2020-04-28`, `Main menu replays now give credit to the original map creator if it\'s not an original map. Added a snap grid to the editor, its size can be set in the Map Properties.`, `2020-04-30`, `Map load window now auto refreshes your own maps when you open it. Publicly releasing and voting on maps is coming soon.`, `2020-05-05`, `Added ability to publish maps, vote, and hotlist added. A previous update warned not to spend too long on maps because they may get wiped in a future update, this hasn\'t happened and there\'s no longer a risk of it. There\'s going to be some experimentation with the voting and ranking systems, right now you can only thumbs up maps, you can do it multiple times and you are encouraged to do it for maps you repeatedly play. Improved quality of results when searching for maps. Searching is currently only for B1 maps and will be added for B2 maps soon.`, `2020-05-12`, `UI redesigned. Music added back in. Lots more polish coming. Added /mute and /unmute commands.`, `2020-05-13`, `Fixed UI bug on low resolution devices. Fixed lobby and editor being able to be resized beyond the boundaries of the game.`, `2020-05-16`, `Mostly fixed the game freezing after returning to it from a different browser tab. Players joining rooms with teams locked now always join as spectators. Fixed lobby chat not scrolling down to the bottom when returning from a game. In game chat opacity and font weight changed to block the game less and be more readable. Commands can be issued from in game chat. Chatting in quick play games resets AFK timer, and timer relaxed to be less strict. Changed mute behaviour so that anyone can mute anyone else, rather than only the host muting someone for the whole room. High quality graphics now defaults to off for ChromeOS devices.`, `2020-05-21`, `Added searching for Bonk 2 maps, and adding maps to your favourites. Use /fav or /unfav in lobby or in game.`, `2020-06-03`, `Streamlined game for new players. New simple game mode added for new players. Fixed map load window opening too large on some low resolution devices.`, `2020-06-08`, `Menu menu top and bottom bars hide when moving mouse outside the game. Fixed auto login and fetching main menu replays sometimes failing. Fixed friend window opening too large on some low resolution devices.`, `2020-06-11`, `Network optimisations and improvements. Any bugs: bugs@bonk.io`, `2020-06-15`, `Greatly reduced lag, slowdown and memory usage that got progressively worse the longer you had been in game. Grapple Prox is now Grapple, and old Grapple has been removed. Map creators can now mark their maps as designed for a particular mode, and this is shown in the map load window. Added experimental fresh list for Bonk 2 maps.`, `2020-06-18`, `Added room linking.`, `2020-06-19`, `Added a new type of cap zone that is triggered by other physics objects instead of players, and will cause a team to instantly win. These can be used to easily make team based maps where for example getting a ball through a goal wins the round for the team.`, `2020-06-23`, `Large FPS improvements especially when high quality graphics are enabled. Skins look sharper. Colored bands removed in team games, but colored outline thickness increased. Play buttons on main menu scale better. Reduced in game chat to 5 lines to help reduce blocking.`, `2020-06-26`, `More big FPS improvements. Fixed the map load window and editor displaying incorrectly on Firefox.`, `2020-07-04`, `Fixed skins displaying incorrectly in quick play, and fixed the tutorial not working. Replays now only capture the last 10 seconds up until the record button was pressed, to better highlight great moments rather than full rounds. Increased the power of the boosters on VTOL mode to make flying a bit easier.`, `2020-08-10`, `Improved map voting to prompt players to vote in game, and changed to one vote per account.`, `2020-08-11`, `Map load window updated to show more map information.`, `2020-08-14`, `By default the space key now activates heavy, and a third set of keyboard controls can be configured. Small improvements to the custom game room list.`, `2020-08-19`, `After each round the winners skin is now shown, and round transition animations have been tidied up. The game window no longer fills the entire screen on large monitors. Background gradient changed to be lighter so it\'s the same as in the old version of Bonk. Fixed \'player left\' messages sometimes not appearing in in-game chat.`, `2020-08-22`, `Sound volumes increased to be the same as in Bonk 1. Small changes to the movement physics to put them back to how they are in Bonk 1: if you\'re moving up a slope you\'ll jump higher, and if you\'re moving down a slope you wont jump as high. If you\'re holding X and a direction key you\'ll change direction slightly slower than you did before. Performance optimisations to reduce frame rate drops and sounds sometimes being delayed. Screen shake increased to be about the same as in Bonk 1, and black bars at the edges of the screen during shake fixed. Max replay length increased to 15 seconds, and introduced a minimum length of 5 seconds. `, `2020-08-25`, `Tweaked the sounds to allow some distortion and make bounce and collide sounds louder. Changed the high quality graphics option in the settings to instead be low/medium/high. On high the jagged edges that used to appear on some platforms has been fixed. Medium uses a fast anti aliasing method that\'s not as smooth but is a good compromise. Low has no anti aliasing and should give good framerates on most devices.`, `2020-08-27`, `Added platform bounce particles. Changed death particles to be the same colors as the players skin. Added a button in the map editor to instantly test your map in game, with whoever else is in the room. Small visual improvements to the map editor UI. Fixed bug where white borders sometimes appear on the right and bottom edges of backgrounds. Fixed bug where the game would zoom right in at the end of each round.`, `2020-09-19`, `Added football mode.`, `2020-10-02`, `Classic quick play is now the same dynamic map rotation as in Bonk 1. Mid round countdown timer added. Support added for flying maps. Fixed players not being removed from the pitch in football mode when leaving mid game. Fixed bug causing jump to sometimes not work. Fixed bug in some Bonk 1 maps where rotation joints would sometimes be in the wrong position. This fix may have changed some rotation joints in existing Bonk 2 maps, unfortunately this is necessary to make the physics consistent across both versions of the game. `, `2020-10-16`, `UI colors are back to the classic Bonk 1 style. Polished some menu and UI items. Fixed bug causing sounds to distort and eventually stop playing. Fixed bug causing the same replays to sometimes repeat. Custom game search bar removed.`, `2020-10-19`, `Changed the default level select category from Fresh to Hot. When getting a link to share a custom room, the link is now automatically copied for you. Fixed bug in the editor where renaming a newly created spawn point would actually rename whatever you had selected previously. Fixed bug in the editor causing not all shapes to be deleted when deleting a body, which meant the \'physics shapes\' count was incorrect. Any maps that already have this bug will still have it, but the extra shapes that are stuck won\'t cause any performance slowdown. `, `2020-10-24`, `Map voting now takes place after a game has finished, rather than between rounds. You can also favourite maps from this window, doing this will count as an upvote.`, `2020-10-27`, `Editor updated so the dropdown for choosing the mode the map is intended for is more visible. When making a map it\'s important that you set this and don\'t just leave it! You can now delete your maps from the level select window, and also remove maps from your favourites list. Added a mute button to the player dropdown menu in the lobby, and added some mouse sounds that were missing.`, `2020-10-28`, `Fixed bug causing some in game sounds to play twice. Mid round winner text font changed. Guest names and skin colors are now saved locally.`, `2020-10-30`, `The hot list on the map load window is now separated into 3 categories: General, Grapple, and Death Arrows. Searching will still search all maps. Edits and Fresh have been removed. Added a count for the number of players currently online to the top bar.`, `2020-11-04`, `In game chat restyled. Improvements to the lobby: when players minimise the browser or change browser tab their network bar will now turn grey to indicate this. Added a team lock button. Each players ping is now visible under their network bar, in milliseconds (ms). Lower number is better.  Small UI bugfixes and optimisations.`, `2020-11-09`, `Grapple quick play released. The map rotation is currently a static rotation of 29 maps, and more will be added after in-game FPS has been improved.`, `2020-12-03`, `Bugs? bugs@bonk.io! FPS improved especially on certain maps. Very large circles in maps may have pixelated edges as a result of the optimisations. Fixed bug causing phantom blue players to appear in quick play. Fixed bug causing players with no score to not show up in the score list in quick play. Fixed bug causing some players to see all skins, and the football pitch, as white. Improved appearance of skins to remove jagged edges. Improved team skins to have clearer colors. In arrows modes, heavy can no longer be used at the same time as drawing an arrow. Improved arrows aiming graphics. VTOL removed.`, `2020-12-04`, `Fixed bug causing the camera to zoom in at the end of rounds for some players.`, `2020-12-04 (2)`, `Fixed Simple quick play not working. Fixed death particles in team games not being the correct team colors. Fixed some minor UI bugs.`, `2020-12-10`, `Added players skins next to each of their messages in the lobby to make keeping track of who\'s saying what much easier. Fixed arrows in team games not using team colors.`, `2020-12-16`, `Replaced the FPS counter with a more simple one after discovering the old one was actually causing an FPS drop of about 5% itself. Improvements to the tutorial. Tutorial button is now top of the list for guests. Simplified the map load window to only have two categories for Bonk 2 maps - Hot and Death Arrows. The category is determined automatically: the \'For mode\' setting in the editor no longer affects which category your map will be shown in. Small editor improvements to the color picker and list of shapes. The type of shape is shown as a C, R or P, and it\'s shown in light grey if it\'s no physics. Lobby layout improved slightly.`, `2020-12-23`, `Added mode filters to the custom game room list. Improvements to the skin editor, layers can now be any color you like. Dragging with the mouse across the preview with a layer selected will reposition the layer, and scrolling while the mouse is held down will scale the layer. If you also hold the shift key you will rotate the layer. Rooms with friends in them are now sorted by distance. Removed simple game mode. Fixed the game displaying incorrectly on some browsers with high zoom or display scaling settings. More polish to the UI.`, `2021-01-11`, `RIP Flash :( Migrated to main domain. Fixed scaling issues on some high resolution devices caused by last update. Small bugfixes and improvements to the map editor. Friends list now shows friends from the Flash version of the game, so you can send them friend requests.`, `2021-01-14`, `Fixed \'Stay logged in\' not working. Fixed issue with Bonk 1: My Maps and Bonk 1: My Favs lists not loading any more maps when you scrolled to the bottom, and with some map results showing up out of order. `, `2021-01-18`, `Significant FPS improvements. Fixed map suggestions in custom games not working.`, `2021-01-28`, `Reworked the grapple physics to be more reliable and consistent. Fixed bugs causing players and capture zones to sometimes but not always block grapples. Added a \'No grapple\' option for shapes in the editor, so you can easily set shapes to not be grappleable. The hack of using capture zones set to instant win will still also accomplish this, but you should update any maps to use \'No grapple\' instead because this hack may not work in the future. Added an \'inner grapple\' option for shapes in the editor, which allows players to grapple the edge of a platform from inside it. Fixed a GPU memory leak when the browser window was resized.`, `2021-02-01`, `Added a report button for replays on the main menu. Minor map editor bugfixes and UI tweaks.`, `2021-02-04`, `Replaced Bonk 1: Hot with Bonk 1: Top Rated. Fixed a bug where the map search parameters would be different to what the UI was showing.`, `2021-02-18`, `Small bugfixes and optimisations. Changes to the maps in Arrows Quick Play: removed Trianglezzz by jorray. Added Stone Pillars by Team Arrows Ram, Partition Demolition by Team Arrows Ram, Cliffside by TheRedKirby, Arrow Grounds 2.0 by Ranker_717, and Arrows Warzone #4 by GudStrat.`, `2021-05-07`, `Fixed the lobby chat sometimes failing to scroll down. When a room host leaves a room, they now have the option to end the room instead of transferring host to someone else.`, `2021-05-11`, `Fixed exploit allowing arrows to be invisible.`, `2021-05-18`, `•Fixed the empty blue player bug, this was also causing desyncs in quick play. \r\n•Hovering over the replay buttons now hides the brown main menu buttons. \r\n•Fixed the brown main menu buttons sometimes being hidden after returning from quick play.\r\n•You can now double click rooms in the room list to join them, and hit the enter key after typing in a room password to connect.`, `2021-05-25`, `•Fixed bug where two arrows fired at the same time appear as the same color.\r\n•Added a button to favourite the map currently playing in the main menu replay\r\n•Fixed bug where maps saved with grid sizes with decimal points in them would be rounded, so the grid didn\'t line up when the map was loaded back into the editor`, `2021-08-02`, `•Option to \'end room\' when leaving a room you\'re hosting only shows if there are other players still present.\r\n•Fixed bug in the skin rendering that could cause crashes.\r\n•Improved the main menu appearance.`, `2021-08-20`, `•Added Picks category to the Map List. These maps are hand chosen by moderators. Please talk with them about any maps you think deserve to be on the Picks list, and work with them to get your maps good enough for the Picks list!\r\n•Fixed custom game room links not working\r\n•Fixed minor graphical issue with map like bars`, `2022-01-07`, `•Added ability to change your account password, do it from the settings menu.`, `CANCEL`, `HELP`, `BACK_SPACE`, `TAB`, `CLEAR`, `ENTER`, `ENTER_SPECIAL`, `SHIFT`, `CONTROL`, `ALT`, `PAUSE`, `CAPS_LOCK`, `KANA`, `EISU`, `JUNJA`, `FINAL`, `HANJA`, `ESCAPE`, `CONVERT`, `NONCONVERT`, `ACCEPT`, `MODECHANGE`, `SPACE`, `PAGE_UP`, `PAGE_DOWN`, `END`, `HOME`, `LEFT ARROW`, `UP ARROW`, `RIGHT ARROW`, `DOWN ARROW`, `SELECT`, `PRINT`, `EXECUTE`, `PRINTSCREEN`, `INSERT`, `DELETE`, `2`, `3`, `4`, `5`, `7`, `8`, `9`, `COLON`, `SEMICOLON`, `LESS_THAN`, `EQUALS`, `GREATER_THAN`, `QUESTION_MARK`, `AT`, `A`, `B`, `C`, `D`, `E`, `F`, `G`, `H`, `I`, `J`, `K`, `L`, `M`, `N`, `O`, `P`, `Q`, `R`, `S`, `T`, `U`, `V`, `W`, `X`, `Y`, `Z`, `OS_KEY`, `CONTEXT_MENU`, `SLEEP`, `NUMPAD0`, `NUMPAD1`, `NUMPAD2`, `NUMPAD3`, `NUMPAD4`, `NUMPAD5`, `NUMPAD6`, `NUMPAD7`, `NUMPAD8`, `NUMPAD9`, `NUMPAD *`, `NUMPAD +`, `SEPARATOR`, `NUMPAD -`, `NUMPAD DEL`, `F1`, `F2`, `F3`, `F4`, `F5`, `F6`, `F7`, `F8`, `F9`, `F10`, `F11`, `F12`, `F13`, `F14`, `F15`, `F16`, `F17`, `F18`, `F19`, `F20`, `F21`, `F22`, `F23`, `F24`, `NUM_LOCK`, `SCROLL_LOCK`, `WIN_OEM_FJ_JISHO`, `WIN_OEM_FJ_MASSHOU`, `WIN_OEM_FJ_TOUROKU`, `WIN_OEM_FJ_LOYA`, `WIN_OEM_FJ_ROYA`, `CIRCUMFLEX`, `EXCLAMATION`, `DOUBLE_QUOTE`, `HASH`, `DOLLAR`, `PERCENT`, `AMPERSAND`, `UNDERSCORE`, `OPEN_PAREN`, `CLOSE_PAREN`, `ASTERISK`, `PLUS`, `PIPE`, `HYPHEN_MINUS`, `OPEN_CURLY_BRACKET`, `CLOSE_CURLY_BRACKET`, `TILDE`, `VOLUME_MUTE`, `VOLUME_DOWN`, `VOLUME_UP`, `;`, `=`, `-`, `.`, `OPEN_BRACKET`, `BACK_SLASH`, `CLOSE_BRACKET`, `QUOTE`, `META`, `ALTGR`, `WIN_ICO_HELP`, `WIN_ICO_00`, `WIN_ICO_CLEAR`, `WIN_OEM_RESET`, `WIN_OEM_JUMP`, `WIN_OEM_PA1`, `WIN_OEM_PA2`, `WIN_OEM_PA3`, `WIN_OEM_WSCTRL`, `WIN_OEM_CUSEL`, `WIN_OEM_ATTN`, `WIN_OEM_FINISH`, `WIN_OEM_COPY`, `WIN_OEM_AUTO`, `WIN_OEM_ENLW`, `WIN_OEM_BACKTAB`, `ATTN`, `CRSEL`, `EXSEL`, `EREOF`, `PLAY`, `ZOOM`, `PA1`, `WIN_OEM_CLEAR`, `-270px`, `easeInCubic`, `-290px`, `newscount`, `* NEWS *`, `slow`, `https://bonk2.io/scripts/combinedplayercount.txt`, `? online`, `? players online`, ` online`, ` players online`, `header_bonk_playercount`, `(`, ` online)`, `header_car_playercount`, `easeOutSine`, `-40px`, `medium`, `sound/128_wmb.mp3`, `sound/128_vdp.mp3`, `Quick Play`, `Getting room...`, `https://bonk2.io/scripts/matchmaking_query.php`, `Joining a game...`, `Creating a game...`, `Quick Game`, `joinname`, `room_full`, `room_not_found`, `old_rotation`, `<br />`, `NEWS`, `brownButtonDisabled`, `https://bonk2.io/scripts/friends.php`, `getfriends`, `Friends From Flash Version +`, `Friends From Flash Version -`, `None`, `friends_cell_name`, `SEND REQUEST`, `friends_sendrequest_button`, `brownButton`, `brownButton_classic`, `friends_request_button`, `REMOVE`, `JOIN`, `friends_empty_cell`, `unfriend`, `deleterequest`, `accept`, `ratelimited`, `You\'re doing that too much!`, `username_invalid`, `That name is invalid`, `username_not_found`, `No accounts found with that name`, `cant_friend_self`, `Can\'t friend yourself!`, `already_friends`, `You\'re already friends!`, `already_sent_request`, `You\'ve already sent them a friend request`, `RETRY`, `send_success`, `Friend request sent successfully!`, `accept_success`, `They sent a request too, so you are now friends!`, `ANOTHER`, `DONE`, `SEND`, `https://bonk2.io/scripts/register_legacy.php`, `Username contains invalid characters`, `140px`, `username_taken`, `Username not available`, `rate_limited`, `Please try again later`, `data_missing`, `Please enter both a username and password`, `password_weak`, `This password is too weak! Make it stronger!`, `200px`, `https://bonk2.io/scripts/login_legacy.php`, `username_fail`, `No account with that username`, `banned`, `This account has been banned.`, `Password incorrect, please check and try again`, `Creating Game`, `Creating room...`, `Joining Game`, `Fetching address...`, `https://bonk2.io/scripts/getroomaddress.php`, `Address fetch failed`, `Got address, connecting...`, `test join name`, `Error: `, `ILD2CEWTwayhiQEVgEkAmAJAagBgDkAxATgFcAtADQGNgBhAcQCkBnATSoAcAbGgKxoAWJKIDmCABYBLAEaMiANmpoAzAHlEWdq1QJ6IUMCISCIAO4NLAaRDwDwLCHbRUAURABZEBMhQ3ljjQaMAewAAKrqGomgAiAKog8eAAjHqIyETwSLHGovkFBUTAZqJu4Fz55oyMork6hY30yLHpje1I4MhYADKikDSsHcMjwABeAPSWoqiwkgDUKQBKbj1LksAA6m1QnuDSEvlm26MWbtmIkOGHiHvMVbEiBYkF3SR1wBgALqcjxQXlCY7FBYWTA379cEgSAAMzwok89CWTgh7WSFHyyDcT0uwCoNwQ5VkBNOxROSDc9HAJJQjDIqPasXCEwh3gAHJi3IpCnhwABDKEFXIAZQuhPAAFsacBzG5KjlgBQjPkum5wZAACrTRDlTzSzIYBnAZJBGbNI0M4qlCngHDai2jLqMMVQAZDB2-ZIAVkxWV+5QAnvbScAAKbg8oY0TmXofBqorpoPqdCLSj2NSbBqCzBbLVbrYDIFwQszx0bmIjJ3Hk27gYVZmV+57gUOYxjqxUvW7AemW4D3MrAHEZRjmGm5HDKiFdIh0FNhG08aUVw0MxLwmatf37BvDYpid064Aujq5Gu-Gcn6AldO-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-lQFcCIOAWQmx2AahbhfSQ-kxihi4LELAXoPAkF1pIcAMJmBfBSEIGM-kvjhBoKAegGA0D3GFGyeS8xhb7XkvQVZ4B5g8DGEZzz9B2BYmAODEKsgaCxFUGMC+qgfoBgoCpWA8JKnxzZGyXWUNGGqDZCFdQ-B5jfGAOoRgoBJBUH2pIL41gYH+R4EsCYXpwDmFVEQITSxGLClDH8wR7BdbKw8MkTKIE8AajGIoHgTxYoQlQDRRoHEFIyWYMSkgQgXLsAoPtNAPB9rCfw+ANk-kyCKGy1gcIUTGBYC4P5AgoAegUd5jCM+eA8BjHUD0HArBqT7QDP5Vg4RnuqBjF6dQBBJB2iWKoc+s3hZuHksLNAFBwjeImGIYWYhUjxBwJc0gjA+Q4DQAQYW4wL4SmQBQeSoYNTrCipINAyHGD7SwGMGM+0KABnTtITYEpVfsHmHyVgNBYuSG8Yd2QaBJBR1iPWRg1g8DhG9eoGg56ShtAS-5CYxeS-F+mCXUvpeSAv0ryXyw5gJRUDFH4Qvtey8gAr236vRe2-18b2KBwrfe8d-mG3maNfh8ICarkaAE-a-l9H13ufle+9N8JNCZfpeF9j+72P1fYp-hD-nyPnfm+6-gAwJsWQYRUDnKPyvk-S+e-z4v5sHoN-HAb+fw-i+i-a+7971f3fxQHQC-z30f3-zP3bwbzXygAHHvy3wgMrwAOPxgLFETQQLryQKrygLnTQIQGTEwPb1-1P2-0QPwPlVnzIKwJIKfz3zTjZGYHtFKCIOg070gOoLLwYKYIQE0CoPANoI4PAIoJAEiH4Mn3YOQNwP3wQD0FYO3zoOHxEOAAfXEOP0EKkM4OgzIhACynkOwJLxQIf2UJcjUJ-0kJwK0JkOfDAIkL-00OEP7wQFNH0I0MsMcNgNQDfTMMQLcMMOkNiAlHiH5gQAbVcIsP8KsO4PtGLHCPsPcN73oAoE8BIgQCjAwDcAoByzECWAlGR1M3sjskYhAFiAmC4AWhLT5AKKKPsmAA1FUGIQQF3QIEWS9DIHYE2BSB4AoCpA1FriIHMGoAmHkjH1sNr1UGGNGKp11iwF8GgCGFiBwBwDIFkAlEXiyOQDEHiGe0kBoEYBwGkIMOLyMPIMbx-DnFi1WK9EkGyxwFgDQCIHZ04HAB4AiOLzglYRGLbzeIxk8EQRrSwFQBaM2DaI6K6J6PAD6IUEGKoEmLbzGMrwmK+Nr14iSKXVdBEEWOWNWPWO2C2J2L2IOKsKOPH2JOkE8GkCwlQHiWAEuIlGuNuPuMeNAGeNePiJLw+LhNrx+I5FCzwHlA8CwmBNBM6O6N6P6JhK5MrwRNLyRNGPoE9zQDmPoA8CxJWLWK9jxO2MkF2P2MOL8OOMOLAlFBAOkBADpIZM2DuIeKeNSTZLH05ORMrx5P7GFCEHPlCHQEsGFPaNFIhKhIGKGKdNLxlJLzlPhIVIDCVOvHNDVJxM1M2O1N1KJIEJ+JOKwONOyFQDelpJwCuJuKtKZNtJeJdMcClNLxdI5VgBpI8B6RKFaN9PBPFOhKDNGJ8LDPLJLzUS4GWRjLoDjI1I2PxJ1MJP1LTMOJgJ-GVAtILOtOZNZNLM+LHxdOYDdI9I8GsCBIbLBLFMhIlNbPhPbOL3DJRIMB7MsEgHoCMAHNxMTIJL1OJINNJPALEGsCWDglQDGhnMZJtJZLtMXM7OLxXLXJWmAGTB9J3P9P3NhODK7KPImBPOlPoHiDIA4hjPhBvITOHOTLHPZMNOJNAE8GFGLFQF7G-MLN-IXLwoxjLNgqAuot5KyXMk9J6G9O3L9ObMDJgrbNYMQpDLPN7MgBn0wqHKTNHMfPHOJMnJANt1zPzJ-PnP-IYpACXO+OUrQH4DQDNM9L1HrJBMbN3IDMlLosZl4sApZCvJIE3OvAaV4iWPVNvOwvEtTOovTPb1fPfJAI3HIrnOLPtLb0dOXPUvoGrNApMGgEuUcE8BwFmnkBIHkkGHoAIDA2Cg8kKFKJoh6G0MQGqMKNqM-QKsKD8HKD5kgFQDlVQCpV+0cFQHAEir4RitgCyKIDwCmSpDdWzCICHUZH1yFDKIqMWlypqMKpGuBVCDKpKtqpACwioG8HoDGBoVkFUEtmoGYDGD5Ath4Hk2BT5E7UaHCH3XyBGIKAmH5zysYl3FGs-Rv0mpKtAJlE9OMDW2AHc2FBwAoGYBWBwGFDbVeDQDZEtXSt6vyFKPKJLXmiqJIHOvyququuKomrKrvQBWpE-yepABoADCewoFYFkH2hvhjGjNxHYBrWGAOsKGOvyFOpqIuththpuoRpAIcAHCMHswissGYE8B4BIDkFUGWPYH2hwCDDrmBVhlODJoKAOoGuLVACpuhsutptunptKtApn3ACjA5q5tgFxpvgwGSS9E0irCny2Ax3yHFqOsZlEAmEBoVquqVqxGKt4lqvqs5pJU4Hvk8HvGkCuTSr6syuyoQCGryptpGvhuVtQBn0xMsD0CIGevMDGCe3QU4BWolGFnkiWvuGkAjHAGpl+CtsKAmGUClrDwmECWpuDpGqmvtr5hANUJjsMHjv2i9B4F1uxu1oDG6A7AFF+DNtEApstrOpqPlvLrYjtrupcG9TqKiCIFQF1iRrxDmusxhD2OFkkAwEYCdxoAlBSDGEwiUW8khW7sOt7otqQFlsHuHuupQFuodvCrVumrIxIDGHkB4Cas5mAB4FbBtCDFzutuAALvBoWn4BLuhueovptUrtupAIbTruAGFi2zxP5pIFYC4gVwwCCMKEpBwh-vzsLoAaAdLvOrAfnQgYmpAOLBgZSEsz2jEFD3IAoGFHAHoFxqWH1rQGBvpmpQhEDrsgiHmCLqVDPryqHqIYdA-yNs9PbDZoYGQFgENGJARFVWwZOtwYGvwZAZEcxhIeroVV+hgYgQ2tWU4CVMQfMFDBoH7lvVlDihGAyr6rBoGshpAY6o0afFDqrtQAMHABEEEsip6D2J4BxoUCjN0wSqwFntND+gbVODzuUYAfmjUbLpcfai0bmyBQkBVJAFmoYBTq4Ev3ETQBYB4A6IRWkAOD+j5AbHklfhhCWBAlXN1mDRicppUZLQScIaSfihSY-20r0fMAMY4CoGMbxtMeSBzo-EYCWGlAmC6LjmFDIAyOkA1HYZyH6oAccepucY6YdDccms9Pun7BADehm0ye8HAF1mExoGNn4AyPoCIGYuekYDGBNpWZolBqLvWehq2bYh2cRqcBdWsrCivLApAB+GzSyfoBybybwAKcQTBO1jKdrAqd7uqdqfqcad-v-qLraaKK+bYi6ZAN5jRvmz6c2EMcGbEBMbMfABAktUyENrIjG3ADQCoAIC4FDFiCAdedWYce4Zhtxe2ZWgZvcF4g8F0rWy3DNWaFKiaifCzNuGXskFDCtKjKwAIBhSoAwDIF3sKniBSo9EgHhnm1kc6K+FDBZfVc1c8BF3oU3EeQZHNR2Bz0YBXqVcFpQYtdQtiHuBhG8Mqk2Ged+Bn1IliF1nAAGZ4D4GkHADGD2KIFUFkDNOetVLcAVxoCwCWBSE3pqVocoHuSnzlYcE2e2aU1AHTQFf4Dg1GC+OEbCCAeYHeftYfDbHpehBUMKEYHeKjSAA`, `Enemy Player`, `tutcomplete`, `settingsContainer`, `settings_cancelButton`, `settings_close`, `settings_saveButton`, `redefineControls_table`, `settings_filterprofanity_checkbox`, `settings_fps_checkbox`, `settings_graphicsquality`, `settings_change_password_label`, `settings_change_password_label_disable`, `Left`, `Right`, `Up`, `Down`, `Heavy`, `Special`, `17%`, `27%`, `redefineControls_selectionCell`, `...`, `https://bonk2.io/scripts/account_savecontrols.php`, `passwordChangeContainer`, `passwordChange_cancelButton`, `passwordChange_close`, `passwordChange_saveButton`, `passwordChange_statuslabel`, `passwordChange_oldpass`, `passwordChange_newpass1`, `passwordChange_newpass2`, `Change your account password here. You can only change one account password every 24 hours.`, `12px`, `Failed: New passwords don\'t match!`, `36px`, `Failed: New password blank`, `https://bonk2.io/scripts/account_changepassword.php`, `Failed: You are doing that too much, please try again in 24 hours`, `27px`, `Failed: Please log out and in again and try again`, `server_error_1`, `server_error_2`, `Failed: Please try again`, `oldpass_wrong`, `Failed: Old password is incorrect!`, `autoLoginContainer`, `autoLogin_cancelButton`, `autoLogin_text`, `guestOrAccountContainer`, `guestOrAccountContainer_guestButton`, `guestOrAccountContainer_accountButton`, `guestOrAccountContainer_guestBox`, `guestOrAccountContainer_accountBox`, `guestContainer`, `guest_close`, `guestPlayButton`, `guest_skinbox`, `guest_nametext`, `accountContainer`, `loginfieldtip`, `loginfieldtip_text`, `registerfieldtip`, `registerfieldtip_text`, `fast`, `-70px`, `Automatically logging you in...`, `https://bonk2.io/scripts/login_auto.php`, `Auto login failed! Please log in again.`, `Looks like you\'re new here.\r\n Click "Play as Guest" so you don\'t have \r\nto make an account`, `-200px`, `easeOutBack`, `300px`, `easeInQuad`, `guestname`, `guestcol`, `Enter a name and choose your player \r\ncolor. Or just leave them as they are, \r\nand click Play`, `-150px`, `Guest`, `blueButtonDisabled`, `brownButton_disabled_classic`, `Lv `, `This is the main menu. Click\r\nQuick Play to join a multiplayer game!`, `Auto Joining...`, `https://bonk2.io/scripts/login_clearauto.php`, `visibilitychange`, `roomlist`, `roomlist_close`, `roomListContainer`, `roomlisttable`, `friendsToolTip`, `friendsToolTip_list`, `roomlistfilterbutton`, `roomlistfilterwindow`, `roomlistfilterwindow_close`, `roomlistfilterwindow_check_classic`, `roomlistfilterwindow_check_arrows`, `roomlistfilterwindow_check_deatharrows`, `roomlistfilterwindow_check_grapple`, `roomlistfilterwindow_check_football`, `roomlistcreatewindowcontainer`, `roomlist_create_close`, `roomlisthidepasswordedcheckbox`, `roomliststatustext`, `roomlistjoinpasswordwindowcontainer`, `roomlistjoinpasswordtext`, `roomlistpassjoinbutton`, `roomlistpasscancelbutton`, `roomlistrefreshbutton`, `roomlistjoinbutton`, `roomlistcreatebutton`, `FILTER MODES`, `1 MODE FILTERED`, ` MODES FILTERED`, `\r\n`, `Getting rooms...`, `https://bonk2.io/scripts/getrooms.php`, `Couldn\'t get rooms, please try again`, `JOINED`, `roomlisttablejoined`, `GB`, `US`, `data-myID`, `UNSELECTED`, `FRIENDSPRESENT`, `30%`, `13%`, `19%`, `14%`, `10%`, `6px`, `Any level`, `< `, `> `, ` - `, ` mi`, ` km`, `9%`, `graphics/flags/`, `.png`, `4px`, `3%`, `graphics/lock.png`, `There are currently no rooms!`, `No rooms matching your search`, `(?:^|\\s)`, `(?!\\S)`, ` HOVERUNSELECTED`, `SELECTED`, ` UNSELECTED`, ` HOVERSELECTED`, ` SELECTED`, `roomlistcreatecreatebutton`, `roomlistcreatecancelbutton`, `roomlistcreatewindowgamename`, `roomlistcreatewindowpassword`, `roomlistcreatewindowmaxplayers`, `roomlistcreatewindowminlevel`, `roomlistcreatewindowmaxlevel`, `roomlistcreatewindowunlistedcheckbox`, `roomlistcreatewindowunlistedlabel`, `\'s game`, `newbonklobby`, `newbonklobby_chat_content`, `newbonklobby_settingsbox`, `newbonklobby_tooltip`, `newbonklobby_modetext`, `newbonklobby_maptext`, `newbonklobby_mapauthortext`, `newbonklobby_mappreviewcontainer`, `newbonklobby_roundsinput`, `newbonklobby_specbox_elementcontainer`, `newbonklobby_playerbox_elementcontainer`, `newbonklobby_playerbox_middleline`, `newbonklobby_playerbox_leftelementcontainer`, `newbonklobby_playerbox_rightelementcontainer`, `maploadwindowsearchinput`, `newbonklobby_teambuttonscontainer`, `newbonklobby_ffabutton`, `newbonklobby_specbutton`, `newbonklobby_redbutton`, `newbonklobby_bluebutton`, `newbonklobby_greenbutton`, `newbonklobby_yellowbutton`, `newbonklobby_teamlockbutton`, `newbonklobby_votewindow_container`, `newbonklobby_votewindow_close`, `newbonklobby_votewindow_thumbcontainer`, `newbonklobby_votewindow_maptitle_name`, `newbonklobby_votewindow_maptitle_author`, `newbonklobby_votewindow_votebutton_up`, `newbonklobby_votewindow_votebutton_down`, `newbonklobby_votewindow_votebutton_favourite`, `newbonklobby_votewindow_votecount_up`, `newbonklobby_votewindow_votecount_down`, `newbonklobby_startbutton`, `newbonklobby_mapbutton`, `newbonklobby_readybutton`, `newbonklobby_modebutton`, `newbonklobby_editorbutton`, `newbonklobby_linkbutton`, `newbonklobby_teamsbutton`, `newbonklobby_teams_middletext`, `mapChosen`, `backPressed`, `chat_rate_limit`, `* You\'re doing that too much!`, `#cc4444`, `ABORT`, `START`, `https://bonk.io/`, `* Send this link to your friends so they can join this game directly`, `#0955c7`, `* Your clipboard has been set to:`, `textarea`, `readonly`, `absolute`, `-9999px`, `copy`, `newbonklobby_chat_status`, `[`, `]`, `newbonklobby_chat_link`, `* Game starting in `, `* Countdown aborted!`, `newbonklobby_playerentry_menuhighlighted`, `mousemove`, `The editor hasn\'t been added to this game yet. In the meantime, you can still create maps on Bonk 1 and they will instantly be playable here.`, `* You and `, ` are now friends`, `#00675d`, `newbonklobby_chat_br`, `newbonklobby_chat_msg_name`, `newbonklobby_mapsuggest_low`, ` requests `, `newbonklobby_mapsuggest_high`, `[Load]`, `#7a199a`, `#448aff`, `newbonklobby_chat_msg_colorbox`, `newbonklobby_chat_msg_avatar`, `: `, `newbonklobby_chat_msg_txt`, ` has joined the game`, ` has left the game`, `#800d6e`, ` has given host privileges to `, `, who is now the game host.`, `* You are now the host of this game`, `newbonklobby_playerentry`, `newbonklobby_playerentry_half`, `newbonklobby_playerentry_avatar`, `newbonklobby_playerentry_name`, `newbonklobby_playerentry_level`, `Level `, `newbonklobby_playerentry_balance`, `newbonklobby_playerentry_balance_buff`, `+`, `newbonklobby_playerentry_balance_nerf`, `graphics/ping_5.png`, `newbonklobby_playerentry_ping`, `newbonklobby_playerentry_pingtext`, `graphics/readytick.png`, `newbonklobby_playerentry_ready`, `graphics/host_0.png`, `newbonklobby_playerentry_host`, `newbonklobby_playerentry_menu`, `newbonklobby_playerentry_menu_button`, `KICK`, `UNMUTE`, `newbonklobby_playerentry_menu_button_warn`, `MUTE`, `MOVE TO...`, `newbonklobby_playerentry_menu_submenu`, `SPECTATE`, `RED TEAM`, `BLUE TEAM`, `GREEN TEAM`, `YELLOW TEAM`, `GIVE HOST`, `NERF `, `BUFF `, `NERF/BUFF`, `newbonklobby_playerentry_balancecontainer`, `newbonklobby_playerentry_balancetext`, `input`, `range`, `compactSlider`, `slider`, `newbonklobby_playerentry_balanceslider`, `UNFRIEND`, `ACCEPT FRIEND`, `ADD FRIEND`, `tab`, `graphics/ping_`, `Tab`, `-ms`, `graphics/host_`, `newbonklobby_teamlockbutton_warn`, `newbonklobby_teamlockbutton_nomouse`, `newbonklobby_teambuttonscontainer_2`, `newbonklobby_mapthumb`, `newbonklobby_mapthumb_image`, `TEAMS ON`, `TEAMS OFF`, `newbonklobby_votewindow_image`, `k`, ` accepted your friend request`, ` sent you a friend request`, `Accept`, `maploadwindow`, `maploadwindowcontainer`, `maploadwindow_close`, `maploadwindowtoptext`, `maploadwindowmapscontainer`, `maploadtypedropdown`, `maploadtypedropdowntitle`, `maploadtypedropdownoption1`, `maploadtypedropdownoption2`, `maploadtypedropdownoption3`, `maploadtypedropdownoption4`, `maploadtypedropdownoption7`, `maploadtypedropdownoption8`, `maploadtypedropdownoption_hotdeatharrows`, `maploadtypedropdownoption10`, `maploadtypedropdownoption11`, `maploadtypedropdownarrow`, `maploadwindowhotnessslider`, `maploadwindowhotnesssliderinput`, `maploadwindowstatustext`, `maploadwindowsearchbutton`, `maploadwindowsearchoptions`, `maploadwindowsearchoptions_sortby`, `maploadwindowsearchoptions_namelabel`, `maploadwindowsearchoptions_authorlabel`, `maploadwindowsearchoptions_nameindicator`, `maploadwindowsearchoptions_authorindicator`, `BEST`, `SORT BY: `, `maploadwindowoptionselected`, `b2picks`, `NEWEST`, `hot`, `curated`, `authorsown`, `favs`, `b2own`, `b2hotgeneral`, `b2hotdeatharrows`, `b2favs`, `both`, `dropdown-option-disabled`, `www.bleh.com/?`, `?`, `&`, `search`, `Fetching...`, `b2search`, `BONK 1: SEARCH RESULTS`, `BONK 1: TOP RATED`, `BONK 1: COMMUNITY PICKS`, `curated_arrows`, `B1: ARROW PICKS`, `HOT`, `b2hotgrapple`, `B2: GRAPPLE`, `b2fresh`, `B2: FRESH`, `MY FAVS`, `MY MAPS`, `PICKS`, `SEARCH RESULTS`, `best`, `newest`, `false`, `https://bonk2.io/scripts/map_getsearch.php`, `Fetch error`, `https://bonk2.io/scripts/map_getfresh.php`, `https://bonk2.io/scripts/map_getfave.php`, `b2hotedits`, `https://bonk2.io/scripts/hotmaps/cache_edits_`, `.txt`, `https://bonk2.io/scripts/hotmaps/cache3_`, `_`, `https://bonk2.io/scripts/hotmaps/picks.txt`, `https://bonk2.io/scripts/map_getown.php`, `https://bonk2.io/scripts/map_b1_getfave.php`, `https://bonk2.io/scripts/map_b1_getown.php`, `https://bonk2.io/scripts/map_b1_getbest.php`, `ctr`, `https://bonk2.io/scripts/map_b1_getsearch.php`, `maploadwindowbarcontainer_picks`, `maploadwindowbarcontainer`, `maploadwindowbarcontainer_left`, `maploadwindowbarcontainer_right`, `maploadwindowbarcontainer_novotes`, `maploadwindowtext`, `maploadwindowtextvotediff_picks`, `maploadwindowtextvotediff`, `No Maps`, `maploadwindowmapdiv`, `maploadwindowtextname`, `maploadwindowtextauthor`, `maploadwindowtextmode`, `Any Mode`, `maploadwindowtextage`, `YYYY-MM-DD HH:mm:ss`, `maploadwindowunvfavbutton`, `UNFAV`, `0.3`, `maploadwindowmapdivedit`, `maploadwindowtextbasedon`, `based on`, `maploadwindowtextoriginalname`, `maploadwindowtextoriginalauthor`, `maploadwindowmapdiv_picks`, `maploadwindowtext_picks`, `maploadwindowtextname_picks`, `maploadwindowtextauthor_picks`, `maploadwindowtextmode_picks`, `maploadwindowtextaddedby_picks`, `Added by: `, `maploadwindowtextcomment_picks`, `maploadwindowtextage_picks`, `maploadwindowtextpublished`, `Public`, `Private`, `maploadwindowdeletebutton`, `https://bonk2.io/scripts/map_delete.php`, `thumbsup`, `thumbsdown`, `maploadwindowmapdivb1`, ` -`, `b2`, `Future map version, please refresh page`, `noauthor`, `noname`, `Unnamed`, `Def Fix`, `Spawn`, `Def pris`, `Def gear`, `unknown shape ID`, `Cap Zone Body`, `simpleMenuConainer_UIContainer`, `bgreplay`, `bgreplay_timescrub`, `https://bonk2.io/scripts/replay_get.php`, `https://bonk2.io/scripts/replay_report.php`, `0x`, `mapeditorcontainer`, `mapeditor`, `mapeditor_close`, `mapeditor_midbox_previewcontainer`, `mapeditor_leftbox_newcolorbox`, ` (edit)`, `LOADEDMAP`, `mapeditor_midbox_newbutton`, `mapeditor_midbox_loadbutton`, `mapeditor_midbox_savebutton`, `mapeditor_midbox_undobutton`, `mapeditor_midbox_redobutton`, `mapeditor_midbox_testbutton`, `mapeditor_save_window`, `mapeditor_save_overwrite_window`, `mapeditor_save_window_save`, `mapeditor_save_window_cancel`, `mapeditor_save_window_field`, `mapeditor_save_window_public`, `mapeditor_save_overwrite_window_save`, `mapeditor_save_overwrite_window_cancel`, `NEW`, `NEWMAP`, `https://bonk2.io/scripts/map_save_pub.php`, `overwrite_confirm`, `Map save error`, `mapeditor_bp_type`, `BPTYPE`, `mapeditor_bp_x`, `BPX`, `mapeditor_bp_y`, `BPY`, `mapeditor_bp_angle`, `BPANGLE`, `mapeditor_bp_bounciness`, `BPBOUNCINESS`, `mapeditor_bp_density`, `BPDENSITY`, `mapeditor_bp_friction`, `BPFRICTION`, `mapeditor_bp_fricplayers`, `BPFRICPLAYERS`, `mapeditor_bp_bullet`, `BPBULLET`, `mapeditor_bp_collidegroup`, `BPCOLLIDEGROUP`, `mapeditor_bp_collidewith`, `BPCOLLIDEWITH`, `mapeditor_mv_xv`, `MVXV`, `mapeditor_mv_yv`, `MVYV`, `mapeditor_mv_startspin`, `MVSTARTSPIN`, `mapeditor_mv_lineardrag`, `MVLINEARDRAG`, `mapeditor_mv_spindrag`, `MVANGULARDRAG`, `mapeditor_mv_fixedrotation`, `MVFIXEDROTATION`, `mapeditor_mv_xforce`, `MVXFORCE`, `mapeditor_mv_yforce`, `MVYFORCE`, `mapeditor_mv_fd`, `MVFORCEDIRECTION`, `mapeditor_mv_at`, `MVAPPLYTORQUE`, `NEWCIRCLEPLAT1`, `Click on the stage to mark where you want the center of the circle to be. Click Cancel Drawing at the top to abort.`, `NEWCIRCLEPLAT2`, `Move the mouse to set the circle size, and click again when you\'re happy.`, `NEWCIRCLEPLAT3`, `Platform created. Give it a name to keep things organised.`, `NEWBOXPLAT1`, `Click on the stage where you want one end of the rectangle to be.`, `NEWBOXPLAT2`, `Click on the stage where you want the other end of the rectangle to be.`, `NEWBOXPLAT3`, `Move the mouse to set the rectangle height, and click again when you\'re happy.`, `NEWBOXPLAT4`, `NEWPOLYPLAT1`, `Click on the stage to set the center point of the polygon. When scaling or rotating the polygon, this is the point it will be done around. It should be in the center of all the points, but it doesn\'t need to be perfect.`, `NEWPOLYPLAT2`, `Click somewhere to place the first point of the polygon. You can place as many points as you like, but remember that only convex polygons can have physics.`, `NEWPOLYPLAT3`, `Continue clicking to keep placing more points of the polygon. Click the first point to complete the shape. You can place as many points as you like, but remember that only convex polygons can have physics.`, `NEWPOLYPLAT4`, `SHAPEFRICPLAYERS`, `Whether or not this platforms friction value will also apply friction to players.\n\nOVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`, `SHAPEFRIC`, `How much friction this shape has. Platforms with higher friction will slow down more when sliding against other platforms.\n\nOVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`, `SHAPEDENSITY`, `How dense this shape is. Higher density shapes are heavier than lower density shapes of the same size.\n\nOVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`, `SHAPEBOUNCINESS`, `How fast this or another shape moves after a collision. If two shapes with different bounciness values collide, if both values are positive, the higher bounciness value is used. If one is negative, they are combined, for example 0.8 and -0.5 = 0.3. So in most cases, use a number between -1 and 0 to make this platform less bouncy. Players are 0.95.\n\nOVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`, `SHAPEDEATH`, `Kills players if they touch it.`, `SHAPENOPHYSICS`, `If no physics is enabled, this shape will only be visual, it won\'t take part in any physics calculations. Use this for scenery and cosmetic details. You should set as many of your shapes as possible to be no-physics, to reduce the lag on your map. Non-convex polygon shapes must be no-physics.`, `SHAPENOGRAPPLE`, `If no grapple is enabled, players will not be able to grapple it when playing Grapple mode. If no physics is on, you don\'t need to turn on no grapple as well. If you want to be able to grapple this shape but you don\'t want players to collide with it, turn off \'Collide with: Players\' in Basic Properties and leave \'no grapple\' off.`, `SHAPEINNERGRAPPLE`, `If inner grapple is enabled, players passing through this shape (because its \'Collide with: players\' is off) will be able to initiate a grapple on the edge of the shape from inside it. If it\'s disabled, they wont.`, `SHAPESHRINK`, `If this shape is a rectangle or circle, it can shrink gradually.`, `POLYSCALE`, `Use this to shrink or grow the polygon shape. All the points in the polygon will be scaled from the center point, set when the shape was created.`, `POLYANGLE`, `Use this to rotate the polygon shape, around the center point, set when the shape was created.`, `POLYY`, `The Y position of the polygon shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`, `POLYX`, `The X position of the polygon shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`, `POLYCONVEX`, `Whether or not your polygon shape is convex. Polygon shapes must be convex if you want them to have physics. Google concave vs convex if you don\'t know the difference! The easiest way to remember is that concave shapes have \'caves\' in them, convex shapes don\'t!`, `CIRCLERADIUS`, `The radius of the circle shape.`, `CIRCLEY`, `The Y position of the circle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`, `CIRCLEX`, `The X position of the circle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`, `BXANGLE`, `The angle of the rectangle shape, relative to the angle of the platform.`, `BXHEIGHT`, `The height of the rectangle shape.`, `BXWIDTH`, `The width of the rectangle shape.`, `BXY`, `The Y position of the rectangle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`, `BXX`, `The X position of the rectangle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`, `JOINTBREAKFORCE`, `If this is set to 0, the joint will never break. If it is set higher than zero, the joint will break if more than that much force is put through it. This force can come from the weight of the platforms themselves, and from collisions.`, `JOINTDRAWLINE`, `Whether or not to draw a line for the joint in game. NOTE: lines are always drawn for joints inside the editor.`, `LPJMOVEFORCE`, `How much force is used to accelerate the platform along the path.`, `LPJMOVESPEED`, `The speed limit of the platform. If it moves faster than this speed, the move force will be applied to prevent it from moving faster than this speed limit.`, `LPJPATHLENGTH`, `How far the platform moves before changing direction.`, `LPJPATHANGLE`, `The angle of the path the platform moves along.`, `LSJSPRINGLENGTH`, `The default length of the spring. It will stretch longer than this length if the force is too weak to move the platform.`, `LSJSPRINGFORCE`, `The strength of the spring, how much force it applies to move the platform. If it is too weak it wont be able to hold the platform up.`, `JOINTCC`, `This checkbox will only do anything if the joints Attach To has been set to another platform. If it is checked, this platform will collide with that platform, if it\'s not then it wont.`, `RODDAMPING`, `This will only do anything if the Softness isn\'t set to zero. Increasing damping will mean that the platform doesn\'t bounce forever when the joint is soft.`, `RODSOFTNESS`, `How soft this joint is - how much the rod joint is allowed to stretch or compress from its original length. The default is set to 0.1 because some flexibility helps prevent glitches, but use 0 if you want it to be rigid.`, `RODATTATCHY`, `The Y co-ordinate of where the far end of this joint attaches to, where 0,0 is the center.`, `RODATTATCHX`, `The X co-ordinate of where the far end of this joint attaches to, where 0,0 is the center.`, `RODLOCALY`, `The Y co-ordinate of where on this platform the rod joint attaches to.`, `RODLOCALX`, `The X co-ordinate of where on this platform the rod joint attaches to.`, `RVANGLETO`, `This will only do anything if Angle Limit is checked. If so, the joint will not be allowed to rotate outside of these two angles.`, `RVANGLEFROM`, `This will only do anything if angle limit is checked. If so, the joint will not be allowed to rotate outside of these two angles.`, `RVANGLELIMIT`, `Prevent this joint from rotating outside of the specified angles. Make sure you set the from and to angles.`, `RVTURNFORCE`, `This will only do anything if Enable Motor is checked. The amount of force used to rotate the platform.`, `RVTURNSPEED`, `This will only do anything if Enable Motor is checked. The max speed the motor will accelerate the platform to.`, `RVENABLEMOTOR`, `Whether the joint will apply a force to turn the platform.`, `RVPIVOTY`, `The Y co-ordinate of the point this platform will rotate around. This point is always relative to the position of the platform.`, `RVPIVOTX`, `The X co-ordinate of the point this platform will rotate around. This point is always relative to the position of the platform.`, `RVATTATCHTO`, `Use this to select a platform to attach the pivot point to.`, `RODATTACHTO`, `Use this to select a platform to attach the far end of the rod joint to.`, `How the physics of this platform behaves.\nStationary: Never moves.\nFree moving: Moves and collides with other platforms.\nKinematic: Moves but will never be affected by anything else. They will pass through other kinematic or static bodies. Use the start speed/spin values to make them move.`, `The X position of this body. 0,0 is the center of the stage.`, `The Y position of this body. 0,0 is the center of the stage.`, `The angle of this platform, in degrees, clockwise.`, `How fast this or another platform moves after a collision. If two shapes with different bounciness values collide, if both values are positive, the higher bounciness value is used. If one is negative, they are combined, for example 0.8 and -0.5 = 0.3. So in most cases, use a number between -1 and 0 to make this platform less bouncy. Players are 0.95.\n\nOVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`, `How dense this shape is. Higher density shapes are heavier than lower density shapes of the same size.\n\nOVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`, `How much friction this shape has. Platforms with higher friction will slow down more when sliding against other platforms.\n\nOVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`, `Whether or not this platforms friction value will also apply friction to players.\n\nOVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`, `The collision group this platform belongs to. You can put platforms into categories, and then set any platform not to collide with those categories.`, `Which collision groups this platform will collide with.`, `The X velocity this platform starts with.`, `The Y velocity this platform starts with.`, `The rotational velocity this platform starts with.`, `How much this platforms movement slows down over time, even if it doesn\'t collide with anything.`, `How much this platforms rotation slows down over time, even if it doesn\'t collide with anything.`, `Set this to Yes to force this platform to always stay at the same angle. If this platform is involved in a rotation joint, fixed rotation won\'t work.`, `How much force to constantly apply to this platform, in the X axis.`, `How much force to constantly apply to this platform, in the Y axis. Gravity is 20, so set this to -20 to make it float.`, `Absolute: The Apply X and Y Force values are absolute, so X is always left/right and Y is always up/down.\nRelative: X and Y are relative to the angle of the platform itself. You can use this to create objects that behave like rockets, accelerating in the direction they are facing. `, `How much torque to constantly apply to this platform, to cause it to spin.`, `CANCELDRAWING`, `Drawing cancelled.`, `CAPSHAPE`, `Capture zones use pre existing shapes to set their boundaries. Select the shape that this capture zone will use. You can use any shape on your map, so it can be a single shape in a stationary body, or a shape that\'s part of a complex, moving platform.`, `CAPTIME`, `How long in seconds this spawn point will take to be captured.`, `CAPTYPE`, `When set to a normal cap zone, players will touch the cap zone to gradually capture it and win the game, either individually or as a team. Instantly win cap zones will instantly win the game for one team. These instant team cap zones aren\'t triggered by players, but by other platforms touching the cap zone. `, `GRIDSIZE`, `The size of the snap grid, make sure to turn it on with the grid button in the top left. `, `SPAWNX`, `The X position of the spawn point.`, `SPAWNY`, `The Y position of the spawn point.`, `SPAWNXV`, `Players spawning at this point will start with this X velocity`, `SPAWNYV`, `Players spawning at this point will start with this Y velocity`, `SPAWNBOXES`, `Choose which players will spawn at this point.`, `SPAWNPRIORITY`, `Higher priority spawn points will be used to spawn players before lower priority spawn points. For example if there are 3 red spawn points with priorities 100, 50 and 10, and there are two red players, they will randomly spawn at the points with priority 100 and 50.`, `If you are having issues with this platform passing through other platforms at high speed, or other platforms moving at high speed passing through this one, turn on Anti Tunneling to prevent it from happening. This increases lag, so only use it where it\'s necessary.`, `MSCOMPLEXPHYSICS`, `Turn this on to increase the accuracy of the physics calculations. If you are stacking lots of free moving objects on top of each other, this will help to prevent them from collapsing inside each other, and it will help prevent objects from slowly moving through gaps they shouldn\'t fit through. This increases lag, so only use it if your map doesn\'t work without it.`, `MSMAPSIZE`, `The size of the map, relative to players. Place some spawns down before changing this to see the effect it\'s having.`, `MSPLAYERSDONTCOLLIDE`, `If this is checked, players won\'t collide.`, `MSRESPAWN`, `If this is checked, players will respawn when they die. Games must be won by capturing cap zones.`, `FORMODE`, `Indicate what mode this map has been designed for. This is just to indicate to players what mode you designed it for, it does not affect which hot list your map will be shown in.`, `MSFLY`, `If this is checked, players can fly.`, `mapeditor_midbox_shapecount`, `mapeditor_midbox_explain`, `mapeditor_midbox_modebox`, `mapeditor_midbox_modebox_select`, `mapeditor_modeselect`, `Any`, `option`, `mapeditor_leftbox_scrollcontainer`, `mapeditor_leftbox_addbutton`, `mapeditor_leftbox_deletebutton`, `grabready`, `grabbing`, `inputready`, `crosshair`, `2px solid red`, `mapeditor_leftbox_createmenucontainerleft`, `mapeditor_leftbox_createmenucontainerright`, `mapeditor_leftbox_createmenu_platformmenu`, `mapeditor_leftbox_createmenu_spawn`, `mapeditor_leftbox_createmenu_capzone`, `mapeditor_leftbox_createmenu_platform_s`, `mapeditor_leftbox_createmenu_platform_d`, `mapeditor_leftbox_createmenu_platform_np`, `mapeditor_leftbox_createmenu_platform_circle`, `mapeditor_leftbox_createmenu_platform_rectangle`, `mapeditor_leftbox_createmenu_platform_polygon`, `mapeditor_leftbox_copywindow`, `mapeditor_rightbox_newjointbutton`, `mapeditor_rightbox_newjointmenucontainer`, `mapeditor_rightbox_newjointmenu`, `mapeditor_rightbox_newjointmenu_rv`, `mapeditor_rightbox_newjointmenu_lpj`, `mapeditor_rightbox_newjointmenu_lsj`, `mapeditor_rightbox_newjointmenu_rod`, `rotating`, `rod`, `mapeditor_leftbox_copybutton`, `mapeditor_leftbox_copywindow_mvx`, `mapeditor_leftbox_copywindow_mvy`, `mapeditor_leftbox_copywindow_mix`, `mapeditor_leftbox_copywindow_miy`, `mapeditor_leftbox_copywindow_r-90`, `mapeditor_leftbox_copywindow_r180`, `mapeditor_leftbox_copywindow_r90`, `mapeditor_leftbox_copywindowbutton`, `mapeditor_leftbox_deletebuttonconfirm`, `mapeditor_leftbox_upbutton`, `mapeditor_leftbox_downbutton`, `mapeditor_midbox_playbutton`, `mapeditor_rightbox_namefield`, `mapeditor_rightbox_platformparams`, `mapeditor_rightbox_spawnparams`, `mapeditor_rightbox_capzoneparams`, `mapeditor_rightbox_mapparams`, `mapeditor_rightbox_basicheading`, `mapeditor_rightbox_dynamicheading`, `mapeditor_rightbox_jointheading`, `mapeditor_rightbox_shapeheading`, `mapeditor_rightbox_table_simple`, `mapeditor_rightbox_table_dynamic`, `mapeditor_rightbox_shapetablecontainer`, `mapeditor_rightbox_jointtablecontainer`, `mapeditor_rightbox_shapeaddcontainer`, `mapeditor_rightbox_addnewshapebutton`, `mapeditor_rightbox_shapeaddmenucontainer`, `mapeditor_rightbox_shapeaddmenu_rectangle`, `mapeditor_rightbox_shapeaddmenu_circle`, `mapeditor_rightbox_shapeaddmenu_polygon`, `mapeditor_rightbox_table_x`, `mapeditor_rightbox_table_y`, `mapeditor_rightbox_table_angle`, `mapeditor_rightbox_table_restitution`, `mapeditor_rightbox_table_density`, `mapeditor_rightbox_table_friction`, `mapeditor_rightbox_table_frictionplayers`, `mapeditor_rightbox_table_bullet`, `mapeditor_rightbox_table_filtercategory`, `mapeditor_rightbox_table_collideP`, `mapeditor_rightbox_table_collideA`, `mapeditor_rightbox_table_collideB`, `mapeditor_rightbox_table_collideC`, `mapeditor_rightbox_table_collideD`, `mapeditor_rightbox_table_type`, `mapeditor_rightbox_table_xvel`, `mapeditor_rightbox_table_yvel`, `mapeditor_rightbox_table_av`, `mapeditor_rightbox_table_ld`, `mapeditor_rightbox_table_ad`, `mapeditor_x_down`, `mapeditor_y_down`, `mapeditor_angle_down`, `mapeditor_restitution_down`, `mapeditor_density_down`, `mapeditor_friction_down`, `mapeditor_x_up`, `mapeditor_y_up`, `mapeditor_angle_up`, `mapeditor_restitution_up`, `mapeditor_density_up`, `mapeditor_friction_up`, `mapeditor_xvel_down`, `mapeditor_yvel_down`, `mapeditor_sspin_down`, `mapeditor_ld_down`, `mapeditor_sd_down`, `mapeditor_cfx_down`, `mapeditor_cfy_down`, `mapeditor_cft_down`, `mapeditor_xvel_up`, `mapeditor_yvel_up`, `mapeditor_sspin_up`, `mapeditor_ld_up`, `mapeditor_sd_up`, `mapeditor_cfx_up`, `mapeditor_cfy_up`, `mapeditor_cft_up`, `mapeditor_midbox_settingsbutton`, `mapeditor_midbox_zoom_in`, `mapeditor_midbox_zoom_out`, `mapeditor_midbox_zoom_reset`, `mapeditor_midbox_cancel_drawing`, `mapeditor_midbox_grid`, `Unnamed Shape`, `mapeditor_rightbox_table_fixedrotation`, `mapeditor_rightbox_table_cfx`, `mapeditor_rightbox_table_cfy`, `mapeditor_rightbox_table_cft`, `mapeditor_rightbox_table_forcedirection`, `mapeditor_rightbox_jointwarning`, `mapeditor_midbox_playbutton_play`, `mapeditor_midbox_playbutton_stop`, `mapeditor_table_heading_div`, `mapeditor_leftbox_heading`, `Platforms`, `mapeditor_leftbox_heading_pm`, `table`, `mapeditor_leftbox_platformtable`, `mapeditor_listtable`, `mapeditor_leftbox_itemname`, `Spawns`, `mapeditor_leftbox_spawntable`, `Capture Zones`, `mapeditor_rightbox_table_mapparams`, `Map Properties`, `Grid Size`, `1 - Smallest`, `7 - Regular`, `10`, `11`, `12`, `13 - Biggest`, `Map size`, `int`, `Players don\'t collide`, `checkbox`, `Respawn on death`, `Players can fly`, `Complex Physics`, `Original Map`, `Original Author`, `Contributors`, `mapeditor_rightbox_table_capzone`, `Normal Cap Zone`, `Instant Red Win`, `Instant Blue Win`, `Instant Green Win`, `Instant Yellow Win`, `Type`, `Capture Time`, `Not set`, `Shape to use`, `mapeditor_rightbox_table_spawn`, `Start Speed X`, `Start Speed Y`, `Free For All Uses`, `Red Uses`, `Blue Uses`, `Green Uses`, `Yellow Uses`, `Priority`, `mapeditor_rightbox_table_shape_container`, `mapeditor_rightbox_table_shape`, `Rotating`, `Nothing`, `Attach To`, `Pivot X`, `mapeditor_tablefont_green`, `Pivot Y`, `Enable Motor`, `-Max Speed`, `-Turn Force`, `Angle Limit`, `-From (angle)`, `-To (angle)`, `Break force`, `Col attached`, `Draw line`, `Soft Rod`, `Local X`, `Local Y`, `Attach X`, `mapeditor_tablefont_red`, `Attach Y`, `Softness`, `Damping`, `Springy`, `Spring Force`, `Spring Length`, `Follows Path`, `Path Angle`, `Path Length`, `Move Speed`, `Move Force`, `mapeditor_rightbox_shapebutton`, `DELETE JOINT`, `mapeditor_rightbox_table_shape_container_collapsed`, `mapeditor_field`, `mapeditor_rightbox_table_shape_headerfield`, `fieldShadow`, `mapeditor_rightbox_table_shape_shapetype`, `#989898`, `mapeditor_rightbox_table_shape_colorpreview`, `mapeditor_rightbox_table_shape_pm`, `Rectangle`, `Polygon`, `Width`, `Height`, `Angle`, `Radius`, `Convex`, `#CC0000`, `Scale`, `Shrink`, `No physics`, `No grapple`, `Inner grapple`, `Death`, `Bounciness`, `Density`, `Friction`, `Fric players`, `mapeditor_rightbox_moveshapebuttonleft`, `UP`, `mapeditor_rightbox_moveshapebuttonright`, `DOWN`, `DELETE SHAPE`, `DUPLICATE SHAPE`, `DUP IDENTICAL`, `DUP INVERT X`, `DUP INVERT Y`, `DUP INVERT X+Y`, `mapeditor_rightbox_table_leftcell`, `mapeditor_rightbox_table_rightcell`, `mapeditor_field_text`, `mapsizeslider`, `mapeditor_field_slider`, `mapeditor_field_slider_span`, `mapeditor_field_spacing_bodge`, `mapeditor_field_button`, `mapeditor_row_select`, `null`, `float`, `mapeditor_field_color`, ` (Warning: No spawn points)`, ` physics shapes: no lag`, ` physics shapes: map may be a bit laggy`, ` physics shapes: probably laggy for some players`, ` physics shapes: laggy for most players`, ` physics shapes: this map is probably unplayable`, `Advise msg `, ` not found`, `mapeditor_colorpicker`, `mapeditor_colorpicker_canvas`, `mapeditor_colorpicker_canvas_crosshair`, `mapeditor_colorpicker_brightness_slider`, `mapeditor_colorpicker_existingcontainer`, `mapeditor_colorpicker_righttile`, `mapeditor_colorpicker_lefttile`, `mapeditor_colorpicker_savebutton`, `mapeditor_colorpicker_cancelbutton`, `mapeditor_colorpicker_existingtile`, `footBounce`, `footGoal`, `disc`, `footKick`, `wall`, `Blue`, `Red`, `scoreAnimation`, `Game starts in`, `-150`, `eNrFlTFr20AUx09yXVlqhlD8ATRkUMDUiR1oNh3BwQQSKKaEFLJIdWzkypKR3KHJ4iGQ0XMy5RMEshd6pB8hX8AduxQv2XNSTmfdyYesLH3L6Y4fuv97%2Br8nTVH6wxEog%2FW25fX1duB%2F97qh3viwBdZsx3Ud33O8gX8Gd0AccAMwYf7rxWHOyf7y%2FE%2F7rnqR7KFBQEVTyqMQKICPEn8Ap7vMSkMG9XodSJTzIctz0jBvGEaKd1EeX6vVgGT%2BvY7ixnxsxmHOgCBku6%2BVFykha%2FLy8C6T0pfJ8islVuKCByKeKQHlD9iVLwF%2FTnmBHlSQz7x%2Fh135T4heySOOE9UHvpKHK%2FKoIL%2B6pd7HbbiX6jw9bTF4TCxWpie%2Fr%2BIj2oBz7o1vwMl9iCW3CO%2BQtcruUyXfh01ckoI8bQLOirCDeH4wGKQ%2BvZNjMTnWD37NuXwFJVwISQS3QGacVI6crv7JtcZRbZE%2FYzOTi9Y2044kZ3gGl%2Bae5GL%2BNJ4epqebYjtURtgJVqAfRkKhWCjJ7f8L7TBuTYSWUG%2FCXrwhbJj4YliQz%2Fw7RG4ihUjSzW%2FINRv%2FEb%2F%2B0G3LdUMmufEt57jcaUmsvPo00CKP9vxgqH8EbzVFHYYjDwb68llJKyLh6SB3GpoKv01WQrc1FeWhUjRzZBujtME%2Bi1EJo80UeiAWgNEAoygvLSKgoUqSGm2eAWvizjU%3D`, `ingamecountdown`, `ingamemapcredit`, `ingamewinner_scores`, `ingamewinner_scores_top`, `ingamewinner_scores_left`, `ingamewinner_scores_right`, `ingamecountdown_text`, `ingamemapcredit_name`, `ingamemapcredit_author`, `ingametextwarning_afk`, `ingametextwarning_spectating`, `ingametextwarning_matchedsoon`, `50px`, `20px`, `#bbbbbb`, `5px`, `futurept_b1`, `FPS`, `use strict`, `river1`, `222`, `classicoverridecss`, `css/classicinactive.css`, `css/classicactive.css`, `function`, `Trying to unsubscribe a non function`, `expires=`, `;path=/`, `1.05`, `1.0`, `contextmenu`, `dragenter`, `dragstart`, `dragend`, `dragleave`, `dragover`, `drag`, `drop`, `en`, `in %s`, `%s ago`, `seconds`, `1 minute`, `%d minutes`, `1 hour`, `%d hours`, `1 day`, `%d days`, `1 month`, `%d months`, `1 year`, `%d years`, `America/New_York`, `@`, `ä`, `ã`, `â`, `á`, `à`, `å`, `é`, `è`, `ë`, `ê`, `§`, `$`, `£`, `€`, `ü`, `û`, `ú`, `ù`, `î`, `ï`, `í`, `ì`, `ÿ`, `ý`, `ö`, `ô`, `õ`, `ó`, `ò`, `nigger`, `nigga`, `cunt`, `coon`, `fag`, `faggot`, `rape`, `negro`, `nig nog`, `nignog`, `asshole`, `homo`, `bastard`, `slut`, `cock`, `fuck`, `bitch`, `pussy`, `whore`, `shit`, `anus`, `bollocks`, `ballsack`, `ball sack`, `suck my`, `tits`, `clit`, `dick`, `fecal`, `feltch`, `masturbate`, `wank`, `pedo`, `paedo`, `pedofile`, `pedophile`, `paedophile`, `paedofile`, `pegging`, `penis`, `piss`, `poof`, `quim`, `rectum`, `scat`, `jizz`, `spunk`, `sperm`, `schlong`, `shlong`, `shemale`, `smut`, `splooge`, `strapon`, `strap on`, `dildo`, `tosser`, `tushy`, `twat`, `vagina`, `white power`, `씨발`, `ㅆㅂ`, `개새`, `십새`, `섹스`, `개자식`, `미친새끼`, `미친년`, `뻑큐`, `뻐큐`, `쌍년`, `쌍놈`, `쌍넘`, `쉑`, `지랄`, `창녀`, `지럴`, `좁밥`, `좆`, `좃까`, `섹`, `병신`, `부랄`, `ㅄ`, `ㅂㅅ`, `ㅈㄹ`, `ㄳㄲ`, `ㄱㅅㄲ`, `불알`, `븅`, `새꺄`, `새갸`, `maingameframe`, `adboxverticalleftCurse`, `adboxverticalCurse`, `https://bonk2.io/scripts/matchmaking_maps.php`, `2,`, `Peer`, `peerjs`, `world`, `K`, `NEWPOLYPLAT2`, `ftu`, `fte`, `footHW`, `footHH`, `footOffsetX`, `footOffsetY`, `swingF`, `panSmooth`, `/unmute "user name"`, `swingD`, `b2Vec2`, `Math`, `Common`, `b2BodyDef`, `Dynamics`, `b2Body`, `mapeditor_modeselect`, `2019-11-29`, `b2FixtureDef`, `b2Fixture`, `b2World`, `b2MassData`, `Requesting to join room...`, `Shapes`, `Collision`, `b2PolygonShape`, `b2CircleShape`, `b2DebugDraw`, `b2Math`, `POLYCONVEX`, `maploadtypedropdowntitle`, `b2RevoluteJointDef`, `Joints`, `found`, `b2RevoluteJoint`, `b2PrismaticJointDef`, `b2PrismaticJoint`, `nu`, `start`, `b2DistanceJoint`, `b2DistanceJointDef`, `b2GearJointDef`, `ù`, `build`];
requirejs([`socketio`, `peer.min`, `physics/box2dweb/Box2DModule`], function(v9H, i9H, u9H) {
    "use strict";
    var v2k = [arguments];
    v2k[5] = -1370839158;
    v2k[4] = 683477412;
    v2k[8] = 1546363176;
    I8yy.w9b();
    v2k[3] = 1654845004;
    //!(I8yy.q1G(0, false, 840214) !== v2k[5] && I8yy.u1G(0, false, 753426) !== v2k[4] && I8yy.u1G(0, false, 235310) !== v2k[8] && I8yy.q1G(0, false, 546740) !== v2k[3] && !I8yy.d8U());
    if (true/*!(I8yy.q1G(0, false, 840214) !== v2k[5] && I8yy.u1G(0, false, 753426) !== v2k[4] && I8yy.u1G(0, false, 235310) !== v2k[8] && I8yy.q1G(0, false, 546740) !== v2k[3] && !I8yy.d8U())*/) {
        function G8(b9H, d9H) {
            var i2k = [arguments];
                        i2k[3] = document[`getElementById`](`newbonkgamecontainer`);
            i2k[2] = document[`getElementById`](`gamerenderer`);
            i2k[9] = [[]];
            function C0z(e9H) {
                var u2k = [arguments];
                u2k[8] = document[`createElement`](`div`);
                u2k[4] = document[`createTextNode`](u2k[0][0]);
                u2k[9] = document[`createElement`](`span`);
                u2k[9][`classList`][`add`](`ingamechatstatus`);
                u2k[9][`appendChild`](u2k[4]);
                u2k[8][`appendChild`](u2k[9]);
                I8yy.w9b();
                i2k[49][`appendChild`](u2k[8]);
                if (i2k[49][`childElementCount`] > 10) {
                    i2k[49][`removeChild`](i2k[49][`firstChild`]);
                }
                i2k[49][`scrollTop`] = i2k[49][`scrollHeight`];
                if (i2k[29]) {
                    i2k[93][`style`][`visibility`] = `inherit`;
                    if (document[`activeElement`] != i2k[50]) {
                        r9z();
                    }
                }
            }
            i2k[6] = [];
            function H0z() {
                var b2k = [arguments];
                                if (i2k[89] != Infinity) {
                    for (b2k[68] = i2k[89]; b2k[68] < i2k[1]; b2k[68]++) {
                        b2k[1] = M0z(b2k[68]);
                        if (i2k[45][b2k[68] + 1]) {
                            I8yy.P2k(0);
                            b2k[2] = i2k[45][I8yy.r2k(b2k[68], 1)];
                        } else {
                            b2k[2] = i2k[20][`step`](i2k[7][b2k[68]], b2k[1], i2k[6][b2k[68]], 30, i2k[31], i2k[63], i2k[36], i2k[81]);
                        }
                        I8yy.H2k(0);
                        i2k[7][I8yy.r2k(b2k[68], 1)] = b2k[2];
                    }
                    i2k[89] = Infinity;
                }
                b2k[5] = Date[`now`]();
                I8yy.H2k(1);
                b2k[8] = I8yy.r2k(i2k[54], b2k[5]);
                i2k[90] += b2k[8];
                i2k[54] = b2k[5];
                b2k[6] = 30;
                while (i2k[90] > 1000 / b2k[6]) {
                    b2k[3] = Date[`now`]();
                    n9z(30, i2k[90]);
                    b2k[4] = Date[`now`]() - b2k[3];
                    I8yy.H2k(2);
                    i2k[90] -= I8yy.A2k(1000, b2k[6]);
                    if (i2k[7][i2k[1]][`fte`] == 0) {
                        b2k[9] = 0;
                        b2k[81] = [];
                        for (b2k[56] = 0; b2k[56] < i2k[7][i2k[1]][`scores`][`length`]; b2k[56]++) {
                            if (i2k[7][i2k[1]][`scores`][b2k[56]]) {
                                if (i2k[7][i2k[1]][`scores`][b2k[56]] > b2k[9]) {
                                    b2k[9] = i2k[7][i2k[1]][`scores`][b2k[56]];
                                    b2k[81] = [b2k[56]];
                                } else if (i2k[7][i2k[1]][`scores`][b2k[56]] == b2k[9]) {
                                    b2k[81][`push`](b2k[56]);
                                }
                            }
                        }
                        if (i2k[31][`gt`] == 1) {
                            if (i2k[31][`maps`][`length`] - 1 <= i2k[7][i2k[1]][`rc`]) {
                                if (b2k[81][`length`] == 1) {
                                    z0z(`gameComplete`);
                                    return;
                                } else {
                                    ;
                                }
                            }
                        }
                        if (i2k[31][`gt`] == 2) {
                            if (b2k[9] >= i2k[31][`wl`]) {
                                z0z(`gameComplete`);
                                return;
                            }
                        }
                    }
                    if (v2k[79][`guest`] == false && i2k[7][i2k[1] - 30] && i2k[31][`ga`] == `b`) {
                        if (i2k[7][i2k[1] - 30][`fte`] == E[`fte`] - 1) {
                            if (i2k[31][`tea`] == false) {
                                if (i2k[7][i2k[1] - 30][`lscr`] == i2k[73][`getLSID`]()) {
                                    i2k[73][`sendReqXP`]();
                                }
                            } else {
                                if (i2k[7][i2k[1] - 30][`lscr`] == i2k[4][i2k[73][`getLSID`]()][`team`]) {
                                    i2k[73][`sendReqXP`]();
                                }
                            }
                        }
                    }
                    if (i2k[7][i2k[1]][`rc`] != i2k[7][i2k[1] - 1][`rc`] && i2k[73][`hostID`] == i2k[73][`getLSID`]() && i2k[31][`q`]) {
                        i2k[73][`updateRC`](i2k[7][i2k[1]][`rc`]);
                    }
                    if (i2k[31][`ga`] == `b` && i2k[1] > 1 && i2k[7][i2k[1]][`rc`] != i2k[7][i2k[1] - 1][`rc`] && i2k[73][`hostID`] == i2k[73][`getLSID`]() && !i2k[31][`q`]) {
                        if (i2k[31][`map`] && i2k[31][`map`][`m`] && i2k[31][`map`][`m`][`dbv`] == 2) {
                            i2k[73][`roundComplete`](i2k[31][`map`][`m`][`dbid`], i2k[31][`mo`]);
                        }
                    }
                }
                if (v2k[79][`resetRenderer`]) {
                    i2k[58][`destroy`]();
                    i2k[58] = null;
                    if (i2k[31][`ga`] == `b`) {
                        i2k[58] = new i2k[70](i2k[2]);
                    } else if (i2k[31][`ga`] == `f`) {
                        i2k[58] = new l8(i2k[2]);
                    }
                    if (i2k[4]) {
                        i2k[58][`setPlayerArray`](i2k[4]);
                    }
                    if (i2k[77] != -1) {
                        i2k[58][`setLocalPlayerID`](i2k[77]);
                    }
                    v2k[79][`resetRenderer`] = false;
                }
                b2k[87] = 1002483686;
                b2k[27] = 885314901;
                b2k[35] = 2;
                I8yy.w9b();
                for (b2k[72] = 1; I8yy.m1f(b2k[72].toString(), b2k[72].toString().length, 57068) !== b2k[87]; b2k[72]++) {
                    I8yy.H2k(3);
                    b2k[61] = I8yy.r2k(1000, b2k[6], i2k[90]);
                    b2k[35] += 2;
                }
                if (I8yy.m1f(b2k[35].toString(), b2k[35].toString().length, 85) !== b2k[27]) {
                    I8yy.H2k(4);
                    b2k[61] = I8yy.r2k(i2k[90], 1889, b2k[6]);
                }
                if (i2k[1] >= 1 && document[`hidden`] == false) {
                    b2k[49] = M0z(i2k[1]);
                    i2k[58][`render`](i2k[7][i2k[1] - 1], i2k[7][i2k[1]], b2k[61], i2k[31], b2k[49], i2k[1]);
                }
                i2k[32][`update`]();
                if (i2k[41][`a`] != i2k[98]) {
                    i2k[2][`style`][`opacity`] = i2k[41][`a`][`toString`]();
                    i2k[82][`style`][`opacity`] = i2k[41][`a`][`toString`]();
                    i2k[98] = i2k[41][`a`];
                }
                if (i2k[36]) {
                    if (i2k[7][i2k[1]][`capZones`] && i2k[7][i2k[1]][`capZones`][0][`f`] == 0) {
                        v2k[79][`enterFrameDispatcher`][`unsubscribe`](H0z);
                        z0z(`tutorialComplete`);
                        return;
                    }
                    if (!i2k[7][i2k[1]][`discs`][1] && !i2k[7][i2k[1]][`discs`][2]) {
                        i2k[58][`tutorialTextSwitchLastScreen`]();
                    }
                }
            }
            i2k[7] = [];
            i2k[4] = [];
            i2k[5] = [];
            i2k[1] = 0;
            i2k[45] = [];
            i2k[89] = Infinity;
            i2k[90] = 0;
            i2k[77] = -1;
            i2k[21] = 0.5;
            i2k[36] = false;
            function s9z() {
                var d2k = [arguments];
                                i2k[41][`a`] = 0;
                i2k[32][`removeAll`]();
                d2k[9] = new TWEEN[`Tween`](i2k[41],i2k[32]);
                d2k[9][`to`]({
                    a: 1.0
                }, 170);
                I8yy.g9b();
                d2k[9][`start`]();
            }
            I8yy.H2k(5);
            i2k[96] = I8yy.A2k(30, 60);
            i2k[39] = 15;
            i2k[12] = 5;
            i2k[51] = -999;
            i2k[81] = i2k[0][1];
            //i2k[56] = E;
            i2k[70] = v2k[80];
            i2k[82] = document[`getElementById`](`xpbarcontainer`);
            i2k[19] = document[`getElementById`](`ingametutorial`);
            i2k[86] = document[`getElementById`](`ingamevotewindow`);
            i2k[24] = document[`getElementById`](`ingamevotewindow_upvote`);
            function z0z(...Z2z) {
                var e2k = [arguments];
                                I8yy.g9b();
                e2k[3] = Z2z[`shift`]();
                for (e2k[4] = 0; e2k[4] < i2k[55][`length`]; e2k[4]++) {
                    if (i2k[55][e2k[4]][`eventName`] == e2k[3]) {
                        i2k[55][e2k[4]][`callback`](...Z2z);
                    }
                }
            }
            i2k[27] = document[`getElementById`](`ingamevotewindow_downvote`);
            i2k[73] = i2k[0][0];
            i2k[93] = document[`getElementById`](`ingamechatbox`);
            i2k[50] = document[`getElementById`](`ingamechatinputtext`);
            i2k[49] = document[`getElementById`](`ingamechatcontent`);
            i2k[93][`style`][`visibility`] = `hidden`;
            function K9z(C9H) {
                var C2k = [arguments];
                                I8yy.g9b();
                if (C2k[0][0][`keyCode`] === 13 && i2k[36] == false) {
                    if (document[`activeElement`] == i2k[50]) {
                        if (i2k[50][`value`][`substring`](0, 1) == `/`) {
                            z0z(`processCommand`, i2k[50][`value`]);
                        } else if (i2k[50][`value`] != ``) {
                            if (i2k[73]) {
                                i2k[73][`chatMessage`](i2k[50][`value`]);
                            }
                        }
                        i2k[50][`value`] = ``;
                        i2k[50][`blur`]();
                        i2k[50][`classList`][`remove`](`ingamechatinputtextbg`);
                        i2k[42][`lockKeyboard`]();
                        r9z();
                    } else {
                        i2k[93][`style`][`visibility`] = `inherit`;
                        i2k[50][`focus`]();
                        i2k[50][`classList`][`add`](`ingamechatinputtextbg`);
                        i2k[42][`unlockKeyboard`]();
                        if (i2k[57]) {
                            clearTimeout(i2k[57]);
                        }
                    }
                }
            }
            i2k[2][`style`][`visibility`] = `hidden`;
            i2k[82][`style`][`visibility`] = `hidden`;
            i2k[29] = false;
            i2k[63] = 1;
            function r9z() {
                I8yy.w9b();
                if (i2k[57]) {
                    clearTimeout(i2k[57]);
                }
                i2k[57] = setTimeout(A9z, 12000);
            }
            function A9z() {
                I8yy.g9b();
                var l2k = [arguments];
                                i2k[93][`style`][`visibility`] = `hidden`;
            }
            function n9z(l9H, o9H) {
                var o2k = [arguments];
                                y9z();
                if (o2k[0][1] < 100) {
                    p9z();
                }
                I8yy.w9b();
                o2k[7] = M0z(i2k[1]);
                if (i2k[45][i2k[1] + 1]) {
                    I8yy.P2k(0);
                    o2k[6] = i2k[45][I8yy.A2k(i2k[1], 1)];
                } else {
                    o2k[6] = i2k[20][`step`](i2k[7][i2k[1]], o2k[7], i2k[6][i2k[1]], o2k[0][0], i2k[31], i2k[63], i2k[36], i2k[81]);
                }
                i2k[1]++;
                i2k[7][i2k[1]] = o2k[6];
                if (i2k[1] >= i2k[96]) {
                    I8yy.H2k(1);
                    i2k[7][I8yy.A2k(i2k[96], i2k[1])] = null;
                }
            }
            i2k[52] = false;
            function M0z(I9H) {
                var I2k = [arguments];
                                I2k[1] = [];
                for (I2k[7] = 0; I2k[7] < i2k[9][`length`]; I2k[7]++) {
                    if (i2k[9][I2k[7]]) {
                        for (I2k[8] = Math[`min`](I2k[0][0], i2k[9][I2k[7]][`length`]); I2k[8] >= 0; I2k[8]--) {
                            if (i2k[9][I2k[7]][I2k[8]]) {
                                I2k[1][I2k[7]] = i2k[9][I2k[7]][I2k[8]];
                                break;
                            }
                        }
                    }
                }
                I2k[6] = 31233399;
                I2k[5] = 698409935;
                I2k[4] = 2;
                for (I2k[2] = 1; I8yy.m1f(I2k[2].toString(), I2k[2].toString().length, 77064) !== I2k[6]; I2k[2]++) {
                    return I2k[1];
                }
                if (I8yy.m1f(I2k[4].toString(), I2k[4].toString().length, 79342) !== I2k[5]) {
                    return I2k[1];
                }
            }
            if (i2k[0][0]) {
                i2k[0][0][`on`](`timeOffsetChanged`, o9z);
                i2k[0][0][`on`](`desyncReq`, O9z);
                i2k[0][0][`on`](`desyncRes`, L9z);
            }
            i2k[32] = new TWEEN[`Group`]();
            i2k[41] = {
                a: 0.0
            };
            function p9z() {
                var F2k = [arguments];
                                F2k[6] = i2k[42][`getInputs`]();
                function A3z(F9H) {
                    var L2k = [arguments];
                                        I8yy.g9b();
                    return L2k[0][0][`left`] || L2k[0][0][`right`] || L2k[0][0][`up`] || L2k[0][0][`down`] || L2k[0][0][`action`] || L2k[0][0][`action2`] || L2k[0][0][`action3`] || L2k[0][0][`ml`] || L2k[0][0][`mr`];
                }
                if (!i2k[9][i2k[77]]) {
                    i2k[9][i2k[77]] = [];
                }
                for (F2k[8] = i2k[1] - 1; F2k[8] >= 0; F2k[8]--) {
                    if (i2k[9][i2k[77]][F2k[8]]) {
                        F2k[5] = i2k[9][i2k[77]][F2k[8]];
                        break;
                    }
                }
                if (!F2k[5] && A3z(F2k[6]) || F2k[5] && !y3z(F2k[6], F2k[5])) {
                    i2k[9][i2k[77]][i2k[1]] = F2k[6];
                    if (i2k[73]) {
                        F2k[3] = v2k[79][`encodeInputs`](F2k[6]);
                        i2k[73][`sendInputs`]({
                            i: F2k[3],
                            f: i2k[1]
                        });
                    }
                    i2k[58][`clearAfkWarn`]();
                }
                function y3z(L9H, J9H) {
                    var J2k = [arguments];
                                        return J2k[0][0][`left`] == J2k[0][1][`left`] && J2k[0][0][`right`] == J2k[0][1][`right`] && J2k[0][0][`up`] == J2k[0][1][`up`] && J2k[0][0][`down`] == J2k[0][1][`down`] && J2k[0][0][`action`] == J2k[0][1][`action`] && J2k[0][0][`action2`] == J2k[0][1][`action2`] && J2k[0][0][`action3`] == J2k[0][1][`action3`] && J2k[0][0][`ml`] == J2k[0][1][`ml`] && J2k[0][0][`mr`] == J2k[0][1][`mr`] && J2k[0][0][`mx`] == J2k[0][1][`mx`] && J2k[0][0][`my`] == J2k[0][1][`my`];
                }
            }
            i2k[98] = 0;
            this[`go`] = function(h9H, X9H, m9H, Q9H, q9H, S9H, w9H) {
                var h2k = [arguments];
                i2k[4] = h2k[0][5];
                i2k[31] = h2k[0][4];
                v2k[79][`aro`] = false;
                if (i2k[36]) {
                    i2k[58] = new U(i2k[2],`game`);
                    i2k[20] = new E();
                } else if (i2k[31][`ga`] == `b`) {
                    i2k[20] = new E();
                    h2k[9] = -292783690;
                    h2k[6] = -903125816;
                    h2k[5] = 2;
                    for (h2k[2] = 1; I8yy.m1f(h2k[2].toString(), h2k[2].toString().length, 53741) !== h2k[9]; h2k[2]++) {
                        i2k[58] = new i2k[70](i2k[2]);
                        h2k[5] += 2;
                    }
                    if (I8yy.m1f(h2k[5].toString(), h2k[5].toString().length, 45080) !== h2k[6]) {
                        i2k[58] = new i2k[70](i2k[2]);
                    }
                    i2k[58] = new i2k[70](i2k[2]);
                } else if (i2k[31][`ga`] == `f`) {
                    i2k[20] = new I8();
                    i2k[58] = new l8(i2k[2]);
                }
                i2k[58][`setPlayerArray`](i2k[4]);
                i2k[58][`setLocalPlayerID`](h2k[0][3]);
                i2k[2][`style`][`visibility`] = `inherit`;
                if (i2k[36] == false && v2k[79][`guest`] == false) {
                    i2k[82][`style`][`visibility`] = `inherit`;
                }
                if (i2k[36]) {
                    i2k[58][`enableTutorialText`]();
                    i2k[58][`setCameraPans`]();
                }
                s9z();
                i2k[77] = h2k[0][3];
                i2k[54] = Date[`now`]();
                i2k[90] = h2k[0][2];
                i2k[1] = h2k[0][1];
                i2k[7][h2k[0][1]] = h2k[0][0];
                i2k[42] = new C8();
                i2k[6] = h2k[0][6];
                i2k[29] = true;
                v2k[79][`enterFrameDispatcher`][`subscribe`](5, H0z);
                $(document)[`on`](`keydown`, K9z);
                F9z();
                if (i2k[31][`map`][`m`][`dbv`] == 2)
                    if (!i2k[36] && v2k[79][`guest`] == false && i2k[31][`map`][`m`][`dbv`] == 2 && v2k[79][`mapsVotedFor`][i2k[31][`map`][`m`][`dbid`]] === undefined && i2k[31][`map`][`m`][`dbid`] > 0) {
                        i2k[73][`getPreVote`](i2k[31][`map`][`m`][`dbid`]);
                    }
            }
            ;
            this[`goInProgress`] = function(z9H, n9H, y9H, p9H, O9H, W9H, Z9H, x9H, M9H) {
                var X2k = [arguments];
                                i2k[4] = X2k[0][8];
                i2k[31] = X2k[0][7];
                v2k[79][`aro`] = false;
                if (i2k[31][`ga`] == `b`) {
                    i2k[20] = new E();
                    i2k[58] = new i2k[70](i2k[2]);
                } else if (i2k[31][`ga`] == `f`) {
                    i2k[20] = new I8();
                    i2k[58] = new l8(i2k[2]);
                }
                i2k[58][`setPlayerArray`](i2k[4]);
                i2k[58][`setLocalPlayerID`](X2k[0][6]);
                i2k[2][`style`][`visibility`] = `inherit`;
                I8yy.g9b();
                if (i2k[36] == false && v2k[79][`guest`] == false) {
                    i2k[82][`style`][`visibility`] = `inherit`;
                }
                if (i2k[36]) {
                    i2k[58][`enableTutorialText`]();
                    i2k[58][`setCameraPans`]();
                }
                s9z();
                i2k[77] = X2k[0][6];
                i2k[54] = Date[`now`]();
                i2k[90] = X2k[0][5];
                i2k[1] = X2k[0][2];
                i2k[7][X2k[0][1]] = X2k[0][0];
                i2k[9] = X2k[0][3];
                i2k[6] = X2k[0][4];
                i2k[9][i2k[77]] = [];
                i2k[42] = new C8();
                for (X2k[8] = X2k[0][1]; X2k[8] < i2k[1]; X2k[8]++) {
                    X2k[0][3] = M0z(X2k[8]);
                    if (i2k[45][X2k[8] + 1]) {
                        I8yy.P2k(0);
                        X2k[2] = i2k[45][I8yy.r2k(X2k[8], 1)];
                    } else {
                        X2k[2] = i2k[20][`step`](i2k[7][X2k[8]], X2k[0][3], i2k[6][X2k[8]], 30, i2k[31], i2k[63], i2k[36], i2k[81]);
                    }
                    I8yy.H2k(0);
                    i2k[7][I8yy.A2k(X2k[8], 1)] = X2k[2];
                }
                i2k[29] = true;
                v2k[79][`enterFrameDispatcher`][`subscribe`](5, H0z);
                $(document)[`on`](`keydown`, K9z);
                F9z();
            }
            ;
            this[`destroy`] = function() {
                var m2k = [arguments];
                                $(document)[`off`](`keydown`, K9z);
                v2k[79][`enterFrameDispatcher`][`unsubscribe`](H0z);
                if (i2k[58]) {
                    i2k[58][`destroy`]();
                    i2k[58] = null;
                }
                if (i2k[73]) {
                    i2k[73][`unOn`](o9z);
                    i2k[73][`unOn`](O9z);
                    i2k[73][`unOn`](L9z);
                    i2k[73] = null;
                }
                i2k[20] = null;
                i2k[9] = null;
                i2k[7] = null;
                i2k[6] = null;
                i2k[45] = null;
                if (i2k[42]) {
                    i2k[42][`destroy`]();
                    i2k[42] = null;
                }
                i2k[93][`style`][`visibility`] = `hidden`;
                i2k[2][`style`][`visibility`] = `hidden`;
                i2k[82][`style`][`visibility`] = `hidden`;
                i2k[19][`style`][`visibility`] = `hidden`;
                i2k[86][`style`][`visibility`] = `hidden`;
                I8yy.g9b();
                if (i2k[81]) {
                    i2k[81] = null;
                }
                if (i2k[57]) {
                    clearTimeout(i2k[57]);
                }
                i2k[55] = [];
                i2k[4] = null;
                i2k[5] = null;
                v2k[79][`aro`] = true;
            }
            ;
            this[`recvArmRecord`] = function(s9H) {
                var Q2k = [arguments];
                                Q2k[7] = Q2k[0][0] == i2k[73][`getLSID`]();
                if (i2k[31][`ga`] != `b`) {
                    if (Q2k[7]) {
                        C0z(`* No replays in Football mode`);
                    }
                    return;
                }
                Q2k[3] = k9z();
                if (i2k[1] <= i2k[51] + i2k[39] * 30) {
                    if (Q2k[7]) {
                        C0z(`* Please wait at least ` + i2k[39] + ` seconds since the last replay`);
                    }
                    return;
                }
                if (Q2k[3] == -1) {
                    if (Q2k[7]) {
                        C0z(`* Recording failed`);
                    }
                    return;
                }
                if (Q2k[3] == -2) {
                    if (Q2k[7]) {
                        C0z(`* Replay must be at least ` + i2k[12] + ` seconds long`);
                    }
                    return;
                }
                i2k[51] = i2k[1];
                if (i2k[73][`getLSID`]() == i2k[73][`hostID`]) {
                    x9z();
                }
                C0z(`* The last ` + i2k[39] + ` seconds have been recorded to the main menu`);
            }
            ;
            function y9z() {
                var q2k = [arguments];
                if (i2k[7][i2k[1]][`fte`] == 1) {
                    if (i2k[52]) {
                        i2k[52] = false;
                        q2k[9] = new v2k[56]();
                        q2k[9][`playerArray`] = [];
                        q2k[8] = -1;
                        for (q2k[2] = i2k[1]; q2k[2] >= 0; q2k[2]--) {
                            if (!i2k[7][q2k[2]]) {
                                break;
                            }
                            if (i2k[1] - q2k[2] >= 59 * 30) {
                                q2k[8] = q2k[2];
                                break;
                            }
                            if (i2k[7][q2k[2]][`ftu`] == 1) {
                                q2k[8] = q2k[2];
                                break;
                            }
                        }
                        if (q2k[8] == -1) {
                            return;
                        }
                        q2k[9][`startingState`] = i2k[7][q2k[8]];
                        q2k[1] = M0z(q2k[8]);
                        for (q2k[98] = 0; q2k[98] < q2k[1][`length`]; q2k[98]++) {
                            if (q2k[1][q2k[98]]) {
                                q2k[1][q2k[98]] = [q2k[1][q2k[98]]];
                            }
                        }
                        q2k[7] = q2k[9][`startingState`][`players`][`slice`]();
                        for (q2k[94] = 0; q2k[94] < q2k[7][`length`]; q2k[94]++) {
                            if (q2k[7][q2k[94]] && i2k[9][q2k[94]]) {
                                q2k[4] = q2k[94];
                                if (!q2k[1][q2k[4]]) {
                                    q2k[1][q2k[4]] = [];
                                }
                                for (q2k[25] = q2k[8] + 1; q2k[25] <= i2k[1]; q2k[25]++) {
                                    if (i2k[9][q2k[4]][q2k[25]]) {
                                        I8yy.P2k(1);
                                        q2k[1][q2k[4]][I8yy.A2k(q2k[8], q2k[25])] = i2k[9][q2k[4]][q2k[25]];
                                    }
                                }
                                if (i2k[4][q2k[4]]) {
                                    q2k[9][`playerArray`][q2k[4]] = i2k[4][q2k[4]];
                                } else if (i2k[5][q2k[4]]) {
                                    q2k[9][`playerArray`][q2k[4]] = i2k[5][q2k[4]];
                                } else {
                                    q2k[9][`playerArray`][q2k[4]] = {
                                        userName: `unknown`,
                                        avatar: {
                                            data: {
                                                bc: 0xcc1111,
                                                layers: []
                                            }
                                        }
                                    };
                                }
                            }
                        }
                        q2k[6] = i2k[6][`slice`](q2k[8], i2k[1]);
                        q2k[9][`inputs`] = q2k[1];
                        q2k[9][`adminInputs`] = q2k[6];
                        q2k[9][`gameSettings`] = JSON[`parse`](JSON[`stringify`](i2k[31]));
                        q2k[9][`gameSettings`][`map`] = null;
                        q2k[9][`mn`] = i2k[31][`map`][`m`][`n`];
                        q2k[9][`ma`] = i2k[31][`map`][`m`][`a`];
                        q2k[9][`rxa`] = i2k[31][`map`][`m`][`rxa`];
                        q2k[9][`rxn`] = i2k[31][`map`][`m`][`rxn`];
                        if (i2k[31][`map`][`m`][`dbv`] == 2 && i2k[31][`map`][`m`][`dbid`] > 0) {
                            q2k[9][`mid`] = i2k[31][`map`][`m`][`dbid`];
                        }
                        q2k[3] = q2k[9][`toDatabase`]();
                        $[`post`](`https://bonk2.io/scripts/replay_submit.php`, {
                            version: v2k[79][`version`],
                            replaydata: q2k[3],
                            mapid: i2k[31][`map`][`m`][`dbid`]
                        })[`done`]((j7z,u7z)=>{}
                        )[`fail`](function(c9H, D9H, Y9H) {
                            var S2k = [arguments];
                        });
                    }
                }
            }
            this[`recvInputs`] = function(N9H, V9H, g9H) {
                var w2k = [arguments];
                                w2k[3] = w2k[0][0];
                w2k[7] = w2k[0][1][`f`];
                w2k[9] = w2k[0][1][`i`];
                if (typeof w2k[7] != `number` || w2k[7] % 1 != 0) {
                    return;
                }
                if (typeof w2k[9] != `object`) {
                    return;
                }
                if (w2k[7] < i2k[1] - i2k[96]) {
                    return;
                }
                if (!i2k[9][w2k[3]]) {
                    i2k[9][w2k[3]] = [];
                }
                if (i2k[9][w2k[3]][w2k[7]]) {
                    return;
                }
                I8yy.P2k(6);
                w2k[8] = I8yy.r2k(w2k[7], 1000, i2k[1], 30);
                if (w2k[0][2] == `p2p`) {
                    if (w2k[7] < i2k[1] - 30 * s8[`npma`]) {
                        i2k[73][`reportP2PMessageIgnored`](w2k[3], w2k[0][1][`c`]);
                        return;
                    }
                }
                i2k[9][w2k[3]][w2k[7]] = w2k[9];
                if (w2k[7] < i2k[89]) {
                    i2k[89] = w2k[7];
                }
            }
            ;
            function L9z(U9H, B9H, a9H) {
                var z2k = [arguments];
                                I8yy.w9b();
                z2k[6] = ``;
                for (z2k[3] = 0; z2k[3] < z2k[0][1][`length`]; z2k[3]++) {
                    if (z2k[3] <= 100 && z2k[0][1][`charAt`](z2k[3]) === z2k[0][1][`charAt`](z2k[3])[`toLowerCase`]()) {
                        z2k[6] += z2k[0][1][`charAt`](z2k[3])[`toUpperCase`]();
                    } else if (z2k[3] <= 100 && z2k[0][1][`charAt`](z2k[3]) === z2k[0][1][`charAt`](z2k[3])[`toUpperCase`]()) {
                        z2k[6] += z2k[0][1][`charAt`](z2k[3])[`toLowerCase`]();
                    } else {
                        z2k[6] += z2k[0][1][`charAt`](z2k[3]);
                    }
                }
                z2k[7] = LZString[`decompressFromEncodedURIComponent`](z2k[6]);
                z2k[8] = dcodeIO[`ByteBuffer`][`fromBase64`](z2k[7]);
                z2k[6] = v2k[56][`pson`][`decode`](z2k[8]);
                z2k[4] = i2k[4][z2k[0][0]][`userName`];
                function B9z(t9H, E9H) {
                    var n2k = [arguments];
                                        for (n2k[7] = 0; n2k[7] < n2k[0][0][`discs`][`length`]; n2k[7]++) {
                        if (n2k[0][0][`discs`][n2k[7]]) {
                            if (!n2k[0][1][`discs`][n2k[7]]) {
                                return false;
                            } else {
                                if (n2k[0][0][`discs`][n2k[7]][`x`] != n2k[0][1][`discs`][n2k[7]][`x`]) {
                                    return false;
                                }
                                if (n2k[0][0][`discs`][n2k[7]][`y`] != n2k[0][1][`discs`][n2k[7]][`y`]) {
                                    return false;
                                }
                                if (n2k[0][0][`discs`][n2k[7]][`xv`] != n2k[0][1][`discs`][n2k[7]][`xv`]) {
                                    return false;
                                }
                                if (n2k[0][0][`discs`][n2k[7]][`yv`] != n2k[0][1][`discs`][n2k[7]][`yv`]) {
                                    return false;
                                }
                            }
                        }
                    }
                    for (n2k[3] = 0; n2k[3] < n2k[0][0][`physics`][`bodies`][`length`]; n2k[3]++) {
                        if (n2k[0][0][`physics`][`bodies`][n2k[3]]) {
                            if (!n2k[0][1][`physics`][`bodies`][n2k[3]]) {
                                return false;
                            }
                            if (n2k[0][0][`physics`][`bodies`][n2k[3]][`p`][0] != n2k[0][1][`physics`][`bodies`][n2k[3]][`p`][0]) {
                                return false;
                            }
                            if (n2k[0][0][`physics`][`bodies`][n2k[3]][`p`][1] != n2k[0][1][`physics`][`bodies`][n2k[3]][`p`][1]) {
                                return false;
                            }
                            if (n2k[0][0][`physics`][`bodies`][n2k[3]][`a`] != n2k[0][1][`physics`][`bodies`][n2k[3]][`a`]) {
                                return false;
                            }
                            if (n2k[0][0][`physics`][`bodies`][n2k[3]][`av`] != n2k[0][1][`physics`][`bodies`][n2k[3]][`av`]) {
                                return false;
                            }
                            if (n2k[0][0][`physics`][`bodies`][n2k[3]][`lv`][0] != n2k[0][1][`physics`][`bodies`][n2k[3]][`lv`][0]) {
                                return false;
                            }
                            if (n2k[0][0][`physics`][`bodies`][n2k[3]][`lv`][1] != n2k[0][1][`physics`][`bodies`][n2k[3]][`lv`][1]) {
                                return false;
                            }
                        }
                    }
                    return true;
                }
                z2k[1] = i2k[7][z2k[0][2]];
                z2k[9] = B9z(z2k[6], z2k[1]);
                if (z2k[9]) {} else {}
            }
            this[`recvRevert`] = function(R9H, j1H) {
                var y2k = [arguments];
                if (i2k[9][y2k[0][0]][y2k[0][1]]) {
                    I8yy.H2k(6);
                    y2k[1] = I8yy.A2k(y2k[0][1], 1000, i2k[1], 30);
                    delete i2k[9][y2k[0][0]][y2k[0][1]];
                    if (y2k[0][1] < i2k[89]) {
                        i2k[89] = y2k[0][1];
                    }
                }
            }
            ;
            this[`recvAdmin`] = function(k1H) {
                var p2k = [arguments];
                                p2k[8] = p2k[0][0][`f`];
                p2k[1] = p2k[0][0][`a`];
                i2k[6][p2k[8]] = p2k[1];
                for (p2k[9] = p2k[8]; p2k[9] < i2k[1]; p2k[9]++) {
                    p2k[2] = M0z(p2k[9]);
                    if (i2k[45][p2k[9] + 1]) {
                        I8yy.H2k(0);
                        p2k[5] = i2k[45][I8yy.r2k(p2k[9], 1)];
                    } else {
                        p2k[5] = i2k[20][`step`](i2k[7][p2k[9]], p2k[2], i2k[6][p2k[9]], 30, i2k[31], i2k[63], i2k[36], i2k[81]);
                    }
                    I8yy.P2k(0);
                    i2k[7][I8yy.r2k(p2k[9], 1)] = p2k[5];
                }
            }
            ;
            function k9z() {
                var O2k = [arguments];
                                O2k[7] = -1;
                for (O2k[1] = i2k[1]; O2k[1] >= 0; O2k[1]--) {
                    if (!i2k[7][O2k[1]]) {
                        break;
                    }
                    if (i2k[1] - O2k[1] >= i2k[39] * 30) {
                        O2k[7] = O2k[1];
                        break;
                    }
                    if (i2k[7][O2k[1]][`ftu`] == 1) {
                        O2k[7] = O2k[1];
                        break;
                    }
                }
                if (i2k[1] - O2k[7] < i2k[12] * 30) {
                    O2k[7] = -2;
                }
                return O2k[7];
            }
            this[`recvAfkWarn`] = function() {
                var W2k = [arguments];
                                i2k[58][`showAfkWarn`]();
            }
            ;
            this[`sendNewPlayerState`] = function(f1H) {
                var Z2k = [arguments];
                                I8yy.P2k(1);
                Z2k[9] = Math[`max`](I8yy.A2k(120, i2k[1]), 0);
                Z2k[2] = i2k[7][Z2k[9]];
                Z2k[3] = v2k[56][`pson`][`encode`](Z2k[2]);
                Z2k[6] = Z2k[3][`toBase64`]();
                Z2k[5] = LZString[`compressToEncodedURIComponent`](Z2k[6]);
                Z2k[1] = ``;
                for (Z2k[13] = 0; Z2k[13] < Z2k[5][`length`]; Z2k[13]++) {
                    if (Z2k[13] <= 100 && Z2k[5][`charAt`](Z2k[13]) === Z2k[5][`charAt`](Z2k[13])[`toLowerCase`]()) {
                        Z2k[1] += Z2k[5][`charAt`](Z2k[13])[`toUpperCase`]();
                    } else if (Z2k[13] <= 100 && Z2k[5][`charAt`](Z2k[13]) === Z2k[5][`charAt`](Z2k[13])[`toUpperCase`]()) {
                        Z2k[1] += Z2k[5][`charAt`](Z2k[13])[`toLowerCase`]();
                    } else {
                        Z2k[1] += Z2k[5][`charAt`](Z2k[13]);
                    }
                }
                Z2k[7] = [];
                Z2k[4] = i2k[7][Z2k[9]][`players`][`slice`]();
                for (Z2k[13] = 0; Z2k[13] < Z2k[4][`length`]; Z2k[13]++) {
                    if (Z2k[4][Z2k[13]]) {
                        Z2k[80] = Z2k[13];
                        a: for (Z2k[86] = i2k[1]; Z2k[86] >= 0; Z2k[86]--) {
                            if (i2k[9][Z2k[80]] && i2k[9][Z2k[80]][Z2k[86]]) {
                                Z2k[17] = v2k[79][`encodeInputs`](i2k[9][Z2k[80]][Z2k[86]]);
                                Z2k[7][`push`]({
                                    p: Z2k[80],
                                    f: Z2k[86],
                                    i: Z2k[17]
                                });
                                if (Z2k[86] <= Z2k[9]) {
                                    break a;
                                }
                            }
                        }
                    }
                }
                Z2k[76] = [];
                for (Z2k[13] = Z2k[9]; Z2k[13] <= i2k[6][`length`]; Z2k[13]++) {
                    if (i2k[6][Z2k[13]]) {
                        Z2k[76][`push`]({
                            f: Z2k[13],
                            a: i2k[6][Z2k[13]]
                        });
                        if (Z2k[13] > i2k[1]) {}
                    }
                }
                Z2k[26] = i2k[31][`map`];
                i2k[31][`map`] = T[`encodeToDatabase`](i2k[31][`map`]);
                if (i2k[73]) {
                    i2k[73][`informInGame`](Z2k[0][0], {
                        state: Z2k[1],
                        stateID: Z2k[9],
                        fc: i2k[1],
                        inputs: Z2k[7],
                        admin: Z2k[76],
                        gs: i2k[31],
                        random: v2k[99][`getRandomOrder`]()
                    });
                }
                i2k[31][`map`] = Z2k[26];
            }
            ;
            this[`allHandlePlayerLeft`] = function(G1H, T1H, K1H) {
                I8yy.g9b();
                var x2k = [arguments];
                                if (i2k[6][x2k[0][1]]) {
                    i2k[6][x2k[0][1]][`playersLeft`][`push`](x2k[0][0]);
                } else {
                    x2k[4] = {
                        playersLeft: [x2k[0][0]],
                        playersJoined: []
                    };
                    i2k[6][x2k[0][1]] = x2k[4];
                }
                if (x2k[0][1] < i2k[89]) {
                    i2k[89] = x2k[0][1];
                }
                i2k[5][x2k[0][0]] = x2k[0][2];
                ;
            }
            ;
            this[`hostHandlePlayerLeft`] = function(r1H) {
                var M2k = [arguments];
                                i2k[5][M2k[0][0]] = i2k[4][M2k[0][0]];
                if (i2k[6][i2k[1]]) {
                    i2k[6][i2k[1]][`playersLeft`][`push`](M2k[0][0]);
                } else {
                    M2k[9] = {
                        playersLeft: [M2k[0][0]],
                        playersJoined: []
                    };
                    i2k[6][i2k[1]] = M2k[9];
                }
                I8yy.w9b();
                if (i2k[73]) {
                    i2k[73][`sendAdminInputs`]({
                        a: i2k[6][i2k[1]],
                        f: i2k[1]
                    });
                }
            }
            ;
            function x9z() {
                var s2k = [arguments];
                                s2k[5] = new v2k[56]();
                s2k[5][`playerArray`] = [];
                s2k[3] = k9z();
                if (s2k[3] == -1) {
                    return;
                }
                if (s2k[3] == -2) {
                    return;
                }
                s2k[5][`startingState`] = i2k[7][s2k[3]];
                s2k[4] = M0z(s2k[3]);
                for (s2k[9] = 0; s2k[9] < s2k[4][`length`]; s2k[9]++) {
                    if (s2k[4][s2k[9]]) {
                        s2k[4][s2k[9]] = [s2k[4][s2k[9]]];
                    }
                }
                s2k[7] = s2k[5][`startingState`][`players`][`slice`]();
                for (s2k[43] = 0; s2k[43] < s2k[7][`length`]; s2k[43]++) {
                    if (s2k[7][s2k[43]]) {
                        s2k[1] = s2k[43];
                        if (!s2k[4][s2k[1]]) {
                            s2k[4][s2k[1]] = [];
                        }
                        if (i2k[9][s2k[43]]) {
                            for (s2k[33] = s2k[3] + 1; s2k[33] <= i2k[1]; s2k[33]++) {
                                if (i2k[9][s2k[1]][s2k[33]]) {
                                    I8yy.P2k(1);
                                    s2k[4][s2k[1]][I8yy.A2k(s2k[3], s2k[33])] = i2k[9][s2k[1]][s2k[33]];
                                }
                            }
                        }
                        if (i2k[4][s2k[1]]) {
                            s2k[5][`playerArray`][s2k[1]] = i2k[4][s2k[1]];
                        } else if (i2k[5][s2k[1]]) {
                            s2k[5][`playerArray`][s2k[1]] = i2k[5][s2k[1]];
                        } else {
                            s2k[5][`playerArray`][s2k[1]] = {
                                userName: `unknown`,
                                avatar: {
                                    data: {
                                        bc: 0xcc1111,
                                        layers: []
                                    }
                                }
                            };
                        }
                    }
                }
                s2k[6] = i2k[6][`slice`](s2k[3], i2k[1]);
                s2k[5][`inputs`] = s2k[4];
                s2k[5][`adminInputs`] = s2k[6];
                s2k[5][`gameSettings`] = JSON[`parse`](JSON[`stringify`](i2k[31]));
                s2k[5][`gameSettings`][`map`] = null;
                s2k[5][`mn`] = i2k[31][`map`][`m`][`n`];
                s2k[5][`ma`] = i2k[31][`map`][`m`][`a`];
                I8yy.P2k(1);
                s2k[5][`es`] = I8yy.A2k(s2k[3], i2k[1]);
                if (i2k[31][`map`][`m`][`dbv`] == 2 && i2k[31][`map`][`m`][`dbid`] > 0) {
                    s2k[5][`mid`] = i2k[31][`map`][`m`][`dbid`];
                }
                s2k[2] = s2k[5][`toDatabase`]();
                $[`post`](`https://bonk2.io/scripts/replay_submit.php`, {
                    version: v2k[79][`version`],
                    replaydata: s2k[2],
                    mapid: i2k[31][`map`][`m`][`dbid`],
                    mode: i2k[31][`mo`]
                })[`done`]((o7z,O7z)=>{}
                )[`fail`](function(A1H, P1H, H1H) {
                    var c2k = [arguments];
                });
            }
            this[`hostHandlePlayerJoined`] = function(v1H, i1H, u1H) {
                var D2k = [arguments];
                                if (i2k[6][i2k[1]]) {
                    i2k[6][i2k[1]][`playersJoined`][`push`]({
                        id: D2k[0][0],
                        t: D2k[0][2]
                    });
                } else {
                    D2k[2] = {
                        playersLeft: [],
                        playersJoined: [{
                            id: D2k[0][0],
                            t: D2k[0][2]
                        }]
                    };
                    i2k[6][i2k[1]] = D2k[2];
                }
                i2k[6][i2k[1]][`pc`] = D2k[0][1];
                if (i2k[73]) {
                    i2k[73][`sendAdminInputs`]({
                        a: i2k[6][i2k[1]],
                        f: i2k[1]
                    });
                }
            }
            ;
            this[`increaseAccumulator`] = function(b1H) {
                var Y2k = [arguments];
                I8yy.w9b();
                i2k[90] += Y2k[0][0];
            }
            ;
            this[`recvChatMessage`] = function(d1H, e1H) {
                var N2k = [arguments];
                                N2k[9] = document[`createElement`](`div`);
                N2k[7] = document[`createElement`](`span`);
                N2k[1] = document[`createTextNode`](N2k[0][0] + `:`);
                N2k[7][`appendChild`](N2k[1]);
                N2k[7][`classList`][`add`](`ingamechatname`);
                I8yy.g9b();
                N2k[4] = document[`createTextNode`](` ` + N2k[0][1]);
                N2k[2] = document[`createElement`](`span`);
                N2k[2][`classList`][`add`](`ingamechatmessage`);
                N2k[2][`appendChild`](N2k[4]);
                N2k[9][`appendChild`](N2k[7]);
                N2k[9][`appendChild`](N2k[2]);
                i2k[49][`appendChild`](N2k[9]);
                if (i2k[49][`childElementCount`] > 10) {
                    i2k[49][`removeChild`](i2k[49][`firstChild`]);
                }
                i2k[49][`scrollTop`] = i2k[49][`scrollHeight`];
                if (i2k[29]) {
                    i2k[93][`style`][`visibility`] = `inherit`;
                    if (document[`activeElement`] != i2k[50]) {
                        r9z();
                    }
                }
            }
            ;
            function O9z(C1H, l1H, o1H) {
                var V2k = [arguments];
                                if (i2k[7][V2k[0][1]]) {
                    V2k[5] = i2k[7][V2k[0][1]];
                    V2k[7] = v2k[56][`pson`][`encode`](V2k[5]);
                    V2k[1] = V2k[7][`toBase64`]();
                    V2k[6] = LZString[`compressToEncodedURIComponent`](V2k[1]);
                    V2k[9] = ``;
                    for (V2k[8] = 0; V2k[8] < V2k[6][`length`]; V2k[8]++) {
                        if (V2k[8] <= 100 && V2k[6][`charAt`](V2k[8]) === V2k[6][`charAt`](V2k[8])[`toLowerCase`]()) {
                            V2k[9] += V2k[6][`charAt`](V2k[8])[`toUpperCase`]();
                        } else if (V2k[8] <= 100 && V2k[6][`charAt`](V2k[8]) === V2k[6][`charAt`](V2k[8])[`toUpperCase`]()) {
                            V2k[9] += V2k[6][`charAt`](V2k[8])[`toLowerCase`]();
                        } else {
                            V2k[9] += V2k[6][`charAt`](V2k[8]);
                        }
                    }
                    i2k[73][`sendDesyncRes`](V2k[0][0], V2k[0][1], V2k[9], V2k[0][2]);
                } else {
                    i2k[73][`sendDesyncRes`](V2k[0][0], V2k[0][1], null, V2k[0][2]);
                }
            }
            I8yy.w9b();
            this[`chatStatus`] = C0z;
            this[`hostLeftChat`] = function(I1H, F1H) {
                var g2k = [arguments];
                                if (i2k[31][`q`]) {
                    C0z(`* ` + g2k[0][0] + ` has left the game.`);
                } else {
                    if (g2k[0][1] == -1) {
                        C0z(`* ` + g2k[0][0] + ` has left the game and closed the room.`);
                    } else {
                        g2k[2] = ``;
                        if (i2k[4][g2k[0][1]]) {
                            g2k[2] = i2k[4][g2k[0][1]][`userName`];
                        }
                        C0z(`* ` + g2k[0][0] + ` has left the game and ` + g2k[2] + ` is now the game host.`);
                    }
                    if (g2k[0][1] == i2k[73][`getLSID`]()) {
                        C0z(`* You are now the host of this game.`);
                    }
                }
            }
            ;
            this[`playerLeftChat`] = function(L1H) {
                var U2k = [arguments];
                I8yy.H2k(0);
                U2k[7] = I8yy.A2k(938, 938);
                U2k[6] = v8yy[U2k[7]] + U2k[0][0];
                U2k[6] += ` has left the game.`;
                I8yy.w9b();
                C0z(U2k[6]);
            }
            ;
            function F9z() {
                var B2k = [arguments];
                                B2k[3] = document[`getElementById`](`newbonklobby_chat_lowerinstruction`);
                B2k[7] = document[`getElementById`](`newbonklobby_chat_input`);
                if (B2k[7][`value`] != ``) {
                    i2k[93][`style`][`visibility`] = `inherit`;
                    i2k[42][`unlockKeyboard`]();
                    i2k[50][`value`] = B2k[7][`value`];
                    i2k[50][`focus`]();
                    B2k[7][`value`] = ``;
                    B2k[3][`style`][`visibility`] = `inherit`;
                }
            }
            this[`playerJoinedChat`] = function(J1H, h1H) {
                var a2k = [arguments];
                I8yy.P2k(7);
                a2k[6] = I8yy.r2k(1852, 8, 9, 2948, 20636);
                a2k[7] = v8yy[a2k[6]] + a2k[0][0];
                a2k[7] += ` has joined the game.`;
                C0z(a2k[7]);
            }
            ;
            function o9z(X1H) {
                var t2k = [arguments];
                if (i2k[29]) {
                    i2k[90] += t2k[0][0];
                    if (t2k[0][0] > 30) {}
                }
            }
            this[`enableTutorial`] = function() {
                i2k[36] = true;
            }
            ;
            this[`updateLocalInputKeys`] = function() {
                I8yy.g9b();
                var E2k = [arguments];
                                if (i2k[42]) {
                    i2k[42][`destroy`]();
                }
                i2k[42] = new C8();
            }
            ;
            i2k[55] = [];
            this[`on`] = function(m1H, Q1H) {
                var R2k = [arguments];
                I8yy.g9b();
                                i2k[55][`push`]({
                    eventName: R2k[0][0],
                    callback: R2k[0][1]
                });
            }
            ;
        }
        v2k[9] = v2k[0][1][`peerjs`][`Peer`];
        E[`world`] = null;
        E[`ftu`] = 90;
        E[`fte`] = 90;
        E[`footHW`] = 0.5;
        E[`footHH`] = 0.2;
        E[`footOffsetX`] = -1;
        E[`footOffsetY`] = 0;
        E[`swingF`] = 2;
        E[`swingD`] = 0;
        v2k[1] = v2k[0][2][`Common`][`Math`][`b2Vec2`];
        v2k[2] = v2k[0][2][`Dynamics`][`b2BodyDef`];
        v2k[6] = v2k[0][2][`Dynamics`][`b2Body`];
        v2k[91] = v2k[0][2][`Dynamics`][`b2FixtureDef`];
        v2k[83] = v2k[0][2][`Dynamics`][`b2Fixture`];
        v2k[47] = v2k[0][2][`Dynamics`][`b2World`];
        v2k[29] = v2k[0][2][`Collision`][`Shapes`][`b2MassData`];
        function K8() {
            var j7k = [arguments];
                        j7k[5] = document[`createElement`](`div`);
            I8yy.H2k(8);
            j7k[1] = I8yy.r2k(1, 66, 681, 3, 14);
            I8yy.H2k(9);
            j7k[2] = I8yy.A2k(5342, 19, 356);
            I8yy.H2k(10);
            j7k[3] = I8yy.r2k(1, 2, 23, 1733, 13);
            j7k[5][`style`][`width`] = j7k[1] * K8[v8yy[j7k[2]]] + v8yy[j7k[3]];
            I8yy.P2k(11);
            j7k[4] = I8yy.r2k(482, 3, 11, 1, 26);
            I8yy.H2k(12);
            j7k[6] = I8yy.r2k(3, 25596, 24171);
            I8yy.P2k(0);
            j7k[9] = I8yy.r2k(1731, 10);
            j7k[5][`style`][`height`] = j7k[4] * K8[v8yy[j7k[6]]] + v8yy[j7k[9]];
            K8[`previewGraphics`] = new U(j7k[5],`thumb`);
            K8[`previewGraphics`][`forceRendererSize`](730 * K8[`thumbScale`] * window[`devicePixelRatio`], 500 * K8[`thumbScale`] * window[`devicePixelRatio`]);
        }
        v2k[13] = v2k[0][2][`Collision`][`Shapes`][`b2PolygonShape`];
        v2k[28] = v2k[0][2][`Collision`][`Shapes`][`b2CircleShape`];
        v2k[51] = v2k[0][2][`Dynamics`][`b2DebugDraw`];
        v2k[82] = v2k[0][2][`Common`][`Math`][`b2Math`];
        v2k[50] = v2k[0][2][`Dynamics`][`Joints`][`b2RevoluteJointDef`];
        v2k[40] = v2k[0][2][`Dynamics`][`Joints`][`b2RevoluteJoint`];
        v2k[93] = v2k[0][2][`Dynamics`][`Joints`][`b2PrismaticJointDef`];
        v2k[89] = v2k[0][2][`Dynamics`][`Joints`][`b2PrismaticJoint`];
        v2k[90] = v2k[0][2][`Dynamics`][`Joints`][`b2DistanceJoint`];
        v2k[96] = v2k[0][2][`Dynamics`][`Joints`][`b2DistanceJointDef`];
        v2k[71] = v2k[0][2][`Dynamics`][`Joints`][`b2GearJointDef`];
        v2k[75] = v2k[0][2][`Collision`][`b2AABB`];
        E[`createNewState`] = function(q1H, S1H, w1H, z1H, n1H, y1H, p1H) {
            //handle physics?
            var k7k = [arguments];
            k7k[6] = 640057142;
            k7k[2] = -1989467593;
            k7k[9] = 107991112;
            k7k[8] = 2144220299;
            //!(I8yy.u1G(0, false, 205728) !== k7k[6] && I8yy.q1G(0, false, 396341) !== k7k[2] && I8yy.q1G(0, false, 515972) !== k7k[9] && I8yy.u1G(0, false, 599706) !== k7k[8] && !I8yy.Y8U())
            if (true/*!(I8yy.u1G(0, false, 205728) !== k7k[6] && I8yy.q1G(0, false, 396341) !== k7k[2] && I8yy.q1G(0, false, 515972) !== k7k[9] && I8yy.u1G(0, false, 599706) !== k7k[8] && !I8yy.Y8U())*/) {
                k7k[1] = {};
                k7k[1][`discs`] = [];
                k7k[1][`discDeaths`] = [];
                k7k[1][`physics`] = JSON[`parse`](JSON[`stringify`](k7k[0][1][`physics`]));
                if (!(k7k[1][`physics`][`ppm`] >= 2 && k7k[1][`physics`][`ppm`] <= 300)) {
                    k7k[1][`physics`][`ppm`] = 15;
                }
                k7k[7] = k7k[1][`physics`][`ppm`];
                for (k7k[74] = 0; k7k[74] < k7k[1][`physics`][`bodies`][`length`]; k7k[74]++) {
                    if (k7k[1][`physics`][`bodies`][k7k[74]]) {
                        I8yy.P2k(2);
                        k7k[1][`physics`][`bodies`][k7k[74]][`p`][0] += I8yy.A2k(730, 2);
                        k7k[1][`physics`][`bodies`][k7k[74]][`p`][0] /= k7k[7];
                        I8yy.H2k(2);
                        k7k[1][`physics`][`bodies`][k7k[74]][`p`][1] += I8yy.A2k(500, 2);
                        k7k[1][`physics`][`bodies`][k7k[74]][`p`][1] /= k7k[7];
                        if (k7k[1][`physics`][`bodies`][k7k[74]][`cf`]) {
                            k7k[1][`physics`][`bodies`][k7k[74]][`cf`][`x`] /= 30;
                            k7k[1][`physics`][`bodies`][k7k[74]][`cf`][`y`] /= 30;
                            k7k[1][`physics`][`bodies`][k7k[74]][`cf`][`ct`] /= 30;
                        }
                        if (k7k[1][`physics`][`bodies`][k7k[74]][`type`] == `s`) {
                            k7k[1][`physics`][`bodies`][k7k[74]][`cf`][`x`] = 0;
                            k7k[1][`physics`][`bodies`][k7k[74]][`cf`][`y`] = 0;
                            k7k[1][`physics`][`bodies`][k7k[74]][`cf`][`ct`] = 0;
                            k7k[1][`physics`][`bodies`][k7k[74]][`lv`][0] = 0;
                            k7k[1][`physics`][`bodies`][k7k[74]][`lv`][1] = 0;
                            k7k[1][`physics`][`bodies`][k7k[74]][`av`] = 0;
                        }
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[1][`physics`][`fixtures`][`length`]; k7k[74]++) {
                    if (k7k[1][`physics`][`fixtures`][k7k[74]]) {
                        if (k7k[1][`physics`][`fixtures`][k7k[74]][`fp`] == true) {
                            delete k7k[1][`physics`][`fixtures`][k7k[74]][`fp`];
                        }
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[1][`physics`][`shapes`][`length`]; k7k[74]++) {
                    if (k7k[1][`physics`][`shapes`][k7k[74]]) {
                        k7k[1][`physics`][`shapes`][k7k[74]][`c`][0] /= k7k[7];
                        k7k[1][`physics`][`shapes`][k7k[74]][`c`][1] /= k7k[7];
                        if (k7k[1][`physics`][`shapes`][k7k[74]][`type`] == `bx`) {
                            k7k[1][`physics`][`shapes`][k7k[74]][`w`] /= k7k[7];
                            k7k[1][`physics`][`shapes`][k7k[74]][`h`] /= k7k[7];
                        }
                        if (k7k[1][`physics`][`shapes`][k7k[74]][`type`] == `ci`) {
                            k7k[1][`physics`][`shapes`][k7k[74]][`r`] /= k7k[7];
                        }
                        if (k7k[1][`physics`][`shapes`][k7k[74]][`type`] == `ch` || k7k[1][`physics`][`shapes`][k7k[74]][`type`] == `po`) {
                            for (k7k[43] = 0; k7k[43] < k7k[1][`physics`][`shapes`][k7k[74]][`v`][`length`]; k7k[43]++) {
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][0] /= k7k[7];
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][1] /= k7k[7];
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][0] *= k7k[1][`physics`][`shapes`][k7k[74]][`s`];
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][1] *= k7k[1][`physics`][`shapes`][k7k[74]][`s`];
                                k7k[5] = i4({
                                    x: 0,
                                    y: 0
                                }, {
                                    x: k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][0],
                                    y: k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][1]
                                }, k7k[1][`physics`][`shapes`][k7k[74]][`a`]);
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]] = [k7k[5][`x`], k7k[5][`y`]];
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][0] += k7k[1][`physics`][`shapes`][k7k[74]][`c`][0];
                                k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[43]][1] += k7k[1][`physics`][`shapes`][k7k[74]][`c`][1];
                            }
                            for (k7k[49] = 1; k7k[49] < k7k[1][`physics`][`shapes`][k7k[74]][`v`][`length`]; k7k[49]++) {
                                k7k[3] = k7k[1][`physics`][`shapes`][k7k[74]][`v`][k7k[49]];
                                I8yy.H2k(1);
                                k7k[56] = k7k[1][`physics`][`shapes`][k7k[74]][`v`][I8yy.A2k(1, k7k[49])];
                                if (k7k[3][0] == k7k[56][0] && k7k[3][1] == k7k[56][1]) {
                                    k7k[1][`physics`][`shapes`][k7k[74]][`v`][`splice`](k7k[49], 1);
                                    k7k[49]--;
                                }
                            }
                            ;
                        }
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[1][`physics`][`fixtures`][`length`]; k7k[74]++) {
                    if (k7k[1][`physics`][`fixtures`][k7k[74]] && k7k[1][`physics`][`fixtures`][k7k[74]][`re`] < 0) {
                        ;
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[1][`physics`][`joints`][`length`]; k7k[74]++) {
                    if (k7k[1][`physics`][`joints`][k7k[74]]) {
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `rv`) {
                            k7k[1][`physics`][`joints`][k7k[74]][`aa`][0] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`aa`][1] /= k7k[7];
                        }
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `p`) {
                            k7k[1][`physics`][`joints`][k7k[74]][`aa`][0] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`aa`][1] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`ab`][0] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`ab`][1] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`d`][`ut`] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`d`][`lt`] /= k7k[7];
                            I8yy.P2k(13);
                            k7k[1][`physics`][`joints`][k7k[74]][`d`][`mmf`] /= I8yy.A2k(k7k[7], k7k[7], k7k[7]);
                            I8yy.P2k(14);
                            k7k[1][`physics`][`joints`][k7k[74]][`d`][`mmf`] *= I8yy.r2k(12, 10, 12, 12);
                            k7k[1][`physics`][`joints`][k7k[74]][`d`][`ms`] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`d`][`ms`] *= 12;
                        }
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `d`) {
                            k7k[1][`physics`][`joints`][k7k[74]][`aa`][0] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`aa`][1] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`ab`][0] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`ab`][1] /= k7k[7];
                        }
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[1][`physics`][`joints`][`length`]; k7k[74]++) {
                    if (k7k[1][`physics`][`joints`][k7k[74]]) {
                        k7k[11] = k7k[1][`physics`][`joints`][k7k[74]];
                        if (k7k[11][`d`][`bf`] > 0) {
                            I8yy.H2k(5);
                            k7k[11][`d`][`bf`] /= I8yy.A2k(k7k[7], k7k[7]);
                        }
                        if (k7k[11][`ba`] == -2) {
                            k7k[11][`ba`] = -1;
                        }
                        if (k7k[11][`bb`] == -2) {
                            k7k[11][`bb`] = -1;
                        }
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `lpj`) {
                            k7k[1][`physics`][`joints`][k7k[74]][`pax`] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][0];
                            k7k[1][`physics`][`joints`][k7k[74]][`pay`] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][1];
                            k7k[1][`physics`][`joints`][k7k[74]][`plen`] /= k7k[7];
                            k7k[1][`physics`][`joints`][k7k[74]][`pms`] /= k7k[7];
                            I8yy.P2k(5);
                            k7k[1][`physics`][`joints`][k7k[74]][`pf`] /= I8yy.r2k(k7k[7], k7k[7]);
                        }
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `lsj`) {
                            k7k[1][`physics`][`joints`][k7k[74]][`sax`] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][0];
                            k7k[1][`physics`][`joints`][k7k[74]][`say`] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][1];
                            k7k[1][`physics`][`joints`][k7k[74]][`slen`] /= k7k[7];
                            I8yy.H2k(5);
                            k7k[1][`physics`][`joints`][k7k[74]][`sf`] /= I8yy.A2k(k7k[7], k7k[7]);
                        }
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `rv`) {
                            k7k[81] = {};
                            if (k7k[11][`ba`] == -1) {
                                k7k[81] = {
                                    x: k7k[11][`aa`][0],
                                    y: k7k[11][`aa`][1]
                                };
                            } else {
                                k7k[81] = {
                                    x: k7k[11][`aa`][0],
                                    y: k7k[11][`aa`][1]
                                };
                                k7k[81][`x`] += k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][0];
                                k7k[81][`y`] += k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][1];
                                k7k[48] = i4({
                                    x: 0,
                                    y: 0
                                }, {
                                    x: k7k[11][`aa`][0],
                                    y: k7k[11][`aa`][1]
                                }, -k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`a`]);
                                k7k[11][`aa`][0] = k7k[48][`x`];
                                k7k[11][`aa`][1] = k7k[48][`y`];
                                ;
                            }
                            if (k7k[11][`bb`] == -1) {
                                k7k[11][`ab`] = [k7k[81][`x`], k7k[81][`y`]];
                            } else {
                                I8yy.H2k(15);
                                k7k[31] = I8yy.r2k(148, 32, 15, 11);
                                I8yy.P2k(16);
                                k7k[83] = I8yy.r2k(5, 6, 6, 11);
                                I8yy.H2k(17);
                                k7k[89] = I8yy.A2k(15, 6, 5, 62);
                                I8yy.P2k(18);
                                k7k[25] = I8yy.r2k(1, 7, 1, 61, 9);
                                I8yy.H2k(19);
                                k7k[18] = I8yy.r2k(6, 20, 12, 983, 60);
                                I8yy.P2k(20);
                                k7k[92] = I8yy.A2k(7, 17, 79, 5, 5);
                                I8yy.H2k(0);
                                k7k[68] = I8yy.A2k(2, 41);
                                I8yy.H2k(21);
                                k7k[91] = I8yy.A2k(4, 47, 4);
                                I8yy.H2k(22);
                                k7k[57] = I8yy.r2k(75, 9, 7, 11);
                                I8yy.H2k(23);
                                k7k[42] = I8yy.r2k(1, 20, 4854, 245, 3);
                                I8yy.H2k(0);
                                k7k[79] = I8yy.A2k(0, 1);
                                k7k[11][`ab`] = [k7k[81][v8yy[k7k[31]]] - k7k[1][v8yy[k7k[83]]][v8yy[k7k[89]]][k7k[11][v8yy[k7k[25]]]][v8yy[k7k[18]]][0], k7k[81][v8yy[k7k[92]]] - k7k[1][v8yy[k7k[68]]][v8yy[k7k[91]]][k7k[11][v8yy[k7k[57]]]][v8yy[k7k[42]]][k7k[79]]];
                                k7k[99] = i4({
                                    x: 0,
                                    y: 0
                                }, {
                                    x: k7k[11][`ab`][0],
                                    y: k7k[11][`ab`][1]
                                }, -k7k[1][`physics`][`bodies`][k7k[11][`bb`]][`a`]);
                                k7k[11][`ab`] = [k7k[99][`x`], k7k[99][`y`]];
                            }
                            if (k7k[11][`ba`] == -1) {
                                k7k[98] = 0;
                            } else {
                                k7k[98] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`a`];
                            }
                            if (k7k[11][`bb`] == -1) {
                                k7k[70] = 0;
                            } else {
                                k7k[70] = k7k[1][`physics`][`bodies`][k7k[11][`bb`]][`a`];
                            }
                            I8yy.H2k(1);
                            k7k[11][`ra`] = I8yy.A2k(k7k[98], k7k[70]);
                            k7k[11][`d`][`la`] = -k7k[11][`d`][`la`];
                            k7k[11][`d`][`ua`] = -k7k[11][`d`][`ua`];
                            k7k[11][`d`][`ms`] = -k7k[11][`d`][`ms`];
                            if (k7k[11][`d`][`la`] > k7k[11][`d`][`ua`]) {
                                k7k[50] = k7k[11][`d`][`la`];
                                k7k[11][`d`][`la`] = k7k[11][`d`][`ua`];
                                k7k[11][`d`][`ua`] = k7k[50];
                            }
                        }
                        if (k7k[1][`physics`][`joints`][k7k[74]][`type`] == `p`) {
                            if (k7k[11][`ba`] != -1) {
                                k7k[87] = SafeTrig[`safeATan2`](k7k[11][`axa`][1], k7k[11][`axa`][0]);
                                k7k[87] -= k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`a`];
                                k7k[76] = SafeTrig[`safeTan`](k7k[87]);
                                k7k[11][`axa`][0] = 1;
                                k7k[11][`axa`][1] = k7k[76];
                            }
                            if (k7k[11][`ba`] == -1) {
                                k7k[98] = 0;
                            } else {
                                k7k[98] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`a`];
                            }
                            if (k7k[11][`bb`] == -1) {
                                k7k[70] = 0;
                            } else {
                                k7k[70] = k7k[1][`physics`][`bodies`][k7k[11][`bb`]][`a`];
                            }
                            I8yy.P2k(1);
                            k7k[11][`ra`] = I8yy.r2k(k7k[98], k7k[70]);
                            k7k[11][`cs`] = 0;
                            ;
                        }
                        if (k7k[11][`type`] == `d`) {
                            if (k7k[11][`bb`] == -1) {
                                I8yy.P2k(2);
                                k7k[11][`ab`][0] += I8yy.r2k(365, k7k[7]);
                                I8yy.H2k(2);
                                k7k[11][`ab`][1] += I8yy.r2k(250, k7k[7]);
                            }
                            k7k[97] = {};
                            k7k[23] = {};
                            k7k[20] = 0;
                            k7k[62] = 0;
                            if (k7k[11][`ba`] == -1) {
                                k7k[97] = {
                                    x: 0,
                                    y: 0
                                };
                            } else {
                                k7k[97] = {
                                    x: k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][0],
                                    y: k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`p`][1]
                                };
                                k7k[20] = k7k[1][`physics`][`bodies`][k7k[11][`ba`]][`a`];
                            }
                            if (k7k[11][`bb`] == -1) {
                                k7k[23] = {
                                    x: 0,
                                    y: 0
                                };
                            } else {
                                k7k[23] = {
                                    x: k7k[1][`physics`][`bodies`][k7k[11][`bb`]][`p`][0],
                                    y: k7k[1][`physics`][`bodies`][k7k[11][`bb`]][`p`][1]
                                };
                                k7k[62] = k7k[1][`physics`][`bodies`][k7k[11][`bb`]][`a`];
                            }
                            k7k[45] = {
                                x: k7k[11][`aa`][0],
                                y: k7k[11][`aa`][1]
                            };
                            k7k[45] = i4({
                                x: 0,
                                y: 0
                            }, k7k[45], k7k[20]);
                            k7k[29] = {
                                x: k7k[11][`ab`][0],
                                y: k7k[11][`ab`][1]
                            };
                            k7k[29] = i4({
                                x: 0,
                                y: 0
                            }, k7k[29], k7k[62]);
                            I8yy.P2k(9);
                            k7k[90] = I8yy.A2k(11895, 18, 663);
                            I8yy.H2k(17);
                            k7k[88] = I8yy.A2k(13, 5, 2, 49);
                            I8yy.H2k(1);
                            k7k[85] = I8yy.r2k(15, 55);
                            I8yy.H2k(24);
                            k7k[38] = I8yy.r2k(37, 53, 4, 4, 640);
                            k7k[10] = new v2k[1](k7k[97][v8yy[k7k[90]]] + k7k[45][v8yy[k7k[88]]],k7k[97][v8yy[k7k[85]]] + k7k[45][v8yy[k7k[38]]]);
                            I8yy.H2k(15);
                            k7k[71] = I8yy.r2k(294, 51, 14, 9);
                            I8yy.H2k(25);
                            k7k[65] = I8yy.r2k(624, 148473, 14, 17);
                            I8yy.H2k(26);
                            k7k[26] = I8yy.A2k(10, 12, 222, 21);
                            I8yy.H2k(27);
                            k7k[60] = I8yy.A2k(16, 14, 1, 4);
                            k7k[63] = new v2k[1](k7k[23][v8yy[k7k[71]]] + k7k[29][v8yy[k7k[65]]],k7k[23][v8yy[k7k[26]]] + k7k[29][v8yy[k7k[60]]]);
                            k7k[10][`Subtract`](k7k[63]);
                            k7k[16] = k7k[10][`Length`]();
                            if (k7k[16] == 0) {
                                k7k[16] = 0.01;
                            }
                            k7k[11][`len`] = k7k[16];
                            if (k7k[11][`d`][`fh`] == 0) {
                                k7k[11][`d`][`fh`] = 0.0001;
                                ;
                            }
                            if (k7k[11][`d`][`fh`] != 0) {
                                I8yy.H2k(28);
                                k7k[59] = I8yy.A2k(13, 6, 20);
                                I8yy.P2k(29);
                                k7k[15] = I8yy.r2k(69, 3, 70, 27, 12);
                                I8yy.P2k(30);
                                k7k[77] = I8yy.A2k(1865, 20, 16, 18, 1940);
                                k7k[11][`d`][`fh`] = k7k[59] / k7k[11][v8yy[k7k[15]]][v8yy[k7k[77]]];
                                ;
                            }
                        }
                        if (k7k[11][`ba`] == -2 || k7k[11][`bb`] == -2) {
                            k7k[1][`physics`][`joints`][k7k[74]] = null;
                        }
                    }
                }
                k7k[67] = [];
                k7k[1][`capZones`] = [];
                if (k7k[0][1][`capZones`]) {
                    for (k7k[74] = 0; k7k[74] < k7k[0][1][`capZones`][`length`]; k7k[74]++) {
                        if (k7k[67][`indexOf`](k7k[0][1][`capZones`][k7k[74]][`i`]) > -1) {
                            ;
                        } else if (!k7k[1][`physics`][`fixtures`][k7k[0][1][`capZones`][k7k[74]][`i`]]) {
                            ;
                        } else {
                            k7k[1][`capZones`][`push`]({
                                ty: k7k[0][1][`capZones`][k7k[74]][`ty`],
                                p: 0,
                                l: k7k[0][1][`capZones`][k7k[74]][`l`] * 30,
                                i: k7k[0][1][`capZones`][k7k[74]][`i`],
                                o: -1,
                                ot: -1,
                                f: -1
                            });
                            k7k[67][`push`](k7k[0][1][`capZones`][k7k[74]][`i`]);
                        }
                    }
                }
                k7k[12] = JSON[`parse`](JSON[`stringify`](k7k[0][1][`spawns`]));
                k7k[34] = false;
                k7k[21] = false;
                for (k7k[46] = 0; k7k[46] < k7k[12][`length`]; k7k[46]++) {
                    if (k7k[12][k7k[46]]) {
                        if (k7k[12][k7k[46]][`gr`]) {
                            k7k[34] = true;
                        }
                        if (k7k[12][k7k[46]][`ye`]) {
                            k7k[21] = true;
                        }
                    }
                }
                for (k7k[30] = 0; k7k[30] < k7k[12][`length`]; k7k[30]++) {
                    if (k7k[12][k7k[30]]) {
                        if (!k7k[34]) {
                            k7k[12][k7k[30]][`gr`] = k7k[12][k7k[30]][`r`];
                        }
                        if (!k7k[21]) {
                            k7k[12][k7k[30]][`ye`] = k7k[12][k7k[30]][`b`];
                        }
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[12][`length`]; k7k[74]++) {
                    if (k7k[12][k7k[74]]) {
                        I8yy.H2k(31);
                        k7k[82] = I8yy.r2k(20, 624, 12661, 11);
                        I8yy.P2k(12);
                        k7k[84] = I8yy.r2k(5, 5840, 5105);
                        I8yy.H2k(8);
                        k7k[22] = I8yy.A2k(1, 0, 28, 7, 19);
                        k7k[12][k7k[74]][`x`] = (k7k[12][k7k[74]][v8yy[k7k[82]]] + k7k[84] / k7k[22]) / k7k[7];
                        I8yy.P2k(16);
                        k7k[80] = I8yy.A2k(45, 3, 767, 18);
                        I8yy.H2k(9);
                        k7k[19] = I8yy.r2k(5368, 12, 489);
                        I8yy.P2k(32);
                        k7k[72] = I8yy.r2k(25, 15, 12);
                        k7k[12][k7k[74]][`y`] = (k7k[12][k7k[74]][v8yy[k7k[80]]] + k7k[19] / k7k[72]) / k7k[7];
                        k7k[12][k7k[74]][`xv`] /= k7k[7];
                        k7k[12][k7k[74]][`yv`] /= k7k[7];
                    }
                }
                for (k7k[74] = 0; k7k[74] < k7k[12][`length`]; k7k[74]++) {
                    I8yy.P2k(33);
                    k7k[0][2] = I8yy.A2k(k7k[0][2], 7, 101);
                    I8yy.P2k(34);
                    k7k[95] = I8yy.r2k(k7k[0][2], 10);
                    I8yy.H2k(2);
                    k7k[95] = I8yy.r2k(k7k[95], 10);
                    k7k[12][k7k[74]][`priority`] += k7k[95];
                }
                k7k[12][`sort`](function(O1H, W1H) {
                    var f7k = [arguments];
                    f7k[7] = -588439503;
                    f7k[1] = 1443441876;
                    f7k[4] = -1850808354;
                    f7k[6] = -1475752223;
                    if (true/*I8yy.q1G(0, false, 498524) === f7k[7] || I8yy.q1G(0, false, 428960) === f7k[1] || I8yy.q1G(0, false, 983609) === f7k[4] || I8yy.u1G(0, false, 870746) === f7k[6] || I8yy.d8U()*/) {
                                                return f7k[0][0][`priority`] > f7k[0][1][`priority`] ? -1 : f7k[0][1][`priority`] > f7k[0][0][`priority`] ? 1 : 0;
                    }
                });
                k7k[35] = k7k[0][0][`slice`](0);
                for (k7k[39] = 0; k7k[39] < k7k[35][`length`]; k7k[39]++) {
                    if (!k7k[35][k7k[39]]) {
                        k7k[35][`splice`](k7k[39], 1);
                        k7k[39]--;
                    }
                }
                if (k7k[0][4]) {
                    for (k7k[93] = 0; k7k[93] < k7k[35][`length`]; k7k[93]++) {
                        if (k7k[0][4][`indexOf`](k7k[35][k7k[93]][`id`]) == -1) {
                            k7k[35][`splice`](k7k[93], 1);
                            k7k[93]--;
                        }
                    }
                }
                if (k7k[0][5][`tea`]) {
                    for (k7k[86] = 0; k7k[86] < k7k[35][`length`]; k7k[86]++) {
                        if (!(k7k[35][k7k[86]][`team`] >= 2 && k7k[35][k7k[86]][`team`] <= 5)) {
                            k7k[35][`splice`](k7k[86], 1);
                            k7k[86]--;
                        }
                    }
                }
                for (k7k[41] = 0; k7k[41] < k7k[35][`length`]; k7k[41]++) {
                    k7k[33] = k7k[35][k7k[41]][`team`];
                    k7k[53] = false;
                    for (k7k[27] = 0; k7k[27] < k7k[12][`length`]; k7k[27]++) {
                        if (k7k[33] == 1 && k7k[12][k7k[27]][`f`] || k7k[33] == 2 && k7k[12][k7k[27]][`r`] || k7k[33] == 3 && k7k[12][k7k[27]][`b`] || k7k[33] == 4 && k7k[12][k7k[27]][`gr`] || k7k[33] == 5 && k7k[12][k7k[27]][`ye`]) {
                            k7k[53] = true;
                            break;
                        }
                    }
                    if (!k7k[53]) {
                        k7k[35][`splice`](k7k[41], 1);
                        k7k[41]--;
                    }
                }
                a: while (k7k[35][`length`] > 0 && k7k[12][`length`] > 0) {
                    for (k7k[74] = 0; k7k[74] < k7k[12][`length`]; k7k[74]++) {
                        k7k[54] = [];
                        for (k7k[52] = 0; k7k[52] < k7k[35][`length`]; k7k[52]++) {
                            k7k[69] = k7k[35][k7k[52]][`team`];
                            if (k7k[69] == 1 && k7k[12][k7k[74]][`f`] || k7k[69] == 2 && k7k[12][k7k[74]][`r`] || k7k[69] == 3 && k7k[12][k7k[74]][`b`] || k7k[69] == 4 && k7k[12][k7k[74]][`gr`] || k7k[69] == 5 && k7k[12][k7k[74]][`ye`]) {
                                k7k[54][`push`](k7k[52]);
                            }
                        }
                        if (k7k[54][`length`] == 0) {
                            continue;
                        }
                        do {
                            I8yy.H2k(33);
                            k7k[0][2] = I8yy.r2k(k7k[0][2], 7, 101);
                            I8yy.H2k(34);
                            k7k[32] = I8yy.r2k(k7k[0][2], 10);
                            I8yy.H2k(2);
                            k7k[32] = I8yy.r2k(k7k[32], 9);
                            k7k[47] = k7k[54][Math[`floor`](k7k[32] * k7k[54][`length`])];
                        } while (k7k[35][k7k[47]] == null);
                        k7k[1][`discs`][k7k[35][k7k[47]][`id`]] = {
                            x: k7k[12][k7k[74]][`x`],
                            y: k7k[12][k7k[74]][`y`],
                            xv: k7k[12][k7k[74]][`xv`],
                            yv: k7k[12][k7k[74]][`yv`],
                            sx: k7k[12][k7k[74]][`x`],
                            sy: k7k[12][k7k[74]][`y`],
                            sxv: k7k[12][k7k[74]][`xv`],
                            syv: k7k[12][k7k[74]][`yv`],
                            a: 0,
                            av: 0,
                            a1a: 1000,
                            team: k7k[35][k7k[47]][`team`],
                            a1: false,
                            lhid: -1,
                            lht: 0,
                            ds: 0,
                            da: 270
                        };
                        if (k7k[0][5][`mo`] == `ar`) {
                            k7k[1][`discs`][k7k[35][k7k[47]][`id`]][`a1a`] = 750;
                            ;
                        }
                        if (k7k[0][5][`mo`] == `ard`) {
                            k7k[1][`discs`][k7k[35][k7k[47]][`id`]][`a1a`] = 500;
                            ;
                        }
                        k7k[35][`splice`](k7k[47], 1);
                        if (k7k[35][`length`] == 0) {
                            break a;
                        }
                    }
                }
                k7k[1][`seed`] = k7k[0][2];
                k7k[1][`fte`] = -1;
                k7k[1][`ftu`] = E[`ftu`];
                if (k7k[0][6]) {
                    k7k[1][`ftu`] = 60;
                    ;
                }
                if (k7k[0][3]) {
                    k7k[1][`ftu`] = 5;
                }
                k7k[1][`players`] = k7k[0][0];
                if (k7k[0][5][`tea`]) {
                    k7k[1][`scores`] = [];
                    for (k7k[55] = 0; k7k[55] < k7k[0][0][`length`]; k7k[55]++) {
                        if (k7k[0][0][k7k[55]]) {
                            k7k[1][`scores`][k7k[0][0][k7k[55]][`team`]] = 0;
                        }
                    }
                } else {
                    k7k[1][`scores`] = [];
                    for (k7k[78] = 0; k7k[78] < k7k[0][0][`length`]; k7k[78]++) {
                        if (k7k[0][0][k7k[78]]) {
                            k7k[1][`scores`][k7k[78]] = 0;
                        }
                    }
                }
                k7k[1][`lscr`] = -1;
                function i4(Z1H, x1H, M1H) {
                    var G7k = [arguments];
                    G7k[8] = 1741597459;
                    I8yy.g9b();
                    G7k[5] = -265922540;
                    G7k[3] = 2;
                    for (G7k[40] = 1; I8yy.d1f(G7k[40].toString(), G7k[40].toString().length, 39113) !== G7k[8]; G7k[40]++) {
                        G7k[6] = 5949006390;
                        G7k[7] = 796498228;
                        G7k[4] = 666376885;
                        G7k[1] = +626696194;
                        G7k[3] += 2;
                    }
                    if (I8yy.m1f(G7k[3].toString(), G7k[3].toString().length, 17026) !== G7k[5]) {
                        G7k[6] = 1211485312;
                        G7k[7] = 889294718;
                        G7k[4] = 733623981;
                        G7k[1] = -482519548;
                    }
                    if (true/*!(I8yy.u1G(0, false, 503179) !== G7k[6] && I8yy.u1G(0, false, 133228) !== G7k[7] && I8yy.u1G(0, false, 667920) !== G7k[4] && I8yy.u1G(0, false, 382688) !== G7k[1] && !I8yy.Y8U())*/) {
                        G7k[9] = G7k[0][2];
                        G7k[87] = SafeTrig[`safeCos`](G7k[9]);
                        G7k[51] = SafeTrig[`safeSin`](G7k[9]);
                        I8yy.H2k(1);
                        G7k[10] = I8yy.r2k(5, 44);
                        I8yy.P2k(35);
                        G7k[36] = I8yy.A2k(2, 1, 19);
                        G7k[23] = G7k[0][1][v8yy[G7k[10]]] - G7k[0][0][v8yy[G7k[36]]];
                        I8yy.P2k(36);
                        G7k[16] = I8yy.A2k(44, 1, 4);
                        I8yy.P2k(1);
                        G7k[56] = I8yy.A2k(120, 160);
                        G7k[47] = G7k[0][1][v8yy[G7k[16]]] - G7k[0][0][v8yy[G7k[56]]];
                        return {
                            x: G7k[87] * G7k[23] - G7k[51] * G7k[47] + G7k[0][0][`x`],
                            y: G7k[51] * G7k[23] + G7k[87] * G7k[47] + G7k[0][0][`y`]
                        };
                    }
                }
                k7k[1][`ms`] = k7k[0][1][`s`];
                k7k[1][`mm`] = k7k[0][1][`m`];
                k7k[1][`rl`] = 0;
                k7k[1][`projectiles`] = [];
                return k7k[1];
            }
        }
        E[`prototype`][`step`] = function(s1H, c1H, D1H, Y1H, N1H, V1H, g1H, U1H) {
            //render the game/handle physics?
            var T7k = [arguments];
            T7k[5] = 685308413;
            T7k[7] = 278415694;
            T7k[9] = -1099217403;
            T7k[3] = 1355432038;
            if (true/*!(I8yy.u1G(0, false, 262312) !== T7k[5] && I8yy.q1G(0, false, 275069) !== T7k[7] && I8yy.q1G(0, false, 925680) !== T7k[9] && I8yy.u1G(0, false, 656458) !== T7k[3] && !I8yy.Y8U())*/) {
                function T9(B1H, a1H) {
                    var K7k = [arguments];
                                        K7k[4] = K7k[0][1][`GetUserData`]()[`capID`];
                    I8yy.g9b();
                    K7k[3] = K7k[0][0][`GetUserData`]()[`team`];
                    if (!T7k[6][K7k[4]]) {
                        T7k[6][K7k[4]] = [];
                    }
                    if (!T7k[6][K7k[4]][K7k[3]]) {
                        T7k[6][K7k[4]][K7k[3]] = {
                            count: 1,
                            players: [K7k[0][0][`GetUserData`]()[`arrayID`]]
                        };
                    } else {
                        T7k[6][K7k[4]][K7k[3]][`count`]++;
                        T7k[6][K7k[4]][K7k[3]][`players`][`push`](K7k[0][0][`GetUserData`]()[`arrayID`]);
                    }
                }
                                T7k[1] = Date[`now`]();
                T7k[4] = [];
                T7k[6] = [];
                T7k[8] = [];
                T7k[14] = [];
                T7k[22] = [];
                T7k[33] = [];
                T7k[79] = {
                    x: 0,
                    y: 0
                };
                T7k[54] = [];
                T7k[68] = [];
                T7k[20] = [];
                T7k[64] = [];
                function d9(t1H) {
                    var r7k = [arguments];
                    r7k[8] = 709953828;
                    r7k[7] = 1740805147;
                    r7k[2] = -1850514936;
                    r7k[5] = 916468014;
                    if (true/*!(I8yy.q1G(0, false, 825393) !== r7k[8] && I8yy.u1G(0, false, 596857) !== r7k[7] && I8yy.q1G(0, false, 598185) !== r7k[2] && I8yy.q1G(0, false, 496587) !== r7k[5] && !I8yy.Y8U())*/) {
                        T7k[8][r7k[0][0]] = true;
                    }
                }
                T7k[53] = 0;
                T7k[45] = 5;
                T7k[90] = 15;
                T7k[82] = 1;
                T7k[16] = 150;
                T7k[93] = 1;
                T7k[43] = 0.5;
                T7k[71] = 2.5;
                T7k[37] = 0.5;
                T7k[98] = 1;
                T7k[91] = 1;
                T7k[27] = 500;
                T7k[73] = 4;
                T7k[42] = 3;
                E[`globalStepVars`] = {
                    discs: T7k[4],
                    shakeVectorThisStep: T7k[79],
                    soundsThisStep: T7k[54],
                    capEvent: T9,
                    teamGoalEvent: d9,
                    inputState: T7k[0][0],
                    gameSettings: T7k[0][4],
                    swingCollideDestroyEvents: T7k[33]
                };
                if (!E[`world`]) {
                    E[`world`] = new v2k[47](new v2k[1](0,20));
                    E[`world`][`SetWarmStarting`](false);
                    E[`contactListener`] = {};
                    E[`contactListener`][`BeginContact`] = function(E1H) {
                        var A7k = [arguments];
                        A7k[5] = -123611890;
                        A7k[3] = -115605827;
                        A7k[6] = 463143973;
                        A7k[2] = -2038590122;
                        if (true/*I8yy.q1G(0, false, 892474) === A7k[5] || I8yy.u1G(0, false, 809040) === A7k[3] || I8yy.q1G(0, false, 256921) === A7k[6] || I8yy.q1G(0, false, 248366) === A7k[2] || I8yy.Y8U()*/) {
                                                        A7k[4] = A7k[0][0][`GetFixtureA`]();
                            A7k[1] = A7k[0][0][`GetFixtureB`]();
                            A7k[7] = A7k[4][`GetBody`]();
                            A7k[8] = A7k[1][`GetBody`]();
                            A7k[68] = A7k[7];
                            A7k[20] = A7k[8];
                            A7k[88] = A7k[4];
                            A7k[22] = A7k[1];
                            for (A7k[90] = 0; A7k[90] < 2; A7k[90]++) {
                                if (A7k[68][`GetUserData`]()[`type`] == "disc" && A7k[20][`GetUserData`]()[`type`] == "phys" && A7k[22][`GetUserData`]()[`death`] == true) {
                                    E[`globalStepVars`][`discs`][A7k[68][`GetUserData`]()[`arrayID`]][`diedThisStep`] = 1;
                                }
                                if (A7k[68][`GetUserData`]()[`type`] == "disc" && (!A7k[88][`GetUserData`]() || A7k[88][`GetUserData`]()[`type`] != "vtolwing") && A7k[20][`GetUserData`]()[`type`] == "phys" && A7k[22][`GetUserData`]()[`capzone`] == true && A7k[22][`GetUserData`]()[`capType`] == 1) {
                                    E[`globalStepVars`][`capEvent`](A7k[68], A7k[22]);
                                    A7k[0][0][`SetEnabled`](false);
                                }
                                if (A7k[68][`GetUserData`]()[`type`] == "arrow" && A7k[20][`GetUserData`]()[`type`] == "phys" && A7k[22][`GetUserData`]()[`capzone`] == true) {
                                    A7k[0][0][`SetEnabled`](false);
                                }
                                if (A7k[68][`GetUserData`]()[`type`] == "disc" && A7k[88][`GetUserData`]() && A7k[88][`GetUserData`]()[`type`] == "vtolwing" && A7k[20][`GetUserData`]()[`type`] == "phys" && A7k[22][`GetUserData`]()[`capzone`] == true) {
                                    A7k[0][0][`SetEnabled`](false);
                                }
                                if (A7k[68][`GetUserData`]()[`type`] == "phys" && A7k[20][`GetUserData`]()[`type`] == "phys" && A7k[22][`GetUserData`]()[`capzone`] == true && A7k[22][`GetUserData`]()[`capType`] != 1) {
                                    E[`globalStepVars`][`teamGoalEvent`](A7k[22][`GetUserData`]()[`capType`]);
                                    A7k[0][0][`SetEnabled`](false);
                                }
                                if (A7k[68][`GetUserData`]()[`type`] == "disc" && A7k[20][`GetUserData`]()[`type`] == "disc") {
                                    if (E[`globalStepVars`][`inputState`][`ms`][`nc`]) {
                                        A7k[0][0][`SetEnabled`](false);
                                    } else if (E[`globalStepVars`][`gameSettings`][`tea`] == true && A7k[68][`GetUserData`]()[`team`] == A7k[20][`GetUserData`]()[`team`]) {
                                        A7k[0][0][`SetEnabled`](false);
                                    } else {
                                        if (E[`globalStepVars`][`discs`][A7k[68][`GetUserData`]()[`arrayID`]][`swing`]) {
                                            E[`globalStepVars`][`swingCollideDestroyEvents`][`push`](A7k[68][`GetUserData`]()[`arrayID`]);
                                        }
                                        E[`globalStepVars`][`discs`][A7k[68][`GetUserData`]()[`arrayID`]][`lhid`] = A7k[20][`GetUserData`]()[`arrayID`];
                                        E[`globalStepVars`][`discs`][A7k[20][`GetUserData`]()[`arrayID`]][`lhid`] = A7k[68][`GetUserData`]()[`arrayID`];
                                        E[`globalStepVars`][`discs`][A7k[68][`GetUserData`]()[`arrayID`]][`lht`] = 120;
                                        E[`globalStepVars`][`discs`][A7k[20][`GetUserData`]()[`arrayID`]][`lht`] = 120;
                                    }
                                }
                                if (A7k[68][`GetUserData`]()[`type`] == "arrow") {
                                    A7k[76] = A7k[20][`GetUserData`]();
                                    A7k[64] = A7k[68][`GetUserData`]();
                                    if (E[`globalStepVars`][`gameSettings`][`tea`] == false && A7k[20][`GetUserData`]()[`type`] == "disc" && A7k[20][`GetUserData`]()[`arrayID`] == A7k[68][`GetUserData`]()[`discID`] || E[`globalStepVars`][`gameSettings`][`tea`] == true && A7k[20][`GetUserData`]()[`type`] == "disc" && A7k[68][`GetUserData`]()[`team`] == A7k[20][`GetUserData`]()[`team`]) {
                                        A7k[0][0][`SetEnabled`](false);
                                    } else {
                                        if (A7k[20][`GetUserData`]()[`type`] == "disc") {
                                            A7k[68][`GetUserData`]()[`hitDiscsThisStep`][`push`](A7k[20][`GetUserData`]()[`arrayID`]);
                                            if (E[`globalStepVars`][`gameSettings`][`mo`] == "ard") {
                                                E[`globalStepVars`][`discs`][A7k[20][`GetUserData`]()[`arrayID`]][`diedThisStep`] = 1;
                                            }
                                        } else {
                                            A7k[68][`GetUserData`]()[`hitWorldThisStep`] = true;
                                        }
                                    }
                                }
                                A7k[68] = A7k[8];
                                A7k[20] = A7k[7];
                                A7k[88] = A7k[1];
                                A7k[22] = A7k[4];
                            }
                        }
                    }
                    ;
                    E[`contactListener`][`EndContact`] = function() {}
                    ;
                    E[`contactListener`][`PreSolve`] = function(R1H) {
                        I8yy.w9b();
                        var P7k = [arguments];
                    }
                    ;
                    E[`contactListener`][`PostSolve`] = function(j0H, k0H) {
                        var H7k = [arguments];
                        H7k[8] = 69041000;
                        H7k[9] = 1992382168;
                        H7k[5] = 1195717057;
                        H7k[7] = -925702709;
                        if (true/*!(I8yy.u1G(0, false, 714879) !== H7k[8] && I8yy.u1G(0, false, 713448) !== H7k[9] && I8yy.u1G(0, false, 411092) !== H7k[5] && I8yy.q1G(0, false, 249372) !== H7k[7] && !I8yy.Y8U())*/) {
                                                        H7k[4] = H7k[0][0][`GetFixtureA`]();
                            H7k[1] = H7k[0][0][`GetFixtureB`]();
                            H7k[6] = H7k[4][`GetBody`]();
                            H7k[2] = H7k[1][`GetBody`]();
                            if (H7k[6][`GetUserData`]()[`type`] == "disc" && H7k[2][`GetUserData`]()[`type`] == "disc") {
                                I8yy.P2k(37);
                                H7k[62] = I8yy.A2k(3022, 9, 9, 1, 3200);
                                H7k[90] = H7k[0][1][v8yy[H7k[62]]][0] * 1.3;
                                if (H7k[90] > 3.5) {
                                    E[`globalStepVars`][`soundsThisStep`][`push`](["discDisc", H7k[90], H7k[6][`GetUserData`]()[`arrayID`], H7k[2][`GetUserData`]()[`arrayID`]]);
                                }
                            }
                            if (H7k[6][`GetUserData`]()[`type`] == "disc" && H7k[2][`GetUserData`]()[`type`] == "phys" || H7k[6][`GetUserData`]()[`type`] == "phys" && H7k[2][`GetUserData`]()[`type`] == "disc") {
                                I8yy.P2k(38);
                                H7k[81] = I8yy.A2k(174, 157, 15, 157, 1);
                                H7k[52] = H7k[0][1][v8yy[H7k[81]]][0] * 1.2;
                                H7k[11] = 0;
                                H7k[76] = 0;
                                if (H7k[6][`GetUserData`]()[`type`] == "disc") {
                                    H7k[11] = H7k[6][`GetUserData`]()[`arrayID`];
                                    H7k[6][`GetUserData`]()[`impulsesThisStep`] += H7k[0][1][`normalImpulses`][0];
                                    H7k[76] = H7k[1][`GetUserData`]()[`arrayID`];
                                } else {
                                    H7k[11] = H7k[2][`GetUserData`]()[`arrayID`];
                                    H7k[2][`GetUserData`]()[`impulsesThisStep`] += H7k[0][1][`normalImpulses`][0];
                                    H7k[76] = H7k[4][`GetUserData`]()[`arrayID`];
                                }
                                H7k[65] = new v2k[0][2][`Collision`][`b2WorldManifold`]();
                                H7k[0][0][`GetWorldManifold`](H7k[65]);
                                H7k[19] = SafeTrig[`safeATan2`](H7k[65][`m_normal`][`y`], H7k[65][`m_normal`][`x`]);
                                H7k[48] = H7k[65][`m_points`][0][`x`];
                                H7k[84] = H7k[65][`m_points`][0][`y`];
                                if (H7k[52] > 4.5) {
                                    E[`globalStepVars`][`soundsThisStep`][`push`](["platBounce", H7k[52], H7k[11], H7k[76], H7k[19], H7k[48], H7k[84]]);
                                }
                            }
                            if (H7k[6][`GetUserData`]()[`type`] == "disc" || H7k[2][`GetUserData`]()[`type`] == "disc") {
                                H7k[43] = 1.0;
                                H7k[41] = -821918211;
                                H7k[25] = -378305856;
                                H7k[89] = 2;
                                for (H7k[50] = 1; I8yy.d1f(H7k[50].toString(), H7k[50].toString().length, 25296) !== H7k[41]; H7k[50]++) {
                                    H7k[94] = true;
                                    H7k[89] += 2;
                                }
                                if (I8yy.d1f(H7k[89].toString(), H7k[89].toString().length, 10052) !== H7k[25]) {
                                    H7k[94] = false;
                                }
                                H7k[94] = false;
                                if (H7k[6][`GetUserData`]()[`type`] == "disc" && H7k[2][`GetUserData`]()[`type`] == "disc") {
                                    H7k[43] = 3.0;
                                } else if (H7k[6][`GetUserData`]()[`type`] == "arrow" || H7k[2][`GetUserData`]()[`type`] == "arrow") {
                                    H7k[43] = 6;
                                } else {
                                    if (H7k[6][`GetUserData`]()[`type`] == "phys" && H7k[4][`GetShape`]()[`GetType`]() == 0) {
                                        H7k[94] = true;
                                    }
                                    if (H7k[2][`GetUserData`]()[`type`] == "phys" && H7k[1][`GetShape`]()[`GetType`]() == 0) {
                                        H7k[94] = true;
                                    }
                                }
                                H7k[45] = new v2k[0][2][`Collision`][`b2WorldManifold`]();
                                H7k[0][0][`GetWorldManifold`](H7k[45]);
                                I8yy.P2k(39);
                                H7k[85] = I8yy.r2k(10, 10, 8, 137, 15);
                                I8yy.P2k(40);
                                H7k[83] = I8yy.r2k(15, 29, 155);
                                H7k[96] = H7k[0][1][v8yy[H7k[85]]][0] * U[v8yy[H7k[83]]] * H7k[43];
                                H7k[15] = H7k[45][`m_points`][0][`Copy`]();
                                H7k[40] = H7k[45][`m_normal`][`Copy`]();
                                H7k[40][`Multiply`](H7k[96]);
                                H7k[15][`Subtract`](H7k[40]);
                                H7k[26] = H7k[45][`m_points`][0][`Copy`]();
                                H7k[63] = H7k[45][`m_normal`][`Copy`]();
                                H7k[63][`Multiply`](H7k[96]);
                                H7k[26][`Add`](H7k[63]);
                                H7k[66] = H7k[15][`Copy`]();
                                H7k[66][`Subtract`](H7k[26]);
                                H7k[87] = 40;
                                if (Math[`abs`](H7k[66][`x`]) > H7k[87]) {
                                    if (H7k[66][`x`] < 0) {
                                        H7k[66][`x`] = -H7k[87];
                                    } else {
                                        H7k[66][`x`] = H7k[87];
                                    }
                                }
                                if (Math[`abs`](H7k[66][`y`]) > H7k[87]) {
                                    if (H7k[66][`y`] < 0) {
                                        H7k[46] = 992733229;
                                        H7k[47] = -1670612532;
                                        H7k[36] = 2;
                                        for (H7k[71] = 1; I8yy.d1f(H7k[71].toString(), H7k[71].toString().length, 39568) !== H7k[46]; H7k[71]++) {
                                            H7k[66][`w`] = +H7k[87];
                                            H7k[36] += 2;
                                        }
                                        if (I8yy.m1f(H7k[36].toString(), H7k[36].toString().length, 76647) !== H7k[47]) {
                                            H7k[66][`y`] = -H7k[87];
                                        }
                                    } else {
                                        H7k[66][`y`] = H7k[87];
                                    }
                                }
                                if (H7k[94]) {
                                    H7k[66][`x`] = -H7k[66][`x`];
                                    H7k[66][`y`] = -H7k[66][`y`];
                                }
                                E[`globalStepVars`][`shakeVectorThisStep`][`x`] += H7k[66][`x`];
                                E[`globalStepVars`][`shakeVectorThisStep`][`y`] += H7k[66][`y`];
                            }
                            ;
                        }
                    }
                    ;
                    E[`world`][`SetContactListener`](E[`contactListener`]);
                }
                T7k[62] = E[`world`];
                function z9() {
                    var v7k = [arguments];
                                        v7k[8] = {};
                    v7k[8][`m_hit`] = false;
                    v7k[8][`m_point`] = null;
                    v7k[8][`m_normal`] = null;
                    v7k[8][`m_fixture`] = null;
                    v7k[8][`ReportFixture`] = (function(f0H, G0H, T0H, K0H) {
                        var i7k = [arguments];
                                                i7k[6] = i7k[0][0][`GetBody`]();
                        i7k[3] = i7k[6][`GetUserData`]();
                        if (i7k[3][`type`] == "disc") {
                            return -1.0;
                        }
                        if (i7k[0][0][`GetUserData`]() && i7k[0][0][`GetUserData`]()[`type`] == "laserFix") {
                            return -1.0;
                            ;
                        }
                        v7k[8][`m_hit`] = true;
                        v7k[8][`m_point`] = i7k[0][1];
                        v7k[8][`m_normal`] = i7k[0][2];
                        v7k[8][`m_fixture`] = i7k[0][0];
                        return i7k[0][3];
                    }
                    )[`bind`](this);
                    return v7k[8];
                }
                T7k[62][`novakReset`]();
                T7k[62][`SetContactListener`](E[`contactListener`]);
                if (T7k[62][`GetGravity`]()[`y`] != 20) {
                    T7k[62][`SetGravity`](new v2k[1](0,20));
                    ;
                }
                I8yy.P2k(41);
                T7k[264] = I8yy.r2k(3, 18, 3, 15, 269);
                I8yy.P2k(42);
                T7k[359] = I8yy.r2k(11, 3, 168);
                I8yy.H2k(9);
                T7k[191] = I8yy.A2k(56, 19, 3);
                I8yy.P2k(12);
                T7k[244] = I8yy.r2k(16, 19, 2);
                T7k[59] = T7k[264] / (Math[v8yy[T7k[359]]] * T7k[191] * T7k[244]);
                T7k[94] = 10;
                T7k[77] = 5;
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`discs`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`discs`][T7k[653]] && m6(T7k[653]) == false) {
                        T7k[4][T7k[653]] = {
                            a1a: T7k[0][0][`discs`][T7k[653]][`a1a`],
                            team: T7k[0][0][`discs`][T7k[653]][`team`],
                            extraVelX: 0,
                            extraVelY: 0,
                            tcd: T7k[0][0][`discs`][T7k[653]][`tcd`],
                            ni: false
                        };
                        T7k[4][T7k[653]][`a1`] = T7k[0][1][T7k[653]] && T7k[0][1][T7k[653]][`action`];
                        T7k[4][T7k[653]][`a2`] = T7k[0][1][T7k[653]] && T7k[0][1][T7k[653]][`action2`];
                        T7k[4][T7k[653]][`radius`] = 1;
                        T7k[4][T7k[653]][`ds`] = T7k[0][0][`discs`][T7k[653]][`ds`];
                        T7k[4][T7k[653]][`da`] = T7k[0][0][`discs`][T7k[653]][`da`];
                        T7k[4][T7k[653]][`lhid`] = T7k[0][0][`discs`][T7k[653]][`lhid`];
                        T7k[4][T7k[653]][`lht`] = T7k[0][0][`discs`][T7k[653]][`lht`];
                        if (T7k[4][T7k[653]][`lht`] != 0) {
                            T7k[4][T7k[653]][`lht`]--;
                        }
                        if (T7k[4][T7k[653]][`lht`] == 0) {
                            T7k[4][T7k[653]][`lhid`] = -1;
                        }
                        if (T7k[0][4][`bal`][T7k[653]]) {
                            I8yy.P2k(43);
                            T7k[751] = I8yy.r2k(69, 3, 207, 190);
                            I8yy.P2k(44);
                            T7k[146] = I8yy.A2k(10719, 9, 1, 1200, 19);
                            T7k[44] = T7k[0][4][v8yy[T7k[751]]][T7k[653]] / T7k[146];
                            T7k[44] = Math[`max`](Math[`min`](T7k[44], 1), -0.95);
                            T7k[4][T7k[653]][`radius`] += T7k[44];
                        }
                        if (T7k[0][0][`discs`][T7k[653]][`swing`] && T7k[0][1][T7k[653]] && (T7k[0][1][T7k[653]][`action2`] || T7k[0][1][T7k[653]][`ml`])) {
                            T7k[4][T7k[653]][`swing`] = true;
                        }
                        if (T7k[0][4][`mo`] == "b" || T7k[0][4][`mo`] == "v") {
                            if (T7k[4][T7k[653]][`a1`]) {
                                T7k[4][T7k[653]][`a1a`] -= T7k[94];
                                if (T7k[4][T7k[653]][`a1a`] < 0) {
                                    T7k[4][T7k[653]][`a1a`] = 0;
                                }
                            }
                            if (T7k[4][T7k[653]] && T7k[0][1][T7k[653]] && T7k[0][1][T7k[653]][`action`] == false) {
                                T7k[4][T7k[653]][`a1a`] += T7k[77];
                                if (T7k[4][T7k[653]][`a1a`] > 1000) {
                                    T7k[4][T7k[653]][`a1a`] = 1000;
                                }
                            }
                        }
                        if (T7k[0][4][`mo`] == "sp") {
                            if (T7k[4][T7k[653]][`swing`]) {
                                T7k[4][T7k[653]][`a1a`] -= T7k[73];
                                if (T7k[4][T7k[653]][`a1a`] < 0) {
                                    T7k[4][T7k[653]][`a1a`] = 0;
                                }
                                if (T7k[4][T7k[653]][`a1a`] < T7k[27]) {
                                    T7k[4][T7k[653]][`a1a`] = 0;
                                    T7k[4][T7k[653]][`swing`] = false;
                                }
                            } else {
                                T7k[4][T7k[653]][`a1a`] += T7k[42];
                                if (T7k[4][T7k[653]][`a1a`] > 1000) {
                                    T7k[4][T7k[653]][`a1a`] = 1000;
                                }
                            }
                        }
                        if (T7k[0][0][`ftu`] == -1 && (T7k[0][4][`mo`] == "ar" || T7k[0][4][`mo`] == "ard")) {
                            T7k[4][T7k[653]][`a1a`] += 8;
                            if (T7k[4][T7k[653]][`a1a`] > 1000) {
                                T7k[4][T7k[653]][`a1a`] = 1000;
                            }
                        }
                        T7k[13] = T7k[59];
                        if (T7k[4][T7k[653]][`a1`] && T7k[0][4][`mo`] != "bs" && !(T7k[4][T7k[653]][`ds`] > 0)) {
                            I8yy.H2k(40);
                            T7k[131] = I8yy.r2k(3, 10, 112);
                            I8yy.H2k(42);
                            T7k[533] = I8yy.A2k(77, 16, 907);
                            T7k[70] = T7k[4][T7k[653]][v8yy[T7k[131]]] / T7k[533];
                            T7k[36] = T7k[59];
                            I8yy.H2k(13);
                            T7k[52] = I8yy.r2k(T7k[36], T7k[70], 3.7);
                            I8yy.H2k(0);
                            T7k[65] = I8yy.r2k(T7k[36], T7k[52]);
                            T7k[13] = T7k[65];
                        }
                        T7k[46] = new v2k[2]();
                        T7k[46][`type`] = v2k[6][`b2_dynamicBody`];
                        T7k[46][`position`][`Set`](T7k[0][0][`discs`][T7k[653]][`x`], T7k[0][0][`discs`][T7k[653]][`y`]);
                        T7k[46][`fixedRotation`] = true;
                        if (T7k[0][4][`mo`] == "v") {
                            T7k[46][`fixedRotation`] = false;
                        }
                        T7k[46][`linearDamping`] = 0.01;
                        T7k[46][`linearVelocity`][`Set`](T7k[0][0][`discs`][T7k[653]][`xv`], T7k[0][0][`discs`][T7k[653]][`yv`]);
                        T7k[46][`angularVelocity`] = T7k[0][0][`discs`][T7k[653]][`av`];
                        T7k[46][`angle`] = T7k[0][0][`discs`][T7k[653]][`a`];
                        T7k[46][`angularDamping`] = 3.4;
                        T7k[46][`userData`] = {
                            type: "disc",
                            arrayID: T7k[653],
                            team: T7k[0][0][`discs`][T7k[653]][`team`],
                            impulsesThisStep: 0
                        };
                        T7k[46][`bullet`] = true;
                        T7k[63] = T7k[62][`CreateBody`](T7k[46]);
                        T7k[17] = new v2k[28](T7k[4][T7k[653]][`radius`]);
                        T7k[21] = new v2k[91]();
                        T7k[21][`shape`] = T7k[17];
                        T7k[21][`density`] = T7k[13];
                        T7k[21][`friction`] = 0.001337;
                        T7k[21][`restitution`] = 0.95;
                        T7k[21][`filter`][`categoryBits`] = 1;
                        T7k[21][`userData`] = {
                            type: "discbody"
                        };
                        T7k[63][`CreateFixture`](T7k[21]);
                        if (T7k[0][4][`mo`] == "v") {
                            T7k[72] = new v2k[13]();
                            T7k[72][`SetAsOrientedBox`](E[`footHW`] * T7k[4][T7k[653]][`radius`], E[`footHH`] * T7k[4][T7k[653]][`radius`], new v2k[1](E[`footOffsetX`] * T7k[4][T7k[653]][`radius`],E[`footOffsetY`] * T7k[4][T7k[653]][`radius`]), 0);
                            T7k[25] = new v2k[91]();
                            T7k[25][`shape`] = T7k[72];
                            T7k[25][`density`] = 0.2;
                            T7k[25][`friction`] = 0.2;
                            T7k[25][`restitution`] = 0.7;
                            T7k[25][`filter`][`categoryBits`] = 1;
                            T7k[25][`userData`] = {
                                type: "vtolwing"
                            };
                            T7k[63][`CreateFixture`](T7k[25]);
                            T7k[92] = new v2k[13]();
                            T7k[92][`SetAsOrientedBox`](E[`footHW`] * T7k[4][T7k[653]][`radius`], E[`footHH`] * T7k[4][T7k[653]][`radius`], new v2k[1](-E[`footOffsetX`] * T7k[4][T7k[653]][`radius`],E[`footOffsetY`] * T7k[4][T7k[653]][`radius`]), 0);
                            T7k[25][`shape`] = T7k[92];
                            T7k[63][`CreateFixture`](T7k[25]);
                        }
                        T7k[4][T7k[653]][`body`] = T7k[63];
                        T7k[4][T7k[653]][`body`][`SetLinearVelocity`](new v2k[1](T7k[0][0][`discs`][T7k[653]][`xv`],T7k[0][0][`discs`][T7k[653]][`yv`]));
                        ;
                    }
                }
                T7k[96] = T7k[62][`GetGroundBody`]();
                T7k[96][`SetUserData`]({
                    arrayID: -1
                });
                T7k[78] = [];
                T7k[66] = [];
                T7k[18] = [];
                T7k[26] = [];
                T7k[95] = [];
                T7k[15] = [];
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`physics`][`shapes`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`physics`][`shapes`][T7k[653]]) {
                        T7k[40] = T7k[0][0][`physics`][`shapes`][T7k[653]];
                        if (T7k[0][0][`physics`][`shapes`][T7k[653]][`type`] == "bx") {
                            T7k[78][T7k[653]] = new v2k[13]();
                            T7k[67] = T7k[40][`c`][0];
                            T7k[28] = T7k[40][`c`][1];
                            I8yy.H2k(42);
                            T7k[883] = I8yy.A2k(5, 14, 40);
                            I8yy.P2k(45);
                            T7k[656] = I8yy.r2k(16, 17, 3010, 9, 19);
                            T7k[80] = T7k[40][v8yy[T7k[883]]] / T7k[656];
                            I8yy.P2k(32);
                            T7k[621] = I8yy.A2k(910, 960, 10);
                            I8yy.H2k(26);
                            T7k[549] = I8yy.A2k(16, 11, 322, 28);
                            T7k[84] = T7k[40][v8yy[T7k[621]]] / T7k[549];
                            T7k[61] = SafeTrig[`safeCos`](T7k[40][`a`]);
                            T7k[10] = SafeTrig[`safeSin`](T7k[40][`a`]);
                            I8yy.H2k(46);
                            T7k[47] = new v2k[1](I8yy.r2k(T7k[61], T7k[80], T7k[10], T7k[84]),I8yy.A2k(T7k[84], T7k[10], T7k[61], T7k[80], I8yy.H2k(47)));
                            I8yy.H2k(48);
                            T7k[75] = new v2k[1](I8yy.r2k(T7k[10], T7k[80], T7k[61], T7k[84]),I8yy.r2k(T7k[61], T7k[10], T7k[80], T7k[84], I8yy.H2k(49)));
                            I8yy.H2k(50);
                            T7k[11] = new v2k[1](I8yy.A2k(T7k[84], T7k[80], T7k[61], T7k[10]),I8yy.A2k(T7k[61], T7k[84], T7k[80], T7k[10], I8yy.H2k(51)));
                            I8yy.H2k(52);
                            T7k[86] = new v2k[1](I8yy.A2k(T7k[80], T7k[10], T7k[84], T7k[61]),I8yy.A2k(T7k[61], T7k[84], T7k[10], T7k[80], I8yy.P2k(53)));
                            T7k[47][`x`] += T7k[67];
                            T7k[47][`y`] += T7k[28];
                            T7k[75][`x`] += T7k[67];
                            T7k[75][`y`] += T7k[28];
                            T7k[11][`x`] += T7k[67];
                            T7k[11][`y`] += T7k[28];
                            T7k[86][`x`] += T7k[67];
                            T7k[86][`y`] += T7k[28];
                            T7k[78][T7k[653]][`SetAsArray`]([T7k[47], T7k[75], T7k[11], T7k[86]]);
                        } else if (T7k[0][0][`physics`][`shapes`][T7k[653]][`type`] == "ci") {
                            T7k[78][T7k[653]] = new v2k[28]();
                            T7k[78][T7k[653]][`SetRadius`](T7k[40][`r`]);
                            T7k[78][T7k[653]][`SetLocalPosition`](new v2k[1](T7k[40][`c`][0],T7k[40][`c`][1]));
                        } else if (T7k[0][0][`physics`][`shapes`][T7k[653]][`type`] == "po") {
                            T7k[83] = [];
                            for (T7k[568] = 0; T7k[568] < T7k[40][`v`][`length`]; T7k[568]++) {
                                T7k[83][T7k[568]] = new v2k[1](T7k[40][`v`][T7k[568]][0],T7k[40][`v`][T7k[568]][1]);
                            }
                            if (T7k[83][`length`] >= 3) {
                                T7k[78][T7k[653]] = new v2k[13]();
                                T7k[78][T7k[653]][`SetAsArray`](T7k[83]);
                            } else {
                                T7k[78][T7k[653]] = new v2k[28]();
                                T7k[78][T7k[653]][`SetRadius`](2);
                            }
                        } else if (T7k[0][0][`physics`][`shapes`][T7k[653]][`type`] == "ch") {
                            ;
                        }
                        T7k[78][T7k[653]][`arrayID`] = T7k[653];
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`physics`][`bodies`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`physics`][`bodies`][T7k[653]]) {
                        T7k[89] = T7k[0][0][`physics`][`bodies`][T7k[653]];
                        T7k[30] = false;
                        for (T7k[335] = 0; T7k[335] < T7k[89][`fx`][`length`]; T7k[335]++) {
                            if (T7k[0][0][`physics`][`fixtures`][T7k[89][`fx`][T7k[335]]][`np`] == false) {
                                T7k[30] = true;
                                break;
                            }
                        }
                        T7k[46] = new v2k[2]();
                        if (T7k[89][`type`] == "s" || T7k[30] == false) {
                            T7k[46][`type`] = v2k[6][`b2_staticBody`];
                        } else if (T7k[89][`type`] == "d") {
                            T7k[46][`type`] = v2k[6][`b2_dynamicBody`];
                        } else if (T7k[89][`type`] == "k") {
                            T7k[46][`type`] = v2k[6][`b2_kinematicBody`];
                        }
                        T7k[46][`position`][`Set`](T7k[89][`p`][0], T7k[89][`p`][1]);
                        T7k[46][`angle`] = T7k[89][`a`];
                        T7k[46][`linearVelocity`][`Set`](T7k[89][`lv`][0], T7k[89][`lv`][1]);
                        ;T7k[46][`angularVelocity`] = T7k[89][`av`];
                        T7k[46][`linearDamping`] = T7k[89][`ld`];
                        T7k[46][`angularDamping`] = T7k[89][`ad`];
                        T7k[81] = T7k[89][`fr`];
                        if (T7k[81]) {
                            for (T7k[907] = 0; T7k[907] < T7k[0][0][`physics`][`joints`][`length`]; T7k[907]++) {
                                if (T7k[0][0][`physics`][`joints`][T7k[907]]) {
                                    if (T7k[0][0][`physics`][`joints`][T7k[907]][`ba`] == T7k[653] || T7k[0][0][`physics`][`joints`][T7k[907]][`bb`] == T7k[653]) {
                                        T7k[81] = false;
                                    }
                                }
                            }
                        }
                        T7k[46][`fixedRotation`] = T7k[81];
                        T7k[46][`bullet`] = T7k[89][`bu`];
                        T7k[46][`userData`] = {
                            type: "phys",
                            arrayID: T7k[653]
                        };
                        T7k[66][T7k[653]] = T7k[62][`CreateBody`](T7k[46]);
                        for (T7k[568] = 0; T7k[568] < T7k[89][`fx`][`length`]; T7k[568]++) {
                            T7k[99] = T7k[0][0][`physics`][`fixtures`][T7k[89][`fx`][T7k[568]]];
                            if (T7k[99][`np`]) {
                                continue;
                            }
                            T7k[21] = new v2k[91]();
                            T7k[21][`friction`] = T7k[99][`fr`] != null ? T7k[99][`fr`] : T7k[89][`fric`];
                            T7k[29] = T7k[99][`fp`] != null ? T7k[99][`fp`] : T7k[89][`fricp`];
                            if (T7k[29]) {
                                T7k[21][`friction`] = -T7k[21][`friction`];
                            }
                            T7k[21][`restitution`] = T7k[99][`re`] != null ? T7k[99][`re`] : T7k[89][`re`];
                            T7k[21][`density`] = T7k[99][`de`] != null ? T7k[99][`de`] : T7k[89][`de`];
                            if (T7k[21][`density`] <= 0) {
                                T7k[21][`density`] = 0.0001;
                            }
                            T7k[21][`isSensor`] = false;
                            I8yy.P2k(54);
                            T7k[144] = I8yy.A2k(12, 15, 272, 15, 10);
                            I8yy.H2k(55);
                            T7k[929] = I8yy.r2k(234, 14, 13, 227, 227);
                            I8yy.H2k(9);
                            T7k[750] = I8yy.A2k(188, 19, 10);
                            T7k[21][`filter`][`categoryBits`] = Math[`pow`](T7k[144], T7k[89][v8yy[T7k[929]]]) * T7k[750];
                            T7k[21][`filter`][`maskBits`] = 65535;
                            if (T7k[89][`f_p`] == false) {
                                T7k[21][`filter`][`maskBits`] -= 1;
                            }
                            if (T7k[89][`f_1`] == false) {
                                T7k[21][`filter`][`maskBits`] -= 4;
                            }
                            if (T7k[89][`f_2`] == false) {
                                T7k[21][`filter`][`maskBits`] -= 8;
                            }
                            if (T7k[89][`f_3`] == false) {
                                T7k[21][`filter`][`maskBits`] -= 16;
                            }
                            if (T7k[89][`f_4`] == false) {
                                T7k[21][`filter`][`maskBits`] -= 32;
                            }
                            T7k[21][`userData`] = {
                                arrayID: T7k[89][`fx`][T7k[568]],
                                color: T7k[99][`f`],
                                death: T7k[99][`d`],
                                noPhysics: T7k[99][`np`],
                                noGrapple: T7k[99][`ng`],
                                innerGrapple: T7k[99][`ig`]
                            };
                            T7k[21][`shape`] = T7k[78][T7k[99][`sh`]];
                            T7k[18][T7k[89][`fx`][T7k[568]]] = T7k[66][T7k[653]][`CreateFixture`](T7k[21]);
                        }
                        T7k[66][T7k[653]][`SetLinearVelocity`](new v2k[1](T7k[89][`lv`][0],T7k[89][`lv`][1]));
                        if (T7k[89][`cf`] && T7k[0][0][`ftu`] == -1) {
                            if (T7k[89][`cf`][`x`] != 0 || T7k[89][`cf`][`y`] != 0) {
                                T7k[23] = new v2k[1](T7k[89][`cf`][`x`],T7k[89][`cf`][`y`]);
                                if (T7k[89][`cf`][`w`] == false) {
                                    T7k[23] = T7k[66][T7k[653]][`GetWorldVector`](T7k[23], T7k[23]);
                                }
                                T7k[66][T7k[653]][`GetLinearVelocity`]()[`x`] += T7k[23][`x`];
                                T7k[66][T7k[653]][`GetLinearVelocity`]()[`y`] += T7k[23][`y`];
                            }
                            if (T7k[89][`cf`][`ct`] != 0) {
                                T7k[38] = T7k[66][T7k[653]][`GetAngularVelocity`]();
                                T7k[38] += T7k[89][`cf`][`ct`];
                                T7k[66][T7k[653]][`SetAngularVelocity`](T7k[38]);
                            }
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`physics`][`joints`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`physics`][`joints`][T7k[653]]) {
                        T7k[51] = T7k[0][0][`physics`][`joints`][T7k[653]];
                        T7k[49] = T7k[51][`ba`] == -1 ? T7k[96] : T7k[66][T7k[51][`ba`]];
                        T7k[60] = T7k[51][`bb`] == -1 ? T7k[96] : T7k[66][T7k[51][`bb`]];
                        if (T7k[51][`type`] == "lpj") {
                            I8yy.H2k(32);
                            T7k[214] = I8yy.r2k(2, 236, 15);
                            T7k[97] = T7k[51][v8yy[T7k[214]]] - T7k[49][`GetAngle`]();
                            T7k[12] = SafeTrig[`safeCos`](T7k[97]);
                            T7k[88] = SafeTrig[`safeSin`](T7k[97]);
                            T7k[31] = new v2k[93]();
                            T7k[31][`bodyA`] = T7k[49];
                            T7k[31][`localAnchorA`] = new v2k[1]();
                            T7k[31][`bodyB`] = T7k[60];
                            T7k[31][`localAnchorB`] = new v2k[1](T7k[51][`pax`],T7k[51][`pay`]);
                            T7k[31][`referenceAngle`] = -T7k[49][`GetAngle`]();
                            T7k[31][`upperTranslation`] = T7k[51][`plen`];
                            T7k[31][`lowerTranslation`] = -T7k[51][`plen`];
                            T7k[31][`enableLimit`] = true;
                            T7k[31][`localAxisA`] = new v2k[1](T7k[12],T7k[88]);
                            T7k[31][`enableMotor`] = true;
                            T7k[31][`maxMotorForce`] = T7k[51][`pf`];
                            T7k[31][`motorSpeed`] = T7k[51][`pms`];
                            T7k[48] = T7k[51][`pa`];
                            I8yy.P2k(0);
                            T7k[208] = I8yy.r2k(65, 13);
                            I8yy.H2k(42);
                            T7k[348] = I8yy.A2k(64, 3, 13);
                            T7k[57] = T7k[51][v8yy[T7k[208]]] + SafeTrig[`safeCos`](T7k[48]) * -T7k[51][v8yy[T7k[348]]];
                            I8yy.P2k(32);
                            T7k[270] = I8yy.r2k(573, 632, 20);
                            I8yy.P2k(56);
                            T7k[986] = I8yy.r2k(7, 74, 18, 5);
                            T7k[58] = T7k[51][v8yy[T7k[270]]] + SafeTrig[`safeSin`](T7k[48]) * -T7k[51][v8yy[T7k[986]]];
                            T7k[56] = T7k[49][`GetPosition`]()[`Copy`]();
                            T7k[56][`Subtract`](new v2k[1](T7k[57],T7k[58]));
                            T7k[19] = T7k[56][`Length`]();
                            I8yy.H2k(57);
                            T7k[557] = I8yy.r2k(5, 6, 10, 13, 320);
                            I8yy.H2k(58);
                            T7k[477] = I8yy.A2k(2, 1, 8, 4);
                            T7k[74] = T7k[19] / (T7k[51][v8yy[T7k[557]]] * T7k[477]);
                            T7k[74] -= 0.5;
                            T7k[74] *= 2;
                            if (T7k[51][`pms`] < 0 && T7k[74] > 0.99 || T7k[51][`pms`] > 0 && T7k[74] < -0.99) {
                                T7k[31][`motorSpeed`] = -T7k[31][`motorSpeed`];
                                T7k[49][`SetLinearVelocity`](new v2k[1](0,0));
                            }
                            T7k[26][T7k[653]] = T7k[62][`CreateJoint`](T7k[31]);
                        }
                        if (T7k[51][`type`] == "lsj") {
                            I8yy.H2k(16);
                            T7k[491] = I8yy.r2k(164, 12, 626, 5);
                            T7k[32] = Math[v8yy[T7k[491]]] / 2;
                            T7k[55] = SafeTrig[`safeCos`](T7k[32]);
                            T7k[24] = SafeTrig[`safeSin`](T7k[32]);
                            T7k[87] = new v2k[93]();
                            T7k[87][`bodyA`] = T7k[49];
                            T7k[87][`localAnchorA`] = new v2k[1]();
                            T7k[87][`bodyB`] = T7k[60];
                            T7k[87][`localAnchorB`] = new v2k[1](T7k[51][`sax`],T7k[51][`say`]);
                            T7k[87][`referenceAngle`] = -T7k[49][`GetAngle`]();
                            T7k[87][`upperTranslation`] = T7k[51][`slen`];
                            T7k[87][`lowerTranslation`] = -T7k[51][`slen`];
                            T7k[87][`enableLimit`] = false;
                            T7k[87][`localAxisA`] = new v2k[1](0,1);
                            T7k[87][`enableMotor`] = true;
                            T7k[87][`maxMotorForce`] = T7k[51][`sf`];
                            T7k[87][`motorSpeed`] = 300;
                            T7k[50] = T7k[49][`GetAngle`]() - T7k[32];
                            I8yy.P2k(0);
                            T7k[228] = I8yy.r2k(9, 74);
                            I8yy.H2k(0);
                            T7k[877] = I8yy.A2k(7, 78);
                            T7k[76] = T7k[51][v8yy[T7k[228]]] + SafeTrig[`safeCos`](T7k[50]) * -T7k[51][v8yy[T7k[877]]];
                            I8yy.P2k(59);
                            T7k[990] = I8yy.A2k(12, 84588, 3, 168, 14);
                            I8yy.H2k(23);
                            T7k[106] = I8yy.A2k(3, 12, 232, 75, 17);
                            T7k[69] = T7k[51][v8yy[T7k[990]]] + SafeTrig[`safeSin`](T7k[50]) * -T7k[51][v8yy[T7k[106]]];
                            T7k[41] = T7k[49][`GetPosition`]()[`Copy`]();
                            T7k[41][`Subtract`](new v2k[1](T7k[76],T7k[69]));
                            T7k[85] = T7k[41][`Length`]();
                            I8yy.P2k(9);
                            T7k[114] = I8yy.A2k(576, 14, 44);
                            I8yy.H2k(60);
                            T7k[647] = I8yy.A2k(14, 49, 2, 8);
                            T7k[35] = SafeTrig[`safeATan2`](T7k[41][v8yy[T7k[114]]], T7k[41][v8yy[T7k[647]]]) - T7k[49][`GetAngle`]();
                            I8yy.P2k(12);
                            T7k[948] = I8yy.r2k(12, 32, 18);
                            I8yy.H2k(42);
                            T7k[250] = I8yy.r2k(162, 17, 3);
                            T7k[35] = T7k[35] % (T7k[948] * Math[v8yy[T7k[250]]]);
                            if (T7k[35] < 0 && T7k[35] >= -Math[`PI`] || T7k[35] > Math[`PI`]) {
                                T7k[85] = T7k[85];
                            } else {
                                T7k[85] = -T7k[85];
                            }
                            I8yy.P2k(0);
                            T7k[858] = I8yy.A2k(72, 13);
                            I8yy.H2k(61);
                            T7k[975] = I8yy.r2k(1, 17, 21, 5, 11);
                            T7k[39] = T7k[85] / (T7k[51][v8yy[T7k[858]]] * T7k[975]);
                            T7k[39] -= 0.5;
                            T7k[39] *= 2;
                            I8yy.H2k(62);
                            T7k[875] = I8yy.r2k(74, 1, 9, 8, 13);
                            T7k[87][`maxMotorForce`] = T7k[51][v8yy[T7k[875]]] * Math[`abs`](T7k[39]);
                            if (T7k[39] > 0) {
                                T7k[87][`motorSpeed`] = -300;
                                ;
                            }
                            T7k[26][T7k[653]] = T7k[62][`CreateJoint`](T7k[87]);
                        }
                        if (T7k[51][`type`] == "rv") {
                            T7k[34] = new v2k[50]();
                            T7k[34][`bodyA`] = T7k[49];
                            T7k[34][`bodyB`] = T7k[60];
                            T7k[34][`localAnchorA`][`Set`](T7k[51][`aa`][0], T7k[51][`aa`][1]);
                            T7k[34][`localAnchorB`][`Set`](T7k[51][`ab`][0], T7k[51][`ab`][1]);
                            T7k[34][`enableLimit`] = T7k[51][`d`][`el`];
                            T7k[34][`lowerAngle`] = T7k[51][`d`][`la`];
                            T7k[34][`upperAngle`] = T7k[51][`d`][`ua`];
                            T7k[34][`enableMotor`] = T7k[51][`d`][`em`];
                            T7k[34][`motorSpeed`] = T7k[51][`d`][`ms`];
                            T7k[34][`maxMotorTorque`] = T7k[51][`d`][`mmt`];
                            I8yy.H2k(63);
                            T7k[132] = I8yy.A2k(88, 1, 12, 7, 12);
                            I8yy.P2k(0);
                            T7k[394] = I8yy.A2k(260, 12);
                            T7k[34][`collideConnected`] = T7k[51][v8yy[T7k[132]]][v8yy[T7k[394]]] === true;
                            T7k[26][T7k[653]] = T7k[62][`CreateJoint`](T7k[34]);
                        }
                        if (T7k[51][`type`] == "p") {
                            T7k[34] = new v2k[93]();
                            T7k[34][`bodyA`] = T7k[49];
                            T7k[34][`bodyB`] = T7k[60];
                            T7k[34][`localAnchorA`][`Set`](T7k[51][`aa`][0], T7k[51][`aa`][1]);
                            T7k[34][`localAnchorB`][`Set`](T7k[51][`ab`][0], T7k[51][`ab`][1]);
                            T7k[34][`localAxisA`][`Set`](T7k[51][`axa`][0], T7k[51][`axa`][1]);
                            T7k[34][`enableLimit`] = T7k[51][`d`][`el`];
                            T7k[34][`lowerTranslation`] = T7k[51][`d`][`lt`];
                            T7k[34][`upperTranslation`] = T7k[51][`d`][`ut`];
                            T7k[34][`enableMotor`] = T7k[51][`d`][`em`];
                            T7k[34][`motorSpeed`] = T7k[51][`d`][`ms`];
                            T7k[34][`maxMotorForce`] = T7k[51][`d`][`mmf`];
                            I8yy.H2k(0);
                            T7k[838] = I8yy.A2k(59, 12);
                            I8yy.P2k(9);
                            T7k[855] = I8yy.r2k(3160, 12, 286);
                            T7k[34][`collideConnected`] = T7k[51][v8yy[T7k[838]]][v8yy[T7k[855]]] === true;
                            T7k[26][T7k[653]] = T7k[62][`CreateJoint`](T7k[34]);
                            T7k[746] = T7k[26][T7k[653]][`GetJointTranslation`]();
                            T7k[670] = {
                                changeSide: T7k[51][`cs`]
                            };
                            if (T7k[51][`d`][`cd`] && T7k[51][`d`][`el`]) {
                                if ((T7k[51][`cs`] == 0 || T7k[51][`cs`] == 1) && T7k[746] > 0 && T7k[746] / T7k[51][`d`][`ut`] > 0.99) {
                                    T7k[26][T7k[653]][`SetMotorSpeed`](-T7k[26][T7k[653]][`GetMotorSpeed`]());
                                    T7k[670][`changeSide`] = 2;
                                } else if ((T7k[51][`cs`] == 0 || T7k[51][`cs`] == 2) && T7k[746] < 0 && T7k[746] / T7k[51][`d`][`lt`] > 0.99) {
                                    T7k[26][T7k[653]][`SetMotorSpeed`](-T7k[26][T7k[653]][`GetMotorSpeed`]());
                                    T7k[670][`changeSide`] = 1;
                                }
                            }
                            T7k[26][T7k[653]][`SetUserData`](T7k[670]);
                        }
                        if (T7k[51][`type`] == "d") {
                            T7k[34] = new v2k[96]();
                            T7k[34][`bodyA`] = T7k[49];
                            T7k[34][`bodyB`] = T7k[60];
                            T7k[34][`localAnchorA`][`Set`](T7k[51][`aa`][0], T7k[51][`aa`][1]);
                            T7k[34][`localAnchorB`][`Set`](T7k[51][`ab`][0], T7k[51][`ab`][1]);
                            T7k[34][`length`] = T7k[51][`len`];
                            T7k[34][`frequencyHz`] = T7k[51][`d`][`fh`];
                            T7k[34][`dampingRatio`] = T7k[51][`d`][`dr`];
                            I8yy.H2k(0);
                            T7k[489] = I8yy.A2k(63, 8);
                            I8yy.H2k(26);
                            T7k[468] = I8yy.r2k(9, 11, 2828, 281);
                            T7k[34][`collideConnected`] = T7k[51][v8yy[T7k[489]]][v8yy[T7k[468]]] === true;
                            T7k[26][T7k[653]] = T7k[62][`CreateJoint`](T7k[34]);
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`physics`][`joints`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`physics`][`joints`][T7k[653]]) {
                        T7k[51] = T7k[0][0][`physics`][`joints`][T7k[653]];
                        T7k[49] = T7k[51][`ba`] == -1 ? T7k[96] : T7k[66][T7k[51][`ba`]];
                        T7k[60] = T7k[51][`bb`] == -1 ? T7k[96] : T7k[66][T7k[51][`bb`]];
                        if (T7k[51][`type`] == "g") {
                            T7k[34] = new v2k[71]();
                            T7k[34][`bodyA`] = T7k[49];
                            T7k[34][`bodyB`] = T7k[60];
                            T7k[34][`joint1`] = T7k[26][T7k[51][`ja`]];
                            T7k[34][`joint2`] = T7k[26][T7k[51][`jb`]];
                            T7k[34][`ratio`] = T7k[51][`d`][`r`];
                            I8yy.H2k(41);
                            T7k[135] = I8yy.A2k(11, 5, 2, 86, 2294);
                            I8yy.P2k(1);
                            T7k[273] = I8yy.r2k(3536, 3808);
                            T7k[34][`collideConnected`] = T7k[51][v8yy[T7k[135]]][v8yy[T7k[273]]] === true;
                            T7k[26][T7k[653]] = T7k[62][`CreateJoint`](T7k[34]);
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`capZones`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`capZones`][T7k[653]]) {
                        T7k[439] = T7k[0][0][`capZones`][T7k[653]][`i`];
                        if (T7k[18][T7k[439]]) {
                            T7k[670] = T7k[18][T7k[439]][`GetUserData`]();
                            T7k[670][`capzone`] = true;
                            T7k[670][`capID`] = T7k[653];
                            T7k[670][`capType`] = T7k[0][0][`capZones`][T7k[653]][`ty`];
                            ;
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[4][`length`]; T7k[653]++) {
                    if (T7k[4][T7k[653]] && T7k[4][T7k[653]][`swing`]) {
                        T7k[40] = T7k[0][0][`discs`][T7k[653]][`swing`];
                        T7k[331] = new v2k[1](T7k[40][`p`][0],T7k[40][`p`][1]);
                        T7k[775] = new v2k[1]();
                        T7k[775] = T7k[66][T7k[40][`b`]][`GetWorldPoint`](T7k[331]);
                        T7k[857] = v2k[82][`Distance`](T7k[4][T7k[653]][`body`][`GetPosition`](), T7k[775]);
                        T7k[34] = new v2k[96]();
                        T7k[34][`bodyA`] = T7k[4][T7k[653]][`body`];
                        T7k[34][`bodyB`] = T7k[66][T7k[40][`b`]];
                        T7k[34][`localAnchorA`][`Set`](0, 0);
                        T7k[34][`localAnchorB`][`Set`](T7k[40][`p`][0], T7k[40][`p`][1]);
                        T7k[34][`length`] = T7k[40][`l`];
                        if (T7k[857] < T7k[40][`l`]) {
                            T7k[34][`frequencyHz`] = 0.01;
                        } else {
                            T7k[34][`frequencyHz`] = E[`swingF`];
                        }
                        T7k[34][`dampingRatio`] = E[`swingD`];
                        T7k[34][`collideConnected`] = true;
                        T7k[4][T7k[653]][`swingJoint`] = T7k[62][`CreateJoint`](T7k[34]);
                        ;
                    }
                }
                for (T7k[826] = 0; T7k[826] < T7k[0][0][`projectiles`][`length`]; T7k[826]++) {
                    if (T7k[0][0][`projectiles`][T7k[826]]) {
                        T7k[708] = T7k[0][0][`projectiles`][T7k[826]];
                        T7k[909] = new v2k[2]();
                        T7k[909][`type`] = v2k[6][`b2_dynamicBody`];
                        T7k[909][`position`][`Set`](T7k[708][`x`], T7k[708][`y`]);
                        T7k[909][`userData`] = {
                            type: T7k[708][`type`],
                            arrayID: T7k[826],
                            discID: T7k[708][`did`],
                            fte: T7k[708][`fte`],
                            hitDiscsThisStep: [],
                            hitWorldThisStep: false,
                            destroyThisStep: false,
                            team: T7k[708][`team`]
                        };
                        T7k[711] = new v2k[1](T7k[708][`xv`],T7k[708][`yv`]);
                        if (T7k[711][`Length`]() > 4) {
                            T7k[909][`angle`] = SafeTrig[`safeATan2`](T7k[708][`yv`], T7k[708][`xv`]);
                            T7k[909][`angularVelocity`] = 0;
                        } else {
                            T7k[909][`angle`] = T7k[708][`a`];
                            T7k[909][`angularVelocity`] = T7k[708][`av`];
                        }
                        T7k[909][`angularDamping`] = 0;
                        T7k[909][`bullet`] = true;
                        T7k[421] = T7k[62][`CreateBody`](T7k[909]);
                        T7k[581] = new v2k[13]();
                        I8yy.H2k(2);
                        T7k[581][`SetAsBox`](I8yy.A2k(T7k[93], 2), I8yy.A2k(T7k[43], 2), new v2k[1](0,0), 0);
                        T7k[860] = new v2k[91]();
                        T7k[860][`shape`] = T7k[581];
                        T7k[860][`density`] = T7k[71];
                        T7k[860][`friction`] = T7k[37];
                        T7k[860][`restitution`] = T7k[98];
                        T7k[860][`isSensor`] = false;
                        T7k[860][`userData`] = {
                            type: T7k[708][`type`],
                            arrayID: T7k[826]
                        };
                        T7k[421][`CreateFixture`](T7k[860]);
                        T7k[64][T7k[826]] = T7k[421];
                        T7k[421][`SetLinearVelocity`](T7k[711]);
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[4][`length`]; T7k[653]++) {
                    if (T7k[4][T7k[653]] && T7k[0][1][T7k[653]] && T7k[0][0][`ftu`] == -1) {
                        I8yy.H2k(7);
                        T7k[950] = I8yy.r2k(161, 17, 3, 176, 176);
                        I8yy.H2k(0);
                        T7k[635] = I8yy.A2k(185, 3);
                        I8yy.P2k(62);
                        T7k[379] = I8yy.A2k(183, 1, 8, 6, 7);
                        I8yy.P2k(21);
                        T7k[275] = I8yy.r2k(180, 146, 5);
                        I8yy.P2k(8);
                        T7k[970] = I8yy.r2k(2, 0, 16, 20, 10);
                        I8yy.H2k(1);
                        T7k[481] = I8yy.r2k(18, 19);
                        T7k[915] = Math[v8yy[T7k[950]]] * T7k[4][T7k[653]][v8yy[T7k[635]]] * T7k[4][T7k[653]][v8yy[T7k[379]]] / (Math[v8yy[T7k[275]]] * T7k[970] * T7k[481]);
                        if (T7k[0][4][`mo`] == "b" || T7k[0][4][`mo`] == "bs" || T7k[0][4][`mo`] == "sp" || T7k[0][4][`mo`] == "ar" && T7k[4][T7k[653]][`ds`] == 0 || T7k[0][4][`mo`] == "ard" && T7k[4][T7k[653]][`ds`] == 0) {
                            T7k[808] = new v2k[1](0,0);
                            T7k[876] = 12;
                            if (T7k[0][0][`ms`][`fl`]) {
                                T7k[876] = 20;
                            }
                            T7k[876] *= T7k[915];
                            if (T7k[0][1][T7k[653]][`up`]) {
                                T7k[808][`y`] = -T7k[876];
                            } else if (T7k[0][1][T7k[653]][`down`]) {
                                T7k[808][`y`] = T7k[876];
                            }
                            if (T7k[0][1][T7k[653]][`left`]) {
                                T7k[808][`x`] = -T7k[876];
                            } else if (T7k[0][1][T7k[653]][`right`]) {
                                T7k[808][`x`] = T7k[876];
                            }
                            if (T7k[0][1][T7k[653]][`action`]) {
                                T7k[808][`Multiply`](0.7);
                            }
                            T7k[4][T7k[653]][`body`][`ApplyForce`](T7k[808], T7k[4][T7k[653]][`body`][`GetWorldCenter`]());
                        }
                        function H9(r0H, A0H, P0H) {
                            var u7k = [arguments];
                                                        u7k[9] = new v2k[1](T7k[0][0][`discs`][u7k[0][0]][`x`],T7k[0][0][`discs`][u7k[0][0]][`y`]);
                            I8yy.H2k(64);
                            u7k[1] = I8yy.r2k(T7k[90], T7k[82], u7k[0][1]);
                            u7k[2] = 1;
                            u7k[8] = SafeTrig[`safeCos`](u7k[0][2]) * u7k[2];
                            u7k[6] = SafeTrig[`safeSin`](u7k[0][2]) * u7k[2];
                            u7k[4] = T7k[4][u7k[0][0]][`team`];
                            u7k[3] = {
                                x: u7k[9][`x`] + u7k[8],
                                y: u7k[9][`y`] + u7k[6],
                                a: u7k[0][2],
                                av: 0,
                                did: u7k[0][0],
                                xv: SafeTrig[`safeCos`](u7k[0][2]) * u7k[1],
                                yv: SafeTrig[`safeSin`](u7k[0][2]) * u7k[1],
                                fte: T7k[16],
                                type: "arrow",
                                team: u7k[4]
                            };
                            T7k[68][`push`](u7k[3]);
                        }
                        if (T7k[0][4][`mo`] == "v") {
                            ;
                        }
                        if (T7k[0][4][`mo`] == "ar" || T7k[0][4][`mo`] == "ard") {
                            if (T7k[0][1][T7k[653]][`action2`]) {
                                if (T7k[4][T7k[653]][`a1a`] == 1000) {
                                    if (T7k[4][T7k[653]][`ds`] == 0) {
                                        T7k[4][T7k[653]][`ds`] = 1;
                                    } else {
                                        T7k[4][T7k[653]][`ds`] += T7k[91];
                                        T7k[4][T7k[653]][`ds`] = Math[`min`](100, T7k[4][T7k[653]][`ds`]);
                                    }
                                    if (T7k[0][1][T7k[653]][`left`]) {
                                        T7k[4][T7k[653]][`da`] -= T7k[45];
                                    }
                                    if (T7k[0][1][T7k[653]][`right`]) {
                                        T7k[4][T7k[653]][`da`] += T7k[45];
                                    }
                                    if (T7k[4][T7k[653]][`da`] < 0) {
                                        T7k[4][T7k[653]][`da`] += 360;
                                    }
                                    if (T7k[4][T7k[653]][`da`] >= 360) {
                                        T7k[4][T7k[653]][`da`] -= 360;
                                    }
                                }
                            } else {
                                if (T7k[4][T7k[653]][`ds`] != 0) {
                                    H9(T7k[653], T7k[4][T7k[653]][`ds`], T7k[4][T7k[653]][`da`] * (Math[`PI`] / 180));
                                    T7k[4][T7k[653]][`a1a`] = 500;
                                    T7k[4][T7k[653]][`ds`] = 0;
                                }
                            }
                        }
                        if (T7k[0][1][T7k[653]][`up`] && Math[`abs`](T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[`y`]) < 4) {
                            T7k[157] = (H3,K7,r7,R7)=>{
                                I8yy.w9b();
                                var i3, z3, I7, v7, g7, W7;
                                                                i3 = H3[`GetBody`]()[`GetUserData`]();
                                if (i3[`type`] != "phys") {
                                    return -1;
                                }
                                z3 = H3[`GetUserData`]();
                                I7 = H3[`GetFilterData`]()[`maskBits`];
                                I8yy.P2k(65);
                                v7 = I8yy.r2k(1, I7, 1);
                                if (z3[`capzone`] || z3[`death`] || v7 == false) {
                                    return -1;
                                }
                                g7 = T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[`y`];
                                W7 = H3[`GetBody`]()[`GetLinearVelocity`]()[`y`];
                                T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[`y`] -= 10;
                                return 0;
                            }
                            ;
                            T7k[638] = new v2k[1](T7k[0][0][`discs`][T7k[653]][`x`],T7k[0][0][`discs`][T7k[653]][`y`]);
                            I8yy.P2k(0);
                            T7k[272] = I8yy.r2k(35, 6);
                            I8yy.H2k(40);
                            T7k[822] = I8yy.A2k(10, 7, 43);
                            I8yy.P2k(0);
                            T7k[363] = I8yy.A2k(179, 9);
                            T7k[194] = new v2k[1](T7k[0][0][`discs`][T7k[653]][`x`],T7k[0][0][v8yy[T7k[272]]][T7k[653]][v8yy[T7k[822]]] + (T7k[4][T7k[653]][v8yy[T7k[363]]] + 0.15));
                            T7k[62][`RayCast`](T7k[157], T7k[638], T7k[194]);
                        }
                        if (!T7k[0][0][`discs`][T7k[653]][`swing`] && T7k[0][1][T7k[653]][`action2`] && T7k[0][4][`mo`] == "sp" && T7k[4][T7k[653]][`a1a`] > T7k[27]) {
                            (function() {
                                var b7k = [arguments];
                                b7k[1] = 151533285;
                                I8yy.w9b();
                                b7k[9] = -383895795;
                                b7k[8] = -489775596;
                                b7k[4] = -1546039546;
                                if (true/*!(I8yy.u1G(0, false, 487499) !== b7k[1] && I8yy.u1G(0, false, 219070) !== b7k[9] && I8yy.q1G(0, false, 169931) !== b7k[8] && I8yy.u1G(0, false, 423168) !== b7k[4] && !I8yy.d8U())*/) {
                                                                        T7k[473] = 10;
                                    T7k[638] = new v2k[1](T7k[0][0][`discs`][T7k[653]][`x`],T7k[0][0][`discs`][T7k[653]][`y`]);
                                    T7k[370] = -1;
                                    T7k[631] = null;
                                    T7k[345] = Infinity;
                                    b7k[3] = new v2k[75]();
                                    I8yy.P2k(12);
                                    b7k[20] = I8yy.A2k(7, 429, 383);
                                    I8yy.P2k(31);
                                    b7k[56] = I8yy.r2k(3, 320, 965, 15);
                                    b7k[3][`lowerBound`] = new v2k[1](T7k[638][v8yy[b7k[20]]] - T7k[473],T7k[638][v8yy[b7k[56]]] - T7k[473]);
                                    I8yy.P2k(66);
                                    b7k[27] = I8yy.A2k(13, 17, 624, 16, 169676);
                                    I8yy.P2k(16);
                                    b7k[58] = I8yy.r2k(54, 8, 654, 13);
                                    b7k[3][`upperBound`] = new v2k[1](T7k[638][v8yy[b7k[27]]] + T7k[473],T7k[638][v8yy[b7k[58]]] + T7k[473]);
                                    b7k[2] = [];
                                    T7k[62][`QueryAABB`](G7, b7k[3]);
                                    b7k[7] = [];
                                    for (b7k[68] = 0; b7k[68] < b7k[2][`length`]; b7k[68]++) {
                                        if (b7k[2][b7k[68]][`GetShape`]()[`GetType`]() == 0) {
                                            b7k[6] = b7k[2][b7k[68]][`GetShape`]()[`GetLocalPosition`]();
                                            b7k[97] = b7k[2][b7k[68]][`GetBody`]()[`GetWorldPoint`](b7k[6]);
                                            b7k[97][`Subtract`](T7k[638]);
                                            b7k[13] = b7k[97][`Length`]();
                                            b7k[98] = b7k[97];
                                            b7k[97] = null;
                                            b7k[87] = b7k[13] - b7k[2][b7k[68]][`GetShape`]()[`GetRadius`]();
                                            I8yy.P2k(2);
                                            b7k[51] = I8yy.r2k(b7k[87], b7k[13]);
                                            if (b7k[87] < T7k[473]) {
                                                b7k[98][`Multiply`](b7k[51]);
                                                b7k[98][`Add`](T7k[638]);
                                                T7k[631] = b7k[98];
                                                b7k[77] = {
                                                    b: b7k[2][b7k[68]][`GetBody`](),
                                                    f: b7k[2][b7k[68]],
                                                    wp: b7k[98],
                                                    d: b7k[87]
                                                };
                                                b7k[7][`push`](b7k[77]);
                                            }
                                        }
                                        if (b7k[2][b7k[68]][`GetShape`]()[`GetType`]() == 1) {
                                            b7k[80] = b7k[2][b7k[68]][`GetShape`]()[`GetVertices`]();
                                            for (b7k[91] = 0; b7k[91] < b7k[80][`length`]; b7k[91]++) {
                                                I8yy.H2k(0);
                                                b7k[21] = I8yy.r2k(b7k[91], 1);
                                                if (b7k[21] >= b7k[80][`length`]) {
                                                    b7k[21] = 0;
                                                }
                                                b7k[76] = m7(T7k[638], b7k[2][b7k[68]][`GetBody`]()[`GetWorldPoint`](b7k[80][b7k[91]]), b7k[2][b7k[68]][`GetBody`]()[`GetWorldPoint`](b7k[80][b7k[21]]));
                                                b7k[85] = b7k[76][`Copy`]();
                                                b7k[85][`Subtract`](T7k[638]);
                                                b7k[86] = b7k[85][`Length`]();
                                                if (b7k[86] < T7k[473]) {
                                                    b7k[99] = {
                                                        b: b7k[2][b7k[68]][`GetBody`](),
                                                        f: b7k[2][b7k[68]],
                                                        wp: b7k[76],
                                                        d: b7k[86]
                                                    };
                                                    b7k[7][`push`](b7k[99]);
                                                }
                                            }
                                            function m7(H0H, v0H, i0H) {
                                                var d7k = [arguments];
                                                d7k[7] = 974874589;
                                                d7k[5] = -1112500963;
                                                d7k[8] = 1409251525;
                                                d7k[9] = 1772695524;
                                                if (true/*I8yy.u1G(0, false, 993767) === d7k[7] || I8yy.u1G(0, false, 567891) === d7k[5] || I8yy.u1G(0, false, 936131) === d7k[8] || I8yy.u1G(0, false, 442238) === d7k[9] || I8yy.Y8U()*/) {
                                                                                                        d7k[1] = new v2k[1]();
                                                    d7k[6] = new v2k[1]();
                                                    d7k[4] = new v2k[1]();
                                                    d7k[6][`SetV`](d7k[0][2]);
                                                    d7k[6][`Subtract`](d7k[0][1]);
                                                    d7k[4][`SetV`](d7k[0][0]);
                                                    d7k[4][`Subtract`](d7k[0][1]);
                                                    I8yy.H2k(1);
                                                    d7k[10] = I8yy.A2k(20, 59);
                                                    I8yy.P2k(40);
                                                    d7k[14] = I8yy.A2k(10, 20, 29);
                                                    I8yy.P2k(67);
                                                    d7k[69] = I8yy.r2k(16, 42, 5, 13, 36);
                                                    I8yy.P2k(0);
                                                    d7k[84] = I8yy.r2k(4, 36);
                                                    d7k[2] = d7k[6][v8yy[d7k[10]]] * d7k[6][v8yy[d7k[14]]] + d7k[6][v8yy[d7k[69]]] * d7k[6][v8yy[d7k[84]]];
                                                    I8yy.H2k(30);
                                                    d7k[78] = I8yy.A2k(18, 10, 16, 11, 52);
                                                    I8yy.P2k(68);
                                                    d7k[52] = I8yy.r2k(29, 2, 3, 187, 4);
                                                    I8yy.P2k(1);
                                                    d7k[79] = I8yy.r2k(80, 120);
                                                    I8yy.H2k(69);
                                                    d7k[49] = I8yy.A2k(7186, 14, 20, 360, 39);
                                                    d7k[12] = d7k[4][v8yy[d7k[78]]] * d7k[6][v8yy[d7k[52]]] + d7k[4][v8yy[d7k[79]]] * d7k[6][v8yy[d7k[49]]];
                                                    I8yy.H2k(2);
                                                    d7k[76] = I8yy.r2k(d7k[12], d7k[2]);
                                                    if (d7k[76] < 0) {
                                                        d7k[76] = 0;
                                                    }
                                                    if (d7k[76] > 1) {
                                                        d7k[76] = 1;
                                                    }
                                                    d7k[1][`SetV`](d7k[0][1]);
                                                    I8yy.P2k(17);
                                                    d7k[77] = I8yy.r2k(17, 57, 3, 2);
                                                    d7k[1][`x`] += d7k[6][v8yy[d7k[77]]] * d7k[76];
                                                    I8yy.P2k(61);
                                                    d7k[38] = I8yy.r2k(1, 18, 733, 5, 760);
                                                    d7k[1][`y`] += d7k[6][v8yy[d7k[38]]] * d7k[76];
                                                    return d7k[1];
                                                }
                                            }
                                        }
                                    }
                                    function G7(u0H) {
                                        var e7k = [arguments];
                                                                                if (e7k[0][0][`GetBody`]()[`GetUserData`]()[`type`] != "phys" || e7k[0][0][`GetUserData`]()[`capzone`] || e7k[0][0][`GetUserData`]()[`noGrapple`]) {
                                            return true;
                                        }
                                        b7k[2][`push`](e7k[0][0]);
                                        return true;
                                        ;
                                    }
                                    b7k[7][`sort`](function(b0H, d0H) {
                                        var C7k = [arguments];
                                        C7k[8] = 391393852;
                                        C7k[2] = 1077577857;
                                        C7k[4] = 744991257;
                                        C7k[1] = 458590278;
                                        if (true/*I8yy.u1G(0, false, 738992) === C7k[8] || I8yy.u1G(0, false, 270072) === C7k[2] || I8yy.u1G(0, false, 306953) === C7k[4] || I8yy.q1G(0, false, 135811) === C7k[1] || I8yy.Y8U()*/) {
                                                                                        I8yy.P2k(43);
                                            C7k[3] = I8yy.A2k(3, 23, 69, 70);
                                            I8yy.P2k(0);
                                            C7k[6] = I8yy.r2k(36, 35);
                                            return C7k[0][0][v8yy[C7k[3]]] - C7k[0][1][v8yy[C7k[6]]];
                                        }
                                    });
                                    for (b7k[66] = 0; b7k[66] < b7k[7][`length`]; b7k[66]++) {
                                        b7k[41] = b7k[7][b7k[66]];
                                        if (b7k[41][`f`][`GetUserData`]()[`innerGrapple`] || b7k[41][`f`][`TestPoint`](T7k[638]) == false) {
                                            b7k[12] = new v2k[1]();
                                            b7k[12] = b7k[41][`b`][`GetLocalPoint`](b7k[41][`wp`], b7k[12]);
                                            b7k[17] = v2k[82][`Distance`](T7k[638], b7k[41][`wp`]);
                                            E9(T7k[653], b7k[41][`b`][`GetUserData`]()[`arrayID`], b7k[12], b7k[17]);
                                            break;
                                        }
                                    }
                                }
                            }
                            )();
                        }
                        ;
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[0][5]; T7k[653]++) {
                    if (T7k[0][0][`ftu`] == -1) {
                        T7k[133] = 2;
                        T7k[778] = 6;
                        if (T7k[0][0][`ms`][`pq`] == 2) {
                            T7k[133] = 15;
                            T7k[778] = 15;
                        }
                        I8yy.P2k(70);
                        T7k[62][`Step`](I8yy.r2k(T7k[0][5], T7k[0][3], 1), T7k[133], T7k[778]);
                    }
                }
                T7k[62][`ClearForces`]();
                T7k[222] = {};
                T7k[222][`ms`] = T7k[0][0][`ms`];
                T7k[222][`mm`] = T7k[0][0][`mm`];
                T7k[222][`shk`] = T7k[79];
                T7k[222][`discs`] = [];
                T7k[222][`capZones`] = [];
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`capZones`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`capZones`][T7k[653]]) {
                        T7k[222][`capZones`][T7k[653]] = {
                            ty: T7k[0][0][`capZones`][T7k[653]][`ty`],
                            p: T7k[0][0][`capZones`][T7k[653]][`p`],
                            l: T7k[0][0][`capZones`][T7k[653]][`l`],
                            i: T7k[0][0][`capZones`][T7k[653]][`i`],
                            o: T7k[0][0][`capZones`][T7k[653]][`o`],
                            ot: T7k[0][0][`capZones`][T7k[653]][`ot`],
                            f: T7k[0][0][`capZones`][T7k[653]][`f`]
                        };
                    }
                }
                for (T7k[247] = 0; T7k[247] < T7k[6][`length`]; T7k[247]++) {
                    if (T7k[6][T7k[247]]) {
                        T7k[648] = T7k[6][T7k[247]];
                        if (T7k[222][`capZones`][T7k[247]][`f`] == -1) {
                            T7k[261] = 0;
                            T7k[760] = 0;
                            T7k[148] = T7k[222][`capZones`][T7k[247]][`o`];
                            for (T7k[568] = 0; T7k[568] < T7k[648][`length`]; T7k[568]++) {
                                if (T7k[648][T7k[568]] && T7k[568] == 1) {
                                    T7k[261] += T7k[648][T7k[568]][`count`];
                                    T7k[760] += T7k[648][T7k[568]][`count`];
                                    T7k[510] = T7k[648][T7k[568]][`players`][0];
                                } else if (T7k[648][T7k[568]] && T7k[568] != 1) {
                                    T7k[261]++;
                                    T7k[760] += T7k[648][T7k[568]][`count`];
                                    T7k[510] = T7k[648][T7k[568]][`players`][0];
                                }
                            }
                            if (T7k[261] > 1) {
                                T7k[230] = false;
                                if (T7k[648][1]) {
                                    for (T7k[568] = 0; T7k[568] < T7k[648][1][`players`][`length`]; T7k[568]++) {
                                        if (T7k[648][1][`players`][T7k[568]] == T7k[148]) {
                                            T7k[230] = true;
                                        }
                                    }
                                    if (T7k[230] == false) {
                                        T7k[222][`capZones`][T7k[247]][`p`] -= T7k[760];
                                        if (T7k[222][`capZones`][T7k[247]][`p`] < 0) {
                                            T7k[222][`capZones`][T7k[247]][`p`] = 0;
                                        } else {
                                            T7k[54][`push`](["capDecrease", 0.6, T7k[247]]);
                                        }
                                    }
                                } else {
                                    ;
                                }
                            } else if (T7k[261] == 1) {
                                if (T7k[0][0][`discs`][T7k[510]][`team`] == 1) {
                                    T7k[252] = T7k[510];
                                } else {
                                    T7k[252] = T7k[0][0][`discs`][T7k[510]][`team`];
                                }
                                if (T7k[148] == -1) {
                                    T7k[222][`capZones`][T7k[247]][`p`] = 1;
                                    T7k[222][`capZones`][T7k[247]][`o`] = T7k[252];
                                    T7k[222][`capZones`][T7k[247]][`ot`] = T7k[0][0][`discs`][T7k[510]][`team`];
                                    T7k[54][`push`](["capIncrease", 0.6, T7k[247]]);
                                } else if (T7k[252] != T7k[148]) {
                                    if (T7k[0][4][`tea`]) {
                                        T7k[222][`capZones`][T7k[247]][`p`] -= T7k[648][T7k[252]][`count`];
                                    } else {
                                        T7k[222][`capZones`][T7k[247]][`p`]--;
                                    }
                                    T7k[54][`push`](["capDecrease", 0.6, T7k[247]]);
                                    if (T7k[222][`capZones`][T7k[247]][`p`] <= 0) {
                                        T7k[222][`capZones`][T7k[247]][`p`] = 0;
                                        T7k[222][`capZones`][T7k[247]][`o`] = T7k[252];
                                        T7k[222][`capZones`][T7k[247]][`ot`] = T7k[0][0][`discs`][T7k[510]][`team`];
                                        ;
                                    }
                                } else if (T7k[252] == T7k[148]) {
                                    T7k[54][`push`](["capIncrease", 0.6, T7k[247]]);
                                    if (T7k[0][4][`tea`]) {
                                        T7k[222][`capZones`][T7k[247]][`p`] += T7k[648][T7k[252]][`count`];
                                    } else {
                                        T7k[222][`capZones`][T7k[247]][`p`]++;
                                    }
                                    if (T7k[222][`capZones`][T7k[247]][`p`] > T7k[222][`capZones`][T7k[247]][`l`]) {
                                        T7k[222][`capZones`][T7k[247]][`p`] = T7k[222][`capZones`][T7k[247]][`l`];
                                    }
                                }
                            }
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[222][`capZones`][`length`]; T7k[653]++) {
                    if (T7k[222][`capZones`][T7k[653]]) {
                        if (T7k[222][`capZones`][T7k[653]][`p`] >= T7k[222][`capZones`][T7k[653]][`l`]) {
                            if (T7k[222][`capZones`][T7k[653]][`f`] == -1) {
                                T7k[222][`capZones`][T7k[653]][`f`] = 20;
                                T7k[54][`push`](["capComplete", 0.6, T7k[653]]);
                            } else if (T7k[222][`capZones`][T7k[653]][`f`] != 0) {
                                T7k[222][`capZones`][T7k[653]][`f`]--;
                            } else if (T7k[222][`capZones`][T7k[653]][`f`] == 0) {
                                if (T7k[222][`capZones`][T7k[653]][`ot`] == 1) {
                                    for (T7k[184] = 0; T7k[184] < T7k[4][`length`]; T7k[184]++) {
                                        if (T7k[4][T7k[184]] && T7k[184] != T7k[222][`capZones`][T7k[653]][`o`]) {
                                            T7k[4][T7k[184]][`diedThisStep`] = 3;
                                        }
                                    }
                                } else {
                                    for (T7k[184] = 0; T7k[184] < T7k[4][`length`]; T7k[184]++) {
                                        if (T7k[4][T7k[184]] && T7k[4][T7k[184]][`team`] != T7k[222][`capZones`][T7k[653]][`ot`]) {
                                            T7k[4][T7k[184]][`diedThisStep`] = 3;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                for (T7k[206] = 0; T7k[206] < T7k[8][`length`]; T7k[206]++) {
                    if (T7k[8][T7k[206]] == true) {
                        for (T7k[184] = 0; T7k[184] < T7k[4][`length`]; T7k[184]++) {
                            if (T7k[4][T7k[184]] && T7k[4][T7k[184]][`team`] != T7k[206]) {
                                T7k[4][T7k[184]][`diedThisStep`] = 3;
                            }
                        }
                    }
                }
                T7k[222][`seed`] = T7k[0][0][`seed`];
                T7k[222][`ftu`] = T7k[0][0][`ftu`];
                if (T7k[222][`ftu`] > -1) {
                    T7k[222][`ftu`]--;
                }
                ;T7k[222][`rc`] = T7k[0][0][`rc`];
                I8yy.P2k(31);
                T7k[895] = I8yy.A2k(15, 42, 609, 7);
                I8yy.P2k(71);
                T7k[963] = I8yy.A2k(1, 11, 16, 11, 15);
                T7k[222][`rl`] = T7k[0][0][v8yy[T7k[895]]] + T7k[963];
                if (T7k[54][`length`] > 0) {
                    T7k[222][`sts`] = T7k[54];
                } else {
                    T7k[222][`sts`] = null;
                }
                T7k[222][`physics`] = {
                    shapes: JSON[`parse`](JSON[`stringify`](T7k[0][0][`physics`][`shapes`])),
                    fixtures: T7k[0][0][`physics`][`fixtures`],
                    bodies: [],
                    joints: JSON[`parse`](JSON[`stringify`](T7k[0][0][`physics`][`joints`])),
                    bro: JSON[`parse`](JSON[`stringify`](T7k[0][0][`physics`][`bro`])),
                    ppm: T7k[0][0][`physics`][`ppm`]
                };
                if (T7k[222][`ftu`] <= 0) {
                    for (T7k[946] = 0; T7k[946] < T7k[222][`physics`][`shapes`][`length`]; T7k[946]++) {
                        T7k[925] = T7k[222][`physics`][`shapes`][T7k[946]];
                        if (T7k[925][`sk`] == true) {
                            I8yy.P2k(5);
                            T7k[701] = I8yy.r2k(0.015, 2);
                            I8yy.H2k(5);
                            T7k[960] = I8yy.r2k(0.5, 2);
                            if (T7k[925][`type`] == "bx") {
                                T7k[925][`w`] -= T7k[701];
                                if (T7k[925][`w`] < T7k[960]) {
                                    T7k[925][`w`] = T7k[960];
                                }
                            } else if (T7k[925][`type`] == "ci") {
                                I8yy.H2k(2);
                                T7k[925][`r`] -= I8yy.r2k(T7k[701], 2);
                                if (T7k[925][`r`] < T7k[960] / 2) {
                                    I8yy.H2k(2);
                                    T7k[925][`r`] = I8yy.A2k(T7k[960], 2);
                                }
                            }
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[222][`physics`][`joints`][`length`]; T7k[653]++) {
                    if (T7k[222][`physics`][`joints`][T7k[653]]) {
                        T7k[51] = T7k[222][`physics`][`joints`][T7k[653]];
                        if (T7k[51][`type`] == "p") {
                            if (T7k[26][T7k[653]] && T7k[26][T7k[653]][`GetUserData`]()) {
                                T7k[51][`cs`] = T7k[26][T7k[653]][`GetUserData`]()[`changeSide`];
                                T7k[51][`d`][`ms`] = T7k[26][T7k[653]][`GetMotorSpeed`]();
                            }
                        }
                        if (T7k[51][`type`] == "lpj") {
                            T7k[51][`pms`] = T7k[26][T7k[653]][`GetMotorSpeed`]();
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[222][`physics`][`joints`][`length`]; T7k[653]++) {
                    if (T7k[222][`physics`][`joints`][T7k[653]]) {
                        I8yy.H2k(2);
                        T7k[792] = T7k[26][T7k[653]][`GetReactionForce`](I8yy.A2k(1, T7k[0][3]));
                        if (T7k[792] && T7k[792][`Length`]() > T7k[222][`physics`][`joints`][T7k[653]][`d`][`bf`] && T7k[222][`physics`][`joints`][T7k[653]][`d`][`bf`] > 0) {
                            T7k[222][`physics`][`joints`][T7k[653]] = null;
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[66][`length`]; T7k[653]++) {
                    if (!T7k[66][T7k[653]]) {
                        continue;
                    }
                    T7k[222][`physics`][`bodies`][T7k[653]] = {};
                    if (T7k[66][T7k[653]][`GetType`]() == v2k[6][`b2_dynamicBody`]) {
                        T7k[222][`physics`][`bodies`][T7k[653]][`type`] = "d";
                    } else if (T7k[66][T7k[653]][`GetType`]() == v2k[6][`b2_kinematicBody`]) {
                        T7k[222][`physics`][`bodies`][T7k[653]][`type`] = "k";
                    } else {
                        T7k[222][`physics`][`bodies`][T7k[653]][`type`] = "s";
                    }
                    T7k[222][`physics`][`bodies`][T7k[653]][`p`] = [T7k[66][T7k[653]][`GetPosition`]()[`x`], T7k[66][T7k[653]][`GetPosition`]()[`y`]];
                    T7k[222][`physics`][`bodies`][T7k[653]][`a`] = T7k[66][T7k[653]][`GetAngle`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`av`] = T7k[66][T7k[653]][`GetAngularVelocity`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`lv`] = [T7k[66][T7k[653]][`GetLinearVelocity`]()[`x`], T7k[66][T7k[653]][`GetLinearVelocity`]()[`y`]];
                    T7k[222][`physics`][`bodies`][T7k[653]][`ld`] = T7k[66][T7k[653]][`GetLinearDamping`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`ad`] = T7k[66][T7k[653]][`GetAngularDamping`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`fr`] = T7k[66][T7k[653]][`IsFixedRotation`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`bu`] = T7k[66][T7k[653]][`IsBullet`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`fx`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`fx`][`slice`]();
                    T7k[222][`physics`][`bodies`][T7k[653]][`bg`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`bg`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`fric`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`fric`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`fricp`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`fricp`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`de`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`de`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`re`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`re`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`f_c`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`f_c`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`f_p`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`f_p`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`f_1`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`f_1`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`f_2`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`f_2`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`f_3`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`f_3`];
                    T7k[222][`physics`][`bodies`][T7k[653]][`f_4`] = T7k[0][0][`physics`][`bodies`][T7k[653]][`f_4`];
                    if (T7k[0][0][`physics`][`bodies`][T7k[653]][`cf`]) {
                        T7k[222][`physics`][`bodies`][T7k[653]][`cf`] = JSON[`parse`](JSON[`stringify`](T7k[0][0][`physics`][`bodies`][T7k[653]][`cf`]));
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[4][`length`]; T7k[653]++) {
                    if (T7k[4][T7k[653]]) {
                        I8yy.H2k(25);
                        T7k[256] = I8yy.r2k(716, 33638, 8, 6);
                        I8yy.P2k(38);
                        T7k[277] = I8yy.A2k(7, 16, 9, 2, 2);
                        I8yy.H2k(1);
                        T7k[993] = I8yy.A2k(258, 301);
                        I8yy.P2k(21);
                        T7k[391] = I8yy.A2k(230, 45, 230);
                        I8yy.P2k(0);
                        T7k[825] = I8yy.r2k(63, 437);
                        I8yy.P2k(72);
                        T7k[937] = I8yy.A2k(1289, 11, 9, 13);
                        I8yy.H2k(32);
                        T7k[846] = I8yy.r2k(0, 37, 6);
                        I8yy.H2k(0);
                        T7k[259] = I8yy.r2k(26, 20);
                        T7k[168] = new v2k[1](T7k[256] / T7k[277] / T7k[0][0][v8yy[T7k[993]]][v8yy[T7k[391]]],T7k[825] / T7k[937] / T7k[0][0][v8yy[T7k[846]]][v8yy[T7k[259]]]);
                        T7k[202] = new v2k[1]();
                        T7k[202] = v2k[82][`SubtractVV`](T7k[4][T7k[653]][`body`][`GetPosition`](), T7k[168]);
                        I8yy.P2k(73);
                        T7k[301] = I8yy.r2k(400, 7, 31, 18, 8);
                        I8yy.P2k(74);
                        T7k[418] = I8yy.r2k(18, 29, 29, 465, 17);
                        I8yy.P2k(17);
                        T7k[629] = I8yy.r2k(20, 50, 15, 28);
                        I8yy.P2k(75);
                        T7k[911] = I8yy.A2k(5105, 16, 14, 15, 322);
                        T7k[286] = T7k[4][T7k[653]][`body`][`GetPosition`]()[v8yy[T7k[301]]] > T7k[418] / T7k[0][0][v8yy[T7k[629]]][v8yy[T7k[911]]];
                        T7k[110] = T7k[0][6] == false && T7k[202][`Length`]() > 850 / T7k[0][0][`physics`][`ppm`];
                        if (T7k[286] || T7k[110]) {
                            T7k[4][T7k[653]][`diedThisStep`] = 4;
                            ;
                        }
                    }
                }
                T7k[524] = 0;
                T7k[893] = 0;
                T7k[130] = false;
                T7k[871] = false;
                T7k[559] = -1;
                T7k[920] = [];
                function E9(e0H, C0H, l0H, o0H) {
                    var l7k = [arguments];
                    T7k[22][l7k[0][0]] = [l7k[0][1], l7k[0][2], l7k[0][3]];
                    I8yy.g9b();
                    ;
                }
                T7k[762] = 0;
                T7k[798] = [];
                T7k[405] = 0;
                T7k[667] = -1;
                for (T7k[653] = 0; T7k[653] < T7k[4][`length`]; T7k[653]++) {
                    if (T7k[4][T7k[653]]) {
                        if (!T7k[4][T7k[653]][`diedThisStep`] || T7k[0][0][`ms`][`re`] && T7k[4][T7k[653]][`diedThisStep`] != 3) {
                            T7k[524]++;
                            T7k[559] = T7k[653];
                            T7k[667] = T7k[4][T7k[653]][`team`];
                            if (!T7k[798][T7k[4][T7k[653]][`team`]]) {
                                T7k[798][T7k[4][T7k[653]][`team`]] = 0;
                                T7k[405]++;
                            }
                            T7k[798][T7k[4][T7k[653]][`team`]]++;
                        }
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`discs`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`discs`][T7k[653]]) {
                        T7k[893]++;
                        if (!T7k[920][T7k[0][0][`discs`][T7k[653]][`team`]]) {
                            T7k[920][T7k[0][0][`discs`][T7k[653]][`team`]] = 0;
                            T7k[762]++;
                        }
                        T7k[920][T7k[0][0][`discs`][T7k[653]][`team`]]++;
                    }
                }
                if (T7k[0][4][`tea`] == false) {
                    if (T7k[524] == 1 && T7k[893] > 1) {
                        T7k[130] = true;
                        T7k[871] = true;
                    }
                    if (T7k[524] == 0 && T7k[893] == 1) {
                        T7k[225] = 717206900;
                        T7k[673] = 688860780;
                        T7k[442] = 2;
                        for (T7k[914] = 1; I8yy.m1f(T7k[914].toString(), T7k[914].toString().length, 30605) !== T7k[225]; T7k[914]++) {
                            T7k[130] = false;
                            T7k[442] += 2;
                        }
                        if (I8yy.d1f(T7k[442].toString(), T7k[442].toString().length, 58903) !== T7k[673]) {
                            T7k[130] = false;
                        }
                        T7k[130] = true;
                    }
                    if (T7k[524] == 0 && T7k[893] > 1) {
                        T7k[130] = true;
                        T7k[559] = -1;
                    }
                } else {
                    if (T7k[405] == 1 && T7k[762] > 1) {
                        T7k[671] = 1402317319;
                        T7k[120] = 1001229209;
                        T7k[807] = 2;
                        for (T7k[108] = 1; I8yy.m1f(T7k[108].toString(), T7k[108].toString().length, 93663) !== T7k[671]; T7k[108]++) {
                            T7k[130] = false;
                            T7k[807] += 2;
                        }
                        if (I8yy.m1f(T7k[807].toString(), T7k[807].toString().length, 46157) !== T7k[120]) {
                            T7k[130] = true;
                        }
                        T7k[871] = true;
                        T7k[559] = T7k[667];
                    }
                    if (T7k[405] == 0 && T7k[762] == 1) {
                        T7k[130] = true;
                    }
                    if (T7k[405] == 0 && T7k[762] > 1) {
                        T7k[130] = true;
                        T7k[559] = -1;
                    }
                }
                T7k[222][`scores`] = T7k[0][0][`scores`][`slice`]();
                if (T7k[0][4][`tea`] == false) {
                    for (T7k[660] = 0; T7k[660] < T7k[222][`scores`][`length`]; T7k[660]++) {
                        if (T7k[222][`scores`][T7k[660]] >= 0) {
                            if (m6(T7k[660])) {
                                T7k[222][`scores`][T7k[660]] = null;
                            }
                        }
                    }
                }
                T7k[222][`lscr`] = T7k[0][0][`lscr`];
                if (T7k[0][0][`fte`] >= 0) {
                    I8yy.P2k(31);
                    T7k[978] = I8yy.r2k(6, 6, 44, 2);
                    I8yy.P2k(28);
                    T7k[274] = I8yy.r2k(6, 15, 22);
                    T7k[222][`fte`] = T7k[0][0][v8yy[T7k[978]]] - T7k[274];
                } else {
                    T7k[222][`fte`] = -1;
                    if (T7k[130]) {
                        T7k[222][`fte`] = E[`fte`];
                        if (T7k[871]) {
                            if (!T7k[222][`scores`][T7k[559]]) {
                                T7k[222][`scores`][T7k[559]] = 1;
                            } else {
                                T7k[222][`scores`][T7k[559]]++;
                            }
                            T7k[222][`lscr`] = T7k[559];
                        } else {
                            T7k[222][`lscr`] = -1;
                        }
                    }
                }
                T7k[222][`discDeaths`] = [];
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`discDeaths`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`discDeaths`][T7k[653]] && T7k[0][0][`discDeaths`][T7k[653]][`f`] <= 90) {
                        T7k[222][`discDeaths`][`push`](JSON[`parse`](JSON[`stringify`](T7k[0][0][`discDeaths`][T7k[653]])));
                        I8yy.H2k(21);
                        T7k[702] = I8yy.r2k(23, 19, 1);
                        I8yy.P2k(76);
                        T7k[951] = I8yy.r2k(54, 7, 20, 20);
                        I8yy.H2k(77);
                        T7k[730] = I8yy.r2k(15, 15, 2, 5, 4);
                        T7k[222][`discDeaths`][T7k[222][v8yy[T7k[702]]][v8yy[T7k[951]]] - T7k[730]][`f`]++;
                    }
                }
                for (T7k[653] = 0; T7k[653] < T7k[4][`length`]; T7k[653]++) {
                    if (T7k[4][T7k[653]]) {
                        if (!T7k[4][T7k[653]][`diedThisStep`] || T7k[4][T7k[653]][`diedThisStep`] && T7k[0][0][`ms`][`re`] == true && T7k[4][T7k[653]][`diedThisStep`] != 3) {
                            T7k[222][`discs`][T7k[653]] = {};
                            T7k[222][`discs`][T7k[653]][`x`] = T7k[4][T7k[653]][`body`][`GetPosition`]()[`x`];
                            T7k[222][`discs`][T7k[653]][`y`] = T7k[4][T7k[653]][`body`][`GetPosition`]()[`y`];
                            I8yy.H2k(25);
                            T7k[761] = I8yy.A2k(28, 885, 11, 3);
                            I8yy.P2k(26);
                            T7k[531] = I8yy.r2k(18, 10, 3114, 343);
                            T7k[222][`discs`][T7k[653]][`xv`] = T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[v8yy[T7k[761]]] + T7k[4][T7k[653]][v8yy[T7k[531]]];
                            I8yy.H2k(17);
                            T7k[186] = I8yy.r2k(4, 3, 18, 59);
                            I8yy.H2k(21);
                            T7k[605] = I8yy.r2k(67, 334, 67);
                            T7k[222][`discs`][T7k[653]][`yv`] = T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[v8yy[T7k[186]]] + T7k[4][T7k[653]][v8yy[T7k[605]]];
                            T7k[222][`discs`][T7k[653]][`a`] = T7k[4][T7k[653]][`body`][`GetAngle`]();
                            T7k[222][`discs`][T7k[653]][`av`] = T7k[4][T7k[653]][`body`][`GetAngularVelocity`]();
                            T7k[222][`discs`][T7k[653]][`a1a`] = T7k[4][T7k[653]][`a1a`];
                            T7k[222][`discs`][T7k[653]][`team`] = T7k[4][T7k[653]][`team`];
                            T7k[222][`discs`][T7k[653]][`a1`] = T7k[4][T7k[653]][`a1`];
                            T7k[222][`discs`][T7k[653]][`a2`] = T7k[4][T7k[653]][`a2`];
                            T7k[222][`discs`][T7k[653]][`ni`] = T7k[4][T7k[653]][`ni`];
                            T7k[222][`discs`][T7k[653]][`sx`] = T7k[0][0][`discs`][T7k[653]][`sx`];
                            T7k[222][`discs`][T7k[653]][`sy`] = T7k[0][0][`discs`][T7k[653]][`sy`];
                            T7k[222][`discs`][T7k[653]][`sxv`] = T7k[0][0][`discs`][T7k[653]][`sxv`];
                            T7k[222][`discs`][T7k[653]][`syv`] = T7k[0][0][`discs`][T7k[653]][`syv`];
                            T7k[222][`discs`][T7k[653]][`ds`] = T7k[4][T7k[653]][`ds`];
                            T7k[222][`discs`][T7k[653]][`da`] = T7k[4][T7k[653]][`da`];
                            T7k[222][`discs`][T7k[653]][`lhid`] = T7k[4][T7k[653]][`lhid`];
                            T7k[222][`discs`][T7k[653]][`lht`] = T7k[4][T7k[653]][`lht`];
                            T7k[222][`discs`][T7k[653]][`spawnTeamInfo`] = T7k[0][0][`discs`][T7k[653]][`spawnTeamInfo`];
                            if (T7k[22][T7k[653]]) {
                                T7k[222][`discs`][T7k[653]][`swing`] = {
                                    b: T7k[22][T7k[653]][0],
                                    p: [T7k[22][T7k[653]][1][`x`], T7k[22][T7k[653]][1][`y`]],
                                    l: T7k[22][T7k[653]][2]
                                };
                            }
                            if (T7k[4][T7k[653]][`swing`]) {
                                if (T7k[33][`indexOf`](T7k[653]) == -1 && T7k[4][T7k[653]][`body`][`GetUserData`]()[`impulsesThisStep`] < 300) {
                                    T7k[222][`discs`][T7k[653]][`swing`] = T7k[0][0][`discs`][T7k[653]][`swing`];
                                } else {
                                    T7k[222][`discs`][T7k[653]][`a1a`] = 0;
                                    ;
                                }
                            }
                            if (T7k[4][T7k[653]][`diedThisStep`] && T7k[0][0][`ms`][`re`]) {
                                if (T7k[0][6] && T7k[653] != 0) {
                                    T7k[222][`discs`][T7k[653]] = undefined;
                                } else {
                                    T7k[222][`discs`][T7k[653]][`x`] = T7k[222][`discs`][T7k[653]][`sx`];
                                    T7k[222][`discs`][T7k[653]][`y`] = T7k[222][`discs`][T7k[653]][`sy`];
                                    T7k[222][`discs`][T7k[653]][`xv`] = T7k[222][`discs`][T7k[653]][`sxv`];
                                    T7k[222][`discs`][T7k[653]][`yv`] = T7k[222][`discs`][T7k[653]][`syv`];
                                    T7k[222][`discs`][T7k[653]][`ni`] = true;
                                    delete T7k[222][`discs`][T7k[653]][`swing`];
                                }
                            }
                        }
                        if (T7k[4][T7k[653]][`diedThisStep`]) {
                            T7k[222][`discDeaths`][`push`]({
                                i: T7k[653],
                                x: T7k[4][T7k[653]][`body`][`GetPosition`]()[`x`],
                                y: T7k[4][T7k[653]][`body`][`GetPosition`]()[`y`],
                                xv: T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[`x`],
                                yv: T7k[4][T7k[653]][`body`][`GetLinearVelocity`]()[`y`],
                                f: 0,
                                m: T7k[4][T7k[653]][`diedThisStep`]
                            });
                            if (T7k[4][T7k[653]][`diedThisStep`] == 4) {
                                I8yy.P2k(36);
                                T7k[897] = I8yy.A2k(7, 1, 6);
                                I8yy.P2k(35);
                                T7k[408] = I8yy.A2k(2, 39, 2);
                                I8yy.P2k(9);
                                T7k[570] = I8yy.r2k(194, 4, 60);
                                T7k[796] = T7k[897] / T7k[0][0][v8yy[T7k[408]]][v8yy[T7k[570]]];
                                I8yy.P2k(25);
                                T7k[606] = I8yy.A2k(8019, 143613, 6, 3);
                                I8yy.P2k(1);
                                T7k[602] = I8yy.A2k(344, 387);
                                I8yy.P2k(78);
                                T7k[190] = I8yy.r2k(8, 2, 3, 36, 12);
                                T7k[720] = T7k[606] / T7k[0][0][v8yy[T7k[602]]][v8yy[T7k[190]]];
                                I8yy.H2k(62);
                                T7k[352] = I8yy.A2k(31, 51, 6, 504, 20);
                                I8yy.P2k(79);
                                T7k[954] = I8yy.r2k(9, 3, 37, 3);
                                I8yy.H2k(0);
                                T7k[696] = I8yy.r2k(3, 43);
                                T7k[227] = T7k[352] / T7k[0][0][v8yy[T7k[954]]][v8yy[T7k[696]]];
                                I8yy.P2k(32);
                                T7k[593] = I8yy.A2k(20, 12, 9);
                                I8yy.P2k(0);
                                T7k[164] = I8yy.r2k(4, 39);
                                I8yy.H2k(25);
                                T7k[694] = I8yy.r2k(15, 1304, 9, 10);
                                T7k[966] = T7k[593] / T7k[0][0][v8yy[T7k[164]]][v8yy[T7k[694]]];
                                T7k[552] = Math[`min`](Math[`max`](T7k[4][T7k[653]][`body`][`GetPosition`]()[`x`], T7k[796]), T7k[720]);
                                T7k[469] = Math[`min`](Math[`max`](T7k[4][T7k[653]][`body`][`GetPosition`]()[`y`], T7k[966]), T7k[227]);
                                T7k[220] = 0;
                                if (T7k[552] == T7k[796] && T7k[469] == T7k[227]) {
                                    I8yy.P2k(1);
                                    T7k[417] = I8yy.r2k(182, 364);
                                    I8yy.H2k(1);
                                    T7k[438] = I8yy.r2k(12, 16);
                                    T7k[220] = -Math[v8yy[T7k[417]]] / T7k[438] + 0.25;
                                } else if (T7k[552] == T7k[720] && T7k[469] == T7k[227]) {
                                    I8yy.H2k(40);
                                    T7k[323] = I8yy.A2k(16, 13, 0);
                                    I8yy.P2k(21);
                                    T7k[903] = I8yy.r2k(166, 180, 83);
                                    I8yy.P2k(80);
                                    T7k[154] = I8yy.A2k(0, 6, 11, 13);
                                    T7k[220] = T7k[323] * Math[v8yy[T7k[903]]] / T7k[154] - 0.25;
                                } else {
                                    I8yy.P2k(9);
                                    T7k[777] = I8yy.A2k(9, 12, 4);
                                    T7k[982] = T7k[552] - T7k[4][T7k[653]][`body`][`GetPosition`]()[v8yy[T7k[777]]];
                                    I8yy.H2k(21);
                                    T7k[814] = I8yy.A2k(46, 39, 46);
                                    T7k[880] = T7k[469] - T7k[4][T7k[653]][`body`][`GetPosition`]()[v8yy[T7k[814]]];
                                    T7k[220] = SafeTrig[`safeATan2`](T7k[880], T7k[982]);
                                }
                                I8yy.P2k(0);
                                T7k[254] = I8yy.r2k(2, 18);
                                T7k[829] = SafeTrig[`safeCos`](T7k[220]) * T7k[254];
                                I8yy.H2k(81);
                                T7k[832] = I8yy.A2k(47, 20, 8, 2, 3);
                                T7k[910] = SafeTrig[`safeSin`](T7k[220]) * T7k[832];
                                I8yy.P2k(1);
                                T7k[817] = I8yy.r2k(20, 62);
                                I8yy.H2k(32);
                                T7k[470] = I8yy.A2k(32, 63, 16);
                                I8yy.H2k(17);
                                T7k[519] = I8yy.A2k(14, 19, 11, 7);
                                T7k[222][`discDeaths`][T7k[222][v8yy[T7k[817]]][v8yy[T7k[470]]] - T7k[519]][`x`] = T7k[552];
                                I8yy.P2k(42);
                                T7k[612] = I8yy.r2k(3, 7, 32);
                                I8yy.P2k(82);
                                T7k[652] = I8yy.A2k(49, 16, 15, 7378, 15);
                                I8yy.P2k(83);
                                T7k[952] = I8yy.r2k(6, 14, 7, 5, 17);
                                T7k[222][`discDeaths`][T7k[222][v8yy[T7k[612]]][v8yy[T7k[652]]] - T7k[952]][`y`] = T7k[469];
                                I8yy.P2k(0);
                                T7k[856] = I8yy.A2k(26, 16);
                                I8yy.P2k(84);
                                T7k[420] = I8yy.A2k(5, 2, 8, 51, 16);
                                I8yy.H2k(1);
                                T7k[726] = I8yy.r2k(16, 17);
                                T7k[222][`discDeaths`][T7k[222][v8yy[T7k[856]]][v8yy[T7k[420]]] - T7k[726]][`xv`] = T7k[829];
                                I8yy.P2k(85);
                                T7k[728] = I8yy.r2k(24, 32, 34, 6);
                                I8yy.P2k(26);
                                T7k[487] = I8yy.r2k(5, 14, 0, 3);
                                I8yy.P2k(12);
                                T7k[155] = I8yy.r2k(16, 17, 0);
                                T7k[222][`discDeaths`][T7k[222][v8yy[T7k[728]]][v8yy[T7k[487]]] - T7k[155]][`yv`] = T7k[910];
                            }
                        }
                    }
                }
                if (T7k[0][6]) {
                    T7k[338] = T7k[222][`physics`][`joints`][0][`ba`];
                    T7k[678] = T7k[222][`physics`][`bodies`][T7k[338]][`fx`][0];
                    if (!T7k[222][`discs`][1] && !T7k[222][`discs`][2]) {
                        T7k[222][`physics`][`joints`][0][`pms`] = 8;
                        T7k[222][`physics`][`fixtures`][T7k[678]][`d`] = false;
                    } else {
                        T7k[222][`physics`][`fixtures`][T7k[678]][`d`] = true;
                    }
                    I8yy.P2k(0);
                    T7k[932] = I8yy.r2k(29, 313);
                    I8yy.H2k(21);
                    T7k[182] = I8yy.r2k(6, 101, 2);
                    I8yy.P2k(86);
                    T7k[795] = I8yy.A2k(1, 12, 12, 7, 5);
                    I8yy.P2k(25);
                    T7k[513] = I8yy.r2k(3, 447, 18, 9);
                    I8yy.P2k(40);
                    T7k[447] = I8yy.A2k(18, 38, 710);
                    I8yy.P2k(1);
                    T7k[765] = I8yy.r2k(14, 16);
                    I8yy.H2k(0);
                    T7k[968] = I8yy.r2k(22, 21);
                    I8yy.H2k(9);
                    T7k[440] = I8yy.A2k(5336, 13, 414);
                    T7k[306] = (T7k[0][4][v8yy[T7k[932]]][v8yy[T7k[182]]][T7k[795]][v8yy[T7k[513]]] + T7k[447] / T7k[765]) / T7k[0][0][v8yy[T7k[968]]][v8yy[T7k[440]]];
                    I8yy.P2k(87);
                    T7k[298] = I8yy.r2k(3, 329, 18, 614, 13);
                    I8yy.P2k(38);
                    T7k[719] = I8yy.A2k(100, 117, 9, 9, 1);
                    I8yy.P2k(9);
                    T7k[803] = I8yy.r2k(138, 7, 20);
                    I8yy.P2k(12);
                    T7k[193] = I8yy.A2k(15, 640, 585);
                    I8yy.P2k(8);
                    T7k[988] = I8yy.r2k(3, 495, 342, 7, 14);
                    I8yy.H2k(1);
                    T7k[175] = I8yy.A2k(10, 12);
                    I8yy.H2k(1);
                    T7k[894] = I8yy.A2k(473, 516);
                    I8yy.P2k(88);
                    T7k[404] = I8yy.A2k(20, 12, 66, 5, 55);
                    T7k[764] = (T7k[0][4][v8yy[T7k[298]]][v8yy[T7k[719]]][T7k[803]][v8yy[T7k[193]]] + T7k[988] / T7k[175]) / T7k[0][0][v8yy[T7k[894]]][v8yy[T7k[404]]];
                    I8yy.P2k(21);
                    T7k[690] = I8yy.A2k(49, 293, 1);
                    I8yy.P2k(21);
                    T7k[827] = I8yy.r2k(90, 95, 10);
                    I8yy.H2k(89);
                    T7k[773] = I8yy.A2k(2, 1, 11, 6, 6);
                    I8yy.H2k(9);
                    T7k[811] = I8yy.A2k(18, 19, 3);
                    I8yy.P2k(90);
                    T7k[906] = I8yy.r2k(661, 1, 49, 18, 2);
                    I8yy.H2k(32);
                    T7k[953] = I8yy.r2k(13, 0, 15);
                    I8yy.P2k(91);
                    T7k[800] = I8yy.r2k(16, 13, 17, 28738, 129);
                    I8yy.P2k(42);
                    T7k[476] = I8yy.A2k(27, 15, 4);
                    T7k[458] = (T7k[0][4][v8yy[T7k[690]]][v8yy[T7k[827]]][T7k[773]][v8yy[T7k[811]]] + T7k[906] / T7k[953]) / T7k[0][0][v8yy[T7k[800]]][v8yy[T7k[476]]];
                    I8yy.P2k(15);
                    T7k[947] = I8yy.r2k(6038, 335, 16, 20);
                    I8yy.H2k(31);
                    T7k[659] = I8yy.r2k(10, 1560, 15586, 9);
                    I8yy.P2k(92);
                    T7k[776] = I8yy.A2k(11, 10, 7, 19, 13);
                    I8yy.P2k(9);
                    T7k[486] = I8yy.r2k(536, 16, 36);
                    I8yy.P2k(1);
                    T7k[428] = I8yy.r2k(4000, 4500);
                    I8yy.P2k(0);
                    T7k[572] = I8yy.r2k(0, 2);
                    I8yy.P2k(93);
                    T7k[590] = I8yy.A2k(5, 4, 4, 34, 4);
                    I8yy.P2k(94);
                    T7k[128] = I8yy.r2k(62, 5, 3, 3, 264);
                    T7k[571] = (T7k[0][4][v8yy[T7k[947]]][v8yy[T7k[659]]][T7k[776]][v8yy[T7k[486]]] + T7k[428] / T7k[572]) / T7k[0][0][v8yy[T7k[590]]][v8yy[T7k[128]]];
                    if (T7k[4][0] && T7k[4][0][`body`][`GetPosition`]()[`x`] > T7k[306]) {
                        T7k[222][`discs`][0][`sx`] = T7k[306];
                        T7k[222][`discs`][0][`sy`] = T7k[764];
                    }
                    if (T7k[4][0] && T7k[4][0][`body`][`GetPosition`]()[`x`] > T7k[458]) {
                        T7k[222][`discs`][0][`sx`] = T7k[458];
                        T7k[222][`discs`][0][`sy`] = T7k[571];
                    }
                }
                T7k[222][`players`] = [];
                for (T7k[653] = 0; T7k[653] < T7k[0][0][`players`][`length`]; T7k[653]++) {
                    if (T7k[0][0][`players`][T7k[653]]) {
                        if (m6(T7k[0][0][`players`][T7k[653]][`id`]) == false) {
                            T7k[222][`players`][T7k[653]] = T7k[0][0][`players`][T7k[653]];
                        } else {}
                    }
                }
                function m6(I0H) {
                    var o7k = [arguments];
                    o7k[9] = -248407742;
                    o7k[1] = -1601828295;
                    o7k[5] = 794127916;
                    o7k[7] = -1735894247;
                    if (true/*I8yy.u1G(0, false, 963157) === o7k[9] || I8yy.q1G(0, false, 215122) === o7k[1] || I8yy.u1G(0, false, 559399) === o7k[5] || I8yy.u1G(0, false, 510847) === o7k[7] || I8yy.d8U()*/) {
                        if (T7k[0][2] && T7k[0][2][`playersLeft`] && T7k[0][2][`playersLeft`][`length`] > 0) {
                            for (o7k[3] = 0; o7k[3] < T7k[0][2][`playersLeft`][`length`]; o7k[3]++) {
                                if (T7k[0][2][`playersLeft`][o7k[3]] == o7k[0][0]) {
                                    return true;
                                }
                            }
                        }
                        return false;
                    }
                }
                if (T7k[0][2] && T7k[0][2][`playersJoined`] && T7k[0][2][`playersJoined`][`length`] > 0) {
                    for (T7k[187] = 0; T7k[187] < T7k[0][2][`playersJoined`][`length`]; T7k[187]++) {
                        T7k[771] = T7k[0][2][`playersJoined`][T7k[187]][`id`];
                        T7k[349] = T7k[0][2][`playersJoined`][T7k[187]][`t`];
                        T7k[222][`players`][T7k[771]] = {
                            id: T7k[771],
                            team: T7k[349]
                        };
                        T7k[222][`scores`][T7k[771]] = 0;
                    }
                }
                T7k[222][`projectiles`] = [];
                for (T7k[103] = 0; T7k[103] < T7k[64][`length`]; T7k[103]++) {
                    if (T7k[64][T7k[103]]) {
                        if (T7k[64][T7k[103]][`GetUserData`]()[`destroyThisStep`] == false && T7k[64][T7k[103]][`GetUserData`]()[`fte`] > 0) {
                            T7k[222][`projectiles`][T7k[103]] = {
                                x: T7k[64][T7k[103]][`GetPosition`]()[`x`],
                                y: T7k[64][T7k[103]][`GetPosition`]()[`y`],
                                a: T7k[64][T7k[103]][`GetAngle`](),
                                av: T7k[64][T7k[103]][`GetAngularVelocity`](),
                                xv: T7k[64][T7k[103]][`GetLinearVelocity`]()[`x`],
                                yv: T7k[64][T7k[103]][`GetLinearVelocity`]()[`y`],
                                fte: T7k[64][T7k[103]][`GetUserData`]()[`fte`] - 1,
                                did: T7k[64][T7k[103]][`GetUserData`]()[`discID`],
                                type: T7k[64][T7k[103]][`GetUserData`]()[`type`],
                                team: T7k[64][T7k[103]][`GetUserData`]()[`team`]
                            };
                        }
                    }
                }
                for (T7k[243] = 0; T7k[243] < T7k[68][`length`]; T7k[243]++) {
                    T7k[222][`projectiles`][`push`](T7k[68][T7k[243]]);
                }
                if (T7k[0][0][`fte`] == 0 || T7k[0][2] && T7k[0][2][`pc`] == 2) {
                    T7k[789] = null;
                    if (T7k[0][4][`gt`] == 1) {
                        if (T7k[0][4][`maps`][`length`] - 1 <= T7k[0][0][`rc`]) {
                            T7k[741] = 0;
                            T7k[984] = [];
                            for (T7k[326] = 0; T7k[326] < T7k[0][0][`scores`][`length`]; T7k[326]++) {
                                if (T7k[0][0][`scores`][T7k[326]] != undefined) {
                                    if (T7k[0][0][`scores`][T7k[326]] > T7k[741]) {
                                        T7k[741] = T7k[0][0][`scores`][T7k[326]];
                                        T7k[984] = [T7k[326]];
                                    }
                                    if (T7k[0][0][`scores`][T7k[326]] == T7k[741]) {
                                        T7k[984][`push`](T7k[326]);
                                    }
                                }
                            }
                            T7k[789] = T7k[984];
                        }
                    }
                    T7k[828] = T7k[222][`players`];
                    T7k[797] = null;
                    if (T7k[0][4][`q`]) {
                        if (T7k[0][4][`q`] == "bonkquick") {
                            T7k[797] = T7k[0][7][`getMap`](T7k[0][0][`rc`] + 1);
                        } else {
                            T7k[797] = v2k[99][`getOrderedRandomMap`](T7k[0][0][`rc`] + 1, T7k[0][4][`q`]);
                        }
                        T7k[0][4][`map`] = T7k[797];
                        ;
                    } else {
                        T7k[797] = T7k[0][4][`map`];
                    }
                    T7k[222] = E[`createNewState`](T7k[828], T7k[797], T7k[0][0][`seed`], false, T7k[789], T7k[0][4], false);
                    T7k[222][`dontInterpolate`] = true;
                    T7k[222][`scores`] = T7k[0][0][`scores`][`slice`]();
                    for (T7k[334] = 0; T7k[334] < T7k[222][`scores`][`length`]; T7k[334]++) {
                        if (T7k[222][`scores`][T7k[334]] >= 0) {
                            if (m6(T7k[334])) {
                                T7k[222][`scores`][T7k[334]] = null;
                            }
                        }
                    }
                    T7k[222][`lscr`] = T7k[0][0][`lscr`];
                    I8yy.P2k(0);
                    T7k[835] = I8yy.A2k(54, 269);
                    I8yy.P2k(32);
                    T7k[889] = I8yy.r2k(34, 21, 14);
                    T7k[222][`rc`] = T7k[0][0][v8yy[T7k[835]]] + T7k[889];
                }
                for (T7k[140] = T7k[62][`GetBodyList`](); T7k[140]; ) {
                    T7k[579] = T7k[140][`GetNext`]();
                    T7k[62][`DestroyBody`](T7k[140]);
                    T7k[140] = T7k[579];
                }
                for (T7k[528] = T7k[62][`GetJointList`](); T7k[528]; ) {
                    T7k[579] = T7k[528][`GetNext`]();
                    T7k[62][`DestroyJoint`](T7k[528]);
                    T7k[528] = T7k[579];
                }
                E[`globalStepVars`] = undefined;
                T7k[983] = Date[`now`]() - T7k[1];
                if (T7k[983] > 10) {
                    ;
                }
                return T7k[222];
            }
        }
        ;
        U[`panAmount`] = 0.8;
        U[`masterVolume`] = 0.9;
        s8[`npma`] = 0.4;
        s8[`nmpcw`] = 0.8;
        s8[`np`] = false;
        v2k[35] = class q2z {
            //read map data?
            static registerClassAlias(F0H, L0H) {
                I8yy.w9b();
                var I7k = [arguments];
                                q2z[`aliases`][I7k[0][0]] = I7k[0][1];
                return I7k[0][0];
            }
            constructor() {
                var F7k = [arguments];
                                this[`index`] = 0;
                I8yy.P2k(5);
                this[`buffer`] = new ArrayBuffer(I8yy.A2k(1024, 100));
                this[`view`] = new DataView(this[`buffer`]);
                this[`implicitClassAliasArray`] = [];
                this[`implicitStringArray`] = [];
                this[`bodgeCaptureZoneDataIdentifierArray`] = [];
                I8yy.g9b();
                ;
            }
            reset() {
                var L7k = [arguments];
                                this[`index`] = 0;
            }
            readByte() {
                var J7k = [arguments];
                                J7k[9] = this[`view`][`getUint8`](this[`index`]);
                this[`index`] += 1;
                return J7k[9];
            }
            writeByte(J0H) {
                var h7k = [arguments];
                                this[`view`][`setUint8`](this[`index`], h7k[0][0]);
                this[`index`] += 1;
            }
            readInt() {
                var X7k = [arguments];
                                X7k[2] = this[`view`][`getInt32`](this[`index`]);
                I8yy.w9b();
                this[`index`] += 4;
                return X7k[2];
            }
            writeInt(h0H) {
                var m7k = [arguments];
                                this[`view`][`setInt32`](this[`index`], m7k[0][0]);
                this[`index`] += 4;
            }
            readShort() {
                var Q7k = [arguments];
                                Q7k[4] = this[`view`][`getInt16`](this[`index`]);
                this[`index`] += 2;
                return Q7k[4];
            }
            writeShort(X0H) {
                var q7k = [arguments];
                                this[`view`][`setInt16`](this[`index`], q7k[0][0]);
                this[`index`] += 2;
            }
            readUShort() {
                var S7k = [arguments];
                                S7k[1] = this[`view`][`getUint16`](this[`index`]);
                this[`index`] += 2;
                return S7k[1];
            }
            writeUShort(m0H) {
                var w7k = [arguments];
                                this[`view`][`setUint16`](this[`index`], w7k[0][0]);
                this[`index`] += 2;
            }
            readUint() {
                var z7k = [arguments];
                                z7k[4] = this[`view`][`getUint32`](this[`index`]);
                I8yy.g9b();
                this[`index`] += 4;
                return z7k[4];
            }
            writeUint(Q0H) {
                var n7k = [arguments];
                                this[`view`][`setUint32`](this[`index`], n7k[0][0]);
                this[`index`] += 4;
            }
            rewind() {
                var y7k = [arguments];
                                y7k[4] = 557336916;
                y7k[6] = 1427748082;
                y7k[1] = 2;
                for (y7k[9] = 1; I8yy.m1f(y7k[9].toString(), y7k[9].toString().length, 15500) !== y7k[4]; y7k[9]++) {
                    this[`index`] = 0;
                    y7k[1] += 2;
                }
                I8yy.w9b();
                if (I8yy.m1f(y7k[1].toString(), y7k[1].toString().length, 58044) !== y7k[6]) {
                    this[`score`] = 1;
                }
            }
            readInt29() {
                var p7k = [arguments];
                                p7k[2] = 1;
                p7k[4] = this[`readByte`]();
                p7k[1] = 0;
                p7k[6] = 0;
                p7k[8] = 0;
                if (p7k[4] & 0b10000000) {
                    p7k[1] = this[`readByte`]();
                    p7k[2] = 2;
                    if (p7k[1] & 0b10000000) {
                        p7k[6] = this[`readByte`]();
                        p7k[2] = 3;
                        if (p7k[6] & 0b10000000) {
                            p7k[8] = this[`readByte`]();
                            p7k[2] = 4;
                        }
                    }
                }
                p7k[3] = 0;
                if (p7k[2] == 1) {
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000001, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00000010, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000100, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00001000, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00010000, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00100000, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b01000000, 0);
                }
                if (p7k[2] == 2) {
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000001, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000010, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00000100, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00001000, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00010000, 7);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00100000, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b01000000, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b00000001, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b00000010, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b00000100, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00001000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00010000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00100000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b01000000, 0);
                }
                if (p7k[2] == 3) {
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000001, 14);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000010, 14);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000100, 14);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00001000, 14);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00010000, 14);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00100000, 14);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b01000000, 14);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b00000001, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00000010, 7);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00000100, 7);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00001000, 7);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00010000, 7);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00100000, 7);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b01000000, 7);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b00000001, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[6], 0b00000010, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b00000100, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[6], 0b00001000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[6], 0b00010000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[6], 0b00100000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b01000000, 0);
                }
                I8yy.w9b();
                if (p7k[2] == 4) {
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000001, 22);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00000010, 22);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00000100, 22);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00001000, 22);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[4], 0b00010000, 22);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[4], 0b00100000, 22);
                    I8yy.P2k(95);
                    p7k[3] -= I8yy.A2k(p7k[4], 0b01000000, 22);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00000001, 15);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00000010, 15);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b00000100, 15);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00001000, 15);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00010000, 15);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[1], 0b00100000, 15);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[1], 0b01000000, 15);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b00000001, 8);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b00000010, 8);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b00000100, 8);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b00001000, 8);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[6], 0b00010000, 8);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[6], 0b00100000, 8);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[6], 0b01000000, 8);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[8], 0b00000001, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.A2k(p7k[8], 0b00000010, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[8], 0b00000100, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.A2k(p7k[8], 0b00001000, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[8], 0b00010000, 0);
                    I8yy.H2k(95);
                    p7k[3] += I8yy.r2k(p7k[8], 0b00100000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[8], 0b01000000, 0);
                    I8yy.P2k(95);
                    p7k[3] += I8yy.r2k(p7k[8], 0b10000000, 0);
                }
                return p7k[3];
            }
            readBoolean() {
                var O7k = [arguments];
                                O7k[3] = this[`readByte`]();
                I8yy.P2k(96);
                return I8yy.A2k(O7k[3], 1);
            }
            writeBoolean(q0H) {
                I8yy.w9b();
                var W7k = [arguments];
                                if (W7k[0][0]) {
                    this[`writeByte`](1);
                } else {
                    this[`writeByte`](0);
                }
            }
            readDouble() {
                var Z7k = [arguments];
                                Z7k[6] = this[`view`][`getFloat64`](this[`index`]);
                this[`index`] += 8;
                return Z7k[6];
            }
            writeDouble(S0H) {
                var x7k = [arguments];
                                this[`view`][`setFloat64`](this[`index`], x7k[0][0]);
                this[`index`] += 8;
            }
            readFloat() {
                var M7k = [arguments];
                I8yy.w9b();
                                M7k[1] = this[`view`][`getFloat32`](this[`index`]);
                this[`index`] += 4;
                return M7k[1];
            }
            writeFloat(w0H) {
                I8yy.g9b();
                var s7k = [arguments];
                                this[`view`][`setFloat32`](this[`index`], s7k[0][0]);
                this[`index`] += 4;
            }
            readUTF() {
                var c7k = [arguments];
                                c7k[7] = this[`readByte`]();
                c7k[6] = this[`readByte`]();
                I8yy.P2k(35);
                c7k[1] = I8yy.A2k(c7k[7], c7k[6], 256);
                c7k[4] = new Uint8Array(c7k[1]);
                for (c7k[9] = 0; c7k[9] < c7k[1]; c7k[9]++) {
                    c7k[4][c7k[9]] = this[`readByte`]();
                }
                return q2z[`textDec`][`decode`](c7k[4]);
            }
            writeUTF(z0H) {
                var D7k = [arguments];
                                D7k[6] = q2z[`textEnc`][`encode`](D7k[0][0]);
                function b82(n0H, y0H, p0H) {
                    var Y7k = [arguments];
                                        D7k[5][`writeByte`](Y7k[0][0]);
                }
                D7k[1] = D7k[6][`length`];
                I8yy.P2k(2);
                D7k[4] = Math[`floor`](I8yy.r2k(D7k[1], 256));
                I8yy.P2k(34);
                D7k[7] = I8yy.r2k(D7k[1], 256);
                this[`writeByte`](D7k[4]);
                I8yy.w9b();
                this[`writeByte`](D7k[7]);
                D7k[5] = this;
                D7k[6][`forEach`](b82);
            }
            readObject() {
                var N7k = [arguments];
                                N7k[9] = ()=>{
                    var T82, U82, d82, E82, D82, P82, q82, B82, Z82;
                                        T82 = this[`readByte`]();
                    if (T82 == 0x07) {
                        U82 = this[`readByte`]();
                        I8yy.H2k(97);
                        d82 = I8yy.A2k(1, 2, U82);
                        E82 = new Uint8Array(d82);
                        for (var M82 = 0; M82 < d82; M82++) {
                            E82[M82] = this[`readByte`]();
                        }
                        D82 = q2z[`textDec`][`decode`](E82);
                        if (!q2z[`aliases`][D82]) {
                            throw new Error(`trying to decode object with alias we don't recognise`);
                        }
                        this[`implicitClassAliasArray`][`push`](D82);
                        P82 = new q2z[`aliases`][D82]();
                        P82[`readExternal`](this);
                        return P82;
                    } else {
                        I8yy.H2k(97);
                        q82 = I8yy.A2k(1, 4, T82);
                        B82 = this[`implicitClassAliasArray`][q82];
                        if (!q2z[`aliases`][B82]) {
                            throw new Error(`trying to decode object with alias we don't recognise`);
                        }
                        Z82 = new q2z[`aliases`][B82]();
                        Z82[`readExternal`](this);
                        return Z82;
                    }
                }
                ;
                N7k[7] = ()=>{
                    var Q42, v42, H82, y42, z82, g42, t82, w42, O42, L42, s42, A42, p42, F42, k42, J42, n42, f42, r42, x42, i82, I42, S42, N42;
                                        Q42 = 0;
                    I8yy.w9b();
                    v42 = 0;
                    H82 = [];
                    do {
                        I8yy.H2k(82);
                        var c0p = I8yy.r2k(17, 2, 7, 314, 3);
                        I8yy.P2k(98);
                        var U0p = I8yy.A2k(17, 15);
                        v42 = (this[`readByte`]() - c0p) / U0p;
                        Q42 += v42;
                    } while (v42 == 64);
                    y42 = this[`readByte`]();
                    for (var o42 = 0; o42 < Q42; o42++) {
                        z82 = this[`readByte`]();
                        if (z82 === q2z[`T_UNDEFINED`]) {
                            H82[`push`](undefined);
                        }
                        if (z82 === q2z[`T_NULL`]) {
                            H82[`push`](null);
                        }
                        if (z82 === q2z[`T_TRUE`]) {
                            H82[`push`](true);
                        }
                        if (z82 === q2z[`T_FALSE`]) {
                            H82[`push`](false);
                        }
                        if (z82 === q2z[`T_OBJ`]) {
                            g42 = this[`readByte`]();
                            t82 = ``;
                            if (g42 == 7) {
                                w42 = this[`readByte`]();
                                I8yy.P2k(97);
                                O42 = I8yy.A2k(1, 2, w42);
                                L42 = new Uint8Array(O42);
                                for (var W42 = 0; W42 < O42; W42++) {
                                    L42[W42] = this[`readByte`]();
                                }
                                t82 = q2z[`textDec`][`decode`](L42);
                                this[`implicitClassAliasArray`][`push`](t82);
                                if (!q2z[`aliases`][t82]) {
                                    throw new Error(`trying to decode object with alias we don't recognise`);
                                }
                                s42 = new q2z[`aliases`][t82]();
                                s42[`readExternal`](this);
                                H82[`push`](s42);
                            } else if (g42 > 128) {
                                A42 = this[`readByte`]();
                                p42 = this[`readByte`]();
                                I8yy.P2k(97);
                                F42 = I8yy.A2k(1, 2, p42);
                                k42 = new Uint8Array(F42);
                                for (var K42 = 0; K42 < F42; K42++) {
                                    k42[K42] = this[`readByte`]();
                                }
                                t82 = q2z[`textDec`][`decode`](k42);
                                this[`implicitClassAliasArray`][`push`](t82);
                                if (!q2z[`aliases`][t82]) {
                                    throw new Error(`trying to decode object with alias we don't recognise`);
                                }
                                J42 = new q2z[`aliases`][t82]();
                                J42[`readAnonymous`](this);
                                H82[`push`](J42);
                            } else {
                                I8yy.P2k(97);
                                n42 = I8yy.r2k(1, 4, g42);
                                t82 = this[`implicitClassAliasArray`][n42];
                                if (!q2z[`aliases`][t82]) {
                                    throw new Error(`trying to decode object with alias we don't recognise`);
                                }
                                f42 = new q2z[`aliases`][t82]();
                                f42[`readExternal`](this);
                                H82[`push`](f42);
                            }
                        }
                        if (z82 === q2z[`T_ARRAY`]) {}
                        if (z82 === q2z[`T_STRING`]) {
                            r42 = this[`readByte`]();
                            if (r42 % 2 == 0) {
                                I8yy.P2k(2);
                                x42 = I8yy.r2k(r42, 2);
                                H82[`push`](this[`implicitStringArray`][x42]);
                            } else {
                                i82 = 0;
                                I8yy.H2k(97);
                                I42 = I8yy.A2k(1, 2, r42);
                                i82 += I42;
                                while (I42 == 64) {
                                    I8yy.P2k(98);
                                    var S0p = I8yy.r2k(19, 18);
                                    I8yy.H2k(40);
                                    var G0p = I8yy.A2k(12, 8, 6);
                                    I42 = (this[`readByte`]() - S0p) / G0p;
                                    i82 += I42;
                                }
                                S42 = new Uint8Array(i82);
                                for (var R42 = 0; R42 < i82; R42++) {
                                    S42[R42] = this[`readByte`]();
                                }
                                N42 = q2z[`textDec`][`decode`](S42);
                                H82[`push`](N42);
                                this[`implicitStringArray`][`push`](N42);
                            }
                        }
                    }
                    return H82;
                }
                ;
                N7k[8] = this[`readByte`]();
                if (N7k[8] == q2z[`T_NULL`]) {
                    return null;
                }
                I8yy.w9b();
                if (N7k[8] == q2z[`T_UNDEFINED`]) {
                    return undefined;
                }
                if (N7k[8] == q2z[`T_OBJ`]) {
                    return (1,
                    N7k[9])();
                } else if (N7k[8] == q2z[`T_ARRAY`]) {
                    return (1,
                    N7k[7])();
                } else {
                    throw new Error(`Trying to readObject on something that's not an object or array`);
                }
            }
            toBase64() {
                var V7k = [arguments];
                                V7k[2] = ``;
                V7k[9] = new Uint8Array(this[`buffer`]);
                V7k[3] = this[`index`];
                I8yy.g9b();
                for (V7k[1] = 0; V7k[1] < V7k[3]; V7k[1]++) {
                    V7k[2] += String[`fromCharCode`](V7k[9][V7k[1]]);
                }
                return window[`btoa`](V7k[2]);
            }
            fromBase64(O0H, W0H) {
                var g7k = [arguments];
                                g7k[2] = window[`pako`];
                g7k[4] = window[`atob`](g7k[0][0]);
                g7k[9] = g7k[4][`length`];
                g7k[6] = new Uint8Array(g7k[9]);
                for (g7k[5] = 0; g7k[5] < g7k[9]; g7k[5]++) {
                    g7k[6][g7k[5]] = g7k[4][`charCodeAt`](g7k[5]);
                }
                if (g7k[0][1] === true) {
                    g7k[1] = g7k[2][`inflate`](g7k[6]);
                    g7k[6] = g7k[1];
                }
                this[`buffer`] = g7k[6][`buffer`][`slice`](g7k[6][`byteOffset`], g7k[6][`byteLength`] + g7k[6][`byteOffset`]);
                this[`view`] = new DataView(this[`buffer`]);
                this[`index`] = 0;
            }
        }
        ;
        v2k[35][`aliases`] = {};
        v2k[35][`textEnc`] = new TextEncoder();
        v2k[35][`textDec`] = new TextDecoder();
        v2k[35][`T_UNDEFINED`] = 0x00;
        v2k[35][`T_NULL`] = 0x01;
        v2k[35][`T_FALSE`] = 0x02;
        v2k[35][`T_TRUE`] = 0x03;
        v2k[35][`T_INT`] = 0x04;
        v2k[35][`T_DOUBLE`] = 0x05;
        v2k[35][`T_STRING`] = 0x06;
        v2k[35][`T_ARRAY`] = 0x09;
        v2k[35][`T_OBJ`] = 0x0A;
        v2k[38] = class l42 {
            //read map data?
            constructor() {
                var U7k = [arguments];
                                I8yy.g9b();
                this[`layers`] = [];
                this[`bc`] = 0x448aff;
            }
            randomBC(Z0H) {
                var B7k = [arguments];
                                B7k[8] = Math[`floor`](Math[`random`]() * B7k[0][0][`colors`][`length`]);
                this[`bc`] = B7k[0][0][`colors`][B7k[8]];
            }
            makeSafe() {
                var a7k = [arguments];
                                I8yy.g9b();
                if (!(this[`bc`] >= 0x000000 && this[`bc`] <= 0xffffff)) {
                    this[`bc`] = 0x448aff;
                }
                for (a7k[3] = 0; a7k[3] < this[`layers`][`length`]; a7k[3]++) {
                    a7k[9] = this[`layers`][a7k[3]];
                    if (a7k[9]) {
                        if (!(a7k[9][`id`] >= 1 && a7k[9][`id`] <= 115)) {
                            a7k[9][`id`] = 1;
                        }
                        if (!(a7k[9][`x`] >= -99999 && a7k[9][`x`] <= 99999)) {
                            a7k[9][`x`] = 0;
                        }
                        if (!(a7k[9][`y`] >= -99999 && a7k[9][`y`] <= 99999)) {
                            a7k[9][`y`] = 0;
                        }
                        if (!(a7k[9][`scale`] >= -10 && a7k[9][`scale`] <= 10)) {
                            a7k[9][`scale`] = 0.25;
                        }
                        if (!(a7k[9][`angle`] >= -9999 && a7k[9][`angle`] <= 9999)) {
                            a7k[9][`angle`] = 0;
                        }
                        if (typeof a7k[9][`flipX`] != `boolean`) {
                            a7k[9][`flipX`] = false;
                        }
                        if (typeof a7k[9][`flipY`] != `boolean`) {
                            a7k[9][`flipY`] = false;
                        }
                        if (!(a7k[9][`color`] >= 0x000000 && a7k[9][`color`] <= 0xffffff)) {
                            a7k[9][`color`] = 0x000000;
                        }
                    }
                }
                for (a7k[8] = 0; a7k[8] < this[`layers`][`length`]; a7k[8]++) {
                    if (this[`layers`][a7k[8]] == null) {
                        this[`layers`][`splice`](a7k[8], 1);
                        a7k[8]--;
                    }
                }
            }
            fromObject(x0H) {
                var t7k = [arguments];
                                if (t7k[0][0]) {
                    if (t7k[0][0][`layers`] && typeof t7k[0][0][`layers`] == `object` && t7k[0][0][`layers`][`length`] >= 0 && t7k[0][0][`layers`][`length`] <= 16) {
                        this[`layers`] = t7k[0][0][`layers`];
                    }
                    this[`bc`] = t7k[0][0][`bc`];
                }
                I8yy.g9b();
                this[`makeSafe`]();
            }
            toString() {
                var E7k = [arguments];
                                E7k[8] = new v2k[35]();
                E7k[8][`writeByte`](0x0A);
                E7k[8][`writeByte`](0x07);
                E7k[8][`writeByte`](0x03);
                E7k[8][`writeByte`](0x61);
                E7k[8][`writeShort`](0x02);
                E7k[8][`writeByte`](0x09);
                E7k[8][`writeByte`](this[`layers`][`length`] * 2 + 1);
                E7k[8][`writeByte`](0x01);
                for (E7k[4] = 0; E7k[4] < this[`layers`][`length`]; E7k[4]++) {
                    E7k[2] = this[`layers`][E7k[4]];
                    E7k[8][`writeByte`](0x0A);
                    if (E7k[4] == 0) {
                        E7k[8][`writeByte`](0x07);
                        E7k[8][`writeByte`](0x05);
                        E7k[8][`writeByte`](0x61);
                        E7k[8][`writeByte`](0x6c);
                        ;
                    } else {
                        E7k[8][`writeByte`](0x05);
                        ;
                    }
                    E7k[8][`writeShort`](1);
                    E7k[8][`writeShort`](E7k[2][`id`]);
                    E7k[8][`writeFloat`](E7k[2][`scale`]);
                    E7k[8][`writeFloat`](E7k[2][`angle`]);
                    E7k[8][`writeFloat`](E7k[2][`x`]);
                    E7k[8][`writeFloat`](E7k[2][`y`]);
                    E7k[8][`writeBoolean`](E7k[2][`flipX`]);
                    E7k[8][`writeBoolean`](E7k[2][`flipY`]);
                    E7k[8][`writeInt`](E7k[2][`color`]);
                }
                E7k[8][`writeInt`](this[`bc`]);
                E7k[5] = E7k[8][`toBase64`]();
                E7k[9] = encodeURIComponent(E7k[5]);
                return E7k[9];
            }
            fromString(M0H) {
                var R7k = [arguments];
                                if (R7k[0][0] == ``) {
                    return;
                }
                try {
                    R7k[3] = decodeURIComponent(R7k[0][0]);
                    R7k[6] = new v2k[35]();
                    R7k[6][`fromBase64`](R7k[3]);
                    R7k[5] = {};
                    R7k[1] = [];
                    R7k[9] = R7k[6][`readByte`]();
                    R7k[7] = R7k[6][`readByte`]();
                    R7k[2] = R7k[6][`readByte`]();
                    R7k[4] = R7k[6][`readByte`]();
                    function o52(s0H) {
                        var j6k = [arguments];
                                                I8yy.g9b();
                        j6k[8] = j6k[0][0][`readByte`]();
                        j6k[6] = {};
                        j6k[3] = j6k[8][`toString`](16);
                        if (j6k[3] == `a`) {
                            j6k[5] = j6k[0][0][`readByte`]();
                            if (j6k[5] == 7) {
                                j6k[0][0][`readByte`]();
                                j6k[0][0][`readByte`]();
                                j6k[0][0][`readByte`]();
                                ;
                            } else {
                                ;
                            }
                            j6k[2] = j6k[0][0][`readShort`]();
                            j6k[6][`id`] = j6k[0][0][`readShort`]();
                            j6k[6][`scale`] = j6k[0][0][`readFloat`]();
                            j6k[6][`angle`] = j6k[0][0][`readFloat`]();
                            j6k[6][`x`] = j6k[0][0][`readFloat`]();
                            j6k[6][`y`] = j6k[0][0][`readFloat`]();
                            j6k[6][`flipX`] = j6k[0][0][`readBoolean`]();
                            j6k[6][`flipY`] = j6k[0][0][`readBoolean`]();
                            j6k[6][`color`] = j6k[0][0][`readInt`]();
                        } else {
                            j6k[6] = null;
                        }
                        return j6k[6];
                    }
                    R7k[69] = R7k[6][`readShort`]();
                    R7k[14] = R7k[6][`readByte`]();
                    R7k[29] = R7k[6][`readByte`]();
                    I8yy.P2k(97);
                    R7k[15] = I8yy.r2k(1, 2, R7k[29]);
                    R7k[47] = R7k[6][`readByte`]();
                    while (R7k[47] != 1) {
                        R7k[45] = 0;
                        if (R7k[47] == 3) {
                            R7k[73] = R7k[6][`readByte`]();
                            I8yy.P2k(1);
                            R7k[45] = I8yy.r2k(48, R7k[73]);
                        } else if (R7k[47] == 5) {
                            R7k[41] = R7k[6][`readByte`]();
                            R7k[97] = R7k[6][`readByte`]();
                            I8yy.H2k(99);
                            R7k[45] = I8yy.A2k(48, 48, 10, R7k[97], R7k[41]);
                        }
                        this[`layers`][R7k[45]] = o52(R7k[6]);
                        R7k[47] = R7k[6][`readByte`]();
                    }
                    for (R7k[35] = 0; R7k[35] < R7k[15]; R7k[35]++) {
                        this[`layers`][R7k[35]] = o52(R7k[6]);
                    }
                    if (R7k[69] >= 2) {
                        this[`bc`] = R7k[6][`readInt`]();
                    }
                    this[`makeSafe`]();
                } catch (y52) {
                    this[`layers`] = [];
                    this[`bc`] = 0x448aff;
                }
            }
        }
        ;
        v2k[92] = class A52 {
            constructor() {
                //user inputs?
                var k6k = [arguments];
                                this[`version`] = 6;
                this[`up1`] = 38;
                this[`up2`] = 87;
                this[`down1`] = 40;
                this[`down2`] = 83;
                this[`left1`] = 37;
                this[`left2`] = 65;
                this[`right1`] = 39;
                this[`right2`] = 68;
                this[`heavy1`] = 88;
                this[`heavy2`] = 16;
                this[`swing1`] = 90;
                this[`swing2`] = 89;
                this[`up3`] = 999;
                this[`down3`] = 999;
                this[`left3`] = 999;
                this[`right3`] = 999;
                this[`heavy3`] = 32;
                this[`swing3`] = 999;
                this[`filter`] = true;
                this[`stats`] = false;
                this[`help`] = true;
                this[`quality`] = 3;
                if ((/(CrOS)/)[`test`](navigator[`userAgent`])) {
                    this[`quality`] = 2;
                    ;
                }
            }
            clone() {
                var f6k = [arguments];
                                f6k[9] = new A52();
                f6k[9][`up1`] = this[`up1`];
                f6k[9][`up2`] = this[`up2`];
                f6k[9][`down1`] = this[`down1`];
                f6k[9][`down2`] = this[`down2`];
                f6k[9][`left1`] = this[`left1`];
                I8yy.w9b();
                f6k[9][`left2`] = this[`left2`];
                f6k[9][`right1`] = this[`right1`];
                f6k[9][`right2`] = this[`right2`];
                f6k[9][`heavy1`] = this[`heavy1`];
                f6k[9][`heavy2`] = this[`heavy2`];
                f6k[9][`swing1`] = this[`swing1`];
                f6k[9][`swing2`] = this[`swing2`];
                f6k[9][`up3`] = this[`up3`];
                f6k[9][`down3`] = this[`down3`];
                f6k[9][`left3`] = this[`left3`];
                f6k[9][`right3`] = this[`right3`];
                f6k[9][`heavy3`] = this[`heavy3`];
                f6k[9][`swing3`] = this[`swing3`];
                f6k[9][`filter`] = this[`filter`];
                f6k[9][`stats`] = this[`stats`];
                f6k[9][`help`] = this[`help`];
                f6k[9][`quality`] = this[`quality`];
                return f6k[9];
            }
            serialize() {
                var G6k = [arguments];
                                G6k[1] = new v2k[35]();
                G6k[1][`writeUShort`](this[`version`]);
                G6k[1][`writeUShort`](this[`up1`]);
                G6k[1][`writeUShort`](this[`up2`]);
                G6k[1][`writeUShort`](this[`down1`]);
                G6k[1][`writeUShort`](this[`down2`]);
                G6k[1][`writeUShort`](this[`left1`]);
                G6k[1][`writeUShort`](this[`left2`]);
                G6k[1][`writeUShort`](this[`right1`]);
                G6k[1][`writeUShort`](this[`right2`]);
                G6k[1][`writeUShort`](this[`heavy1`]);
                G6k[1][`writeUShort`](this[`heavy2`]);
                G6k[1][`writeUShort`](this[`swing1`]);
                G6k[1][`writeUShort`](this[`swing2`]);
                G6k[1][`writeBoolean`](this[`filter`]);
                G6k[1][`writeBoolean`](this[`stats`]);
                G6k[1][`writeBoolean`](this[`help`]);
                G6k[1][`writeUShort`](this[`up3`]);
                G6k[1][`writeUShort`](this[`down3`]);
                G6k[1][`writeUShort`](this[`left3`]);
                G6k[1][`writeUShort`](this[`right3`]);
                G6k[1][`writeUShort`](this[`heavy3`]);
                I8yy.w9b();
                G6k[1][`writeUShort`](this[`swing3`]);
                G6k[1][`writeUShort`](this[`quality`]);
                return G6k[1][`toBase64`]();
            }
            unserialize(c0H) {
                var T6k = [arguments];
                                try {
                    T6k[5] = new v2k[35]();
                    T6k[5][`fromBase64`](T6k[0][0], false);
                    T6k[9] = T6k[5][`readUShort`]();
                    if (T6k[9] >= 1) {
                        this[`up1`] = T6k[5][`readUShort`]();
                        this[`up2`] = T6k[5][`readUShort`]();
                        this[`down1`] = T6k[5][`readUShort`]();
                        this[`down2`] = T6k[5][`readUShort`]();
                        this[`left1`] = T6k[5][`readUShort`]();
                        this[`left2`] = T6k[5][`readUShort`]();
                        this[`right1`] = T6k[5][`readUShort`]();
                        this[`right2`] = T6k[5][`readUShort`]();
                        this[`heavy1`] = T6k[5][`readUShort`]();
                        this[`heavy2`] = T6k[5][`readUShort`]();
                        this[`swing1`] = T6k[5][`readUShort`]();
                        this[`swing2`] = T6k[5][`readUShort`]();
                    }
                    if (T6k[9] >= 2) {
                        this[`filter`] = T6k[5][`readBoolean`]();
                    }
                    if (T6k[9] >= 3) {
                        this[`stats`] = T6k[5][`readBoolean`]();
                    }
                    if (T6k[9] >= 3 && T6k[9] <= 5) {
                        T6k[8] = T6k[5][`readBoolean`]();
                        if (T6k[8]) {
                            this[`quality`] = 3;
                        } else {
                            this[`quality`] = 2;
                        }
                    }
                    if (T6k[9] >= 4) {
                        this[`help`] = T6k[5][`readBoolean`]();
                    }
                    if (T6k[9] >= 5) {
                        this[`up3`] = T6k[5][`readUShort`]();
                        this[`down3`] = T6k[5][`readUShort`]();
                        this[`left3`] = T6k[5][`readUShort`]();
                        this[`right3`] = T6k[5][`readUShort`]();
                        this[`heavy3`] = T6k[5][`readUShort`]();
                        this[`swing3`] = T6k[5][`readUShort`]();
                    }
                    if (T6k[9] >= 6) {
                        this[`quality`] = T6k[5][`readUShort`]();
                    }
                } catch (m52) {}
            }
        }
        ;
        v2k[59] = class b52 {
            constructor(D0H) {
                var K6k = [arguments];
                                this[`peerID`] = K6k[0][0];
                this[`receivedMessages`] = [];
                this[`metrics`] = {
                    nc: 0,
                    pc: 0,
                    pt: 0
                };
                this[`p2pReverts`] = 0;
                this[`p2pBanUntil`] = 0;
                this[`p2pBanLevel`] = 0;
                ;
            }
        }
        ;
        v2k[56] = class c52 {
            contructor() {
                var r6k = [arguments];
                                I8yy.w9b();
                this[`startingState`] = {};
                this[`playerArray`] = [];
                this[`inputs`] = [];
                this[`adminInputs`] = [];
                this[`gameSettings`] = new v2k[10]();
                this[`id`] = 0;
                this[`mn`] = ``;
                this[`ma`] = ``;
                this[`rxn`] = `Cool Map`;
                this[`rxa`] = `Cool Man`;
                this[`es`] = 0;
                this[`mid`] = -1;
            }
            halfSerialize() {
                I8yy.w9b();
                var A6k = [arguments];
                                A6k[5] = 0;
                for (A6k[1] = 0; A6k[1] < this[`inputs`][`length`]; A6k[1]++) {
                    if (this[`inputs`][A6k[1]]) {
                        for (A6k[9] = 0; A6k[9] < this[`inputs`][A6k[1]][`length`]; A6k[9]++) {
                            if (this[`inputs`][A6k[1]][A6k[9]]) {
                                A6k[5]++;
                            }
                        }
                    }
                }
                A6k[8] = new v2k[35]();
                A6k[8][`writeUShort`](A6k[5]);
                for (A6k[7] = 0; A6k[7] < this[`inputs`][`length`]; A6k[7]++) {
                    if (this[`inputs`][A6k[7]]) {
                        for (A6k[2] = 0; A6k[2] < this[`inputs`][A6k[7]][`length`]; A6k[2]++) {
                            if (this[`inputs`][A6k[7]][A6k[2]]) {
                                A6k[6] = this[`inputs`][A6k[7]][A6k[2]];
                                A6k[8][`writeUShort`](A6k[7]);
                                A6k[8][`writeUint`](A6k[2]);
                                A6k[4] = 0;
                                if (A6k[6][`left`]) {
                                    A6k[4] += 0b00000001;
                                }
                                if (A6k[6][`right`]) {
                                    A6k[4] += 0b00000010;
                                }
                                if (A6k[6][`up`]) {
                                    A6k[4] += 0b00000100;
                                }
                                if (A6k[6][`down`]) {
                                    A6k[4] += 0b00001000;
                                }
                                if (A6k[6][`action`]) {
                                    A6k[4] += 0b00010000;
                                }
                                if (A6k[6][`action2`]) {
                                    A6k[4] += 0b00100000;
                                }
                                A6k[8][`writeByte`](A6k[4]);
                            }
                        }
                    }
                }
                this[`inputs`] = A6k[8][`toBase64`]();
            }
            halfUnserialize() {
                var P6k = [arguments];
                                P6k[6] = new v2k[35]();
                P6k[6][`fromBase64`](this[`inputs`]);
                this[`inputs`] = [];
                P6k[3] = P6k[6][`readUShort`]();
                I8yy.w9b();
                for (P6k[56] = 0; P6k[56] < P6k[3]; P6k[56]++) {
                    P6k[7] = P6k[6][`readUShort`]();
                    P6k[9] = P6k[6][`readUint`]();
                    P6k[1] = P6k[6][`readByte`]();
                    I8yy.P2k(65);
                    P6k[5] = I8yy.r2k(0b00000001, 0b00000001, P6k[1]);
                    I8yy.P2k(65);
                    P6k[2] = I8yy.r2k(0b00000010, 0b00000010, P6k[1]);
                    I8yy.H2k(65);
                    P6k[8] = I8yy.r2k(0b00000100, 0b00000100, P6k[1]);
                    I8yy.H2k(65);
                    P6k[19] = I8yy.A2k(0b00001000, 0b00001000, P6k[1]);
                    I8yy.P2k(65);
                    P6k[97] = I8yy.r2k(0b00010000, 0b00010000, P6k[1]);
                    I8yy.H2k(65);
                    P6k[80] = I8yy.A2k(0b00100000, 0b00100000, P6k[1]);
                    if (!this[`inputs`][P6k[7]]) {
                        this[`inputs`][P6k[7]] = [];
                    }
                    this[`inputs`][P6k[7]][P6k[9]] = {
                        left: P6k[5],
                        right: P6k[2],
                        up: P6k[8],
                        down: P6k[19],
                        action: P6k[97],
                        action2: P6k[80]
                    };
                }
            }
            fromJSONObject(Y0H) {
                var H6k = [arguments];
                                this[`startingState`] = H6k[0][0][`startingState`];
                this[`playerArray`] = H6k[0][0][`playerArray`];
                this[`inputs`] = H6k[0][0][`inputs`];
                this[`adminInputs`] = H6k[0][0][`adminInputs`];
                this[`gameSettings`] = H6k[0][0][`gameSettings`];
                I8yy.w9b();
                if (typeof H6k[0][0][`mn`] == `string` && H6k[0][0][`mn`][`length`] < 30) {
                    this[`mn`] = H6k[0][0][`mn`];
                } else {
                    this[`mn`] = `Unknown`;
                }
                if (typeof H6k[0][0][`ma`] == `string` && H6k[0][0][`ma`][`length`] < 30) {
                    this[`ma`] = H6k[0][0][`ma`];
                } else {
                    this[`ma`] = `Unknown`;
                }
                if (typeof H6k[0][0][`rxa`] == `string` && H6k[0][0][`rxa`][`length`] < 30) {
                    this[`rxa`] = H6k[0][0][`rxa`];
                } else {
                    this[`rxa`] = ``;
                }
                if (typeof H6k[0][0][`rxn`] == `string` && H6k[0][0][`rxn`][`length`] < 30) {
                    this[`rxn`] = H6k[0][0][`rxn`];
                } else {
                    this[`rxn`] = ``;
                }
                this[`es`] = H6k[0][0][`es`];
                if (typeof H6k[0][0][`mid`] == `number`) {
                    this[`mid`] = H6k[0][0][`mid`];
                }
            }
            toDatabase() {
                var v6k = [arguments];
                v6k[1] = 1117331183;
                v6k[9] = -1245958831;
                v6k[4] = 2;
                for (v6k[6] = 1; I8yy.d1f(v6k[6].toString(), v6k[6].toString().length, 67152) !== v6k[1]; v6k[6]++) {
                                        this[`T_UNDEFINED`]();
                    v6k[8] = c52[`blur`][`byteOffset`](this);
                    v6k[5] = v6k[8][`removeChildAt`]();
                    v6k[4] += 2;
                }
                if (I8yy.d1f(v6k[4].toString(), v6k[4].toString().length, 83149) !== v6k[9]) {
                                        this[`halfSerialize`]();
                    v6k[8] = c52[`pson`][`encode`](this);
                    v6k[5] = v6k[8][`toBase64`]();
                }
                v6k[3] = LZString[`compressToEncodedURIComponent`](v6k[5]);
                v6k[7] = ``;
                for (v6k[56] = 0; v6k[56] < v6k[3][`length`]; v6k[56]++) {
                    if (v6k[56] <= 100 && v6k[3][`charAt`](v6k[56]) === v6k[3][`charAt`](v6k[56])[`toLowerCase`]()) {
                        v6k[7] += v6k[3][`charAt`](v6k[56])[`toUpperCase`]();
                    } else if (v6k[56] <= 100 && v6k[3][`charAt`](v6k[56]) === v6k[3][`charAt`](v6k[56])[`toUpperCase`]()) {
                        v6k[7] += v6k[3][`charAt`](v6k[56])[`toLowerCase`]();
                    } else {
                        v6k[7] += v6k[3][`charAt`](v6k[56]);
                    }
                }
                return v6k[7];
            }
            fromDatabase(N0H) {
                var i6k = [arguments];
                                i6k[9] = i6k[0][0];
                i6k[7] = ``;
                for (i6k[8] = 0; i6k[8] < i6k[9][`length`]; i6k[8]++) {
                    if (i6k[8] <= 100 && i6k[9][`charAt`](i6k[8]) === i6k[9][`charAt`](i6k[8])[`toLowerCase`]()) {
                        i6k[7] += i6k[9][`charAt`](i6k[8])[`toUpperCase`]();
                    } else if (i6k[8] <= 100 && i6k[9][`charAt`](i6k[8]) === i6k[9][`charAt`](i6k[8])[`toUpperCase`]()) {
                        i6k[7] += i6k[9][`charAt`](i6k[8])[`toLowerCase`]();
                    } else {
                        i6k[7] += i6k[9][`charAt`](i6k[8]);
                    }
                }
                i6k[4] = LZString[`decompressFromEncodedURIComponent`](i6k[7]);
                i6k[2] = dcodeIO[`ByteBuffer`][`fromBase64`](i6k[4]);
                i6k[1] = c52[`pson`][`decode`](i6k[2]);
                this[`fromJSONObject`](i6k[1]);
                I8yy.g9b();
                this[`halfUnserialize`]();
            }
        }
        ;
        v2k[56][`dict`] = [`physics`, `shapes`, `fixtures`, `bodies`, `bro`, `joints`, `ppm`, `lights`, `spawns`, `lasers`, `capZones`, `type`, `w`, `h`, `c`, `a`, `v`, `l`, `s`, `sh`, `fr`, `re`, `de`, `sn`, `fc`, `fm`, `f`, `d`, `n`, `bg`, `lv`, `av`, `ld`, `ad`, `fr`, `bu`, `cf`, `rv`, `p`, `d`, `bf`, `ba`, `bb`, `aa`, `ab`, `axa`, `dr`, `em`, `mmt`, `mms`, `ms`, `ut`, `lt`, `New body`, `Box Shape`, `Circle Shape`, `Polygon Shape`, `EdgeChain Shape`, `priority`, `Light`, `Laser`, `Cap Zone`, `BG Shape`, `Background Layer`, `Rotate Joint`, `Slider Joint`, `Rod Joint`, `Gear Joint`, 65535, 16777215];
        v2k[56][`pson`] = new dcodeIO[`PSON`][`StaticPair`](v2k[56][`dict`]);
        v2k[18] = class f12 {
            constructor() {
                var u6k = [arguments];
                                this[`version`] = 0;
                this[`mapname`] = ``;
                this[`author`] = ``;
                this[`platformArray`] = [];
                this[`spawnArray`] = [];
                this[`platformNames`] = [];
                this[`spawnNames`] = [];
                this[`capZoneArray`] = [];
                this[`capZoneNames`] = [];
                this[`gravity`] = 20;
                this[`ppm`] = 12;
                this[`discFriction`] = 0;
                this[`discRestitution`] = 0.8;
                this[`discDensity`] = 1.0;
                this[`discLinearDamping`] = 0.0;
                this[`discRadius`] = 1.0;
                this[`discAllForce`] = 12;
                I8yy.w9b();
                this[`respawn`] = false;
                this[`noCollide`] = false;
            }
            writeExternal(V0H) {
                var b6k = [arguments];
            }
            readExternal(g0H) {
                var d6k = [arguments];
                                this[`version`] = d6k[0][0][`readShort`]();
                this[`mapname`] = d6k[0][0][`readUTF`]();
                if (this[`mapname`][`length`] > 25) {
                    this[`mapname`] = this[`mapname`][`slice`](0, 25);
                }
                this[`author`] = d6k[0][0][`readUTF`]();
                if (this[`author`][`length`] > 25) {
                    this[`author`] = this[`author`][`slice`](0, 35);
                }
                this[`gravity`] = d6k[0][0][`readDouble`]();
                this[`ppm`] = d6k[0][0][`readDouble`]();
                this[`ppm`] = Math[`max`](5, this[`ppm`]);
                this[`ppm`] = Math[`min`](30, this[`ppm`]);
                this[`discFriction`] = d6k[0][0][`readDouble`]();
                this[`discRestitution`] = d6k[0][0][`readDouble`]();
                this[`discDensity`] = d6k[0][0][`readDouble`]();
                this[`discLinearDamping`] = d6k[0][0][`readDouble`]();
                this[`discRadius`] = d6k[0][0][`readDouble`]();
                this[`discAllForce`] = d6k[0][0][`readDouble`]();
                d6k[2] = d6k[0][0][`readShort`]();
                this[`platformArray`] = [];
                this[`platformNames`] = [];
                for (d6k[4] = 0; d6k[4] < d6k[2]; d6k[4]++) {
                    this[`platformArray`][`push`](d6k[0][0][`readObject`]());
                    this[`platformNames`][`push`](d6k[0][0][`readUTF`]());
                }
                d6k[6] = d6k[0][0][`readShort`]();
                this[`spawnArray`] = [];
                this[`spawnNames`] = [];
                for (d6k[9] = 0; d6k[9] < d6k[6]; d6k[9]++) {
                    this[`spawnArray`][`push`](d6k[0][0][`readObject`]());
                    this[`spawnNames`][`push`](d6k[0][0][`readUTF`]());
                }
                if (this[`version`] >= 2) {
                    this[`capZoneArray`] = d6k[0][0][`readObject`]();
                } else {
                    this[`capZoneArray`] = [];
                }
                if (this[`version`] >= 3) {
                    this[`capZoneNames`] = d6k[0][0][`readObject`]();
                } else {
                    this[`capZoneNames`] = [];
                }
                if (this[`version`] == 4) {
                    d6k[1] = d6k[0][0][`readBoolean`]();
                    this[`noCollide`] = d6k[1];
                    this[`respawn`] = d6k[1];
                } else if (this[`version`] > 4) {
                    this[`noCollide`] = d6k[0][0][`readBoolean`]();
                    this[`respawn`] = d6k[0][0][`readBoolean`]();
                }
            }
        }
        ;
        v2k[18][`classAlias`] = v2k[35][`registerClassAlias`](`gmp`, v2k[18]);
        v2k[73] = class A12 {
            constructor() {
                var e6k = [arguments];
                                this[`version`] = 0;
                this[`x`] = 0;
                this[`y`] = 0;
                this[`shapeArray`] = [];
                this[`restitution`] = 0.8;
                this[`friction`] = 0;
                this[`density`] = 1;
                this[`angle`] = 0;
                this[`angularVelocity`] = 0;
                this[`isDynamic`] = false;
                this[`xv`] = 0;
                I8yy.w9b();
                this[`yv`] = 0;
                this[`linearDamping`] = 0;
                this[`angularDamping`] = 0;
                this[`rotates`] = false;
                this[`rotatePivotX`] = 0;
                this[`rotatePivotY`] = 0;
                this[`stiffness`] = 0;
                this[`springy`] = false;
                this[`springyUpper`] = 100;
                this[`springyLower`] = -100;
                this[`springyAnchorX`] = 0;
                this[`springyAnchorY`] = 0;
                this[`springyForce`] = 1000000;
                this[`path`] = false;
                I8yy.H2k(9);
                e6k[4] = I8yy.A2k(3218, 20, 170);
                I8yy.H2k(1);
                e6k[7] = I8yy.A2k(13, 15);
                this[`pathAngle`] = Math[v8yy[e6k[4]]] / e6k[7];
                this[`pathUpper`] = 100;
                this[`pathLower`] = -100;
                this[`pathAnchorX`] = 0;
                this[`pathAnchorY`] = 0;
                this[`pathMaxSpeed`] = 50;
                this[`pathForce`] = 1000000;
                ;
            }
            writeExternal(U0H) {
                I8yy.g9b();
                var C6k = [arguments];
            }
            readExternal(B0H) {
                var l6k = [arguments];
                                this[`version`] = l6k[0][0][`readShort`]();
                if (this[`version`] <= 3) {
                    this[`x`] = l6k[0][0][`readDouble`]();
                    this[`y`] = l6k[0][0][`readDouble`]();
                    this[`shapeArray`] = [new v2k[49]()];
                    this[`shapeArray`][0][`localX`] = 0;
                    this[`shapeArray`][0][`localY`] = 0;
                    this[`shapeArray`][0][`localAngle`] = 0;
                    this[`shapeArray`][0][`width`] = l6k[0][0][`readDouble`]();
                    this[`shapeArray`][0][`height`] = l6k[0][0][`readDouble`]();
                    this[`restitution`] = l6k[0][0][`readDouble`]();
                    this[`density`] = l6k[0][0][`readDouble`]();
                    this[`friction`] = l6k[0][0][`readDouble`]();
                    this[`angle`] = l6k[0][0][`readDouble`]();
                    this[`angularVelocity`] = l6k[0][0][`readDouble`]();
                    this[`shapeArray`][0][`shapeID`] = l6k[0][0][`readShort`]();
                    this[`isDynamic`] = l6k[0][0][`readBoolean`]();
                    if (this[`isDynamic`]) {
                        this[`xv`] = l6k[0][0][`readDouble`]();
                        this[`yv`] = l6k[0][0][`readDouble`]();
                        this[`linearDamping`] = l6k[0][0][`readDouble`]();
                        this[`angularDamping`] = l6k[0][0][`readDouble`]();
                        this[`rotates`] = l6k[0][0][`readBoolean`]();
                        if (this[`rotates`]) {
                            this[`rotatePivotX`] = l6k[0][0][`readDouble`]();
                            this[`rotatePivotY`] = l6k[0][0][`readDouble`]();
                            this[`stiffness`] = l6k[0][0][`readDouble`]();
                        }
                    }
                    if (this[`version`] >= 2) {
                        this[`shapeArray`][0][`color`] = l6k[0][0][`readUint`]();
                    } else {
                        if (this[`isDynamic`]) {
                            this[`shapeArray`][0][`color`] = 0x8bc34a;
                        } else {
                            this[`shapeArray`][0][`color`] = 0x58b173;
                        }
                    }
                    if (this[`version`] >= 3) {
                        l6k[8] = l6k[0][0][`readShort`]();
                        this[`shapeArray`][0][`death`] = l6k[0][0][`readBoolean`]();
                        ;
                    } else {
                        this[`shapeArray`][0][`death`] = false;
                    }
                }
                if (this[`version`] >= 4) {
                    this[`x`] = l6k[0][0][`readDouble`]();
                    this[`y`] = l6k[0][0][`readDouble`]();
                    l6k[7] = l6k[0][0][`readShort`]();
                    this[`shapeArray`] = [];
                    for (l6k[3] = 0; l6k[3] < l6k[7]; l6k[3]++) {
                        this[`shapeArray`][l6k[3]] = new v2k[49]();
                        this[`shapeArray`][l6k[3]][`localX`] = l6k[0][0][`readDouble`]();
                        this[`shapeArray`][l6k[3]][`localY`] = l6k[0][0][`readDouble`]();
                        this[`shapeArray`][l6k[3]][`width`] = l6k[0][0][`readDouble`]();
                        this[`shapeArray`][l6k[3]][`height`] = l6k[0][0][`readDouble`]();
                        this[`shapeArray`][l6k[3]][`localAngle`] = l6k[0][0][`readDouble`]();
                        this[`shapeArray`][l6k[3]][`shapeID`] = l6k[0][0][`readShort`]();
                        this[`shapeArray`][l6k[3]][`color`] = l6k[0][0][`readUint`]();
                        this[`shapeArray`][l6k[3]][`death`] = l6k[0][0][`readBoolean`]();
                        if (this[`version`] >= 7) {
                            this[`shapeArray`][l6k[3]][`noPhysics`] = l6k[0][0][`readBoolean`]();
                        }
                        if (this[`version`] == 4 && this[`shapeArray`][l6k[3]][`shapeID`] == 5) {
                            this[`shapeArray`][l6k[3]][`height`] = Math[`round`](0.866 * this[`shapeArray`][l6k[3]][`width`]);
                        }
                    }
                    this[`restitution`] = l6k[0][0][`readDouble`]();
                    this[`density`] = l6k[0][0][`readDouble`]();
                    this[`friction`] = l6k[0][0][`readDouble`]();
                    this[`angle`] = l6k[0][0][`readDouble`]();
                    this[`angularVelocity`] = l6k[0][0][`readDouble`]();
                    this[`isDynamic`] = l6k[0][0][`readBoolean`]();
                    if (this[`isDynamic`]) {
                        this[`xv`] = l6k[0][0][`readDouble`]();
                        this[`yv`] = l6k[0][0][`readDouble`]();
                        this[`linearDamping`] = l6k[0][0][`readDouble`]();
                        this[`angularDamping`] = l6k[0][0][`readDouble`]();
                        this[`rotates`] = l6k[0][0][`readBoolean`]();
                        if (this[`rotates`]) {
                            this[`rotatePivotX`] = l6k[0][0][`readDouble`]();
                            this[`rotatePivotY`] = l6k[0][0][`readDouble`]();
                            this[`stiffness`] = l6k[0][0][`readDouble`]();
                        }
                        if (this[`version`] >= 6) {
                            this[`springy`] = l6k[0][0][`readBoolean`]();
                            if (this[`springy`]) {
                                this[`springyUpper`] = l6k[0][0][`readDouble`]();
                                this[`springyLower`] = -this[`springyUpper`];
                                this[`springyForce`] = l6k[0][0][`readDouble`]();
                                this[`springyAnchorX`] = l6k[0][0][`readDouble`]();
                                this[`springyAnchorY`] = l6k[0][0][`readDouble`]();
                            }
                            this[`path`] = l6k[0][0][`readBoolean`]();
                            if (this[`path`]) {
                                this[`pathAngle`] = l6k[0][0][`readDouble`]();
                                this[`pathUpper`] = l6k[0][0][`readDouble`]();
                                this[`pathLower`] = -this[`pathUpper`];
                                this[`pathMaxSpeed`] = l6k[0][0][`readDouble`]();
                                this[`pathForce`] = l6k[0][0][`readDouble`]();
                                this[`pathAnchorX`] = l6k[0][0][`readDouble`]();
                                this[`pathAnchorY`] = l6k[0][0][`readDouble`]();
                            }
                        }
                    }
                }
            }
        }
        ;
        v2k[73][`classAlias`] = v2k[35][`registerClassAlias`](`ps`, v2k[73]);
        v2k[49] = class G12 {
            constructor() {
                var o6k = [arguments];
                                this[`localX`] = 0;
                this[`localY`] = 0;
                I8yy.w9b();
                this[`width`] = 0;
                this[`height`] = 0;
                this[`localAngle`] = 0;
                this[`shapeID`] = 0;
                this[`color`] = 0xff0000;
                this[`death`] = false;
                this[`noPhysics`] = false;
            }
        }
        ;
        v2k[41] = class m12 {
            constructor() {
                var I6k = [arguments];
                                this[`x`] = 0;
                this[`y`] = 0;
                this[`xv`] = 0;
                this[`yv`] = 0;
                this[`ffa`] = false;
                I8yy.w9b();
                this[`blue`] = false;
                this[`red`] = false;
                this[`priority`] = 0;
            }
            writeExternal(a0H) {
                I8yy.g9b();
                var F6k = [arguments];
            }
            readExternal(t0H) {
                var L6k = [arguments];
                                this[`x`] = L6k[0][0][`readDouble`]();
                this[`y`] = L6k[0][0][`readDouble`]();
                this[`xv`] = L6k[0][0][`readDouble`]();
                this[`yv`] = L6k[0][0][`readDouble`]();
                I8yy.w9b();
                this[`ffa`] = L6k[0][0][`readBoolean`]();
                this[`blue`] = L6k[0][0][`readBoolean`]();
                this[`red`] = L6k[0][0][`readBoolean`]();
                this[`priority`] = L6k[0][0][`readShort`]();
            }
        }
        ;
        v2k[41][`classAlias`] = v2k[35][`registerClassAlias`](`mspn`, v2k[41]);
        v2k[61] = class c12 {
            constructor() {
                var J6k = [arguments];
                                this[`version`] = 0;
                this[`radius`] = 0;
                I8yy.g9b();
                this[`x`] = 0;
                this[`y`] = 0;
                this[`captureLimit`] = 0;
                this[`ownerID`] = 0;
                this[`framesToDetonate`] = 0;
            }
            writeExternal(E0H) {
                I8yy.w9b();
                var h6k = [arguments];
            }
            readExternal(R0H) {
                var X6k = [arguments];
                                I8yy.w9b();
                for (X6k[7] = 0; X6k[7] < 8; X6k[7]++) {
                    X6k[3] = X6k[0][0][`readByte`]();
                    if (X6k[3] == v2k[35][`T_INT`]) {
                        this[X6k[0][0][`bodgeCaptureZoneDataIdentifierArray`][X6k[7]]] = X6k[0][0][`readInt29`]();
                    } else if (X6k[3] == v2k[35][`T_DOUBLE`]) {
                        this[X6k[0][0][`bodgeCaptureZoneDataIdentifierArray`][X6k[7]]] = X6k[0][0][`readDouble`]();
                    }
                }
            }
            readAnonymous(j5H) {
                var m6k = [arguments];
                I8yy.w9b();
                                m6k[0][0][`bodgeCaptureZoneDataIdentifierArray`] = [];
                for (m6k[5] = 0; m6k[5] < 8; m6k[5]++) {
                    m6k[4] = m6k[0][0][`readByte`]();
                    I8yy.H2k(97);
                    m6k[6] = I8yy.A2k(1, 2, m6k[4]);
                    m6k[3] = new Uint8Array(m6k[6]);
                    for (m6k[9] = 0; m6k[9] < m6k[6]; m6k[9]++) {
                        m6k[3][m6k[9]] = m6k[0][0][`readByte`]();
                    }
                    m6k[7] = v2k[35][`textDec`][`decode`](m6k[3]);
                    m6k[0][0][`bodgeCaptureZoneDataIdentifierArray`][`push`](m6k[7]);
                }
                this[`readExternal`](m6k[0][0]);
            }
        }
        ;
        v2k[61][`classAlias`] = v2k[35][`registerClassAlias`](`czs`, v2k[61]);
        v2k[10] = class Z12 {
            constructor() {
                var Q6k = [arguments];
                                this[`map`] = null;
                this[`gt`] = 2;
                this[`wl`] = 3;
                this[`q`] = false;
                this[`tl`] = false;
                this[`tea`] = false;
                I8yy.g9b();
                this[`ga`] = `b`;
                this[`mo`] = `b`;
                this[`bal`] = [];
                ;
            }
        }
        ;
        v2k[10][`lobbyModes`] = [`b`, `ar`, `ard`, `sp`, `f`];
        v2k[10][`modes`] = [];
        function Y4() {
            var q6k = [arguments];
                        if (document[`hidden`] == true) {
                v2k[79][`enterFrameDispatcher`][`dispatch`]();
            }
        }
        v2k[10][`modes`][`b`] = {
            lobbyName: `Classic`,
            gameStartName: `CLASSIC`,
            lobbyDescription: `Classic Bonk. Hold X to increase your mass.`,
            tutorialTitle: `Classic Mode`,
            tutorialText: `•Use the arrow keys to move
•Hold X, SHIFT or SPACE to make yourself heavier
•Heavy becomes weaker the more you use it`,
            forceTeams: false,
            forceTeamCount: null,
            editorCanTarget: true
        };
        v2k[10][`modes`][`v`] = {
            lobbyName: `VTOL`,
            gameStartName: `VTOL`,
            lobbyDescription: `You have rockets on either side of your player.
Use the up key to engage both jets, or left/right to only engage one.`,
            tutorialTitle: `VTOL Mode`,
            tutorialText: `•Hold up key to fly
•Tap left/right gently to turn
•Stay upright
•Hit enemies jets to make them lose control`,
            forceTeams: false,
            forceTeamCount: null,
            editorCanTarget: false
        };
        v2k[10][`modes`][`sp`] = {
            lobbyName: `Grapple`,
            gameStartName: `GRAPPLE`,
            lobbyDescription: `Hold your special key (default z or y) to swing around the map. Knock enemies off their grapple by hitting them.`,
            tutorialTitle: `Grapple Mode`,
            tutorialText: `•Z key to grapple
•Grapples nearest object in any direction
•Hit enemies while they're grappling to knock them off`,
            forceTeams: false,
            forceTeamCount: null,
            editorCanTarget: true
        };
        function f4() {
            var S6k = [arguments];
                        S6k[1] = document[`getElementById`](`skineditor_colorpicker`);
            S6k[4] = document[`getElementById`](`skineditor_colorpicker_canvas`);
            S6k[5] = document[`getElementById`](`skineditor_colorpicker_canvas_crosshair`);
            S6k[9] = S6k[4][`getContext`](`2d`);
            S6k[8] = S6k[5][`getContext`](`2d`);
            S6k[2] = document[`getElementById`](`skineditor_colorpicker_brightness_slider`);
            S6k[6] = document[`getElementById`](`skineditor_colorpicker_existingcontainer`);
            function G02(k5H) {
                var w6k = [arguments];
                                w6k[2] = w6k[0][0][`target`][`getBoundingClientRect`]();
                I8yy.H2k(76);
                w6k[4] = I8yy.A2k(1021, 8, 20, 16);
                I8yy.P2k(0);
                w6k[1] = I8yy.r2k(288, 6);
                w6k[7] = w6k[0][0][v8yy[w6k[4]]] - w6k[2][v8yy[w6k[1]]];
                I8yy.P2k(1);
                w6k[3] = I8yy.A2k(7, 1017);
                I8yy.H2k(100);
                w6k[70] = I8yy.r2k(2377, 1, 3, 20, 8752);
                w6k[9] = w6k[0][0][v8yy[w6k[3]]] - w6k[2][v8yy[w6k[70]]];
                I8yy.H2k(40);
                w6k[62] = I8yy.r2k(18, 330, 156);
                w6k[6] = w6k[7] / w6k[2][v8yy[w6k[62]]];
                I8yy.P2k(21);
                w6k[81] = I8yy.A2k(26, 456, 2);
                w6k[5] = w6k[9] / w6k[2][v8yy[w6k[81]]];
                I8yy.P2k(5);
                S6k[47] = I8yy.A2k(w6k[6], 360);
                I8yy.H2k(1);
                S6k[19] = I8yy.r2k(w6k[5], 1);
                k02(true);
            }
            S6k[3] = document[`getElementById`](`skineditor_colorpicker_righttile`);
            function l02() {
                var z6k = [arguments];
                                z6k[5] = b02(S6k[47], S6k[17], S6k[19]);
                z6k[2] = S6k[36][`indexOf`](z6k[5]);
                if (z6k[2] != -1) {
                    S6k[36][`splice`](z6k[2], 1);
                }
                S6k[36][`push`](z6k[5]);
                if (S6k[27]) {
                    (1,
                    S6k[27])(z6k[5]);
                }
                Y02();
            }
            function c02(f5H, G5H, T5H) {
                var n6k = [arguments];
                                S6k[8][`clearRect`](0, 0, S6k[5][`width`], S6k[5][`height`]);
                n6k[2] = document[`getElementById`](`mapeditor_colorpicker_crosshaircache`);
                I8yy.P2k(80);
                n6k[9] = I8yy.r2k(24, 340, 3, 7);
                I8yy.P2k(32);
                n6k[3] = I8yy.A2k(13, 470, 11);
                n6k[4] = n6k[0][0] / n6k[9] * S6k[5][v8yy[n6k[3]]];
                I8yy.P2k(40);
                n6k[5] = I8yy.r2k(8, 242, 235);
                I8yy.P2k(1);
                n6k[6] = I8yy.A2k(9, 478);
                n6k[7] = S6k[5][v8yy[n6k[5]]] - n6k[0][2] * S6k[5][v8yy[n6k[6]]];
                I8yy.P2k(31);
                n6k[8] = I8yy.r2k(16, 43, 348, 8);
                I8yy.H2k(101);
                n6k[61] = I8yy.A2k(6, 2, 1, 0, 13);
                n6k[4] -= n6k[2][v8yy[n6k[8]]] / n6k[61];
                I8yy.H2k(21);
                n6k[35] = I8yy.r2k(2814, 466, 938);
                I8yy.H2k(32);
                n6k[87] = I8yy.r2k(23, 5, 20);
                n6k[7] -= n6k[2][v8yy[n6k[35]]] / n6k[87];
                n6k[4] = Math[`round`](n6k[4]);
                n6k[7] = Math[`round`](n6k[7]);
                S6k[8][`drawImage`](n6k[2], n6k[4], n6k[7]);
            }
            function m02(K5H, r5H, A5H) {
                var y6k = [arguments];
                                I8yy.P2k(56);
                y6k[9] = I8yy.A2k(8, 0, 12, 3);
                I8yy.H2k(63);
                y6k[8] = I8yy.r2k(16, 6, 6, 0, 13);
                I8yy.H2k(102);
                y6k[79] = I8yy.A2k(19, 1, 20);
                y6k[4] = (y6k[9] - Math[`abs`](y6k[8] * y6k[0][2] - y6k[79])) * y6k[0][1];
                I8yy.H2k(1);
                y6k[42] = I8yy.A2k(8, 9);
                I8yy.P2k(32);
                y6k[59] = I8yy.A2k(17, 74, 3);
                I8yy.H2k(1);
                y6k[83] = I8yy.A2k(11, 13);
                I8yy.H2k(0);
                y6k[58] = I8yy.r2k(0, 1);
                y6k[7] = y6k[4] * (y6k[42] - Math[`abs`](y6k[0][0] / y6k[59] % y6k[83] - y6k[58]));
                I8yy.P2k(103);
                y6k[5] = I8yy.A2k(y6k[0][2], 2, y6k[4]);
                y6k[6] = 0;
                y6k[3] = 0;
                y6k[1] = 0;
                if (0 <= y6k[0][0] && y6k[0][0] < 60) {
                    y6k[6] = y6k[4];
                    y6k[3] = y6k[7];
                    y6k[1] = 0;
                } else if (60 <= y6k[0][0] && y6k[0][0] < 120) {
                    y6k[6] = y6k[7];
                    y6k[3] = y6k[4];
                    y6k[1] = 0;
                } else if (120 <= y6k[0][0] && y6k[0][0] < 180) {
                    y6k[6] = 0;
                    y6k[3] = y6k[4];
                    y6k[1] = y6k[7];
                } else if (180 <= y6k[0][0] && y6k[0][0] < 240) {
                    y6k[6] = 0;
                    y6k[3] = y6k[7];
                    y6k[1] = y6k[4];
                } else if (240 <= y6k[0][0] && y6k[0][0] < 300) {
                    y6k[6] = y6k[7];
                    y6k[3] = 0;
                    y6k[1] = y6k[4];
                } else if (300 <= y6k[0][0] && y6k[0][0] < 360) {
                    y6k[6] = y6k[4];
                    y6k[3] = 0;
                    y6k[1] = y6k[7];
                }
                I8yy.H2k(104);
                y6k[6] = Math[`round`](I8yy.r2k(255, y6k[5], y6k[6]));
                I8yy.H2k(104);
                y6k[3] = Math[`round`](I8yy.A2k(255, y6k[5], y6k[3]));
                I8yy.P2k(104);
                y6k[1] = Math[`round`](I8yy.r2k(255, y6k[5], y6k[1]));
                I8yy.w9b();
                I8yy.P2k(40);
                y6k[74] = I8yy.A2k(16, 2085, 207);
                I8yy.H2k(1);
                y6k[37] = I8yy.A2k(35920, 38165);
                I8yy.H2k(12);
                y6k[64] = I8yy.r2k(14, 2293, 2);
                return v8yy[y6k[74]] + y6k[6] + v8yy[y6k[37]] + y6k[3] + `,` + y6k[1] + v8yy[y6k[64]];
            }
            S6k[69] = document[`getElementById`](`skineditor_colorpicker_lefttile`);
            S6k[79] = false;
            S6k[55] = document[`getElementById`](`skineditor_colorpicker_savebutton`);
            S6k[87] = document[`getElementById`](`skineditor_colorpicker_cancelbutton`);
            function e02(P5H, H5H, v5H, i5H) {
                var p6k = [arguments];
                                p6k[9] = 1;
                if (p6k[0][3]) {
                    p6k[9] = 4;
                }
                I8yy.P2k(1);
                p6k[1] = I8yy.r2k(8424, 8892);
                p6k[5] = S6k[4][v8yy[p6k[1]]] / p6k[9];
                I8yy.P2k(105);
                p6k[3] = I8yy.A2k(78, 12, 456, 4, 74);
                p6k[4] = S6k[4][v8yy[p6k[3]]] / p6k[9];
                S6k[9][`clearRect`](0, 0, S6k[4][`width`], S6k[4][`height`]);
                for (p6k[83] = 0; p6k[83] < p6k[4]; p6k[83]++) {
                    for (p6k[59] = 0; p6k[59] < p6k[5]; p6k[59]++) {
                        I8yy.P2k(106);
                        p6k[6] = I8yy.A2k(p6k[5], 360, p6k[59]);
                        p6k[7] = p6k[0][1];
                        I8yy.H2k(97);
                        p6k[2] = I8yy.A2k(p6k[83], p6k[4], p6k[4]);
                        if (p6k[0][3]) {
                            p6k[6] += 3;
                            ;
                        }
                        S6k[9][`fillStyle`] = m02(p6k[6], p6k[7], p6k[2]);
                        I8yy.H2k(5);
                        S6k[9][`fillRect`](I8yy.A2k(p6k[59], p6k[9]), I8yy.A2k(p6k[83], p6k[9]), p6k[9], p6k[9]);
                    }
                }
            }
            S6k[36] = [];
            S6k[42] = 1;
            S6k[55][`onclick`] = l02;
            function a02(u5H) {
                var O6k = [arguments];
                                I8yy.H2k(107);
                O6k[9] = I8yy.A2k(O6k[0][0], 16, 255);
                I8yy.P2k(107);
                O6k[7] = I8yy.r2k(O6k[0][0], 8, 255);
                I8yy.H2k(108);
                O6k[2] = I8yy.r2k(255, O6k[0][0]);
                O6k[9] /= 255;
                O6k[7] /= 255;
                O6k[2] /= 255;
                O6k[3] = Math[`min`](O6k[9], O6k[7], O6k[2]);
                O6k[4] = Math[`max`](O6k[9], O6k[7], O6k[2]);
                I8yy.H2k(1);
                O6k[1] = I8yy.A2k(O6k[3], O6k[4]);
                O6k[6] = 0;
                O6k[8] = 0;
                O6k[71] = 0;
                I8yy.w9b();
                if (O6k[1] == 0) {
                    O6k[6] = 0;
                } else if (O6k[4] == O6k[9]) {
                    I8yy.P2k(109);
                    O6k[6] = I8yy.r2k(O6k[2], 6, O6k[7], O6k[1]);
                } else if (O6k[4] == O6k[7]) {
                    I8yy.H2k(110);
                    O6k[6] = I8yy.r2k(2, O6k[9], O6k[1], O6k[2]);
                } else {
                    I8yy.H2k(110);
                    O6k[6] = I8yy.A2k(4, O6k[7], O6k[1], O6k[9]);
                }
                I8yy.P2k(5);
                O6k[6] = Math[`round`](I8yy.r2k(O6k[6], 60));
                if (O6k[6] < 0) {
                    O6k[6] += 360;
                }
                I8yy.P2k(111);
                O6k[71] = I8yy.A2k(2, O6k[4], O6k[3]);
                O6k[8] = O6k[1] == 0 ? 0 : O6k[1] / (1 - Math[`abs`](2 * O6k[71] - 1));
                return {
                    hue: O6k[6],
                    saturation: O6k[8],
                    brightness: O6k[71]
                };
            }
            S6k[87][`onclick`] = h02;
            v2k[79][`setButtonSounds`]([S6k[55]]);
            S6k[87][`onmousedown`] = v2k[79][`bbs`];
            function X02(b5H) {
                var W6k = [arguments];
                                W6k[2] = [];
                W6k[2][W6k[0][0][`bc`]] = 1;
                for (W6k[5] = 0; W6k[5] < W6k[0][0][`layers`][`length`]; W6k[5]++) {
                    W6k[4] = W6k[0][0][`layers`][W6k[5]][`color`];
                    if (W6k[2][W6k[4]]) {
                        W6k[2][W6k[4]]++;
                    } else {
                        W6k[2][W6k[4]] = 1;
                    }
                }
                for (W6k[3] in W6k[2]) {
                    W6k[3] = parseInt(W6k[3]);
                    W6k[1] = S6k[36][`indexOf`](W6k[3]);
                    if (W6k[1] != -1) {
                        W6k[1]++;
                        I8yy.P2k(5);
                        W6k[2][W6k[3]] += I8yy.r2k(W6k[1], 1000);
                        ;
                    }
                }
                W6k[8] = [];
                for (W6k[6] in W6k[2]) {
                    W6k[8][`push`]({
                        col: parseInt(W6k[6]),
                        count: W6k[2][W6k[6]]
                    });
                }
                W6k[8][`sort`]((v32,g32)=>{
                    
                                        I8yy.P2k(1);
                    var E7p = I8yy.A2k(3258, 3439);
                    I8yy.P2k(1);
                    var h7p = I8yy.r2k(3258, 3439);
                    return g32[v8yy[E7p]] - v32[v8yy[h7p]];
                }
                );
                while (S6k[6][`firstChild`]) {
                    S6k[6][`removeChild`](S6k[6][`lastChild`]);
                }
                for (W6k[99] = 0; W6k[99] < W6k[8][`length`]; W6k[99]++) {
                    W6k[9] = document[`createElement`](`div`);
                    W6k[9][`classList`][`add`](`skineditor_colorpicker_existingtile`);
                    W6k[9][`style`][`backgroundColor`] = v2k[79][`numToHex`](W6k[8][W6k[99]][`col`]);
                    W6k[9][`name`] = W6k[8][W6k[99]][`col`];
                    S6k[6][`appendChild`](W6k[9]);
                    W6k[9][`onmousedown`] = function() {
                        var Z6k = [arguments];
                                                Z6k[7] = a02(this[`name`]);
                        S6k[47] = Z6k[7][`hue`];
                        S6k[19] = Z6k[7][`brightness`];
                        S6k[17] = Z6k[7][`saturation`];
                        k02(false);
                    }
                    ;
                }
            }
            S6k[87][`onmouseenter`] = v2k[79][`bhs`];
            S6k[47] = 0;
            S6k[19] = 0;
            S6k[17] = 0;
            S6k[14] = null;
            S6k[27] = null;
            S6k[76] = 0;
            S6k[2][`onchange`] = function() {
                var x6k = [arguments];
                                I8yy.H2k(1);
                x6k[9] = I8yy.r2k(20, 764);
                I8yy.g9b();
                S6k[17] = this[v8yy[x6k[9]]] * S6k[42];
                k02(false);
            }
            ;
            function b02(d5H, e5H, C5H) {
                I8yy.g9b();
                var M6k = [arguments];
                                I8yy.P2k(9);
                M6k[9] = I8yy.r2k(299, 15, 20);
                I8yy.H2k(112);
                M6k[91] = I8yy.A2k(4, 18, 74, 0);
                I8yy.P2k(32);
                M6k[82] = I8yy.A2k(18, 0, 19);
                M6k[6] = (M6k[9] - Math[`abs`](M6k[91] * M6k[0][2] - M6k[82])) * M6k[0][1];
                I8yy.P2k(80);
                M6k[72] = I8yy.r2k(0, 3, 9, 11);
                I8yy.P2k(113);
                M6k[37] = I8yy.A2k(12, 51, 12, 9);
                I8yy.H2k(114);
                M6k[21] = I8yy.r2k(3, 19, 14, 2);
                I8yy.H2k(112);
                M6k[51] = I8yy.r2k(8, 12, 89, 1);
                M6k[2] = M6k[6] * (M6k[72] - Math[`abs`](M6k[0][0] / M6k[37] % M6k[21] - M6k[51]));
                I8yy.P2k(103);
                M6k[5] = I8yy.A2k(M6k[0][2], 2, M6k[6]);
                M6k[7] = 0;
                M6k[3] = 0;
                M6k[1] = 0;
                if (0 <= M6k[0][0] && M6k[0][0] < 60) {
                    M6k[7] = M6k[6];
                    M6k[3] = M6k[2];
                    M6k[1] = 0;
                } else if (60 <= M6k[0][0] && M6k[0][0] < 120) {
                    M6k[7] = M6k[2];
                    M6k[3] = M6k[6];
                    M6k[1] = 0;
                } else if (120 <= M6k[0][0] && M6k[0][0] < 180) {
                    M6k[7] = 0;
                    M6k[3] = M6k[6];
                    M6k[1] = M6k[2];
                } else if (180 <= M6k[0][0] && M6k[0][0] < 240) {
                    M6k[7] = 0;
                    M6k[3] = M6k[2];
                    M6k[1] = M6k[6];
                } else if (240 <= M6k[0][0] && M6k[0][0] < 300) {
                    M6k[7] = M6k[2];
                    M6k[3] = 0;
                    M6k[1] = M6k[6];
                } else if (300 <= M6k[0][0] && M6k[0][0] < 360) {
                    M6k[7] = M6k[6];
                    M6k[3] = 0;
                    M6k[1] = M6k[2];
                }
                I8yy.H2k(104);
                M6k[7] = Math[`round`](I8yy.A2k(255, M6k[5], M6k[7]));
                I8yy.H2k(104);
                M6k[3] = Math[`round`](I8yy.A2k(255, M6k[5], M6k[3]));
                I8yy.H2k(104);
                M6k[1] = Math[`round`](I8yy.A2k(255, M6k[5], M6k[1]));
                I8yy.P2k(115);
                M6k[8] = I8yy.A2k(256, 65536, M6k[1], M6k[7], M6k[3]);
                return M6k[8];
            }
            function k02(l5H) {
                var s6k = [arguments];
                                s6k[7] = true;
                c02(S6k[47], S6k[17], S6k[19]);
                if (s6k[0][0] == false) {
                    e02(S6k[47], S6k[17], S6k[19], s6k[7]);
                }
                S6k[69][`style`][`backgroundColor`] = m02(S6k[47], S6k[17], S6k[19]);
                I8yy.H2k(116);
                S6k[2][`value`] = I8yy.A2k(S6k[17], S6k[42], 1);
                (1,
                S6k[14])(b02(S6k[47], S6k[17], S6k[19]));
            }
            function Y02() {
                var c6k = [arguments];
                                S6k[1][`style`][`display`] = `none`;
            }
            S6k[2][`oninput`] = function() {
                I8yy.g9b();
                var D6k = [arguments];
                                I8yy.H2k(22);
                D6k[2] = I8yy.A2k(738, 126, 8, 748);
                S6k[17] = this[v8yy[D6k[2]]] * S6k[42];
                k02(false);
            }
            ;
            S6k[4][`onmousedown`] = function(o5H) {
                var Y6k = [arguments];
                                S6k[79] = true;
                G02(Y6k[0][0]);
                window[`onmouseup`] = function() {
                    I8yy.g9b();
                    var N6k = [arguments];
                                        S6k[79] = false;
                    window[`onmouseup`] = null;
                    k02(false);
                }
                ;
            }
            ;
            function h02() {
                (1,
                S6k[14])(S6k[76]);
                Y02();
            }
            S6k[4][`onmousemove`] = function(I5H) {
                var V6k = [arguments];
                if (S6k[79] == false) {
                    return;
                }
                G02(V6k[0][0]);
            }
            ;
            this[`showColorPicker`] = function(F5H, L5H, J5H, h5H) {
                var g6k = [arguments];
                                S6k[3][`style`][`backgroundColor`] = v2k[79][`numToHex`](g6k[0][0]);
                g6k[3] = a02(g6k[0][0]);
                S6k[47] = g6k[3][`hue`];
                S6k[19] = g6k[3][`brightness`];
                S6k[17] = g6k[3][`saturation`];
                S6k[14] = g6k[0][2];
                S6k[27] = g6k[0][3];
                S6k[76] = g6k[0][0];
                k02(false);
                X02(g6k[0][1]);
                S6k[1][`style`][`display`] = `block`;
            }
            ;
            this[`wipeColorHistory`] = function() {
                I8yy.g9b();
                S6k[36] = [];
            }
            ;
            this[`closeColorPicker`] = Y02;
        }
        v2k[10][`modes`][`ar`] = {
            lobbyName: `Arrows`,
            gameStartName: `ARROWS`,
            lobbyDescription: `Hold your special key (default z or y) to start drawing an arrow, use directions to aim. Release to fire.`,
            tutorialTitle: `Arrows Mode`,
            tutorialText: `•Hold Z to draw an arrow
•Then use left/right to aim
•Hold X to make yourself heavier`,
            forceTeams: false,
            forceTeamCount: null,
            editorCanTarget: true
        };
        v2k[10][`modes`][`ard`] = {
            lobbyName: `Death Arrows`,
            gameStartName: `DEATH ARROWS`,
            lobbyDescription: `Arrows mode, but arrows kill enemy players on impact.`,
            tutorialTitle: `Death Arrows Mode`,
            tutorialText: `•Hold Z to draw an arrow
•Then use left/right to aim
•Arrows will kill enemies instantly
•Hold X to make yourself heavier`,
            forceTeams: false,
            forceTeamCount: null,
            editorCanTarget: true
        };
        v2k[10][`modes`][`bs`] = {
            lobbyName: `Simple`,
            gameStartName: `SIMPLE`,
            lobbyDescription: `Classic mode, but with no heavy.`,
            tutorialTitle: `Simple Mode`,
            tutorialText: `•Use the arrow keys to move
•Push opponents off screen to win
•Last player alive wins round
•Press enter to chat`,
            forceTeams: false,
            forceTeamCount: null,
            editorCanTarget: false
        };
        v2k[10][`modes`][`f`] = {
            lobbyName: `Football`,
            gameStartName: `FOOTBALL`,
            lobbyDescription: `Football mode, use X to kick the ball into your opposing team's goal`,
            tutorialTitle: `Football Mode`,
            tutorialText: `•Use the arrow keys to move
•Press X to kick the ball`,
            forceTeams: true,
            forceTeamCount: 2,
            editorCanTarget: false
        };
        v2k[99] = class U12 {
            constructor() {
                var U6k = [arguments];
                                U12[`mapStrings`][`push`](`1,A E S T H E T I C   WAVES,Samm9,562748,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`);
                U12[`mapStrings`][`push`](`1,Altum,Fantao,365,eNrjYmdPzy1gYGZgdcwpKc1lYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUMrAzogBFdwCG7AUIroEmwMZz/MI/B/uVMEJjlwAK18QEDVsDIQADAFTj0O0BoDqgAu09qWWqOgiEXK8K9Dp443ZvCgMu9Zzc30NG9RijujcTp3kic7rVua6Oje41R3Jt0AJd7PXG694hvBB3da4Li3kyc4auD070RG4uJdi/cWlMGTi52ztzigjyYxIE4XD5gZEhhYA0uSCzP4+I84ElANdDlUXDVDkSoDkCYHUnYJW4Is4lQbYNQDU0J+FxihHAJEao1EKozCbtEDuESIlSLQFVzMjICEQDitnxW`);
                U12[`mapStrings`][`push`](`1,Antarctica,Tiysz,499943,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`);
                U12[`mapStrings`][`push`](`1,Apocalypse,MuadDib,359162,eNrVWN9rFEccn41JLndWk5oU8rgFHwTxB3jV9OV20l6QIAa1pxDThrskd3FJbncvdxGu/ug22lpF/NEipYKgT+qL+NqnG/EfKPS9xMfQUoRCofRB93a+M2Zmd3b3SBCde5i93c989/vj8/3OdzaTSs1XHdSDMqOOPVtabDr1MkodXS7N5c0ZnEX+wDuRMIy/K/4wXsL/y1+/OPxk6Bz7j3cB8INMqsepoxSSR598A98cEWY+utAu4zjSOK7i0nkc/k9KgnrRviNFpOEZQp9bgMvBDPfXyad4G9Pn5n06TyDhPTKeLIJ8NsfoQybF51yfPJ1b/338fyG/Z9iLhIg3Yf4c5pNuuD4ML+nNQiLLN9Z+aY+7xu8H/GGsItXI9KAUbtJrcl6nF90E7uAbMDfDueIp+HD0iLeySB1Mvt0vOkwRcCafMGLE4c/uFwk1LupjrIEDAN9iXH1+xfeoygFagKlDAYgBzmWyZNIEvOf7NPCqfnZBTJGsAZ9qQFogD5FJFcTvHjvt4QFHZkioj9bhfR/hAuALIlmV+BIlJ5kH+dloPJmQ9MlH68/sJCxZR91oe7OSP7NiUgTwp0B/K6E/p0H+dCyexmsK5H8J9u6Nkc/0OUGEuqqUz/wzJ1JViQe/kzL4czgGPyfJ74vGd1hkOP2vwsW2QO7tVBaZNqEQvgjPrzjJDLoMzy8U6awr8e0ipuGrx+jz6YQO/t4Vq/5wjPw7FECyyfDcL9/gZPrwXQ5wKEafFSImUEzA8U0sFqQ4+QzfTCj/Ni3yBPSKlf8z5QH5bjUO3xFhg5tCENJaEzcF1eBsD98UulgR5jHLKTsTWlQdsHVB6pRy4Z1Mh0lKPpVupolzi75gSRersqnoBKAK4porVrVJBf60K7Z+sNHjgzCneWvj43lMFlkrB+u+wKHyOb7EHOYKdqzrHHw8T7LjgDsUoz+QmuSkAI5JeNCfGGz3d0V8Nlw+rhZFgoCZ+Fi4va1fNxbwLeQsKMaqSS7aAbh5Xwwgw0+j6IDcWY1uUySD2PuTZ20upKdc3+7y0c0rGrMZiy1RIOgM/9MPiWwgsNXzrM2KhaX18tmJkT3e2awHsrzAzjfFULzx519/fPXgo8e83d2ojyLa3cCSZtQR4g3deRVnFUtd2aiPGP5HksynncVMI5cGxDOdHIN/rn8yem3qX35GW3kK+ku8ZpUdQcyg0r6DMejqMAYax99+9HZyc/Nt7iW13zrjHcPVpNyccqPx0N3E8pThK7G5T3nnPA3v4uA40VoVeUdqoEeViPb2SfIpHr2TPO0sBm+6oOv6e8BTNJhJpat1x+JN4RJR7cmv7qGteVu37IZeLS2UM+lkawZmbaep2xW9cabsLXT2Jl2IkgL7P1tu6E17WZ8tWfpyPbFmg2ZDr9hLumnVHXOp1DBta/OVGzjq+Uqvm/OWWTE9BRtJF6Zmz5Ss+fLma9Rb8AQv1JPCt+n+gC+zmTRm31gmVUTV0FBbG76bqYAepQfbQJ4yE2rgDh9YL0YDvd+H/qvhmx+bwyQO+BJN8etumMR+X2LNjQVu94GNGIma/3khrWnp9uVrssBt5A==`);
                U12[`mapStrings`][`push`](`1,The Architect,TamHill,423802,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`);
                U12[`mapStrings`][`push`](`1,At the mine,Flerax,332372,eNrtmc1rE0EUwGfTJjHpwUuRggcj9lAKFmkqNBTcicZ+iaK1kJaiJrVJk7b5MElNtVBDaU3aCgoeRE/FkycpHkTx0P0HlILgOT1JFIpQED8u7sfMZmc/ujtU9pRHyXR3f3nz5s17M282Xrd7OpUFTtASLPgKiZgvlUzHgKt/LpaLLsAeIApsB4Swe3FR2B/oeuX+7sDr1kV8DTsQeMzrdmbzwA3UwqhvwAeQaGVxgI7jRwHD1p4L8oL97BeFrQID8ZyP3p7NZebTU14ncHOJiHiXW0W2dcs9bowRg8ODlcUFent4mmu1yDtAr5/n4RB6vi6ZCEPoGunZfhtuG/4aKmv4jR1dniV5ps6PkXyXrj0MnOZIftzQ/sJMgr9/E+t/JbXn9IOAn8O9Wo3Xr+YDhrygX8v3GPLCh5b3U+rH86WNwcEgVPoH8ddK+vodIg9gFtL5R82b+UfNG/unr69Phzfzz2HH226oX/Kn2v+thvzThys69pvxd89Yzl8xvwpXyfwKlg7KR0bmcf6qeFadv7L+MZLvNMnH9YTURg387wKT42HF+lDZktpB1fqw/+hscH3iJ69/eaBTsGeT5PtV41Xz2J4K+l4EzcdASW2/wDNwGOkrSysqvFQi/M/+anZ9O9F0kd9TJB77x4j/86m2v/j9i8xje8rSQGHcxD8T6Pka8ssQGT8K/wg8H2/VA/ltNT8KyPlqM4nPKUp+tkTH5zg6/hYln9mk47H/8HyZ8Ti+rPLqeDC1n1I/zher/A30fG3BGp8t0fFhyvHe2aHj8f5f6bWov0TFW63UGGAqMgIfozmNScqCXSuiUZrqznOZL199F6K5glD8aRQ2yQrTaNKXDIuh+OAphQE4SZfIxVfBV8qrCn4GLTJFTr/4cICPH97xi817q2Vt80g0OacclGxyC4dWBC4JyAojpFkxn70cBQyXl3YGbo4z29FJPgat8SgiqXmr9uDxYj4AjJwsVjwyPwPp+GlK/TGL+vMRcr5CJM/+Pvl3NHS6ra7fR8VbPyu5wsn0VKYohJW8rTTCqhFWhwyrI1JY+brFwFpuBFYjsP5vYPl1d/d6KZomX4nIR4F6x1uRAE3HQIzkIZs75GzvcNzuDic5mztM2j3CDLS5w5zdLp2v2tzhPbsT3+60gHanBbQ7LaDdUQrtzkPtCQ7/w+HDZ9Fn9OZVfBMm8/iNhjH/JhpQ8lUz/smVLgWfihA8/hlHwYvFjHUHNI9kMnHAeN2eVD6bNj3mMwxwAuf1bLSY9jAM/wfAP2eJUn8=`);
                U12[`mapStrings`][`push`](`1,Bad Platform,RoctorDush,339433,eNrjYmdPzy1gYGXgcUpMUQjISSxJyy/KZeAKyk8uyS9yKS3OcDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQzsDOgAQ8Sh3wKFhgMmBl5pDQZGh1Q09SkJWJ3GwMig7xzHwHiARPUY7klF1YfkHrB6TPcw4DJfQMkQm3vwq8ftHgZ094DV27+cCQKz7C8bg4H9AwYcgAsW0wrGXKxYooYPw2pSgw6310Q0rbCoF0GlkdRbt7UhuAf00MxnwAgKFPUORKp3CGtAdU9gA4p+dPUHSFSPM3ywq2d0SFJAzW0fcIQPE8P/uUEg9dDwgWpzkIHSAlBaSO3wntvP1wFz+v85SOodcKi3//3mXuxC0ZUg9bOB6g+Q4B6IegLuEe4xdeyK/oYwn4B7voVLeD13aYepJzapMzIQARC5wRCUGxx6UP3KwHEAKnJABs11OFITTL0Dseq7X6CmDgZUfZjmR5CoHtVHDoZQWgdrbmPEUK+C0/2Q2OvegapeAUfqgMV2Twde9Q6cir9DXHQlYOrh6qB1EQWxzQgzG16Y2kFox+nXS0BlHEbsI1KHEQM7FztnbnFBHrw4isTtECYG1uCCxPI8Lk6YFbhVMzIwM/CAVStoJOcXVGoCNfkR1sTCIIysCaEXWjrh08vKIIVFL9yIA4TcDPQiM9yHB/wIq2ZB9+EBQq5kBCUYbD7kZGTkBMkCADX93/M=`);
                U12[`mapStrings`][`push`](`1,Balance,GayfishDeluxe,358129,eNrjYmdPzy1gYGVgd0rMScxLTmXgdU+sTMssznBJzSmtSHUwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUM7AzogA9dwKHsAoTOd0CVYGIwMjJiYHTwhKqLhNJJByC0CJpBbAwaGhoMjHBzEyDmOVgyoKi3/6n4O8RFVwJoPli9QzxUXQpUXeoDvObD1eMwfz+6+ekJEPn0A8Sp92cgST3MeQdg7opkICp8DiQnEOcetwaI+nQFiLqwBvzhEwI1P+sBUeYfqESL30z87j9QK4AaX4TUFzeQFF/2L2eCwCz7y8ZgYP+AAQfgCshJLEnLL8pVMOYC5qQD0AR8wBOWB+BB7QS10hHqFBU0kxgZsn0VkKIGlvuMGFDUw5MuK8P/HX5I6p2xq9+PQz08i3ii5lok85OSkpDMV0EtDRwEMIK6t7eXlKAThAediYJGcn5BpSYoBB1GQ5DoEJTACEGkgMRQzYzh4KIDWAt4qEMYDhQVoKpXQqXhgJVh69atIPPwq3fgRAkYhv2wCuQxfo8yMhABEBnRkIDvIwkmIxQ7iVAP8j2izoGFaiaqPqQyBhxa5JQxRgwcXOycucUFebAwxgUYgZCVgTW4ILE8j4sT5gf8qnnAqmFJiBNWyeLXJIysCaE3kxgLpbDohRtxgJAPGRkw3XwgkhhN2N18gJB/wXrxuzmTGOsVcRsBpTgZGTlBagFOVTJF`);
                U12[`mapStrings`][`push`](`1,The Ball-cher Knife,Nopples,245742,eNrjYmdPzy1gYGEQDslIVXBKzMnRTc5ILVLwzstMS2Vg98svKMhJLXYwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVMXOysBcUMbAzogA/GcEh1gNClDyB0CJpKJoY5rUlwnkNaA1Q5VFuoA7rylROyEMrTD0DokgUQOqwBXfnOeSVYlDPgMv3g0kpM5cUJuNx+fmMTpvIiKB10AF35vX3dQMsVINKRUGV2UO0cEHr/7Tf3YheKrgSG6pWrVxgOEFBuj1B+8/ZthGPCGlDDnQPN7WjKY9Dcjl053DRYNIU7oDrmp+LvEBddCZhymGmZsPBuwKf8ALHKmSDKSXOM/cuZIDDL/rIxGNg/YMABuAJyEkvS8otyFQy5WBnYHKAp4kAkVJ79QCLExgNuUJuhMrC4QQo1c3NzBrhyGwZU5XoY6UlDQ4PhQCWqqEO6Akpq3T/xvtuioLmWQOVz58/HVA4LDmhqRVK+YdMmoHJoVhFBUw4tA+yvl/Js5cmLhsVJwwSI212gyi2xFxkMjAwGTmEMB+qg0o5QU6Mc8JkOixNYQYQrThgZCAJGWHTDQxeaihz7/k0C89GjERHNRgxsXOycucUFefAU64fDFqBLWBlYgwsSy/O4OB0KHhChmgesWkEjOb+gUhOoKY+BCE3CyJrgeg8Q0guErAxSWPQijCDkZrARiriNQJhEKKzAJmkQNAlKcTIyAhEDADznC64=`);
                U12[`mapStrings`][`push`](`1,Balloon Fight,MuadDib,288041,eNrjYmdPzy1gYGXgdUrMycnPz1Nwy0zPKGFg9y1NTHHJTHIwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVsXOysBcUM7AcKHqCawMaABhw8sVvFwMiw3sUPSZ1bA4S2g/JdoE74qfg7xEVXAugZVPXxDhDaBM1pCJf8/7GAgeEATD7GAcUdDgJQ85+FS3g9d2mHqXcgoH4/mnoYOFCP5h5M/0ZsLAbqhwXtypkgMMv+AQNWwMhABBDwTcxOVSjOTM/LTMtMTswr4WIFxklYw2icDFycsCdnJOalp+qBosJhNCqoFBX7J953WxQ015KkqGALAUZFdjE4JkYLqoHMFDwKIACtfUDxge4aBmZ4eMHCtawBu/uYIO47UArRCQ83E9R4RFfvQKJ6mP8dIqHhQL7/GWFpA2aWgwiEdpx+vSSBATNuGBiQwwjTKodMtDDyb0D3AzgN7j8JiTuYeqL94CABpfst4GJqnnnFBZlFqSkKSZUK7qWpxSUKRgYGBgq5iQUKCrB2hmcYAwsXO2ducUEerB6CeRrDUkZGBhEGbpd8hbz8EqAp2alcnA5E6BFmEEjOL6hUyE9TKMlIBVmvx8UJa4jg0yjEIOBUWqJQmV+qAKwrFUqLUxWANhKhUZBBOLNEIS2/SCETHASJJZn5eXqcjIxAxMAAAKOxKTM=`);
                U12[`mapStrings`][`push`](`1,Balls 2 The Wall,Stashington,16171,eNrjYmdPzy1gYGQQcErMySlWMFIIyUhVCAeyGbiDSxKLMzLz0kvy8xxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEzFztrQTEDCwM6YEUXcCgJwGoVAxNDxMZiBod8BzDvgB1UedABCC0C4e9/qfg7xEVXAqr8AAHl9qjKHQoNIMphyjwZ8Ck/QEA5mmPsX84EgVn2l43BwP4BA1bAyEAAYCiAWczAFZCTWJKWX5SrYMjFigjuA24NuHTaYY9ZiEpGqjkZ2WlGyE6DO50Zl6dwpIQDllC/QaUdLFGVo0ctAeVkxhWyv4wZOLjYOXOLC/Ickg6ghjtGcDECUz5rcEFieR4Xp0MkAxGqecCqFTSS8wsqNYGaUh+QoSnegQhNwsia4HoPENLLCMrNUlj0Iowg5GawEYq4jUCYRCiAwSZpEDQJYSChOAAbqE+sgVAKABuvzyY=`);
                U12[`mapStrings`][`push`](`1,battle for the swing,JonesReal,7205,eNrjYmdPzy1gYGQQSUosKclJVUjLL1IoyUhVKC7PzEtn4PTKz0stDkpNzHEwYQADGA0D9u/SwMD+A5TfUvXQfZ1INYzvoAFVyMzFzlpQzMDCgA5YDthAlQpAaTsoLQI18lu4hNdzl3YGJoazmxsYHAgo34+m3BMifKD0AYoyuOk/FX+HuOhKQJUfIKAcDiDK4cFw2RgM7B8wYAWMDAQAXMGBegeIhZFQAcGAnMQSYLTkKpgpaCTnF1RqcrEigtGhE5cNDjAfqGC4PGJjMYP9y5kgMIuQyxkYuBAOQLE56QAhmyMxbK7cOwtus0O/BSTsiA0zeBqEakRxGgMbFztnbnFBHoat6MYyMjKwMrAGFySW53FxOmQSo5oHrBoW/JwHiNIkjKwJoTeSDAsdig6QbyFReqWw6IVSAOYIjJA=`);
                U12[`mapStrings`][`push`](`1,Battlegrounds 2,HeyListen,68044,eNrtVD1v00AYfgMKxi5JitSBgeFAHVj4SOnQibxEFV9qpRAiRAtCWNgJlvyl2FABAxmQQAgJ1E4g/gALEgsS20mdmfgDMLIgdhbO9t0RJ3HtVKITry055zyPn+eee+80Rek5PuyHWlMPQ9vs9b37rhGQBVAvmQ9XrCA0XVyEuHAeUtX42Y2r8YuPnz76fvHD3GMxxhMceFBTyn4AZUGkVwfJDwXbNHlzlFNm+fNUWgr2wdbma6DTwXGZ65FCcGmvGJzu8usizeuDFG0I/mnxvBzhXCF448ebqN42PvPnN5hYJcgpCaB9mv7ncNsL9dBye6Rl62HX6ztaGcroYeLL5jEckM758uPtzFze3To9nrqYaH0MvvllFXBtBC7iHIWX4cX2FaA5cFSP/e4snzzC4XiTix/PhT94j0Bz4ENmNhhcLtLXs3FlLRJAtW317oWpoOn/oP9B0JUVs5vOWab6ailjy+AdnHgesuBufAwkEbefxaZ3EG96Yeg5pMnO3LtmSlxsvnHxc5MP4wRZKiqeew4AzKxahmGbpKnbdtyAHa78kuyRN/oEM7yp8bIJZ7jnzrJLS3ausCYNbD3nPUL1Qdra/Ei/jXTTdPDinT8jmp7Uz4CqKaoT+C5a/OtrGQGwBAyoJHO85usbLqlrqujWKVgLmkrztNhlwKF4paUUzZMaI0VKl3k/Wdmkdah2PJ/8JWqqbEMruxsuQCWisa1CgoSFeWKMtg61iDUUCOOJ832HEFtQSziRHufRPB67WlCNJ+YImloqsfsPEHkiNQ==`);
                U12[`mapStrings`][`push`](`1,BoAt,FreeHugsDotOrg,9177,eNrjYmdPzy1gYGRgccp3LGHgcytKTfUoTS92yS/xL0p3MGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFjFzsrAXFDCwwjQ5JByAMFgY04JDvAKFV0CSYGM5ubmA4AJU+YAlV7smAotz+peLvEBddCahyBwLKHUT/7n65e3kpVDkMHMiESkeimf7gYJCFbnEqAyvD+Q/zGODevmwMBvYPGLACRgYCAK7gACxcYIArICexJC2/KFfBEBSInLnFBXnwoLLEYRojI9CBrMEFieV5AFB0QWM=`);
                U12[`mapStrings`][`push`](`1,Boat Fight,MuadDib,324929,eNrjYmdPzy1gYGXgdspPLFFwy0zPKFFgYPctTUxxyUxyMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCF3FzsrAXFDOwwjQ6H2xvADA4GNODgid0qBiYGDftABkYS1Gu7RpGkXt87gST1yx29SVJ/xDeCJPW//i8mST0QMJKi/v+P7wyM9i9ngsAs+8vGYGD/gAEX4GJlYD+QBzUuHRJ/CAceCIOIOIjgsJAR7CGG/R9Q5XFZyMhAEDDa/1T8HeKiK+EQCTWz3wJFAYZrIX4IGVJ+CMHmB4ch5QcH7H4YUmnJAXtagomGQQVZHVzQMqAdqhv3PwuX8Hru0g4sa8F+OEBAvQPf9oNpf/9ZwdTD1cFoqH5YmYtWgCDUG0Jpxwbi1GuhqoeX5WgFFDwOOCiOA/T8ORqmVAtTh9EwpX6YjuZ96uf93g0QExOgfuRyKDoAEYHRlTjrBDABUwcLWwc/BhR9+6HlPDBMIepnMpBmPlQ9sebD1B3QQ61XcDTgGBzmBZCmHubunhP41TNCGqxw/xKrHiP8DYgzn0j18AboB8rrcHj6nQoxxCEQkn4d3R4ngMMUPXVB8nHJAohoFtRqoQNQEbh5PQoQOvoA1k7AARloHENpBxmcaQjcCTgAFT8gQVA9xHw1NPNh7SIFaJrb77Z7jsBkFZh74P0vmPlK+N0DL08Iq0fp9MDKBTjNgb2TdEAA1b0OAgTco4BqHtx9uNSLoJaD6Pr2fzgYZKFbnApzD9x+BiLNR1OHbs/+bdByHa1TCI9XNH/vP3Xu5efq19eAZQTEfAE09Upo7mK1VH5wSGoLXD1a/MP5DBjugahXQ1UPdz/MP7ff3ItdKLoSw/0qqO6G6dt/ARqebGjuESAuPEnodIKGDjhziwvy4K3C4APYMz+w7yvCwO2Sr5CXX6KQm5idysXpQIQeYQaB5PyCSoX8NIWSjFSgxgI9Lk54sx6PRiFg6cHpQIRCQQZ+p9IShcr8UoXkxDyF0mKgy+A9naIDuDz+fy6DcGaJQlp+kUJmXnFBZlFiSWZ+nh6xehmIVSjgCwwrheLM9LzMtEygA0uI1cienJGYl55KfRexhQANzi4mVjmvAhhAx6o4GRk5QcMgAPDX9x0=`);
                U12[`mapStrings`][`push`](`1,Bullet Train,TamHill,414747,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`);
                U12[`mapStrings`][`push`](`1,CDball,MuadDib,256870,eNq1lkFrE0EYhifWZslaarEVepyDoBd7KAoqSKY1WKvkYFUUVHCS7CZjk5npzqRQBclBKJT+AT0pnnrxB3jpiv/BgwdRD4og0lMRvLibzFZ23HQmkr7s5WOeb3jn+97Duo5Tb3FwGOQvlSq42QROuY1rJVJBZ0BX6ARIqfjT76q4o+qnjz4vvJ56nNTolAJHXGeUC5AHusbQSqeHXlQtiyBV7+kQ2Jq/BhDnveM7Gl5WDt7fnr76rbSe4A/D3rHfyca/pnGsMIqy8Z23S+dOCy/Bryh8pQ++m7o9NOG/f3y8//L4VoIbzCCQMhManopGNs/ObdzdTXDDIFE+7X3ANSk80R6uBQjkUrdb4tvfn8V6jt6td/uKn9QAf314cv7Nl1d/aYP2BdzRzLxW1JhnNauz2YPALxSmbWWuk5nXe2H2VhJcy+uSwh+gbFzL6wV1XOljRsurCdfyajCj59XwVD2vhkHqeR1wTQq3zetgeL+8bh98Xv/pQNc7/2M1S8dcp9ASnCZ1eAv1cZ0DU+BIiUHKJGzhZc8t2PVMVBlfg8yHsuFFjXzGthHYgkfn2xKusTasYgrbwtrZJJHQZwEkVHASYEkYHb65iXI0KyhInRKfRAalbaNTbWBa94bvKH8zunhZ2OJjMJb6iRi6mfEb3KsS3IzSMZCpeG+X8SoLiGTWq8ACLsIaqdGTEjbwqnVQxiWDPGAtJr04xdZtkbs6odHjfBII+8XXvDguM4VcLvrAHwjlO14=`);
                U12[`mapStrings`][`push`](`1,Classic,Crabiki,2991,eNrjYmdPzy1gYGZgd85JLC7OTAYyihKTMrMzHUwYwMBBjwEF2L9LAwP7D1B+S9VD93Ui1TC+gwZUITsXO2tBMQMLAzpgRBdwKDoAoVXQJFgYDthaMti/nAkCs+wvG4OB/QMGrICRgQDArYArICexJC2/KFfBkIuVgQXuIE+cTnZswO5ksEpGYp2MbLMR2OZMqPmROG2GxQulNgsibFbQSM4vqNQEOyAOanzSAVwOUKGSA+QxHIBKgZxzgH7OUSPgHGRX0S+WJHC5CuwO+qVTzNTCwMHFzplbXJAHC40DnjiyHSMoJ7MGFySW53FxOhBSDYQsDDxg1TCvcjqkENbEzCCMrAmhN46wXiYGKSx6EUbkETaClUERtxFwkw7EEQ4rJnTfH0ghrIkZQ1MeYU2sqJo4GRmBCADleNIM`);
                U12[`mapStrings`][`push`](`1,Climb,Fantao,31,eNrjYmdPzy1gYGZgdc7JzE1iYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVcXOysBcUMrDCNDlkOEAYjAxpwKDoAof3QJFgYug97Mdi/nAkCsxz6LSA2PmDACjDNhXkBqpGBgdUtJz+/iIuVgRVm14HSB4R0q6BJMFHoKiV0V3EF5CSWpOUX5SoYgZx2IK0B4rQahUHkNGNwqGVCQ63RYBA5zQTkNJjCA60Og8hpFigR2jVhEDnNEuS0/dBcewCmANMIT3o5jRvuNEMDcGLLh8TkgU6GAQ82JLdBMkLZBUJmQN3k0KOA7raIjcVwt9lfNgYDXG5DsdoQnJoGxGojBk4uds7c4oI8eIKIxBGaQPdwMbAHFySW5ykYcHHC1OFUD4ScMPWGQPVJBwiazwFTb8TFCfc1HvPZYeqNuTgPEOF+Nph6E6B6ItzPClNvClRPhPtZYOrNgP7NJGw+M0y9OdB8ItQzwdRbcDIyAhEAjbHfyQ==`);
                U12[`mapStrings`][`push`](`1,Constellations,iRedi,495393,eNrFW31sU9cVf84WEjIK6UgmVNjmjYpRNij5oknT4UeTUkiBhhAIKYXGSQyYhiRznG4qmuSplapWVasOTdq6bmJIW7Vqq4q2StOo5Nsv0P6ApeEjDZ8ehUAaoEkIgcRN3u61z7n2u3733fgJiccfju3fO+fcc8/5nXPuMzlZWTt2t2uZ2syKttaOoK+lxRv007+0TH+Nr9mvF2uxS79fM12e69tjl2cQ3r/4/P8efzdvD77XFwJwWU5WZnuHlqWJVzYJuGN/kI16/JYnQnFRKHJ4wccfnL78rpahTRqjFNemm0zRK+EVTPRc2ev6fsFvl1C8cYvh18flkV0kjisU7pt96Y39749l07UbI8P0fUscR1bD9/VmvGfww5rSxR0+hh8fo5+37ovjV4bM+BWwjoGr57b+Kf+vDD8xQT8PgB3LBfmgj7iCOeMv/v0Vho9G6efb4PNNIZN/9Gywpwvsoeu9wez/Gay3Afy0TjPhw1+8WrLilS2jDD8wQO/v/x273vQcK4pdnogmufJXNDf7WVR4W9wbgoHOpmBnwNeRk2mxq/niB/pzXfFX2D1+ZWiz8go0F/cK7u72kGXAaS7tO3NXaS6+O4hrJDJ83n2PUjzKR5yN/O9S+ehl4gc9fk0qf24FxaM9uKvNUvzM2Q8l7OHRvENq//R7fkzxtRAFaP9qqfzCe0soHuwl9UKUpeJn5T1s4Z/1Uv/Myi9P8r/4moqfkftgwj/cnwr5GMUcZ2N/DI9ZC9nCo95qvaVJ61Xbn5uvJ9bL/bncHo/xRaYoXxf9XyvFf282swfjRmAnGV7vjJjzSxU/7RGzPcvt8VNnkcwN7d4mH2MNHRnthffiX01DjiIvN8S/WQJac+E1f+Jg/8G3Oyk39vU20VX9BPGlKvypiI/iFyH+F/Hvy6T4yP71FD8H8Uvj3/9Q6oXP/1xH8dz++I16gWa6L/zl0f4bewZOUvlf1FTSuzTEm+VayN+9uSrB1frr8fXKvOxKod8lKRC0Rf/4pZCVjJTdyaxo2+0LWtJ9Jr/peQibjn2yhczLq0jYl8BL6aD8Eb8VvlqGf7S9xQrvluF7d6yywAcGZfihD6rSCfdvPeYNBHe6N+z0NvuSfYeatLwUxwekpaCq7kDiLacAsQE6WTen6nLlS9o0bfOBjqQg26WbUxlewwIe5ZEWtxkP8sMRaDgQ3xRPVoIltdYs39MnyAdKIWKpQfuj0DAhHkvZM0JDg/acluC3hMxUhw3cgIAXKRcbuTLJerFUC40bly/isRHz6WY9q4WGDPEor5FYUnxYsJ/sFFog0Z5/A+kgHnGbBP/APojxQHZp5sYT96vSer9464F6KoV4E+KB+CLm0i20Up6xH0RrKxfPEe3n8SbiRf8AWfL8kpFsRjzJ9DTxnJTfbk+PlNMBZMZoxEQgQBM0YKZqsEswGJjfscHsmhHnt+rOjp2+ALOPBKtN267NJFB8yJqQudqm2mdM9Cb1ijVEhf/kiEHxkLDkacDnyeWf6aEBUSFMVNlS/KQxQfGAI3WaSv6nUWoP8YL8zUr7jxonKB57xRqlfONCJKnLqAf5KzTTxBw+PvfB594ajLAJb5LZX47+DJmGcj5hf7Xy4Fu5e+9neDrRurBrIdWAf1iQ/9n5lftr/lDG8HSidemrAF9HrOXfWvz6my/M72P4myPUnidhvZvMEznHvwOEhfindfCnuZnh+A8T9ty+RfFNQBAbreWHL7TqPb7C+YCXTsB80udXzsZAh9e91rurLRbqKcPsAzwF8zTV1vcYUeo6qGEkW4k3omzrK8F1izRV6Bp9fRS/TrNujK1C/QjFbxSavzlS/OUrLNRR7lPKUDeGaGoT7C2eglo4T4o/a9xOooI6dWqPMf8g1WDNtfHPuXFqTzWEVkNEuV9fGUlj+A71es+ep3io3WS7Uv6YwaipRjgWkK+32ziTNJa2hVT4sxEjqfeqV/qz51oM32A+nLNZ75nTFO+Fw7zH1fHfy+RvA//rmpqKjzN7dHMvaOdPRk3PQL74IurSc5Hihc/RP5w6TiWoKUZ9HvA/DoZzBPzZnO7Dhzy/ZPivWb6vNs9a+gKByq4vPFww4K/m8rEkwH26LuBHElQ/xqgbSoGOpafSfJgaPgS9V0bssNNFMP/WmHtfLj+69eLC10Jhhh+8TvFFsN5V5t6L428kDhdj9kMckCrhUBTtudU54/0ZrVvgsNZFwB9kK9i/TPBn73s3X970UQaXr2PpD1mXkn7oHaE0YC/Nj3EeE+QfSJSSsVEWb3C4W2fmE44f/eNvfO2vfR07fL3O4p+YS+ciAX+zbH7ko/v+GbOHyW+AfKkIWcdbX2K/hq4xe6xbHb7e0Vm/X7p1/NvcP16hFy8R96vyXz9y3fsrxJMqkL8tZB2fV/d8/ut/vLM3Fj+sNNcCviliuV/J8TwZZa0U2PMs+P+nwnpFe2og35sbrOWPDP3lUGmXh+Gj0SQ+fxbOH8oF+UPmVkFW+vnMl2jAnwz421pjDS7WMC/kcm7KBG/DMrcpixGxUVexKrL8EmWDGLnEWBW9UK2sImdY1UFW4Q2WvOqf72HyQR4+WrHtWtiuwK6RtUp890VWZVeEpjoAGBdo1xIetGZr/noikXUxloR5ibjhviIhSronymf8/PA9DD88nNR14QSsCyx5M7Qv+oTvAYxCfS3Ix8lXbEBHGv/2xoLyjch6fH9rdesGtz/BesODSQ16LbHM0nC/mSVxnaQa7HHLWTXWQD+CeLP/rVhgdNQmi1Ia6Mw1/saA1/IMMdELY++pSXf9htGd3pFz0BuwflDFh7sp5G6PcSodrVkxre5CiV7xAY0854xTvQ70Fkn01k65Q/7vUcOB3mKJXtDHH4jk3mG9JZKoqhdyUR5VRtdtB3qXSda7K2LWa8NhXx51oPchez/raj93G070lkr0+oTH8jbxzDrhtPWW2ecvr0V3TG92XG/BUoliHKWmMGoeGXaiuECiuA17IuXM1Bs1nCguVKzYrz58GBp0oljGWfgwsl59QNZzwoliGWnBmE9a1Uk8ecSJYglr8Z8HwGNtm3OS48Y1J4pltBXcZy5L8hWf63IUXDLeCgJPL1cG19iEI8Wl9ivmR2U2wXW0x4nisrukuFDGXJ3AWMhc8pJ4LL1GCxUX2O+xvrNBteJxR1FdKGMu/PWDOo9HepwEV2GRPVfjz1NsorrrM0eKi++W4hL7vpY/7ZS7+qThhKsLl9lXJ13dUPcPOlqxjLmQsWrVHeYVR3lcaq+YrFNSZtQYc6JYxlygACcnG8XnjjtxdZGEuVJ+rXXHFUuYK+VZvFu+x8PXnSiWMBf/3RYaII/qT484WrGEufivUPzq1md81IliCXNxhduVjzSMY06qU5FsUkTKxHSad6cVL7MfUfnopHgenb5iCXPhL1lIsVJxN3v6kr5iCXPp2PoUq4Pr1idOFJfdJcXFS+3TCY9fbPL46mkneVwsYy6ow7w8yvd40Jh0oljGXKCAqAnEoWIZc+FJU4vy9PiSo2avWMZc+DsOv3KP/5Pe0QsqLtGm5WRN393R3spTttb6Dlf8nztnOv4ehzRGpMiMOBIfzuzWpchvxJC6SrtL074ZR+Jm1MuRmXEk/r+FRl2KnEaR012u6ezv/wP9Wol6`);
                U12[`mapStrings`][`push`](`1,Cosmic Thunder,raspy 667,866659,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`);
                U12[`mapStrings`][`push`](`1,Counterblow,ProBond,302013,eNrtls9r1EAUxydtl5AsKpUePI7owUOFBXtQLxltQYQKooKseDDZTncraSZMst1WLz0IeutZT+IfoAf/gQH/AcF/YP0HxB8HLR7i5MesNt3ZyVAJLPSxsJnJm/d9n7yXzNim2d0MQQM0l0k/iDH1fDIA5m1KrpNgDS2BzNB5cMCcL+uZOV+L8bMnn2+8XXgqxuhC4XjCNhthBEyxEAWv84smKBm6UvwvlG7MADf5wefvsKr+28kqn/cq+ydvUn8fVvX/nrh8nlaO/3M14fODsKp/O/VnmrxMk5dp8jJNXqbJ63x7mdor59OlzJwhkJnd+NtQ7LihjhvqvzYUGSoaSnzk/hHkZkgbSurvafpLHrDUn2rGlzxgmT/T5GWavEyTl2nyMl3evcv5/WoNhZaLsCIt41BD3TzYwc7+2d/3Vi6eEW/gaLcVu6xEcBQYfXi+K3ERsdH7F7lrAXPt7umP2bicbcbApoqBjWVAD8UsLEmJgk5gyL5stdahnG1eh6liYGMZUHdXwoD2kIoh2zFqrUM527wOU8XAxjKg8JGM4Z2SYT/dWWutQznbvA5HYfhVNwMby4D6UMZQSE1geFB7HcrZ5nU4CkO79jocYgCWbVqbURiMoj8eSuUbYL5N+rDnbmFIcUT8LbxmW+LUJ19pgDkwH/cw3AhiSiBZh3FvI7ItplrJRefAyU7P9X0cdPEijAnkgp5acBaccjsdHEUw1Q3wdszlPLXcLLBhFONwEa7cusqlihPYJKkZ0Bzs7ETYP9dqtZa4jGqNkR2oeHCq5jCAeR/zhGjAA1N1/vxnGYaVXv4BI3DOTA==`);
                U12[`mapStrings`][`push`](`1,Cruisin' 4A Bruisin',raspy 667,874414,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`);
                U12[`mapStrings`][`push`](`1,Curse of bonk,przemek1ni,8899,eNrjYmdPzy1gYGHgdS4tKk5VyE9TSMrPy2bgKiiqSs1NzTbMy3QwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIU8XOysBcUMrA5FCRCJSKgEIwMacAiE0jJoEkwM/9PCGexfzgSBWQ4KUBsfMGAFjAwEAFyBQ70DhPaECvC6JebkZOalKxRlpmeUcLEysB4YAq7mgbk6JzUN7GiH+ANgiQMyuB3tgMvRcf+nIBytRDVHN3KgOloEJagVcjNTUnJSwSE+BBwvhRziULcraCTnF1RqgrwA03cgUQGnFxpweSE89j/CCyJU80JTAaoXuGBeKC1AdrJDHM5Q98NeEIDSecIdhJM5qOVkuMUwJ7Pm5peWZKC4thOnJlgmwXSt39kjDPY7Ia61v2wMBjDX2v9U/B3ioiuBUC+g4QGM3tQ8haSc/OTs1CJwBDuUQkw/kN2Ay349HKEFVskICy10+zEBexIwnooVrMDW5jHQy1oOqLW64CxJP3s5YfZCLKZfOHPBLUbNwvkOdLLZGmgzAwcXO2ducUGeQwmhTAKCrI55KUWpXJwOBQ8IqmZiYPVKLM7PA6pOgXotEodqoAeYGVicMnNygIojCStmYWD2ygc64wAhtUDIwsDunJFYlJMJUp9CWD0zA5tXfnFqQQZQecEC/L5kBOVuNpfE3MxEoDcPEApCRpANINMzShM5GRmBiAEAIM/9mw==`);
                U12[`mapStrings`][`push`](`1,Dancing in the Moonlight2,RoctorDush,351175,eNqtls1PE0EUwN+StksrfmA4aOKhJj1wsCQiiaiJnWoVGyMHBMTEGArSbqHdbdqlBT3YxEo0gXgkeJG/wGC8eGNunjwYDx7VeNGLcvCg8eJ0d2b2s+0gvMtmdn7z5n3texuR5VyxBEE4nsqos3k1F82rUV2Zi97QNLWQzyn6IETGtFldK6cWKwoaAkNQDByS+JE1JLFD1437X0Ze9j1ga9RPwe6IHCxVQMaTdWONl+lGCNE36PFv8zlGj446r4IuuLCyQk4q2NzP1p38gIffGFgHCV8HUf7yp0mQuD2d+Z/frhG+iET5K/pXwtc2Rfn3V5MgJb5vNOV54sMZQxKfwVck6CgSCp/8O56KH0PL/oAnOz2lQkbPauViPJtfigRB9hwJ4TK1PwVOf1SPP6d7j5B8zAjzBw/FLbcE+LODvcRHcf0H+vsIL27/+aPDNns0MxFoNer7aRC+GXLh/JEDl0aaIUZP2QXIpsj+SaC70OrKqVcVWzpTYvz2jnN/LyWW+ENLjHWME+Yzuf5Rn26u3d4FqkWtavj9ELl2eGiZrkdb/n6ETD8YjwV5vLbl1J9uHyfGY0GexZV3x/2I621/wBO9nuzinFJeJJ196dSyEd8Xb0xi3l1XXEcM2saLc+NiPK+r9N7953dT/9E5V125vQvomQW96Tdrara6WlOcfj+ZapVHc+RUsZNfgvY8rRNP6/Ly717XrSWP17Phdvr3cyQAHOYtnnyH5EfACNkqnbEF3EITL4HJutvEt7/ukVRTE1Hf3lPPpxbr1HfMRCYvNozLPdYGFNpSPLq6cY22iMaOs4Rp63CnEv0nz4qN82n/VOJd8ry15ylXrTvarI2fmJiwjQJ108nHfHkJzZuJwguUm3G2YDePd8lvs5LtOA0DtzKFAsgROVyslFSR/tAFwZulTE2NhFlV4qFWtAQBi6Z/Ymxc+tFBiy5Rj0db0yFO406WEMMtS3AnSwhtWYI7WSIBtyQsSeHm+h/4bEAJ`);
                U12[`mapStrings`][`push`](`1,DEATH,emil900,1039,eNrjYmdPzy1gYGFgdXF1DPFgYE/NzcyxNDBwMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFslzsrAXFDKwM6IARXcAhErtVDEwMZzc3MNi/nAkCs+wvG4OB/QMGHIArICexJC2/KFfBkIuVgfVAzgGw8IGkA7hs9qS6zUYgmx3oZ7MgwmYFjeT8gkpNZK87DJQDHOjnAAkMByC5A6YIFiBY3IEjoUNUMpKTBoyRbXagvc2IKDBGTgORdPM6fgfQIQQkMByA7I5MugUEUe6gQ3jI43IHsnOKDtArWEhxDh1CR42Ac5DLsYHORA6DJBM5DJJM5DC4MpHD4MpEDoMyEx0odYDYmclAa1fpEucq5CCDOu5AWsMgDDI6uIqCIAsZhPF5gH6OMyHJcVgCEOaSwejGA/RzozU5bsQWnHGD3qkH6OdUJwqcii1wM4eCixlYudg5c4sL8uAdPzvsdoHcBvRdcEFieR4XJ7yLkOqAUzlCtQNRqnnAqmEhCdfkkIBdEyMjI1CTMLImuN4DROmVwqIXSnEyMgIRAwCNVclU`);
                U12[`mapStrings`][`push`](`1,Death Valley,TheAngryBull,574754,eNrtWt9v00Ycv6C1IWlApWJSJ1XqFaGVDchWWsoKiFxL2ihbi0rpmFoewLRuktWJvcRVFRCb0Vaxx71uT/0L0P4D7n/ggdfukRfUV7QXHPvu7LNzsW8/1A35HhLZ/tzXH3++nzvfnS+bTlfqBugDuaKqmFV4V9E0tQ1yq1V1tlFptud2NA1NAaegs4ArhTdbTikckuOfHv1Ren76MT1G5wjww2y6z2iBNG7s8xFySEfcCfQD4v5ZOQbK81dACq25h3jnwMXVulMDKbB2p2j/BgrDh+PfuPqZHZ/wYf8R8fFD3JW3CM+uq/H4o2eGe71NcN993pv/k9/d6/cDz1F2YS/ejv25Wrw4bCfcxX/v5gqvExxN9RToHv+pJYf/8Wc5/N6BVH4Lr3/tlN8KLyedUjgAgpKdUza2K019p7GZ7QNpZghqwIGQVVpEyhUcpOrcH5OazALEmmjZPV+gUh8DI6MT3p3i4iX4dPDM6pSXqNXayKWlJR9eI3xuCVPj8MEf0/j7XFzW+l9z/L34xi8u/rSQz6vZRTv1IxRvxcMfp3iiy2BvPB6Wi896uUhr9ZeYrVi7LpJrH4TSSNMyErjQ59zbk23WksPflsQHW6QAL2phKEPS7bWwZU0xt/RmHV5ypPiSADdJp3/8/y4F4y3LR5HD0xYeO/6W9bdSyV4KrJzyUgnPbehG+5NORjE1N+nB3l9zh0t3RdhzU2/nQopE9WLk+ovDmPhArxuJvyDJZ0oSPyOJv8YrFom/IRn/K+IUwGdeiJ+T1LNoyfEpBfgM98ZLDGiYI6edxtkyEismVjwSK3qd47Svc0T6QeLIxJFH4sjhkCP945jFwFt7IDHmERtT1mjzFo+PMA5d/mB8Bv/drg83yDh0wRI5rMw3Qd/sv3rzvD1bHQRdF0zYbNvD7319xZutMuXyvfFUAZyPF5/Gw2S1gjpIONsm1/FdKx6enMdlHifETwX4TMaMfy8eH/SFHH+mzz0ravVF0mEDy03VNNtwtamqjrfqD/je60TSeyW9F+d1ev+Y/OnKXlz+/9BrmK3tJkZOjPwfN/KoyMj+lz79NjPjX2TinjcvWI7qB8XSuq3Pp+QlEnzuMP/igg+PYuDnbTyWiO/Hx40v81Kjek5MOtrRjxZ0wJRoJ9RuyKed334G/2kxkVAs4UdhCbmGTMZw1QeJkhFKQqGSXaZDiaDRgo5HCeofQVFdydf+RFexrvmYuvrlpT3qeiJvlLyX5eT1q/wt4lZEEpXFKl//Syp3+2BJPqj6zgQWgqK2RbCx+7QQz+3Aojsigsn0LTRx20DQTfI/wYtZ8HYwuWN+STzjgwJ8QMhcPJ5uZzgTmLUG8BLjuBX1Yl3ZVGFnjx1c1Ct6HvRn05l6y2ggDbqWm+leN5VK2Q904o7ebLahqcNtVTWyGbo7rHetk+1xxb7hrlIza43KmF2NpCai2jdKqzFuwrqybVeD2QyOVW2orhgtWGtABe5Wa5qaz+ftqqTN966am9sxYbkOHyob2zZNOiyLoLmsteCKYqqwpOubY5lUKtPZF/AOm+3qgg==`);
                U12[`mapStrings`][`push`](`1,declines,JonesReal,151,eNrjYmdPzy1gYGTgSElNzsnMSy1m4PTKB1JBqYk5DiYMYOCgx4AC7N+lgYH9Byi/peqh+zqRahjfQQOqkJmLnbWgmIHJIQ8qkXQAQqc1oPDtX84EgVn2l43BwP4B1OBj4RJez13a4TYzMTBEbCxm4ArISSxJyy/KVTDlYmVgOkCm8fsJGm8GMh4m6+AJpe2gtAoDftf/VPwd4qIrATeeFcP1DFxc7Jy5xQV5B6BBfSCSAStgBGtnDy5ILM9TMODidCBKPR9UvYJGcn5BpSYX54FMQtoYgdqYi1JTgGqhoXogrAGPWi6gWoTxhRClB0LwGS+I0ILQWQK1LBCfZRIYOuEGOBAygBEUICxJOaWpQMWE3AlWzA1SjLCAUHCA9Qgh6UFoJRTqYK2SmFqhFABmiZg6`);
                U12[`mapStrings`][`push`](`1,dfsfsg,Querp,656349,eNrdmM9rE0EUx2dt4zZpDlarFgWNRSSKtU0tJb24T6itjQZbPYgUobVtisE2oamK9pKD0KN4EkUP9aYHIR69ZEDw6EWJN60XpShS8B8w3X0z2Z39NRsaIc5lSPjO2/m89/a9l0RUdX4hT0Jk52ymkCnMk9DE7bmlPAwQfcFRYlna74y+tE38/OD+t9HXnSvsM8RRuC+ihvIFohJxKeIX8DDp+KiqMh49RBRt48nWeqp9PK0vbZ24rPbxW9PLmdzSQqy/PxIiKrxbLeqWp8AQtLo+G3e+dugX4HelWbDqr+H37b++XF/b+7KqvxjrIQpl3+ec9eX3V7tSP4ZXq/r4rv01X9AlatVPFA33Pvo68uLy8yFm380XWgXtOvgikTD7gp5BQUuzsAG7B1+7TWyx+Ewuf+/4FiIP6piIaAv3ABHDraeaTZ8yrgon0M1r1ivb9Phk6LbZf3MhWz3/3Xh7WKq7pbJCfBeXAHPvDWM/+/jz8pTDnUiEe23I7K3aHSm7fRapL+HejwH+dLD3zrPNdUYPPnpN0Mu/yFF+1WQsrWfvTUHBQwuz1kIFI5hdbz9s/Fn5WXENVQL3YYQTQgttmL1zxAIFKedUkIfrqmUvJq8ph+k/B6U+oOW6QQ+7gZp5sXiwIuLPW3bhZQHjvOeKjoGCTuSdoZZ3G0bRfqkhgYWGg9oC6wOqlRoaWFaW3HkHhUQuORdXYPspxuucmLzfzAr+YbyvrP7cXl4IzFsOyKsF5C3XzXvMh9eh5/LVSnPYBdhYMY57n0sX8dGLXQRmEHuyKGWf+ujr71K1hpp2cwU+Khsz9rT1TS9X+MSkjwfgo9dEPbZ8Okml7FMfvWi/HlckJat6t7UriZOSrYtJ6qmk/W2q6jZ1CxVBE8JbL069mwJon3e7toGeFKpc3e26wwbqTNi8oaxlaUKyJTcNmnPwJKbJpiGUasL/EW+AJiwxezQNdo8cdrBJs2noBwLRe5Vp0695kBs+fPT1Dwcdpl/zxo1JW0QNLxTyiyxz2XBm+5dDUUiIhK7kp+8uRsJUSh3V1cw3YV7lzxOPQ3vMh/hZHugxr7MHHM5yE6wEe5s44m7CbikLHpbivpZqnpEy2Ctr0O41T7uDAe3iFlaU8Nb/sn8Bddt4CQ==`);
                U12[`mapStrings`][`push`](`1,Dib Pong,MuadDib,240064,eNrjYmdPzy1gYGHgcMlMUgjIz0tnYPctTUwB8hxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEXFztrQTED24F8B1QTmPdDlR6AGg03Ckrv/9Wec+PTwkQGJgYDhzCGAwpQkyWwKz/Ax8qxZNkRMahyByWocgEcysWTdfOypPdBle9H98cDBqyAkYEgYLT/qfg7xEVXwuFwewM2BRhBwRaSkZiXXczFysDmgBFM9oSC6fuezvNTd1yA+ZtQMIltKFkj9HAmLFQJBRPP/OnyP/zPDkAwYQQFjwIIQBMmKLBgAQlzLAPTAS+o3gKIjIMjxGgHdMOZGJY6eiFiJAXV1+ipHeIfRrJ972BHdiKB+40BOXkgfOwwbHzsgNXHRFhlidMLf/7vRpRUhLxwQAQaNCJ4Ui2ykxwCG9Cc5KAHpXWgdG4CJI9Cvc7ACo6E/SdngsAs+8vGYIDLSbjsY4KL9FtAI38ChO5RwBfpDpmoznJIc8CmHOYcUp1X7wALyTLUCIZXIlDnotkHT2Sk2XfAEz1FHEiDpv3SB6gBhuY/WIog138ONPMfAycXO2ducUEeRh2BkbYZGUQYuF3yFfLySxRyE7NTuTgdCOkBBpQwg0ByfkGlQn6aQklGKlBjgR4XJ4YPMTQyMnABA4NIhdxOpSUKlfmlCsmJecTq4SotTlXILFFIyy8iVgtPZl5xQWZRYklmfh71PSHgCwxTheLM9LzMtEygR0qI1cieDKzM01P1OBkZgYgBAKYdEzw=`);
                U12[`mapStrings`][`push`](`1,duck and cover,JonesReal,366,eNrjYmdPzy1gYGbgSylNzlZIzEtRSM4vSy1i4PTKz0stDkpNzHEwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWcXOysBcUMrDCNDnFQBiMDGnCwg9J+aBJMDCdt7OAucOi3gNj4gAErYHSod2DAB+AWOxxORZXhCshJLEnLL8pVMOViRXJyzgFcTq7EHjpAJ69bWYoILFjgPCDgIri5UD/CaGSnGaI4LT+BdKdFScsQ7TQGBkGEzQoayfkFlZogBxyAuTASpx9g8ZWJ4YCIjcVwafvLxmCA2wGcOalpJQrliTk5IIsdFsYQCjy0hIJucSSxFnMVZaZnIGxGT6dYbO7EmxzsX84EgVmEbeaAhTk4qEUgggeScdoLVeHg3YCRc6ztcNpr/1Pxd4iLrgRCPTciro3AVltCrfYkaLUJA2VWCyFZjZTOYNIHIqnseUwgiekCKMXAwcXOmVtckHcAmpYdsnBkZEZGoJPZgwsSy/MUDLg4DxQdIEI9H1Q9zNucB+wIW8OCqc2BKG2iqNoQuonyG07dRPlUBqtuhCGRDJQbcoAoQ5TxGQKlOBkZgQgAEkTpJw==`);
                U12[`mapStrings`][`push`](`1,Emergency Landing,Raspy 667,830018,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`);
                U12[`mapStrings`][`push`](`1,En wie niet springt...2,Querp,408447,eNrjYmdPzy1gYGUQd81TKM9MVcjLTC1RKC4oysxLL9HT0zNiYA0sTS0qcDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhSxc7KwFxQzsDOiAEcZwyDkAoSOhfBE0lUwM/+/NZ2DYD7PqsjEY2D9gwAFYnBKLU7lYGdgdkhTQLHVIOoAi4FDwAMXS/Z9ddqgzCjZiWAqjcVrKFZCTWJKWX5SrYAGy+gCG1QcIWG1PttWCCKsVNJLzCyo1QS7AUMbmENaAGtJ++EP8AInqHRIh6g/YEWk+ieod0iEheCCFSPNJVE98CkNEthkDBxc7Z25xQR48tEIdsOphZGQE5jfW4ILE8jwuTgeiVPOAVcMilRMewG4NeDQJI2uC6z1AlF4pLHoRRsDCM/UBHiMUcRuB8AhRJmkQNAlhoAs0arPwGahPrIEILxNlrhmJ5kIpTkZGIGJgAAALz9q1`);
                U12[`mapStrings`][`push`](`1,Epic Arena I,Mad bonkio user,996496,eNq9lk1rE0EYx2cj280uBQ9GKJ62kEMUWmkaJVB0n5RoiVpFjRZfadKkkpYmS5ZS1IM5CH4DQW96ULwIfoKMn0HwKPUkokhPgnhxd3Ym687uZGfx5blsZvOb/zPzzH8e1tC0O1s2UtHkKbuzZlb67W7DrKH9y42W2ex1Nzs9c9tp96GESEAehcL6tk7C2qPjh/c+Lr3O3WdjKFBQNzTVdpCG+FD4F/AAQs9RZFBx4QJSrM9PvHhqvZsnYe0iQWiL7gbMxSVDRRruUPXNgf/DiOS96v8DOcTnrZxbd9/XOT4fXxJ3R4THK5gMcY7j6djafXupPOO0mT6+7u8Xzwr4PY6/4a8XnxTwP6Z/1qszUyP+CuXLlDsxdv1KhC8KeXIu+Lw/xBVaR7aucmQ9Pk/riU9TvpTAs/3WEupP+SGzZKJPMs6cZxH4Y4vglBaBBIsMOYtAgkWGnEUgpUUgpUUgpUUgpUUgpUXgH1qk6FlkdLB9kwnxFqkLSxDX7BBcHIwtmXy3y7TmQktcBVGDraF4F0+gjcfP3WrIp2zOk97ahpDNYlLW/15K/67+15Shs2fmQhnsrIZTXhNcrwl6vVLy8vZUdsg5UA/hDQrquMQVhV24LG0Y31emznyqPnJ9bL984/bY/HjeCviex0eKLtYnPKTUB76xFDj9L18/3Hp28NWIPxauKBzh9N8H+i88vkr/n+WeovWcHUjzRJ9dtQWuIWUjDYnw8qbct9zcRllD07ccu8s+blifjH5jKe4XnnrZbux0DR23ZOhJQpuFtZ5997A76bbMpAO/TxrNhaS5ro9UdChmbiDRkpGYFksESh0ZpUKiUiDIPHQTjxE8KisYVDxJl1T8eEpd+tAVRfcW9gs+SZQZ`);
                U12[`mapStrings`][`push`](`1,Fallen Bridge,GayfishDeluxe,940932,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`);
                U12[`mapStrings`][`push`](`1,Fan,MuadDib,219505,eNqVlsFrE0EUxidukjVb0sQmaj25hSJeWgUrFC8Z20VpMRBLQEVEt+luuoTsbHY2aurBCkJRvPoHeBEE6cGLHgpOKfRqQfAiiF7sRaReeqk1TpLZwGy7mfbtIczu7733zTezs1FkuVx1QBRIV3QbyPm6PqdZs3AMtAMOAy5yv8125LbY+OnCj6vL2Uf+GJ5loKTIMQeDOAhGFrpqB7VYSpH9GpAnj4C3k3kAa+nO45uExyeYgi83Bqc3tSUfrzCsDHn8+mIH/8njs0wMusfjU6z61urM+Ag2GE4EOAQ8LhADpRcXLz+/ve3jgqnCOKedCIyEiaGdojYyGKhOwqr3/fp259XxNwHtJEx7//tVc/ffpYAzJOiMj6c5Z6AIz/55vT6+kQusaqiYE/yqiqZ6cuXZp5cfNnycGUkOtiPJ4XB4iz2uFXh8km2xbX5VRfgOv0wMJ0HcLzNwZm3l6+ZyQEwonuF25Ef/Nf98oR257yAkkmo72PGhxPZ586PwLm8QnCH7HjK0+d/mO0AOh3cxluZjfloITg6G+07AtaX2lvOdyK2z1WMRAYLoCbR8I9Osk7kYktGVOryn9jmtGCp1j5LuwTHVS9NRRU5UsWNDxIwaC5tYBGRBn4ZUG3lqVa8YSgLWzvfOoXPLgHQJOQ0Vmao3b9BEZ1RJEFEzmjhA/UoQUQd6HQOpibqnNlBdLem2WsctZS4R5qVBxvJUE7mqZWPHcnXPQnZLnCiXiku1xEGvIAT7QTpPvVKxVbYt06ICPdpBlEivJJBL87pdNkYTUkR5IsmlBTxkunrVwEWkGR6ydc+QHiZdfc6q49R9w8VUvtQ4VdIdr+4a16yq5Z1mg4KLyq6BcQo9sA13SovSPwQxGO987GOPm81maxPRuzK97w9p33iySDVUMPgPGYA75A==`);
                U12[`mapStrings`][`push`](`1,The Fight On The Tower,G3nius,610164,eNrtmTFv00AUx8+lTuTAQqhQyoKRIlqGVmqSKu1kD1GrAiqlRCqBqmpakibQJCYpilKGZgDxGcqHYGBAYuIWhJAYkJCYYUIsiBWxYDs++3z22b5ALSviPFh2nu/9/vfenZ8viXh8r6EAHpwv1iriUn2vdiDeaIraRbHVrbRBbDnbrD/qyDmgNzkNbE36UdWb9NO4fnL4dfnFxGN0LU8bhlOJOK90QByQ7RR5Q+4Z5za0/zAGXr//CDhYMn6vE/YEGuDAq7cfVHujH/lI9rN/Cd8BTvp+rLXn0qes3qQvgNJOr+2XD6qtdkPMzCd4SxsiU3ukaSsBUttGcZXFdxLzLU7vtpTeFQ0BdSxvUREK9rPZYn+BkMcQYIgIk04EnARFPgQSkUqCRydEoCk/IJyrF17IZgNy4XEMEW+eDQ8fxDox+2MOSjQzmo7ZXynfUe9f69vtV+xnTJVmzyF7uAPt9iV3e4jsiX597evBeNAlbBJ60672IHhUEmZU5vSE+D/UJzbUZ62hxpO7JZPjSI44Ip51EGzeXneZskt9GvHR4UOWKWslR0ZPjgijWoObwQf3HhHsyBPDCBOnHMQueWy+SljAG7UyE7gu9F+BowK82mcHv75SOEnwizRwPGO64sDbfTly/Jd9+PEwRFjGTDAZeFBQ2dSKnpockxpcVISneJCZYtaRRqkRpbU10EyPMD/LTN/dHjjdh5FLIwYZMMIy2BcsWRl0Breou0c3DboJR+H/tL6mFtoGNSTVA4ea496mWvivEv0TG2FQuPS7WJhJAX7QP0299Muwcylb87q0bXlkpFlFo21jaISCl3IoxIWOUCg9haJXFaRveNK/S7XFZagtgAX8LROGayudF2ybeYNSEKJS0EmQtkfDbLw3gfR5I3X1W+GZ207z3GAD5G4/NN9JzDcunxkBS0JPhDdBESBzBIZHmHQiYCSmvxB2KLF/HfK2mfCgT1ttcpRcMN7w8jpksQeQ0X6YmbbotsyMgEJrGVu0SaOncNG7PBsmcbI5W+KE4DuJ+TYiC2KJuNDoKE1zDEruz3Iq1zjgbynlbjMhoG9VL+sxcEa3RjkkoG8Rr4d4cA5/yHwW+uGpxzjpEPpRqscYzaEfrHrw4ILLs8ZJ4DhBU/QHm6oYeg==`);
                U12[`mapStrings`][`push`](`1,Floors,Gladi,216374,eNrjYmdPzy1gYGFgc8vJzy8qZmB1z0lMyXQwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIXMXOysBcUMbAzogBHGOJDvANHSbwGhPdFUMjGc3dzAcAAqbX/ZGAzsHzDgAFwBOYklaflFuQqGXKxYbOY4kHQAYnMk1LEwWgTD5iX9aQwOpCmHmQ4DeJSD/OVAmnKY6Q6kud2BNLc7ZJLkdiKV29+cCQKzSIlCI+QohKWu0SgcqCgkPhcKIqJQQSM5v6BSk4GDi50zt7gg70B2AyQ24rBrZQRCLgbW4ILE8jwuTgeYahPcqjnhqmFmO4TgVs2BYbZDWgNO1eyYLsHlbmCZxoXhEpzuBqrmxHRJCG7VHJi+xOVuoGqYuzkZGYGIAQDxmax4`);
                U12[`mapStrings`][`push`](`1,Forgotten Floors,GayfishDeluxe,532611,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`);
                U12[`mapStrings`][`push`](`1,Futuristic Slide Thing,The _ Llama,308681,eNqdls9rE0EUx2eTbNOsSHsI0oLgFnoo1UqwpVpqu2OMSksQaSP+OChLsk3XNrthN7G2HlpBKvgf6B8hiCdPWVH01JPguV4qXiQHEYqHOMnOTrKTbGbHl8Nkdj7z5jvvvZ0dKR4vlspABKeuVytVS7crel5e3dQLmpxb140iOJFb1+SHcnZTLalwBrQMngc+U36ttUyp4/7zne833iSfen04gcGoFBfLNogD2gT6AdyFvlY5Hvuby0yNgEgLF5Sfr5r2Wvk63TLlEASYlFbzG0XLrBoFSWwv7ViO+4c8gfgJ1PEu6pSnCLj71kYzM/155fOdkeUfmReIbzzaQHyOwX8j/M2DT4h/wOAPP6xcmrI1xH/5XUDjDD21tp6Dd3tonKGn1tbz8uMyGmfoqbX1zO/vo76n8whXRUBqBMA0gsBt3C71Bkk2Y2lza7OZZ4dSC852lZhXzeNdq9Ybxz1K8kIg36yLttZhf9V765ASFv3+YQq3yb51J8BJzA3iVvb3a39I3lq8w+AViocjOJa4Jet5MQY4z1i/w+BrdT9PcnXOv18IAvabouIP+vMOJ0+vT9rxXlUoCA4nD6hxchoOdulp8SRPE1SevPfsCOdrAOth8ArFEz2T4fSTU5vebzIg/rw83HPHMejVH9HfPvLdevP4+d777fDv8pcBn/85zCkh/V/E3BX/ex/o3zs/FkP6n/lP/16cWP49Ph2ST1HxBAw9Mp9/Ujch80XqK6R/eJrT/2Tv+Ad9L7p41vuV4ssvnObkZ6l6HmbEZ5bT/xwnv8AZzwXOeEI+PeGvkJ13YBCR4omSXTbgPfw5Wwy4uyBZIkiks7fl1bK6ZUgJhzUD/dCMlWsZd0YiKkjPovH8jh19ciavltH9XLtlmUVLs+0hc8vQrKXMSUst6FV7bM1SS5qdMzNaxTTUijb0WLNs3TSi26N4ZlYv6ZUYiAFxt9FoNPcaS3Z2gKi8dwOC1h0YverOku+bhgbAP+6Ltlw=`);
                U12[`mapStrings`][`push`](`1,the Gap,Querp,632380,eNrjYmdPzy1gYGVgL8lIVXBPBDIDS1OLChxMGMDAQYUBBdi/SwMD+w9QfkvVQ/d1ItUwvoMGVCEbFztrQTEDOwM6YEQXcOi3QKHhgAmsnNH+5UwQmGV/2RgM7B8w4ABcATmJJWn5RbkKZlxAHx0oYcBiIIrVMF9yQH3zUvF3iIuuBFCl0827CHUHohsIqX943RnEJ92phiCnOpDs1P0Iq//Pn0/YqUjqnW7cJcWpgginKmgk5xdUaiIHrkPJAjQXExFYqC7OJqi+Pfc/5S52INnF+9Gil5CL95PtYgkMFyM5HHcWcvCD0kUHIHS+A3oy2mg6GeEQh8PtYJfjcghm3hRgwMibiKRrysDOxc6ZW1yQdwBq8YFMHAYzMgLLGNbggsTyPC5OB6JU84BVw8KB0yHpABGahJE1wfUeIEqvFBa9COs9GYgwQhG3EQjHEGWSBkGT4AbCkyUeAxkZ9Ik1EEpxMjICEQMDACqf+TQ=`);
                U12[`mapStrings`][`push`](`1,Gemspark Cave,G3nius,1103560,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`);
                U12[`mapStrings`][`push`](`1,Gentleman's Disagreement,Querp,321315,eNrjYmdPzy1gYGWQcE/NK8lJzU3MUy9WcMksTkwvSk3NBYoxsAaWphYVOJgwgIGDCgMKsH+XBgb2H6D8lqqH7utEqmF8Bw2oQk4udtaCYgZ2mEYHTyiD6UBaA4qRDiloKmCAiUHFxJWB0YFE9fYvZ4LALPvLxmBg/4ABB2BycudiZWA/kOUA5h6A+ZUd5msHEagvP6DSSFbq2gcjdBKrHgYOqJGo3gJqjxL22AGqBwJGRrh6aGw4GEBpBuzqYe6Gm8+A03wNDQ0GhPkGaO7BNL/P3B6hHp5acEQJI66Ycui3gLO5g0szSxQ0kvMLKjXB0Zd0YDT6hk70CSFFH1IsOoxmQtrFonP6OSrHIgsoFsHxNpr7hlK8oReeyHLYTYFVs1i8Aw5e4qtbNuf8nPzSInCZDa3THYoOoFl7IN8B1VrMWv7s5gaEtTBnkRwqWJQ4RENdpQfhO06/XpIAchO6a7kCchJL0vKLchVMwIFIiW/ObKqnrm8cOBV/h7joSuDyDYZrBRG+QUoZmK0leDDEoaUMPeyeciBRPfEpicUpsTiVgYWLnTO3uCAPo+pADxFgqEUBI43zACGFQBjFwA4LBE6MlgUW9QEMfGiVGacDIW1A9wQwiKJqg1KcjIycIHkAnL4bjg==`);
                U12[`mapStrings`][`push`](`1,Get Stamped,raspy 667,863955,eNqVls9rE0EUx2dT003WSygeIgSMWKQXC21qakHdSQj5JYhpitpDNGvbtCXdZtsEij8OexDEcy9VFKLXgFSCJ5EMHrx68A+wnqSXogdB8dLJ7psk+yu7fQQ2mfnw3nf3fedtBJ5flRXkR6czK41osSHJysoyCm5LdeVhNB6fxTNICzyODCEeVbQQf8Hvp49+ZN6decx+4wkARwTer9QRj8zBmRfwDtGvNWzc8KHFCxOIEw9fdOOl+C2mhXiAHMKXzAj+fkm8CF8EHIKVsl4Cb6n69YFeuvPme/rt/Os5WrJUKtF1xksgrQL8OjLz1WoVcTiKDPtDeEVRKC839f0V4HLIic9ms4gjSZYP9Kcd+a5+rp/PlS8UCv2WkJhJf8rCt1otmxYCx56r+HeXOze1N0n9ZeBJyp7HYx8+/T56skf5drs9wKdNeiYtejS+w9zoapHRZK3RqMldm5AAFCnB3lkcYeWgPVuK02O7+75O1xm/HDXeznrZzCcSiQGbSKqbTfQ2MpssNU02adq2sWeTe8jY9rWmra16+UqqJ5vgVf2+8H3dVr1Dv3Zgb3PIRxbAhlngL0K7vtwJ53+mnlFeGwwkresgRdWW73xNf3wV2h3v8WW9LrkF+TMmvq9H47EEeubhWGfVoTzZgPwYuPxwPVjWnw9huvPD7xdXIH8BOHacYg56wJfkhuqJx9sh47ELG4f0AK9NWrK1r/Ns+Acc+VwkSvkN8MMccNftXxpUijYmLfw1R147LxY+dsL80yfMfxWucE7Fw/P/F1KXwszPbnzHKx+x5B+uJ2LJr/FOYw8HgXN65VqD6/zb//P89mdfbzTDbEgsjRU1T5in5chCTUEBgQ/KdWWz93ch55Ce41AA8UVF2tmMTglB4oHnGT9N+Zvu/CjjY0IQe+D9jJ+h/KI7f4rxl6keD/wI4+OUl1RX3sf4WarHA88x/kqQ4+gHoWO5Z24L`);
                U12[`mapStrings`][`push`](`1,Grasstail,GayfishDeluxe,695345,eNrjYmdPzy1gYGXgdC9KLC4uSczMYeB1T6xMyyzOcEnNKa1IdTBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhUxc7KwFxQzsDOiABcZwCDoAoQMcILQKmkomhqzIjQiuQ74DqnrHBgz1EUjqDxBhPor6ZgtU9ZXY1e+Hef2yMRjYP2DAAbgCchJL0vKLchUMuVixBAWbQyaqgIMlA3anMjIELgwEOpFE9TDzHZIOkGQ+seph5h8g0Xxi1ds/hgYxCUFtxMDDxc6ZW1yQBzfdE7seRkZGYBZgDS5ILM/j4jxAlGoesGoFjeT8gkpNLk64FZn4NAkja4LrPUCUXiksejGsPxCJzwhF3EZgOAa/SRoETUI4LRM1l2MzkIVBn1gDEQ4lylwzEs3FcPYBvMbbkmc8hifw2+JCkS2YXspRwGOZNzUsw/QgXjuDqGgnlOJkZAQiBgYA5/EWiA==`);
                U12[`mapStrings`][`push`](`1,Hamster run,MuadDib,304194,eNq1lUFoE0EUhifJptukhFbbYntyCgp6aBGqED2YUQNasbaUVJRCdU0n6Vqyu+7sWlvFKiqoePGsB/GgB0XqwVMPnV68CVVP4qVWFHqRKCKUUuI2mdm6Y6bGg++wy+x8b96bf/+djatqvmCBKGg4ohWIg21ouwZQe11tJK2fRbtBOdA2EIjU11w5UkU2vjH58fDzlkt8jHYwMBJXoxYBKhBDQcbVwANeQiwFQqC0Mg0A/UeeB8+rlUc18ohL8a67HKmFynj20909B+4M/VxPSMByMEnj0SpqtIsPEEay6s8O9XrPx2mQP826zgh8mPOMO1HJQ2fY+sfZLubnBpKdBPu8M8/6WKjOLwj8+X6mnoRf6ljJpDvbfF5/WJm3i9X5orD+MJt3YXX+x7fHr5LzKc77ujCdfH04vxzsh3JduE7i+qsDfYt9t7/7PNeF6yTwCAT7p1wXrpPIh99fnurueOvzXBeuk8grwf1SrgvXSeTV2JvE/itPff4v/kExQR+mC5X4BzXs236/58NNn2e6UIl/UELQk+lCJf5Bjecmdw4mh32e6UIl/kFNgv5MFyrxD9r0Oj80ffSB6B8q8Q/aHHxf/LuiEv+g5s/3Hr1crvd5pguV+acl+H75d0Vl/mldnVmaeeL6PNOFyvyzJegH/l1RmX/aWr/smhtc5PxsUXL68XNhPaoeeGFfYJ0V2Cs9bvmlMn/9VuUu+TN5K598QdYbRKf4gSUYmy+PbAo2itCGs/VxNVYglvHHdnRhlVBo7R+bNqFhOrCgjeF4rLacpqxpTUAzB51R7CVaXbUmgporHHQdOGG6MKsZ0CUY1prYrDswZ9pQN4il25qjm8Z/6K7XEwsSPW/oOd3r0Kk1Uc2OakYed8Uiofi1iJqdJO1ZzXJcGx/TC7rTkbO1AiYZM40d09AcHJmIXGy8gG3ibSNhayO6S7ayhH7bzNuYkEZz3MB2T1qpU4BSKpWSCohOefc1bynh3wZezbpExqs/5lnxF59MeT8=`);
                U12[`mapStrings`][`push`](`1,Hellevator,raspy 667,868128,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`);
                U12[`mapStrings`][`push`](`1,Horizon,iRedi,513720,eNrtms1vG0UUwMexHTfmoxbkUKRKbKMcoipYVuNK7YF467pOQtIkJFHTiBbs1mtnS/3RXaclSZWsCwhxor0gwYkDZ87cGP6DiB4KN3PspeJQEDez9s7bZsY7OzuhSBy8lryx97dv33vzZt5748RjsUq1gaIoNls39J16DUX1Fa2kq2nUO+AMR+ZZuXdk/iCfP9v5feaH0V34rE4Q8M14LNowUQzr5EIFO38MI+ZQvzrnnMeZCyF0kJ2231m+rvL4J0sXPHjQoJ9/unnJg7+BefxfnYUXPN5j9NcZfgj9mM8e4luWiP/+7BQKZZ5+0z2+zTye6h2ZNuIcISVuD5wrH/QN91k0x/HAMOoUyyik5i2aH+d6rMdjST64RahrEDacAcCrKs+gRXI+zTFonlHwtMAgSV7WoIZjCE5zRyhHzgrHoAuMgorAIEle0iB1g4TcojDkJgKG3IRkyE28XIPKZG5OI1HIjQUMuTHJkBt7uQbBHMpxDSKmqpMcg84z/KTAIEledg6RVR+/T/w2yZ1D497rsHoJBV21ejyW5T8k14mG7hRIeuuDVzDNJ/3lqxrJe3k6Vrn2Fi2aF+jv5smgfJnheFMe9CnQedtnCjv8NhOoecvXn+rdFM2L/Ll7IMe3Dqg8K/S/1aZ5kT8fYDl+X/WON54+rRTNi+QT/dV1TNub4MjfZ/iEQP6OSiURV/+0d12k3lNoPs2V7/C7jp34CjNfePLvE/lJJPKnw5P4xEnheDk8Ga/APOjD6O0R/w5P6lE8K5yPDm89pPkJgT4kflx/bgj8A/qw6xtP/wd0ynL9c4LHN2j+hED/TxNyPBQ588z8OsPRZ5bhzwjk37Dk+Cty8Qx29vn/JIcnerj8SX99IOEH5gmHmXnlsZ44/GVE8wmB/FVLij9qET9DvhzrK0DS3IB1FjwmcHwC0CkQJHl1lG4E4TMvIWCmcfRxWK8RhwUiME+6KKwwPMF+Ovh55dw7pmZXnE8W7cYd5OAEoz/i6A/25gRdG/gf5F+0/P0DFW1ajlc3CzSX9C8A3QIqIRxfx59lRg8Rf6sgJ/9WQU6+9TfdGqVEBdFDwlvB5MOGSWAeEp9Fz8fRvg6H6HPVub7ELEj9PJH/nRwPBc61gAXXPknI6wH5XZIAFyxRk+/we0yCGg3Ko2A8LPAfYNEuCtUQBOZd+Zak/IA89MyQ0M5zNmUg4TeXaV4RJPA7KSleMkH1fRnBTRKwsHBAhwed6hu/3d+fOvULiqKz1by94I0zO6Cw0wqdG8O7HSZUgmvM/Sy/1aZ5kLvhrc+/dcAwhgeCIXwHZL9Ytx0wzRgA5zVv3i0JWfkwwiwP11kH8OSD/rcxLZ/DwyaJO+BMS8XyR3Swu0s2hKEH/ZJc+bzNC+n3vi4eMuBRSrT3P/PoOkJH3DkGf9l2Imbt4m+z/fn8+aHN+oA8ZtZ+Ea9K8n01Jn/N+LWd5Y9opk1qLcZhEGAkYAYOEzlsjvk5a+Awf4e5S10NDRwWKMIgJ5C1fOAwUYRBsisNIiyYw+7Q5eDAYT4OQ2Px2EjVbNRc2QXVs/4I9V6vKsu3taKpKbmlxbX4iPub1EfeRUso1O0mXlcu1hvbytqmbiqXiw37NqjvrlvcZ4VRTNnr/a+GmHcGOaTYJFS+1yyuQhEUUVY/3rbhEsCIq0bUNnmuZjZ0Qysp2e5NuuCmULdBfkWZ3zJ2KppZrDTte2pwD9+3dvVpgxC6PuofCwJ2j2OORwbkgByQ/ztySPlPHj8SDsVb4djNHTP8yfG7mmHq9dprRrGkb5nh7eP1ezXNmMu9fbPYaG4Z2rJRrxiaaZ4qG8WqZq7Vc1qzXis2tbcIsKBX9Wak0+m8G92337tpJBKPtKZffOq+ovZDh8N2TvoHvh3wlg==`);
                U12[`mapStrings`][`push`](`1,Hoverboard battle,MuadDib,178935,eNrtlrFu2zAQhk+ubdZK0yipH4BDh0we2g7JUhNFgHQJEAQBim6VHdkREouCRBVIunRo58zpUPQJggzdy3fIC7hjlyJv0JIiKcSKZUa7DwZknr87/veTgOwiNJ7E0IT1t/RjkAyonxzhgc/YaQBoL/OPdsIBeQV5kOcwE/2/ozz6t3r95fz37lX3k1mTTQ22XdSKU0AkUmvOfqgvTdOKMK6e23rtzW4Fbbj9dy7yW4a/Vs9uBe8ontfkTfCLrRmuPLrhf5nRf+rRpzA3HLBGgZCvqgnRGop82T1wW4D4ocnC0tPant5zL/eUmGz6Yelp/Xtadk/dU3N7E770tP49LbuXe1pUDXS2ZTJGG8l0v/elHRvzlS3gv7/evaPnQJ8Z+6yecI+XHjlc/17wZp/efJ7U5Pt/LmV8M35VnUHJsMLGBk+mM4devLsqDCA1eSOwf/MyjwUCwXNRZ5LGEd9XY/PK2+JAF1Z2KI4owxP/JHA7thp51g54QxqfYTrC7DgQhXHP7RBdSHBFnSh8JtyzgrJ/A1beZAyf0QwP/UioOlUweVE9yQa4WRrgkOERTewlcpBH8CSM0jhMfBbSSA6hi/hm9RDr+RAWULZvgrcnPMVpOI7CUSgGYULWO249Ew/Q8NiPxkHPzssxWrkiDS7yfw3ah6LxSWrHZeM2rGEd+h+c0EOn1pN4KvXYQCkc5cI1uMjz1YeAsuVjgI7jiA/8B33pIJc=`);
                U12[`mapStrings`][`push`](`1,Hurdle Easy,MuadDib,489142,eNqtl01oE0EUgGdb45K0xYg9FLyMkEOKWBBFD0IzlTQKEokYehAF1/xum+yu2U1j9GAOFTz0INhTUShE/EcrFsUfTPRS8VTQeyt4EAQR8aRI3WT2bdhNs5mVvsvwdr95+37m562P5zN5BXlQ39FiIZlL4XFBLSM+WhSSYfEc2Y+aQkaRRULf000J/TD0mYufjzwavAQ6CRpgr4/3KCrikV167Q/ILKZj2faiBwVDJxAHal3EVj7ext8ZO9ZS6yJi4bkahPJxX1NCa6iD+GI5QUvLhTw+4PMgnjyZox8q1On7oPlEoTbIiOHCRGVDV8nDr5TXFtj423cpLyErf3zjVJCFLOVz2MpHKs58SWHj52KUn66w+XOZuIt3ackd//yTu/y8/OUuP8Cz5ufNoLv81Of/bz1cOGvlR5Fzflj5dzspf5qucBJGltEUD/q9XkUcrPtOPPHu+hMP7xkC3lw/k4TNH8gnKw/7EeIt4U787vFTuj+wH8F+Nx7WJysP9YL6duOhXqw87F/jROrKw3pm5aFecL5146FejHzdeG7mc7aL/bdVd/ziFmu8BkfOUD20Gnl1w389YPJPA458zc7fe2+NF/gJOta+3B9+8PjKB5N/FnbkQ3a+epXy6qKVjxj8z7+H+kvLAyb/IunI1+z8/DXKn19hs/96xpFvs2/UxzyfgY9WjO4iuLz3mxgz+dotR75m4+EqJwHD3zXbuWMIh7oKB3PgDIG7a2xokur227/VHRxsdAdtFnvMhgcamekVpkaGQCPjzLtoZLa3GhkcTMhKeRj1+3hvXlUks3uCsNpl/SbqC8tYkjWcF6ZSPi/bHH/jQ1hOYy2b0icqI6wTESu47XBRw2W5iBOChIsqs2c7RA3r2cCipCpiQdBEWdp85/xRPVdYFTOSmBZ1BzXWiXwiK0iZ1OZ7tDWuG55SWfEB3BTjB6E1q605gR3Ecfo97zmpCCXJy3Hehv4PP4ypUA==`);
                U12[`mapStrings`][`push`](`1,i came to drop bombs,JonesReal,637,eNrjYmdPzy1gYGQQyVRITsxNVSjJV0gpyi9QSMrPTSpm4PTKz0stDkpNzHEwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIWsXOysBcUMLAfSGlBNYGRAAw6pDhBaAk2CiaFy7yyEzTCbHkD4+6+FS3g9d2nHaS46YIRZdMAfTYY/ICexJC2/KFdBIzm/oFKTi5WBxYFW7rYn2d0HcLlbDM3dSM4/kAZ1pBoZzj//YR7C+ZeNwQBXsON1hQOtXGGP4QpZ7K5AcgxM5QHvBlyOwZHoGVjBjrF/ORMEZmE45qfi7xAXXSQfcMAcw8DGxc6ZW1yQ52AJtTz1AfZIZmQE2sIaXJBYnsfFeYAo1Txg1TAfch4IOgDRlMmAR5Mwsia4Xgei9Eph0YswIh6aSnMU8BihiNsIhEeIMkmDoElQCgDJ9MBx`);
                U12[`mapStrings`][`push`](`1,Indiana Jones simulator,Querp,194122,eNrjYmdPzy1gYGEQ98xLyUzMS1Twys9LLVYozswtzUksyS9iYA0sTS0qcDBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhSxc7KwFxQxsDOiAEcZwKD8AoesdILQKmkomhv9Z2QwOjDNBYJb9ZWMwsH/AgANwO+WX5iWnFik45ZdwsWKxmgVudQ7U6kIDCJ3YgG712c0NDA5lEyDSmVBtAlA6D81gsFWMB4hVzoQaDmEwx0DDgQPD9IU9KQz7YSFOMBxYnBKLU0EBAHeIYwNa2MPtdmHAHvaMKHbCUgEuOxkdRBgIAqCzcnKQ4+UAzFlMDmVQEXOofbDUBzXW/sPBIAvd4lRoyB0goHw/qnJYPBAOOQ63nMyCgtSiYgZGLnbO3OKCPFjKcAg6gN3njIwMrAyswQWJ5XmcjIxAxAAAKE9kMQ==`);
                U12[`mapStrings`][`push`](`1,It's Cold Outside,VulcanKittie,1057557,eNrtWt1PY0UUn65bKRWVjX1o4iZeWSKECAot5cMNHb4WKrIS2F1Z+ZACBRqgbWgrUV/6oIkxJvrig/u07yT+C8yD/4H/AD6uD2YTk02MyWq5d86lZ+4dZoaPsBJuSE4LP86cOfM7Z86ZueG6uvXtAgmSG6lSS9Eazm+tWh+XS8XsaoY0PChvraRzE9lSKZuhcWI/tJmgJ/nnmv0kn/LvX3/5+9gvka/gO23lwDfDdcFCkdQR8QmIv6A/9CLpPtdIS98kCSSf/Hz4PEr+FrOf5AGRPOGh9Mrm+k6+nFsNB4+GpilQSBcZHnre+U63LKwpSN4bXSABcfYinta//c+9kfZoFd99N2tiasPQmDVZNbSUzuaK/sayRWHwDHXkg4ot9//6vnvwu7lnMDi7yZfkqT+e3vjmj8EW0gKTO4Wx7L6jkk1UuL9oh/OBjfDBu7iMOnL/CffUNTJb/rbq2cHKsfjkEf6T0iF+nOP7MU5coSq9bDw4QRdP+wiaESUK/drOexU8Z83k8ruH3qOjfC4LV94z954nUK6ztOCNViz3/3aj1E4oLn6A4zqwlOI7BW93KfB89jSEvXiKBHdvJ5OxqtF4q9Mm0oDUFbeFhYsqTAUXNGEpxSc47iaWF+GKLtsV0+yKFbditisWqMwVd3h4vk+QlJrK45jGsJTioWhIYHkRrojbrli3ZK5IGa4az7i0myCpdEUvlhfhim7bFYUfZa7g2xFtI0gqWaHLorghi87RFQnbFTvSXDFkmAY/MMwtnYa55Rxd0WO7oqTcTHVZMfD/ZUUvqivgw0tQvbhDW7jArhl6b2+vWgURjHcLcW8V5OC7zPD6UwvNbOc3M7xKYBE+zCWamLPng1nRyzOxGKLiGPyVrT7WLWamH8WrUQP428qEg/ERHAQ04nHcfOKtGnyHcht19K8s4agPCcF2pP/f588P8QTj5Q0FxzMzPNg/jucJssZ+G2/QK49Vs0rOsnNLJ6pM+VDkNXdwqCneIUjWDN7xxVSNsbzLou9iWYNvR/izX0ysfwBHmXwxGcarFidTMcODPaN6i8n4wQiLYZxPlsD6Y8qo5/oPzPAQHJZgv8yfywzjlf4h/njijz8Z2Z2UnCOY7K8YkL39hSa7LrnA2edFLiCLKRktTXsgOCxN/WsVf/yZksvp5j6jskwKjS3U152KTAotTBxLJblCmuQCUvVg6dG/IvQdqky6LOCVkW+K5/Z/VFEd7/DF52Tswf6RkmuNIbyaXMQfTxT292C7pfasGNoDO5Mm/mRkd05xdguY7A3u5O4qyYXJDv09HOb2a5I9qkl2yNRJLD36+WEMaxXIHpKRRcCHFIuzYYgH+6FAa8Z4L9mZfycq079s4TImqgju9JJZ2bN8YIQ/GRmdY4LCwWVrSGBb1G1IMhWzBmONvoANiXMSWGq8WsxLsJgJ39sw93qdZoXr9expD8xCw/nPMzvt5YLvwK+7l4BxYdU6PAP/OjlLAtABuMVbI94XPHjQP1LBLPWyAuPbhPzb5NH/U/9wDT6hvPR08G0CnshZ96zqaDpUMcPrXwrbLDK4FHbw+pfCDkv1L4Ud/fqXwg4e+PChXqcCJ8yAVxVjYK8uXj8wguP5cjHjGxVveN524blKkpsINPeudSnpebeDfyjM5vhVISxriE8J+D6FPdPMTH+fmT3QBLr4xePtEVmk1J97bGb/QyF7NSn2BniFKCRUwTL8FDXCu/bq4ifM7Kecb2K2luLnKngPbFbgOf9pRDPLbCxhfNNZRfV18Y0T94m4BQfcLzeqSnXeOixqpsI7sDVqprYl3jpwqWxN+G00SKV+vshw2KO0f5bPd5Zp2UP5+YT2OcU8x88TLf/DV5a29OYLW9Gcnv0sBW8V6PmH3af4UFR5vSG8taDyJ5z7TOn5k25wPoubjwzPk5hnc1AkMQYneKr5cr2ezURmD19X9qmefoNL4sMksLaV3swUybVwXf12sZBzo3mH+f5PIBCo1qDBmUJ6Nxeup1rol220VR8IVH8I+Q8pIjZY`);
                U12[`mapStrings`][`push`](`1,Just brawl,Querp,347461,eNrjYmdPzy1gYGXg8iotLlFIKkosz2FgDSxNLSpwMGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFzFzsrAXFDOwM6IARXcCh3wKFhgMmBnXLQAZG+5czQWCW/WVjMLB/wIADcAXkJJak5RflKphwsWKxmuVAPkSvQ24ChPaEOkGFAd3qs5sbgOIkqj9QOgEin3QARR1MH4b5JKonJygMsQYFM0YsEPJakQKYe4BYr5GonnivCSK8pqCRnF9QqcnAwcXOmVtckOeQ7wCxJBK7VkZGRmBqZw0uSCzP4+I8QJRqHrBqqE1cnA52EMkDnrg1saBrOkCUJmFkTQi9sDTiQoyfHIhSje4nWFxlNxATbESpRrGCk5ERiBgYAOqlkqg=`);
                U12[`mapStrings`][`push`](`1,Just Fight,HeyListen,84917,eNrjYmdPzy1gYGHg8iotLlFwy0zPKGHg9Eit9MksLknNczBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQysDOiAC8Y4kOcA0eIC1SqAppIJRDA6ZDeQovwAacodygIgyiNRlcG0oZtOmnKY6Q5JB0gxnUjl8IBMgHoVFmdQev9Pxd8hLroSEJVw5Q6JkBBykIDyPfGa7pCPZjoDVuX2L2eCwCz7y8ZgYP+AAQfgdklNLMlQCE/MySnmYsWSQljhVqZDw8EParUCmko2htjKWIYDpCmHewyWMuwYUMIDyWM1i2qA/n+AGsouOExnYlhxewXQMSQpJz7YOANyEkvS8otysQcam0MsNFqzEyB00AGU+Np/YzKjvOEMPaDFfmePMBwgoNweVbmDC1R53gMU72BJDWDTSVMOD+O4BtQowWE6acr3w8oqgmHM7JmcysDBxc6ZW1yQB3dUUgNWxYzALJLCwBQSxMV5gJBSIAQp9eHihBVnDqkLcJpqxMDsFGQIVFtIWK0GSK0R0AmEzAVCkLk+QHMPFBJWCzLXB2SuHjRszRlwquViYPIFOZeQUqBzRYBKjTgZGYGIAQAKHrKo`);
                U12[`mapStrings`][`push`](`1,kys,JonesReal,9331,eNrjYmdPzy1gYGRgzq4sZuD0ys9LLQ5KTcxxMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCF7FzsrAXFDCwwjQ72UAYjAxpwqMRuFQMTg3VbG8JmmE0PGLACTHP7LVBonAoYuAJyEkvS8otyFQy5WJGc7EmGk4/4RhDtZAYGQYTNChrJ+QWVmigOMMLpAKjFsGBHcgBIuf3LmSAwy/6yMRjgdgDC68Ygmx2yG8DCB/Rw2hzgAKEZKLRZAmEz1OtIIXCAfu6Qx+UOJOc45EOsOWBIKEKwOAeUIsiJEDNwQNDPZkRaNIN6nYGNi50zt7gg70Am1A4FHHmPkZGBlYE9uCCxPE/BgIvzQNEBItTzQdXDAprTgShrRFG1IXQTZakMVt0IQyIZKDfkAFGGKOMzBEoBAAy1vko=`);
                U12[`mapStrings`][`push`](`1,Log Fight,raspy 667,826797,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`);
                U12[`mapStrings`][`push`](`1,M Slide,MuadDib,191974,eNqdVc9r1EAUnhR3Y6K2i60geHCEHry4Iip6kGYqiyK4ILgIItRNt/tj3G4SmmxhrWgOehM9FNFD8Q/w4M2Th8yfICjosR69aK9SQWd3frCTJo7ru8wk+d68733vzYttmu1eAArArMKbq3ilSTd9d6WCl9E5MDI0DxRzvrdG5uzw58f3v159O7chntFJDtxnm4UgBKZwJBsltimClKFbMVtXCTvy54ndWuXUUUrrzeJ1+v7hZHgyKd7juDuxim8zfJLmMyFe8mjz9flFti6khJhi+ERI+/HsyJxtkGPFWsf1uqFdGJP5AeT6y7BurIRLVxQYKk3iI0UuhLNpyvMfId35u7/fZeDLQFmlMdmMhKctOy1HBiNPHaHz0A7CofHeVvR6wo+dEm0g3XkeefmjCfGyrP+bzxgEWazF0FNWbTRgHxZffo7qY0CZHRjPGV3jm+k9Odf+3iNoQjwRvXee427z9QLX4Bu/KkJTDT5J4SWPFvdb/6BczT01i/j3S6nzUZzJh2jweXyI4LOk0fMux99jVUPdWOGffDp2en1rZ1uOKg2eFF+/aAbPfslR1YnVOgn+dXYHnR9X3m+VNudlvhp8ksYv8xmxpM4K4ed82TSOn3lVlvpr8EkK/++jEID9tmn1wsAjdZQ9XqX0BpgDByo+9PwI9txu07aQzodeyllQavjBAPotGHWa1DEo2xYRAlXj3GCH6e2zkA5IIxwBM5f7ERz4fdhwPdgPKTNyQ1QE5QYogVkcwZa/BrEXBnjNjbDvUXJI50tjzgzJkQW1DFlBpkGpSrWCIW57uIUpwYhG0DnSCIeA2aC/qXazbBmGNXzzB/rzEqM=`);
                U12[`mapStrings`][`push`](`1,Meridian,Fantao,240,eNrjYmdPzy1gYGHg8E0tykzJTMxjYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIUsXOysBcUMrAzogOlAHKqAQ1gDhJZBV8lwdnMDgwNpyu1fzgSBWfaXjcHA/gEDVsDIQABgKHCod4Aw2ILySxJLUrlYGVgPNHeAhQ40RuDS1Qml4zCce8Q3Aqdz7T+pHd5z+/k6hHoWn9S0EpCdDrSy84Cg1LqZkQIVCPWsQZnpGWBL4UbnQRnMGJbGQePFBqulBwIbUBKUQySUDj0ApvdvC5fweu7SDrQKpNyBgHIHzitbxGan20CVExvrwMhzyi8pyc9l4OJi58wtLsg7kAQx8EAkrmTAyCDCwBpckFiex8XpQEg1MC6E4aoPhDAQNFsIYTYh1UCzBRFmR6IGDDbVfAizCakGQl6E2Y4NBM3mQZhNSDUQciNUx0BDEBqS2MzmR7iEkGogFICq5mRkBCIGAA21nbU=`);
                U12[`mapStrings`][`push`](`1,mess,Querp,299228,eNrjYmdPzy1gYGVgyU0tLmZgDSxNLSpwMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFzFzsrAXFDOwwjQ5JByAM3gNQlkNYA4SGWcUBNfJYuITXc5d2BiaGiI3FDAwHSh3A4gciGbCq349Qf+7DPKC6nAMoTsZjvnVbG8LcA4HY3bN/G1y939kjCHMPRONwP0L98S8pSO4gbP7/rGxESB3wJOj+s5sbEObi9C/C/CO+EUDxNKg7QhgIuWdjxkqgeN4CiLwdQfP/TysCipdA5YMOEFK/9dB/oHiRAsS/ONIDUvxW/M8Hqis6gNf9SObv9PkF5L+cCQKz7C8bg4H9AwYcgCsgJ7EkLb8oV8GQixWRdGEJYzTpjibdwZF0HTgVf4e46EogQk4QkXQVNJLzCyo1kVMwHDDCU0A+JGU69FtgLedhMQQv90nIPMYMHFzsnLnFBXkO0PTvYIhdDyMjI7DeYQ0uSCzP4+KEp57UBUSoPlA0AWJ2tgMxqqEp4UAMPpfwgFXDApDTAZa9NIhxPjyTBxwgRjU06R8IOUBC0DiEElbNycgIRAwMAO3uPNM=`);
                U12[`mapStrings`][`push`](`1,Musical Chairs,Juju54,264212,eNqtlT1s00AUx5/z5cYCCqIDZQBH6hAGiiilUqVKOURUlIqiABmgQ8FNnOAqsY3PbmkRapG6wABsCAbE2AnByMRJ7CyMLIGNBWUEMZTEvrPjxFZsibdcLP3e/33cexeB5xstHdJwZNnCSlVqitV7kmJgyCxZ69bFWTQLtqFp8FnhV922Qod+721/v/Ju4iH7Zn6QEfi0joFHm8SvIJDru/YPMk9d8vSc8IOQgS+dN12O8iguf4PE4klMHt1B8fRj8khux9OPyaNnb51TpPyTAT4BTz8v9ek3iZ8vBfOf2Gh8fNWz14U2BBoHI40r/Mn9rRTPnkAvdSemQmP/XnfOoekqNyWzrhkt8byQBp6UKa+GBUUbtBtTwdUUftIqvl6wLaya/tAzdmjWNhY6gfB7f+hSyEUlgtvz/1I95qUq5quavnWmlzEyOyNuiEVGGhrMYP/bft/Vx8hgtj8DfNfpGT7qYNmhDNi7ND/Ug1sfcNez6HySUkS+QvnbEflVyq+RaHyN8kpEfcoR2uGRPJ0uYkTM5z6dSqsdiWdGdmg+LM5UMB91AqIsP8rS5X+OfHtyaXrPLmJoWsaWFdUypYZs758y9PyxWgb+21B9N3D/WE8j84t0P9lsXIPgXnGUt17E4ylHGqLfbzr4/XC3dd3pn/uf3Qnmo74fUe7O3ddHzh2hmv/uhm7Hez3nYEzgsy2sq67IAIzoEHMcB2VI39SlTVXIomIIrbddugaHbJq9OVlUCXNCrtMKHO938nxXQ3w1z3cRTgb4ehK1EAlae09iBnLhEq4SCaveEF2lBciPVPIEwzpDt6InmIdzUQW9kpUQ3aanewrmYurSI5vkhMdJvrqNJ6uSblqGfFVpKWbywWFDqikWztUNqSXjilaUTU2VTDm5dZqCZUNrGDLG4xuygRVNHdc2VdkoFVPp1EJKSEHq4ODgRwrSO92zN1Duj27MzORlR0Rc0VQZ4B8wypfu`);
                U12[`mapStrings`][`push`](`1,NeedForSpeed,Querp,678035,eNrjYmdPzy1gYGXg8UtNTXHLLwouANIMrIGlqUUFDiYMYOCgx4AC7N+lgYH9Byi/peqh+zqRahjfQQOqkIWLnbWgmIGdAR0wO/R9QBFwUIHSJmgqmRiO+EYwMBwgUT1cXXEChK6E8r0bUNWzgAhGhgP9FhD5egeIlx4wYAWMDAQBXIlD4woIDTXbcfr1kgRsOpj9S0u4WLEEE4ZtMKNg3kdSqcGjyMBo/3ImCMyyv2wMBri8AQwnJ3esVrLjtBIzpMFWOrRooKovXICiD0k9yJ2MB0hU79B+AFW9Cc6Yj9hYDEwpJKqHq8uB6HMo2wBJAR8w1K806kZSX+CAot7BHqt6RJTAMgs1UlbZBexhhhHLnnnIsXygE8OkIqivRaD8tAasvob5wuFwewNJvsBIqcAUI3Szpt5Y8ZJDowREiR92s+Cu5QrISSxJyy/KVTBh4OBi58wtLsiDmx+CwyGMjMBSjTW4ILE8j4vzgCcxqnnAqhU0kvMLKjWBmiKJ0SSMrAmhN+kAEXqlsOhFGJFJjPWKuI1AmJTvQIRJGgRNQhhYRIzv9Ik1EGFu6QMizDUj0VwoxcnICEQMDAAAb9Co`);
                U12[`mapStrings`][`push`](`1,Neon Triangles Beta,ProBond,328588,eNrtls9r1EAUx9/YLmlCwYM/EE8reFgPImiVnprHUtDSbWnrQi1YSNiNa7FNwq5S1EsO3j23p/boxX+h49/gUZD2WChl/wPNTt5kmzSZ2eLRfZdssp/5vu97mXnEMozOTggVuLHsBX612d1y/c6216vWvfcuGCvdoB74bZwBEXgfMmGfvxFh9+n+y6eT599vfpb3WCNwwjIqYQ8MyAfLP8Cvs5lrGtcEzuzTvUHs2z+fiLCPoSSsutt61+kGH/y2VQGDb+X+vy1/8AVK3cSkij7kUy/9acTcPHEzxbzd/7E2+7DnxXwj5hlq+KMcz6Wf1wmH7VI/DeFng7gl0m87Kj+AG8QtSx5UftLgzSjh3Ujlh/FV4mTdOf6SHw2f7w/eIU7WMQfq/kvec0bjm8kb4ItRIX/Jj3OQ8Kv0HhbUPJe87OcLUPdzHbP7c07N4ybP6st9B1B4lLiT9IWvkP/HWf5CfwQvTz+6vFD/KM975H89y5ftB+5Rf15FGT+6/YlvSf+psj/xeuJbxxku9f/r7Pfm4a1vsp/plNOMGgaaUAFTcuQOZhT+64xi4xkVqf1cbUax8Ywaz6j/fkZdlzOqWmsF4ccHMGUZ5k4v9NFL0nEHS0RZ/GlZeRm6u75l4nZ1BHpa0JTJMrkuRWw8/nq9uGi4VpdQrL1bsDaVkOeY07kv8jwJ98olhkpdPoJSTas0rE4nGFc3CY9GFRzq6koWus+uqEsXkzFzIPAXadH0xg==`);
                U12[`mapStrings`][`push`](`1,Niko,GayfishDeluxe,426752,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`);
                U12[`mapStrings`][`push`](`1,Nuke Alert.,ROBOCRAFT GAME,412973,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`);
                U12[`mapStrings`][`push`](`1,The Obelisk of Thoth,Stashington,268062,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`);
                U12[`mapStrings`][`push`](`1,Omega,MuadDib,212593,eNqdlMFrE0EUxidN4pq1MdVWqCB0Cj14sAXRQ0E0Y12QUqutBIsiwjaZpEPJzrqzsbZFG8GjNy8ePQmK+C/seGlPilTwXG+KIEq9iEicJjPb7pi4rS+H2dn85nvfzrx5pmFUqi5Ig/SVKq7YwJis2SWLzKLToBloCEQi/7XcjPw3OX+49PHiq75lNUfHJZg0jbTLgAH0OMIZaj7wc3IJiY7Bz8FfBWu4X5h6PjYh3u+RV8Fpax1akeO1etRJl9SnGy2+JHVnW3N0S+pvvL46Osyw4nkMn9d4dEP6V74vy3G6Pc9jeN2P2gcONX5c6r94+3lz+cuHUD+GDzQelZ62/lf7j+R4Vuqv/z7TvbCWDfVj+EDnlZ8peU5qtKT+G3N9bTV/76/v7cAHGs/LrXPnc9LXTRTdn0+PEwMnn4yE+jF8oPF8QvLzdemHR/V/fH+2OvouH+rH8IHG64EewUj976jnYWsGJML6v67xGLWr/21eXXm73vbqC/LEhZk2fAF04pv+A9Uq3p9qRn4DdIhuuBWyA5np7eahrhbo4r62GUMdk282Xor3e+WHdmsW7DQYRoofU11Bnur5emRXO3WrsKstyNOa7tCt/ldf8f0gsk7X3/1pAbDfNDJV5jphJ7zVnkuIXx84YFHoUB9W7XlsZlDcGlFnvaCnSN1FSMvQn8NioTtiZsK2+I9kh8XpZBCJz3AI5MZqPlykNVi0HVhjwhl34hP0gF7iwzL1IHGYSzzbJ9QR5pATnzO3ZY7frscmOQh6JsVeQUYqDikTYdAXGeIWigxZYBTnbKeCRzLJhPkgaRSXWPJu1rNLpMaOFm3Xr3n4EqkSf7Ds2VXMCtTCPnVsH+fogoO9cSu5mLuDPSa+akDyUx6teJixFEh1pYwUSK80Go2t4kiJ8f72DIic+7IFkX+eAfAHNp1IGA==`);
                U12[`mapStrings`][`push`](`1,Overhead,Official,10,eNrjYmdPzy1gYGTg8C9LLcpITUxhYHAwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVMXOysBcVAQ6HAIbsBQmdC+SpQA17OBIFZ9peNwYABF2ACYi5WhIEHEh6guNAhrIFEAxkZCACE4+Md0OXYuNg5c4sL8g6kNeA3A2gIK9DlnAcSHAgqZAErDGEgqJAZpNCBkNVACLbagZDVQAi22oGQ1UAItBoA1P0uNw==`);
                U12[`mapStrings`][`push`](`1,Phantom Menace,MuadDib,282835,eNrdV89r01Ac/2bYxVa2VreDxyfIGIgdYx5E6PI6OnXoxOEU5kGWpukaR5OsebFUBaNMvMg8eBAFQfDgzX/BgH+CB6/zuIt4VQ/zNb+2JE3SbV0ZfnN4Tfr5vvf5fH+8vGRYdqWuQgqGb9Z4mSh1NC/KvCACO6/zlZJUxhfAMnwWfMb9rFrG/XLu1x/+uPJ59JF7j8cdYDbDplQNWFP2TwCM+8Msm7bLdcd1KYAcgE/Fa3SJrbdte8d9m7KM24Qoy6ToglXDnr71wX54zP0Xa8v2mHPuFRxc8Nzs3R2CIbxDOEjQE/I654tZFN6b/7HNFB8H37gL/2f74y4+zrxRAdiJ7KuLEQFiuN9n/i6Wzp8OBrs4vW6RCUXPjum9fifxBvQ7iXNwtJIYbclJDEbPimlMvRxOEnHfk4j/oyTijknE/e5E3PftFB+17fQgSey4neJ+vxNDDweDD2IWHOcWgAnWXRLe3Cte9xcPFpxkNszOfPaIDwW4YcQFmPninm/2GeABj5i7YCs+ACF8PEHYJ0H81Iiobrxg+EZuyy7tUJstJbQN/vrCSGgbnHba5vmmT3TxzXeyvJuTy9avYQMOW4NZSmx9T8NLFK9hw7edPrHrFj9TowqlaPjGoAYzH6jkacf/suPn8KKHe1+hYKn3p0f3fetpCKqzD3MH1owTNHu2X8172OKDmkPqAEYybLquqd4ubwY3pR3bfg8nSgqSFYLq/KqYSXfnkxMUtYWUKiI1kTqq+W4doVtgdkYnqKXoSOBlpGtdMxuRCKoqDSTJmio1eCIpcu/J5eZprJAmrchSVaIESbeOrEA/d1fE3jMaXKQTr2rdwoeQZc7HdiZtugVdiipUBkbbbHASkJb0COTmrOiLFVRu0RKRKC/zjpHoeApSmiDKNNc4CU2vkzBTI0TVLk1MNJvNPK0VopfFvKDUJ5o8EWrcg0Lr6lpl9laxsbp2e6wq8kRviAULly+LY6QwOTlFibk9HbNUzpKeBKQKsm2geR8nAoetGZOA9BoCSDNMuu3zDys20iY=`);
                U12[`mapStrings`][`push`](`1,Planets,facetious,1566,eNrjYmdPzy1gYGRgD8hJzEstKWbgTEtMTi3JzC8tdjBhAAMHPQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhaxc7KwFxQzMDGjAIRJKq0ANeDkTBGbZXzYGA/sHDNgBIyMDAQBXcKDeAWKHJ1Tg/Id5//8zMHAB/VmSll+Uq2DIxcrA7JCJ5jTPAXBaxMZiVKcZgZx2YBA5TRDhNAWN5PyCSk1w4BUdQHWhJf1cCAfdh71wu/DAIHKhBIYLoRQDGxc7Z25xQR4sxg9E4nIEIwMrA2twQWJ5HhenA1GqecCqYUHCCYvYA0kH8GgSRtYE13uAKL1SWPQirIfGB0luPkCUJmxuBgCYqK6p`);
                U12[`mapStrings`][`push`](`1,Quicksand,MuadDib,286014,eNrdl71rFEEYxt8VLutuiDmTFJYTSGHjNUlht69yIBYxBgISEHLr5u4yHLe7ZneLM4JBLAQFS9E6ZUifKgP+CSlsky5VSGssdHZn7mD35hhBEJmnGfbm43l+895+jGvb3X4MNXDWMxr0Ej/cBns187eb9AWuQCFsQEneZaeQdyWv3706f3S0sDe8xrtyYN21a3ECNntNimv2QfZYUBFuyvbT/XLHDTjAxwAnV+Vx3hkoZYFWFjqLPzea9+4glWs2Rfvg8/e0laespp3a2PHDXuLWOEksgmCX6UiegJpEJvdOlwtNIgGYIYVkMXL3YQ/7eDHJvd0S7dKY+/Wvwz/fR64CNxDLscFomaHR27j031DgFoajyG+wPL6h2Z7jL7m+/k2hvR+y0P5+uTTf3otMVTrBvAUmM1fpBPMzNJm5SieY14yu85qyzp7RzJ6KeZTYSOYxuoIZja4zKuuMRt/PqLyf0ejnNiqf22j0+xmV72c0+jsMld9h+F8dGkaeEw4NY2kFwz88LgDcdG2nn8Qhk274nE2AsWABppsRCaOU9P1e23VQN4cnn4d6EMUDEnVIutPmE+OG67B+S2s2x3fDQd1A7nAbZh9mKRlEGQn8kGQJT8Ze7msN6jBPU9KJdgkNk5ju+imNQh4OdXO552wejqVPtSa3oL7K94oktBvSDuUBU+6gm8gdZsAO+Amy2244luXkv/wGNIO0Hw==`);
                U12[`mapStrings`][`push`](`1,Rasputin's Foray,Raspy 667,861261,eNrtmM9LFGEYx9/ZWmdnsVjCg4fK1SSXoEjdVkNqH9KUIo3WX6su1oImGzlOTiJm0BLhP+CpTh46BxKd9z0EnYowKrzZKTQIo1NE0Luzz7vuvM6rM2fnvbzOO5993ud5n+/7PDhhVZ2aNkiQRFJZ05h7mNObzGj3zGx2gWizbGUhmki0QZxYAxqJbSR/3rVGchufnz361vOqZpE/QwzBqrAaNEyiEnEo4gLM09JsgP1FwMKV5Obz4niR/NRqjeQGkYzAlZ5wcGdLuIx/HIWhfGklhfM4EiGM4vtc9ZtqfYxtGYvFiALXS+u0D7k+O1/Y+rD5e/HHF87vCqnL+fQYOdrQ5MB3SvmReic+KeUH6k478HEp33fylJM/eE5RPJ/N+r8DXWdrWbwS/+18wS1/fJd9Z/8FviDwgMqBBM410nitfFFAew0uea6XqzgPU7sevgr6GUb9jAr2Q8723Us81G9kdX1y1iwKneZW7EKvg2u40RA62I2B8uu79q+jev7dEebo2970zkFDLc4XkdsW9q0i6VWzIiGNwsx/9wcTEyQdS0sOiRR4OLb++Elr/RrjYXmZHdwZXD+PcwTnc9yvhc8nXsZ+Mf9X10cq/Bfi5IKvqCVWvBTLEzQL9vG5sGP//es88wcTBu1CImsE+8GSP/SSEGfEfr5ibQOPPB3B96PgKl90Hz0UBD2AW/uBkv0yPwau9EA98mX7aepKP9QjDxn0I0Nd6Y0OUk88DOH7TN7OtzjrjWa88cALzHjenT7T3ni4I+RrP33eop54SIEzH5XYvy2x3+jMl+tDv1BXJIW+zN8ke9tX8L7wejLgjqceefeNQblR7Aj8vtAJvyP4HcHvCH5H8DvCge0IKasjTEVt+vQ7gt8R/I7gdwS/IxzAjtBb+XmUzmzIvsg+pbITs260+x3Vzsnc/Zw+RUJhVZs2DZ2aEVtwu1xk+QgRtd/IzuvR5rAGDz6W+IkVKa9yvoXx/B+geyDlqzjfyvgc8mN5KR/kfDyslQ9vD/4w5y8w+4Owr/+HOJ8Ia5QX1T3OJ8D5NsbjJ0Aal/MK59s1RdGKgv8PhRK6Mg==`);
                U12[`mapStrings`][`push`](`1,the Rising,raspy 667,863711,eNrFmE1ME0EUx2dLS2lPaDiQ6KEkHIyxplAoHpR9EFM0GlI+YjQapUCLxVAWSoJUoRtEowkHTEyMHgwXryZevDImJp6MRg/GGx7xYDh4MR50dnemdL/oGxPjXLq7/fXNm/+8/8xOo+Hw1IxGQiQ6ej0XGy6UCsUpEpnPlrSlWCrVA13EbHCc2Jr6PW82dZffr5W/DrxouSXu4QgHm6LhkFYiYeJsivMBLFLrcxbsXwRMXFF3nhjtqfopaTZ1m/i0QP9ANOTRZZOrS94VtLuSO6SqHinOxvx4M0UXP07l4o9vysUv6tbnWT4LO22/Rk/HW5lk3vEd/BaWP6M7+f3z4bzq4PFT2DhsVqAxjZDlQe9yWoGljHlBC7zb6W1v2YLk7Y9JIw10tyMLs1ps2OiWVnhtjFvdkxBU7IUJl/jstnh3C3easfzv6Rvs+c0xNF8w+Hs6lh96zqSCOTleyCZG7SebuwweuBA4+OV2Jdn2EV4/slVg3+PPC8aoXWoH+7OlXK2L4WHCujgAK9YFdbjLNf0BS1c6Z/2SznNerGkFF3+yPGjoJMdTbcPOt/vyhq4KzH3A8hdflohSzX/FWlyhldjyUn9yl4XMulNAkq/Gr+ievJg7xm99u1YTH8nv6c/n+LDveNMbV2riI/m9/ME+zl0X78i/Lu/QJ4Hi4a/5XXs9NBPPjZBK8tjlTyF1myJqB1Z57fZZNdCXPXrftgQItwYzHfGUzcfrGvcx1a1E6Cip52NzPaWTm1hfHsvn2XNZPreN9eWp9XU2byI+1peCx/qsmn9dH6SWl2vj4+p6j09I8sg6nRiT0pNK6kkl9aR4PZPlcm183LpCJfWkknr+Ux/3Em8fC7cGM53xbp/9WN/A7seD794w7pyO9eWz3jR7LstnAFt374cus7oW8bE+FjzWx9X869bdq4FMbXykj6t8QpJH+jito/XMMD2ppJ5UUk8qoWc6Uxsf6WNJPamknv95P07Gu8zzzSo/y67xYTW4XuPHwO9YZbyXVhvl7/IwQXF8jscd3H+/lz22nTf+bIjMlLSiWM3gqo9s7OjaRMIjWnaxGOuIRiiCDwu+k/EX9Lp8o+CT0Qgg+JDguxgvVtJ9+KDgu1k+CL5B8CnGT0NdPiD4HpYPglcEfyKiKBHjv4E/Us1GhA==`);
                U12[`mapStrings`][`push`](`1,Roof Fight !,catqwerty2020,555053,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`);
                U12[`mapStrings`][`push`](`1,[TRNA] Rust Valley,GayfishDeluxe,787166,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`);
                U12[`mapStrings`][`push`](`1,Salt Factory,ROBOCRAFT GAME,305275,eNrtWF1IFFEUvmOu624SSgYiQStJ2IOBaeoWtNeyFftzW7Uy+9FM03DdzZXEemgUQ1CjB1EoCLK3CCoqEuphxx56DnosbCMiCglfSqIfm9059+7embk7M1LUQ5eF4c5855zvnnPuueeu024/HQihdJRV39rd5/K2tvUFewfQKn/djrqd/ipvg6umat8uXIbiAxciZng+dcSHZwHmw+ff1NzJvUDmuAiA2U67LRRGdtylzKUm+LCCqCJvcC48m1hTKA2NjY0iAWcD3i8puG2AzyaUZmY7fvzcKuOnpiaRoNKCsFdkqEWmX3tv+q+7UQZ6/GRGlv9wNTau0SVFke4QkMGgAOkkMA1i8mqlr7u1ryPYG3CVlDhtyC4dVSBSEKzZcaMCxtuBdh48Dyj0Pc8O5e1+Xz0iL3NoaBAJElmWSTzeD9/LWPfhPYCPzvori8PtFF8L32tVeNATUePdxL7EZA6Ri7ycnzs2veaWjBcHRZl/lcjwpfphPR4VnoaTpE0zyK3VpA0TVpz+28JKLI+EyKscGtZSV1FbMDSwMR7cXnDBQZFjgzrVBeQescGiOfmiND545BFyUgYVimlFI26JmjQdeTu+pWq0+Yt104nFVyQtHodbmLimYLBBkxkWGeRpGCRHAYhI1ciISLYmhcTBi3winnfu9dGn+Q8TAusokXKWSLJj+pW0kU5gHh+ylbs0fO4/uJtUqSxkRTljOtDCM01SFnaxZxaKpGXTORpXxBjQPSR2GjFIFE1Ti/eQcq6TFeU6WXHuORP7FFGAKm6WSITsYQNXkOogFSKTG8S0K2YtuYJ4mh68Du7RWahXE7WVE9fBc6/IfrChyyMjOgv1SYwcPYNk/Pi4Dl6l37NA8ZeGh03o/1rwraG6OE/GT05M6OCrEW+9+nzcfLwun018fMw/JPUoPjcln4T9K5Xmzjh8+7DlQzBRS5TO5X/W/GNZI/3xrLnXaTlrErWvJLn2NaqSx0bJ1Kra2FpN7VPaXrcqyQzwvLOezNVtrxE+wsFTOdJmQ1ua1Iaztw0LZ3hpvFrzXWfSFZJFV/9t10WW7Tr9tpza6YbW165hAH2Sug7LDOLpjqF1w6dYTTo77dXcnOxxchHsusH0Njr4j/PzSR6kctyd/HlxUT4vzkIzc0TFS4v/vrQk8yE9lg/wx1PjNRWon+0SVY3Jsq4tm1Gm0+4IhEM91LtekVNuBJSJbPWh1v4ep0MyQguxAGfF0SQJHPhMFG7oLq6JDI1Qu4GQEBNcnSxEZSW4XUudLVyD6TxZYpcnK8T+TcnXkU2ogL8XCA0982kGKvp8igofTsGigK8CHg5BkH/oF91pjD8=`);
                U12[`mapStrings`][`push`](`1,Salt Factory 2,ROBOCRAFT GAME,307796,eNrNl21MHEUYx2drj+MuBqnFhDQar6Exh0lNQTAQk+4cL0fB2OJBtQStnAgE5WXhiHq06HmAROMHlQ++k9IYk2KslmqNkeSmJWljExJqU23SWM8YJcRGsb60pl9cbp5njpnbvTu+Oblks7e/mf0/z/znmVm309nVa5CNJK8p2DPk8Qfbh/oHw55SkhfYU7WnOuDzN3vqfA/W0jKSaHQbkZr+W2ei6StwPzb8Y93RggN4T70A5ridDiNEnPQJlrhn3fAglyiNeuDaxUn99COFDUs1E2QDGRgwiMaabfgWIvM5wNcovD/Cr4XA/6KMv5P/z5BT+Ni3Ct9G+fNqGP9hhb9y4OIbx2cmk3xc0psy/uLJQMX2UIfg64F7ICJfkf+5sih+astngg8AHwRuN5HjvXrX/NylpaPI68tvr7Z39PP3JpoeJzbN3dgTHOrsH+z1lLsdxCkSOsgnihTR/ZC6xyElGOoAlxK72ke/6ygtIg4yNfUu0Wg3f84GPbLkAgjtr5nijz4ZP2tKnZgYN3mDpOX165PanSVv3SP4Xv6c9YOehxT+z/Ozj27+8GnkkWNdMD6mHvlzP/gPB96vFDzExSBukWrkl7feaK7ZXih441POt/OMUZ8S7+8XPj9X5M0T/EFYLCOGrAcsTW95arh4b8V+zCeLco49f4g/R10Qd2xa6Of8OMQbjsj5gffEVsIX7vjA+0cKDzMudBSkLA2u/zmId6RN1mPHR3ne2QswX62g53brfNLoIucjbTIP+vXL3jMlv3Y3mqWA+20M/IN5DEG/dn6N/fRque+V1n9EPlF3vbKklCpINLK8vGTymBcochR9l8pfu/a3qScC+YSSJqos5j/m/+q9/Mltpv6FhbPm/2GYV+TxPTZ66CjPP+2g0jq01QPvFX7GeMAXom3gethYI+f3wbhYChsg/68Lv3H+ZRj/oEcugbAZ6OhPiJeF8jkf3SXPA/SLxUWp5DzmE9YB7VT8PK3oQT8PHZLHhy1FvyjqCefBl2z4Nc5VyflMiTcEPOrYKc9zbMH9zZnT+gjyGBfmlT4j61fzTydgvaAPUD/Mn35CrC/Ov3RdXl+7lXwuyvmkUag/o/myn+uV9Yv+xPo5HJfyYuE3zoM/2Yv7LOvJmq2f8+AvNloh+ycM/I0rlx+bvu0Irl/c2sT82GxtGsnYNOritQffhVp9TbcuSscL3A2Tu2XJ6m5Jx7hmBppNjdDYXshqPowA92tmm1dHPJhglUC+Ambje+EmztfB7lQruxT76ZcgW8CnHMRwNqD6xo7J7hb6n2TyQcxmtsVB40u4ZjsbNO1ZpDSR3ValsqUeK6vkvSS2Al7XrB1AG4CvQ+8A7yBzJ45ZiFT5f2GvcpCZw1MW/C7ga5Xa6iDzp05m5vUVoWf+uJUe3XY25ua+sODLbPnZ2Y9N/9+v8AVpxyfiiyDDsVIIoW8a616cSReUrboA93XxiZBrm5VsXYCH8+osXaDymVxQE5FOghldoPAZXVC5ThfsSO8CVq7w+f8DF2xKusDjbe83wsWJkgCHCvw+Mz9y7Qpcoc322rJOHrffu2WOqjbMkXmWJS8K6NfrLKDiax0qr7x07iO5bqerN2T0iQACzGZgzVxSjiYj+Gyf20UHdmSkNXJzgsZ5cdEeT/pO2mrHzWs7ib4sC3k56gvF5KV5odPuhS2Z+zrIFou+ySG6Mw9xE9lqP0RyJDzkpYl+o2UgLk0zf+Q/QMfN6w==`);
                U12[`mapStrings`][`push`](`1,Sandstone Cave,Sirestyx,231553,eNrjYmdPzy1gYGHgC07MSykuyc9LVXBOLEtl4AjOLEotLqmscDBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhaxc7KwFxQxsMI0Hkg5AGMxwkQQHiJYQqFZPCL3/p+LvEBddCQZWEI8RrjwSqiysAUUbkvKZk03hDj0AUxbYgKINSfnmdcEM+2H+uGwMBvYPoLZwQpXBAaevs4JGcn5BpSYXKwObQxnEuAM5UG+xwi2GWZjJgOIAJIu7WvQZ0AFceRqG8nkzzBgwTIcFGjQQkb21Phih3AXVETBbkJTv2l+H6Rg/KF2HofzE8QkkBBpTkDMotA6MhhZRoeXjjJy2HEZDCxFamIApyA05bY2GFv7Q8nFjYOFi58wtLshzKIS6IbEBq1pGRkag+azBBYnleVycB4hSzQNWDSshOWGx4ZD6gHhNB4jSJIysCUpxMjNyNTKzJ1cV8xYlpmSWFssnJxaUlBalBhTlpwNrtGL+stSi4sz8PP788rzUIk8X5grmSsW0osTc1OKQfJdUYA2YWJIqCdXkk5mbWcLCxMLAWv///3+QW+AMFgYWIKsOSLEA7WSTdIboUIgCVqEMADGvSz8=`);
                U12[`mapStrings`][`push`](`1,Simplex,MuadDib,228036,eNqVkj9OwzAUxl8qikn400J7AA8MTF3onqiqxIDaBZaOaUlaq8S2agdRWDowwcI1kBBXwHfgAnABhMQBwCmxqgaQ4VvsZ33Pv0/P9hAaJhzKgI5Iwk+jc0CdNDxpk37QhLmCXViS/xrP5b/l9dXFy8FD/dLUwV5uLHmozAUgKKpkNkE8+1rP8rWvis671uGiVDcF//Xtj/5HE+1pfy7/GX7R6vEopGPhlRcxVdNcpuSy2UyiOBFw4P3jXp//17/y15gbOFP+MLDmITcRnJqk5qXgG8aBOqy3GaZM4iQcR54b2HocgBpUB4xPMYuxHEW6kTc8V3XtsB0ATejaCdtQaaUST1mKByHFqdDJVM8OqEKNSByzCSZUcDIJJWFUhwt6dmYlC6fCmRWyBdWOnhUWZEhJTHRAqQm2Rk3YBDTQ32kYNVzHcbOTT8cLYtY=`);
                U12[`mapStrings`][`push`](`1,Slopesy,raspy 667,808262,eNrjYmdPzy1gYGVgD87JL0gtrmTgLEosLqhUMDMzdzBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhexc7KwFxQzsDOiAEV3AofwAhC46gCrBxJClqY9QD7fqAQMOwOTkzgX0zYHsBjD3gCdOKyOhNAeaBBvD2c1Azft3zgSBWfaXjcEAZuX+CweDLHSLUxEauANyEkvS8otyFUJ9kO12CGugo90+YLsdKLF7cmMM0A5YrBK0WwBut1OQQnB+WgmyAw74MdDRAaEIBxwQgBpvQm0H2GM4gB/uAF9EAJRAtMMCgoEDw35L7PkK6FKQ/ZjutcCpHiVzwNUbkGi+Honmw9wjAQ2Xl4q/Q1x0JYCZFb/7oer3E6teBEM9fveIYLgHrN7+JfbchAlYg0BlHwMHFztnbnFB3oFMqMGe2JUzMjIC0wx7cEFieZ6CMRcnTP2BSNzqOWDqDbk4HfIIq2eHqTdCqMfnHlaYehOge6BZAEZjU88CU28KNN8Fqj4Et3pmmHozoPmF0LyedACneiaYenOg+VB1+NQzwtRbcDIyAhEDAwC1XNIF`);
                U12[`mapStrings`][`push`](`1,Sobriety Check,CatAndTie,899334,eNrjYmdPzy1gYGXgC85PKspMLalUcM5ITc5m4HROLHHMSwnJTHUwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIUcXOysBcUM7AzogNGh9AGKANwqE3SVDBcSAoFWXDYGAzj9gAEHEAzISSxJyy/KVTBR0EjOL6jU5GLF5wKHpANUdoEEhgvwOuQA8UERsbGYDg4hIkRIdIg8LofgdQ+6AB733L2RBHTPy5kgMIvW7iEifEh0jxoB9+BPyKnQaAuCOisS6iwVNJVMDGc3NzAw7IflWoLO4oI7yxRHiqGZ1YhcbAr1PKgw4cwtLsg7kO+AVQvMckYgTGFgDS5ILM/j4jyQyUBQtTcDD1g1LJg5D0BjGJ8mIwZhZE0IvZGELZRkkMKiF26EAyEjgElRkkERtxEIkwh5BGiSEYMGQZMQBmYSdpo3gz6xBiLMJRSpQHNTGMxINBdKcTIycoIMAAA9JQ+s`);
                U12[`mapStrings`][`push`](`1,Space Jam,Raspy 667,874036,eNrtm01oJEUUx2uyTuaDCKOsMIiwrQbJIZuPScyHgXRtjJtsjG528rFms8aZZCfJrk6cZCLBD9gGDaJ4WNnDqihmvQlBEPXkYUovnhbED1SEGC8rAZEcXUSwZ+pVZ6u6a7rq4K3q0qT7169fvXpdr+qfnmQstlwsoShKTJbyiwVrLF9EifV8ufSi1dPTi7tRreE2xDX7r6Vasw/g79de+n3kk6Mvs79xC4DRZCxaKqMYEltEPIE3CT2WMH+hoYZH7P13q+09+/uuWrP3kKQ1DI0koyhG3hDON/keeQqOzaIF9NSnZff8ZeoKuQi9POCPt3WmykfwWxa1F87v7Owc8uQ5Esb/kBt1+TevUP6Uov3XIaTzofzW1pbLv91B7S8QNfuvgP9TofbdkXN5iKdCfCi/RceYzCrG/9UUtX9Usb9XVvisPpDkA9hXTcEICm0R+9b9/0wNH09ji3/miWs/beSqfRazNzq5kV8vVxMb5x16C4QdrePVHA3UQ2AszXeosk8f5ib2jc/cm8kkWBiG4yzmAlf5+WrkWOc7bS6/u7uLIownEt4W+VnhRcth3mOvUzXeSziPH4PjBBb52lxACuBHFnPBCxg46g/wRJU/L/jfEsLPK/M1//EzWIjPHj9tHk5Ei2cHXb9zND7kBIuPw8f/5s27L9/6Zc2LP/BYwldE/hzEZRj4ARZ/ON41MV7E8dNu/FtaWg7zAffB9UHpREp5ljdQRvB9cGyV8FMOd93rh2+qB//7hfhbwWWL2ccrQr5BXPADPp5OdAWsx88IfCqEB3ukVzF/8pr+n3eC/WmW8GOOlv9k3NGKv49PI1n+U/tZgY/DMQP5fP23kx9lP+hHjVA4hETxeFl8hDxkt4eNF1YcLzFtvUIjsy+sgbyFSnfg/OnP/5B44lUcPF4pyfsyK8Rl2QourA1QWIEnqvyMw/u95CjxRJWH+YSweb+wrcR7daIQYr+YCx5ff/xpfi7v6fHPOnr8xW09fsnS4y9o9ndB05+cZnzmsR4/h/T4KaLHn9Xkz2jyT2jmw6hmfzOa/JCmPwOa9ps1+bgeT3R5S5MfFOpFN1+3K5WTX76futrsra8egetdfF0R++XV0xkUXK/FetFI5ysfH+ef5/N/GuZDyCMsbPh8+4VpWH+OOmr8jKT+ZiTrgTlh3ZmS1l/aX1a/HnXU+Dnw/zFFHvYLHh+X8isrK1V/MO9PGD+H+f7GJfnA+Hm2bnb4eMr8n3c43stnlt+wWXXzh+6/2H5uTNG+wNfZaFP7WdjvtCE1+2xfp8jjNdgvs3UPFgSDb7/K9h0vFyA/EeOxhK+IfHFba33IeOX1fynFvR9efkI+VL77d6Bp85s7vfUw8ETC2yK/Buu3Vj0etyr6s3bAz2uKPGlW9QeEo3hoPtTeF8ZjVb60x+9jFXmizCNez1HksSJPYD/I8qfO+0j5xRynt4TyTM8YUbTfjfT8mQD/hxw1ns3Pjyvy/Xw+q/JElYf9ry6v7M8ZrBfPBYvXl4T3wN735n/KX4Dr0zh4PfNj/4N7X9/7OdPuGU8kvC3ySzB/PsnrCGx/WPnjhaYvmlbnPB7yDPcI+lJasl46x+eb+B6LvEz4xU0fXjv29+kbhzccmbGytX8+GI32/9VokdFojUZrNFqj0RqN1mi0RqM1Gq3RaI1GazRao9EajdZotEajNRqt0WiNRms0WqPRVn79c/fp6/d8zGm047XvaDegB5cAFSs1wv3SMclkMgHfsPfpaQy4Q8q3t7cH2G/TtN/Lx84+1Jg7OztRKH+bJt3R0VGHT/v4+v6kff4gvW/8o9nqTxRQPBlLFMulVfZFvChqe/FxfYmj2GQpv7lqdSYTTKxhi54gPsb4jMuD+M1ekiC+kfFdyQRR4KOM73b556kf5JLcnzsY/7DrjwJ/hPE9yQQ7z35pEMQ3ML7X9WcD1W1VPsL4vkQkkqgO9n+bSlSA`);
                U12[`mapStrings`][`push`](`1,Spinnies,GayfishDeluxe,841943,eNrjYmdPzy1gYGXgCC7IzMvLTC1m4HVPrEzLLM5wSc0prUh1MGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFLFzsrAXFDOwHkg6A+Qc8oRJMDkEHUIyEWYFuFQMjw7ILWUCdxKuf+OQC0Ekwp7BAnfiAAStgZCAAMBQ4uMCZXAE5iSVp+UW5CkZcrAzsDpT4cgLI1QdIDBW6+FIQ4UsFjeT8gkpNsGfzHSAKI+kQpRPoFqUSGJ5F8vMBSvw8eCNYHpefoRQDBxc7Z25xQZ5D6gP8ljAyAksTjeCCxPI8rCahBSnnAaIM1CfWQLi5DiUBRJhrRqK5CGcTZbwtecYjPJGjAClOImnjCaKMp9gT0ASP3xYXimxBeIkoy7ypYRmU4mRkBCIGBgCP4hFW`);
                U12[`mapStrings`][`push`](`1,Square is safe,MuadDib,316556,eNqlVc9r1EAUfrHsxkRtt2sPHqfgQRDXQz14y7SsSNEuFotQT6a72W0om8T8OKwWWqQeBEHQk548iYooeOnR+RNET97q0Yt4F9HJZibdTHbSDb7LMG++N+9735uX6Kra63tQgembdyPTt5AdoMDsWqCuRGanaW/gSzA0fBYyZvzsDs34xfZ7975ffT93n+95HFR1teIFoIJoVdGBn1xO1nXh4Bicv3IblBx+PRsn4rFPknMbsmv+/nPGKiiE4cmEeFwST0ryMX48j+2F8XVhaMYBSKy6tmk6W4FeARV/wMIZ/shodl4m6R6jZL2BxbRvF69TP8PjAWTxjH4O/wbK3c/wZe9P287xkmfC+U+K/8RkFWXG2vzvteaFMxyuwJGWQvCr18n6KNkvPqt/Hu7F7pxEsbFZi/vHDwhjDVPkAevHU7buJHfghwc5vZZivUrgY31TzhzPxyqPL9RLKkaBXrj+bXtnYf4L3oOxeuXUgFGNsIslqfCt3bFfLVrDn7/7lPvEozW77ASe7VsdtDFAq5Hle6MM5MWmKuZf3cVrd8oMN4wd6ynumeBrErdZ4fh0TDl+/JgqeN/LFrSczSM+I1lB/zVG71Amd+oX1QA4rqtaP/Ac0mKQluxuBebgRNNFjhuivrll6Ro+KoYSOg21tusNkNtF4aZFA72GrqV8WvJC6rSBKZAUAGdhZikK0cCNUNt0UBRQZhxPCqqpQd0OUdf16b+bvlQztF2ncVgUKShqJuYmA4zmmIbaCpUKBXbPsbs25RceZpAG0gynQG3Tf1PPamiKosWef5P47d4=`);
                U12[`mapStrings`][`push`](`1,Square pathway 2.0,antidonaldtrump,737187,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`);
                U12[`mapStrings`][`push`](`1,steady,JonesReal,240703,eNrjYmdPzy1gYGFgKy5JTUypZOD0ys9LLQ5KTcxxMGEAAwcVBhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFjFzsrAXFDGwM6AAu4uALpZMOQGi3BnSV5UuXw3kHCCsvAyp3yHdAEXWIgSoPgtD2PxV/h7joSkCVHyBNOdwxSQoQZaUPsAYTmnIH4pTvRw/UBwxYASMDAYBPAVdATmJJWn5RroIhAxsXO2ducUHegRBC5jEycDGwBhckludxcToQUg20nouBB6xaQSM5v6BSk4sTZsUBaABjs4KDQRhZE1yvAyG9QAvZGaSw6MUwwgGvEYq4jcDwiAMej7AxaBA0CUpxMjICEQMAhsN92w==`);
                U12[`mapStrings`][`push`](`1,tallpendulum,JonesReal,53,eNrjYmdPzy1gYGbgKUnMySlIzUspzSnNZeD0ys9LLQ5KTcxxMGEAAwc9BhRg/y4NDOw/QPktVQ/d14lUw/gOGlCFrFzsrAXFDCwwjQ55UAYjAxpwKFkAoVXQJJgYSkpLGexfzgSBWfaXjcHA/gEDDsCWlF9Skp/LxYqwFQ4wbYXa5pDdgG5re0cH0bYyMhAAcAUH8h1QZbgCchJL0vKLchXMkZ18oF2BkJPrHSgLKITNFiCb4RGQdACXzZ4MuKJohrEuA8w56Dbv/3AwyEK3OBWbzZYgmw/QymZ7DJu54TYbGjCwcbFz5hYX5DlkQsM8ElfkMTKwMjAXpaZwccLceADmVixqWRi4gGoVNJLzCyo1gVqgxh7IxG08M4MgQgtc5wFCOoEBxcwggaETYQAhnwENAEZAUk5pKlAxIa8BFbMwcIMUQy3gZGQEIgA/dI5H`);
                U12[`mapStrings`][`push`](`1,Tam's Hill,TamHill,373046,eNqdl19IFEEcx2f1ztOjMlBC68ETtExUMk/MHu4mPCxRTPNUTIo7z9WuvNvj9vwb5Bk9BEUFRf8DewiCQFBCMiLX8qmXgixCIfSxl/Chl+jB9nZn7m53ZtY758HZdT/zm9/8fvP7zpzVYhkMhIAZWN3ewCHRdso/NAQs8nPsAdqB0mAV0DTn7wGlOTfR+7WJjZMz+ZfxOyxDoNlqMYdEYJFc6IMHqg85QNfg1BG1L9F94EBeKZT/6vmRqNpfiur5gspWCi96WPZbD9RS+BBk8edKKij8RSY/UVlO4fsBi396vI7C90ZZ/EJ7A4Vvk1j8ynALha9n+rPyoglwzl+PYu2x82uN0pzrgNGsbUPeyIAQDtiOWs1y6sfUwEt+9D2bmLqP6erq2ho5AfQyQ/H95zvK0jzM1Hz59pHCn2eG4sOnl2mlZnn5CeAgRN+bUW9n2p+buynzbYhrRFzFNjzipPLU+J2kskZJZRBN1IrLmwiFXdvHWwaYmX+QCJ1UrxUKeELtF/8W/3O7KgtkywoPHdqlYCHSCxLI0tqHNtQX6AQp4U9BRZJKwAtIHQaYqVxdGtpZ6OxK6Fy676W4HuJC4GdmTXg2K4csXyc0Pei9iQidymfr7LpR3x6l8vFQYB4lGXZtx0+rvUtbDUweCTasQ+8+D5WHkemd8Sn6k+BTWy+MbKKtMp1SPOEw2lKDNm2+Gln8Ha0/WBXtwDieqCjhKJrnILHVNfZx8epVzqn3ZzSkVU+Hdj6dfS5uH8Ujvl4Hwz7m3dq44zwk8eOvlpJ4XC/dhvWS8KcLcR1oHZ1SavbdTCm4Mvs8yT7mzzD9uTd/n8KfZvKq9On5JqY/79/covAuJv/57Q0K7wSG0gcnNzX7F/avG57aBO9jXsBeb/yh2O+zsfjrS6sU3sP0J5ZfjtBb9ilP59mnvOIPwfcAw/USfLfhLYjkO6X07LtBev63R9OLT6txPUq3j6l1l8bRWR07OuOJQgcd2MO6EOKfH0nSpNxdCZ7tauxuTF44m6PGS8NSrb8F7SVuKcogLO1SiryUOq+WXur+0C/YjcapJ3gHMJTKNH5rKFLJvFUypJLgq4ChVBJ8CTCUSoLPN5bK+FZfQLdFtNUXf9zliqofViXwbZoRkKiSWmCyWnICYiiIaxJvGMIex8nHnbkj5B0NWnMkXt0gUm/UgN6l0LYynxAaPywPQrWGj3n6oLzkQYmxaCLJAQzG7qeMRV1OJmedyrT4JsTMsczx3WFvv39YLPR5Q5HhMN/iD/gjxQNhb4AX3YKLjwhBb4TPHeHDol8I5gqjQT7c5CpCdFtYGAzzomi6Wm3a2trymOE+1QlThgmYJ+V/xZIWfzABee6swgZ1sO2sEOQB+A+dfyDG`);
                U12[`mapStrings`][`push`](`1,teh foolser,Querp,562053,eNrjYmdPzy1gYGXgLknNUEjLz88pTi1iYA0sTS0qcDBhAAMYDQP279LAwP4DlN9S9dB9nUg1jO+gAVXIwsXOWlDMwM6ADpjQBRz6LVBoJJV6TsEMjHB1+Q4QuugAhK53wFDvCFS/H+a0y8ZgYP+AAQdgcnLnYkU48YAnlIGwsrAB1UoVDM+c3QxUQryVnE6JxakKSfklCsg2O+RCNbDA3aKCGv5YbP7/zw/BPRDdgKIOQz0jWD0jhnolnOr37tuLpL4Sqq5GAUKnQfTb/1T8HeKiKwFMRfaRRQyM9i9ngsAsh8PtYAW4QoKRgSDAjAVo/DhOv16SgJyAYKHHHZCTWJKWX5SrYGhAIGLLD6BGbPQBbBFLQlrigUesgpM7AzsXO2ducUEe3L70BTj8yMiQwsAaXJBYnsfF6RDggF81IyODCAMPWLWCRnJ+QaUmF+cBQprAUBhZE0JvAmELGRmksOiFG+GQQNh6fgZF3EYgTMpIIGgSH4MGQZMQviPCQCYGfWINhFKczIxcjczsyVXFzBX8ZalFxZn5ebxFiSmZpcWKaUWJuanFIfkuqSX5eYklqZLJiQUlpUWpPpm5mSX8+eV5qUWeLvJQwYCi/PSi1OJi5koWBtb6////g9IWCy8LsOhEcBlYgCwBoJ1sks4QbQpR+XmpDAwAwFHkTw==`);
                U12[`mapStrings`][`push`](`1,Thunder Spectre,GayfishDeluxe,843868,eNqlll9IFEEcx2et87wtKcxAejrjKnvw0jzNC7kd4UgMukyv7AiNO91Tyz/n3ampD0kEvYQ9F0TWWz0IvdRLsCNBjyEEQgR1vShihBQEIkl7uzOzO7t7d3vXII4rn/nO7/eb3+83wzudQ2MJ4ACHwsNT44Ni0t2TEAfSSRFUdkRn4yOp4aA4OnVHhD6gDOgBzBB+xpUhbOPv+3PfO5ar58k3rMMgzzsdiRRwkoXwGVT/KAOGATutt5LJtplFwBXBexqbASdsPs6OJ8KnJmUIGZBj8F2j0XR8Ijnm9vMOzVQ6TP+Bs3hOItPWN0TAoYj6ieILKoe/ySyt9dZc3Ag+kOPvuTkMOOIKimI+DJhZ2F7pbq1PiTJ/PBKT9YfUfREJQT87S3tvV+J/985n9ftlfTSlBh3F1HWwm52FDKsPR7A9V6Gl/cK6Zn9f1n4cDzS4pHLEDzzreEW/lKM5qz8ahDcEFaajCeL5nulovP1xiyzCHFmn4+vt8DR0dvlfJ9+/+7KxbJenqWKX3/rxte/50ZeEhw/dLO/JUTWc+gsVyUuk4P0kHtYHyYECIx+gZUFzNguIjWguk2Mt9Nq0egLasxoezmm3sFO7Gw7W18BH0BIwWat502TZbirppn5Du+k05eiJKxHNSBQ01EDImke4raCAoZNiXtrFOeRQeXhtgdUPsLzwgeaoykdwuyFtox23gxprHomY97G6NKdff7vwovupn+ob25/Bb2HFwI9g/jq2w8f6If1Zr7q783mS+IvSS6y/4fzxh5MN1vEh+m+wv+WYTxvib6gxGh/CT+P4kzh62Sw36RtruDp/NdBLnVzipdawvho8wN7QqsGXrQZiO7maLGrbx86601Bw+iTZ/s+OJCMS8YZkGr5A2weqVpVvo7WaNy3MfUWisZ96ETLUttf8irkU1jWgXsTyZu9PhfR8zM3yAfP9dlnPj7oL9ZqWrnBpV3ez/mDN8Uf+AldNGdu0i9n6nGWH3Ue3Jg+iQM5TaJte1OXerQzbEWLI6u2p8eShFc79tpX1OaEE11otXStH+O1G3nA0qthUXfNVTIUFeMnAI9zsTLyo2iys0geRql+Alww8eauaePwtvfq4+Xt+a43qF+AFA28/1AdoqBsbQAXvdI2lEuM0c4bc1i2D4+RrxNGTiM6M8y6ST+j2Qh76oEK76wYmErOneReyteiIfhFdW7CjKWuPWaylEqZOYSlRm1tCc8SWUl1BJc20UI7mxwiesSuoGWpLt6VIXTy5OE7+AeAfh031CA==`);
                U12[`mapStrings`][`push`](`1,Traptic,Fantao,1871,eNrjYmdPzy1gYGHgDilKLCjJTFYw0jNgYHNLzCtJzHcwYQADBz0GFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIXsXOysBcUMbAcKGyAS6QcgEkwwow6IQLX4QWkRVKuAKv///QvnORBWDgSM9i9ngsAsmLT9AwasgJGBAMBQ4BAJZ3IF5CSWpOUX5SoYcrEC/Zg4rP1oBPIjXMXw9KMxyI8OwzseTcB+HN750RScH8sJ6lWB0v0W2PwIc7T9ZWMwwOVoBgaO8MScHJ/UtBJw2NLPXk6QvUGZ6RklDFxc7Jy5xQV5B+ygZgcdwB6AQNfEM7AGFySW53FxOhBSDYQJCNXRDQTNjmPgAatW0EjOL6jUBGpKdSBoRQyDMLImuN4DhPQCLYxmkMKiF2F9PmEjEvEbcSCfsA+SGBRxG4FwTHECQZOSiTLpACGTgN5KYdAgaBLCQEJxC4SxxBvIycgIRAwA9yQC+w==`);
                U12[`mapStrings`][`push`](`1,tunnel,Guest 2000,359280,eNqll89rE0EUx9/WpkkWb+Yg0kMKOcSDGpMgFKR5gUItXuKPitWCTTVtk+bH5kcV9RKKB/8BLXoMPYvQP8A5ehEED3oJxKMgxYsH8VA32Zndnd1sdl+dy7DZz3zz5n3nTV7UcHirpkEIZjq79XqpCurSbqndiadTqRRmYTQwAdLIHW2ORu4Xf37x7PvSu9hz8YxJDk6r4ZDWhjA4R8T5AT7+bMwNlF9MwcG3Y1DEI9tgMr8KTv6a9tPGLzv0Ey7+1Ue7/o2uH793aOfv+PKVAzt/35dfe6nz2OTvHxj5wAKfuSW5P3N/by9eOKvzmqaBwoh87seb4Xib+5IZjdwAPIZaqBY7m41WLZ5WQ5aV2OFmp/GmYQl7FDfeXBx/aowkKAoj8mbqKnxL9/h8vetM3WgR7nH9Mtdd8NQ/+r2mp1rwWzye2OR4TL5i5Axng/Ig73fWYU2I54cYPyPGz4jxM2L8Lr94ieKy66j3+31baWwxmY+5+OPKju5XgcdT5fudB+mo2/herwfuePK8BBcD8iL/+e7k+AXPdcVFZiu9kT6mQI4/IefVedUwIu/KT9ZHn5hPRtTHYpdU79ik8Yyoz6j6vE4C3z//y/vUC6PyTeOmZjXOXZVnG2/8lLTinF+Xz8O8x/kR8QSo3/LOmPh96tHF+9Sjp75HPbLqgFaP20R+o0urLyfvV19Ef5HoLxL9RaK/SPQXif4i0V8k+otEf5Hor2jVzFbOo1VTwHeYCO5rxtwyPM3vf+2s29tx0d1Z3V/W3v2ZI2quKPs22sPdA7bfS7eVOXvwjMiLyF2N8IJH9RN5sT8mTsWqPH+wuqHM6xWdC86nh7yZPxHPinzKbfEMeYUR+ZM0/pfHWm8dJg1l690/RJ8Ouyf76gxE1HC01tbqoqxEW2y2XXeNI6zonWcEQre04pO6GjX/lEygZ+D0iI4nHza0p+f1RTyHkxZNwxn7ImttaeC7dgrOjVlrSrAAOwzDnLeEpRRg9yFI+ipZggEycwouBRW0dANkTYErRF0+RRUlOvw78g/4P0/w`);
                U12[`mapStrings`][`push`](`1,Up & Over,Tyler_89,276361,eNrjYmdPzy1gYGXgDC1QUFPwL0stYuAIqcxJLYq3sHQwYQADBxUGFGD/Lg0M7D9A+S1VD93XiVTD+A4aUIVsXOysBcUM7AzogBFdwKESlYYDJgZPT08GRvuXM0Fglv1lYzCwf8CAA3AF5CSWpOUX5SqYcbEirD4Qgm61Q1gDKg31pf1Pxd8hLroSQKv///wJFBeBisN8i8NqRgaCAGF3vwOELjoAph2nXy9JQFIIdy3CN4bIvsFiYj7UxLILEDreAT0gA3b9B5rcbwHxBQkBaUzA6sIFhKz2qyfJakGE1QoayfkFlZoEXFBM0AWhPiS5QALDBfgcwgqLR4ckiIkOLlCH2UFpoZs19caKl4AZ7e8/kENIVA83Pw2aVj0ZcKVZVPOJVA8PyFKCAYminpRUZMTAyMXOmVtckOeQBHWdCY5swsgI9DhrcEFieR4nMyNXIzN7clUxb1FiSmZpMT+wiCrOzM9TTCtKzE0tDsl3SS3Jz0ssSWWuZK6QT04sKCktSg0oyk8vSi0uloTyfTJzM0v488vzUos8XVgdxCDlF2v9////QS5nYWABsqJZQAwWuCjQajZJZ4gBClH5eakMDAC2j9WU`);
                U12[`mapStrings`][`push`](`1,V Slide,MuadDib,177674,eNrtVTFs00AU/SFxjd2mSaFDmbhKDAiJLO3A1JyQBapEq0pEHSO5ySU9lfgsn92QtBJUYmeGiZWFgY0pXpmZ2IqYWBArYgiX5M5qosaOByADz8P57r9////nfz5T15stF3Kg76PHT2idgL4T2HWLHuBNGALfgjGUvzeGKP+Q8xfdLw/frZ6oOb4tiVdNXXM5LCjH0AtHL1m1guUKPpBjcTyU8H3/YA9CZfbejMa1yzODzJCO09Gjut6+GuB1+RwuRQYSEVHwy3tj4yQiKZbRCFJzU7sgl4unyVWFWLmUeUa50tF7H6VMf1MuJQUkCBSMVvD+81iBlDlAMwmUjt77PMcCtWUH7cZ3kDK3Z+ugdPTe140h5lKgruygrXiBlLk7Wwelo/e+zV8HhUjuc4pnqjgdPcryVB61kpzfkf/mn+u/KtbdNdBGAqmr58O/Eggfy0Q3or6YAN6eUvGV8YqtdPRKOno1Hb2eih7SCTrBcfTyJ3nuz6d+jYG04X9p/4S0YJi60eKuE4UoTT8Rq7BoMeQwH7XsI2Ia6n831Uc4XYdijbkdxBrIPyTC0S2ZBk5yFM818d0NdeXERViBxfuBjzosQDXbEZvvJm9eBDPgBFEfNZgnwsi7PC5MAZaow13q2T5lzqCIJCfxLA+LqCYXkYfijtAUcdp0aIOKQnwRoZpcyRLotUPbaZKSkc2YZ1m91uXZpwXWdoi3bd2s2a4feGTPY02PcF44Jh4X6Wc7N6TlEW1RP+/ZdRrw9YZntwivMIv4zLF9kgPtWb/fH7TPxdezrZymqabKgQi8kK+IJI44/AbeBj+T`);
                U12[`mapStrings`][`push`](`1,Vanishing Platform II,Echostar,965994,eNqtls9P02AYx9+yjrFFgzFo5GAcyQ7j4IQ4iV7oC0yxht8Qw4+DvM4yalzbtEXc1DATEmNi4tHoxf9Aws3Egz34Bxg9eEU9eTGEGzEGu/Zt17dduxZ4Oby822fv832+79O3TyqRKJUlEAdnbiOBV1Z5oZSeeoDUFVEup1kWdFwvroqKimSYB8aAGUAM5s+KMZhdvN6s/hh93/XYWsMsBk+lEnFJAQnrh/BJ2vwnBlwD3tXM+WWa/KINjM58BJS11GTM3YHm7MJ1PnupDDwDLjRPRed7+3Tels7ilHZA00GBloNi9nv+zhUunoPvsMZXV5uCthtUfyruMOnpsk8sS7wniXYwv63o5gwAIuBRkoBJnASP95w256HX39VlpyZLbaxfkYg0nkvYYW3BlQZLnonjLIw0YFSeDZe2x+jNXWsft9F5cnZHtLlFXC275OzmNf6Q1eUtnUZ1TdcIZGj29Bfip1Z27f1q/REnMrcqz85cy7u8zrTIXNwh+ZxP5vPm88p8u2yM0GeD9wW0rXCJtMQqTEfE4fHthoVQgS35CZ2HtVXyhqj4OmDwWkSe+f2mPt6GcKDP6UBjH7dyuIEzm8DVhCtCv9GZW1u6wgg8uxVFYQals0VRqvQGTRGTuFFzixqZ+BCQhJcfrvPhkziPjlH9oMfSm7OfA9T78OHVn0XHITvvkTG++DVAtg8fXnYnOpLenCf+HPoVoNeHD6+3Ax1OaMYTeOH+XoBQHz7CpYGaKqTtRqniuthxZHfDBCPymmh+ruFLBRZ8rkEKZHP1/SPw9f0/Wa/U1g4ozc/I4/lgcEQYkY9wRsWmr7Y2DTe9nrbDT2FEPkK5Fx3lrnXhN65liLdbv4ZnTDL/ZiZ/Tr7Y0xvR3EBVf6d2ubqKPMk7GtfcFQdvczl/Pl+N8njQY2JJBHQqkSwrkmAVubZU8+m/KP0JjM9KaF1IJa2C0AoggD5h0JZ9Sa1VCL1BaYTQWoUwaCJEMkalnsUSxarSXUSSuiZzY3yZV2OPOh9yssKLwkkZ3ePXlFilU1wXOJktXMDclCyWZE5RelZkVOaUObHAqaKAVI6maRDfODg4qNuoL6YaC/1PD9jePWJukV4UBQ6A/+s0wRo=`);
                U12[`mapStrings`][`push`](`1,The Way of The Dragon!,Stashington,296965,eNrjYmdPzy1gYGEQC8lIVQhPrFTIT1MAMV2KEtPz8xQZuINLEoszMvPSS/LzHEwYwMBBhQEF2L9LAwP7D1B+S9VD93Ui1TC+gwZUIScXO2tBMQMbTKNDvgOEwciABhxEsFvFwMQQsbGYwf7lTBCYZX/ZGAzsHzDgAFwBOYklaflFuQpGXKwMbDAb6WCzIMJmBY3k/IJKTZADDtDPARIYDkB2R0kAvdwhj8sdSM5xoJ9z1Ag4B9lV8Q6oejFdFXQAxXVIrlrcl0q0qxgZCABMiz2xJHFjcMwOCUcjcocxcqosNADLHkg6MIjdLoHhduQ0MyS8II/LC1CKgYWLnTO3uCAPlgUOeOKwhJGRgZWBNbggsTyPi/MAaaphQZWJTzUPWDUshDkdiNIkjKwJSnEyMgIRAwDDduz4`);
                U12[`mapStrings`][`push`](`1,The Web,TamHill,489003,eNrtmF9IFEEcx2fU87qLiEhBKtD+UFZmeFqclO4vvFCjP3qaVynlaXsleOehkVhGF0XWg0pBkRHSi0FBUj1JPrgV9ChGD5EvaSBRD+JDEFJgo7e3587OuDv3Vjgc7P1uP/udud3vfHdnnXb7uWAY2ZC9+ryc5ZMbyBd/sKypuRkK0EKDXKRr0nRgoUkzan3j0mTpYNrlWA3ZKuh02m3hNmRHdMP0D3AVotstBvLd6BTC0ve++fZQ+pi/0KQJxGnOimb/hUBLazArz2mLdw0t0Q7QakPXZxGv65fDY4yhNig8fmDwLYP3R3j8o4EhBl/PPRW9D54y+NPc8d/s6WfwtdzxdF6/y+BPcvVbO7oYfA1X/3Z7LYOv5uor8mEGX8nVHw9UMPijXP3xyDEGX87nH1cxeA+ff+1l8MVcnjUzEOxDS00NlMjUKNRNjeOKul+pjui7lqNWjE1sBed0f/ndmI6S0JWdd0hdSfGNND98K33VrznCF3ifkfoIPTXq9XxSCD7Jrs2Ez+9+TupSSv9MRM8ne4a24TXXCJ/bJ5O6hNKvo8aTUjydPHl/PeHLXu0h9X6KP0XxtrqvodSRacK/eDLPuyj+BDWe1P57crjnD+FHO4tIvYnifRS/IiX1R2byQcKPlUjGCwY+pOO1loSmPD3k+Bo1KjaofIDSR2+87l1tMuFdbhLmSq87ut/UKms0q+RnZTe2hDu2Mx3jABPHAOUYMHEMUI4BE8cA5RgwcQxQjgETxwDlGDBxDFCOARPHAOUYMHEMUI4BEwdAwg7IMDhgkRG0e5qMEosOLBgdWDA6sGB0YMHowILRgQWjAwtGBxaMDiwYHZhnHGlG5awZR6GNI5ogWDBBsGCCYMEEwYIJggUTBAsmCBZMECyYIFwjjBiMkMkzwlJ+WA6S/zxIeI+rifkHlvPkH88Tnh+MN5atJn5gPKgaXzhAWB3eRc4qUn1Qkj6Lr6rci7tWCmP7eQtA7fXJe1/GoW+eLtL1/IIamfEjovyEdsYt8ZIZX2BtAQs51JbNY0jTv2bSaiP/c+4DSRzr/Ozc7CLeFXOsxfFY5K0uwDEyaRqgNBn2rYy/1spDdqfdEWwLh7QzfSDCFsQY2dDaqrC/PURNEgcU6q8m+9h1jGM1CcWSxEa+RFypXH8p2UrZpkrxf2dJcLdVwbiuNxofyo6ldPcK6sbPgyX5osTk1Y0DY/JB6C/uKiFW`);
                U12[`arrowMapStrings`][`push`](`1,Just Fight,HeyListen,84917,eNrjYmdPzy1gYGHg8iotLlFwy0zPKGHg9Eit9MksLknNczBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhcxc7KwFxQysDOiAC8Y4kOcA0eIC1SqAppIJRDA6ZDeQovwAacodygIgyiNRlcG0oZtOmnKY6Q5JB0gxnUjl8IBMgHoVFmdQev9Pxd8hLroSEJVw5Q6JkBBykIDyPfGa7pCPZjoDVuX2L2eCwCz7y8ZgYP+AAQfgdklNLMlQCE/MySnmYsWSQljhVqZDw8EParUCmko2htjKWIYDpCmHewyWMuwYUMIDyWM1i2qA/n+AGsouOExnYlhxewXQMSQpJz7YOANyEkvS8otysQcam0MsNFqzEyB00AGU+Np/YzKjvOEMPaDFfmePMBwgoNweVbmDC1R53gMU72BJDWDTSVMOD+O4BtQowWE6acr3w8oqgmHM7JmcysDBxc6ZW1yQB3dUUgNWxYzALJLCwBQSxMV5gJBSIAQp9eHihBVnDqkLcJpqxMDsFGQIVFtIWK0GSK0R0AmEzAVCkLk+QHMPFBJWCzLXB2SuHjRszRlwquViYPIFOZeQUqBzRYBKjTgZGYGIAQAKHrKo`);
                U12[`arrowMapStrings`][`push`](`1,Go for the Gold,CatAndTie,-1,eNrjYmdPzy1gYGXgd89XSMsvUijJSFVwz89JYeB0TixxzEsJyUx1MGEAAwc9BhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFrFzsrAXFDOwM6IAJXcChEpVGUpkmZ8LACOMeyHeAqEs6AKEjMdR3aLgyMNq%2FnAkCs%2BwvG4OB%2FQMGHIArICexBBgAuQqmXKxYnIqwOoUBxUoHFQyrDx7IYmDYDwsVEqw2Qbb6QNEBqIEHYKECFXEou4DLarBLHUhUT2woMTIQBIwOnIq%2FQ1x0JRxKFkDs9IRIOOq1NCArhPsO4XtD%2FAHvAIvz0ge4fLNx%2FQYGBnLi3Air1cxwx7pAnQCjRbDHuUMmVH34AULqp04JBKojUT05acqYgYOLnTO3uCDPIRUacNkN2OMOGNSsDKzBBYnleVycDvEO%2BFUDISsDD1i1gkZyfkGlJlBT0AEirBBG1oTQa8lAhIVSWPTCjThAyAiw9Yq4jUCYRMgjYMdoEDQJYSCh4AQ7TZ9YAxHmEopUsEPNSDQXSnEyM3I1MrMnVxUrphUl5qYWh%2BS7pJbk5yWWpDJXMFfKJycWlJQWpQYU5acXpRYX8%2BeX56UWebpIQsV9MnMzS%2FjLUouKM%2FPzeIsSUzJLi1kYgPD%2F%2F%2F%2FyLAys9UAa5HoWdgSTGWgnm6QzxACFqPy8VAYGAPSODRY%3D`);
                U12[`arrowMapStrings`][`push`](`1,Commando,CatAndTie,990796,eNrjYmdPzy1gYGXgcM7PzU3MS8ln4HROLHHMSwnJTHUwYQADBz0GFGD%2FLg0M7D9A%2BS1VD93XiVTD%2BA4aUIV8XOysBcUM7AzogBFdwKESlYYDJgZpW2EGRvuXM0Fglv1lYzCwf8CAA3AH5CSWpOUX5SoYmnCxMrAfsISIH0g6ALX7gCfULhgtAvXGBwxXRmwsBuqEyRO0mwtutxGy1Q50sFoQYbWCRnJ%2BQaUmyAUOGJ53GCAXONDBBRIYLkByCGY6cCg6MJAOcaCDQ%2BRxOQRvGjlAM%2FcQm0YODEzUOKQ%2BQAsKjHIq3gHFQUjllNnGbAaG%2FR%2BIcwgjAwGAabMnlmLGHJygKHG1Kd1cjYh7c%2BTcAHW8w%2BB2vASG47Ekm0HuB3lcfkDyCm4DHYKgWRLWKFDBUJmy0RToBaJraqRkzMDBxc6ZW1yQ5xAJLYwycfgP6B5WBtbggsTyPC5Oh3wH%2FKqBkJWBB6wa5knOA4Q0ga0QRtaE0EvIeWALpbDoxTAC5lPsRijiNgLDIzhNAntEg6BJcAMdCBkIdpo%2BsQYizCXkZbBDzUg0F0pxMjJyggwAAESObig%3D`);
                U12[`arrowMapStrings`][`push`](`1,Spike Island,CatAndTie,992539,eNrjYmdPzy1gYGXgCS7IzE5V8CzOScxLYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFbFzsrAXFDOwM6IARXcAh3wFCi2ConLdxJQOj%2FcuZIDDL%2FrIxGNg%2FYMABuAJyEkvS8otyFQy5WLFYzQRjHID6yiETSkdCffNT8XeIi64EMGBQXHogugFFnQOmyREbixkY9sNChQSnGmF3qkOOAnanBjhgdSpcPcypUHVYnOp39ggpThVEOFVBIzm%2FoFITu4sPkOjiAzRzsQSGi%2FE5nNEhHmpxKsREXGkf6OaNGVZAB5CRILHHMuMBEqxOJ8lqzFhj4OBi58wtLshzsISm6ngHrFoZGRmBccQaXJBYnsfF6RB0gAjVPGDVsGDmPECUFcLImhB6ibJQCotehBHQIgW%2FEYq4jYCb5ECUSRoETUIYmElMyOgTayDCy0SZa0aiuVCKk5ERiBgYAGiD7s4%3D`);
                U12[`arrowMapStrings`][`push`](`1,Towers - No Bounce,CatAndTie,1040432,eNrjYmdPzy1gYGUQCskvTy0qVtBV8MtXcMovzUtOZeB0TixxzEsJyUx1MGEAAxgNA%2Fbv0sDA%2FgOU31L10H2dSDWM76ABVcjJxc5aUMzAzoAOGNEFHCpRaThgYjAWdmBgtH85EwRm2V82BgP7Bww4AFdATmJJWn5RroIZFys2qx0yoVbB6EgorYJh9cYZjgwM%2B2G%2BJMFqQ%2FxWH4ikttWCCKsVNJLzCyo1sbvgAM1cIIHhAqIcQv1YkMflEOLc40lt96gRcA9eZznQzFm6xDkLr%2BtgjAOWqAUFhusYGTY6OANdRUYuNsJvtUO8A5WtRmQlI6jnGTi42DlziwvyYLGBCzAyMgILVdbggsTyPC5OeG5POoBHNQ9YNSyY4Zoc8GoSRtYE13uAKL1SWPRiGIHfh4q4jcAwCb%2FvNQiaBDcQntj88DlNn1gDMcx1CGvAY64ZieZCKU5GRiBiYAAA5d0SXw%3D%3D`);
                U12[`arrowMapStrings`][`push`](`1,Blockhead,CatAndTie,1042197,eNrjYmdPzy1gYGXgdMrJT87OSE1MYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFPFzsrAXFDOwM6IARXcCh3gGFhgMmhukbpzIw2r%2BcCQKz7C8bg4H9AwYcgDsgJ7EkLb8oV8HQkIsVYbeDJU67PbF7E2j3lxteQO8RbTcXwm5kqxHedsiDMA4kHYBYaceAQiNZ%2FeyMG3lWG%2BG32iGTgZDVadHypFgtiLBaQSM5v6BSE7sLDtDM8xIYLiDKIdQPCnlcDsHrHoeSBShJFI97Dq6xIsU9agTcgz%2BYaOYsXeKchd918dASI5Kg67qqtUhxnQlJrsMfszRzpDU5jsTi1gMtAWjFokNJAGqx6ILhVrByYt3KyEAQMNr%2FVPwd4qIr4VB0AMVuR72WBmSFcNciijtjlEI%2BRwFXIa%2BCo5BnZHCzFyWzpGXg4GLnzC0uyIOX65k4PAh0DysDa3BBYnkeF%2BcBQqqBkJWBB6waFmVwTbCkhF2TMLImuF4HQnrBzpPCohdhBLQwOGCJzwhF3EYgPELIJLBHNAiahDAQlsnwGqhPrIEILxMyF%2BxlMxLNhVKczIxcjczsyVXFzBX8%2BeV5qUWeLvLJiQUlpUWpAUX56UWpxcWKaUWJuanFIfkuqSX5eYklqcyV%2FGWpRcWZ%2BXmSUKU%2BmbmZJbxFiSmZpcUsDKz1%2F%2F%2F%2FByVcFhAEsp%2FDRVgdpCCuZmECWs0m6QzRrxCVn5fKwAAArsyofw%3D%3D`);
                U12[`arrowMapStrings`][`push`](`1,Nothing interesting,MEGA-SKILL,1216849,eNrjYmdPzy1gYGUQ9ssvycjMS1fIzCtJLUotLgGyGbh8Xd0ddYO9PX18HEwYwMBBjwEF2L9LAwP7D1B%2BS9VD93Ui1TC%2BgwZUISMXO2tBMQM7TKODHZTBxYAGHPotILQKmgQjg45dAAOjQ8wBiDzMSSEM2NWzMZj5JjMwHCBevSlIPdwdkVC66ABe9Q6uDRB5LdQggtH7j4VLeD13aQeGMlj9AQLqHbjac258WpgIVw%2B1%2F4AnVN4T1f32Hw4GWegWp8LdQ0D9fjT1B6D%2BPJCCGjNw9RfQzCeg3h5N%2FX5Y0rhsDAb2DxhwAK6AnMSStPyiXAUjBg4uds7c4oK8A6k4lUMSBSMDMKDYgwsSy%2FMUDLk4DyQQVs8CU28EVB9%2BgKB6Zph6Y6B67waC6plg6k24OB0IqQdCuHpToHpC7gFCuHvMgOoJ%2BRcIWYBBy%2BmQSlghKwMDJzMjVyMze3JVMW9RYkpmaTFzhWRyYkFJaVGqT2ZuZgl%2FWWpRcWZ%2BHnMlf355XmqRp4tiWlFibmpxSL5Lakl%2BXmJJqjxUfUBRfjqwKClmdeCBWMHCwOogBGGy1v%2F%2F%2Fx%2FkIBYgLYXgASHQBWySzhAjFKLy81IZGACrY6kl`);
                U12[`arrowMapStrings`][`push`](`1,Dungeon Master,CatAndTie,1366182,eNrjYmdPzy1gYGXgcynNS0%2FNz1PwTSwuSS1i4HROLHHMSwnJTHUwYQADBxUGFGD%2FLg0M7D9A%2BS1VD93XiVTD%2BA4aUIUsXOysBcUM7AzogAVdwKHeAYWGAyaG2JgYBkYM9ZVQOhPqhJ%2BKv0NcdCWA6qMiI7GoDzqAog%2FJ%2FNy8JIR6h%2BoGVPdkYqh3dXZmYLR%2FORMEZtlfNgYD%2BwcMOABXQE5iSVp%2BUa6CMRcrlqBgd4hEc6ob1AkKGFZ7uLkxMB4gUT2MewDqFQc7BrzqHfIhXj%2BQBA0ybwLuIVG9QyokrByKClDVR%2BIwn0T15ESNCY6oQfeaJzToRDCsnjF1KlAdCeqnTMX0goMLfvUHSFSPEfWWBNwDD2o090ficA%2BJ6vfDCgwSosYQa9SwwYMA5jVT7GUVMP2j5AK4ehOc6mdebQGKlwSgqrfCbz6GekscQQE1%2FwCJ5h%2FAZT4O99uTEdRGDFxc7Jy5xQV58NCKxK6HERierAyswQWJ5XlcnA6FBpBklupAhOoDhFQDISsDD1i1gkZyfkGlJlATzNupD4jX5EBIE9hdwsia4HrhWSdHAY%2BF8BCAhtMBS2LC6wAh1Vg9A0sAnkRZQUg1phWcjIycIEMAMPjdkg%3D%3D`);
                U12[`arrowMapStrings`][`push`](`1,Battlegrounds 2,HeyListen,68044,eNrtVD1v00AYfgMKxi5JitSBgeFAHVj4SOnQibxEFV9qpRAiRAtCWNgJlvyl2FABAxmQQAgJ1E4g%2FgALEgsS20mdmfgDMLIgdhbO9t0RJ3HtVKITry055zyPn%2Beee%2B80Rek5PuyHWlMPQ9vs9b37rhGQBVAvmQ9XrCA0XVyEuHAeUtX42Y2r8YuPnz76fvHD3GMxxhMceFBTyn4AZUGkVwfJDwXbNHlzlFNm%2BfNUWgr2wdbma6DTwXGZ65FCcGmvGJzu8usizeuDFG0I%2FmnxvBzhXCF448ebqN42PvPnN5hYJcgpCaB9mv7ncNsL9dBye6Rl62HX6ztaGcroYeLL5jEckM758uPtzFze3To9nrqYaH0MvvllFXBtBC7iHIWX4cX2FaA5cFSP%2Fe4snzzC4XiTix%2FPhT94j0Bz4ENmNhhcLtLXs3FlLRJAtW317oWpoOn%2FoP9B0JUVs5vOWab6ailjy%2BAdnHgesuBufAwkEbefxaZ3EG96Yeg5pMnO3LtmSlxsvnHxc5MP4wRZKiqeew4AzKxahmGbpKnbdtyAHa78kuyRN%2FoEM7yp8bIJZ7jnzrJLS3ausCYNbD3nPUL1Qdra%2FEi%2FjXTTdPDinT8jmp7Uz4CqKaoT%2BC5a%2FOtrGQGwBAyoJHO85usbLqlrqujWKVgLmkrztNhlwKF4paUUzZMaI0VKl3k%2FWdmkdah2PJ%2F8JWqqbEMruxsuQCWisa1CgoSFeWKMtg61iDUUCOOJ832HEFtQSziRHufRPB67WlCNJ%2BYImloqsfsPEHkiNQ%3D%3D`);
                U12[`arrowMapStrings`][`push`](`1,Slopesy,raspy 667,808262,eNrjYmdPzy1gYGVgD87JL0gtrmTgLEosLqhUMDMzdzBhAAMHFQYUYP8uDQzsP0D5LVUP3deJVMP4DhpQhexc7KwFxQzsDOiAEV3AofwAhC46gCrBxJClqY9QD7fqAQMOwOTkzgX0zYHsBjD3gCdOKyOhNAeaBBvD2c1Azft3zgSBWfaXjcEAZuX%2BCweDLHSLUxEauANyEkvS8otyFUJ9kO12CGugo90%2BYLsdKLF7cmMM0A5YrBK0WwBut1OQQnB%2BWgmyAw74MdDRAaEIBxwQgBpvQm0H2GM4gB%2FuAF9EAJRAtMMCgoEDw35L7PkK6FKQ%2FZjutcCpHiVzwNUbkGi%2BHonmw9wjAQ2Xl4q%2FQ1x0JYCZFb%2F7oer3E6teBEM9fveIYLgHrN7%2BJfbchAlYg0BlHwMHFztnbnFB3oFMqMGe2JUzMjIC0wx7cEFieZ6CMRcnTP2BSNzqOWDqDbk4HfIIq2eHqTdCqMfnHlaYehOge6BZAEZjU88CU28KNN8Fqj4Et3pmmHozoPmF0LyedACneiaYenOg%2BVB1%2BNQzwtRbcDIyAhEDAwC1XNIF`);
                U12[`arrowMapStrings`][`push`](`1,Spike Island,CatAndTie,992539,eNrjYmdPzy1gYGXgCS7IzE5V8CzOScxLYeB0TixxzEsJyUx1MGEAAwcVBhRg%2Fy4NDOw%2FQPktVQ%2Fd14lUw%2FgOGlCFbFzsrAXFDOwM6IARXcAh3wFCi2ConLdxJQOj%2FcuZIDDL%2FrIxGNg%2FYMABuAJyEkvS8otyFQy5WLFYzQRjHID6yiETSkdCffNT8XeIi64EMGBQXHogugFFnQOmyREbixkY9sNChQSnGmF3qkOOAnanBjhgdSpcPcypUHVYnOp39ggpThVEOFVBIzm%2FoFITu4sPkOjiAzRzsQSGi%2FE5nNEhHmpxKsREXGkf6OaNGVZAB5CRILHHMuMBEqxOJ8lqzFhj4OBi58wtLshzsISm6ngHrFoZGRmBccQaXJBYnsfF6RB0gAjVPGDVsGDmPECUFcLImhB6ibJQCotehBHQIgW%2FEYq4jYCb5ECUSRoETUIYmElMyOgTayDCy0SZa0aiuVCKk5ERiBgYAGiD7s4%3D`);
                U12[`arrowMapStrings`][`push`](`1,Gang Grounds 2.0,billioninjoe,1308302,eNrFlTFr20AUx09yXVlqhlD8ATRkUMDUiR1oNh3BwQQSKKaEFLJIdWzkypKR3KHJ4iGQ0XMy5RMEshd6pB8hX8AduxQv2XNSTmfdyYesLH3L6Y4fuv97%2Br8nTVH6wxEog%2FW25fX1duB%2F97qh3viwBdZsx3Ud33O8gX8Gd0AccAMwYf7rxWHOyf7y%2FE%2F7rnqR7KFBQEVTyqMQKICPEn8Ap7vMSkMG9XodSJTzIctz0jBvGEaKd1EeX6vVgGT%2BvY7ixnxsxmHOgCBku6%2BVFykha%2FLy8C6T0pfJ8islVuKCByKeKQHlD9iVLwF%2FTnmBHlSQz7x%2Fh135T4heySOOE9UHvpKHK%2FKoIL%2B6pd7HbbiX6jw9bTF4TCxWpie%2Fr%2BIj2oBz7o1vwMl9iCW3CO%2BQtcruUyXfh01ckoI8bQLOirCDeH4wGKQ%2BvZNjMTnWD37NuXwFJVwISQS3QGacVI6crv7JtcZRbZE%2FYzOTi9Y2044kZ3gGl%2Bae5GL%2BNJ4epqebYjtURtgJVqAfRkKhWCjJ7f8L7TBuTYSWUG%2FCXrwhbJj4YliQz%2Fw7RG4ihUjSzW%2FINRv%2FEb%2F%2B0G3LdUMmufEt57jcaUmsvPo00CKP9vxgqH8EbzVFHYYjDwb68llJKyLh6SB3GpoKv01WQrc1FeWhUjRzZBujtME%2Bi1EJo80UeiAWgNEAoygvLSKgoUqSGm2eAWvizjU%3D`);
                U12[`arrowMapStrings`][`push`](`1,Quadular Grounds,billioninjoe,1324297,eNqllr9v00AUx%2B9cjGsDUoU6MHrokCEiahMhJnytiqJWDMBQYLSbNNg4drDJQod6qMTIDH9Epap%2FQO8fYOIfKBNiQZ0QG5yD7%2Bw7%2B2q7vOXpok%2Fefd%2BPe4mhaZPpDKhg5dncHs19OzKHUTgPRjG47bi%2B74aBG3jhGA3AwtAa4Mz6ebAw6zI7H7%2F%2FNjxZPaRn1MnAm4amzmKgAdFKn6CPDznPTAG9Xg9AxoWI5wVphO90OgXex3V8t9sFENO4bva91cxHWOQfoz6AqCWPHdwufkve%2BvEptc%2FW1%2F7CrAsgMcWZGGpFS26VWvIqqS4Z5Euc80DGcy1k%2FA7vxRaKnzNeoge35EvxB7wXRxBfk8cCJ6sPuiaPGvK4Jd98pO4O7WBibhU2h1k5Yqr42tkCuRTIG%2BDlaUwk0%2Bmnr2EvkY2M53mF19KQp%2FExHd2G8Zvy5zS%2F2hKqT337XVysGjpCNFZm%2BG122yN%2BJxRu%2FeO%2ByY%2BM30ykvEd463em8oL3oDQX4rIWA0K6AzbvHyfcW6HJACNN9CCMpuaDyhlZwtvCpqdju%2FzPn%2F96cW%2F3%2B%2FYHov7LGbkE1fCWwJeSkK2JbAab9%2FDOE3se7L8eR%2BZz2%2FUl2e0Iatf420vZ1fD%2Fmx3rfW12Kyy7LfJXYX8cgWVD06fxLGDa9hLJ3EBynRKtG7r4MKvQJYJuGDr9xcQjIEUVgvYJmgm4CiVwNMhRqQCYlkZx1nMBV6FEq7ORpyUVANPHpjhEK6rTClO9ijPQIdTTw1%2F6LfRC`);
                U12[`arrowMapStrings`][`push`](`1,Double Katana,katanaioninja,1353828,eNrjYmdPzy1gYGXgdckvTcpJVfBOLEnMS2TgzQbTmfl5mXlZiQ4mDGDgoMKAAuzfpYGB%2FQcov6Xqofs6kWoY30EDqpCDi521oJiBnQEdMKILOFRC6aIDqBJMDDExMQyM9i9ngsAs%2B8vGYGD%2FgAEH4ArISSxJyy%2FKVTDmYsViNQ%2BG1Z7YfQl0ZHFxMRanujXgUg92KoZ6Syitx4DuNbD5MHm4ej387jlAonoHIzT1Kgx43X%2BARPUO4Q5g7gETtPCUgdD7P6kd3nP7%2BTqgf2tqaoDqAyDqHVyg6mD6FNDUszHk5%2BcD1QdB1VugqeeApr7bb%2B7FLhRdCQ%2FPeKh7PLHHr%2F23cAmv5y7tsKTlEAZVD%2FW3gyM0fhkw3N%2FS0kJeUjTBmhRZYUHngCPo7HEE3QEcQWePI%2BgO4Ai6%2FTiCzgFH0O3HEXQOOILOnsigc%2BBU%2FB3ioiuBCBpBRNApaCTnF1RqYg1BpgMpCyAmRKJlBhE0lWwM%2FzOzgeIkqM8CqocXcRSXO0wHciCx5JAJtTLoAIpTkMoFUOQxOJCo%2FoAKsU5FBK4xvsCFl2QO%2BWjJIgijkAZFL1mBBc4ZByrR5JkdmiBWHMhEK0RVsDmSEV5%2FEK0%2BkzT15AQu%2FpTrUDABtZiF5R0RHNFLqnoV0iPDFFRjc%2BYWF%2BQ5ZEGjPKwBqx5GRkZg64E1uCCxPI%2BL8wBRqnnAqmGBwulQQIamA0RpEkbWhNALi%2BN4ByL85ECUanQ%2FQXPKAT0GYoKNKNUoVnAyMgIRAwMALJw18w%3D%3D`);
                U12[`arrowMapStrings`][`push`](`2,Stone Pillars,Team Arrows Ram,54144,ILDmJAhZIawhjrAIwBUAmBxAnAVwC0BlSARQEMB1ADwGcBNADQCkAvEHAVQMoDEAXAJIBRXgE8AxgFscAZgljIRepQAMIUsAAKANSw6AFgCMSkCQDtmANwyyAsqE5SBIZgYnhgqgCwxE4OxBBBGR6EE5IABtfRGBSXhxYpOTkrQB6WAMAahQAJWEAGVzPYF5gck1Y4UgCZNIsSsQAEWAiRoQCtIBWQQAzfk5cgGFVMKh6+FjoSnaIOzhkgHdhScQhtKyiAAkAdh1hUn4sBAjaYNj41ZDgCVok+dqkqwzsvMLiiDKjIaTqx9jFlsCkkWjMkp0ev1BiMxsAhqQtgAmRYpVFo4DHCBNHQ6PBGZz8HikRyIgzufRpHZpak06ko4C9LK02k4SnMmmLSAAS3oUnOUBAKB0+K6xkoOlggl4ADkAPZMKKM9nUgAcIC2aWeyqVyrVnF4ZH8wGlOkoXTwKhQkQIQ0gaHIWF4iwIjE1yrSUDZytkbuVwGEKGlaHagWxuPxAiJJLJEgpVOV9J17NZ8fZnKokVlCGEguFUlFRnFkpl8sYiqZuvVvvZSeZat65i6WRCmhNZotlCtNrtDqdLurzM9qeZPq17OATVA3gA8gLgOdGIFIEK8QSiajqpR0Uk0jEkus1SC0mg7KxT+f2Nur9eb7ft5poKRqnEc4aIDmwBONCBFzAVxHCTBO9t13VE0gANgIKQoJgqQACtjwvC9gJQ1C0KSB8X0fD9NDKYBOFRQIunQ5IyifZAoB0aVFiYDA8EBYFYhaeg7hIpByLiBAdDQWNeFkIxYEgMR6UQRYsEYtiTmwhBeE4WRIAMDBER2YACExRB5iIETJNKLCQiomjGDo+oPmafDWJ0mAOPabjeP4koQAAXiAA`);
                U12[`arrowMapStrings`][`push`](`2,Partition Demolition,Team Arrows Ram,177474,ILDuJAhZIawhiQEVgFU0HEBiBPAJpgDYAMAhgOoCcArgJICiASkQEbUDOZAGkwA6sATABZgAEQCMLAJoUSAc2TcAUrlYBmfAC862ZQAtWqCPCQNxUorIVLVG7boNGEAaQnJ55iAGEQ4YPII5t6okMgAEgCOxgjQFDFIiSjYpojeAPQA1ADK4QDsAGoMyAAumAhokABsqQjIKYnQ8hyJDJAAWkkACumw+plSDAAyTIEg2MCsJK0dSRFDjcDSLUhi6QCsdABmJWhM3iTSPshiK4jQW75mkADGSceni8szd-cwyHT4-rEBmGNviFA2CoAIBlU6iWQYUWNzOQWAolB9wm8Va6DmdAWq2A3C8SKQYQaBOAE3xCCBAA8yUgQggJAVWABbdaGCgFWC6AByAHtpNxIEQtpl0iLRSKABwgcLpABuYrFQvloslkQpHH+P2A9KZLPY7K5vP5guFSvSkuA0rlpsVppVao1PhA2uZrP12B5fIFNqV5stpvS3vldvViTEToZLr1HPdhq9Jp9IDWFMZ7RTaekgbFkr4kRKTDRWojurZ0Y9RszysT6WTqdrjLIFYlwD4VTziVJzuLbrLcf9vtl-sbZuAAEsxOtoMA8cByoWda7S7HjX2pQPrfGg8B1tgyJPEOFw-OowbPcvbaurUqh5Lt7vEnRD5GSyfyxusxfB2-K7e9wgrtgtBAdo0HsIgbgAOy6YBYRmMNqRAdJEVDYA6AdKsABUAFktGw3DAPggjCKI-FQmAZA2jI4JEC8QI4NCQIDwCEBuEw4BvFgAxpEEEpwJuRkqAkJkEmuLZhKRRC3nSKo6zrAArdIsJwpTsOI1S1LU0jyOgciUBJEBZOAfBSUQTDID4dT20o39IAKTlQD5fAaFAcIGG+CAwzIMT1LCCiEgKdCbhwdRWFgSAKVYpBQEwWoLJASpKIQbA0HUSB9HwQR1kM4yEFM8zYsSqzYls+zuEc0AxBixNgAAeS8tSfO0hB-MC7BgvgTLEnKyqLPinSICSlK0sEPIljhCBTNE-L+sKiAbLshyaGQTAsUQMNuGmKb3l8pqAqC1gHQAXiAA`);
                U12[`arrowMapStrings`][`push`](`2,Cliffside,TheRedKirby,177491,ILDuJAhZIawhiQEVgClkCYAeAHAWgLb4BeAhgOoBKANiAC4CqZA4gGoDK+1AMmQBpoAlgFNUEAPYJowAKLAAwgEYqE-GzQ18s+rgDGhNAFZEAJzYAVYOJABJRQHNgACRABNEOAUhG0lC-AAERskUIQAWUh+cCRkWW8w4AAOYBNQ0ED4JGgKEIhw1LCMrMQcvIRg4BYiGuIpRMi9GMRQZ1lmpA7YlhK-NwBnUNlIbALE0Og9KzDK8cTh6NC4hLCkyHwizIngAHly4AK02K3s4FzEyuria-x6sOGm9LauhBeEZB65oZGxlpYebZTC77L5yKJOWKyMjjNYbdInUq7faHMLIBF+c5hSAffgQvqDJCRNhvD4AMTCAHoANQcZwAdjYsmQ9BYCAADKDQoFgGwACzfFh4pAABSRoRRS1JvQg3L24sKkuliEYkH6JIU+25aDCBUwnLCADl9Z1SQAzbbIewzYpcsVIYZwzromV2xAO8bk-Aib5CN6gM3bNy+JCBClGWymphUBRsjwgS61Gp3cWQR6dZ6JN4QD5KmDAAbfUbGvNArFo-bQMj8+0KFi-YtfRgKcJWxBo3PQAAmAGYU46G8ByUbvqYhRBQBqB6DsaTWadcQ3kKToUgFNTaQymSyEPAjvroKY2a3Qiqksfs7Jc3NItqp4PgIRAmO5ApnHo73eNc5MC9uYwCW6kAAG4giAX4-iGwD-t8e6hOBv5QQBCDxAoWbxsKFIflOkCRP2ryXramKIJEHB+gRxa4XeKo0NWbb-NsbDvvakAABb7EBFKwCxVIqLIPBUHiw4Dku3qnKoFz+rmsr7PIsHjs6UCush6wesAABG9YQPIV7IJOkEGs++qzA2CwkvEMIqfCHZKfkCrHNZRHZDiz7QAWzGLN05Kruu9KMsyc4gBykA3NcK5YsA-CaSAkRFjq4zDLgDaTNMxGQL6SwZmEJAUmhWHjFQZzIpApGKraHAyZZxrQOVU5DvckCjhlYV+MgcYDtixl+FWKaYIZcQBQ2zgdEobBqYQRgsWpFBsLAtikgaEhuPwkA0KaVIUhtm0bSkLgUhxW2bWtB2bSkACuKhCX4wAjWNE1TTNc0LUtK1HcdFI7c4e1vRSr3HWdF1wSAN3jZN02zfNi3Lat61vR9X1vb9B3-VQl0utdo0g-d4NPVDiNbTtoaJqFeMncAvIAHa4MmWlAxjd1g49kMvTDf0gJ9+3HST22eOE3J5F5wP0w9EPPdD31wxzB1c+9PN84gc6C6Dws48z4ts-DnMs0jsvWIgrjo7dSvY0zYuwyAPAUoZwDS8jqN2LThtY4zos2+rktba750oyA8gQLeitOyLuNa-jbvfZ7ANyAgADSDuYwzQeq2bXyuxTVOhACBvx8rJuu7t7uHSHpNgLzusRHHQvGy7Rfc-n4c1zLJdywgw4BwnKum6zdcIw3O2gKXeQ7BXRvO8Havd5rasAJ6yHQoSilnlej0nXfs-XasWN2U9Idmw+Bx3edrz3G9bzvIAFYvI+J532sT1LvfAOTFBGKYPsIBwe-t7nD93x7D+wDQIwolfYgGmG3HO1dx5H0nmbQgWgKBvwgMGcBVcx7J2gffNWuBYC4FjlHCAbBP4QLQV3C2VsI7eyQAgy++9v5QI1pg5O-dm4QH4EQ1BK9b4YL-uPZhZcIBxhQcvG+odgBkLCBQu2wA4RCOvofBhPCzZe2HCA4AK5ZEHx-twwuatlGIJAGpdhwi85zFTpTamIAmIaLocncRoRJGhE7EYuRWiFE6KUZHVRolrGQPQW4jaDj8FsxAKSEg59+jcHwGyUALAACcZVQKJGFFScYySQpJgpGyEg4Rsm5PCLlPKhSik02sMMUpMh3zYiqJYxQIBbxSFJKgVM4AoSYBoP0DSkAlC0VePRYsoYrbAFDLgdJhAyDCliTkqZeTimzLmVdMpcRoCoG5MAQYqzhxSgYCQPQLBSTdjUkISAbJWA0FOvgXKMSnz9MthcCkIyibjMmXkmZ8y3lFJkL7JZusEj8kCOASyzg2DP1Om4CgSgtBzGQNHOkAA2G5gyLZZgmdM1F7z0VYRkLYZZiy8wyAimMQw5MlyZ0RMgAp88UlJKpKM24mSXlTIpRi5lQwUCLLKbrJkwAP44XvDAR4pIDA0HJmQZwBU1IckJJAW8xYKQ9KQBSWFRMiAACsKQWFRbkll2rjRNPKaUmA4AEGpmqdImAUgWDgCYqEkAnY6ZG3GNyGqxZkmpJpcqiQ9LNX5J1b6uYXz2VYpcKgUSKr1JRQOJACggy7zkjiKUNgBpQBLU7KdZAzhrmIG5GwCxeUqnLIQJYXZ+y1KDCpSaZqxTgz80YN2VinZMB0mkTtVK0b5lxtUTARNyb+CprRPK+MPJc2Yr1YgIteyDn9EgKAAdYBlxvJVPwkJtb62YBMBpFMba5leQ5VAbtKa00sHNJBHN8z81LvHSWoUVomVwR8pufysgWD8CUN2AShTZCBECCxAdcQrwgH2kZO88g0ARijDGNwyB8Cml7QND8yBwg7GcGOaA0EZi1zmEAA`);
                U12[`arrowMapStrings`][`push`](`2,Arrow Grounds 2.0,Ranker_717,173728,ILDuJAhZIawhiQEVgCVkA0BSBPARgMwDGA5modgG4AmA6gKyzG7C4AyAViAMIA22ABb4AtgBc+xPgA5CAWQAqxBAFEkMEAAcAygE1GAJwBaOAGYA5AF4rCIIWWA9NARw0JSwANIhwPVBABVRxAACRQYD2hgOUcPHhAAZ2AwmGQAcXgkaABLf3V8gsL1AMgg9WQAETyimtqEADFgADV8tQAGOs66yGR66ohocy7hopKjfMr+kengRrop4HaZ5ah09nUchZW6krKkZD9tmcaW9TVMo+GelQXB6eQQzA8ZkrTnxEqLzpVIAEYAFmWjTQAHszsAGBMVF8BsAaAAFZbXW7AIZnSDYCYhBTgF6QNTlKrqCrAbQLH5tMHHdBUxBqSHqUDQjZw7wzHoZFm5S4jV7vBCfEY-AFA9CtYAdK5wgCmSOQKgAhiyAPLkjFYnHLEoE-ZErKktVtaSi0HghlIJkwqCsuU3FlopAxPYfEJpFZ8wlW4AkxrogAe-OGwPFkotzP1NDZ0x6fXtPJGsB48OV8cQJU0tIFAElYJnU4VGgqlUgVDxsFH84VlBAKk0mgBXUT1MRGeakAIAJkEgmIaSaAHoAOz9kejke40wAajHY4AnEOZ6PQJBJ6YAHaAkveuuNkTN1vIdtdnt9heL-sT6fn+fD8+gCoKAJNHUILPbhtNlttzvd3sD2+Lpe579jewH3o+z7qDEtYfnuX6Hj+J7-mBIBTsBoF3g+T4vhAqAwbu+7fsef5noBqFXouGGASu66bmm74EfBR6-qeAEzkB16kexNEbuougMZ+B7MUhXFjhxlGiUuPF0Qgyj4YJREschd7kehknjtJ6gePJcFCYhJFsWJqmcYZUmrrxSDwDphEIcRrEocAaEmWBPAhII-zVogYLWUx+n2SpjkUTOVHcXwrbOhASQ+XpdnKWRgVqaZGlhXQEU+AJumKSJSUXsZEk5aArnuZ5CAdNFWUGQ5Tn5S5bkeeogLlbZSnqblCXOXekApWlwDGk1wmVQF1XBa1y7mTJ1oZTZA3+fFw1zqNXXhVkaj9X5cXsXlI0FUV9WIJAb5rbFo1bQtBVLalWTQTuCnNdlVVBWdtXFVkeE3Zld2DXNj2jiFYkXWlpRTb5x0Fadv2jbtJVQPxR0tWD7U1Z13VZHJ73TetJ2I9tz17QgkDaejIPww9iVgVhkH7VZRMxSTQ0-SOf1SaAxApMAeSQN5NMVbNm3Y09Kn9vCljGvtUXc59vNGfzENg0LIuMiAmAxDwKg0AQhANkYPCQHIoBpLOLKmKGqjANgWamGIARoDwbS6PCk6FFQ-YFP2bSWHIHte3rla+-GahRPjIAeG8CBgoc6xgN6HhovUmSCAkuiYA2uhdpIsCQJoExxyyPDaCEg7PsgYhpBU-aBggZeaCIRg13XCoHFshQxF6ftt7C0QQASqBRAS8yOGkfqCPQDCcAqfa4PrXrQEW4Lm5b1u2-bjsFM7+TQJi7db-76XhL3wcwOMwBZvgaT1L8ojmCCJjrA36JH-swCwIIk6-GgKjsGgpD9hNiD9gAbLXIBdd4Ct0KCSTe28oHs29B3busDZiWBAOYOQWZ6jQGIEkR0wAV7DB-gUHg-ZRZIDLgoT25CvbQKoTUHu7Mfh0PCASeoSDUTaDQSSTBUEcHTHwfkQhxDECkIoRQ6hoiJgaHlNAeU4RfTMJAIIEIxARCzgviIQ8+Am7syzFmCuRQhHe0oUUeEs5hHezEeYuBUj6G0OAPxYAysYB0FAKQYg8RcBrGJMAfuwwHZOxdvkN2BjyG4gsWI7u1j6GLBgOASAxBwD1GINkSAoAswVHWLoLBiA5CQAfl0Xh6h+H5H0aY0JFjaGSIYTAt8iD5GKOUaow8CgfhUAWA8Q2+o84FyLiXMuuiQDsDakgYxpjyGlLEVEKYqBvCQCiuAHuagVAeAUKkWYHgWixJAP3Hgg9h6MDHhPdI09gCzy3PPK2Ns7a+NXv4-UkCxljIJCEmxag3QwDiY4ZAzA-b5PUAA4BwDOD9jIUElh9yqHlIieEI+ghgDEDuV3SAdBfaNGkfjJo5hQBJxoPWUAIRDj7WaH0lYPQJEICaEoM+hB8AJEztnSO+YqSopAPUAIhBIDDw7JCO+JZIDaBCfGbwTKoDosxZgbFTJdHQFyfGa4Viojkt7PUKlGdqn7DSJorUcqYEsrZRyyEugvTZJoPynkKLIWQBFVinFaR4UgBJJgaGlxZV0PlRSpV+B+T+BNXkyc+dC43BLn7c4WJ6XqFMCOToJIZhlwYBbc5S9kB0DkNoAI3qZi9CORkghI4BHrxADEGY8J+zP1fu-T+RLiVm1aJASeBQi2DJqGmuo-ZfVdIDWkFQ9ROAqD4AWo4PxpW4TSKGxAPBnY3MKMgAAvFOoAA`);
                U12[`arrowMapStrings`][`push`](`2,Arrows Warzone #4,GudStrat,94011,ILDuJBhYCEEUKKSBAlOANAUgTwEYDMAJgF4CSAYkQBYDGAdgA4BueAtgKoDmZJCkAUSIBGAFoUAcgAZabClIgwA1FwgARVcARlUBAGoBrDgVQ4AmhgTA5OEBWYB5UAMTRgB4G4ASIDrBAA4iBkKIgAssBhCPAACtSMABxIMMBKAfTgyFnZObkcagAsAIYAZshwkAW52QIwAJaZ1dkUqemNIC4Ark3IKaIA9j3ZsfFJiCkAMppDKAGMM1n5xWVIFVULwLXdG4gtaRlIXTtqwGYAzjuKcHGJycBTO6ABRZcQS6XllTthMACOVpc9m1DsBtgsTnhpjt4F4vADFPcoa8kAB6JQAZS8AHY9AI4AAXIJvGAADwUn3WdwA6vChjEUQZqEphKgBBNUNMWrQiFkjllQBQPBs1CiAKxkEr4jioSBSMxXWG0-wPZA-eY7NGYnF4wmIDik8mrL69YBFJVNemM5ms9mc4Dc3mg7JwLwTY5iiVSmVyhVwk0qpA-HDtIaa7G4glE3wwUBC1YUFIm9Hm6qWpkstkciBcrC8+Dm5xxmYi8WS6Wy+UgGGQJUpDguVX1EM9MPayN6mNFiBwBNZFLnHZp62Zu20XPIWpwc1wAIATndpa9FYVNZN9ayP2YKdyrYjuuJsayPcTSBORAApoOGembVm7Pbx4d80evBgkU0S57yz6qz2u1XgAkbIfjvGZIBRYQABtaDMdFOiIARqEaDwwRmFJUCafUG0+c0z0uZhr2HW1s2ADDHX-FA-Q2CYPTLb1K1gOABAolInA3GAACY-AWcCMXDHUo2AfVH1WNQLhNIhIJ2AirQzYj7xExAXHfEBQDIUVa3tWxXngChKXGYBk2RYyUOhUjMPcZ03BNAArKSJxgchkRaGlHUNeNBKGEUqT0ElqAAaVFKRMSuAQWAwSAbOEUB+nnMJmyaUA1Gwy59TdI81Fw05REdUAVKGFp0QSlx3MQGcAk0sIQh0uA1G4u4WnYmzBk+YyhOAYRnXgPtTgANkdfKCqEhilOAElnQoEgshON9kV0zyAKidjaASgV9J2fVLyPZi2teFpZocxSIDU+ddr7Ht1oAoyJ0gGJtzazbnR2s6Nn2lTaiOl7qngZ67jYxsOJSnpeK1PdBOE50xJ6mhpMIuS72SxAJD0KlRU6MwqSg0RIBgAAVIoAgoUBRAwFECJRCnKZRKsUSxKmqYIMn6cp4AvAkAgzHAE9QmR1H0cxyDsbxgmiZJpnmep2BaYllFGfJ5ngDIOoJiIaIkFUXm0YxrGcfxwnidJ+X6ZpumJblmXFeV1X-EQcBNf5nXhf1sWjapk2ZfNiXLZVtWEUAlGtYFoW9dFw2Lal03mc9hWlZ9m3f39vntcF3WRYN8WFYjj2M+N2Pre5mANYDh2U6d0Oc7drOzYrlm899qs7eL5Pg7Tl3w5gaXq9d2urfrzwQHt5vU+dsOvarqOa4p7389cBBB6D4fy+7qfx-p6Pc97+PPCLpOF7L9Pl8ljvI7XyfqbrrfIEb3fHZDg-287ifD+nvuTkTwPb9b0fM+P7Pn4v7mmV34lxbiPM+7su4WwAYgDQwCh77zbmPX+kCvbQPUNfD+pc76IJ-o-U+-9N7cwbPPT+YDn6rwZuAtBHQ55Nz3tg7+xsKGU3Xm7ahmwd6YNAUvB+J9KEELjkQjBIDF73yQXg-hUDCG7AHnQ0hPDxF8JYVQ6R2ZaE3ywV-cBzCKasJ7oI3YnCREIMYZXZBT8pEGOzMI+BDDtHmPwZYmeEAiQkM0WQ3hf8LYSA4kof4yAKpwPoVo8hDjJFewCBhGI74AhGNsSEzxKCFYCFnAkAATlkAINjgkeMUV4r2KT0lZB8EE+RYjcFKN0dogoMQKpAz9G47h5SmFhOUeQmpdSkBeDiTkhRFT8kK0icAaJyAvDZLKTglpEi2kWyGSMpA1VGmiMmWY6ZVTn4CAcFfJUZB1FcOWaYlmOjZbgM2ds5AZAekTMOSvVp6zvG+P8Qs8Z7i+lMOACiXqog2DfN+Wweg4D6T9GEO+ccSyTH2LWSc5+Pi-FKiwHs4xdjQlQr0VPWFTzEBYCua85plcPlfJ+US75ALn5ApBcgLALymkrKOQSv5fzSUW3Je+fysiNE0puUfVF4CMVKn8oi+JuT+lJONny5A-kcWcshZU6FFszmgH5dSg5MqBnGzme+dK4LkWJIsQUrZirkATEFb0vFRy7lyv1ec7mDxtUJLyaKt2Gqt4TGVRClFsq0XU38kUUUoEIARFKbi2ltyeXPx9X698bgYArWAP5MwcgbJFA4kQfA+hOg5S+jAlEg0RSMGJUSooMRZxhBIKW8tZas1VurTbWoWg60IBGlofukQbaNXlDGRWIAPCQFUOlcAQCHAgCSA2DCMAQgCHAH4GAfgKCqAwHYKawA9CgDwITGQCVuwUHutkEUg0IjVWQMWitJ6a1nrOomBtDbgC5kgBEIkdRPAIARdYTwtA40gHVIKEA2MiAYFQFIPAHEsTACIPVcIMAgZnRONZU8SgODnk6BQLwaTqCoBA+e4ytUd2XH4B0CADZVA5RgOsDAEROJYDoPQLAjASaHsw8gcCYxkAilxiestS6GNcYWHhzYyBVAvBgOJMjsAqSoEghYVALVq09hsjkAiOQURSA4yezd3H1MgmbQZZtrqwCwHAH6GAmaBC0A4hQDiohaAxmnF4TmVaRSXRADEAoqBeoFAQ0hrw4kNNnQiEoS4iYyApCYsF4AJwYBJH8uAbY37gC-v-YBjiopQPgYDZB6tMHd3wcQ8h1D6GfMLCSjhnYvHsKEeAKoQQIBXIwDZtQIgbA9D2ig5sTigas1oiywIHLKG0MYYK21E48yNh4ZC-W1SwBfieHAMaxWAoKInDY9WmMdakB6FxrQQmBA8AGCM9kZwnGs3vvG9mYwMB6vAdOC12ouNBrIhcExZIegJCgAsEQToM5uYIg4I5tqiZQsQHW5tig22ziFwLAIQ7X0zAA9OwQc7RAktXfYvFatRJVtVme69jA72is9SAjW5wsPl0ba2zt4ApVuxAOrT8E7dgzsXfWKoXZZm1IUBYOwJrn0IArH4AICQdAcZFCA6KSCFRtySuAI1KwamBtNBcP5145NizIk-HRZcNa-x7Qpsxpo7W5cbBSMNjYeAKay6QObncfE2z7mrbUTN0I6XVAALzO6AA`);
                U12[`grappleMapStrings`][`push`](`2,Spinny Capture Thingy,TheRedKirby,79820,ILDWJAhZPD4cAisAagVQMyQA4CMBbAViIEkBRAOQAsBjACQCUBGWg9Ac1QHFr8CAJkRAAXdAENuqAMoAtAOqMAMuIAaAKQCWAUxTRgYyTIXK1W3cADCtTBAAq2gBzJ4pYABEQn4OXiWYEOAAroihCNCyAJ5hgcAhMWGeUQlgcWFI3LQcKQnBYQDumdk5YXmhhfrhwACavrlpoRmV8NC1KWWITaGebfXxiBXdNXUxHSVewMl9BUXjoWPwGe7FLcCqAAztDQPcy4ieG+2QtChzZ+iWAAqnCEikAvlnTzEAsgD0AJwvAF4-f983Z45bj5ABicAQngA8oCIORILICu4IatDk8kODQtAYaEXgj0sihmjnu8vr9yT87G8yAAzMSMSzrapA+AgzH7YA4xDwxHlQmIaDEuYYlEQbGwkB43mdfmQtabZ7NYCUVDyIhBaryZgAG1klkgdkkoPyslUbwAbm8rdarVA3gB2G02zAWp3WqzUN7qFY+DyoVBBQigkQKJAcdAAJmodCkDrdVsewBpAGp4584-HHgB7GmRZkQfzAZioQhEah4eSoUCkUGULPVVSQbUptPOYD0V3xlvx5wAaXojgICEeKrVGq1uv1hu4xtNnbddsd8ZdlvjHq9PpQ7n9gYIwdD4ajMdQGbdie7bo+p6d2dz+ZAoJAxdL5cr1dr9cbzdTPZAHdXboXk6fYDkOYrZKO6qajqeoGkaJpmgBTqLmmK5puu3rwLQfoBkGIbyGGkbRrQsZLmeIBATaV5kTewA5nmrhPiWxCvlWNZ1g2TaUdabb-mm3FWiBg5+CgkHjjBU7wXOSE2ihy7zshliephEBZjhu77gRh7EaRabnj+l7Xjat4MRAShMS+FZsR+nHfq2f4KTaAlvEJYETMqqpQROsHTrOiHoTARnWmha7kB8jgAE4IJs264Xu+GEUeJEnjRxkUQZTrUXpwD5Iw0jYS4UIWSxVnvhxX7ObxjnWpVwDSKoAAscC+O4I6eeJk5wTOCHVbagWpcFvVvD42rJuoUCSiABEwMWGkJSyORvA1CRLWEVJ2P8-wLdtO07XoyDwi4VgIHU2TeHoKDcCABWqC8M1xZpEq7SAq0xG8ABssgEF9P0EAAVm8G0UuSz2g2DKT7Ugh1QyAKB3cAoLfCAWiyIm4MeG8PqQm8ODfXjX3iJcZKbb86Nk+j+jQ9DHggDF2SXCAjCTNEiB4uNZOPlDzSQKglD5A2AhBIUWQctIT07ZAXNHSAqB2CRoKYHgWPDuQoqg+g0AwxAoJYJA1ACBGy2vJAADObjo5zh1irz-OqILIC+JYVB0Pq4h4BGRDakgsAxN4lOw+TgfY28aMxOQAC8QA`);
                U12[`grappleMapStrings`][`push`](`2,Get Squashed,The 9th Doctor,81600,ILDWJAhZPD4cAisAsgJQEwDUAMBJAMQDkAPAEwHVCAvAQwHFs4BWAVUbYHMB5ADXQB7fAFF0ANwCaAZgkBjLjBDtOvAcLFTZ4hcADCc6RAAqAdhAoI+YABEQhCyADu8ESEUBle8C7HEwET09F39Q22AAM1wwmKgkUQAWRGguUEVYhCcACQBODJi2PQZoxCRc-IrKtAB6AA4q-LtfMIZskRD4Ow9LBFRIAAdQp0I85OA6Hvg+iMmIMvbELtmQEUhSVH8yvnTO4Dk-RFWARiTQ1DqGjKaD-3QnBm3F4D4S3sgASw74e4AZfzsXv5pstgMM4AgAa8ppAPF8IL9-sBukDIDN-E4bODdoCGgixjwQcDNiIsRBIf5VrD0Qw-mNKITUSCkCNETiEKtPtTaQhoAAtACmKLRpQeOzJwHpKIANqdMoRSQgaNU4ZdEKg9JANv5IA4BUKmTTEZIAM4Uxnoll0hnChDM7m7E1mgBSQ0tPOABP1DTsjrVwBYrtGEKR1pBw3t4t9b15gdZUIgRMQeODUehMotQd2erVkBjm1FT0loRsAAVqqrYk5RCqoMa1lrMiTERMvSKFeE2a56+im2N9maTuisgt3eRBaFIEgGO3oC7Lsz25VwGxXTOJSD4MvQgvtevYivF1P23ZeYIKxkXQ4UQBbMVzeWxS9nSC3i2LiAOOeHAbbhh0c+xHoSCTrup5mnmYRASBYxgTmEETkgQG7i2AEVlu3p7mEIhikc2AAEbXiwAAWeGUMwRDEIIkh8JAUoRAA1NUTHMUx9TAFk1TiCxLEMdxzH1MYhA8HCKDENglAsAArpIlBHFKvIasYjCEE4vJ8JxfFMVA1SmJp1TSBpmm2JIND8kgbggNYNjYNgkkEYQAAuvL0lwbCYERRFyEwOl6SEvGaTkPmaS4-I-LgFkoHYwC4QRxGkeRJBUTRdGMZpbEcVxmn+Xx9TEDQxABpY0DAGJEnSbJ8mKcpqnqZlfHabpmkGXV3EBKQximkowArtZtn2U5LluR5XnYEFfF+alfGBY142amw5iOAwIAxYRJFkaAFFJbR2Xcelhl8TtLG5flhVQC4pVSTJckKZASkMCpan7a1MBjdxzV6foREluOECKLALA6AwREsIYT0sQ1envUZehfeOxXgP9gPA6DLXgy9M1vWDzGfd9UAgGe7FY1p6OQ0T5Yw7j8CmojXnI1D9Uk01ZM43DzgwKAAO0yD9PPZAr0sTz4MU6zwAlBlH2M3xgvY8LCBJDTQPc8zkuY6jMuw3jwD1ArdPK3zGMC8zstKMVhNq8T+uk+b5MaxAkBuDrSvWxDTPO8bxUrs8GyQLgxBSnQlCkP0BFyKhYTVLKiB6Bc-zVMYqA0AnSc0GHqdpxUKCmxAFlihZfAbJi5AAJ7UZATh4Qw3BsAwOTBwAdugKfp-AJb0TEXHh7gifd0nNbN-3YcRaE1MuNYYD6IotIuDYKA8CA9QWeg9hN-0egycQABOvLSE64hUCw76oa3MSt9evJnxfp7VF3ye9wP9-p0PFLuDAeZZEgO9HHI7lSnIxp6CWSOFRqj0Q8FkUw2ARBIAcgwGw1Q7zwB+MqUIZYH5oJiBseMFRioWXgCgPQjhQSvxAO-T+38iK-1AAAoBGRo6gPAZA6BsD4FhCQX3VB6DOG9FFqqHBpR9AgBXJARQ+B7iDDGChKo2RHjanMtASY2BjBeUINIPCdZORtkuH0QcoQ2DyNwcAQgbBpCQCIuQTA5hsAE3ZD+DCY4wgODkfASA2BiBOGouQSSGIaFKEkZUaRCC4irGQPARRyjVHgDbvmQ+z4dH+D0cgAxRiTFmMwAGKxZpxFVDsPY0Ijjgl21ce4vgnipwRjxn4ioASELBIUUo+6ETIAAEcDQxJRHExACTzLwGSaY8xkcCFoHPCgUARF6JHHQCIH46AiKQB+IILwadoByAMdnbqJ8mJ93RPfEQIhJJETHqnVYTgmTQW1GWcs+QAC8VygA`);
                U12[`grappleMapStrings`][`push`](`2,Cubic Combat,Clqy,33467,ILCqJAhZIawhjrAB4BEAmB1AUgBwE0BPSNAIwCYBGASwIA0BFGAUQDkBnAY3vmGZaMKKFAFNmAYS4BmCAEkA0gHYQAd2CDgEkCzUIADMDQBzYAAUYUEDhDgJpuSA4xTAWRBdgAcWaRGLPiRgAGVmRHCIyKiI0EgbCP9A6OSUiIAxELDEFjjUvPyYRIjoUIKy6NAJL0NwxgAJAE5y5vCM+PCconUWnr8JLIRoLmcenvAkhHqAGVGIswB6WAALAGoqACUWKfXTEDbIzu7ZiDR5gFY5ADMAF1B1iX0CCD6B5+Bh4+bxyOnPhAXlmtNttdsB9hFDn8Ci9iu8RlD5itgnUlAA1QTXLwIWJ1UGTFiiKEFDLrAAsEMguKJeT8BNhZOpeRxeIg-kJjJSGVKHVyHOStPZQQZfIqvNqARF0RJ5J5VMlxSK4RKr3lEGZCTpqtamQp7S1zzZ9Jl+pAPgQVFRZAAtmclmQsKjYHI0mwAPYMSAAG0uK3mfv9foAHCA6vMAG4BgM+yP+4MAFWkRHhIGYbFRWDOAFcCFgqJ6AFoSSBxgCGXjSqnz9HDMb9UHmSlr82kNdrGgagYATohHGhUajM9a0td81hGMZQBQlksuF5UQ2m91o7WGgva6pIGZLgojkYQBbrbb7Y7nW6Pd7fbXg8BQxHa8uY-HE8nkGmM9ncwWi6Xy5Xq3eY3rRtaxbADIxgfRrjCZBwD7AchxHMcJynGc5zXGMl0vGNV2AjDgAwKZwAQLFgAPG07QdJ0XXdegvQfSNr1vJt6IDYM6mCKgkHUN8sxzPNC2LMsKyrVtAJgdDI1ApsIKgxBTDgwcrWHUdx0nadZ3nXDI0wpscMXfDCMQeIyKPSjTxouisIYkNRMjFjYxvDjEHsYAeI-fjvyEv9bIDICmykttIEg15nAUhCVOQ9S0K0gMdJXCTYoMoiIHcUjLXI48qLPWiLybRifP9eyg0cziEDQVN014z8BJ-YT-2k8SYv9ALAKC2TLGAckwqUxDVJQjSEv9OLsMGv11AI5LmAsNLDwok9qPPIr5nysCoys1iSogXRdFcyr3K-QTfxE1b-T8kCCrrNroNYIx+0U5SkLU1DNP04Alr09dN23Xdgn3dLTPm7LLLymyTr9Ja2KcnQNG4va+IO2rvLB+YzpjFrwJYDtuwNW74J6iKnoGpqxpAd7RvmcbDJTYBUT+2bMvMxb1ocm8LvmCHgATJMEDSUw3PhmqvOOhrIHJ9HfKuqxIE8bqHr6qKXvXUnmb9D6MK+ncECeGaMrMhaco51nkY59jSo0DRfHzU1GGkVEaHzX79FUNJMwiNBgHoZL8jMFZoh9q18wDoP8zwYAxxNXRHASMwljwa9BhSVRyuaHb-GgNOQCj6mwT4fNMFwT05DQGwsGNBAcgwFUUnmMvwnmAA2QOm6D2BICtk1mBZKwVi8AA7Xdoeid22BaZh3Yz-wQFMZAZXDuA2CoAgrVAYxXC4SAyC7-g0jN-JTi3kBTjwYOg5LRg0gmSVoG0CE0FJEtLgSZJ3BqMpkEYdOcn4LRM6MS3rdtvbX6AAvc+rtwju09uUH2fsVgnybqHcO+pI4-BjnHJUidk7lB2sYL+GdgBR3UNNNIwCQANC8Dma4hcWA4CWAQCg1xe5cCtA0Kg1oq6fBrtEBuzdm4ACt5hxlcMA4RojSEmgkVEXw-A8Gp3NjnfcbAyDSBDtaLgE5yxEAwNoLodQyADz3GfaBvsogbirtAS4r9JHWOiKnORW1CgwHbmwOMWAGgUBLBmXuzpIAzl7uONgrcKDx0mF4S+KR95RHcF7SYjQbHxKiMgL+8irDAG1uHNAoAqBhgwFaT0mZ8wkEYAwHA+gi58OAEYnkFAiDlC4ZEd2GQKTzA4QkmxAhB5ZGYHUPYfAqBKJUXgNRGi0haO0PoRgYS3b4Q4AfKIMDTF+FhJYtpqyHHICSQ4m+bcQAuLcR4rxPi-HjjXpAYJERVBTLKJEyI0SfhxLWaszZ39kAdT4BkrJOS8kFKKSUspaAR5VMQK4M5tSyj1OmU0nkLTHmrI6dIyYwAFC9MUco1RVp1GgE0do0i9R9EYKBd7ExkQzHLKsbC6xcjnnmwkOoHZrlXHuM8WcbxaRfFcH8cYNggZIChwSHorOeQbkRDufypoFL4nv2pR1boc9YALyXivNg693QJD7nMhp8w5lH3gVaM+F8JE8N1bAO+D8n7RBfs0KVMj04-0gNtae7cfCAIdsACgkylhd2gCWQURLYG6pDmHVpjIdW8L1YwNBITUnRCTsGqIO1VCyOQI4Fg6giIGuAHnbAOBC6YEqSRYFvLa6pAhREI1YbW7t31P7MNgae79w6MkYeo8f4TxwTTGA6TfDysXsvYwAB5EFqrwiXN7hqt2WqoihpPvq8JIpy0nxNffR+tRn7AHJTSHQn9bXaGlt4TOztwGIHdlWok2hkkIE9MEAm0hfEYAoGcMOxbgAgrnbMHpGhXlaFgDgDg2AV6gFvUse9KhS4Uh2IyEi9iHgYCIKOAcp5VAMAwJmMBsJQDayJEs15yAUD5lHCgDgyjMVAZA-mkVkAwxxqtTI5yqIc01VnGkaQZBW7DsQJc8V1Io6TwgAoRgVoUBUAdsWJjLG2OYdCdR5oqUukvqwA6IjXgGjSEQ8hzMlzPUYNPVCDZg9gDXDqMw1EnoyA0FE+WFjDgrB8OAQfeIKA2AMGAMYVxF8RMSFEHGUOtmD5NOgL5yIyLgDrHIOWM4jA5CBmfT-FMUWYu0pC252AInGDKLYMAzxv6PNeZ83ZyIJEAv5ZFWQ699B8yeg5WwAsLBYMMBDhgOonpgCBYiB+3YBjN0SGRGiDEXgWBzgwMEV0fwcj1y3ufN9kBLh1iFXyRg+ZURUAUOO-I9QACOsIkERC8MVPIqVmgAlWBsLY6wlhek9ptz40BRAjZ5DpxAM2Kb5E66kCQiIevokYJiAbqIht3eOGNibGaIgSAWCjObHIFtLZW38DbW3Wk4D26kA70DFjHeBGdi7oArvHBuwD8u9LIidhJnkV7KRr6fb679-7o3IDjYSCD8I73ZupHdi0KY5wri3HuI8aHy3Vt5Hhxg7b4RXDI+iEAA`);
                U12[`grappleMapStrings`][`push`](`2,Orbs,kklkkj,64477,ILDmJAhZIawhjrAEoAUDGBbAUgLxAC0AnAQwCYAPM8gexAEVgBxCgFwGd2BHEfDCAGoAnAAZkEcDhAcYIACIgAkjADuc4AE1gAYSYrgAVV3gIADhCGd0xIwCi8W04QBZSAFdnXxADFgAM1EnO0hCZ1UACQATdW9beQB6AFYlfzZDFB1RbRA9PTiCrzymQtKEYrLK3QZ8qtKKusKGxrjmlqKakvavSAYlRyRgAHkustVmYW7DSATRiAYHJ0UogGY6tATYAAtBAEYUOwAZFFNgaRtur3PL72ub5wsIADkANQB1JPdNN92AG0IdJAACqkZg+VSEAAaCQAbgl4Qj4VAEgB2RGIlaw9EI4B2YRmYiIOzAeQvF7uABGWB8bEIbwYoEM5C2WwwzBeqOx8Ni-kEXISwk5XNUkDQ-gA0rFciBdi8qUkthS3i9YEofE9aJpIZBfrz+Y8IliuXquRYgThSAA7RDqV4fL4-f6AkFgiHQuFc5FormYj3Y3GkTSwKXAJik8lUml0hlMllsjne7E8vlcwWJ9EitBYUhBCB+YCy+WK5Wq9Wa7W6lPYg1G7Em6vAIGEdwABwQkHAds+3z+AOBoPBUNr6K9-N9-NxQwAygArUYCcOU6m0+mM5ms9lCpMgevotP8kVDS2kWQQAyFrAKpUqtUarU63eImt+9GPhEWFCaQRvcpMLsO3tnQHN1h0RUcfVAnE7FIHAsEQehF0jFcY3XeMtwzHcqz3dDEUzCUQ0OGU5UvYsbzLe9K31EBDRfRE33hM0VgAT1PBQQH-HsnX7V0h1onEYBwhFx09OwmNgX4QyCRDl2jNc403dNcMw-l92FSAXiwQkECGIii2vUs7wreiEmffljIsKcADZxQAS3KdRQigCkLAGe5CkSFssEILyfNIDY3NKaALkQRIQyqNwwicfy4hCUNYqYZADHpEA3kmSLbGJQQAoQBJLO8-KfJnBIwuypxOmcEz2kUQwckQQ5iriaAFia4lQxJEAfEcHwYXGXhbGgSFWICtBBB8grCFoSrSu8YlXIQaKWlUHwAFMKqSSEdBnXZVFoYQMC6Zq4uQYlkEcmBnMgGyDBtHx-Gmjyxt8hbpqcILnFC9o3FIU4EDhF4ImILYUEsgAWQxTni+KNGMYBkthyZIQEWw3CwEqbly8bCoal7nHKpwpsaRQ3iRuqEiB0HDGW9wfGulqWsYFgOq6nqIkI+JgEIEHppGx78smx4cYy4A5ogZ66iW618YFrxDsO3E1BgSLIApcQJEQBhmEhe6Ek8zG-ISQXXrOd7scaNxfmu36DZium2uQUw4dS4AMFqhAQinNHLgx3msCKz2cbx2wCbqRQXjmBQEh+o3ZdapgbE6jqeuYcP2owHRudGzGJuDw2QFm5wxaqJao9yBIubiGPjvaxWnPEVRLYgcYmO13XHv13PBmChAPpaCK0bQMwfYmiBIaajRc0dg2MCGkfgFzUrvcxv2O4QQPEBzyoifLkKEg4KmfABoGUQgW2FgZnTgBnLQ4ORyAZwb+4-BjmAXieVQtSidwGB8cUlmAHNpq9FHiAF4QI2Q+BWBSWAkAWyu0bswbe2VphHTaj4QwKxIBbCiOQY+UR06324PQUqT9IYvzfh-dwqg7BEJCqgEuNwgG22AKA8BkDoHcBTiKFONxkGy2AGgjBWCcHACiBfRAbhmAvRIfTdS5DISf2-g-OQbwaEBUYSg5hYCwSQJ+qeeAMMV7AFULURoDEyjSHzIYkIItGDyEQbYfwSJ6gMF6IY9qpBVEj0gMtf29VTYFH0W4oxzAlAl1DtLHeG8rj8KCSEGIThxgUh6Bsa2TQXHcJeooaeTg3CWnoSAaE-i4iBLcQsVqgxCAk1sMwMxpQLGxMgJQeh382avX4mk1xhjFDpXEZAeuXgipFO8CUwxDAIhgHZhSJRfBamFHqW4twTE0YMHkBknQHpSgAF5NlAA`);
                U12[`grappleMapStrings`][`push`](`2,Whel,kklkkj,72390,ILDmJAhZIawhjrAEoA0CGBxAagZxAC0AnDAJgA9SyB7EARWC3IBc9WBHEAKQC8BjKFjwBNZBHABpEAFUYUEAEkEAEWABhCPC6IQAd0UAZXSdPBtZs9FAFLFk-QASHRojUBTAA6XzwHbr1nVwRoLx97XXojH3C-GN1rWzMIxECXXQ9vOziHIITgMOz-VOj40xSEKOMykwr4tRtY4rLEptM04IhQrOScgLy3Ap7yvsQndMHC3uaIcc6FKZGZhkcAUT0a3TqGUs2EbeADar2tUbKGpKWT1qLTOfzF2rPZgdUhtpMOjPfbz9eun5mGTqSTwSKKRwAFhOMMQ3DAAE9wIhVuoAGLQ2Hw0AAG2RCFRGNhwGxSN0AFl0ZiYdi8RSqcT4ZJ8QhyZAKOTiWjgJ4AMwmVbAOTE4kslQ4HAAVwARgBbNEsQgAdXooBkZAAFhr+LgAPQAdl1RuNRo2wAAZgBqE0mgCcBptxr0kAACubJGaFMAAIw4OUAVg10qVOFgijRADkaCI0JAcVbHUaABwgRy6gBuid1CcTKYAKryEZcwMAIzglf7JSIld6cYR1JA89g0XpCGgM1moA7E7yO4ngKtbUniIhOeKpXKFcrVeqtTqcN3HWac477YbE863R6CSBfQGgyGw5Ho7H49bc6m+46Vzb84XLpBGGWK1Wa3WG02sC221ebV3146vaZv2g7DogIjAOOMryoqKpqpq2p6gBNrLueq6Lihrrup6wCOLufqyoGwahuGUYxnGN4mimuG-ialHGneRYIJopblpW1a1vWjbNq27bAY6-5ZkBnarAiAB2dKnFBk6wTOCHzhhJqoVma5Zs65KeP6EEQNIPoEURh6kSeFFobel78Ta9HJsAeaSO4SrMRsz7sW+XGft+fGdjAinGsJIHiZJ+iQRK0FTnBs6IQuyFKSAVm6qpG6QBpWkIBG+H7sRR5kaecXUWmFl0aZVE2XZDkQCo4DOa+nEfjxP4Fcagk9rRjWiRJLIptJMHTvBc5IWpsVFcaCVLklmnaQw6WEQeJHHuRZ5ZnlLVGrlNmeEqdAQKsT5sdV77cV+vHLbqTWAcdA4BfikDKF1YVyX1UUDRaQ1GiNmHJRNNlTQZs3ZSZi3mVmq22fZCDcqxL4cft7lHQ1RqnTafkCW1gWQHIt2yb1kU+aag0qTjurqeNCBlXu02ZUZ82rTRcPZi9ur5qVYNObtUNuXVnn9t50W+edKNXeAGM9RFCk87jz342LhNjSlECEN9M1ZcZC0XjTQP0ymWAIgADNRgpYJVrOubVh31V5kAE0jf7qIo-oAMrgNAkAEEL4Xyf1G544mb0xdKhh5majCCHpGWGXNOUa4DiarYoABWOK6YKjg7ZDxsHR553c0J53OywLoKJA0Ku-d2NS8p3sE86ADyOIYCy5oKxT4f-ar+XqwDBZMV0jCQPLuFG5xhLUiK5W6iyiCGITdzklXjjjyKLpJrKhDL6vhCbSPm8mMggomMoJbqIwukuyAaXAEXGyQBgGyOAPdY+PQqxgpsKhj2Yk84ZUM9zy-upr--W87iAO3iAXeuhNDIB-r3VMd9CCUiJMA1+88IAf2nrPZBsJ0xLxXjg5eG9gGAJ3qYZQkBBSrHAHmGAjA0SMAcpAQQWAoD8A2OoEQspg4EJALqYeuhdQADZcG4NjrqPM5JeBiIkbwTh0jpE92AI-aAj8qHAHlpAOgWANiCEgNrEAaBOTACVGlZkJg2QchONwsw6huHiJsZIkRkjJEyKcYAuRKJJoNxUcAHApg2QAEtP5b25AokIOAIx6BjAAE0lHoGhJg1AiGLFvR8qxFEIBwHmHUaJeTSlgHAdoWBjgEPoIosBwA0QyF5JADUESyD6k8SYyA-jpGCmCV0UJ4S0BRPoFgHhIB4mJK3noFJ8i0kZK-NkvAkBJT5MKcAtk8jSnlMqdUsgmJGCKHoGQFs4ZPDpjlN4+EZgPGuEds4s5IAXTwxiK485TjgLxHoAAXkeUAA`);
                U12[`grappleMapStrings`][`push`](`2,Climb,bychtromae,64092,ILDmJAhZIawhjrAGoBEBGBxANgFwE1wBpAgOxwCsBDACQCUBPDAJgEYALALQEUYQADgEsApgHUAcgHsAJrQBSANwxiAYjkQAFWLWB8IASWBoQWEAFkQ4CH0i3gAYQCiIAKqQuiG6vhe--gMCQVWAjPydIAHp9RB40ABY-aAwABiDAuwd-aAAzNK9LAGp-HiwATnTA2AcAGQA2SsbEVzAS2gqvE01rRAjFGKaIEIAVAnDWwf5XMcmIOycWJNDZvR8ViHcJHoQeLNmIxgB3deARmd6JwegZYhPM7OA88eK-Uo71lu2d9r8ur5A+gNJiExECAR4TpD5osvNAwpMeKozCdNv89HtJhFPCczuM0UFoABjADOdx4CyW8MGPFoAGV8ZV3AIShjISsQoSWl4sWyvDVIgBmABOAEcAPLmLDExT0OY0mTHJDAahg4BOByQF6IQ5YEUM9LufqvVQ1JbDRWIcyQADs5wQmkKLGJXEOKA4AFcUgAOCDmSI+3mTNA01xgkzUEXhSDxSxeXZo6BcFwFSDdAIg1URWkWnZYFj-EzENFoSIAVgMOTwrnoDhS53mviVYszkBYUleDnxkUKtNo1pQTh4eGRbkgzNeaEbCETyctkDqU4gih7AA1KHVzABbMju2ccsXjUv+Q6qd4IQto-lCFJioViSCbsUoOWnpYhKMoHMQQ6T-zd3v9oOw4IO4OSqjwdhLCu-iWEefiaJEsAcIUbD0E4NT0D0IS0i28glGsnSoPqBJvEsGCsoGjTuEIX4gBBqrXCIfhWjgiReAhSEoWhGFYcABCktywBcnGtAKoRXBMZ0ZYVlWNZ1nKTiLlAwA4VGTp+CeSmDO4rGvFgWm5PkvRwHaS6IchqHoZhIDOAgEgoGIpbugQYhsDgXAasM1BYKohxcCukSKJEwUhcFUCRNaoWhQKgVRSFwBisMQp1DmLhoCgKDuhgm6qHgXCgqArgsBwHCElgKARXFwWKkF2SVVVxwAB5YPQwmOCAbAoNlpYcCoKCwAYqjSAQK6QDgOSFFV-ogPytEgBNU0+uY9CwM+CDHPZjnOa57med5vn+bFVXhZFVUxUFx0tfQmjHMgfDpZl2W5flPCFcVpXlfVcU1ZEdWnd9wDlvQ7ZDB1XWbj1fUDUNUgjWNC1VQGtBHXFCNxUtK1rS4kDgJtTkuW5HmQF5Pl+QFF1xSdU3nVNxhOFwqj2MAhLGBlWU5XlBVFSVZUVf9UWKmjUVlF9AvAM1rV0cswCdd1vViP1g3DaN42TYjIDIxTUVC6FGOrQCjh8Hj22E3tpOHVroU2dNfia7TaD04zCDtg97PPVz7286LoU-X9U1NS1bWmjL4OQwr0PK-DavoxrKPa9HUU+qWYqKEK54gMbBO7cT+1k3HVswN7IU08dDsM0zaSu09nOvdzH18-780J6FIv8z74uB1LB4h3LUNK7DKs6yFSP5yFQ-BXrWPGBtDn4ztRMkwd5O04XbfF6PYVl070DIFXHMvW9POfWv1VN1Nrf+5OdSFAJICyj3EPy4rMNw6ri2x5bY-N8PwDDJQKSKANk4XGs8TbZ0XnnT+YVV7Uw3r9Jw8Qyg1FujASwe93a109sfRujxv7BQvg1SAYpNC0gDHwLkstH59xfoPPBNs7ZVXHtNP+ACDZO0zvPM2S84FUzOjwhBSCUGQDGOgmuh965F1Prg8+kjIiHCISQshwBoIPzDs-SOb91bAAYajOhPoWGALVMAZEHDTY53NsvY6MC+FQPgYg5B-A4Cs0evvD2R8G4NTPlVAh30FGkKltQMGvdw791fkwketjwm-3-oYlwWAZ5bSzgvXOFsV5RBPoKfh9ihHHFEQfOuXsMmCzoT4gWkBCS0l-HoYAMgglUJCTQqO79tFwKiSuYBcEXC0BAYkzh5juG2N4XFEulNVCNQMM2RxPo8luIkUUrxcVSk+3KZU3wfBrCULURHAeTStE6Pju-dpoBOkwHAOU44qgMC0EgFIEQK5NDM27nOUAqpAgmHkPiJwkQ6hcE3L8-5m5KCRGGOYAAXmCiFoLKLQphSUfg5JoDkhgCg6WwQQBjEgMcMIqgoXAHkEILgaQhDHkuE0EsDISwCD+dS351BNBlEhYy2FzLYXIAiHodlTNYwrksJAFc8hDh0BwKCmkaACx8VnE0Q4DhTJzAdDSmlUhIgpHBaqiFc0WWav2HRTl7LmaG2ALcYApITDAAkCARIaBbrYlUAQAUNy7mxn8BEPCsxIhsT8A4G2gliVar9bC+wCKOVS30DikAMhYD5QkIoQkm5Djxt1EsCMswHSBHlQC-5SqVWMvBRq-1+aAjJiDUG41ao+C0lQacEAz5hGnGOBi+AWBwAYGCLiiNUaY1xsaocWgTg80rFTQEdNCquBZrVWq-tBap0QCLf4FougakwESLQY41hhjABbcxSA99YUhGLdjFAEhDgjRkO6E8wcmyvKhPu5AKBhhlVUAKDAsBIC321KoSV0L3AcsRacVw9qOAyBYEeVwb6Z2AxZXu3VMBD3HpXKe2I-Bp2wviukHgABedDQA`);
                U12[`grappleMapStrings`][`push`](`2,Rollergrapple,The 9th Doctor,73335,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-LjALCgCaNABYtzYBAIoH8jVfGB6-bOScy5v8Qc+wAV9kB4DIF5fra6zDzb9EmJKyDjOqPgFgIgcoJ12O3X5cR9PYaLKFaBxoIaAgydIOcEyXCuzG2R1DZqx4L442-nkoBVNxhJ381zaGSAYkMzQPgdy5T-jOPj35YJy4BYgYGdvtoCztnoAOfCK5-pnnW2jNKZU+3EA8wUD1EDuwYRGBk71FgOIGgfRRAQKLF51LPT5ttz2PR9Z7BNnJ22bs-Zhy6DHPy3DwrsegcYhByqSAeQ+gsGwTgaTsnTeGcc+13FPhEwgHqIwWzJQoERgcpkRkQpvLFNCHsBMO4dxJTb+UZAj1tJ+qaqoUwprO40FAdwLAMs5YKwIL2WvixPCiyMl+bgTfGKt-b6v+InegTOUC+AVdvqihOACJAGYAVhE+BZH7VwrOCB5HEEUPoHHk46mABgWV+FIBE3X32PGQFPCUmX0mdocwf-RMd7NfICUYDCDCeVC9IWQHcpC2U1EAKgP1DOY6SkGAJbJwZZGgYvCpcQPOdgdTcIaANAHmcIPYVaRACg+fT8UQTwPIFvXcMA5gqGDwUIDOOjYAIgP1beJwFHdIcQGwSAbgGwdaT7MgTjSDNbSADRFKGQYcZICoLvMIDABvQIJfRg5MdoGwTQ1wV-FgmQdgGgggUQDfVsRAhYIA8AYvMGYEJwMqBYDOVxHYBYMzZOQMVPPob6XwIgD3PBU1X4VwCwQPCocacITwU6SA78UBX-YAiIekFgqSC9GIaAGIawYAMoTXYAMJQQxgPFGCIgfQjIOgIoSQGaJIWkcpCAeoSkJgGgBQDAPASASfQoGgNmd8SAHAVTQIOQVI5QmgTgBQSAURLAJ-akKGSAUKMgu0CgdApEToSotSeoe-CBXwNkZYYcaAQoh0UomaDqSohUGouoho+AIo6iNojcTo7oh8PohAAYoYkYnYcYk8SY6YwcWY8IcwFIisZYugVYtkBwdVS8Lgs4+IEosoxIUAA4hAI4xgeojAFKYRX4QE9o1CK48IG6BYu4wY4Y3wLAEsOwYQKgHAGQSOYAUBRMWMEICwSQERCgPZbgbAdgFgBwcQKYKqEAA4YAD0LeRIy4evNQz4tgvknoSkPJSISQAAXiAA`);
                U12[`grappleMapStrings`][`push`](`2,Grapple Grounds,God_Of_Bonk,73524,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAEwE8AjAZgDUBXALTQFlgBhABmoA3djhQAFdqRS96AJgCsAJxCU+gkWMnTZilQgBKADn7AAignJ9wOEBeB4+qhACkQtgJoBnRM4CqvnaE8IGhYYG8ZuQAMuFxcZEAIvbxqYhJKWlZkGaEeOBIwNEFWQ44IaUIfpBeVr5mkZXAXJD0JU229LyBahVZicAA6gAsTRA5ee1QRVOpZjisYxDVtYENmWmUkOxLIH0AcsyDCqwegwCMpOy8kAAqAIaE+OwAGgD0Qm9f319QbwDsPx+jA+QO+wEoKCM+ggakSzDY9FwABd2IMzKA-HIABbYojMAFgr6OYAAMwA1ES3ihCUS8IlKABHWA+cxOYDnZhIhTY+iDZiwcg4fYAew8L0gpApVKMIDQoKJ0qJsoUXjMiwQjkOx1OFyuNweTzwrwVYL+gKJIM+ROAAHl6JRiggLPDESi0Risbj8bSwSSlWCaRa-Yk0ABlW6jCC2DlcrA8vkCoWi8WSgNA2XAeXWsHpn6y6BmNT2SDgbUnM6Xa53R7Pd45oHmqlWqnOMBqEAYYCu1hInCo9GYnF4wgE4NA-2UolBqn08ORywgTnc3n8wXCsUSqVTsGZ7NUvPfTNFwtQCyQDCOADSZlwACt7nI6Ew2DtduFEm9ZhBPwAHLDsABQH3OIKBcAAXhBUGQe+sFwWMyBbOYSHnm26J8KQLi-uwOL8FQLi8iQwBdPB4zADGPRvAAbIBtFAXeby3NB0GkaxbGhKhJ7IXY7LlCApBcGi7B4ZQBH0IQ4HEd0rHQBRviUNRdF0QxTGQWpEHsZpmmcShHYuu4knANifhMGAfgkNi1Bad2X5hNEbwkr4oHMep1lubBiGFih7Lnuel5FLeKCCIQKDIkKNTihsrFvFGERvJmvifqpLnualSw6V5IDgGgWUwF42yhHgOCxJp1TcdGfiMJAlmKEMUXNJAYaOaxthceMzD7Hg4rUKwRV9GR7AAKaaTk3kQMwtxEDgjD0LABVrIQLzfrBZVFggOCVdV1ByP8UmBC0b7sa1SHtZ13WsLk+SJXVI1cZkE1TTN7R1M1lRvOSYZoP8zCUGYyKEJQOB3pQAmkVsh2IEW-WIKSvxpAMSz2Qo5CksifgGAIHhmIMXBhn4r27PM0MwMAYb1SAvBfAl4RAA`);
                U12[`grappleMapStrings`][`push`](`2,Circulation,Echostar,81532,ILDWJAhEFUPhICKwAySBMAbAngTQGYA1AZzwA0AlABwCMMAWYAYQFEiArAQwHEBOAF4ATHgDEcIVi3bd+wsROAApAQGMoABQB2Ad2jwA5sACywSEdE7gAEXjMjSkEanANIJvoASIPGZQA5ECtmKwAVMzhRIzhIAElgVhRmSWB-I0gUFERofURWSHNEIuKS2EgAZStETNLi1AB6JlrS0WAYEiKpF2a7eoBqHpLmJFjwQfGoGuyzYuMCownxuG6EKYRoJF9FwdbchC7inVYebcGM438hBYhocqyEOawmhB0eDGuIZkaGHQBGTbofGuMGskBw8VWrDGCFsAC0AKadSD2IoANz6AHkLjAeABpADq9S2wFaMHUeTap1KDWosQAZgAXGCUZgABmJGVE3mmrW2SE85A+EHqADZyp4AOxERIMk4QGCQShVVYZIrQOmspG-Z7wdGgAAWfV+lFYqEo11J5P2lKK-L422s9VpjOZbOJw2GVOaGU8OiFM0CXqDCs1tus93gtlolCKjx1EFR9QNRpNZotwCExSkoeqPFZEZAcMRiAaAFZ6UyWeybvy-dNA4sdAL-eNwO8iq8AK48WEAWz7fdoGcoJAExjHY+VbZbSB43YH-d7Q6EI4n4+MU+ABEOPA4AA412Pt6p7aVpx259Z1xO3Lir4eNxBwNuL-uH9ukKJFwvrufc5372vW9ALXTcX1zN9r2MY9TxKZ9ilnSC1w-L8Fz7X8wCDWpwGhLCihwvC4Mwwj8OIkiEAI8iKLIqiQEo2i6Jo2j6IYljmKYqi2M4jjyK43ieJIvjBIEwihMIgR6mVcZoEFKlTBKOYCCteAkGsXCIFsIRiwmJtKALeAJKklSwENY1TUoDhgFkxA5m1BTSkU5SIFU9TCwzbTxl0-SIEM4oNCTUzUwsqz8VjSBYQchzICUsNXJsdzti8kpfLRAKU3M-UQrC1FvJAeTZmipzkDUopNI8wYkuKCSGBgeFOy5AAnfVygY+BLPIHN4DmRwO1EOLbHaJEIt61A1SszqIG6hDRFg+Bbm8-JhuqURRsQWx8QWiojKCGaxruEprH81g6sa-VKD3VqoFqI44ugDFcqpebY2AUsvRSy6EKinrqhKqikChUrgHuqlWgba04Cox1nUrN0a3DMbeXIr4xUlaUkFlCA0ngJRO1UTx6kTeoieJ+ooHqCUSZJggCcp4mElhAB7Eh0hSYBe1LHQ6T6WmiYu4B8cJ2muZ5+oLtCLAMAAR1ZoxmFoLRIHJkWqmFnm+CVnm9AxcguAZ5B4uAX4iFodn9VofEiFAWJRH8BmKEgLBVdpvmBZFp3KYujFWC4QMpH0OWFY12mVe5tWg8pvQeC4VAIRQXkcbxmmebJimeepwXKfppmWeALZ2c50PnZAV2efdkmLsoXsAEtFD9qx-CIfFS07PB8V+LBYWYSBQl4SxYXIJPaZTkX05FmwGX8LAc6MawiCITsTdEBlYQ2gwYAwfV9VUHgiHDkmQ5F9XU+D4AJVCWEthQHqjZN0szYtq2bbt8gHbL4mXcHym3954BQgIHAOifCMA3JuLc24dy7j3MQOh+6fxJsPNOcC6asD4HuBqCAOiz3novZeq916b23rvY+EcQDf3qEfZWkANB0lxFJeSN9Tbm0ttbW29tHaFw9sXJBRMyFi3-oAwsARG7N1bu3Tu3de4wIHhneBZg97E1HsnFBaCEBNAwEoVEQgS5DzkcQqm3DSZKGoJ4SoMxgB83xAAD3kUTA+Yc9HEx0MwLglBWSAKmOIXhXCZHEy8b2UAQhVpdBQNYEQfAC4iw-j4nhHDy5swCUEhIRhcRhJ0LEHgliO5aCQAYYw0ix66JHgY-mrIRRICsDkUwzACCUFRKoLuOAuD4iEAzIQyRLFeP5gYrxdJQjUFsAkEkIAUn8DSRkrJOTjBaGKYUxB0TSbWH1LuFAOQ4DMF7BotpkASAr1hKyWI1hRA2MkqQ2JxMKGa0gHwDEoB5IoFCsAagVdaAEBybQHevY2nABwJ07RX8zk-y9j7FIlg0B4F7HwfZngjGwg3vsw5xy7G0wucHK5Ny7m5xAAyVkLzgAGFUL2LAWguCeEmdM+ZCDaaKKHos5ZMxIDgGYOozRDSmktK+T8gFotvFuy5Z7b2vtgA8GAcIsBYjIGSNgRS2ZVLinKPQTcTBc8F69iXivHJ+Ct470Racw+iKqE0KkuSBhd8mGP1YS-dhkSeWlz5b-fh8BSWpFFaIiBEjoFSoKYrBxRNqWZ3lXNJgWCVVqrwRvLVRDla6vsZQ6htD4B0hACa++zCn5sN+d0u1f8AHwAhCAkR4DxFQL7vk5OMrKZ+vgQGz4Uhg04PVWvcNhCdXADISiiOBr40QCrkm42jCH4sOfq-O1XT5leOzQI4AsR64usLRKj1padHeqKRS6tIBPR1tVbgjVTbtU+pOa2rl7b96dqklgXtt8U3mqHVanmUTeXWondjEVoDXVFslYuzO5b9GrtQQq9d6hN2hp3QQvdUbD16v3XoONUk9aGz7aagdabLUZrHVmh1EBcRCNfXO91JaZnLrmWPNdLA9ZAe3Y20DkbNbRuRfqmD8AFXJrNYO9NI6-kk3HRhkAq181irdcWqRBHjmVuQX+uwmpID4nEASvgBBUMPrvfEwJKRUAWAoEoHALyhAtrbYi5xrj3HAFRCAIgW8tCbNE0TSlFbilGJMRUg2UmZMQvk+xzN1r-EqcGcYbDBbxV4aE9KwjsqKVXj6AYFZNh4hSf8Jo3sRBOXWtHYpou5g8ByikI+awTTKANQU7a616WThZEDHxt9878PBZE3Z4xpjoDWDgORhtmrm1Qdo5TY9jiDNuP1lsUQAgQBKCrrCbahFHQtkLE6b8i4uAaD4FBNcH1lten0PkYA-0NgG1MJAKwEIBsgH1M84gLcMCJdUHuSAOULzWXGBNkoKxEDzcW+uFbb3Fj6DmBt9brNGVGFWlUDaIBQiPf2A7eMPQ9yTZYNyzooTwiICcQ9d71pSi2DBhMKLV1jKBgO8AIgrICWiG4GN5yPBbuDHu8UKGM2+xzYWw+McKPme1DW59YAQarArK6NEMwpg5REDML4UFEU2RoCMCZgZwAgfAA4KITKB1gAIm2BoCExREzFGgAQGA20pBxRZ3NZoOh4bbBcPcCMUhhVmGGpAYwJAtq2nJ9D6nig6gHuqP4X4+UNLKAN7UZHJhgATTOKzQZNwzCAJl6ENweBJ0QHyE8bYUOhiw7yPDjsno-dZlqOjqkWOzHOWAOSPqkhWSvDrOsJX5Ueiq9KBrsa2vtqmH11nvYhwTeLDN4X+P-MVnDWYMYVVbQ495XB0n6HXw+Zp6EAj1Ymes8UjR6kPPBe28oGLCXqdAg8AKirmN14FOejWFd0UBopOkCe+91db6C-Vi1FMMHnobPQ-0osVkDglB9Szgr5GKvKu1epSa5bg64Ugt5+5t4dgd4TBd76w94QjhTrqoChCkgj4JBj6LDJ7FCT5Zjp6I7z63495L4Y7jD55bb6wK6b6xAMjGCgCQB76O6H7NDH7Uju6rCX5rS+4EF36RSP7eih4rDQDMAQgy5VysgCDf7+jQDK6LC14lD17TCN42QiTgFG5QHjAwEbbwBSDTrW6FhIHy46ArSAzSETCyHq6kwN4gHWhgEG4QGI5qGDAaEW6cEIE2BIFKD6ivCrQwh-4yEAGIDyGV6KHWFcGG7XQOE9BOFaHKB956GhD+CeE8A-4+4mHjBmGAGWG67KG2GqEB7Z6aGwEpBKDpD97GChBRgxhUSYFFDYFw4z6LC2A37vag4+HEGDCkF35aAgCUGWLGCqCQAMgtGfhcAOgn4lisEqTsETDN4G4B4P6nDP5h5XQojS5ZA4Csi9H9GDG9QjENFjEIBn4IRTHjAzEs5zFB4LH8GG7MBjAy4CCsCWI74DFDGiC7ETDMElCHG2jHGOHZEMTnG8Gs5XHh7MBwZ3GsA6BPHbHkQfFu7n4-GRF-G0QAmXFLECEsCR4rJsi9HSbADRhhT4jO7FDVGIC1HT6z4h5NFvYtG-5tE9AdHGSAJ45EAMhNKTJElUhU6lTTZoS9j04vZM6hHM5rYbDrYoC1qmDGBGCaiNZmCXb0GI48DeFUQKjfZbaiAwAECQD6hCAYCvSx5hQKlUStCbbfZmBED+CQnkBCCdhNgQnTAdQMTQBik-ZEChDbyiAEC0D27UCHC7QMSqmmlxyanam6mvRcDeRzB0h5HbAmkunmmWkUA2l2nbS2COm0TOmin6BukelenO6vANQcnbBfZBkkghk6mMB+AsAiCWKy4CCTY9QuBaCUA4AjB7gQ5uRmLDa0CsDMAaAYglBwZJB4AWZ1mTaJJsAJH1KQBcD0ClhYBID4EPDBAQAAC8QAA`);
                U12[`grappleMapStrings`][`push`](`2,Cycling Nodes,The 9th Doctor,81585,ILDWJAhEHsPhICKwBySDMAbAVgIwHEsBXALQE9IB5PAJgCUsBjAd2CoDUCALLASQAiWAAwBDAMKQAonVTC8GPsnZdegkROmz5ikADtUbYFIDUAZyRT44kG0gBzYADF40YDeO3gABxAusGIjGkNyOiJbgQVEgAgD0AOocAB7cANIArMIAygASEOJIBUECwACapdGVIAVFiCXxALJBDZClRlE1KFWILaGVnUHQjc2t7UEDiNDl3dETCENNiFKj-YVdMxDLfbNrxcDDSys7tQgl0xuIc-D1iwgtbasnF71hHbuT+7fw92OX7-NlCoXBBXCALILLB7HdYXLavcb-a6fCFHKKQJB8PAwqDAABmwmBhMq4EiRJmAC9Yr8yYTIAApYCkKJNExRJAEUmwyCc+BIAQAFkGwAAGvDNpAAKpsggAGSFopR8TFyCcgsJywAtsrgCwpNicec7pAAKbSuV1EXa5ZSoIsAiiIWoZkhbUsAT64BnIFGvCuvV7UpWJbAVm2ggcIUS73fBwe9nm077NUIZb2D0sJweiCU6k0i6QErC51uRAZgAcAdSIzytqcSSFdO1LQ1yd5Lj2wrghwAltGIBnaEK+xAWjltez4kK+FbIKI41INUOostjeOpEx5cvgBuguyACbKkr0VvitNhgjKqZKHqz3OWXMlUimnrAa-M2IVvM0hq6m2JmVNsAACMURuh6JSpE2kDiOOAhfBAJRUB6VjdqBkC5tAAAKUQylSbICG+rhoIBBK7gIO6JtEyztqWUgeACSAniALQCLB8ExMABBbmYlQNB+X40nSbpMZ6wCNiMVa7tEiFWsAACOaEYcA2EQsA5L4exwDQIYqmEbyQaXPxqmBLa4h6Ti5nMcAxC8UZAmEjkbo8RaKk3g4u7iCJ0A1ocwCwX+RENMhkBjmR2pYbmTTOeE6F7JJUQCJhsT2USAhmJA3a5rq4FlNF8DWqBThcR8HBdkaAW8gQxUAphM7bAgSBOA6HykBVIDLFgcaZkOw6eKG4QELiewACozs+pZODyOJOiMU22N1FqjbNhVzSUc4jFQtmfilFxIVIq1lAZMaZbWzWJqIc0tJtYYJkRWQei0vq7k4NkWoGKKdbW1VEUyqlzcA7IetA9DLiabKqkKv09nek1CqVqn9Q1sp7AyKK+LaUgidmeE7Rs4h4HiIOHDglksDkSSXsAxpEym4hSOQu45E9AL2CZKYZb1jWvQC8S9SucYELElN4Hl4rdpZSA5MN1LQEww0otwbI5Eg+qIbmyzeCJjU00R8SXcAWONT5SIcEdYukzRAJ4JpLT2OOBAAOyHmU235ZAMAiRmWBw21wBNAzu7okOrvipBu4EGWlOoDOWCewIZW61BJQeTl9CRZARYY5phYiVYi5hqFALSyM-DPTgeyiKhhxnqWBCkQCpSTje3NIzBFpMCWbtKraOR8DLwDDb1LTkvXbZZHse6gyTPd9x8ojXUaQFm8gBAPsAe4KYcei9WTOD96U+fFEluMXORkAAJzLwDUib4mTAAGwoszCB2i3YLAKIllNP97INJTg8oj0HeAgehKaNxRLQNcZ0iK4gAE4ohrg1HIj8Ph4HHocAALneHItUPiMRROQBO-Z7RCiYJbEckAgIhxXufSoEpxCYQFheD490iSYXPqQYUBApCwL0PQPgFF-BszdvVeAup-qVFwokFIGRsg+XRHwWhHxSjQIoajYE4hYhAWYKULIxA9xSG4O0CUkByAwyzJUZY9BtQbBcDrfKwBfY6jokKW61xYjkhwAIDgGUsAADdBzVD5AlAGudoI2KCeIXqJR8GHDbjsZOFp6IpmAMIhEUS9jJIcWkv4iSGLIWAFXY4vVoAq1UkUtElhvrvzDocY2vI-JRA-PyFgQEkClG8Hgc+rwTFmOetUmYViIlVHEJyVAHB4jpGII3bRpBJDDVEAQJwLBOGxD8bEDZmyNlQFiA7LZWyMBrP2ZsrSTBrb2AMlYbxHBiB4A1E4DBpB4hIHsBKWg3BuBMHDLs45GyjC4hML82I58fm-LYBg0Q6QjoeCAhwO56RuB4ESKAPgThUAwFKMKSAWAAVAs-DkI5vzcW-IrDKeIxB7FsHGZM6Z8RZnzMWcs1Z6zfk7L2b8w5LLjnuCArA0AMIUDXNufcx5zzXnvM+d89lxz-mAt+SC6V+zwWQqOu2WF8LEXItReizF2LiXHPxYS45+r9mkvJTrdy1KpkzKwHMyACylkrOFEa-ZbKgWcqBTyvlMINxCruQ8p5Ly3kfK+RwUFMqQAmq2QqoFyqoXwGvOqjUCKkUcBRWijFWKcVyoNSAAlXL9lRs2Wail1gUBWtpfS+1jKnUuq2W6jldaTniCAnJfl8A4B+pFYG8VIapWxsjTm-ZMawXAAhfGiA5ok0pq1Rm3V2a8V5qbRsotGyS062ThWm1dqHVMudQW+tWlw37I9aylt3r4AEi7QGsVwbJVhsVVs2VQKR0RvHUda607NVpu1ZmvVQ6tmGoPZs1d-EyWloQlSiZ1q6W2oZY65lnqj2Ps2ae7l57204k9BwG5-rRVBolaG49T7B0vuI5suNR0iZftTemnVWbQNAaBYx4AqRySkEnp4KQjgt2wZ3TWxDrLkPuuXclcQSRuxmHaJAJo178O9vveRv5pH5VKbwqAVAUhPwoBtDR2d9H-2LuAPm5jAHi1iQEPQFSVhuq8arbu2twHtnCcbU5sTpR+TNWgK0bDuHu23sI-20deIzMbNfUqvEDQnBhBQJnPTP650MdC0ZEzRLksVjpDgDBNorDFTs3B6tCH91IcgGptDrrxBMAwBwFA3nwByZ7XeojKHlMhbIy1vCBggI2hQM1eLdG-0LpJUutzLHMuoCrrlqDNLt3wb3aJhtxzyv1pguQDgdgtJsAawFvtD6B1tdUx1tgjUsjXhQJx-rv750seM6JljdYzAMy6KFfL-GisLZc0thb0AODTi0lpCs22CO7bU8+w7A6usBTCJNG7qXjXpeM92UgbgrB8Fq6QOHrrPsnu+-yDUZToBmRAPEegoOVPHPCyRk7Z3gDl2cH42Hd2Ec5CRyjsSUAFAfdKx15bJyft-cJzaeIqAycHYp2T40dJQBBhQPnJwOBGejYR9aSbYlpswfswJ4rQnucibc-937jhCeOCBwp5r+3QOU4o1TKXMvOJ+HUuvAQTysBmFEJMvQlQ1pY0qJhRGiB1nRFiMIckDRQ-h5-CfKP0fPDX1KcsEA0ZJ6QArJJDckA1TPPcMIJItq9BBowJATpyb0h2lURxKMbD-cID9xqUgdeG+kF8CYEBuYySaNHjH6PdughwAICgeWseTfKCDsVDcHhIC-QaBKDUWA9CiGVq8wvxf0jpHZOX0SlfCR+99yYRvjfm+t9xsHrvp+e+ID7yAG04A27mi2yga6FYgyQFYKxpA9ycCiFoHucgCgblQyjziAiTiG8H33r1EHYTDygIj1P1gLzBR3j1KVEmkE4kcAJmcEdyAhyCYHuRYC+Vz1RUgD8Xd0yEqCGAsWiB30oL33r1oLrxgGDwjwjzbzgNYKomUCkmWX2C0ilG41OS2zeTnztEd0THem32r3gFrzoNoIYJD2gKgJYLYKUIcTj1UMaWvEViJ1nhvylHEk91pw-jmg1lSm3F6j8DUKgA4EMExT3GIDtDcRxHWkJDJgGTBEsCQIgA4GGi+ScAwBFkgG7gGgkWiBaApmiBMWvngCcAlEL24D3FoAdmUhnHRmBBKCYDMOcAsK0isJYBsOID5C8g-goNAhyFcKgHcIBngC8J8L8NAACPtmCOdDCKiAiMsCiJiJCHiPSFyjRhMPSOiBcAqLBByLyPZBSKIicOBBcOiHRATxhGqKWT8McA8G4AEExT8niA1HPjIHoUwgXkqVfCQFoGWVRW8D8TuQjBwHJBsU4xtCNzzCkCcAECkAwQD1iAoOKO6FxGcyqFqweKeJeMQCSg+IEhZRmCQAAF4ISgA`);
                U12[`grappleMapStrings`][`push`](`2,Compare or Contrast?,God_Of_Bonk,79938,ILDWJAhZPD4cAisAqkgTATgC4GMBxAMQE8AtAZUgDc8BLSAEQCMMBWABjwFsiAvACaMAHMADCHAdTJEsABTIAbLGNZsATiACi4ydNkLlq9puAApPnigB5LQElo8AObmQKYAHcYCFwHUQZsAAmgDOiMBakBRe4bEIgaHhALJRMXHpgQDS7ggpIXbphVk58JHRhRnA2cmp4UgEADJFVSUQKeWIHo3NgTUdFeGBvYhlafBdTZVOYQOz8ETAdK3awGyxSAASBYjQzACO4Q0A9ACmmUl4AB4AbBiKOZBIdnAI0NbLwCkksV3XLghiI4AZjoACsNkkTjgAA6oeCoMRyD5IIgvOaFahYAAsAHtLnwNuoAIYANXmwAAZhxwpFhgguh5-vBGMAyCdDqdzldbvcII8NlhwtAKB9Ivk6gQABpMiCAkHgyEwuEQBF0+AoyavYAkmUQSJ4D6Y3H4wmk8lLGm1TpEILhFmSnSIY5nC43O45MRIMRovloGbo2Ven0gFmof3wFJ0MaIT3eoXAZhiAPwWPB4Ch8MB1PxsOWqPpbM7P01fNxfyyklmaFkDAACw4di0ADla3gNkdqEcu92u1AjgB2Hs9oEdofdiJYYSmPXiLSXRRkAB2SCcmCIHgpAGox13RMB252d1ud0dRAAVIEkTMuLRnggk7gCA8nvuDncjw9jkZtGCV6t1jhjx3PdnyPbdgMQdxHAIJBuCwSQCFwICxxA0cwJPPd1SgFBGBJRCN3AlCQFAsdkKHTCICglwiFQbhFEXIkNgAJQHE8YjInssFYndo0cfcQCbVBmCBSBuLHdjCKHLi33ErUQG2MwxCYj8XxgMShxUncYDwTcyCgEBwFwkkAFdmF4HAyF8FdUDrVt73UnsJJPaS2OAIllPcFBMhAABGEkzLYWtmF8ElQDsIgmxxIJJUgRQOO7VDPyHeLd2AAhQAEakInELwmxJXw2GMoJfB8hcxEgM8iWIDwyElNCvzUmSNPqocYGhDYBH0zx0xJEyzKICyrKcGzazskkHO7Jydxcni3I8txgCbXz-O4QLgtC8LIui2KUtPYiWp7XbRHSzKVkYFw8oKoqSrKiqqvXWqDvHRqT00r9IHazrvGAUQjNM8zLOs2zCHGprHJAXaZtk9ygU85AQBJCgiV8AQcSfJ7exe98MaOb8YEdHymNoEjWqxsc3tJ0ooAKSA5wXRcWLByaIckziJq7XiIDPBGkZRtGSZ7V9XpxvHHhgUAzGoJ8ieYOqksFsnmvl56qZgZVCeJkXFeHLXVfh4BJSSfGWzbI3kwGI4sXSI5rjIbg7Yd7hQSOM8kj4N2Pb4c3vZ9326nTBAkEdGVHSs8RUHnJcVyYxCuGjP2IEYI5dWZI5oXtjO7aJOQsE9vOE4LwuBkcSJtGgFBHW2LxHWVQ2DLMDYi4QORN3SFvM8znEjg4d3e49+Om8HgvHSD8vS+AFwk1cYAcRyz4QGpc7gDkEBURAaFedRgRyq0YSmK9ofl9buJ28dh2u57vP3YHw-b+TEeH8cCuXG5sWiBQAgukFRAWTDwfHlLiUEkZ5CBECBMwUANAPgeDXkPVAY95ioBErWAQGB+zADwJmMu-RZgsiJB8VeyBx5QBJE2Dw0UBDGU2JqeA0BcwBi6GmbCgD4DANAeAkIsUradClCnBO8CiGIOQagtYbIaiKG4U3BYo9aGkPIZKSh8lZwm3KkSNQ9xPTpBQI4WsjBooT18HBYyZA4RMMDuIFY3skBJGsBsFO3d0iQBgTQ9Eok9qzEdObaxtj7FZViI8IgLi5hJ3cYUIAA`);
                U12[`grappleMapStrings`][`push`](`2,Grapoints,kklkkj,64031,ILDmJAhZIawhjrADYAkDGBbAYgdwCMAmFAVwBM0BZGLAFwCcCBxRgQ3GQC0G2iAPXkQD2IAHYA5PCAAiANjR4AoggDCIUZGkQVkAIrB1wGpHArgGEPHiJbd+7esPnLiE9ce77zz6vAbvj7egR7BIc5aCACMAGoEWACsABYEAOoxsACSOBLCAJoAGpAoAGYA1AD0VdVVABwgaBUAbjU15a3V9QAqCQCmAI6IBhIxqQmkealRKFyqkF1szPhcBc0dVVAVAOzrFQDMa+vASkS9AA7gEJnAMjExpPE4dFypeqAAqkRJSRjMMdu7bTtdYATgB6zwkAkYn6eQQMhAsXiyTSGWyuUKxWBHXqwEaLXW2Na3Tk-UsEGQIzGEymMzmCyWeBWhw6mx26wOBNZSjK-TEiHeNzuD1wz1eHy+Pz+4I6QMqoJlrUh0NhCGYiLiiRS6SyOXyRVK8pxDRZrSJNRJZIQkUgGGkkCoBgceGYAR8MgqlzsABkKtpbAAFEFUABeofDYfCUejMdsyCU0D0CeABmQEFeIC6AClgHkAM52KiQHMhCoAFgcqgquNsHv9sc8AYqMb0qidiARJZCqZTyaTIB7wBwNiUAAYXd67AiAMrtnwBsrOFoOasN3x16M0N0IPBt8LmJOJ5PHECcLhQCQYSAAT3rED0w5CHq9tl9d4gTbXvlXUc79i34TxkeiYwCANDABmwBdOQFgFrYCbnqWFb2FWNYdn6X6Ns20atnOEB-uEPaHr2A4nkOI4hs4M54R4C5Lthdg-phLgbsxa4Hn2x66KmiFQi+tgPtuHjPg4b72J+bEuExknRkBvYgcgcKRM6zB4Pxa6gMBKZDu8eyQEk5BEMh-6QNO74Nmg8kkZAMRSIU5CkHozCTrWwDvHBzGmJxyAxF0vw4HsBB5pAACW5l4DgLlsXkWkGDgun6YZxl2AmZmSTgVn9jZdkFA5ehoFF1puR5mHQN5IC+f5gXBbedgPoVmF6LFOl6QZRlqiA5gya4E5TrmJVID48bdR4TkNbI-WVkNnUja4Y19fmDgIsA1wuMNs3OL1rmLfY5hdQ460bU+k32BlniHUd64nXY6pua4kBAA`);
                U12[`grappleMapStrings`][`push`](`2,Merging Tracks,The 9th Doctor,43273,ILDGJAhZIawhjrAKwDkBaANAUgOwEMB1FPASQDEAlATwE0i0AnUAd2AHkA1AcQAsANmQAiAgAwEAwpACiAIwBMaMXIDMZEAEVOvQSPFTZi5Wo0IADnwCqyeJIDmwM+GCOcIOiHYyQPyNpAKAJsAegDETX9EEGFgd2iExAA3ENg+AGoARioZABkqR0DgADMxBJ8rRM1JcMSE3JCUMmKAFysqSTFPKE0ACVyE6ApEn3g6xMkQ9IBlXoB2LhlNFp4EK0keMujI2vGEAFlgMb264b4W8uBKk6Q4m7r-SQAWQeBcwvutMgATdk-EGzTP4RKLRaBWADO-3+wyIu18VyqFAG0Pu-mRr2G5UgQNR9xsAA4XBFejhgXiKe4ACrkiD7SAAS1pXgoq3G1OZwBkjM5rFZew52IKCU0-PZwBpCXpwu2YtOYCh0W5AFMXv9YlZunj-DI2bcsdF6Xh4cBWDx4ohJjR2pB0gAFUAAW1iEBskA+CB2rwwW0Q9IZJrtBIEMjtVOKVC4VHCw00WoQFSqPAAHglYkQAPZpkKZNAZmhcXrmABeAE4IDq9Qghol6RCTXyAI4JSalqkENB0fZWFBcYHFkKcimfNBXE0+D2engm6BmJWQYpI44JAdD4c3O3ADAjVyJPk+MFOWsLpfjN2TrSg25yWvAdKJFJoWDfb7Kx3KqnHWPxiCJhJmzlYjtC9gGEEJiwwXosCwcw8FgFAK00XVMRGSACCTABpFsQmTaYOCwPhhBoAhVHCc8RSvBB0xA7kGRAoMrAAKxDO1vnscxgTOC55zCdcKX8HgUVuUc+IpUITS9Q8LX+O1UgybI8hlYBhlKS5rmiVgalRMCmladpOi1AShOrZS8VYH41xOWAcRAs1jIgDUf2iGwaE5TQeCw6FpRA+53CsLN5yZf85USPyAr9SAlM9EKEjCoUQNFKsEi47FePVYA+FUYcagoSQ02AOhFQiqKwT6eyoAKudPj5JLoWszQEsE-LNT2erbJiiqWvGNqRQ6mAricgFGSqiBqkSWIMHUhNIHdBJZOEIhkzIYtWDtDgCQgYY6AZS4fPcrhXjjepB0yCFpn2AlhGLJJENy15phNekCAk4RfTxGwGpFGRlwrYAiB+hFy2HYYuCm39gAUPceB4Yt9lh+HR2mNVEDA1hTvOy7rtug7DzQGjID4CF4bhuGkIAV2wgk0DkGRGM3Ak5mBGwgu2SRLNEup3Gkg4cXZ8Vud-Xnh3cXpj1xSlgFF7FxbxLnUJl1E5alIWKS2oqE2AN6EHMoGOaQdzyv6vLUWqA8KXgAGtAxYcLb3a2xJ5EVhBNWJGK1vXTMKy4RpuWcTTRapkZM94TYsm2jjtw3PngYlED5KP7lt3qE5uGOkRTk5mbc52PZhAr1fBgvc-GR4g9+kPoU0MPzbASP1zT5P1yzkU2eL+59hCDa272MhWBkMuYi5Y8eB8upYhEpVgHCiIc8PTz5xH6FoCpEDDn9pCB9A4B54ijg9wcM8VZBF3gGmY9enouSshyfIPncYDlYViBNM3hB3A4R6j+154BWAB-oRfr-D+qJAHin-ogbkT8vA-3FMA+cUDTQwPlOA6ae9ermHyhXPENQtLRA1EXT4OCZxXAIQHJquNu43GbtsWelDEhBAQGgLgJAyYMEyAIDA0h2w8AoKwbAIQUghCEcIkIUAQhzBESI1QAjJHCOAJIUA6Qcbg2EFwLgZM5COgoC0DAcJ7BWAUHwPgoAeBcHEbIoRfxijpAsSEUs5iLHsDwHaAQtRjaZC4JolAfA5BEC4LASgeY6BYEgAIaxtiu69BkRY8JFiNpUlUDQAu7AmEsLYRwrhBAeF8KwNE2RYiJEWOkYI-JCilERFAmojRWidF6IMUYkxZjCmyKsTYix9jmmSKcS42oWJzBkEUMmWA2AyD2EaXgWJsjIl5MkZMyR8TEnq1mqklArCiDsM4ZAbhvD+ElMkQU2xxTbFclLASJgiBwCqPUZo7RuiGr1OMaYhxLSQBzJER02xrBIB2mKBhckZgPFeJ8X4gJFAgkhLCW0qZIAol7JEW84RCykkIC0istZGzMnZN2ccmAzzJFHIsTATQvz2DICzJATIOAkjfBIAE4QFA8UiNabYj5jjgDONcQgFE3xphqHUZw4ANAEVCOmXC4RwrO5xGLCgKaLpehWEdKWTImiGpoFhTiyAjLhEEtKYo5RIAygUqpTSlAdK0Bassa8qFkjWUvI5bUNBKAFGOgEMMhQVh7DfH4EIHg3xjHqsJbizpUiZkiPkXqxAG16VoBaIoUsEhTE0BEPsewVIA35KDYc0Nciyn6uQNG2NCh41ZK4Em4QKarB4GzUIg5RTq2iNzdWHwBa40JtLSIUZlb621tkTq-ZjaKwaBbUWttZbRlpu7ZmutYqa0DqgIcSQFBIBJGICgMQyoz5CutSI0VtiJUbRwNKqaWIyBWB4KWcwcg8BUCaPSi1g4rUsvvd0zlEAcbJipL40s1LvWgB2ktCgOBn2PvacB+1CAiAgA-V+n9gg-3ACWjIZMwGSjbuEbarp7KekICwFBz9RBv1ergztMQlAgPBuEcy0DFHLXgYgN0aDBHYMCHg6RpDKGJUYaZVh19IBtzAEBY6bxvj-GBIzME0J+6YX1qk8IPgdBFxD0XtQR0yYkhqHI58kDsiuOUZ47UG8AnPFCeBaJsF4mIVScljJtDIqpUyoQFLNF6TNnbJyZOzVNGQh9rDXOmAZQrnVNuXUwxjymladQ0+rzL7ajKhADyvlZMBXJis+m2ZtnJVLrOQiXo7AP54BwOYDAvqhC9CoBmDA0xIB4AkxxjLunLVWF6Mi4A2hCgJdUPyvKW6InSZnSEKTWXzlDzINoeVirlWOgavsHzcip29u7f4ElRsNBGupbSkQVA6tRa001lr2hGIgEE8JkFYmJOQt69Z-rsn5OKZ8PENACqlUqvsPsKrl6hMsarf1nt+LJ1PCILlo2lRhAyBwMRIgVA8CVcgB9lAX2PP3tmzW4AAOgfQEkJ4VRxqNvCFGaupLuBtvUa0xwCgfAu7aDwEd3lnWkt5WLGQHgAhqmltSzZ3rcmFMIk8o9ibL20DSDhwjn782-ui7R6S+R8B6UEy9fYMZqhIAQgIFgabuTReeazT9pbfyjZZll3weXivleq+m99jVSPFvEr1xjqEFAl1G5HiblXavXvva8Sx-97PrsZajbdhEKIrBnooBIaQxYTHJnMN8brTOWeaPbXe6L2mbXAbJxTrQwALiRTjFgcrZBehoFYHIZnpHQf2AJyM17FvA1a+nTiyXRsXgO7l870ASvXfTYZLDz38GetxL63uv3oEA9D1yOwfIqn1PqAryw7Amm2WRZJ2y9PlPTTxdp11hDPuh+9cPQ5ukY2nuTfN4jrzyOG0RockOrgOPTUiBkLP1Z8-ic6bT+TtfxYaeJYFUm5nrP+9oUrtd8B8uc7tgARJxtnsptXsNdLdz9u0-NhBKg1sTU6UF8Xkl839k86MQBIZgBeAS9v1QAa8M068FsfskDLkZAMAIQ40-9jUyt1M4Da8rdKCr8YhHBUDccGVk8sDU8cDsMIAEJgAOst9AD5lB8Ylh998poOBHAVM1MNNX8BCtNcDgA5goMeAiCkg-1GQ1AqAVAFBMgVD3kwMhCQAu5+lBlhksBRlxkd9pDesEkWsQA7Qj9+cYD9gWCyC2DjkkCXhsd1t79y9K8ic+DON38M9WtgBRFRDN96dBVHDZEpNZDPQQA+doCu8e9PsSCz9tcG9AcpcZA-ArBaD6Dkj0s98j1PRHBJ8lCZ8wiMDMN+CzDk9V9LwXRrCFAhkq8HDh9gCnCB8XD1YqAMjj8Xs3scj4c8jNc-DA1G9oAZAQdb9gi6V8c59wiItIj2iP9Lw2QVgdC9DhdZj4CCiFiij+oZBLkqkblal7lQtGlTD0MojKdIAzAMAAkkMPtwtF8ditN3IGRrhIh4hvgvilUvU2cBi0t4Vh9uQMwBAERphHBehNkcBe9SD9kxcQ0JdLilioRIAFACRU1OsxAX8Ij6tgNATgTIBDhRCkgyAZB49HQoTLsYTxVh8wCEQqQxs6AaBvlvg88Rczj69CVoACAcBtAliXhCSU1phNjmjuNWiXjdjojIhNxRDGJGS0BqUWSJCd0pCUjOTR8-woCT9YD8jRTdVylNo-BKU1iRBFS9NlShEGsH1cCcQQBCDz1dDMSw1sTtVECr8hgF0yS6Ci0-8ITE1KjYTqiD8fAD5IB+M3tz1iIYJ1Nr0fE8pUwHgMospi5NJ-ZJU6ESz-xaF-gDxwhagqpkAKAxg+AiB58JBGAfE9gq5fhi5DhLY-44jSy+yQBDh3ZfYERfBkB5EBz+oYB+MOAqQCMFBV1yAaDwzSwy0zZi4QgktHQMAtytzqceB70BwqQSZiYhz+zxg1y25tBYgkJwZIB2BhgXQU0ENQJDhF4bplIv9gABA7Q6A8BlAGA0AIRsA6SRhJBehY4OZJgu48EQgjziZ4ZKFZIzzK5Jz+oAhhB2BPIoRhBHARJ7yQAqQYBPAGEz5ZBQJ2ApSFDSU2B5FNBYAIKIEwKGKTgQhX4QAQgAA2bc7incxiWC48485CoS8YKU1rbkMSrwLcEAeAXuKcgc6YVM1XcwDMqgLMwVEuPMtuQsxIYs4SyhVgcsz4SsjWEADQHgdgFwCgT85MXPfPGQKMqPTRMGM8qC8afi+CuGRC3svSkS1C6AAIJYYAOLLSMwR0GAA9bQPgcNJwRwLMSQeADCRwc5ToN4EACma4kAOEUCWATIXUlnDAfk7Qn0vvRCuYHcnijAL5JIP3EIMQDy4sCeHyxIMc7uPwLkMc5AcADU8sYQF4O0L5XwHwT6JMkAKwWc0seckgRc8oiMh-ewOgItBQEZShDciq3c4AfcrzQ8gS2GU8pqkcyhK8iShEfwSAWIQK6MLZLkboLAOk3MIrSyPuf2cYMCUeMCcwcqncggO0UsHakmfany5AcSpCfyo8R-U+SILCGQKEQiyAUcfuCUdgKWcaCGtuJY0Gt9KkExCgVQOQCEGaWyBGtuGwY6wIKwJXI3BQBCI6Q0SANBYuWMcSisLgIvYJb4MmGqfKLgaeD2PuDGr0rGnhXG6yEqFkdCNuekUm5ScmuXBQTQ-6ZWPgUebKMSlqyAFm1gNmsmUUDBPBAqQaUSewYGhALgQWnGuQD0OkvmPEEosmPgH2YcbkJgBKb6cYWSbyvYF0PEHSZoNoDoLoTQaYDi8GvWdyWqfqB6B4OzduYcbQNIa+RSPgSAXIDMM+PWcUzebkAWHDS1E4AAXiAA`);
                U12[`grappleMapStrings`][`push`](`2,Fight back,GudStrat,75194,ILDmJAhZIawhjrAA4HECGB1AJgexwGFIBLATSwDkAnEACwAkcsAlAFRwYCk6cp6mrDt14hCAYwDMEAMpYAbMACKCAJLAAIiABiicMgCyMYzuABqNADsA7ogCikAI4rEwaww3hX3iBoD0AKyqAGYALgCqLIQADGQQkEoACnQoABxIwBjwrg7WACw+hcB+ZjIMAOwAanZKoWgI4ZBYXohKGi6IWgAaLQhG4kWDwLoWNvaktq5K2hhDrv5BYZExcVBKBgDyDL3G+QCmc4dHjc3ebR0I0D3e-Ufeurre-pOu1trZncAARix3SEkpdKXYAALXCN0g1jwf2KpQq1Vq9Qg4Q0eQwwSm2mkrmglWhf0SflgdDMAEYWHYADIsFojKwvEAOAA2FwgSgYhB2QwWIQiUVi8SUaHCXOgjxykPxrQ2e0SrOOkCZ6imCW80HEAGlvHYNJYALZAmG6EEybXAcFnDmi4ABeR0GFrYXW8XjKFnGXRBl3RpKs6qnHATXa3XWC1G0GmnLmnzszkBgKpbEwhJOgMuhC5KUIJQbYIYeWHH3K1r+jJBnK6gIAZwdwwjZrDrSt8b8lFrKZFaZ8mfdwT8XoVvpVBfVWoreA0dlrxsj9mjlrjGXkkAAVu2hZ2MumID2phtQCza0W-SPA2P7Bo8AYBg6Zw2Y82lxoAuvU1vu5L3XQNQPC4ri9mpbAuWF54JU0TTvWUaNtmj7AvIaB6lycwds6PgGJ+e4pFm3r-ieTxnsGYEQbeUFzjBEDuIu8F2LQDqoV2EJunuoBmAWczHsOBEgRml7XpBJr3t4VHWvIhCVK+m7AtuIAYcx0qgGQv4cXhXHzIR46TgJs4ZvOrxwfENp+H4kloUxOEgDmwQAF7sUMnElgWWg8TulY1qRgnQT4InxgAnCgpmMa4ckWcouaUMp9mqY53HnrxNgUYcd5ecJBn8AE5RsIF77me6ex4HZgwOYBTkaRe+qGn8yXkd5aXGAEeS+euWJqnW2pNMhOaKZFRWQDgv5KEBhl4kRXCJXMuhdDeNVnDMrWKAAHs1SbSR+pwsQtPVFI0-X4QGI3jokHxVcAU1CZiswBvItHLa1MnAA463SnQXSFdtfUDUN-AHaBGCXTCXDAJQBZyQN+6VAUPiA8D7XWGDjCQ940Mg5CYOgAArojrjI7DaOY4Uk3Tbp43TP98HAEt9HTCthn3Y9nW5v2R4fXtGQ-fFqQkeGZ0pRdrUBGYXy3UF4xPdmub5szu1qWzoU6pY1lE0cU4IJQlRYAE6MUKSTIgsQbAYGg2jWCCXR+AAbsZVtW1AfjlNb1uSBbDs24kZiSFWvRTholSVOjXx6tooQglgSigOEABMdB0OIaCVHbLvGZMwRmInfi+QnifWBoJCpAY7liCApKVAHAR0F8WCVLAqjaJQeBkF0iop2nQIMM7ifN4nQJKKohDKJRQPq5r2u6-rhvG6b7cu7b9uJ07luJ8AhIYNYFwqD7fsB0HIdh5H0ex-Hs8u8nqeJxnR8O9YhCktE6NGP3jzF6X5eV9Xtf143TKdy7rdTw738O27r3fuMBwBqw1lrLAOs9aQANkbE2ZsF7TxgJnF28804PV8qkOiEABgb39oHYOodw5RxjnHVBl8QAAOtufNO2c-B6gCPfFQyon6MJflXGudcG5N1Pj-EAbckH-z4YA4oqQzDo0ZMAQgKhwHDygaPWB48EF-2tjPNO6DF6UA0CgT2JhoT4K3kQ3epCD4UOtifNOtCs45zzu5FQlIi4l3YRXTh78eFfxEdbX+QjrbUKtukPI5sNCOIepoEAcjIHQLHvAyevibYoIvo7VRNsNiUmsAAT1sMgCChjCE7xIfvchSSraWLPuY0ptj86WWABsJxz9XFv24Z-fxxkfFp1aX4QJwTQne1sJEkeMC4ET0QRgxJGiUnGVqekrJxhkB5O3sQveZDD50KoV4q21jj5VPscAX4wA2Fl0aVwj+vCW4CMmX4Tp3SQlSLsGAoeUTFHDJUfEqZ4y56XOmZk7JMAjALOMYUlZFSk7rKsSC-sOyakWkORwpppzPHnOAIIjpGy2nACCbcsJ2hZGPMGTEkZXyPloK+Wkn5cy4gAoKcssxJTQXAE6Vsy+UL+5dHqS41+JyPHXIuW8q5aKukYp6VIpEAyFFDOUXEsZkAIWaOnmS2Z0A4CaF9gQxZJiimrKzmC8pdLIW52qf3S6sLjnuJaQK9pHcLVCqxVONA-S8XioJa86VsrSUzN+ZCFVm98lLNMcUtZDKBVMosf4UI5RlQqD4Ac5xRzOVmrOV3XlqLzl2z2BkqR2xB4QPxUo2JozF7EodnKh2S93Z6KVekKlfrNUQrKS7ENlS-DhsjWAdlca3HNMTfw5FlyeVpozWE1QuKc1OrzYSvl6jPmTrdh7fQ0j1DVo1cCvV9aHaNqTmGiNNS1wxoafGrtiKk29r5f28o6apGA2zfI6J46XWFplXqktajZ0VukeCJdQLaWBsZXWrdra9TtrhVy81SKUVWtTeewdU4uAOtHbel5UqH1upneW+dcZP00oDdqoN4LV3-pqQFPdHLO0Ip5SelNSaB1SI1A8+DzzJUFuQY+iZqG53GEIDWTD-qtXHx1Q2v9zbt393ciag9ZHrUUYg1RqDUjKQjpvQx-NRKWPTowa+9DBRuO1tXfx9dgmI5VhVioc2QHTWHvI+Bl2-bfLUGQFOe+YqEOMZUyh9TfgV4qGgFpbTK6f3BoM0Zmpg6xOke5ZJqzwjU22fs8AAwcHFMSuU5OotySZ0edXsYdo3q1WAqw7xyhuHdV0P8IZ4zByzPifC2Bvt1r052akZQOjiXnVIeY25rRvkqzpKy3g1VRjqU8brXpmhgn0X90hqF+F1Xj2Rb8da+QlBST4inBsBTTyksTtdU+oldg+7zsvDlgbNa-M4d-fhvwZWanlEq2F0Ds3avRYa2ExIETHXOeS9t1j7nPNZdyf131y7v1nYCxdq7-czC3em-dntc2rY2ee1ORICWNutaY6W1LVtn2uwy15kAFosA1iaCCFA4hLCUC5gRW0ig7huyKJbQofhojWQMCztn8WihX1rNznncxjMOGUALwgDJkADBkcAMcXGIkgC07YLzU57nACyqqHFwAsAwAGEiEEMBoT2sDDACCWaMR92AMO4AJBpFGCvUyaRcRYPAGhIQeAtHgC0GF8AeTwAI6aAGHUm0OhshVxDtoaIZNhJoG97z1wlImZnHF1Hw40AVYJ5TyYVtNSTfqFVJAFewA0DiAjpUFcXwI4BFgG8MPIAtAC0p3MOnhQGc+CZ+z9nPUuep477Wfn0AlAC+QG4U30iCg9dsFpAw4BrKaFkSoRQGgayveAE1VES9sniFsBqMggcVwYAjjgDJXxJB+2153qvfhkKn5QHqEEV+b8YESL5Vnj-2cn5f6n+zPeBd45AaHGAUDzY4D1EqEHVf3pxMlalGC2hAKgLuBVnnTnEgHAFUGsDQFCU+DIALg72sE-wQEqDYFjixC+CrA6jOBQJfwwkFwQG0HCEkEgF4FL2AHQIhBIEgJhD7l737xgEqAigbhwHRlJlakYJP1AGwIgFwPwMkEIOINeDsGOlTzIA-0oOoNoJwAjhu0EPGCvU73qHYMuC4OsB4L4LmnUhkDeiphEJADEKNgkNgAmDOBkJf0aAoIgCoJoLoMhhYSUAjmNhrhQHNgDgkhXGsnPyRFgPCRfyUBBGCC6BwCRCj3ZCagDDBEKDsHGyKEMG50JGJDJApGpHP152gElgdDblj0GAAF4gA`);
                U12[`grappleMapStrings`][`push`](`2,Orbiting Grapple Points,The 9th Doctor,54848,ILDmJAhZIawhjqQCYAUDGBbAUgBxQHEAbAVwC0BPSACWwDEB3DQgD2IEl7IA3AQwDqAVgAMGRsADyANUIALTgBFiIvgGFIAUQBGAJgByI7QGYOIAIpTZCjstUadBo6ZAA7fROCKBlzQjUgnhLQwGYQAPYg9MAAmgDOiCB+kYmpaekZIGrmkOCJisAAqgmZ6dm5pYkAspAAyp5p2fR4la2I2dmpBYVVqTXmDakdlonQPX2QAxnDqWO9iZqTg4kz+UXziItTZeado2Albf67I4gFoIdHWSezwAAqYYg1VXmNN2t3pwjPr0PvZ-dHghFi9pv8ENAHqkQb8VuZCAAzK5tbI0ACcyNaTSRmNKqwBACU0jUCV84XskPcySAfmCKRDAdDIKCdvSIAUoQtmbD2uCINBpLjrmyoMAiRNSXTqV4xcTIJLWdKCoKhfiEAVxVyFW8RTBZUztX96HwhZk1ezgCrcebRZqnvLpRAbXq7cCHWDjaapbcrZjndBXRASY7hUr9dV3YqupbTc6NWlFobydKAwnI296IQvTtM9m0ikQIppNJSNosPQAC7kHygQq6ORyFjSAD0AHZmx3Ox3PAiANRdrtotsDzsSQqEWqXEIARmkZaEcm0AmksC4+nCMQAGpBiH2Rx2ABwgGjNnj75t7-dH7iwABOSRA4H00mEpBiAmnxHIGjufEITHITdT3PKBh33YxgP3GBzHIABpYIaS8YtS3LKsazrBsmzAkce37fch3bfcJAAR0kacUl8JJKEvEcj2AE8z33GiB2vOB735SxIH0BiQJgbCBwgxiR2guDBhiEA7nIfiu1w88CPPMcJ0uGgkgAFmYrs6J4pi8No4Ab3YrIQGfV930-b9IF-f9GEAyDhL4wiR0EkC1HCVsBF+eAixLMtK2rcxa3rRtCBbRyB1k-DpNHYBSPIhBYKojTOy0uyBySw99LY-xgm41Ku1AsKu2cqDJlEhBPEkqLuxAdLm3koiiiUhB9DU2qUqEtLdJYzK73VJ8XyEN8Py-H8-wAoCOvyhzz2K4S1BiXRCk4kAj28lC-PQoKsMK6LgFq+qcL2gAZWB5ksEZZ3nRdl1Xeh1y3Hc2uPPLOyenAACtyHFPxNE4qpXBejsCpmwHmxE+D+TCO4CSq5sIpHA7wsaycEDuJJdCe+jQaegyEGiGBJG0+zIFh2aB3BhpIEKCT6Fh+GB0RmTkcuAREq6zTnsm172eSnrDP04IqjJqaSZ2jthc7Cn+TyaG6ZqnmO0Z6LxxRiByCSadMaJzrz1Y3qIEIcAuIBrmgem8DQalqASlgHAaC17GFebI9YPeisTWAPwVJgKoJt40WQdNsHSohqARAk-Q5b2p2leqlXLgAUw1h2g5xrKIBoCRslgFAo-2uXYoosAklYFPzzT-WQA4P6Tf90nLZDho1ChyOxbh+W5Ll+OEHepIRDLnTdb5hAcCgfQ-ag82nIbmDQ+ANRqfuKS2-pwcu6aiAsBAHA1AJCWzYDi2g-nhalr1NQMBAW37ad9ry9v4APq+h9gGCdXgEIcxdGISgFvYPNUhoF7BkIBWByBgIgeQcIzZVIAC8qjwMQVUZYADUFpEYIoEMGQ-DAEdOJAIj8VpeHAAUEIwAfDz3oDgHgRB6AiHILUOojB6DwDQUAkBvZIGQOgSvNBrQ0Cti4eAqBlQMFYPSDgx04BCASFcDAam9BwCbhgNIywHsWEgDkLUEwBI5BEEKKAO4ix36oMUM2Hk7Jmx4CEVgPgQCh58NKIoXsQgbEe0yL0cOyIQg4MSGYSAR4cDgHAGoPwHBwC906DgSwHBGCEBaPsPg4jUiMBoJuCx0FFi4IQNIO4LB6DGG0HESAABLFBuDCCsKODUacql0iFGgOYXx+lCjGEgHo3QrZLQFjdAko4BQUBJzSNEJpZCYDSA8FuFApAMF1MSckxIqT0lpEmFkr4uT8mFPgMA1I8IqltBqXM1IDTcHNPoK09pKBdBCG6UyPpbQBlDNSCMrJ-IJmMCmaQeER1bhJOREsjJqzGk5Lyf+LZkBiLSj2ciQ59TGlnIuR0o5MpPaOLRWkDKrRmnovRWMrFOKCXzyOEAA`);
                U12[`grappleMapStrings`][`push`](`2,Gridian,Shunk,73697,ILDmJAhZIawhjrACYAkDGBbANrAhgOoBiAriAGoAq+aFp+A7jJTXQ8xAKIBmALAEUuCAMIgADMDHAA4onAAREMMgDgw4BmBo1IofESGjxxHpn4TlqyD1cD1h0gFoAnEegA5cI4ciA9ACeAFIAspBoAF4yAJoAMt7AAKqQfmqGAgrRPo4ACgAcAJZUwABKeQAeWCJ8EMTAXkZckABaxgIybtk+qpnuwIRpiGEAboNd1rCQWAnjVsmpRhlZsybDhcVlldW1wDyShsIATCsmCn4AkrCMvCHNoORQS30DjZCjJ3PAx4vE9ghKACN9h9jEFgDkZo4BOdOiYwRDxgIANIoTjGOr4MbcYDAkFdPQKGpdLgiHJY0wZInZEkAOy0JgJVJ8tPpxlsfzxogyuM5ED0xAALiEIsLRTzZqpLn09ryupMIstZRB5uTgAJfuMwowmV06jwOcoWm00BYumcAKznHgCxIlETiRWqGQGlgeJXZRIiMGLNAPd3WPXi9RGrrQDAAeROqjQ5ueqrCh0hDj8AGoAMpoADsFC4AgFchAOgQAEYKACsOaABYAwgUWDnYgeAD20QAGpAcDwU34e72e3lC35hn2+12R72B1QAMwBADOiDUHgohHNpGihGLOGaIkgNBkxEYzVbQ-HPagfkzp78U5Pp-ULjyACdEOdgAoKPRy4LmgNQIlDpWlYYDIFAXlenBjqeLhgaejCQDkPBImib4gKW5ZVjWdYNs2bYdpB44Dtot7jvhI6TjO84QMgS4rmuG5bjue4HkexEjuel6njew53lwD7PggiRvh+pBfgKP4CH+AFASBMHjhB3ZQbJI5wQhSEIAWaEVtWtb1o2Lbtp2CkEYO3EkUZZHANOc4IJAzA0au66btuu74Puh7HqZbEwEpfZcVe95PvIQmflg36-v+gHAaBHFySApF9tBMXKfBiHId6mkYTp2H6Xh5l9oRaCsaOeUTpZFGiOA9l0U5jGucxHn+d5SW+UVvYBfxEDzu+IVhRJEXSdF4FxSVPaJeBKVqRAISoWWWmYbpOEGfFpVEZ5xVXuR1kQAoi7Lg59HOUx7mtWeTVXn5PF8YgNTdSJoVieFUlRT5vacMOxgpM1r2QCEVBcMhOQzeh2lYXpuGGRtJlXst-ZlVtyggFVjkMS5bksWtbVnZxJ1+O1NnCLdoniZJkUyV9PbyVeY2wRNyFpkDc1ZWDS0jX4BU4zDbNw5Ryh2Xt1Uo0d6ONZ9504+o5S-TZaiE-dxP9c95N+JTilK8wABs4YAFZNiAagUAzmWg4tuWQ6t0OswO2tNurCPEJV-PI4ddXHRjp2i9jbu4zt4huiwkBaLLvUkwNL0U8NVNh8rwCazrevAMsGUgwtOUQ6e7Ne5zVs67b6iyLttFO7VaMNXeUhc0YhVexLUtUbrQcPX1T1k0Nuys9TsW+zt8cAobyfZeDWdQ6eQ-W7nwhoIjjsHcX9Xi1j44XeOb42+G4DIN4LzhCUwzRIcArAPgLoklgTZJlYfg6qIFcHAoCiVlf-pP0qajQEIb8aGMGrAM04hEB4j5zgKA0MYFk4xL4MhvogLgd8H7P3gf6V+aomjIJgEg4A01kB1ATiALeaASgAAc94HyPo0EQIRpDZAgWyKBCAYH30fggphswkHv1QWqKQIBv6-3-oA4BlgSRknAYw8uhFb4MOYZIj4rCUFCDQdoEA4A9DACRCASiW8NzDBQFgCgARGAyAIe6HIKZLDGKwM0cxljmiGO9FIqw0I8giPgZ-WRKCMEoXqCAIkW9DjFi0TogIQCwSkKVNQ4wfh1YWKiZY+ALo7E2WAFrCI58mEyI-iAZggNkAyFfhgZgMRDj0BQCBAIz9jGWHeuE8QIoamimQvEhp2JkEf2QK+Lg4BijAGIBEEAKBZpGziXicpJgzHRKiU2Pw1TRS1PqY0hpLiWmKK6WoCwkAsjYNbDAcAMhmD0i1poSMhgwiQBSR8OobCqIUA8IwNsKBSD6J6YYJQAhFSylULIhA1BgLECnACWckAaSzOANcAs7pkjsK4YkKckBKwoEOJmBOPMEDHNOScc5bioBXJua2O5zgFBJmea83k7y36fKoN835kxZxApBU-cFcjahQphXC2MzQxHIsgCc-06LkCYuubc0g7RYhGEJf6ElHCIBfP3L89eIBKyZE2aAQgWAXCkGaIJU07hXwcOkCAhpvKVgpFoX0POcyDWzDOMawwkAgA`);
                U12[`grappleMapStrings`][`push`](`2,h_22,h_bar,52172,ILDGJAhZIawhjrAEoHsAaAvAkgTxADVMAmAKQAtQBzGI0ymhAEQBktgBRYAYQEVgAeRABZXgJwg0IAaxDhIAgOIyQtCAAZgzEACMQZYBgAsiM+YtnDhy7bsGjp+86vAbZzs2YBLF+et+gQ7uiJ4+QQgBES5RHl6+0W5JifaxofEpaSkWWRBhCdG52YhFXBmJpcXBFvmZyVX+9enhFU0NkW155YWoAJrtZgBiwAC2ZADuHjyCPAPaAPSwAK4AcgAOS8YArADMAFoQimQAJlpIwACGAnPzW6wAVhe6S4LHJNfAsJB4k3MQXwA3D5-L5rP4IL7eX5-JTQ4AARkIuhGWwougA6oRYDhBis0L0MJAADYAMwA1PNKVTKQAOEAACXmAOp1PJLKpdIAKjs8ABnRACFaEdFbJa9dHwol7HiQTkXJSDcZ7DBM9mUqDzADsavmO1VauArHmJOM6hAkmYhEIS2RgwALnt0XxqABVEgUKhKQhanW-NlqgCcPrV40gAAUSQBpOE6BH3XQ7a3HL14N6ENZ7d0af3sunARnMtU5llcnn8w4gIUisUSqUyuUKpUqwvsjXatV6lssw3G00IF3adErAHHEUaZVkfbookAOwu9JQwfZfopgaXLNDEejCBUCKRKLRmOxuPxhNJq9zDP17OL1LpAKDBRgkxWvRIAfhuhnKCJoBnxyJC50WONBjgLHU2x1TsIM4AMaQAJ0QWhLWtW0HSdV13U9b122XEBbypINcI3HhdTJSQIBseF40TJZk0IVMSHTTMKGzC8SyvLtWXYu9gG5PkEB4Wgq1FcVJWlWV5UVZVr27GB12paCDSNE0zWAflmCHEcxwnKdZ3nRdiOpFcdSI31wyjOExD3ZFUQxLEcTxAliQI2lOJ1Vz5nvR8WEFN8Py-H8-wAoCQLA2TqUgjsIqpLg4MQhBTBQm0RntR1nTdD1QC9BSqRMtcjLy0idnIhAwxAaiEyTFM0wzLNPLzcCix4jk+LLBBuGAESa3E+spKbGL1XkwrKSU1sVL7KBuE04dRy2ccMEnR19IXXLKXy9kzJDCztwgABlCr9zso9HNPFyWrc-NBuNC6vOAB95ifTgX38z9v1-f9AOA0CmtbYaoOuuKEIQRRtCtFK0owzLsLW+YNpZLbl2YVqIEIQ7bMPByT2c88dUa66GpAcY+FmLhgEGYThVE2sJIbaTmwg-7oq42LIBEEYcEmaBIHAZK0PSzCspyka4fw27EY3YAlB0X4BH6GyD3s48nLPQmrpZylCZ4Cg+AHMmlEFKmerrSTGxkjX5ii9kxu7SAXQAR0jWhuekPnUvQjKsOynDfTF0zYcme2XXha4BGEcn4HJyBxkEQQKL8ZgADZ6V0QQSV6UBvETtYwzJWxc5GPZC+LvY0HmJYi8r4u1PBWvgHGZhgT8Tqm7yEGDmASM9npMg1mOEZCHGXQSCJOjOB5iuS5GC5xgpqvK+kSxkZrlh5jWKei4uMMAxELBd-3ve69sTxjAuElzFbxAxDOIJkE6sxSc6rmO8UFeED4WP44QMkKBILAZxIPSHASx7acnmG-EAyN17z2nmGTUG9C6LyPrXa+0Q74WGQBRJ0vARgoDwBcDAexfxKADGsL8nJgAunLFfSA1AwwH13isOw8wnAWHmInGBRd7jzE5AwveHBkHmGgGSJQM44QgHvhYHQTDogCGQOYWgnU9bYJ4Lg-BhDiGkPIcAXoFxzAiEgL3BBzDWHmHYZwkY3DeH8IPoIoRwARFiI8HYaRiQ5GWFoLucAwAVFqIIUQ7KWiZwUKoeYcedC+EyMsCw2w5iEFWL4bvOxZhhGiPEWTWwrjZF0AsLQCikdfF4P8ZoshwSdF6I8IY6BU8TGxI4fEnhiSBHJIrI49JkjzBZIiO43JncQDlkKeogJJDSkoCEG-ce3h+4wNqdE+pMCEk2P4S0kGDi0nOMyV1NxOSFHAGsmcQZxTAmjKMKwBBXxehKBgRU6JpizBxIWY0pZSSVlQDWU40ILitnZPkWYWg4c8yHI0ccwKOjqHtBiXMixiy+GvLeW0jZS9vndJ2X84AcjOpAuGUEsZgg34GKmcY2JdzEAPKnjCpZcK6AIs+ZsqJQQem7IOmzEA6J+SQBGMcXkw9KD6FrsvJea8EFbx3s8w+iQ4EINLlSlw6D7GgyMGISAiIIboQoZyElezgCamiJCth8zyVPNhTKk16K6B8HHuiluwA0bkwEccI6mNYBhktvYjpLhc75zJFKsuGgxUiHSaa5JLdLUWuQAIRUOiYDwCULQayGDLiarsOMekcgMFhrNajTk2VBg7F0F8EI78lBLAiAYn4lgXTQAtQgQYLodiQAoG8LYPjL7j3ghApFoBwWIGGBmw4hAVjjAJMcJYfAlBpvOBcJNtgU0TpSRm4EhBs0KjzaCCwY6S1BDLYGkAlarU1rrQ2t4OqrhhMgO2oIOgu2WF7Za-tg7h1LHGCQ+xU6IizssIoUNCAl05tXZAIEF9i2lu+DuyhVbJG1vrY2kgzbejdokeejtUiwAIYgLe35kAB1DowCO2ekdJ3TssB+9N36s1-t0LySAUIgObsCNuitEGD3QePcAParakOXtQzeq1mHsOPprSAUmrzoAYDOTAqjlzrkSIiMhuufBBh4C2BvRC6JbCYL8F-FpBi9qBufcAGkzyzhgYsMJlZOhQlmAMREpZMjrJyYQA58Ez7Y1mB0HtC4nDFERC08kgxFAkEIHGJwEYCD+jIDM3YSLySLNofCfQ2zu7ZNUtnnOisvRmBiojeaTTVL-OBYgBa0LMDwtOcElSnQuiz1GJmVG4AZX6tUr4MwArbzegzi8-mHzVLuCJ3XUoMgJASvPl4H4aLdjRPianhcq5U8KkNYgAt9oCmlMbzBOiDlMC8k5ZcL5uxkyTOWH4EEcbgjoDwcSJHBrS2GjNda9oHRHWN60EjN1uFvWLDPsG8NoSo3ZVBuKLQNL67UUA8SMDi+ABeSHQA`);
                U12[`grappleMapStrings`][`push`](`2,Photon Tube,The 9th Doctor,79473,ILDWJAhZPD4cAisAMgVQOIAsBuATTATgFcBJAMQCUBGATQFt1gARAGyoHsAtAZWACshAObCqxAFaEiATxABRVhx78hmUeKJTic4ACkAXgGMoAOQYAOaPGHAAsiAAM8B8ADOwAMK29IW5AB3YEwQZmtrV1tuEApgCWdEeUgAehREAIAJfCCEFmAjABVENGSABzIAMwAXdCpPRzoISCQyImLoCoSEO0gANjgETKo0+E9k3t4MgHYANXkkKpCIdE8ABRH4JAy2xDyAUw2IHpkchFwAalBsc5oqeVQqWxBfAGkn4o-PxFj44qTU4pbbKIaCFYqoMqVGp1BpNFo7BAdLrwJIAZhMiC28lOEDGE2mcwWS1Ca0OIC2CPg0AOf0gJ2KFyuNzuD3eP2REH+ZOQGQAjmToPhYogIeVqrV6o0oEhPNzoAB1bk9AScYoBCgDBDjSazeaLeDMTWbDXFfYAQ1p0QZl2ut3ujwgsV8lo+WwY7wgeUV4Mh4phUpgMrlwG9iUgKsBJuK2oJeuJwHQkCtmNaXzTH1WNuZ9rZwE6f1J6aLnt90MluJlquL1ZAss8VZrxbrDcb6ebrablY7Rfb3bTvb7n2aqZBedRtPRgIy2MQeJ1hP1y0LmO2OJAeXw48QPQAHq4zlm7ayIK8PYPEKfzx9YPAMgUKEhhEYcAIjKjkrhkl-v1+oMkpj+P7vp+gG-pA8h3BsiieOgO7oGQmACLgz7YK+wGgb+MD-hhyToRhMAQfMMAgGQXiwfBiHIS+b4fjhf4ARheGgV4ZAAJZkP4IAOCwMwzCQABGDAUFU3CKsI6AAEzYNgz4zNhGE5BU5w4UQ8mgQE4FsMmCggGwdgzJ4kACaikCcHsAAaphqYBinKRhqkMepwDsex5LAMK+D6YZARmhkbAGEpOEWCAGS0RhgUYcFhFUFSPj3o+glED5fkBXZoHBcAoUgaBEXpcAbFsTpgT6PFwiJcl-m5YBGVZThVU-lFdwxcA0EgKYMzygIJB0PKNBaYZBRmpgFABNw5lhcxWGOYBTGAS1RAWAATgg4A8XxgnCaJj6SdJsnWT+tkqft34aasFQvDiLwgDQMyCQI2D8fKMygJQpicHQ5mQGw9XfjVE2AT9X7BQUqIyB4uJBO1nXdb1-WQINw2jeN2VzVNOGzT+81LYMSjrUJIliegqJUDIZqfd9aXVSF-0-oDyTBVQjjyooLWsCgUNdT1fXcANQ0jWNNPfvR6OC7+LBGDQ+BQCAAAsrC8QJ+NbeJUkyZgcnTQdIB0w5OEafIWkIKs123Qw92Pc9r3veTdN-SjtOUw1wBUHooY6cAHMw9zvOIwL9tC2jjGi8kLW8M9VKKGtiubYTqt7ZrJ3a47366wpmnacA-DADdd0PU9L0UG9H1fbb1P+1+pcu27LWQx1nOwzz8N80jwfC0H5ch-IYeas08t4zH21x+rx1fod9kj8k+uG-AMy6V5Rn8SZZmWRPY+ganTlNSzKDynPBkL0vFlWQno9J0dJ+T87hFueZJu5xbBdFzbydA2XdUv-TzuuxsSye1zcMI35sjOigdQIYyFl3cO8AEjmQcJAGYpg3CLy+leDM5wvifk+MkRwBg7C4PwXg84AgGDcBIWQs0qwphkNITQlsqD6Hpm3oiPw8Bd75TcrESAYRbAZBiHANgGQjBCQCM+HcbAyAsBZh8HoGdizJDllgjKiQWAyzNBUTEvcGHnikR8PIphuwoGsBAEYKA8juQMCAHmi8+J0AkswLR1ZP6mmSAUPBbj8GUOodQzgyQSA0K8WeBxQTjGswFCREA4BvBoBiBY4ApRPA9VMItbgqI9AEE6kaBhmYviZi8bQ7BBCCFrmCSU7s28kjIAqewlgKBXBRgEUIkaojxEsF8NwPYxQZEdnkV8JxyjVHqIQEgTRpSaw6NNB7AxxFNghIAPJ8N0oI4RzSJH6PwB07cSZukKI+H0hA8gVFqI0dyUZXxxm7EmR2QxQyQnG3cvwpZTTMBiIkTFdZLpWw9MUR8A5Az0gjNOUWc5uRLmtmuTMtyaR6mPJEc8lps92kfMbF83ZSj9mHMGfADSJzAV-DTHoqZRi3JuWatCxpsKXksADEimsKLoxopRBi-5OLcX7PxaCxs4KQluSzmS5ZcKJHqMRWGWRRY6WID2Yyv5gwAWss+MC+ABKrnTO5cgYARR7mLPJSslgEhgDvJFds3pDLORMplSyuV7tPhKrBSq4lar7F8qeZSgAdvqjZ3QtmfJ2fSn5ZrNiystYkdl+jlVErVTfBZcSYU6uxAETA5lAlegtcUbJnxVgh3aMAc4mAXVrkUPYoN150wBBqR2JhnJK1LDIPG0oWazQpvSBkVAQ4kAVI2AIcyZMuAIWwGwfivDhDcBdWk-iRhICsWKcgTAmT0w9AMNShAiZKnwFmTMHALS2CODNIZeQ-EJKmEcIvFtMw6EKEgHWxsG4vixDbeGhw6DAQztbD0RwZ7ljQDbUMlR9bG2DAyLPa8d6I3S1PbSbAgT2X4ELd8Sp4akiTsjH+lwkAaA4uXV+zYmBL3MNDY2TIgH2jAe5LYMgSAJIjUoKUXAglZ4SAMJB9yoQvDyFMDJQyZp90CDYC0CwPrijCmAAAXiAA`);
                U12[`grappleMapStrings`][`push`](`2,Whel2,kklkkj,73345,ILDmJAhZIawhjrAGoA0CGBxFBnAsuFhgEwAuupZAjiAKIwC2ZATgEZasbgDCAxgGYIAJQBs0AIoIAksAAi9ELOAB3BAwByUnhJ4B7RCAWhchs+Z37z14HR4811ywcPQApgAcz+SKPhPdF0QFTzM6X38LQLNoExt453iw+0coq0MQr0MfPxtE12BQw3DcgPSk9UgAeikyoIRjUwqzfOb6FLzogqLEHMiWruDCrMQS-tcJaWpahFiAM3A2pZtYHmA1pcb42EgAaj5lrZXgWjMVAAk6VOXgAFUeADsDwwlIGbafFXflgCkwf6WF3Ghj+cweNyB8QAYsAPEJindzBJznMbnIqgBWaRzMi3YQ8AAMAE0IG8ANIAE2uUGAMO8kAE1IqVV2AGVzgB2FB0CRkLAIeCnF7nACcNwFJxu0DmBO2krO5yJiwawApAEs5ULEMilQV1ZqkaLxRBBVLgDKDQqiSShhSABbKsymsw6m2zVUO45ahASLBi7oAD0thhUfpihSDXsNuG+MGAbFlUYVMYKCeD2qNxuAzpDmeNOYzKaGaaTuaLKpL1gLPrDGQj6YQof9Qzckar8s25sT7e9FWl3fM1Ygvub7tbDYgTfD49Lhdj0Erg47iAu5dJ8YHTuXPrz4qHIAuo5u++AyLXRg3E4P53P8kvs5rR4vM575indZfS97SQUFusWgQABGFA2EYDE7TYAB1FBYGkKEND0Ik0EgAAbOZdiqTCsMwgAOEBziqAA3bDsPQkisLwgAVAQAE8mmHYANBQSCMQAVyJSDAJQgAtHhIEo7AoRUbi0CI8jMKgKoOXEqoBDE8TbBFHCWEQWQ5BQFBWNAqEyG4yCJFAW4SDtO0+BwKSZMcMjxJFCzxJUSAAAU5jJa4FGAYDQPAqCYLghCkNQ6zyLw4ACOI8SgpIqjaPouNGOYtiOK43j+ME4TRPC8jJOk8S5MykjFOUxBbnkDStMYHS9IMoyTLMlA7PIqyMJshqSIc5zXIQfkPJAsCIOg2D4MQ5C0Oa4L8Pk8jIuw6K6NmNQmJY9jOJ4viBKwISRMmgqYFa7C8pkwqVIQcB1M07TdP0wzjNM8ycsakBpqw2z7rayB8A8DE3WAP4eq8-rfKGgLRpkkKwpkp7cOASiyTcSCEB4cBFsSlaUvWzaMsO3bXv27bsNsGiHhQx1TDO8rKqumrbvqnGsKamSXss97Pu+-AQE8vqfMG-yRshqowbxrC+ao2H4YgOQpGR5bkrWtKtvy-HsZkg6FMgXAyEcmlgAAFlK86Ksu6qbrqva6cesaSMZ+zgDVAB5W4XCkTW-s5ga-OGwKLZmiaFaFr2KOALAaIJEKGAYeKlqS1bUo29LBYkpXcvjqpbFEFAtUgBgyYuqrrtqu7LPNhnTcw9qXOuVl2d67y3aB3n-ah0Lk+F4BpAAKxQslFCuCOUZlmOMeT7LlaHtWNZpN49fJw28+pkuqnplradLpzy4QFAq-+rn3eBlum99zCW+ouaIChJGEul6P0bjg+U8T8iVayuhCeJ0kDmzg3c6pk3l4Xoul6Zh9L6CAbQcxroDHmntQY+whg3fm0NRZdUlhfKOaM5aYwUvfEij8CrPyJsqSABgP4UyNvnGmhdzRwKto1ZmwCIBsE3q7CBHsQbiQFrfI+iCIDnBAFLVBstY7yyxtUX+OD8Z4NflAWUxCZ7fwLtbShxdf4OSAd9NwjDwHcxYXvcGEU4Eizhggc4C0UGowEYPW+w8k6WIkcqDYMiv7G3kQ9RRAD7K0O+naDRAMtG730TAvR0CYaGIgNIc+kczEDxvsI+eYisIE3wRAHgbMHGUyceQhRfNqFvVURKF2mid712gfvWBQSuEgB+MgiJ-dr5CMwSIkeNiX52JJKk0hc9lH-3Itk7CKiWYIHBPknxhSoFsICVNfxwSxYgC7r3S+aDBEYKylg3GTTEkgB4PANps8f4UKyfPPpdCQCnDAcMuuozxolMCWMqZCBOp8MibUpZO0GnWMOrYpJahtlyIyS4-ZyiPEIDIN47e5zWGXN0RMspISQAABlwl9yvugoeKysJxIkh8jZeFvnpIOV0y2BzAWThBbXSB4KorjJIpwmFwB8BVMRQsixMTRFD0xfINSZUc5pLIXi1x3TCW5IgAALxJcwvxxTIVUsmeUxivDTE1ORZY1FmF0UpzZaeEA+kQBoGeOYfAHRlhVF1hYeBYQ5ByDtMarMDQqg-EYNxe1jqMDWpdUkKQyA6ytxgLrYx-weAMDCcANu6wpCVOAIwdYBxZmQD4GoHgRJGC6tdYgI1NgqiiAdZmx1bcqiUXwEK-NhaRXJpLaWmw7rTzhErTASWMBZA91tiAEKaA2bAEgq2stIBU0moxI6rN3EhW5qLUWzto7R0VtGAeYAwga20nddxKAVIbCQkOFUR0iBYV-xdPgW25x13WsIiKYdBaC1juTcgcO2R1jwDJOAFSDhgCwqkKxdYeFW1BjkLIfAahExeJnfSFCVrS0wgkFW0kKANAqCQhSViKgeRmAUNxdRna3hVveCgSiZkoQCDYDsZDIYsConHZIS9tJbgCEgHaCkJAOTADQPu2lkAHhMldQwUDHqYAQag2gGDvpgR3gwM60dcHJDr0wxtHDuBIAjBXFgRgDGXU+GrafcjlHqMYmAHwb6EAfAsAU9atY7HZhceg7B843UhgYCA6W0AaGxNYZw6dEAdo5BITAJBRgIpWLcRKvxqADBkDSAkCQIScEPCEVAhvX65gSqIn9RoUyfEMBsBIBiFCuhYynykHSZQmWz2dvRFumw4c8v5dLY5UuSQ6AAF4gA`);
                U12[`grappleMapStrings`][`push`](`2,Running out of time,kklkkj,73430,ILDmJAhZIawhjqQHIGUAmB1ArAVwENcA7ASQHEBOARgwGFIA3ALQEtIAGI6gGxGYBOBAEwAPIcID2IAIrByIgC4BnJQEcQAKQBeAYygAJRQE1oCcKRABVGCDogAsrIgARcMCuQARhwDSi4isAW0pNAAUAekQIaDRRABYAK0UcK0VSDkgVAGpgVgAxOi9sxgAOAE8cA1EMZgAlHAB3CHzgLEo6AR4DZgcBbQjm6OAZcgAZbIBmfOpE1nJmYGZKAwA1ZRd2qy8InlZFDEVdTUVVmJl8xhk1eMmHAFFG+IjS4eB7yAFdRqDQTWpNFYLgAHRr5ABmdQApnQOAA2F7ggDy2lAeES8jk1m8fkUoAIkzUrEib2gXmIGGUxlWpDUXiGb0isAAFtlqHV7mM6u5gK12p1Et8ACouRKDN6jRTaOgEYCBHhCtrEYCrSj5eJjIVi0SlADsSLocKciygFyuahwdWEQt8pRebw+rAiihqxnizKCjXIkOoXmA1EYq3uERwxgEAA0vOGiqssR4cf5AiFwlFhrEEslUulSlllLkCkVsmEKlUavUmi02h0BMwAYw0ELxcNGvdlFDSLqoasxmgwsAvF4wqBSMyZEEIgIIg48HVSuGsFYofpTZdrpbrbb7cMHJAnS6MG6PV6fX6A6tyCGw5Ho15YxBPD5fHgUNpIA4kSThi5gASHJpJHQGBoKsO4ELokDhhw4agIoSKMBEBjaMoGqSI0cCVvyAjGOQihwpIYoMogXo4JMXjkPkaC+EErxvMAYwhqQ4KKFYdSwsY5yrjcdyPM8NHRDuXw-H8AJAvkoIQtCsK8ciqLopi94JngVgYLA5SMJ+0TfsYjC6ro85IqQzCwJAxAcNgjQoF47JhNkWC+NQwjUD81A2CAfLVrWmj1o2hEIC2bYdl2PYoP2g7DqO45itOs7zouy7AHQoyTL5tGpWmMikPA0TQKA4I8mlBWFQpERxggMiQKVRVValrSgMowwfDg1VQD+5DNQgiV0PlRU7mgKUdTIXXtR8fWpZ13UtVY9XtXYg0TcA35TTNs2Je1O5ZbRnWVYVHwbW8W1pksy0rdtC1HcdB3ZcA4b3NukC6KdECXUg123dEHwPWNg2nd+N0Nfdj0nV+r13Z9m0XOGx1pYl9y5FD4PkGc8P7aMYzI6SMj3HxCDQK07VevE-VFZ4eDSNE5U-ddGj8e8UOaMADiA-DpBbuj0StEip23a51Xfl48TDPROCMcxrEcOxs3kHC83IxVUsTbjDqQFCZNESMUM2E1wwU8NTDzfBLJshyXI8hzXMeBK5Bw2zOMyC4e0xLybw7owMvI5rEoVYd4YC-xnynXILiQFYiQwbowg82bDUW82+TWzjP4cNHwCNDSGrhigfCmvbh14+9-ux-HjuQGE5BBKIiSJDIYQMh72te5pif-Xl2vAEKojAlS8QcC4fFR+9Mfkzh3u+4gThYwQZFIiFqYwHbDstXnY8F9EYJFyA34l2XFdVzX97AFr5MNy9Pv-QIp3NEHIdhxHlac9HPNEXHwMEEnNMp2nYwZ1nc9Y7nzuQESBLIi5BdATToCGHguhjBoDwBge4zJa4l09pTLwso-ZLwQPBZg4ZyD3AEMQOopB4qtCFP1bmlthATW-HUH6ERhCrFEMyXwOAOBoAMOcP+V1MEQA+EA5soD5qQOgbA+BiCQBIkQPA5gWBjCgDqEEHg8RwTZAiGo9RaiaIGAiPBDR6iVF6PUdjZwzgDB1ERkEUg9xmDAihNo3RhioARF1IYtRkwdGuNnrwiAlhOB1B4GwSAChwzMmcZ4oYBjXGUDCa43yZgzrAGkbI+RijlGqNcVojxrjImGOMerWwwAzEWKsTYuxWTHEwBiYY9xDi9ED2sDADg-jAnBNCS42JIAcl6Oie0wxcSIBtUSdY5JCilFdI0Zk2pGjxlGPJlAZoRTViWOsbY+xninG9L0TU9ZiA3pgEac09grSql6IiekwxPTwkvS0CAJJcjRlpM8ZMzxMzNFzISuARZyzSlrNcRszx2y-m7IgPVPxASjkEBCScjRZzPGXI6QnRwtzhn3NSa8rcvzDHoryViFwcgvklNWeUuplTNkaMBRUhAeyBYuFWKsPAXggj5EUDImQoArDCGZMyXQiNoXqNhVEvlajmjMgcBwdwcg+z+lWIynAzIvBYFWLAUg+QUCSGMOGSAPBsUgExXonV5A6iwBNLdN6kBmB6o0f81xFK6n3EoKUAQtMYC3VpfSxlzLWXss5dy3lZL+WdPOd0oV4pmCGqynINAIBqAyqCHKhVSqVVqo1VqnVhTiXTKDRM4AaBNDlEhrw5oKBVi4DwMYLAvBmAMCFAQcijQcEZvUda6pja1HvFYLoHgPIvZuoZUyllWA2Ucq5Ty1YIaBUXPHZAUgxBNDAJVNG2N8bFXKtVeqzV2qs2zPTVM-RW63m5vKFgBA+RwDFtLeWyt1ba35HreGVtqZIAhttVa+4UIxi-BiPoXtHqB1Dp9aO8dga4VToMKwHAqtgASxjbK+VK6k3rtTfujFD6dV1HiIQBA5A5DnvwJegJ1660Nt3W20lAKH3vHfZ+qA0gf39q9cO31Y7-XCuA4KljgxIBgYgwgP00rYMJtXcmjdabLV7qecAdDmGIAcOALhstFaCOQBrUR+9JHH3Poo2+j93ak50c9YO71I6-VXOAOi+FfSuPgcg1CRdAn4NrpTZuiTO6XnIdeJoIUwIsS3QMEWkteHFNVuUzeu9FGyM2oo3Qe42go22HsAtOlfaDP-uM8x0z5mgM8CRD-OQzI7Nxrg4mxzIn3O6tQ2V0gQoUCWFpqQM9AWFNXpC6p8LT6OMvqbZoUQlA4t2CcPpv9RmmNAbM8hizpy6DECFFYIYcgsowcK4JhDTnRMVYk1CWA9xJgIE0Dhxr+HgsqdvcRnZ7XyPqeAL4DASJFRPXYoNhjAGTMIsyxxxoLht1yGVPxpbDnhNIZc2JtRBquraBALdXwIB5OHcIydtTZ3NOXcgKASQDhmjQDoPAR7hnGOAfe2xyd73PtvPVtTRby7isA+cxk8r6mdVWtpr4fzF6gtw7C5diLLbLuRFY5jy+SXf1PbS6Nt74SSdbjkIoArlOhOIZp7kunbmJOM9umMBrrPmvHY54jjrFHefikx68HHqWRsE7GyB4nX2U4y6K3L1bZXXPZLK6rhm+3NdKe16doF53Is84DdAFwlgTfDfxxl8b46Jc0TkOD37suVulaB+t2nruQpyYO2zlr8O2tI-Wd13rCAXA2BD3jl7fTCfBve3QXQ4IrD5WELb5bJXAe06d1isrxADDUFq9DlngWtehe9xU333O889b6w066ThgAhAxDbBAYRKAOG0Mv1fK-gDwVohEDgK-d+r6JvPw-8M3qY2gKfkAo8Cm1eaG9GwKPCkgHAKtKHwB6rfjk25WPmhWDMAP1DT7bsn2wIQQzAIBYBBAi+a+UBR+MBNsZgHwIwCB+KIAHmzQkiCWpAcgtmkANEWA004Y0+R+EQl+0QEQcIoBFBYBYoQoUBu+x0Lg2QcI8Qi4eA+QBgAg+WsByMcgZ+SBt0Q0PBt0pAzQ0gq09WwAemNgKA4AO2vIset6sBNkqUm+bw2+e+e+f+XBWhaUJ+fBZgN+4AioXs+Qcgx6908g-AMA0g5AzQ+gnAIABBIAWAb8RBJBiAZBlBlB1BtBy+2hfh7UPBiBvBCSQQCU8Avg4ATqdAzQYwcgeACUrw0+ogC0lg6OFhtE34g6R+FUSBCAqwQoPK+QpExkYMICPC6MngiBJ6VgkwkAzIGAwgTUJoNMh88+rQ5+MQqwKAjQGqGAeAFwaMjc98h+ORZ+eRBR5EpEbsKc5AUI0xy0lRmM1RtR9RwguoIMfszI8xM07RCBnR3RvR8RwArw0WKA3KDAk8jRPA30BUeMzILgGqYAWAIQeAzANgC8VKc8wAmBwgt6KqwIjAjKZw9Mm0DSpx5xkAlxOA1xq0tEzQdxDxkMoAzxlArx7xqUPBcgPxfxYkgJQQwJNUYJ9wZxugFxXgVxNxpI4ACJjxyJLxbxwAHxEAdhWJMgvxjQ-xeJBJtEtWNg4JpJkJ5J0JlJwwq0NJSJKJaJjJqU0gXs2JHJuJQJwAIJbwgxfJxJEJUJMJgM7+4pTx9J6JtESccpbJOJAJSpKprcg8AAvNaUAA`);
                U12[`grappleMapStrings`][`push`](`2,Team Grapple Warzone #2,OldGrappler,18005,ILCqJAhYGEHMKKdSATUAtA6gMQC4CSAoqgJ4CaAGpAO4BGA4qHAGoBMOpApgLYCcAVwwBlYACsAsggAyAFTYAPANYAlAMwApABYBjABKQAzhkoEQARWBzFqzboPHTIAHYA5GlAYtLGkAAZgWmAGCxAPX2AzeGAcEENQiRAECFcQWJ0QpGAiMCy8-ILCiEhzHDY86Fii6pq80DRkpHMS2tba2MpyPJzwNr6CkoJyAHss6BV+ybqGvObLKYXgX3NGxbzl1bWkdMykHq3JkrKKmIPJ+tRNixazto6urP3b1qPysdPn2oAReZAARhYdB4AFYtHQsCwlAQcK5hlRIAAbABmAGoAPQYzEYgAcID0aIAblisajiZjccA4OYcr9LK4WFhgQJyFg-giMDBILIAIYMHA0EyEskYqBogDswrRaiFwpAxGgOTlwC+LBYAiB+GwK1AbC0ui84slHmApOFfENwo8nOAzQgX3+gJBYIhUJhcOoyPRwop+KJwtNZIpVJpUBA9MZzNZ7M5PL5AsoMrJoolwulfqTkSICog4BVao1eC1cB1eoyLAtZONAeJ5pTldg0FtIEyAKBoPBkOhsPhnslPsTxOrWNxwgwAGloMUPOGmSy2Ryubz+YL08Tk5K05LsjxhFTEAg8+qeJqsNrdfry3XiVWvWTa0bIBolMNFSAIq2nR3Xd2PUPyXiBxJW9iRHcdJxAaIZ0jecYyXeNAMxddUwQkUiB3PcIHiQ8CyLEsLwra8QD-DF70tR9n1fYBEmAD92xdLt3URYi0X7VcgL7YBRwnRAfkCHQPAYWQsARJQMAYBQEU+CAAAUUUKWSeAwRTlIwYY0T8AAvCQtJ0iRjSkgyDkValGyzEBKMgfjgDHUBxK0VAGAwAkdB4Pw4FcLMaGopAaAYCI2i+NErjtNEAAcVOU7lpL4bTYt0wyErWSczJMm1AnMkBKESGAESMKgVB4OhNEIL5fB0e1HkgABLX5WjRAAWQo0QANiUtrlLENFZDiuLEr6qZLFM0zQhgNINJAULzEYHA-CUvhSDoUQFBoPRgH04pgHIJR+lk+SUQitq1M0nqtPW-rzqKYyUrM7Iwj4jwxxYBg+BoYg8FCxgJJ0eICl8vhgsKQKAeVMKDp4KKYt0+KLphwpkqGtLJ3mLLYFywx8sK4qCC+aTgHKvIJGq2ragaprWrBzruqh7TYdp-JBpta7QiqHBxuABRZBZDAEWIbRGBoOACA01bRu6SAkUmUmCha9r2spk6abppWIAZ1LqVCTJWZADmuZ5og+YYAWhekWB8kJiX+il-IZYprqFbZ5WldVpm0tWmI2eBVxuSwFQlEYZhzB4BQCXINg8ARHRgZtG4AqCgpAvC2Xwei+3vMd2H4cZxt0spTLEiINGMaKjQSqIKkg5DsOI8MWg05VhhpCjvIgfj0Gk4h1P07pzO1Zz7bgBRgu8soAri5Kghy+D0Pw50JRa9mBum6yFv8gTsGO+prSu9pnuUpz0YB-zwuR8xkvsakQOp6r7756yXyGCXpAV+btuIo3hXt4z8yEYZ4AfsH4+o8sY-EnpXGec8vJ5Hvo-HicdV6v3au-amn8Ya72zpODwRhqrBV8noGBbR6hpUQDgUAahID2TYMCAejUsiEyqvg1oVQbpQBYO4KgqABC+Qnu8LANDnglGYRAFgsgMg4DUHQOeSIzoWBwAIAyvR1YQBIWQihYo8Ym1oZAbkBlYiKOKKwmg7CBDmAYHJZewAsAMNqC0bOQiRF8nEZsAAvEAA`);
                U12[`grappleMapStrings`][`push`](`2,Sunburst,God_Of_Bonk,80021,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-AAXmLEUIgQ9C-OjFgSAsI6AiAPaCXkbQT2BFcIOgIl79BQBvXe2oD6SUfsKGuyov7-2AdgogJ4u7INbkw7B7KCwENIcEA8vKIBx2AnHB+M4sILJsDoC2VC0BD0zkgMunwGrGHvqjPmXs1QJB1ARJgascFeSgboxGXcRxB4FHwzyJSOQGMQBDcsssn9DOJAALx2aAA`);
                U12[`grappleMapStrings`][`push`](`2,Grapple Gears 3,The 9th Doctor,81063,ILDWJAhZPD4cAisACgJQMwCkAWBjACUgGcAtAZUkLIHUAxAT30eAC8QBWAVQEMBxbgHMA8gA10AewCSAUXQA3AJqZF+ITC59BoiTPnLVC9cADC+TBAAqjAHbJ40sxoAyIDZADuweiACymvCSZij8ILLukNDA2MAAagAciMkpqSCxcdxp2dmxSko5hcm+uAAuybKQAPQoRXU5ACKoValVAGwUhADscbJIpWH1iA1+kACmKZ4NtQgNwAByKQEADJPTyXNiGogRq8me9AAsydCLySspSEcbCymVE8lI64ind8B7iE8z8NBb5++Xa7DW4VAH7IEIV6pUxXaJDQow-hw+HZRGDFGoq5wDFpJotFLtTo9PoDHEgEbjNbfCBzM6IC77Z6zYB-HZgxAHY4vEH09kIK5c5l0hD3S5Mn48kV8+BfE4s7YIBmfCHwWlvD4ITly4WIGH0ZFk4bNVodbq9frojEUh4c8U0yXwJWau3k+WgjXwLXcnUQJ0ylX2n3hSmPF2aIPAXZi6lQN28j0QAU3CNR8GCiURkB67GGo0AagA0oduGMAK70QgAJwVueGoxtzpjwDV-wTICmTc2NYgqY5AdjEb9if7zYdPZDnzDULZbeQU7jiulw-TgfVkxH042qELxbLFerhLNJMtKOtVOTSyX7bDXfd65XA8vs6TwJTE-585TV7nTd+3f834vkKa5ptqaQwrIpa1skEEGtBzbGgSprEhahpnoynZjgBs4djcrJSjhG5YcAQ4gEBqrEaKoa-pRgHzvhjqASOLYzveYHQrC8EIHqcHQTCN7AOgTZFPxwm5jCpjeMCQk4pASCyDmEDQCevrAJwayKVmVR5kS5qkhA4AkFxCDgM+shZDihmXOZZLcJAESPDCcpWE4QwKFUoC4HmACM6CyC46AKr4+BJDskAAGbGUUeImrpx5ofW56vk+SXMgxPbfl6kLEaRyDMZR74yp+IGTjR6XYYCD6jl+hFVZuuqcVFCE7iW5ZVv+8HobamGDplAnlZGmVEb1z75W+DZFTRNXRnKA25eRq53qB3q4tuRatfuQiHih+k4l1jYXq2qUUQNvaasNKWPGNdyFYmxVLaVs0dfN10PeddXEVm8lQU1sFNSE9CRb9VxxP9TQtXu7X-c2iUYYd8bHfap1DR9I2VfDIq3WR92sdRT1HVdVUsQRbErak4PrZDB7IXpKlDPtnoCWjcPAsjtXsQjhMY-AVGPWTuN89lc1MUTtHs-zMHff9f1NRTu5tdW0MMxAuHJQT3V4R1Z2ehd6v8q9YUTXdU0lR+ZXPSL3MZeL2WZs1lMK1tNPxWSyvXj1l0a6zWsoxzi6jaL40zRLPN0ebev+oHps66j4FS8DlTS1cQNRXqoPA4DSf0OnUVyfQoXZSF0NpOAACOkz8AAnDcvBiSAZeXFXNd12AwDl-shB09AtAtw3jyd3KPfZOAmntk3wK18PrePOPzKTyX08cgP3JDwvo-IMv2Wr6k4D4BX1cT73wB7zPB9z0fJ9L13wDbyku+XJvEq38koCQHETaeLIebOVV8Cv+-jwv4-2Hm-Js8lv7AisL-Mi3xvJxAAEYAFtOC4HgbQOIoBpD0HmJIJQYhIAABtwp5iqKQshpDQqECqO5chZDiG0LIUkAAHkoJACh+QLDiLQTgpYlC0G8gQsgphIBWAEPQTwZAxDUIYaQqAVQugyKqJgaRMjIzeXmFYFA0QnANDiHEUsSD6ClDoEgIQ3AABMuACD8DiPIxRUl6EyMrnYmR3hK6oCsHsFAcxgBwKQSgtBGCsE4LwYQxxDDKEqIYeE2hSRsAUG4AQ8IgR5hcJ4XwgRQiRFiIkVImhDC5EKJkco-JtC1EaK0SALIuj9GGOMT3MxljrG2KKQwhxJCnEuLacAdxnj4CDD8cg1B6DMHYNwfgohHSIkgCoaU8hMTyFJA8csA+EQvCcO4bw-hgjhGiP4OIyRUSykwC6bQkpijmwrNQJU4AGgakGMQUYkxjSrH4Bsac8h7TFHONabQtxyyyIxBAIMgJIzgnjLCVM2JMyjnzKhYskiAAraQrBBqmA0KkzZGSdnZP2bk2FZDCmKPOaohoVzvhGXuXU55FjXnvN+Z8kACyyE-PscARgfhkWAoCL4hBQzAmjJCRM5lFCYVzLofCxhwArDcHUck9YmL0nbKyXsg5eSLknIZWQklBSGgor8B4EAxwqWPPqaY2lzSPlkK+Z0rVpDvAcq5Q4VAwK+WgqCWM0JkzFGRPFaQkVVQkicpRckhyiqtmZN2Tkw5fr8TVDtUoglsjZDqM0UpCIJqnkNItW8lpbLgABtZa49lwbAUUFdf44ZHqhWQp9WKxRAalmeLPpGbw4bsUqujeq1RmriVJpaGS9xMw5LNj0Q8rN5qmm5qtfaplkrSFFu6b0rx8QK38rBZ64V87A31pkY2tAzbkn0AxWkiNOLVX4tjUS4p-bylpugJAPemazUvMtQmm1DDF1-J6QChwBReWVoFeCr1+7gCzIbdupIMq5WDX4Cgdtyqo14pjRq+Nfar2DuuZoSAwRn00qnfS-NhaZ1VE8JADR3AV3wLXe6wVELvUyN9RBut0GzgREICABDkbcVqtvb2m9V6U0VKUqsPD2aCN5uLQW7dX7GWOtcigB4IKq10ZA5B3d0T1OsfgIQNtp6O1Id41e-jDCdVlL1Ryw1phyRjupeJulknunSe+SRh1paHC4Boyp4DW661gf7fu4NqKIjSBPVixDPHL2oZI2Z8hd6ZimACGJydDnXNzpc++ho9BcCmALtPZTQHN21sYxp2h+7tODWwPB-TEWL0oZ7WhgTFyLMGs0KYAoyXX3Tvfel21bL5OAvsAB9d1b6OgfA3u9TQXkkFk4zV7jdXu0FJM2c29Qm01ZnAJ1nNhGpPEZ6wNhw7cCsbprQx6Z-nY2BeRcF4ABY9PhYW12vjjXTO3pa1Z7w22JNpec311x5GZUanKMN2jPnisXYm5putLC2HwBcGFpVT3kNLeOa91bgnU2VNy6O2ppr8OpZ639z9rmss5by1JE7o21N+ah2VrTsq2MkWq4989z3jPo-IbFwl62Zh6tx+Ol9O3HPfuJ7Q2T1rAeUfgBwUH3mivnehZd5jJWKucbm6zztKOXsxbW1jmk1TbP4-s2+ojMnXNS41OYrzhWzvjYC+p+JiTknzAe0jtn2uOe66vaYRJVXNANDuUbidXXdtOf22yghTvAXqTl7bsb6nleTbrU7pJg0RCI7PVroz0WE3c9kZhypDRKXB6Fz9onEfi3LsBaFKnqnfMlaT9DkryzVloBZ+77PUWGve+a+SgPxrS8E9N3t8377LeAvxHX8HiuEVN-pyxxnyTahcY9znnvee9fCeiEZFkAQ34ABNUH8CYbLqK240juVaMsNgfhb-378FJYuz+hgOWpNELIHHgBMObMcVAZGIB6BKwQBSg-A8F9ElBLECF8AABLSAbgKwUYVADqT+CBRAKocxOKVCbIeBUjS4VAXAAABzy0NGaEQTIHIMoLIGCBfxSFQEOHQDaHlgrBIGiAchlDMA4UfW8EICQFAHUGwDgMIAsiigaCqA6nJCqEIKoMoN4FQErjv0UIf1oJUMKDYJSDOACFaw4AVRQGtwaD3hEC4GbGCBEG8CSDJRAFoEpVAAPwITwVCziEQQITYAPwYBICwXQEfyAUgWgQxEgCvzlDzH4FsCf1zG0goMiMoIkNoKqFwCrFwEYN3E-kBUeGbBQCMOACSAcm4ObAsQIVsCQBHW5EQUIPhAv1SG3BkMiMkCqBvyUMULCNUOaKlGQETnkmiA0HEWACyEgAKHoBQAKFgGAH4A0Gox8GALUhoAYEYCwTIEIIsDiFQWEVMEQMgGQMATQIQAwKwN2lSFwKaMTAIOIPgncmqPIJoJaJAAUAYKYI2kIFYOSVBEgCSFck81MFcmsLMGWCYVwDcM4ERQEDiFmNkGwG8K2KUmlSJiqDIGkHClKG4HQFMGWH-VSACPxG5GCNCPggiPOJiJfziISKSJLBSIcAlGACcGkG8DgCAK4GmKYDmIWMwCWPgWEW4G4Ffg2I5B8PQMwKPGwLSAOPwKIJILJDOKiJqKuIgBuOJMhkeMGlBF9xiA0HsHRSsJsLsIcKECcJcLcPoA8NBIoHAWAS4nRJSGgCxMOJxFxIlMQXxOf0JMrESLuLGFJOEhQALBQHLlMCMjcBgF4G8BcCsH2W8iQRwUkUcPoFiCgXOHWI6nkM8h8j8gCntP4B3QqAaEOF4BTlzBcCqE4HON4ClJABcDzFkCpkSK6AcDggcg0HKFMC5C+ORN+P+MBJsRBPiWNO5BjOGBhLhIRKRJROyDNKCJCKtJRFMBtJkPtOhknPiKdNlLdOygpOABcG8CkkRWPnYJ5kgDKPpmAAP1RRuA6J+DiFdzwQP1LE8H4CLO5HnnqE8EIFvLlHaPgDiCsDeXoEwHgVYIoCtOvPXkNDsjaPgHoG4EwEgD+PMSrJECbFGD3OMl8BPKUjPM8AvNLCeFHjmHvPgjklfIgHfM-O-Nfj-P2H4EAtsmgHklAvAsgoP3MXUmoIqF3PhDmAP0uLZGQqgFQvQqQGIDlBwqKEfJMEmHwpAEIv2W-O7AAF4gA`);
                U12[`grappleMapStrings`][`push`](`2,Grapple Gears 2,The 9th Doctor,70521,ILDmJAhZIawhjrAJwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC9yARc4d0gJQHsAWgGVgAVmqFQoXoRQArSSgCeIStz5DREqTLmK5q4KwxRKAZhiJwAaRD9gAYRBoQAVStOQ8SOGQQ8SBwQYIwAZ0Q1SABGABZI4Dw0eEj2YAB1AEUEnMjITLQAGQToagBTBMpIMRy8HBTcxuA3SAB6bMjMwmKmyIBZSAAHXsamYDoIkamEYIBDDsQqwVq0RwWINLo6BMLWlnl2ADVIAEtSADcAJgh8wgaEaCyEgbx7gMJCBMdW6NIMOmEAFdqJQABZ4CAtYYJLr+BBpDBjfqQUHgSLnADUsFBGOivEohV4aOAc3WECWOQKa1S422qT2B2OZyuNy6byg43UkSqrwSeA+OVaADZhGgAOyHSiZAAun0hQ0p9RKwERzxRxIQAAUUIIGIRKAAnAB2vHIphAYxsGogA2W00ilutUTt9oQYy2rum7rpnt6wVB0sqbTJvs9a0cDldtqaayVNImz3EMcycaQ40miD6Sca7E1rVDjTwlFmuRwYUg5xDiXY8RpGAA8omMSs5Yg0occgNlBDInVAQk0tQ7MjQFWkhgnZsMwgBuYuL3CCWadRO3BanIBxkq1VK3zUw8VSc1aiYZhJ8BBJHFpA53zusrqB5kSfOmgAHLnhhO4BVZTzxB1EuaYNmqSKvnCGzAJq347mONbKgARgADGqjYwhuNJPMiu69vukQsK0PYFr6LDAF+iYoXy7BVmkb6dsAlG4bWaZ0WqFQwtRm6sdykDsb2nF5GRMEMZSAksTk6iMYgKbMfCwDcdefEAWJB4KTOvGiVWEAEURiCaliOJ4gSRLEcApHkf0IlUTR8n0VJCB1LJNy2WxmlcRJGnWcqFmLFZnQqc5ankn50k4E5IC0R5SkOQFHJBSAAzRRAmSxQgsCQAwummYg6WZFp2U6dlvlPjkCHAMhapcguNl0FVCBVOyID8hBHIVcidUIF0KDKm4PrqThoWtgkhUJPp2K4vihLfva5nflm9kBKlkUUbUYXKvFwCJW5NIbVUSVNal0A+fVIWdYdLncqdyVrTtUW1OdG1bRx+XALlL3Eelo5FQk6Uvt9aWQC6-3aYRwNTLNK1ebdkNMetq77cAKU2btnn8VWR3CQtIBI3DlRXdjN1thdin3ejxPqQjOO5CNkRjYZk0mcREOWVj1bI3Zq3hVYj2o9JS3k+SvMxWTx3BazVPiXj4uE3JKMI3gD3w9tOTpZlYMQG96sgDTWs5Mzmb42z7kwwBMuBUrz3Gzx8vnaLaiGxLqkSQ7ZsRQLUQ22TPOU6lINZRAdMTcZ03TPrM6Gwr7Mmw5rvcxb-lR9bpPeZjytO1Lipc8tSdQ5LyI+y9qv+996UnMXRW-SHpk67r+FCdHi2JwbrOObj+dp5BcvJ4Jds-g7isZzCsfZyTufp+3lvU6Do0GUHU3V-XLPd0Tj0R7H0Dex3btd2Pzm95JW9x4PnTD+7P5C43beZhf2O+94GXl9lmtazXtcIGHNoR-zq8t+vZ9PQnK2o80Yp2PnzL2ztpZZzPntZe49r4F0aK-EAgcjLzyZovZucDO4cz3FzDe8dwFAPqjfI2PdU6Tzzr5KBxDBaeyvhTQ+GsH662furZBb8zKYPDi3b+uDYaCU3pQ2Wd1d4cn3v3CBYDOqnx3iAwRhCzovQ4aghmVcRgfwSl-JuPDOYMJtKQx2OCgz0PIdI5KA9Lo0OhjneRVDGHCMiEXVh+R3oFjYWDFoA1OqEF7o0AYYFfRjHIHNQGxE+itAABy+jqI1R4+U+h4EcNA9IQFw79j3H9SCLUEqQA9L2RGm5DglROh1AIOAOyCRyZtPJfVkrJM3OkIawUMm4SwE6aA1TbRXk6oUmkDAsyWTKU1HApEaRdMBj0xAYxghqiBp6YJ6i9yNRnFEnI7BWiDHIAAM2lG4XgjgkJ0DqK4GkmoElJJSWkz+rTTZZLdhM-JAE+lE2KXjYZiQKnKkeXU7GDTMLNPtrcmO7SqmrkvDCF5ckBmJg+XUMZRMJkQpyDMmJeEHTABCUGeZUY1mehTHErcuREn-KJqkxMwLyn3O4J4ZETyHJQsgm8y6cKvlgrVPS+pKTAV90pSM0FaYkVTOxoyt2MKhmrQRXJIVuRUXYuImMHmgSFlnyKmMHoyJlWumCMIbc4xaiUGcDSesVZdhiB2Xsg5RyIDhkfqZNY51dUFltcqJ1oZ8hSmVFqqIeVXTfAxKKCUUpZQQF4OsHA5htkYlaDG2NMbonADQK0c4ca41RtTbG6JmoAAqSFuq9MgNQcwyaM0xqgK0MUpbWjFpTaW7gebzkIHnAwXgFaq09nTaWlAbbS0QhQDmqSaRgDREOAhLAYhQQIXSIcWA5AcBvn4IwSApBO0ZoTUm2tGbV2puicQOgmRzgHh-HQFglBAR9AYCWutMAe0ZprVW+t-b1geEgIQPoxBCjyDfLe1NHbo1dp-XGvtA6EByl4PIPowhYjKG3XG9dV6t3-rXVBXN+aoAQkoCe8g57L2btTeWytpb711vYA29Yfg33KE-UwQDsa-1Vu7YRjNwHc1uhAOBvoJxYgsFg5mlwCHU28fjShvNCBHDgHYLIFASEhN4o3VW2T0Ts1uGiApRwEJJNyBk0hnd-G8Npp03B4AynVNyXkocdIYhAR0HSL8QQjhIDZtmIQfAuoBNxoI1W4jGbH2NuQChI4hxARjpwNKQQWRQBuEuKCUERBDi0ZjfRgDTHf2oBA4UtCI6x0TqnTOudC6l0rsM3xxN7nY2KeMMINwpB7bsA01J7TVb4P6fK8V4TJmFJcjQJkS4KBLi6hCdm+T162gpbjd5-DjhqtMGyJ09QkAkJvnONQLAhw-w4Bo2NujIBZOMfbcAUgTAqsitEMAQ47AELmEEH8I0ZWy03q2zGibHnSNPqsJALMgXgu4DCxFqLMW4sJenrtoHEJlB9HkPObIT4svjsndO2d87F0MGXRV0rLWY0VYh+QIw6gcDZDfBZqzNm7MOacy5vAbmMf5ge15u7+ZODg78DAbYX2Qu-cyJF6LsXCDxce8DtrrQ9u9rS6xwpDAQDEHJ-US7E46C9f68wUHO3BfC+Ywdo7T5sh0lhzlhH+Xkeo8F81hTxvjMqdYuoQgBOifWds6QezjnnOudww+2nRH6e+YWJABwbOfvhc5-9nnfP9vABB-zljlFshlWHaOuHuXEcFZR0VprenTep4Hfm9QpzCeWbt6Tp3FOqdu9G3T6nXv3sBcOEF9nAeucA958rsPqvlfg8hyK9iuv4d5aR4VtHw3EOp+x7jxNEJc-E-t476XlPXcjaB892N3Acd9GZ0av3oW69B8BxHlXDHlf9rFyAUEIAu8J4N33s36P0+luicP+2WLx-54d2T53M-Pfu7vZ7xnK+rCOE+9X77DfP7bnbfUPcPfbNvKHV6E-OPPXHvJPI3VPK-UtCrPdA9N0G3PPEnZ-QvF3d-UvD3cvV7PzJwVnAA2vYAhvEPEXZvPfHfSAkVI0GA7LbvRPQ3FPG-NPFAs3O-PuYcR-bAqfV-YvOffnBfMtb-VfeAdfDnevYPJvcAkXA-KPYAAAR2YPj31172T373pyx0hxHxsDH1t0EJfyL1nx8w-1TXEIZ2X1Xw03IP90oPkJ31oOSwgOxxFUDFjxYLP20MQM4OQMH04MzwQEKHAAEMnzMLwPLysPGy-zsN-2iRkM3xAMb1cMUPVwYMKR7FPy0IQI4OQyCMEx4IMPtj6EwInwL2nxEMsIIM-yILIw2C4BSOcNAJoMyNS2UPfhAEGEoEu14DYEoCWxWzW10Opwq01xqz7lYj6GzQc1gEu052cxQDCAQjkEjUvwHxKNTymPtjfGyEKHmLgCWNABWLCF1G-QyJbx30O2O0KWuGAGlD6HIEIF4GWwc0GGyxu3wPn090oFU2zVm24FMB4HeIwAWNOPOPWJQE2KQO2IM12Kq2mPUDQkJzkDwFePeOoAc34AQkuDIAwBsM80IIfSm0O2BPYGkMOHBMhPMGWLz11E2zAJuPbUgDfGUxUKFEl2ECxI+J93xOIDWPMGoAUNZJFzuK12ADFBAGlF5LeP5LxIJL+GJLiNjWJPJJmysDqycGiBCUEC01eNIG+zGK2L0LNw63tkbUiOqOEIsPwzVKe3+MBMpPiFaMDzSOoPVzcIzTV1-XZM5JFRpzyPgPYPGOv2Q1CL7g6BtJwJqPtI80dOrWdI5OBMoHUHdLkPaO9M6KA1Fyj0gCNRDLYIv3hPNNT0tOjOMKwKiNwLf1iPqOsK-yaOgE9UzK33SJZLoP226MKWHFGRAEOAYBsyFIwDtQVhWRzFaBDl2HLm1D6BYAXKXMXM4VXNdGQDKWyEGWSi8EKV8BJBAFMCNTGA3OyAlxJANBPz6EYCC3l1BD+BOA+3C0ECQiSEJSgzBgrBp0EgxEICNDtXtH9UECwGAtAoFTXMQG+FBDQANFBF4CFFiDcDKCLBFSPTpAhCzA+wPLOxZxABhXYEoGxLQBXyYEfIuyuz+CrhTDQ2mA2RDg2UGBAqYuAtmHnMXPYqXIgq4qaA3JyEbHYCzHEyghAAiEoHAACw8A-GAEsHYHABNWAG5PYAiE1CgDHKcEyFgHNHVlaC5ggGFDArAvkFaGzWXOXO4vMspCsEyCqERi5GyDQhwEvKCDQHCxwD-DePoF62UEYF4C+MuFiFABMuqHXGEG-FaEuCYAGDQBYEIDoHCKaAQmnk6E1FBEGATSKjzGYuYuFS4s1FiHgsQrKEBBwDQHLHtjxgW0TXAG2V3IyFErcFoEYH1N53kEuyYFBEkAuAQkfMSUICFHPBXE-JTRyGgF-P-O+iAqyuAqWV1igpgrgoQqQpQtFRFXIGyCPD-02lm1mAhHrGzRc2iDHQXQG0iywFICNFmDQF4GADKG3EgHiuBkIDxW5BrFmBqu+g2TECmqwGuW4vYAxEoCKpKtgt4BlOBN8n3PgCm2MHACYKEpsG2ohF4F4EuEOFi0fNgHCyW2wBwCQlmHSBQEBDnTGFurVFgByu1BOGzWAF4EiWICwFJRyCevSsWFeveqKjNW+t+q4sKABqBvmtBr3JGpAHUMcAiB6G8McpgBKtcvct4E8pUB8r8oCrcHSkBByqSDcU9ESvLkyBSrSv+kyoMpApyogryoKqQuKtKt4rxgaUKAhA02bUGVU0GBfOaHXG5qaDotyAYq5rYtMpXIsqDo5HPlsugGyC4C5EbQZ3iDykLJ-CzGusxX5GhDTHmE9CSD8Q9XDoQEOGzSIAjQQnLDLnQknOJRiF0uaHDrqhwDcHMBRGoEuBlMOByqqFTtouAHKFLDDoeEODfDwEYGoEBAVnwWAHTtdEzummzqhTzoLvMAQngGbFLs9AGDiFyBaFspmDrobsuBqBbqDHbqmEHARgPOsrhEgD7oHoYCHq6A1QPHHvtEnpGrPpnvzpc3nvSlUKrDZBXorvXurq3vro6v8tA3KuDuIjaGet6A+XAemEoGEymBgdgZGBwAQZGCQeQaaCeqgaaAwcwdyCTRwcaDwfwYSHIDQcaCAA`);
                U12[`grappleMapStrings`][`push`](`2,Grapple Gears,The 9th Doctor,63418,ILDmJAhZIawhjrAIwAkDGBbAYgdwwHEAPAGwEkBRAE1IE0ANAKQC8QBWAVQENDPQA8gwBKAeyrCAbnQDMUjOGRde-IWInS5khcADCGGRAAKuycACKCcsAAiIa8Awg8wSiDeRwORKEi6Q3qAALOCIlJAAWojRMdAARgAMMcnRkOaE8KnATCm5efkgnJAADsnmupYFVdXe1IbR4ShB1VDAiS1I5uQCDgjQAOqVLXiEAJwdiEUyTtHmaAyh1QCykJJDEzkMSRMF3nH+DcDbOydQXT1ZAGbH1XhULidFUTHl66cbwAvvuZuL39HeAAWABcYuEAPRvf4FNKEPB-VoAOWhiHBADYAMpoADsADVKOZgYQEJxgJlZhkUR09gcwkcqSAbOD2ORLsDOMJdAk6BBYfCssiGchgaQAByXFhLQEJRawSC45oMiBFADOvQQ5hsUKVyRpYPpDKZLLZHK5PJAFRwXx1FUo4x1MHMlHJfWAaGSKxYpOiI350XBAGosXiCUSSWlta8YnYMABHGIrSQIkCScEAFWIxRVdCCCRsoogtXqdJdVTsuPeaWdsTdyXCXpivuTwEDwfxhOJEDll210LlAFMHYVIGqXlqh3k9YcbtCmcVWezOdzeek-a7BQzWzj22HlSP1RBNb3TpYADIRS5oUUscjUXo5XGDh05NMzqneThuQ6lw9oADSyZ2HEiqIEyCSitwcSEAIyLghAlr2ja5g4CBSp8sm0AbhOySqgeIBHkqRgBrAgIBigwiUKewiLFOdJvt8RoLqay5nHCGHAFh0LCmKEpSjKXbyqhDJykYx7fN2YnvAOE64WOklDrRCBuPR7xzkxS7mo6bECjqW4hh24ajrM44MmeF5Xjed4QA+T46i+Kn-N4GLam4Mw+mgiJQvEtIIIxJoaSuODIEg2QepAACeogvIQAbJOCoxGIQWDEAAVil5hGA8wBFDkLyQFlroYCgYL7jERjgiRZEUVRNHZV+JZlP+7HATEp7guBkHQbBK5oNQBWtLlHTIfJuRFAIZRpNGwBGM2KwAJZ4dNFWkeRlHUdZwACNqKx-tqeD4M2G2cRAO17QdPybSNiD7WuMQ5MdBQ3YdIA5FtJW7Y250pPddaQB9PpfbqwDOfqACuZQ4J2oGfD5EB+YuZpw+V2F1iqkBYIt+3anYdB-gmkB0M2N1TQwYWaddhDBb52X9SAKywFFANQ9T3DjdEKwYkTJBTbi3qICseD1RqVpTRgVMQOEGK08AIwAEw1pw5MnZAsZK-hODutEdgRLFDSQGme2EIi7G4oz-OeNLyFmFrwD9AWeugETOBzTWERC8ruLNuknM2xWKQ2MjNa6G2obMzslBoxjn3Y8AuP44Tn3S3YpPx8kIzi4yNP4wzn1h5nrP4z7Prc77fMIAL7vqyn0NiyVUuNoQ8tZIr+Oqy8GtTTrJUGw3xtZKb+OgJbODW9DdslY7n0u1kbv4570VF9TfuxD5Ni4rioNxLgwIRIMoCcLLgKAkQuLgti4IX5fF8PJcAZX1foxn-fl94JAgJ0P0QvICguJb+wgJxH6LiWA5AcCIlEIwSApBb7PwvvbNA4JUywJgbAgsxA6AZ3AIiXE-R2Cgw-igUgERdD614PgCIDBEGwLgjAJ+sCZBUNgcAJY-QLD81sOvTe29d7mH3ofY+hBT7n1gTfO+sDH7COfq-d+n8lIgB-n-ABQCQFgIgQwKBKDn7wMYc-TR98CwfxwICPolhsG4Pwf0QhxDSGEHIZQpBz8oB0Ofgwhx99gC2PfusHka8N5bxwDvPeB8j4n2cffUR1CJHULwDYHAoB3aawUVgf+gDgGgPAZA6BYitEgAQW4q+eir4Fk4LiHAwh3B6BAGYvBBCiEkLTGQvAFCdHuNoZI++rjqEgFgMCSw9V4C+K4QEnhfCQmCLCVfCJ4iJkv1ifExAeNUC-2SUotJqjMmFMvto-Jl9NlwNjv0IxFTdAuGqRYqx9TGnNJ2RfJx7Sr6dKYZAREuhl7OA4X47hQT+GhPuS-EAez4ozOvsAUgTAMTelMfI5ZKTlHpLURo7J+jcktIKUiop2VSnlNcLYLBOCamWLqTYuxqLL53OoY8xxLC2EIALIM-xgTeHBIEUI6JAL0WXyiSIyAwgSlfksJUJJsK1kZPUVk6h2zqGAuKViipBIOL4vOUShptimn2K6W0ilpLbk4DKZwSw0BIDWHpV8plPzxl-JBcAQFXKpFzPqpYNM0LFGpJUaKxFEqUU3PBNK4A6DgpuG8Aq8xtTrEqpJd68l9DtVwWpZUQ1pITXDO+WM1lIj2WROBeCaRH9+W2xAMUBIcRDCgCgriLA1B-DEF9W6GNvrDHGJxfgYAf5qBjDuCQIhAA7XhSwu0xqjS4gdni6AGpgOAGwWgMAkOBNwfowhYBQX4NgXEKVqB5I1ZALNlL3EjrHXAPQU6SHhTndQUQla-U1o3cgjl+yG0VMIHikNhKw1XPVUwzV0bI1xr6CqD5QzGWjJZVmqZz9bXhLfrm-CjhnUrNdfCjZt7wSSpvZ6kpZSKloFMYq0NlzVXXM3dugdureX7uaEmwDzLflsutUh8DkyeV8ug5cWDwq3UIvFagr1UqkMyowzihwZzcPErVQOz9Q7I0kf1TAPQbgKMjKoxamjNqQOQdkWw6ewIi0luwKQLt3AsOgD7WJrdlrwQ7qvh4oxo6ZO6CWP+hlCnzVpqkRm6ZZmYlxPdpkIVqz2OIc9bW719bDmNrcEwbDz6LkiYIx+0zWrJN6rHboHxnDHMpuAx5tzYHVO8vxNBrtrG-MIbFVeutvHMX8bcIsoTL68MRsI2ZizZKpPJYGWl01QHqPpto5mjzjH8tsPjEsl1cL1mlYq0Fnjnr704r-KcnDdWYvvsceJjpA6f3wRcPJjL3XXO9fc9EtTebQQjbg2N91nGclTdQ1x9D2K3CnifQS6L4bRORrWw84jSXbN0o68ms1qaQPZfvvRl+A280PF8-B8bHquM3d0RV+7FSliRZe8qt9JmiOJdIzJmwxr-uUec8Dg7OX+syLzWwP1Kpi20AwHNEcu8IgJHILEknKnydQbYdsYgNOZB04ZyqJnLObBMHZ3R1TFPoPFVQHzgXEVT3nqrWV4LFXZtuD7oiKCowZAUPIKAXT+nDPGY+-Fr9XS9146cJQfoxBJDUFlricK5BCAoGKBEQgwghcYgirvRECQVfTa4+rzaVTFuvcx6b7HFuUDAjiGOmw7XPkA660pnrHOjtx-6NsSwaIisw8u4H27OSQ8CAW1FjH+GVutLNxJmPceE-bcJ05oHWXSeg8l1zyw9pocXY40XxHnrAGx4qTNYN6PX1V6x014d1mE9-eT0T1vymJec-U+YYKveRX98m9ewfwfQsVPMGjpVk+Gtxej0wy3yBQgMHs5ATgEQaey1GOFIcRFciphSO1SUv+liSmlhRiANyDzVdGympjYUmgcBwEyFGCWGF1AXkHqSIFIE3i7UKwiGLHLhKBtGQzrBsCCG4BYxRDagcmANagDE4H7FBg1gACdARhBsRIDDgDhOwop8oOIQACwvxykH8QA789BYAmB35ZZgQu1sBRgUAt4roJhwQhJUQ0QIgsAlCVCsAUp0x-9NDf9yCdD8gx0yhmEAgqdAQbBi0IhSBdNQYIhACGJwRno5xlDHClDuAjA4C-8-9dDPCawcUEwYAeRm0ohdBrBOw2BxxPJgB5YbAnADVkAYCYBIAMRFdK0H9i0wBOAZASg-52B0g+obZuAZDqgv8awAxCAu0bDZDEIvDv9SA0B6DhA0QggqDBZoMwDwBH02gYAXAsNgBBxIACwHBG04jgA4CEDKA7dqBwp9YUC0CMCsCJYcClRdA8CwQCCiCqQwIqjcgbBKDqC6CGCmD9C5EDgUo9BLAItgAsA9AnBFlShdBGZBhXAcAmB3dD4WcyltBkDCBUC4gu1SBgBMCSpShFjliGhVjiDoRSDNiUhTwdiaDaj9jmC6QDhaC9AXBTxLBwZdACx7M-VbAHABDUBER3dyjTgmR7DwRignDHCXC3CtDNCoSqjkBK57BcVLpgA88bA-0jAQBxgCDpoXByARhrRXQ3o0InRoB1hcQ0wiAcAZA4g0YewxwfxoQigLAhYcB0i34HcmDOA-1Dh2AHRvBxS+hcREQ8BGBqBQYYllToBRShRjTJTpTbE5T4ADSlSHRVSnQEANSMjAQHcDTdT9Q3SlQjTwgTSzSLTQZkJKjeQ2SxSwzHSZSXSoF5CLBE8PSJT1TNS-TZZUIvxmSGTqgt0QT8gCzCyChKB9kqgyzyzJwqyKzaydhCB6zcggA`);
                U12[`grappleMapStrings`][`push`](`2,Blu,Blubsquid,92387,ILD2JAhZIawhiQEVgBFkFsAeBGEANgMIBGAEgGoCWAxgMwBiuAhgOqoQBKiA5jIaUq1GLdiAB2AOQDuIBqAAs0gKIIiIWWhBkQfaMADSIAM4pg64AE1zqLcACqESOLnAAZgAYkwZUTI1vQKCEABkAegBWAEk3ABd7TiIPayhkAHEATm9oBkCAWWc+JGkGLO8wgGoAZTIAdgplZFi0hHtIOgCkZEgORGgALQVvArde4MDcki8kVUdvdIBTbOAADWnENEiY+MTkp2QyABNZPuBc4ecUxGRS8fG2jvm0kO8tfoAmb2VIAAc74NyhzoX0gVBO1zShyKCC0zDG-wQPUyy36AA4LthoQgSmUkJUavVGs1WpAAG7wlBpNzLGhXBDfUbeAAKYVgAAsKrhOMoQpxobkeGksSBfAApQLIKI8IYIkDhaJxBJJK49BgvJDQELCkB5YAAV1lCHxdQaTRaEDaVXBCGQRBlpy1hpALPZnO5vP5DlMM31TvQwEdftSauWgcNtvtQfgS280jty2Q3qC0Yl8Y1wET4xT8zTGwzScC2eKuZh+azwBjXR5rwD2sQReu1fTYcLFcCKnVDrrCAb2KbeZb3nsRHF8zIkHApyoaG1BTZuqDZ2Agu1qngsaO1v+mwVO2V+yix3To6d0jIK27-2H-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-HXMD2sxOlzhnVB5Ec6Z-zBmkV5B0zakLtmwt718wl197LB0ltUJICAwX0visy+jSQkW-POfFQwDwkBuCBskPF31SnyuVeq9l1L9WbMKoq1V9G613Nqc82izrzWfHSac-17Fg3ut1dE-p9lE3A3JVa9N+lc3VAlt66NhrHWmvo00iNqLZWttdcDUyKbZm40reAEyRbZ27UXd6HltDjWjuqGQCVtLj3DtDeQKd6Ls3tuBpQXt0rY3ZIXeq+t-bIP0Rg7e21xLn30Y8Qe2Jv7z3gCcGu79p7Q3a5A-eyj7H6M3YQ+B5tgb-3VBVB+wd8naOGbI5m4TwNM88dw-ywj5nsOlvnYp5A6nUOzi85opjmn43edcwZ8t8XXObs+ou-YfnZOxdo-sCLgXF2KC5d7bL1HQ2KAy6xxz1QFBFftdp3rtXSvQe89YFrw96ubcG9F9btHrBTfw-N+jVgluzfK6G7Y1n3Pbu85WE7h3aOeEk-x4zo3qwfce79+jK4kuedo8sGHq30PeeWHd+zz3gbLDx7z4nwN9cU-B7R-0DPvuXdDf6Lnj7+fVB2EgDQZ2-kmSAKCEhIIYQPAAC88iD+H3kdvMTx8xLed8DM0+0BD3wGgaw6Uhh4OSnwWo6BZC7cAWgdEqBIDQGUEnFBkAa2OD5JAHQyg+C40gEYZQpgZ6QBy8oIYwvvIMFmDwfKZxUD68gLbgwAELbpAKLPIPotIK3oLqsN-tSOaOnqCAcrqKLJAAQAcikCsEPBPmZGEJeJsD8JgP0IQcQcwEyBkEPhQSPtgdQTQfwD4MgtPqgIsmCv6BmARrIPAEQI4EJjAG3rQYxF3gjBUMQUQaIaAH3iPiPmPvwTIcEFPgwfoPvqgOaAEBYJAMwJoFUPYAQOopFJ3sEJ3iISIeIQPpQZQYJLIZYYaG8qcARmcLINSGcGurIWEN1CXAAGyiFGEsRhA0RmHD495WFBH-D74z4MG6CSYwApCsDeiwAEC25BDQA8CFqpJID6FBCGFeFiESH+Gj7BCBHBFWE2GAx2HmhUByDOEMC6H+jJGpGIDpFCFGHZGmGSF5EZE2SFGWHFHEylGoBshyD94igsQHDAbpj9AswcSCHMjCFZGEEmGtGD7SGdGyHyFhEwDgDqhrpEDgBSbgBEDwAOa+hEDogLjYDoBJwGrqiaCoDrRPIgC1yQC6jnDcCQCOB5HTAMDOHjDqRoDVEyRuE4qeFNGYA+F+ELHjBfLLEyGhHICME2F4SfEgCiiijE7UGbB4FhAEGzGkHkELHJSQlQnLH6BJpELmAwCmCLLqFLFBgNHTHAn9DzG5H94WGEnLGrGwn6BJxfrMqIn3hEC-FZQAlhBAmzGglMnBBEAEmsnYEwlwlmAxgzwfwxKwgdy5Ackz4wAUAyCWArCHB6jpBeL+iokT49Bwn6AUA0Q0Cmx0AkDGB9xYEoCzKlSQDVFtBrGoAMD2B0CQBsiHDvCQxKmRQqkBTumqCQBanSA6l6lIAAC8MZQAA`);
                U12[`grappleMapStrings`][`push`](`1,Bad Platform,RoctorDush,-1,ILD2JAhZIawhiQEVgFlkFsBisCS2kAzgJoAaASpgEYDMAUgC4gAOAytQEwByADHfQCiAEzLdwSSQgCqjAGyoE0MCADuwAMIhBCYSGzAAdgC8A5kkEaAZgHkp9h44QbkAcQrnE0AFqKnkl3dPBAARYF9-KUhkAAlpSWhhV0iUyNg4KTd41MR0+ElVV2yciGlIAEZMmL8S2oh6cOS6xwbvZqcGg3aHAz1JHRrIsIAZYJLo6oTgHRLkDQAWdrKACzGIZBDFpGgANQluyQMSEn7gAGopVWwAQwOo2MGoYAAFNbv-Ysk5x5hgEgBLd5INAAegAHFIdGx6EQbGDOGcAKYAVzceEkYXR9hCyEg6hyaHQmWUSDCYUkhJ+EFBEIxIIA7PTuABWYSgCgAdRYaKmWKkOLxJUJhK+JMQZKklJ6Dh0+SQhTwbzuIWeIKi03mqnKyBILGoAE4iJBAQUtA5eMAAMYlCWnKnqfHi6YOFVqqQg-UAG0tJDYyOEgmWYONmTN9gt1pytoswHtwEdoWd9miGgTEGgM2BGjQfIQqkFzXiRGJ-OAACswwgdJG6gZM4gdMWCngAG77IEwXHq4aS7McjsIeAAD0ueFUSsi8QtotLFYH1PBtVUeGRWyjc1qUtFPzC9YQhM+wMXp3oeCsjGkFA0vBIy4AnrmUjjKykt0hcTuk8DgIelNOIFYZwgsBIHAbSMQgi2oGgYB0EgRCIQUEQEgzIosFwceEFQRh6FwRCwy8NwiLaCAni4dB4GQRhILkaB+GEcRSb4rR8EgFh1EsWBwAEURJEkpxmFUThQEYRClh4COzrRCAAmUdhcGydMGgSXxZEiXhbFCQp6kUUpKlScxOl0Zp8nQYpPGMToYaKcA7HCdRELYBosByCRLgyUZrG2VpZmeVxNjzNcTQgBoakOSZHF+YuAVBc4hnhd5pkwVFEIxcFwDksANl2dp4VpaEaEpRF9micA+UQCEYWlYlkV5YFTQ6CE8XVTlvnhSCzLlGwJGZtlPnJe1zJDt1zqCIVCWtQNpUdYwI06IIVUaTVJUaTNc3TM1S2TSBilrSRXRZUVy25dNzKzft40tf1O1FeV+iLbpx1taVd3ANgm2PdtwGKa9wV9UlN11bFECuJdW3Xd9t31SRrgPcZT1TatZ3ra4H3w19NFFXtzoxABR0Y7tyMkfGMCWuoADS0iuEOyxJN4LaWpgvCmGgabvCEIIThlIIsJg3h8wL1zPPqaDGKL4ti-OUtAsogjQMgcuxrZiCoGahLKF0JzAByquesQ5BUAIjB4CEe5AiCa6SCCcj87bAtliCAAqEsS9LbsHKg8uKwrGXmLjwDmO55MgMW5LcCAixNUrkDzeYjudiAOuaHrpCUDQDDGyEDRzh2Ft1Do-7u0Xdye7G3tWSAOwwCc71-DA8Cw8A1AwOoBaXLgUtYoM2DSLQkC05wzIvEqaCQG085hD7oTYNwqjkMIyJ4BoyxlnQkDMpTkB2AUHfzl2gyO73-fCJw8ymOTrjcAzMSwCwS8r2vG9lBySpXHKHZlErCDXEfA9nxfV9LQ3zvsvVefcN7dVACQTg+pVCIjYIYYeFIx5S3JIrdMOxZ7z2RKoQQlsKraypO0ZQ8sEBDkdpaVw2BaDUEBFAmBcCEHAD2Mg8eA4ujoO0OULBZAF73zAevcmkDoGwPge-ZQIpaioFgMsM45QKCCGGBQZYkBPT6mEDeO4Pgfg6AuPYYYwE2YWAALxAA`);
                U12[`grappleMapStrings`][`push`](`1,Spinnies,GayfishDeluxe,-1,ILD2JAhZIawhiQEVgEkCqBmSAHARgLYCsuAWgBoCywAIhgCYAWApgOpm4DGATEwKJk2ADwCMLAOIYIAJwBuEAMKQA5kloA5AFYUk-YIrX7gNYGuhKQi5NaQxgGAM52XSa7fUPnrnwZuokaCdfH3cAxFovENcwuyDvaLd-O0jgxKSPRHj0jPCEVISckDREAAkAejly6prqqHKAdlrarErmmuAAaXxkAEM1CGMKqvby+qbR1pH24AApUtgABkQS4GHRsZhGjamNudolxFN10fGdttPuvoGUEBOZrYn23cue-oRpNYuHyG3J7+a+0OCAAmncAbUzv9poDZgdlgguOCYZDHucUR0ru8IAE2KhFAAbSCOEEUABKhHwWFmABc0LQADLAEGFCBUSCzIogcoAFh85QAHC59MYuWLxRKiqhoMh+DLjDdgMY8UqAGrE0kUqm0+loFSdCQaORcBa4ZASJmeADKeUSAAUANQ+O2bQL2SUez1ekDGWXyiyrNSRYAAMXgkCYyHwEhDizIhAAnABPfBW4BJtCKJhaKmQYidNOgEE8BMAdxYVoJwHwCMQcrIYt5-KFdhF3vbHZy0uAfp7CqVIE+KsgolVAFciCGaUIACrV2sIeuNvmuQXCgedzdbpDd3uykBqCQgJGKOUElfbuwYeUIUDYCMMHg8-WG42mzPZ3P5wvFssV2AvkaJqwLgH45jg+ZcJA56Xi4159ggcj3kwj7PgaQHvlm4F5gWYC-uWVoAehb4gWBX64UWJYEVWDAhrBdh0b2EAaASGilqSDBjmREEUfh-6ASRoFYeRP5UfxxHAUJn48VBiyfPRHw3hAIbIY+xDVoodjsg2m6MXKCAsWxHFccJPGiX+hECZJ3E4eZBFEa+1mmThUGOKsiClmGW7wfuymqTw6lpEckA6Z2ekWFAqpGRQnGeZaETACqnaQHuCCqjOXAxlg+CKgEtrpNAZISqK4q0NUpYhL64qFcVHoVOUFW+FVYo1eKJVigy5WVbcLXAEVbUei6DWVQAvEAA`);
                U12[`grappleMapStrings`][`push`](`1,Rotam,V3NOM13,-1,ILD2JAhZIawhiQEVgDECqBbAnABgE0B1PGARgIC8AVWHAOQFlrGIB2ABwgGE0BzJABFBANyJIAosG4DBIAJIoIkAMYgM3AGYB5JMGQApABwAWPeYuXzaYADtKAxBMhFHV9xEEB6DvM0AXDAAlbkJlQ1MkaAA1cElIAEsAdw9ELwA2AGUACTZoiWR-AHEEWESU1MqQMqw3Ko94AGpzZCKuetLgZr0kto7O7qroAEN4SyaOuVGrCb1WgGk9OQIAZxmu817FoWBV9cHEBb1oPfGNnqLtxBO1s7GqqfvzeCeEVvb+4BeOkdekb4uH36AKQRyiu1uFhBh0uSwh6z+IC2x3hd02sJ2pwsGEgAC0WtxUDtYp93DYiESnF8WmhhqSrAANRDZLwiLzsjnsqBeNiczkAZlZfI50mQZAwqGgwCkwBZbOFXm5vIVgvlwuAggAHioAFaShQgOUKxUwHnG1XGjX+ABGepgIFYsqFCqV5ud6sEZF1+v0hvdfNdKv9nNF4p9GD9aoDpuVwotLrQmTISQqIAIkctMbdUZDibwKYQaidOZFWaDJa5eYLEEcRpdZbjwZFVdT1OLmcgZvLlpbCDidfVDb58fVvYgtwH0c7seHTcrmXzrYqk5DQ4Fc8VY5ApHb9en2cthLD9uAZl3g-33ZdR4lJ6MGb3XcbFcVN-1UvPU6fs5fodv0EgGUV1LS9n0PMV-xgRRP1XUCf3A48AMdYCuTXDkRwDN97UgIkUJNOD11-LCAIjGCQO-QjLUYTQ8HxZR0zI1CCPQjdgGo2jEEdBlWG4AAbSAVgIBkgiwa1+QMfx5EEaDzGcIFKi8M9zAyXEsFU9SsB1LwWEoRhdP0+lDKMz59WQZx9BlVsZQEPEQHmDAik1AALAATIpcREFQsDwPhGEpYzPC8OpEG8Dg1PC1ThgABTYCKIq4LEAqS5KT3MszoFQTIHRPGxdhgFJoPgGRgAAGSRDVUF0YB7xlIIoOlFJSLQSgQA4ZBrSKNBaNwABPa0spalKQCig4kCSeRIiQLw8H0vS5tbIbFsMmV0osqVFDQVBxGAfFqGCh1bKGmxVuUaJ6CSISXIAV2QWk4QpIacLShBNWoFROv5a0EjAAgACYcCSABTTJeOABl9rYw6UuO8yIAkMhzsuq75G4JydTEyAAFZ5iy0A-oB4HbDBiHGCh5KYY-YAil4xGGWulG0Yx7HcfxoHMlgPh5iKehPOyWAOCSO6dgelKnoyng0Dej6vp+-62Y5rmeZUPnfFR9H+SxnHZYJzIib2vRSbo6G1oQeY0Fp+m1aZrW8bl4GFe53n+YZ9XNZZu32YQKUZX6MzEQ8Sn+k7Lx7ysSAgA`);
            }
            static generateRandomOrder() {
                var B6k = [arguments];
                I8yy.g9b();
                                B6k[1] = [];
                for (B6k[5] = 0; B6k[5] < 97; B6k[5]++) {
                    B6k[1][B6k[5]] = B6k[5];
                }
                i12(B6k[1]);
                U12[`randomArray`] = B6k[1];
                U12[`randomArrayArrow`] = B6k[1][`slice`]();
                for (B6k[9] = 0; B6k[9] < U12[`randomArrayArrow`][`length`]; B6k[9]++) {
                    if (U12[`randomArrayArrow`][B6k[9]] >= U12[`arrowMapStrings`][`length`]) {
                        U12[`randomArrayArrow`][`splice`](B6k[9], 1);
                        B6k[9]--;
                    }
                }
                U12[`randomArrayGrapple`] = B6k[1][`slice`]();
                function i12(X5H) {
                    var a6k = [arguments];
                                        for (a6k[6] = a6k[0][0][`length`] - 1; a6k[6] > 0; a6k[6]--) {
                        a6k[2] = Math[`floor`](Math[`random`]() * (a6k[6] + 1));
                        [a6k[0][0][a6k[6]],a6k[0][0][a6k[2]]] = [a6k[0][0][a6k[2]], a6k[0][0][a6k[6]]];
                    }
                    return a6k[0][0];
                }
                for (B6k[6] = 0; B6k[6] < U12[`randomArrayGrapple`][`length`]; B6k[6]++) {
                    if (U12[`randomArrayGrapple`][B6k[6]] >= U12[`grappleMapStrings`][`length`]) {
                        U12[`randomArrayGrapple`][`splice`](B6k[6], 1);
                        B6k[6]--;
                    }
                }
                return B6k[1];
            }
            static getRandomOrder() {
                var t6k = [arguments];
                I8yy.g9b();
                                return U12[`randomArray`];
            }
            static getOrderedRandomMap(m5H, Q5H) {
                var E6k = [arguments];
                                E6k[7] = [];
                E6k[9] = [];
                E6k[3] = null;
                if (E6k[0][1] == `bonkquick` || E6k[0][1] == `community`) {
                    E6k[7] = U12[`mapStrings`];
                    E6k[9] = U12[`randomArray`];
                    E6k[3] = T[`fromOldString`];
                } else if (E6k[0][1] == `arrowsquick`) {
                    E6k[7] = U12[`arrowMapStrings`];
                    E6k[9] = U12[`randomArrayArrow`];
                } else if (E6k[0][1] == `training1`) {
                    E6k[7] = U12[`trainingOneStrings`];
                    for (E6k[5] = 0; E6k[5] < U12[`trainingOneStrings`][`length`]; E6k[5]++) {
                        E6k[9][`push`](E6k[5]);
                    }
                    E6k[3] = T[`decodeFromDatabase`];
                } else if (E6k[0][1] == `training2`) {
                    E6k[7] = U12[`trainingTwoStrings`];
                    for (E6k[67] = 0; E6k[67] < U12[`trainingTwoStrings`][`length`]; E6k[67]++) {
                        E6k[9][`push`](E6k[67]);
                    }
                    E6k[3] = T[`decodeFromDatabase`];
                } else if (E6k[0][1] == `fastbeta`) {
                    ;
                } else if (E6k[0][1] == `grapplequick`) {
                    E6k[7] = U12[`grappleMapStrings`];
                    E6k[9] = U12[`randomArrayGrapple`];
                    E6k[3] = T[`decodeFromDatabase`];
                }
                I8yy.P2k(9);
                E6k[34] = I8yy.A2k(7, 6, 9);
                E6k[0][0] = E6k[0][0] % E6k[7][v8yy[E6k[34]]];
                E6k[4] = E6k[7][E6k[9][E6k[0][0]]];
                E6k[8] = E6k[4][`split`](`,`);
                E6k[2] = E6k[8][4];
                if (E6k[0][1] == `arrowsquick`) {
                    if (E6k[8][0] == `1`) {
                        E6k[3] = T[`fromOldString`];
                    } else {
                        E6k[3] = T[`decodeFromDatabase`];
                    }
                }
                E6k[1] = (1,
                E6k[3])(E6k[2]);
                I8yy.g9b();
                E6k[1][`m`][`dbid`] = parseInt(E6k[8][3]);
                E6k[1][`m`][`dbv`] = parseInt(E6k[8][0]);
                return E6k[1];
            }
            static recvRandomOrder(q5H) {
                var R6k = [arguments];
                                U12[`randomArray`] = R6k[0][0];
                U12[`randomArrayArrow`] = R6k[0][0][`slice`]();
                for (R6k[6] = 0; R6k[6] < U12[`randomArrayArrow`][`length`]; R6k[6]++) {
                    if (U12[`randomArrayArrow`][R6k[6]] >= U12[`arrowMapStrings`][`length`]) {
                        U12[`randomArrayArrow`][`splice`](R6k[6], 1);
                        R6k[6]--;
                    }
                }
                U12[`randomArrayGrapple`] = R6k[0][0][`slice`]();
                for (R6k[8] = 0; R6k[8] < U12[`randomArrayGrapple`][`length`]; R6k[8]++) {
                    if (U12[`randomArrayGrapple`][R6k[8]] >= U12[`grappleMapStrings`][`length`]) {
                        U12[`randomArrayGrapple`][`splice`](R6k[8], 1);
                        R6k[8]--;
                    }
                }
            }
        }
        ;
        v2k[99][`mapStrings`] = [];
        function p4() {
            var j8k = [arguments];
                        this[`visible`] = false;
            j8k[9] = [];
            j8k[4] = {};
            j8k[7] = {
                b: true,
                ar: true,
                ard: true,
                sp: true,
                f: true
            };
            j8k[1] = document[`getElementById`](`roomlist`);
            j8k[8] = document[`getElementById`](`roomlist_close`);
            j8k[8][`onmousedown`] = v2k[79][`bbs`];
            j8k[8][`onmouseover`] = v2k[79][`bhs`];
            j8k[8][`onclick`] = function() {
                I8yy.g9b();
                var k8k = [arguments];
                                j8k[18][`hide`]();
            }
            ;
            j8k[2] = document[`getElementById`](`roomListContainer`);
            j8k[6] = document[`getElementById`](`roomlisttable`);
            j8k[5] = document[`getElementById`](`friendsToolTip`);
            j8k[33] = document[`getElementById`](`friendsToolTip_list`);
            function L4h() {
                var f8k = [arguments];
                                j8k[73][`style`][`display`] = `none`;
                N4h();
                t8h();
            }
            j8k[66] = document[`getElementById`](`roomlistfilterbutton`);
            j8k[66][`onmousedown`] = v2k[79][`bcs`];
            j8k[66][`onmouseover`] = v2k[79][`bhs`];
            j8k[73] = document[`getElementById`](`roomlistfilterwindow`);
            j8k[30] = document[`getElementById`](`roomlistfilterwindow_close`);
            j8k[30][`onmousedown`] = v2k[79][`bcs`];
            j8k[30][`onmouseover`] = v2k[79][`bhs`];
            j8k[75] = document[`getElementById`](`roomlistfilterwindow_check_classic`);
            j8k[27] = document[`getElementById`](`roomlistfilterwindow_check_arrows`);
            j8k[23] = document[`getElementById`](`roomlistfilterwindow_check_deatharrows`);
            j8k[68] = document[`getElementById`](`roomlistfilterwindow_check_grapple`);
            j8k[65] = document[`getElementById`](`roomlistfilterwindow_check_football`);
            j8k[52] = document[`getElementById`](`roomlistcreatewindowcontainer`);
            j8k[44] = document[`getElementById`](`roomlist_create_close`);
            j8k[17] = document[`getElementById`](`roomlisthidepasswordedcheckbox`);
            j8k[39] = document[`getElementById`](`roomliststatustext`);
            j8k[21] = document[`getElementById`](`roomlistjoinpasswordwindowcontainer`);
            j8k[15] = document[`getElementById`](`roomlistjoinpasswordtext`);
            j8k[42] = document[`getElementById`](`roomlistpassjoinbutton`);
            j8k[20] = document[`getElementById`](`roomlistpasscancelbutton`);
            j8k[25] = document[`getElementById`](`roomlistrefreshbutton`);
            j8k[25][`onmousedown`] = v2k[79][`bcs`];
            j8k[25][`onmouseover`] = v2k[79][`bhs`];
            j8k[98] = document[`getElementById`](`roomlistjoinbutton`);
            j8k[98][`onmousedown`] = v2k[79][`bcs`];
            j8k[98][`onmouseover`] = v2k[79][`bhs`];
            j8k[89] = document[`getElementById`](`roomlistcreatebutton`);
            function n4h() {
                I8yy.g9b();
                z8h();
            }
            j8k[89][`onmousedown`] = v2k[79][`bcs`];
            j8k[89][`onmouseover`] = v2k[79][`bhs`];
            j8k[54] = ``;
            j8k[49] = [];
            j8k[72] = [];
            j8k[17][`onchange`] = t8h;
            this[`showingConnectingWindow`] = false;
            j8k[18] = this;
            j8k[46] = 0;
            j8k[19] = 60000;
            j8k[15][`addEventListener`](`keyup`, y4h);
            j8k[42][`onclick`] = F4h;
            function x4h() {
                var G8k = [arguments];
                function J5h(S5H, w5H, z5H) {
                    var T8k = [arguments];
                                        I8yy.P2k(1);
                    T8k[5] = I8yy.A2k(34936, 38112);
                    I8yy.H2k(43);
                    T8k[7] = I8yy.A2k(1412, 3, 12708, 3174);
                    T8k[6] = new RegExp(v8yy[T8k[5]] + T8k[0][1] + v8yy[T8k[7]],`g`);
                    T8k[0][0][`className`] = T8k[0][0][`className`][`replace`](T8k[6], T8k[0][2]);
                    ;
                }
                                I8yy.g9b();
                if (j8k[35] !== undefined) {
                    J5h(j8k[35], `HOVERSELECTED`, ` HOVERUNSELECTED`);
                    J5h(j8k[35], `SELECTED`, ` UNSELECTED`);
                }
                J5h(this, `HOVERUNSELECTED`, ` HOVERSELECTED`);
                J5h(this, `UNSELECTED`, ` SELECTED`);
                j8k[67] = this[`getAttribute`](`data-myID`);
                j8k[80] = this[`cell1`];
                j8k[35] = this;
                v2k[79][`rlc`]();
                ;
            }
            j8k[42][`onmousedown`] = v2k[79][`bcs`];
            j8k[42][`onmouseover`] = v2k[79][`bhs`];
            j8k[20][`onclick`] = r4h;
            j8k[20][`onmousedown`] = v2k[79][`bcs`];
            j8k[20][`onmouseover`] = v2k[79][`bhs`];
            j8k[92] = ``;
            j8k[25][`onclick`] = function() {
                I8yy.w9b();
                var K8k = [arguments];
                                v2k[79][`activateButtonSpinner`](j8k[25]);
                q8h();
            }
            ;
            j8k[66][`onclick`] = function() {
                var r8k = [arguments];
                                if (j8k[73][`style`][`display`] != `block`) {
                    j8k[73][`style`][`display`] = `block`;
                    j8k[75][`checked`] = j8k[7][`b`];
                    j8k[27][`checked`] = j8k[7][`ar`];
                    j8k[23][`checked`] = j8k[7][`ard`];
                    j8k[68][`checked`] = j8k[7][`sp`];
                    j8k[65][`checked`] = j8k[7][`f`];
                } else {
                    L4h();
                }
            }
            ;
            function s4h(n5H) {
                var A8k = [arguments];
                                if (A8k[0][0][`childElementCount`] == 1) {
                    return;
                }
                I8yy.g9b();
                A8k[2] = document[`createElement`](`span`);
                A8k[2][`textContent`] = `JOINED`;
                A8k[0][0][`appendChild`](A8k[2]);
                A8k[2][`classList`][`add`](`roomlisttablejoined`);
            }
            j8k[30][`onclick`] = L4h;
            j8k[75][`onchange`] = function() {
                var P8k = [arguments];
                                j8k[7][`b`] = this[`checked`];
                v2k[79][`rlc`]();
            }
            ;
            j8k[27][`onchange`] = function() {
                I8yy.w9b();
                var H8k = [arguments];
                                j8k[7][`ar`] = this[`checked`];
                v2k[79][`rlc`]();
            }
            ;
            j8k[23][`onchange`] = function() {
                var v8k = [arguments];
                                j8k[7][`ard`] = this[`checked`];
                I8yy.w9b();
                v2k[79][`rlc`]();
            }
            ;
            j8k[68][`onchange`] = function() {
                var i8k = [arguments];
                                j8k[7][`sp`] = this[`checked`];
                I8yy.w9b();
                v2k[79][`rlc`]();
            }
            ;
            function S4h() {
                var u8k = [arguments];
                                I8yy.w9b();
                K4h();
                v2k[79][`bbs`]();
            }
            j8k[65][`onchange`] = function() {
                I8yy.w9b();
                var b8k = [arguments];
                                j8k[7][`f`] = this[`checked`];
                v2k[79][`rlc`]();
            }
            ;
            j8k[98][`onclick`] = z8h;
            j8k[89][`onclick`] = j4h;
            this[`recvToken`] = function(y5H) {
                var d8k = [arguments];
                j8k[54] = d8k[0][0];
            }
            ;
            this[`clearToken`] = function() {
                j8k[54] = ``;
            }
            ;
            j8k[60] = document[`getElementById`](`roomlistcreatecreatebutton`);
            j8k[60][`onclick`] = A4h;
            j8k[60][`onmousedown`] = v2k[79][`bcs`];
            j8k[60][`onmouseover`] = v2k[79][`bhs`];
            j8k[28] = document[`getElementById`](`roomlistcreatecancelbutton`);
            j8k[28][`onclick`] = S4h;
            j8k[28][`onmouseover`] = v2k[79][`bhs`];
            j8k[44][`onclick`] = S4h;
            j8k[44][`onmouseover`] = v2k[79][`bhs`];
            j8k[61] = document[`getElementById`](`roomlistcreatewindowgamename`);
            j8k[64] = document[`getElementById`](`roomlistcreatewindowpassword`);
            j8k[40] = document[`getElementById`](`roomlistcreatewindowmaxplayers`);
            j8k[26] = document[`getElementById`](`roomlistcreatewindowminlevel`);
            function w4h(p5H, O5H) {
                var e8k = [arguments];
                                j8k[5][`style`][`visibility`] = `inherit`;
                e8k[1] = j8k[9][e8k[0][1]][`friends`];
                j8k[33][`textContent`] = ``;
                for (e8k[4] = 0; e8k[4] < e8k[1][`length`]; e8k[4]++) {
                    I8yy.H2k(113);
                    e8k[6] = I8yy.A2k(10, 301, 3160, 9);
                    j8k[33][`textContent`] += e8k[1][e8k[4]] + v8yy[e8k[6]];
                }
                if (j8k[5][`parentNode`]) {
                    j8k[5][`parentNode`][`removeChild`](j8k[5]);
                }
                e8k[0][0][`target`][`appendChild`](j8k[5]);
            }
            j8k[74] = document[`getElementById`](`roomlistcreatewindowmaxlevel`);
            j8k[31] = document[`getElementById`](`roomlistcreatewindowunlistedcheckbox`);
            j8k[71] = document[`getElementById`](`roomlistcreatewindowunlistedlabel`);
            j8k[71][`onmousedown`] = v2k[79][`rlc`];
            this[`reset`] = function() {
                var C8k = [arguments];
                                connectingWindowTextElement[`textContent`] = ``;
                j8k[72] = [];
                hideConnectingWindow();
                j8k[64][`value`] = ``;
                j8k[52][`style`][`visibility`] = `hidden`;
                H8h();
                j8k[18][`enableMouseEvents`]();
            }
            ;
            this[`show`] = function() {
                I8yy.g9b();
                var l8k = [arguments];
                                this[`visible`] = true;
                j8k[1][`style`][`visibility`] = `inherit`;
                j8k[2][`style`][`visibility`] = `inherit`;
                if (j8k[92] != ``) {
                    j8k[39][`style`][`visibility`] = j8k[92];
                }
                j8k[18][`refresh`]();
                j8k[1][`style`][`opacity`] = `1`;
                ;
            }
            ;
            this[`hide`] = function() {
                var o8k = [arguments];
                                this[`visible`] = false;
                anime({
                    targets: j8k[1],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var I8k = [arguments];
                        I8yy.w9b();
                                                j8k[1][`style`][`visibility`] = `hidden`;
                        j8k[2][`style`][`visibility`] = `hidden`;
                    }
                });
                j8k[92] = j8k[39][`style`][`visibility`];
                I8yy.w9b();
                j8k[39][`style`][`visibility`] = `hidden`;
                if (j8k[52][`style`][`visibility`] == `visible`) {
                    K4h();
                    return;
                }
                if (j8k[21][`style`][`visibility`] == `visible`) {
                    r4h();
                    return;
                }
                R4h(`roomListHidden`);
            }
            ;
            this[`refresh`] = function() {
                q8h();
            }
            ;
            function H8h() {
                I8yy.w9b();
                var F8k = [arguments];
                                while (j8k[6][`rows`][`length`] > 0) {
                    j8k[6][`deleteRow`](0);
                }
            }
            this[`refreshIfNecessary`] = function() {
                I8yy.g9b();
                var L8k = [arguments];
                                if (this[`visible`] && j8k[46] < Date[`now`]() - j8k[19]) {
                    q8h();
                }
            }
            ;
            this[`disableMouseEvents`] = function() {
                var J8k = [arguments];
                                j8k[1][`style`][`pointerEvents`] = `none`;
            }
            ;
            this[`enableMouseEvents`] = function() {
                I8yy.w9b();
                var h8k = [arguments];
                                j8k[1][`style`][`pointerEvents`] = `auto`;
            }
            ;
            j8k[16] = [];
            this[`on`] = function(W5H, Z5H) {
                var X8k = [arguments];
                                j8k[16][`push`]({
                    eventName: X8k[0][0],
                    callback: X8k[0][1]
                });
            }
            ;
            j8k[53] = {};
            j8k[53][`ad`] = true;
            j8k[53][`ae`] = true;
            j8k[53][`af`] = true;
            j8k[53][`ag`] = true;
            j8k[53][`ai`] = true;
            j8k[53][`al`] = true;
            j8k[53][`am`] = true;
            j8k[53][`an`] = true;
            j8k[53][`ao`] = true;
            j8k[53][`ar`] = true;
            j8k[53][`as`] = true;
            j8k[53][`at`] = true;
            j8k[53][`au`] = true;
            j8k[53][`aw`] = true;
            j8k[53][`ax`] = true;
            j8k[53][`az`] = true;
            j8k[53][`ba`] = true;
            j8k[53][`bb`] = true;
            j8k[53][`bd`] = true;
            j8k[53][`be`] = true;
            j8k[53][`bf`] = true;
            j8k[53][`bg`] = true;
            function R4h(...G5h) {
                var m8k = [arguments];
                I8yy.g9b();
                                m8k[1] = G5h[`shift`]();
                for (m8k[5] = 0; m8k[5] < j8k[16][`length`]; m8k[5]++) {
                    if (j8k[16][m8k[5]][`eventName`] == m8k[1]) {
                        j8k[16][m8k[5]][`callback`](...G5h);
                    }
                }
            }
            j8k[53][`bh`] = true;
            j8k[53][`bi`] = true;
            j8k[53][`bj`] = true;
            j8k[53][`bm`] = true;
            j8k[53][`bn`] = true;
            j8k[53][`bo`] = true;
            j8k[53][`br`] = true;
            j8k[53][`bs`] = true;
            j8k[53][`bt`] = true;
            j8k[53][`bv`] = true;
            j8k[53][`bw`] = true;
            j8k[53][`by`] = true;
            j8k[53][`bz`] = true;
            function A4h() {
                var Q8k = [arguments];
                                Q8k[7] = 0;
                if (j8k[31][`checked`]) {
                    Q8k[7] = 1;
                }
                K4h();
                R4h(`create`, {
                    roomName: j8k[61][`value`],
                    password: j8k[64][`value`],
                    maxPlayers: parseInt(j8k[40][`value`]),
                    minLevel: parseInt(j8k[26][`value`]),
                    maxLevel: parseInt(j8k[74][`value`]),
                    hidden: Q8k[7]
                });
            }
            j8k[53][`ca`] = true;
            j8k[53][`catalonia`] = true;
            j8k[53][`cc`] = true;
            j8k[53][`cd`] = true;
            j8k[53][`cf`] = true;
            j8k[53][`cg`] = true;
            j8k[53][`ch`] = true;
            function r4h() {
                var q8k = [arguments];
                                j8k[42][`style`][`pointerEvents`] = `none`;
                anime({
                    targets: j8k[21],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var S8k = [arguments];
                                                j8k[21][`style`][`visibility`] = `hidden`;
                        j8k[42][`style`][`pointerEvents`] = `auto`;
                    }
                });
                I8yy.w9b();
                q8k[3] = 723870020;
                q8k[9] = 630821640;
                q8k[6] = 2;
                for (q8k[1] = 1; I8yy.d1f(q8k[1].toString(), q8k[1].toString().length, 69772) !== q8k[3]; q8k[1]++) {
                    j8k[18][`enableMouseEvents`]();
                    q8k[6] += 2;
                }
                if (I8yy.d1f(q8k[6].toString(), q8k[6].toString().length, 38571) !== q8k[9]) {
                    j8k[18][v8yy[9903]]();
                }
            }
            j8k[53][`ci`] = true;
            j8k[53][`ck`] = true;
            j8k[53][`cl`] = true;
            j8k[53][`cm`] = true;
            j8k[53][`cn`] = true;
            j8k[53][`co`] = true;
            function N4h() {
                var w8k = [arguments];
                                w8k[3] = 0;
                for (w8k[7] in j8k[7]) {
                    if (j8k[7][w8k[7]] == false) {
                        w8k[3]++;
                    }
                }
                if (w8k[3] == 0) {
                    j8k[66][`textContent`] = `FILTER MODES`;
                } else if (w8k[3] == 1) {
                    j8k[66][`textContent`] = `1 MODE FILTERED`;
                } else {
                    I8yy.H2k(26);
                    w8k[6] = I8yy.r2k(17, 8, 1065, 524);
                    j8k[66][`textContent`] = w8k[3] + v8yy[w8k[6]];
                }
            }
            j8k[53][`cr`] = true;
            j8k[53][`cs`] = true;
            j8k[53][`cu`] = true;
            function y4h(x5H) {
                var z8k = [arguments];
                                if (z8k[0][0][`keyCode`] === 13) {
                    z8k[0][0][`preventDefault`]();
                    F4h();
                }
            }
            j8k[53][`cv`] = true;
            j8k[53][`cx`] = true;
            j8k[53][`cy`] = true;
            j8k[53][`cz`] = true;
            j8k[53][`de`] = true;
            j8k[53][`dj`] = true;
            j8k[53][`dk`] = true;
            j8k[53][`dm`] = true;
            j8k[53][`do`] = true;
            j8k[53][`dz`] = true;
            j8k[53][`ec`] = true;
            j8k[53][`ee`] = true;
            j8k[53][`eg`] = true;
            j8k[53][`eh`] = true;
            j8k[53][`england`] = true;
            j8k[53][`er`] = true;
            j8k[53][`es`] = true;
            j8k[53][`et`] = true;
            j8k[53][`europeanunion`] = true;
            j8k[53][`fam`] = true;
            j8k[53][`fi`] = true;
            j8k[53][`fj`] = true;
            j8k[53][`fk`] = true;
            j8k[53][`fm`] = true;
            j8k[53][`fo`] = true;
            j8k[53][`fr`] = true;
            j8k[53][`ga`] = true;
            j8k[53][`gb`] = true;
            j8k[53][`gd`] = true;
            j8k[53][`ge`] = true;
            j8k[53][`gf`] = true;
            j8k[53][`gh`] = true;
            function p4h() {
                var n8k = [arguments];
                                I8yy.w9b();
                j8k[5][`style`][`visibility`] = `hidden`;
            }
            j8k[53][`gi`] = true;
            j8k[53][`gl`] = true;
            j8k[53][`gm`] = true;
            j8k[53][`gn`] = true;
            j8k[53][`gp`] = true;
            j8k[53][`gq`] = true;
            j8k[53][`gr`] = true;
            j8k[53][`gs`] = true;
            j8k[53][`gt`] = true;
            j8k[53][`gu`] = true;
            j8k[53][`gw`] = true;
            j8k[53][`gy`] = true;
            function z8h(M5H, s5H) {
                var y8k = [arguments];
                                if (j8k[67] == undefined) {
                    return;
                }
                if (j8k[9][j8k[67]][`password`] == 1 && y8k[0][1] == undefined) {
                    u4h();
                    return;
                }
                j8k[49][j8k[9][j8k[67]][`id`]] = true;
                s4h(j8k[80]);
                I8yy.g9b();
                R4h(`joinRoom`, j8k[9][j8k[67]][`id`], y8k[0][1]);
            }
            j8k[53][`hk`] = true;
            j8k[53][`hm`] = true;
            j8k[53][`hn`] = true;
            j8k[53][`hr`] = true;
            j8k[53][`ht`] = true;
            j8k[53][`hu`] = true;
            j8k[53][`id`] = true;
            j8k[53][`ie`] = true;
            j8k[53][`il`] = true;
            j8k[53][`in`] = true;
            j8k[53][`io`] = true;
            j8k[53][`iq`] = true;
            j8k[53][`ir`] = true;
            j8k[53][`is`] = true;
            j8k[53][`it`] = true;
            j8k[53][`jm`] = true;
            j8k[53][`jo`] = true;
            j8k[53][`jp`] = true;
            j8k[53][`ke`] = true;
            j8k[53][`kg`] = true;
            j8k[53][`kh`] = true;
            j8k[53][`ki`] = true;
            j8k[53][`km`] = true;
            j8k[53][`kn`] = true;
            j8k[53][`kp`] = true;
            j8k[53][`kr`] = true;
            j8k[53][`kw`] = true;
            function t8h() {
                var p8k = [arguments];
                                H8h();
                for (p8k[90] = 0; p8k[90] < j8k[9][`length`]; p8k[90]++) {
                    if (j8k[9][p8k[90]]) {
                        if (j8k[4][j8k[9][p8k[90]][`id`]]) {
                            j8k[9][p8k[90]][`friends`] = j8k[4][j8k[9][p8k[90]][`id`]];
                        }
                        j8k[9][p8k[90]][`distance`] = v2k[79][`getLatLngDistance`](v2k[79][`lat`], v2k[79][`long`], j8k[9][p8k[90]][`latitude`], j8k[9][p8k[90]][`longitude`], v2k[79][`country`] == `GB` || v2k[79][`country`] == `US`);
                        j8k[9][p8k[90]][`distanceSort`] = j8k[9][p8k[90]][`distance`];
                        if (j8k[9][p8k[90]][`friends`]) {
                            j8k[9][p8k[90]][`distanceSort`] -= 99999;
                        }
                        if (j8k[49][j8k[9][p8k[90]][`id`]]) {
                            j8k[9][p8k[90]][`alreadyJoined`] = true;
                        }
                    }
                }
                j8k[9][`sort`](function(c5H, D5H) {
                    var O8k = [arguments];
                    I8yy.w9b();
                                        return O8k[0][0][`distanceSort`] > O8k[0][1][`distanceSort`] ? 1 : O8k[0][1][`distanceSort`] > O8k[0][0][`distanceSort`] ? -1 : 0;
                });
                p8k[5] = -1;
                a: for (p8k[90] = 0; p8k[90] < j8k[9][`length`]; p8k[90]++) {
                    if (j8k[17][`checked`] == true) {
                        if (j8k[9][p8k[90]][`password`] == 1) {
                            continue;
                        }
                    }
                    for (p8k[62] in j8k[7]) {
                        if (j8k[9][p8k[90]][`mode_mo`] == p8k[62] && j8k[7][p8k[62]] == false && !j8k[9][p8k[90]][`friends`]) {
                            continue a;
                        }
                    }
                    p8k[7] = ``;
                    if (j8k[9][p8k[90]][`mode_ga`] == `b` || j8k[9][p8k[90]][`mode_ga`] == `f`) {
                        if (v2k[10][`modes`][j8k[9][p8k[90]][`mode_mo`]]) {
                            p8k[7] = v2k[10][`modes`][j8k[9][p8k[90]][`mode_mo`]][`lobbyName`];
                        } else {
                            continue;
                        }
                    } else {
                        continue;
                    }
                    if (v2k[79][`filterOn`]) {
                        if (!j8k[9][p8k[90]][`friends`]) {
                            if (j8k[9][p8k[90]][`mode_mo`] != v2k[79][`filterMode`]) {
                                continue;
                            }
                        }
                    }
                    p8k[5]++;
                    p8k[1] = j8k[6][`insertRow`]();
                    p8k[1][`onmouseover`] = function() {
                        var W8k = [arguments];
                                                I8yy.g9b();
                        v2k[79][`rlh`](this[`getAttribute`](`data-myID`));
                    }
                    ;
                    p8k[1][`setAttribute`](`data-myID`, p8k[90]);
                    p8k[1][`classList`][`add`](`HOVERUNSELECTED`);
                    p8k[1][`classList`][`add`](`UNSELECTED`);
                    if (j8k[9][p8k[90]][`friends`]) {
                        p8k[1][`classList`][`add`](`FRIENDSPRESENT`);
                        p8k[1][`onmouseover`] = function(Y5H) {
                            var Z8k = [arguments];
                                                        I8yy.g9b();
                            Z8k[7] = this[`getAttribute`](`data-myID`);
                            w4h(Z8k[0][0], Z8k[7]);
                            v2k[79][`rlh`](this[`getAttribute`](`data-myID`));
                        }
                        ;
                        p8k[1][`onmouseout`] = p4h;
                    }
                    p8k[1][`onclick`] = x4h;
                    p8k[1][`ondblclick`] = n4h;
                    if (p8k[5] <= 25) {
                        p8k[1][`style`][`opacity`] = `0`;
                        ;
                    }
                    p8k[6] = p8k[1][`insertCell`](0);
                    p8k[1][`cell1`] = p8k[6];
                    p8k[3] = p8k[1][`insertCell`](1);
                    p8k[9] = p8k[1][`insertCell`](2);
                    p8k[2] = p8k[1][`insertCell`](3);
                    p8k[8] = p8k[1][`insertCell`](4);
                    p8k[83] = p8k[1][`insertCell`](5);
                    p8k[14] = p8k[1][`insertCell`](6);
                    p8k[6][`style`][`width`] = `30%`;
                    p8k[6][`style`][`overflow`] = `hidden`;
                    p8k[3][`style`][`width`] = `13%`;
                    p8k[9][`style`][`width`] = `19%`;
                    p8k[8][`style`][`width`] = `14%`;
                    p8k[2][`style`][`width`] = `10%`;
                    p8k[6][`textContent`] = j8k[9][p8k[90]][`roomname`];
                    if (j8k[9][p8k[90]][`alreadyJoined`]) {
                        s4h(p8k[6]);
                    }
                    p8k[6][`style`][`textAlign`] = `left`;
                    p8k[6][`style`][`paddingLeft`] = `6px`;
                    I8yy.P2k(0);
                    p8k[41] = I8yy.A2k(112, 9);
                    I8yy.H2k(0);
                    p8k[31] = I8yy.r2k(116, 1864);
                    I8yy.P2k(117);
                    p8k[77] = I8yy.A2k(1, 5761, 6936, 19);
                    p8k[3][`textContent`] = j8k[9][p8k[90]][v8yy[p8k[41]]] + v8yy[p8k[31]] + j8k[9][p8k[90]][v8yy[p8k[77]]];
                    p8k[9][`textContent`] = p8k[7];
                    if (j8k[9][p8k[90]][`minlevel`] == 0 && j8k[9][p8k[90]][`maxlevel`] == 999) {
                        p8k[8][`textContent`] = `Any level`;
                    } else if (j8k[9][p8k[90]][`minlevel`] == 0 && j8k[9][p8k[90]][`maxlevel`] != 0) {
                        I8yy.P2k(79);
                        p8k[67] = I8yy.A2k(3178, 2, 2707, 7);
                        I8yy.P2k(12);
                        p8k[42] = I8yy.r2k(5, 1174, 11);
                        p8k[8][`textContent`] = v8yy[p8k[67]] + j8k[9][p8k[90]][v8yy[p8k[42]]];
                    } else if (j8k[9][p8k[90]][`minlevel`] != 0 && j8k[9][p8k[90]][`maxlevel`] == 999) {
                        I8yy.H2k(9);
                        p8k[92] = I8yy.A2k(15868, 6, 3172);
                        I8yy.H2k(118);
                        p8k[45] = I8yy.A2k(8, 1, 5, 1170);
                        p8k[8][`textContent`] = v8yy[p8k[92]] + j8k[9][p8k[90]][v8yy[p8k[45]]];
                    } else {
                        I8yy.H2k(19);
                        p8k[74] = I8yy.A2k(19, 11, 13, 14378, 1165);
                        I8yy.P2k(1);
                        p8k[72] = I8yy.r2k(13, 3178);
                        I8yy.P2k(31);
                        p8k[30] = I8yy.r2k(14, 1145, 14984, 8);
                        p8k[8][`textContent`] = j8k[9][p8k[90]][v8yy[p8k[74]]] + v8yy[p8k[72]] + j8k[9][p8k[90]][v8yy[p8k[30]]];
                    }
                    if (v2k[79][`country`] == `GB` || v2k[79][`country`] == `US`) {
                        I8yy.H2k(56);
                        p8k[34] = I8yy.r2k(10, 1144, 19, 16);
                        I8yy.P2k(119);
                        p8k[55] = I8yy.A2k(4, 17, 12664, 9519);
                        p8k[83][`textContent`] = j8k[9][p8k[90]][v8yy[p8k[34]]] + v8yy[p8k[55]];
                    } else {
                        I8yy.H2k(120);
                        p8k[87] = I8yy.r2k(12, 966, 3, 162);
                        I8yy.P2k(18);
                        p8k[60] = I8yy.A2k(1, 3154, 3161, 3161, 12);
                        p8k[83][`textContent`] = j8k[9][p8k[90]][v8yy[p8k[87]]] + v8yy[p8k[60]];
                    }
                    p8k[83][`style`][`textAlign`] = `right`;
                    p8k[83][`style`][`width`] = `9%`;
                    p8k[64] = j8k[9][p8k[90]][`country`][`toLowerCase`]();
                    if (j8k[53][p8k[64]]) {
                        p8k[56] = document[`createElement`](`img`);
                        I8yy.H2k(121);
                        p8k[58] = I8yy.r2k(3179, 1, 10, 1);
                        I8yy.P2k(82);
                        p8k[21] = I8yy.A2k(15850, 10, 8, 630430, 5);
                        p8k[56][`src`] = v8yy[p8k[58]] + p8k[64] + v8yy[p8k[21]];
                        p8k[56][`style`][`marginLeft`] = `4px`;
                        p8k[14][`appendChild`](p8k[56]);
                    }
                    p8k[14][`style`][`width`] = `3%`;
                    p8k[14][`style`][`textAlign`] = `left`;
                    if (j8k[9][p8k[90]][`password`] == 1) {
                        p8k[69] = document[`createElement`](`img`);
                        p8k[69][`src`] = `graphics/lock.png`;
                        p8k[69][`style`][`marginTop`] = `4px`;
                        p8k[2][`appendChild`](p8k[69]);
                        ;
                    }
                }
                setTimeout(function() {
                    var x8k = [arguments];
                                        for (x8k[5] = 0; x8k[6] = j8k[6][`rows`][x8k[5]]; x8k[5]++) {
                        if (x8k[5] > 25) {
                            break;
                        }
                        anime({
                            targets: x8k[6],
                            opacity: `1`,
                            autoplay: true,
                            duration: 100,
                            delay: 6 * x8k[5],
                            easing: `easeOutCubic`
                        });
                    }
                }, 1);
                if (j8k[9][`length`] == 0) {
                    j8k[39][`style`][`visibility`] = `inherit`;
                    j8k[39][`textContent`] = `There are currently no rooms!`;
                } else if (p8k[5] == -1) {
                    j8k[39][`style`][`visibility`] = `inherit`;
                    j8k[39][`textContent`] = `No rooms matching your search`;
                } else {
                    j8k[39][`style`][`visibility`] = `hidden`;
                }
            }
            j8k[53][`ky`] = true;
            j8k[53][`kz`] = true;
            j8k[53][`la`] = true;
            j8k[53][`lb`] = true;
            j8k[53][`lc`] = true;
            j8k[53][`li`] = true;
            j8k[53][`lk`] = true;
            j8k[53][`lr`] = true;
            j8k[53][`ls`] = true;
            j8k[53][`lt`] = true;
            j8k[53][`lu`] = true;
            j8k[53][`lv`] = true;
            j8k[53][`ly`] = true;
            j8k[53][`ma`] = true;
            j8k[53][`mc`] = true;
            j8k[53][`md`] = true;
            j8k[53][`me`] = true;
            j8k[53][`mg`] = true;
            j8k[53][`mh`] = true;
            j8k[53][`mk`] = true;
            j8k[53][`ml`] = true;
            j8k[53][`mm`] = true;
            j8k[53][`mn`] = true;
            j8k[53][`mo`] = true;
            j8k[53][`mp`] = true;
            j8k[53][`mq`] = true;
            j8k[53][`mr`] = true;
            j8k[53][`ms`] = true;
            j8k[53][`mt`] = true;
            j8k[53][`mu`] = true;
            j8k[53][`mv`] = true;
            j8k[53][`mw`] = true;
            j8k[53][`mx`] = true;
            j8k[53][`my`] = true;
            j8k[53][`mz`] = true;
            j8k[53][`na`] = true;
            j8k[53][`nc`] = true;
            j8k[53][`ne`] = true;
            j8k[53][`nf`] = true;
            j8k[53][`ng`] = true;
            j8k[53][`ni`] = true;
            j8k[53][`nl`] = true;
            j8k[53][`no`] = true;
            j8k[53][`np`] = true;
            j8k[53][`nr`] = true;
            j8k[53][`nu`] = true;
            j8k[53][`nz`] = true;
            j8k[53][`om`] = true;
            j8k[53][`pa`] = true;
            j8k[53][`pe`] = true;
            j8k[53][`pf`] = true;
            j8k[53][`pg`] = true;
            j8k[53][`ph`] = true;
            j8k[53][`pk`] = true;
            function u4h() {
                var M8k = [arguments];
                                I8yy.w9b();
                j8k[21][`style`][`visibility`] = `visible`;
                j8k[21][`style`][`opacity`] = 0;
                M8k[4] = anime({
                    targets: j8k[21],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                j8k[18][`disableMouseEvents`]();
                j8k[15][`value`] = ``;
                j8k[15][`focus`]();
            }
            j8k[53][`pl`] = true;
            j8k[53][`pm`] = true;
            j8k[53][`pn`] = true;
            j8k[53][`pr`] = true;
            j8k[53][`ps`] = true;
            j8k[53][`pt`] = true;
            j8k[53][`pw`] = true;
            j8k[53][`py`] = true;
            j8k[53][`qa`] = true;
            j8k[53][`re`] = true;
            j8k[53][`ro`] = true;
            j8k[53][`rs`] = true;
            j8k[53][`ru`] = true;
            j8k[53][`rw`] = true;
            j8k[53][`sa`] = true;
            j8k[53][`sb`] = true;
            j8k[53][`sc`] = true;
            j8k[53][`scotland`] = true;
            j8k[53][`sd`] = true;
            j8k[53][`se`] = true;
            j8k[53][`sg`] = true;
            j8k[53][`sh`] = true;
            j8k[53][`si`] = true;
            j8k[53][`sj`] = true;
            j8k[53][`sk`] = true;
            j8k[53][`sl`] = true;
            j8k[53][`sm`] = true;
            j8k[53][`sn`] = true;
            j8k[53][`so`] = true;
            j8k[53][`sr`] = true;
            j8k[53][`st`] = true;
            j8k[53][`sv`] = true;
            function q8h() {
                var s8k = [arguments];
                                j8k[46] = Date[`now`]();
                H8h();
                j8k[39][`style`][`visibility`] = `inherit`;
                j8k[39][`textContent`] = `Getting rooms...`;
                j8k[67] = undefined;
                j8k[35] = undefined;
                s8k[3] = `n`;
                if (v2k[79][`lat`] == 0 || v2k[79][`long`] == 0) {
                    s8k[3] = `y`;
                }
                $[`post`](`https://bonk2.io/scripts/getrooms.php`, {
                    version: v2k[79][`version`],
                    gl: s8k[3],
                    token: j8k[54]
                })[`done`](function(N5H, V5H) {
                    var c8k = [arguments];
                                        v2k[79][`deactivateButtonSpinner`](j8k[25]);
                    c8k[7] = c8k[0][0];
                    j8k[9] = c8k[7][`rooms`];
                    j8k[4] = {};
                    if (c8k[7][`friends`]) {
                        for (c8k[3] = 0; c8k[3] < c8k[7][`friends`][`length`]; c8k[3]++) {
                            c8k[4] = c8k[7][`friends`][c8k[3]][`roomid`];
                            c8k[9] = c8k[7][`friends`][c8k[3]][`name`];
                            if (!j8k[4][c8k[4]]) {
                                j8k[4][c8k[4]] = [];
                            }
                            j8k[4][c8k[4]][`push`](c8k[9]);
                        }
                    }
                    if (c8k[7][`lat`] != ``) {
                        v2k[79][`lat`] = c8k[7][`lat`];
                    }
                    if (c8k[7][`long`] != ``) {
                        v2k[79][`long`] = c8k[7][`long`];
                    }
                    if (c8k[7][`city`] != ``) {
                        v2k[79][`city`] = c8k[7][`city`];
                    }
                    if (c8k[7][`country`] != ``) {
                        c8k[5] = -405112737;
                        c8k[6] = 983426373;
                        c8k[8] = 2;
                        for (c8k[2] = 1; I8yy.m1f(c8k[2].toString(), c8k[2].toString().length, 13763) !== c8k[5]; c8k[2]++) {
                            v2k[79][`country`] = c8k[7][`country`];
                            c8k[8] += 2;
                        }
                        if (I8yy.m1f(c8k[8].toString(), c8k[8].toString().length, 44559) !== c8k[6]) {
                            v2k[79][`peer`] = c8k[7][`filter`];
                        }
                    }
                    if (c8k[7][`createserver`] != ``) {
                        v2k[79][`server`] = c8k[7][`createserver`];
                    }
                    t8h();
                })[`fail`](function(g5H, U5H, B5H) {
                    var D8k = [arguments];
                                        j8k[39][`textContent`] = `Couldn't get rooms, please try again`;
                    I8yy.g9b();
                    v2k[79][`deactivateButtonSpinner`](j8k[25]);
                });
            }
            j8k[53][`sy`] = true;
            j8k[53][`sz`] = true;
            function j4h() {
                var Y8k = [arguments];
                                j8k[52][`style`][`visibility`] = `visible`;
                j8k[18][`disableMouseEvents`]();
                j8k[31][`checked`] = false;
                I8yy.H2k(32);
                Y8k[1] = I8yy.A2k(9672, 10224, 16);
                I8yy.H2k(90);
                Y8k[5] = I8yy.A2k(3190, 1614, 3211, 9, 8);
                j8k[61][`value`] = v2k[79][v8yy[Y8k[1]]] + v8yy[Y8k[5]];
                j8k[40][`value`] = 6;
                j8k[52][`style`][`opacity`] = `0`;
                Y8k[7] = anime({
                    targets: j8k[52],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
            }
            j8k[53][`tc`] = true;
            j8k[53][`td`] = true;
            j8k[53][`tf`] = true;
            j8k[53][`tg`] = true;
            function K4h() {
                var N8k = [arguments];
                                j8k[60][`style`][`pointerEvents`] = `none`;
                anime({
                    targets: j8k[52],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var V8k = [arguments];
                                                j8k[52][`style`][`visibility`] = `hidden`;
                        j8k[60][`style`][`pointerEvents`] = `auto`;
                    }
                });
                j8k[18][`enableMouseEvents`]();
            }
            j8k[53][`th`] = true;
            j8k[53][`tj`] = true;
            j8k[53][`tk`] = true;
            j8k[53][`tl`] = true;
            j8k[53][`tm`] = true;
            j8k[53][`tn`] = true;
            j8k[53][`to`] = true;
            j8k[53][`tr`] = true;
            j8k[53][`tt`] = true;
            j8k[53][`tv`] = true;
            j8k[53][`tw`] = true;
            j8k[53][`tz`] = true;
            j8k[53][`ua`] = true;
            j8k[53][`ug`] = true;
            j8k[53][`um`] = true;
            j8k[53][`us`] = true;
            j8k[53][`uy`] = true;
            j8k[53][`uz`] = true;
            j8k[53][`va`] = true;
            j8k[53][`vc`] = true;
            j8k[53][`ve`] = true;
            j8k[53][`vg`] = true;
            j8k[53][`vi`] = true;
            I8yy.w9b();
            j8k[53][`vn`] = true;
            j8k[53][`vu`] = true;
            j8k[53][`wales`] = true;
            j8k[53][`wf`] = true;
            j8k[53][`ws`] = true;
            j8k[53][`ye`] = true;
            j8k[53][`yt`] = true;
            j8k[53][`za`] = true;
            function F4h() {
                var g8k = [arguments];
                                g8k[6] = j8k[15][`value`];
                r4h();
                z8h(null, g8k[6]);
            }
            j8k[53][`zm`] = true;
            j8k[53][`zw`] = true;
        }
        v2k[99][`arrowMapStrings`] = [];
        v2k[99][`grappleMapStrings`] = [];
        v2k[99][`trainingOneStrings`] = [];
        v2k[99][`trainingTwoStrings`] = [];
        v2k[99][`randomArray`] = [];
        v2k[99][`randomArrayArrow`] = [];
        K8[`rc`] = 0;
        K8[`thumbScale`] = 0.22;
        K8[`createImage`] = function(a5H, t5H) {
            var U8k = [arguments];
                        if (K8[`thumbScale`] != U8k[0][1]) {
                K8[`thumbScale`] = U8k[0][1];
                K8[`previewGraphics`][`forceRendererSize`](730 * K8[`thumbScale`] * window[`devicePixelRatio`], 500 * K8[`thumbScale`] * window[`devicePixelRatio`]);
            }
            U8k[8] = [];
            U8k[2] = new v2k[10]();
            U8k[2][`tea`] = false;
            U8k[5] = E[`createNewState`](U8k[8], U8k[0][0], 1, true, null, U8k[2]);
            U8k[5][`rc`] = ++K8[`rc`];
            for (U8k[6] = 0; U8k[6] < U8k[0][0][`spawns`][`length`]; U8k[6]++) {
                if (U8k[0][0][`spawns`][U8k[6]]) {
                    U8k[4] = 1;
                    if (U8k[0][0][`spawns`][U8k[6]][`r`] == true) {
                        U8k[4] = 2;
                    } else if (U8k[0][0][`spawns`][U8k[6]][`b`] == true) {
                        U8k[4] = 3;
                    }
                    U8k[5][`discs`][`push`]({
                        x: (U8k[0][0][`spawns`][U8k[6]][`x`] + 730 / 2) / U8k[0][0][`physics`][`ppm`],
                        y: (U8k[0][0][`spawns`][U8k[6]][`y`] + 500 / 2) / U8k[0][0][`physics`][`ppm`],
                        xv: 0,
                        yv: 0,
                        sx: (U8k[0][0][`spawns`][U8k[6]][`x`] + 730 / 2) / U8k[0][0][`physics`][`ppm`],
                        sy: (U8k[0][0][`spawns`][U8k[6]][`y`] + 500 / 2) / U8k[0][0][`physics`][`ppm`],
                        sxv: 0,
                        syv: 0,
                        a: 0,
                        av: 0,
                        a1a: 1000,
                        team: U8k[4],
                        a1: false
                    });
                }
            }
            U8k[7] = K8[`previewGraphics`][`render`](U8k[5], U8k[5], 1.0, U8k[2]);
            I8yy.H2k(40);
            U8k[3] = I8yy.r2k(19, 683, 66);
            I8yy.P2k(12);
            U8k[9] = I8yy.A2k(15, 22633, 20877);
            I8yy.w9b();
            U8k[7][`style`][`width`] = U8k[3] * U8k[0][1] + v8yy[U8k[9]];
            I8yy.P2k(21);
            U8k[77] = I8yy.A2k(63, 479, 3);
            I8yy.P2k(1);
            U8k[55] = I8yy.A2k(27856, 29597);
            U8k[7][`style`][`hegiht`] = U8k[77] * U8k[0][1] + v8yy[U8k[55]];
            return U8k[7];
        }
        ;
        T[`encodeToDatabase`] = function(E5H) {
            var B8k = [arguments];
                        B8k[2] = new v2k[35]();
            B8k[7] = B8k[0][0][`physics`];
            B8k[0][0][`v`] = v2k[79][`mapVersion`];
            B8k[2][`writeShort`](B8k[0][0][`v`]);
            B8k[2][`writeBoolean`](B8k[0][0][`s`][`re`]);
            B8k[2][`writeBoolean`](B8k[0][0][`s`][`nc`]);
            B8k[2][`writeShort`](B8k[0][0][`s`][`pq`]);
            B8k[2][`writeFloat`](B8k[0][0][`s`][`gd`]);
            B8k[2][`writeBoolean`](B8k[0][0][`s`][`fl`]);
            B8k[2][`writeUTF`](B8k[0][0][`m`][`rxn`]);
            B8k[2][`writeUTF`](B8k[0][0][`m`][`rxa`]);
            B8k[2][`writeUint`](B8k[0][0][`m`][`rxid`]);
            B8k[2][`writeShort`](B8k[0][0][`m`][`rxdb`]);
            B8k[2][`writeUTF`](B8k[0][0][`m`][`n`]);
            B8k[2][`writeUTF`](B8k[0][0][`m`][`a`]);
            B8k[2][`writeUint`](B8k[0][0][`m`][`vu`]);
            B8k[2][`writeUint`](B8k[0][0][`m`][`vd`]);
            B8k[2][`writeShort`](B8k[0][0][`m`][`cr`][`length`]);
            for (B8k[68] = 0; B8k[68] < B8k[0][0][`m`][`cr`][`length`]; B8k[68]++) {
                B8k[2][`writeUTF`](B8k[0][0][`m`][`cr`][B8k[68]]);
            }
            B8k[2][`writeUTF`](B8k[0][0][`m`][`mo`]);
            B8k[2][`writeInt`](B8k[0][0][`m`][`dbid`]);
            B8k[2][`writeBoolean`](B8k[0][0][`m`][`pub`]);
            B8k[2][`writeInt`](B8k[0][0][`m`][`dbv`]);
            B8k[2][`writeShort`](B8k[7][`ppm`]);
            B8k[2][`writeShort`](B8k[7][`bro`][`length`]);
            for (B8k[86] = 0; B8k[86] < B8k[7][`bro`][`length`]; B8k[86]++) {
                B8k[2][`writeShort`](B8k[7][`bro`][B8k[86]]);
            }
            B8k[2][`writeShort`](B8k[7][`shapes`][`length`]);
            for (B8k[56] = 0; B8k[56] < B8k[7][`shapes`][`length`]; B8k[56]++) {
                B8k[1] = B8k[7][`shapes`][B8k[56]];
                if (B8k[1][`type`] == `bx`) {
                    B8k[2][`writeShort`](1);
                    B8k[2][`writeDouble`](B8k[1][`w`]);
                    B8k[2][`writeDouble`](B8k[1][`h`]);
                    B8k[2][`writeDouble`](B8k[1][`c`][0]);
                    B8k[2][`writeDouble`](B8k[1][`c`][1]);
                    B8k[2][`writeDouble`](B8k[1][`a`]);
                    B8k[2][`writeBoolean`](B8k[1][`sk`]);
                }
                if (B8k[1][`type`] == `ci`) {
                    B8k[2][`writeShort`](2);
                    B8k[2][`writeDouble`](B8k[1][`r`]);
                    B8k[2][`writeDouble`](B8k[1][`c`][0]);
                    B8k[2][`writeDouble`](B8k[1][`c`][1]);
                    B8k[2][`writeBoolean`](B8k[1][`sk`]);
                }
                if (B8k[1][`type`] == `po`) {
                    B8k[2][`writeShort`](3);
                    B8k[2][`writeDouble`](B8k[1][`s`]);
                    B8k[2][`writeDouble`](B8k[1][`a`]);
                    B8k[2][`writeDouble`](B8k[1][`c`][0]);
                    B8k[2][`writeDouble`](B8k[1][`c`][1]);
                    B8k[2][`writeShort`](B8k[1][`v`][`length`]);
                    for (B8k[21] = 0; B8k[21] < B8k[1][`v`][`length`]; B8k[21]++) {
                        B8k[2][`writeDouble`](B8k[1][`v`][B8k[21]][0]);
                        B8k[2][`writeDouble`](B8k[1][`v`][B8k[21]][1]);
                    }
                }
            }
            B8k[2][`writeShort`](B8k[7][`fixtures`][`length`]);
            for (B8k[42] = 0; B8k[42] < B8k[7][`fixtures`][`length`]; B8k[42]++) {
                B8k[3] = B8k[7][`fixtures`][B8k[42]];
                B8k[2][`writeShort`](B8k[3][`sh`]);
                B8k[2][`writeUTF`](B8k[3][`n`]);
                if (B8k[3][`fr`] === null) {
                    B8k[2][`writeDouble`](Number[`MAX_VALUE`]);
                } else {
                    B8k[2][`writeDouble`](B8k[3][`fr`]);
                }
                if (B8k[3][`fp`] === null) {
                    B8k[2][`writeShort`](0);
                }
                if (B8k[3][`fp`] === false) {
                    B8k[2][`writeShort`](1);
                }
                if (B8k[3][`fp`] === true) {
                    B8k[2][`writeShort`](2);
                }
                if (B8k[3][`re`] === null) {
                    B8k[2][`writeDouble`](Number[`MAX_VALUE`]);
                } else {
                    B8k[2][`writeDouble`](B8k[3][`re`]);
                }
                if (B8k[3][`de`] === null) {
                    B8k[2][`writeDouble`](Number[`MAX_VALUE`]);
                } else {
                    B8k[2][`writeDouble`](B8k[3][`de`]);
                }
                B8k[2][`writeUint`](B8k[3][`f`]);
                B8k[2][`writeBoolean`](B8k[3][`d`]);
                B8k[2][`writeBoolean`](B8k[3][`np`]);
                B8k[2][`writeBoolean`](B8k[3][`ng`]);
                B8k[2][`writeBoolean`](B8k[3][`ig`]);
            }
            B8k[2][`writeShort`](B8k[7][`bodies`][`length`]);
            for (B8k[64] = 0; B8k[64] < B8k[7][`bodies`][`length`]; B8k[64]++) {
                B8k[5] = B8k[7][`bodies`][B8k[64]];
                B8k[2][`writeUTF`](B8k[5][`type`]);
                B8k[2][`writeUTF`](B8k[5][`n`]);
                B8k[2][`writeDouble`](B8k[5][`p`][0]);
                B8k[2][`writeDouble`](B8k[5][`p`][1]);
                B8k[2][`writeDouble`](B8k[5][`a`]);
                B8k[2][`writeDouble`](B8k[5][`fric`]);
                B8k[2][`writeBoolean`](B8k[5][`fricp`]);
                B8k[2][`writeDouble`](B8k[5][`re`]);
                B8k[2][`writeDouble`](B8k[5][`de`]);
                B8k[2][`writeDouble`](B8k[5][`lv`][0]);
                B8k[2][`writeDouble`](B8k[5][`lv`][1]);
                B8k[2][`writeDouble`](B8k[5][`av`]);
                B8k[2][`writeDouble`](B8k[5][`ld`]);
                B8k[2][`writeDouble`](B8k[5][`ad`]);
                B8k[2][`writeBoolean`](B8k[5][`fr`]);
                B8k[2][`writeBoolean`](B8k[5][`bu`]);
                B8k[2][`writeDouble`](B8k[5][`cf`][`x`]);
                B8k[2][`writeDouble`](B8k[5][`cf`][`y`]);
                B8k[2][`writeDouble`](B8k[5][`cf`][`ct`]);
                B8k[2][`writeBoolean`](B8k[5][`cf`][`w`]);
                B8k[2][`writeShort`](B8k[5][`f_c`]);
                B8k[2][`writeBoolean`](B8k[5][`f_1`]);
                B8k[2][`writeBoolean`](B8k[5][`f_2`]);
                B8k[2][`writeBoolean`](B8k[5][`f_3`]);
                B8k[2][`writeBoolean`](B8k[5][`f_4`]);
                B8k[2][`writeBoolean`](B8k[5][`f_p`]);
                B8k[2][`writeShort`](B8k[5][`fx`][`length`]);
                for (B8k[12] = 0; B8k[12] < B8k[5][`fx`][`length`]; B8k[12]++) {
                    B8k[2][`writeShort`](B8k[5][`fx`][B8k[12]]);
                }
            }
            B8k[2][`writeShort`](B8k[0][0][`spawns`][`length`]);
            for (B8k[91] = 0; B8k[91] < B8k[0][0][`spawns`][`length`]; B8k[91]++) {
                B8k[6] = B8k[0][0][`spawns`][B8k[91]];
                B8k[2][`writeDouble`](B8k[6][`x`]);
                B8k[2][`writeDouble`](B8k[6][`y`]);
                B8k[2][`writeDouble`](B8k[6][`xv`]);
                B8k[2][`writeDouble`](B8k[6][`yv`]);
                B8k[2][`writeShort`](B8k[6][`priority`]);
                B8k[2][`writeBoolean`](B8k[6][`r`]);
                B8k[2][`writeBoolean`](B8k[6][`f`]);
                B8k[2][`writeBoolean`](B8k[6][`b`]);
                B8k[2][`writeBoolean`](B8k[6][`gr`]);
                B8k[2][`writeBoolean`](B8k[6][`ye`]);
                B8k[2][`writeUTF`](B8k[6][`n`]);
            }
            B8k[2][`writeShort`](B8k[0][0][`capZones`][`length`]);
            for (B8k[87] = 0; B8k[87] < B8k[0][0][`capZones`][`length`]; B8k[87]++) {
                B8k[9] = B8k[0][0][`capZones`][B8k[87]];
                B8k[2][`writeUTF`](B8k[9][`n`]);
                B8k[2][`writeDouble`](B8k[9][`l`]);
                B8k[2][`writeShort`](B8k[9][`i`]);
                B8k[2][`writeShort`](B8k[9][`ty`]);
            }
            B8k[2][`writeShort`](B8k[7][`joints`][`length`]);
            for (B8k[39] = 0; B8k[39] < B8k[7][`joints`][`length`]; B8k[39]++) {
                B8k[4] = B8k[7][`joints`][B8k[39]];
                if (B8k[4][`type`] == `rv`) {
                    B8k[2][`writeShort`](1);
                    B8k[2][`writeDouble`](B8k[4][`d`][`la`]);
                    B8k[2][`writeDouble`](B8k[4][`d`][`ua`]);
                    B8k[2][`writeDouble`](B8k[4][`d`][`mmt`]);
                    B8k[2][`writeDouble`](B8k[4][`d`][`ms`]);
                    B8k[2][`writeBoolean`](B8k[4][`d`][`el`]);
                    B8k[2][`writeBoolean`](B8k[4][`d`][`em`]);
                    B8k[2][`writeDouble`](B8k[4][`aa`][0]);
                    B8k[2][`writeDouble`](B8k[4][`aa`][1]);
                }
                if (B8k[4][`type`] == `d`) {
                    B8k[2][`writeShort`](2);
                    B8k[2][`writeDouble`](B8k[4][`d`][`fh`]);
                    B8k[2][`writeDouble`](B8k[4][`d`][`dr`]);
                    B8k[2][`writeDouble`](B8k[4][`aa`][0]);
                    B8k[2][`writeDouble`](B8k[4][`aa`][1]);
                    B8k[2][`writeDouble`](B8k[4][`ab`][0]);
                    B8k[2][`writeDouble`](B8k[4][`ab`][1]);
                }
                if (B8k[4][`type`] == `lpj`) {
                    B8k[2][`writeShort`](3);
                    B8k[2][`writeDouble`](B8k[4][`pax`]);
                    B8k[2][`writeDouble`](B8k[4][`pay`]);
                    B8k[2][`writeDouble`](B8k[4][`pa`]);
                    B8k[2][`writeDouble`](B8k[4][`pf`]);
                    B8k[2][`writeDouble`](B8k[4][`pl`]);
                    B8k[2][`writeDouble`](B8k[4][`pu`]);
                    B8k[2][`writeDouble`](B8k[4][`plen`]);
                    B8k[2][`writeDouble`](B8k[4][`pms`]);
                }
                if (B8k[4][`type`] == `lsj`) {
                    B8k[2][`writeShort`](4);
                    B8k[2][`writeDouble`](B8k[4][`sax`]);
                    B8k[2][`writeDouble`](B8k[4][`say`]);
                    B8k[2][`writeDouble`](B8k[4][`sf`]);
                    B8k[2][`writeDouble`](B8k[4][`slen`]);
                }
                B8k[2][`writeShort`](B8k[4][`ba`]);
                B8k[2][`writeShort`](B8k[4][`bb`]);
                B8k[2][`writeBoolean`](B8k[4][`d`][`cc`]);
                B8k[2][`writeDouble`](B8k[4][`d`][`bf`]);
                B8k[2][`writeBoolean`](B8k[4][`d`][`dl`]);
                ;
            }
            B8k[35] = B8k[2][`toBase64`]();
            B8k[57] = LZString[`compressToEncodedURIComponent`](B8k[35]);
            return B8k[57];
        }
        ;
        T[`decodeFromDatabase`] = function(R5H) {
            var a8k = [arguments];
                        a8k[3] = LZString[`decompressFromEncodedURIComponent`](a8k[0][0]);
            I8yy.w9b();
            a8k[7] = new v2k[35]();
            a8k[7][`fromBase64`](a8k[3], false);
            a8k[1] = T[`getBlankMap`]();
            a8k[2] = a8k[1][`physics`];
            a8k[1][`v`] = a8k[7][`readShort`]();
            if (a8k[1][`v`] > v2k[79][`mapVersion`]) {
                throw new Error(`Future map version, please refresh page`);
            }
            a8k[1][`s`][`re`] = a8k[7][`readBoolean`]();
            a8k[1][`s`][`nc`] = a8k[7][`readBoolean`]();
            if (a8k[1][`v`] >= 3) {
                a8k[1][`s`][`pq`] = a8k[7][`readShort`]();
            }
            if (a8k[1][`v`] >= 4 && a8k[1][`v`] <= 12) {
                a8k[1][`s`][`gd`] = a8k[7][`readShort`]();
            } else if (a8k[1][`v`] >= 13) {
                a8k[1][`s`][`gd`] = a8k[7][`readFloat`]();
            }
            if (a8k[1][`v`] >= 9) {
                a8k[1][`s`][`fl`] = a8k[7][`readBoolean`]();
            }
            a8k[1][`m`][`rxn`] = a8k[7][`readUTF`]();
            a8k[1][`m`][`rxa`] = a8k[7][`readUTF`]();
            a8k[1][`m`][`rxid`] = a8k[7][`readUint`]();
            a8k[1][`m`][`rxdb`] = a8k[7][`readShort`]();
            a8k[1][`m`][`n`] = a8k[7][`readUTF`]();
            a8k[1][`m`][`a`] = a8k[7][`readUTF`]();
            if (a8k[1][`v`] >= 10) {
                a8k[1][`m`][`vu`] = a8k[7][`readUint`]();
                a8k[1][`m`][`vd`] = a8k[7][`readUint`]();
            }
            if (a8k[1][`v`] >= 4) {
                a8k[4] = a8k[7][`readShort`]();
                for (a8k[86] = 0; a8k[86] < a8k[4]; a8k[86]++) {
                    a8k[1][`m`][`cr`][`push`](a8k[7][`readUTF`]());
                }
            }
            if (a8k[1][`v`] >= 5) {
                a8k[1][`m`][`mo`] = a8k[7][`readUTF`]();
                a8k[1][`m`][`dbid`] = a8k[7][`readInt`]();
            }
            if (a8k[1][`v`] >= 7) {
                a8k[1][`m`][`pub`] = a8k[7][`readBoolean`]();
            }
            if (a8k[1][`v`] >= 8) {
                a8k[1][`m`][`dbv`] = a8k[7][`readInt`]();
            }
            a8k[2][`ppm`] = a8k[7][`readShort`]();
            a8k[9] = a8k[7][`readShort`]();
            for (a8k[99] = 0; a8k[99] < a8k[9]; a8k[99]++) {
                a8k[2][`bro`][a8k[99]] = a8k[7][`readShort`]();
            }
            a8k[8] = a8k[7][`readShort`]();
            for (a8k[70] = 0; a8k[70] < a8k[8]; a8k[70]++) {
                a8k[5] = a8k[7][`readShort`]();
                if (a8k[5] == 1) {
                    a8k[2][`shapes`][a8k[70]] = T[`getNewBoxShape`]();
                    a8k[2][`shapes`][a8k[70]][`w`] = a8k[7][`readDouble`]();
                    a8k[2][`shapes`][a8k[70]][`h`] = a8k[7][`readDouble`]();
                    a8k[2][`shapes`][a8k[70]][`c`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                    a8k[2][`shapes`][a8k[70]][`a`] = a8k[7][`readDouble`]();
                    a8k[2][`shapes`][a8k[70]][`sk`] = a8k[7][`readBoolean`]();
                }
                if (a8k[5] == 2) {
                    a8k[2][`shapes`][a8k[70]] = T[`getNewCircleShape`]();
                    a8k[2][`shapes`][a8k[70]][`r`] = a8k[7][`readDouble`]();
                    a8k[2][`shapes`][a8k[70]][`c`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                    a8k[2][`shapes`][a8k[70]][`sk`] = a8k[7][`readBoolean`]();
                }
                if (a8k[5] == 3) {
                    a8k[2][`shapes`][a8k[70]] = T[`getNewPolyShape`]();
                    a8k[2][`shapes`][a8k[70]][`s`] = a8k[7][`readDouble`]();
                    a8k[2][`shapes`][a8k[70]][`a`] = a8k[7][`readDouble`]();
                    a8k[2][`shapes`][a8k[70]][`c`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                    a8k[60] = a8k[7][`readShort`]();
                    a8k[2][`shapes`][a8k[70]][`v`] = [];
                    for (a8k[33] = 0; a8k[33] < a8k[60]; a8k[33]++) {
                        a8k[2][`shapes`][a8k[70]][`v`][`push`]([a8k[7][`readDouble`](), a8k[7][`readDouble`]()]);
                    }
                }
            }
            a8k[31] = a8k[7][`readShort`]();
            for (a8k[89] = 0; a8k[89] < a8k[31]; a8k[89]++) {
                a8k[2][`fixtures`][a8k[89]] = T[`getNewFixture`]();
                a8k[2][`fixtures`][a8k[89]][`sh`] = a8k[7][`readShort`]();
                a8k[2][`fixtures`][a8k[89]][`n`] = a8k[7][`readUTF`]();
                a8k[2][`fixtures`][a8k[89]][`fr`] = a8k[7][`readDouble`]();
                if (a8k[2][`fixtures`][a8k[89]][`fr`] == Number[`MAX_VALUE`]) {
                    a8k[2][`fixtures`][a8k[89]][`fr`] = null;
                }
                a8k[22] = a8k[7][`readShort`]();
                if (a8k[22] == 0) {
                    a8k[2][`fixtures`][a8k[89]][`fp`] = null;
                }
                if (a8k[22] == 1) {
                    a8k[2][`fixtures`][a8k[89]][`fp`] = false;
                }
                if (a8k[22] == 2) {
                    a8k[2][`fixtures`][a8k[89]][`fp`] = true;
                }
                a8k[2][`fixtures`][a8k[89]][`re`] = a8k[7][`readDouble`]();
                if (a8k[2][`fixtures`][a8k[89]][`re`] == Number[`MAX_VALUE`]) {
                    a8k[2][`fixtures`][a8k[89]][`re`] = null;
                }
                a8k[2][`fixtures`][a8k[89]][`de`] = a8k[7][`readDouble`]();
                if (a8k[2][`fixtures`][a8k[89]][`de`] == Number[`MAX_VALUE`]) {
                    a8k[2][`fixtures`][a8k[89]][`de`] = null;
                }
                a8k[2][`fixtures`][a8k[89]][`f`] = a8k[7][`readUint`]();
                a8k[2][`fixtures`][a8k[89]][`d`] = a8k[7][`readBoolean`]();
                a8k[2][`fixtures`][a8k[89]][`np`] = a8k[7][`readBoolean`]();
                if (a8k[1][`v`] >= 11) {
                    a8k[2][`fixtures`][a8k[89]][`ng`] = a8k[7][`readBoolean`]();
                }
                if (a8k[1][`v`] >= 12) {
                    a8k[2][`fixtures`][a8k[89]][`ig`] = a8k[7][`readBoolean`]();
                }
            }
            a8k[41] = a8k[7][`readShort`]();
            for (a8k[20] = 0; a8k[20] < a8k[41]; a8k[20]++) {
                a8k[2][`bodies`][a8k[20]] = T[`getNewBody`]();
                a8k[2][`bodies`][a8k[20]][`type`] = a8k[7][`readUTF`]();
                a8k[2][`bodies`][a8k[20]][`n`] = a8k[7][`readUTF`]();
                a8k[2][`bodies`][a8k[20]][`p`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                a8k[2][`bodies`][a8k[20]][`a`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`fric`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`fricp`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`re`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`de`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`lv`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                a8k[2][`bodies`][a8k[20]][`av`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`ld`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`ad`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`fr`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`bu`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`cf`][`x`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`cf`][`y`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`cf`][`ct`] = a8k[7][`readDouble`]();
                a8k[2][`bodies`][a8k[20]][`cf`][`w`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`f_c`] = a8k[7][`readShort`]();
                a8k[2][`bodies`][a8k[20]][`f_1`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`f_2`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`f_3`] = a8k[7][`readBoolean`]();
                a8k[2][`bodies`][a8k[20]][`f_4`] = a8k[7][`readBoolean`]();
                if (a8k[1][`v`] >= 2) {
                    a8k[2][`bodies`][a8k[20]][`f_p`] = a8k[7][`readBoolean`]();
                }
                a8k[50] = a8k[7][`readShort`]();
                for (a8k[66] = 0; a8k[66] < a8k[50]; a8k[66]++) {
                    a8k[2][`bodies`][a8k[20]][`fx`][`push`](a8k[7][`readShort`]());
                }
            }
            a8k[48] = a8k[7][`readShort`]();
            for (a8k[36] = 0; a8k[36] < a8k[48]; a8k[36]++) {
                a8k[1][`spawns`][a8k[36]] = T[`getNewSpawn`]();
                a8k[80] = a8k[1][`spawns`][a8k[36]];
                a8k[80][`x`] = a8k[7][`readDouble`]();
                a8k[80][`y`] = a8k[7][`readDouble`]();
                a8k[80][`xv`] = a8k[7][`readDouble`]();
                a8k[80][`yv`] = a8k[7][`readDouble`]();
                a8k[80][`priority`] = a8k[7][`readShort`]();
                a8k[80][`r`] = a8k[7][`readBoolean`]();
                a8k[80][`f`] = a8k[7][`readBoolean`]();
                a8k[80][`b`] = a8k[7][`readBoolean`]();
                a8k[80][`gr`] = a8k[7][`readBoolean`]();
                a8k[80][`ye`] = a8k[7][`readBoolean`]();
                a8k[80][`n`] = a8k[7][`readUTF`]();
            }
            a8k[40] = a8k[7][`readShort`]();
            for (a8k[18] = 0; a8k[18] < a8k[40]; a8k[18]++) {
                a8k[1][`capZones`][a8k[18]] = T[`getNewCapZone`]();
                a8k[1][`capZones`][a8k[18]][`n`] = a8k[7][`readUTF`]();
                a8k[1][`capZones`][a8k[18]][`l`] = a8k[7][`readDouble`]();
                a8k[1][`capZones`][a8k[18]][`i`] = a8k[7][`readShort`]();
                if (a8k[1][`v`] >= 6) {
                    a8k[1][`capZones`][a8k[18]][`ty`] = a8k[7][`readShort`]();
                }
            }
            a8k[39] = a8k[7][`readShort`]();
            for (a8k[94] = 0; a8k[94] < a8k[39]; a8k[94]++) {
                a8k[75] = a8k[7][`readShort`]();
                if (a8k[75] == 1) {
                    a8k[2][`joints`][a8k[94]] = T[`getNewRevoluteJoint`]();
                    a8k[53] = a8k[2][`joints`][a8k[94]];
                    a8k[53][`d`][`la`] = a8k[7][`readDouble`]();
                    a8k[53][`d`][`ua`] = a8k[7][`readDouble`]();
                    a8k[53][`d`][`mmt`] = a8k[7][`readDouble`]();
                    a8k[53][`d`][`ms`] = a8k[7][`readDouble`]();
                    a8k[53][`d`][`el`] = a8k[7][`readBoolean`]();
                    a8k[53][`d`][`em`] = a8k[7][`readBoolean`]();
                    a8k[53][`aa`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                }
                if (a8k[75] == 2) {
                    a8k[2][`joints`][a8k[94]] = T[`getNewDistanceJoint`]();
                    a8k[27] = a8k[2][`joints`][a8k[94]];
                    a8k[27][`d`][`fh`] = a8k[7][`readDouble`]();
                    a8k[27][`d`][`dr`] = a8k[7][`readDouble`]();
                    a8k[27][`aa`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                    a8k[27][`ab`] = [a8k[7][`readDouble`](), a8k[7][`readDouble`]()];
                }
                if (a8k[75] == 3) {
                    a8k[2][`joints`][a8k[94]] = T[`getNewLPJJoint`]();
                    a8k[23] = a8k[2][`joints`][a8k[94]];
                    a8k[23][`pax`] = a8k[7][`readDouble`]();
                    a8k[23][`pay`] = a8k[7][`readDouble`]();
                    a8k[23][`pa`] = a8k[7][`readDouble`]();
                    a8k[23][`pf`] = a8k[7][`readDouble`]();
                    a8k[23][`pl`] = a8k[7][`readDouble`]();
                    a8k[23][`pu`] = a8k[7][`readDouble`]();
                    a8k[23][`plen`] = a8k[7][`readDouble`]();
                    a8k[23][`pms`] = a8k[7][`readDouble`]();
                }
                if (a8k[75] == 4) {
                    a8k[2][`joints`][a8k[94]] = T[`getNewLSJJoint`]();
                    a8k[47] = a8k[2][`joints`][a8k[94]];
                    a8k[47][`sax`] = a8k[7][`readDouble`]();
                    a8k[47][`say`] = a8k[7][`readDouble`]();
                    a8k[47][`sf`] = a8k[7][`readDouble`]();
                    a8k[47][`slen`] = a8k[7][`readDouble`]();
                }
                a8k[2][`joints`][a8k[94]][`ba`] = a8k[7][`readShort`]();
                a8k[2][`joints`][a8k[94]][`bb`] = a8k[7][`readShort`]();
                a8k[2][`joints`][a8k[94]][`d`][`cc`] = a8k[7][`readBoolean`]();
                a8k[2][`joints`][a8k[94]][`d`][`bf`] = a8k[7][`readDouble`]();
                a8k[2][`joints`][a8k[94]][`d`][`dl`] = a8k[7][`readBoolean`]();
                ;
            }
            return a8k[1];
        }
        ;
        T[`getBlankMap`] = function() {
            var t8k = [arguments];
            t8k[6] = {
                v: 1,
                s: {
                    re: false,
                    nc: false,
                    pq: 1,
                    gd: 25,
                    fl: false
                },
                physics: {
                    shapes: [],
                    fixtures: [],
                    bodies: [],
                    bro: [],
                    joints: [],
                    ppm: 12
                },
                spawns: [],
                capZones: [],
                m: {
                    a: `noauthor`,
                    n: `noname`,
                    dbv: 2,
                    dbid: -1,
                    authid: -1,
                    date: ``,
                    rxid: 0,
                    rxn: ``,
                    rxa: ``,
                    rxdb: 1,
                    cr: [],
                    pub: false,
                    mo: ``
                }
            };
            return t8k[6];
        }
        ;
        T[`getNewBody`] = function() {
            I8yy.w9b();
            var E8k = [arguments];
            E8k[2] = {
                type: `s`,
                n: `Unnamed`,
                p: [0, 0],
                a: 0,
                fric: 0.3,
                fricp: false,
                re: 0.8,
                de: 0.3,
                lv: [0, 0],
                av: 0,
                ld: 0,
                ad: 0,
                fr: false,
                bu: false,
                cf: {
                    x: 0,
                    y: 0,
                    w: true,
                    ct: 0
                },
                fx: [],
                f_c: 1,
                f_p: true,
                f_1: true,
                f_2: true,
                f_3: true,
                f_4: true
            };
            return E8k[2];
        }
        ;
        T[`getNewFixture`] = function(j4H) {
            var R8k = [arguments];
            I8yy.g9b();
            R8k[3] = {
                sh: R8k[0][0],
                n: `Def Fix`,
                fr: 0.3,
                fp: null,
                re: 0.8,
                de: 0.3,
                f: 0x4F7CAC,
                d: false,
                np: false,
                ng: false
            };
            return R8k[3];
        }
        ;
        T[`getNewBoxShape`] = function() {
            var j3k = [arguments];
            j3k[2] = {
                type: `bx`,
                w: 10,
                h: 40,
                c: [0, 0],
                a: 0.0,
                sk: false
            };
            return j3k[2];
        }
        ;
        T[`getNewCircleShape`] = function() {
            var k3k = [arguments];
            k3k[6] = {
                type: `ci`,
                r: 25,
                c: [0, 0],
                sk: false
            };
            return k3k[6];
        }
        ;
        T[`getNewPolyShape`] = function() {
            var f3k = [arguments];
            I8yy.g9b();
            f3k[8] = {
                type: `po`,
                v: [],
                s: 1,
                a: 0,
                c: [0, 0]
            };
            return f3k[8];
        }
        ;
        T[`getNewChainShape`] = function() {
            var G3k = [arguments];
            G3k[3] = {
                type: `ch`,
                v: [],
                s: 1,
                a: 0,
                c: [0, 0],
                l: false,
                sk: false
            };
            return G3k[3];
        }
        ;
        function N4() {
            var T3k = [arguments];
            function m22() {
                var K3k = [arguments];
                                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                if (!T3k[4][`layers`][T3k[9] + 1]) {
                    return;
                }
                I8yy.P2k(0);
                I8yy.g9b();
                K3k[2] = T3k[4][`layers`][I8yy.r2k(T3k[9], 1)];
                I8yy.P2k(0);
                T3k[4][`layers`][I8yy.A2k(T3k[9], 1)] = T3k[4][`layers`][T3k[9]];
                T3k[4][`layers`][T3k[9]] = K3k[2];
                T3k[9]++;
                G72();
                C72();
            }
                        T3k[9] = -1;
            T3k[1] = false;
            T3k[5] = 1;
            T3k[6] = new S4();
            T3k[8] = document[`getElementById`](`skineditorcontainer`);
            T3k[3] = document[`getElementById`](`skineditor_layerbox`);
            T3k[2] = document[`getElementById`](`skineditor_layerbox_scrollcontainer`);
            T3k[17] = document[`getElementById`](`skineditor_layerbox_layertable`);
            T3k[79] = document[`getElementById`](`skineditor_layerbox_colorrect`);
            T3k[99] = document[`getElementById`](`skineditor_propertiesbox`);
            T3k[30] = document[`getElementById`](`skineditor_propertiesbox_table`);
            T3k[48] = document[`getElementById`](`skineditor_previewbox`);
            T3k[67] = document[`getElementById`](`skineditor_previewbox_skincontainer`);
            T3k[70] = new f4();
            I8yy.g9b();
            T3k[82] = document[`getElementById`](`skineditor_savebutton`);
            function J22() {
                var r3k = [arguments];
                I8yy.w9b();
                                T3k[67][`style`][`cursor`] = `grab`;
            }
            T3k[92] = document[`getElementById`](`skineditor_cancelbutton`);
            T3k[92][`onmousedown`] = v2k[79][`bbs`];
            T3k[53] = document[`getElementById`](`skineditor_propertiesbox_upbutton`);
            T3k[68] = document[`getElementById`](`skineditor_propertiesbox_downbutton`);
            T3k[41] = document[`getElementById`](`skineditor_propertiesbox_deletebutton`);
            T3k[86] = document[`getElementById`](`skineditor_propertiesbox_blocker`);
            T3k[32] = document[`getElementById`](`skineditor_previewbox_teamdropdown`);
            T3k[75] = document[`getElementById`](`skineditor_previewbox_teamdropdown_title`);
            T3k[59] = document[`getElementById`](`skineditor_previewbox_teamdropdown_option1`);
            T3k[60] = document[`getElementById`](`skineditor_previewbox_teamdropdown_option2`);
            T3k[66] = document[`getElementById`](`skineditor_previewbox_teamdropdown_option3`);
            T3k[34] = document[`getElementById`](`skineditor_previewbox_teamdropdown_option4`);
            T3k[56] = document[`getElementById`](`skineditor_previewbox_teamdropdown_option5`);
            function x72() {
                I8yy.g9b();
                var A3k = [arguments];
                                if (T3k[9] != -1 && T3k[4][`layers`][T3k[9]]) {
                    T3k[87][`textContent`] = j22(T3k[4][`layers`][T3k[9]][`id`]);
                    T3k[77][`value`] = I22(T3k[4][`layers`][T3k[9]][`x`]);
                    T3k[57][`value`] = I22(T3k[4][`layers`][T3k[9]][`y`]);
                    T3k[37][`value`] = I22(T3k[4][`layers`][T3k[9]][`angle`]);
                    T3k[47][`value`] = I22(T3k[4][`layers`][T3k[9]][`scale`]);
                    T3k[24][`textContent`] = p22(T3k[4][`layers`][T3k[9]][`flipX`]);
                    T3k[28][`textContent`] = p22(T3k[4][`layers`][T3k[9]][`flipY`]);
                    I8yy.H2k(93);
                    A3k[7] = I8yy.r2k(3, 9, 583, 1742, 14);
                    I8yy.P2k(113);
                    A3k[5] = I8yy.r2k(17, 372, 34, 20);
                    I8yy.P2k(40);
                    A3k[6] = I8yy.r2k(20, 27, 408);
                    A3k[9] = v8yy[A3k[7]] + v22(T3k[4][v8yy[A3k[5]]][T3k[9]][v8yy[A3k[6]]]);
                    T3k[96][`style`][`backgroundColor`] = A3k[9];
                    T3k[86][`style`][`visibility`] = `hidden`;
                } else {
                    T3k[87][`textContent`] = ``;
                    T3k[77][`value`] = ``;
                    T3k[57][`value`] = ``;
                    T3k[37][`value`] = ``;
                    T3k[47][`value`] = ``;
                    T3k[24][`textContent`] = ``;
                    T3k[28][`textContent`] = ``;
                    T3k[96][`style`][`backgroundColor`] = `#cccccc`;
                    T3k[86][`style`][`visibility`] = `inherit`;
                }
                T3k[41][`textContent`] = `DELETE LAYER`;
            }
            T3k[75][`onclick`] = M22;
            T3k[59][`onclick`] = P72;
            T3k[60][`onclick`] = P72;
            function A22(...P8C) {
                var P3k = [arguments];
                                P3k[3] = P8C[`shift`]();
                for (P3k[6] = 0; P3k[6] < T3k[44][`length`]; P3k[6]++) {
                    if (T3k[44][P3k[6]][`eventName`] == P3k[3]) {
                        T3k[44][P3k[6]][`callback`](...P8C);
                    }
                }
            }
            T3k[66][`onclick`] = P72;
            T3k[34][`onclick`] = P72;
            T3k[56][`onclick`] = P72;
            T3k[87] = document[`getElementById`](`skineditor_propertiesbox_table_shape`);
            T3k[77] = document[`getElementById`](`skineditor_propertiesbox_table_x`);
            function e22() {
                var H3k = [arguments];
                                I8yy.w9b();
                if (T3k[9] != -1 && T3k[4][`layers`][T3k[9]]) {
                    I8yy.H2k(1);
                    H3k[1] = I8yy.r2k(13, 2346);
                    I8yy.P2k(29);
                    H3k[9] = I8yy.A2k(2884, 6, 408, 121, 20);
                    I8yy.P2k(0);
                    H3k[8] = I8yy.r2k(208, 207);
                    H3k[6] = v8yy[H3k[1]] + v22(T3k[4][v8yy[H3k[9]]][T3k[9]][v8yy[H3k[8]]]);
                    T3k[96][`style`][`backgroundColor`] = H3k[6];
                } else {
                    H3k[5] = -1704135514;
                    H3k[4] = 1309517402;
                    H3k[2] = 2;
                    for (H3k[7] = 1; I8yy.m1f(H3k[7].toString(), H3k[7].toString().length, 92104) !== H3k[5]; H3k[7]++) {
                        T3k[96][`style`][`backgroundColor`] = `#cccccc`;
                        H3k[2] += 2;
                    }
                    if (I8yy.m1f(H3k[2].toString(), H3k[2].toString().length, 16150) !== H3k[4]) {
                        T3k[96][`swing2`][`roomlisthidepasswordedcheckbox`] = ``;
                    }
                }
            }
            T3k[57] = document[`getElementById`](`skineditor_propertiesbox_table_y`);
            T3k[37] = document[`getElementById`](`skineditor_propertiesbox_table_angle`);
            T3k[47] = document[`getElementById`](`skineditor_propertiesbox_table_scale`);
            function S22() {
                I8yy.g9b();
                N22();
                T3k[93] = setTimeout(S22, 30);
            }
            T3k[24] = document[`getElementById`](`skineditor_propertiesbox_table_flipx`);
            T3k[28] = document[`getElementById`](`skineditor_propertiesbox_table_flipy`);
            T3k[96] = document[`getElementById`](`skineditor_propertiesbox_colorrect`);
            document[`getElementById`](`skineditor_x_down`)[`onmousedown`] = Y72;
            document[`getElementById`](`skineditor_x_up`)[`onmousedown`] = Y72;
            function P72(k4H) {
                var v3k = [arguments];
                                if (v3k[0][0][`target`] == T3k[59]) {
                    T3k[75][`innerHTML`] = T3k[59][`innerHTML`];
                    T3k[5] = 1;
                }
                if (v3k[0][0][`target`] == T3k[60]) {
                    T3k[75][`innerHTML`] = T3k[60][`innerHTML`];
                    T3k[5] = 2;
                }
                if (v3k[0][0][`target`] == T3k[66]) {
                    T3k[75][`innerHTML`] = T3k[66][`innerHTML`];
                    T3k[5] = 3;
                }
                if (v3k[0][0][`target`] == T3k[34]) {
                    T3k[75][`innerHTML`] = T3k[34][`innerHTML`];
                    T3k[5] = 4;
                }
                if (v3k[0][0][`target`] == T3k[56]) {
                    T3k[75][`innerHTML`] = T3k[56][`innerHTML`];
                    T3k[5] = 5;
                }
                T3k[6][`setTeam`](T3k[5]);
                I8yy.g9b();
                C72();
                x22();
            }
            document[`getElementById`](`skineditor_y_down`)[`onmousedown`] = Y72;
            document[`getElementById`](`skineditor_y_up`)[`onmousedown`] = Y72;
            document[`getElementById`](`skineditor_angle_down`)[`onmousedown`] = Y72;
            document[`getElementById`](`skineditor_angle_up`)[`onmousedown`] = Y72;
            document[`getElementById`](`skineditor_scale_down`)[`onmousedown`] = Y72;
            document[`getElementById`](`skineditor_scale_up`)[`onmousedown`] = Y72;
            L22();
            T3k[82][`onclick`] = function() {
                I8yy.g9b();
                A22(`saveAvatar`, T3k[4]);
            }
            ;
            T3k[92][`onclick`] = function() {
                A22(`cancel`);
            }
            ;
            v2k[79][`setButtonSounds`]([T3k[96], T3k[79]]);
            T3k[77][`propType`] = `x`;
            T3k[57][`propType`] = `y`;
            T3k[37][`propType`] = `angle`;
            function i72(f4H) {
                var i3k = [arguments];
                                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                i3k[4] = parseFloat(i3k[0][0][`target`][`value`]);
                if (isNaN(i3k[4])) {
                    return;
                }
                I8yy.g9b();
                if (i3k[0][0][`target`][`propType`] == `x`) {
                    if (!(i3k[4] >= -99999 && i3k[4] <= 99999)) {
                        return;
                    }
                    T3k[4][`layers`][T3k[9]][`x`] = i3k[4];
                    T3k[6][`changeLayerProperty`](T3k[9], i3k[0][0][`target`][`propType`], T3k[4][`layers`][T3k[9]][i3k[0][0][`target`][`propType`]]);
                }
                if (i3k[0][0][`target`][`propType`] == `y`) {
                    if (!(i3k[4] >= -99999 && i3k[4] <= 99999)) {
                        return;
                    }
                    T3k[4][`layers`][T3k[9]][`y`] = i3k[4];
                    T3k[6][`changeLayerProperty`](T3k[9], i3k[0][0][`target`][`propType`], T3k[4][`layers`][T3k[9]][i3k[0][0][`target`][`propType`]]);
                }
                if (i3k[0][0][`target`][`propType`] == `scale`) {
                    if (!(i3k[4] >= -10 && i3k[4] <= 10)) {
                        return;
                    }
                    T3k[4][`layers`][T3k[9]][`scale`] = i3k[4];
                    T3k[6][`redrawLayer`](T3k[4], T3k[9]);
                }
                if (i3k[0][0][`target`][`propType`] == `angle`) {
                    if (!(i3k[4] >= -9999 && i3k[4] <= 9999)) {
                        return;
                    }
                    T3k[4][`layers`][T3k[9]][`angle`] = i3k[4];
                    T3k[6][`changeLayerProperty`](T3k[9], i3k[0][0][`target`][`propType`], T3k[4][`layers`][T3k[9]][i3k[0][0][`target`][`propType`]]);
                }
            }
            T3k[47][`propType`] = `scale`;
            T3k[24][`propType`] = `flipx`;
            T3k[28][`propType`] = `flipy`;
            T3k[87][`onclick`] = n22;
            T3k[77][`oninput`] = i72;
            T3k[57][`oninput`] = i72;
            T3k[37][`oninput`] = i72;
            T3k[47][`oninput`] = i72;
            T3k[24][`onclick`] = f22;
            T3k[28][`onclick`] = f22;
            T3k[96][`onclick`] = function() {
                var u3k = [arguments];
                                if (T3k[4][`layers`][T3k[9]]) {
                    T3k[70][`showColorPicker`](T3k[4][`layers`][T3k[9]][`color`], T3k[4], V22, null);
                }
            }
            ;
            T3k[53][`onclick`] = G22;
            T3k[68][`onclick`] = m22;
            T3k[41][`onclick`] = b22;
            T3k[99][`onmouseover`] = w22;
            T3k[48][`onmouseover`] = w22;
            T3k[79][`onclick`] = X22;
            function N22() {
                var b3k = [arguments];
                                b3k[7] = T3k[50];
                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                if (b3k[7][`target`][`id`] == `skineditor_x_up`) {
                    T3k[4][`layers`][T3k[9]][`x`] += 0.1;
                    T3k[6][`changeLayerProperty`](T3k[9], `x`, T3k[4][`layers`][T3k[9]][`x`]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_x_down`) {
                    T3k[4][`layers`][T3k[9]][`x`] -= 0.1;
                    T3k[6][`changeLayerProperty`](T3k[9], `x`, T3k[4][`layers`][T3k[9]][`x`]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_y_up`) {
                    T3k[4][`layers`][T3k[9]][`y`] += 0.1;
                    T3k[6][`changeLayerProperty`](T3k[9], `y`, T3k[4][`layers`][T3k[9]][`y`]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_y_down`) {
                    T3k[4][`layers`][T3k[9]][`y`] -= 0.1;
                    T3k[6][`changeLayerProperty`](T3k[9], `y`, T3k[4][`layers`][T3k[9]][`y`]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_angle_up`) {
                    T3k[4][`layers`][T3k[9]][`angle`] += 1;
                    T3k[6][`changeLayerProperty`](T3k[9], `angle`, T3k[4][`layers`][T3k[9]][`angle`]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_angle_down`) {
                    T3k[4][`layers`][T3k[9]][`angle`] -= 1;
                    T3k[6][`changeLayerProperty`](T3k[9], `angle`, T3k[4][`layers`][T3k[9]][`angle`]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_scale_up`) {
                    if (T3k[4][`layers`][T3k[9]][`scale`] < 0.2) {
                        T3k[4][`layers`][T3k[9]][`scale`] += 0.005;
                    } else {
                        T3k[4][`layers`][T3k[9]][`scale`] += 0.01;
                    }
                    T3k[6][`redrawLayer`](T3k[4], T3k[9]);
                }
                if (b3k[7][`target`][`id`] == `skineditor_scale_down`) {
                    if (T3k[4][`layers`][T3k[9]][`scale`] < 0.2) {
                        T3k[4][`layers`][T3k[9]][`scale`] -= 0.005;
                    } else {
                        T3k[4][`layers`][T3k[9]][`scale`] -= 0.01;
                    }
                    T3k[6][`redrawLayer`](T3k[4], T3k[9]);
                }
                x72();
            }
            function n22() {
                var d3k = [arguments];
                                if (!T3k[40]) {
                    T3k[40] = document[`createElement`](`div`);
                    T3k[40][`classList`][`add`](`skineditor_shapewindow`);
                    T3k[40][`classList`][`add`](`windowShadow`);
                    d3k[9] = document[`createElement`](`div`);
                    d3k[9][`classList`][`add`](`skineditor_basiccolorpicker_closebutton`);
                    d3k[9][`classList`][`add`](`buttonShadow`);
                    T3k[40][`appendChild`](d3k[9]);
                    d3k[9][`onclick`] = F22;
                    d3k[9][`onmousedown`] = v2k[79][`bbs`];
                    for (d3k[6] = 1; d3k[6] < 115; d3k[6]++) {
                        d3k[4] = document[`createElement`](`div`);
                        d3k[4][`classList`][`add`](`skineditor_shapewindow_imagecontainer`);
                        d3k[2] = parseInt(d3k[6]);
                        if (d3k[6] < 10) {
                            I8yy.P2k(15);
                            d3k[1] = I8yy.A2k(23637, 1696, 7, 15);
                            d3k[2] = v8yy[d3k[1]] + d3k[2];
                        }
                        if (d3k[6] < 100) {
                            I8yy.P2k(9);
                            d3k[5] = I8yy.r2k(365070, 12, 30564);
                            d3k[2] = v8yy[d3k[5]] + d3k[2];
                        }
                        I8yy.P2k(122);
                        d3k[8] = I8yy.A2k(51, 138, 17, 2346, 46);
                        I8yy.P2k(0);
                        d3k[3] = I8yy.r2k(407, 14);
                        I8yy.P2k(36);
                        d3k[51] = I8yy.r2k(2287, 1, 10);
                        d3k[4][`style`][`backgroundImage`] = v8yy[d3k[8]] + GameResources[v8yy[d3k[3]]][d3k[6]] + v8yy[d3k[51]];
                        T3k[40][`appendChild`](d3k[4]);
                        d3k[4][`onclick`] = h22;
                        d3k[4][`onmouseover`] = v2k[79][`rlh`];
                        d3k[4][`onmousedown`] = v2k[79][`bcs`];
                        d3k[4][`shapeID`] = d3k[6];
                    }
                    T3k[99][`appendChild`](T3k[40]);
                }
                T3k[40][`style`][`visibility`] = `inherit`;
                T3k[8][`style`][`pointerEvents`] = `none`;
            }
            function c22() {
                var e3k = [arguments];
                                T3k[9] = parseInt(this[`id`]);
                I8yy.w9b();
                J22();
                x72();
                G72();
                if (!T3k[4][`layers`][T3k[9]]) {
                    n22();
                }
            }
            v2k[79][`setButtonSounds`]([T3k[92], T3k[82], T3k[53], T3k[68], T3k[41]]);
            this[`show`] = function(G4H) {
                var C3k = [arguments];
                                T3k[8][`style`][`visibility`] = `inherit`;
                T3k[4] = new v2k[38]();
                T3k[4][`fromString`](C3k[0][0][`toString`]());
                T3k[9] = -1;
                L22();
                T3k[5] = 1;
                T3k[75][`innerHTML`] = T3k[59][`innerHTML`];
                T3k[2][`scrollTop`] = 0;
                G72();
                C72();
                x72();
                T3k[8][`style`][`opacity`] = 0;
                C3k[8] = anime({
                    targets: T3k[8],
                    opacity: `1`,
                    autoplay: true,
                    duration: 350,
                    easing: `easeOutCubic`
                });
            }
            ;
            this[`hide`] = function() {
                var l3k = [arguments];
                                anime({
                    targets: T3k[8],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var o3k = [arguments];
                        I8yy.w9b();
                                                T3k[8][`style`][`visibility`] = `hidden`;
                    }
                });
                T3k[70][`closeColorPicker`]();
                T3k[6][`clearMemory`]();
            }
            ;
            T3k[50] = null;
            T3k[93] = null;
            T3k[27] = 0;
            T3k[43] = 0;
            T3k[10] = null;
            T3k[33] = 0;
            T3k[67][`onmousedown`] = d22;
            T3k[44] = [];
            this[`on`] = function(T4H, K4H) {
                I8yy.g9b();
                var I3k = [arguments];
                                T3k[44][`push`]({
                    eventName: I3k[0][0],
                    callback: I3k[0][1]
                });
            }
            ;
            T3k[36] = [];
            T3k[36][1] = `Alien 1`;
            T3k[36][2] = `Alien 2`;
            T3k[36][3] = `Alien 3`;
            T3k[36][4] = `Alien 4`;
            T3k[36][5] = `Alien 5`;
            T3k[36][6] = `Alien 6`;
            T3k[36][7] = `Barbed wire 1`;
            T3k[36][8] = `Barbed wire 2`;
            T3k[36][9] = `Barbed wire 3`;
            T3k[36][10] = `Barbed wire 4`;
            T3k[36][11] = `Barbed wire 5`;
            T3k[36][12] = `Barbed wire 6`;
            function w22() {
                if (T3k[1]) {
                    C72();
                }
            }
            T3k[36][13] = `Circle`;
            T3k[36][14] = `Crescent`;
            T3k[36][15] = `Cross 1`;
            T3k[36][16] = `Cross 2`;
            T3k[36][17] = `Cross 3`;
            T3k[36][18] = `Cross 4`;
            T3k[36][19] = `Cross 5`;
            T3k[36][20] = `Cross 6`;
            function B22(r4H, A4H, P4H, H4H) {
                var F3k = [arguments];
                                if (T3k[18]) {
                    T3k[18][`parentNode`][`removeChild`](T3k[18]);
                    T3k[18] = null;
                    return;
                }
                T3k[18] = document[`createElement`](`div`);
                T3k[18][`classList`][`add`](`sm_pickerContainer`);
                T3k[18][`classList`][`add`](`windowShadow`);
                I8yy.H2k(43);
                F3k[5] = I8yy.A2k(1, 1, 145, 1596);
                T3k[18][`style`][`top`] = F3k[0][2] + 35 + v8yy[F3k[5]];
                I8yy.P2k(32);
                F3k[8] = I8yy.A2k(27872, 29597, 16);
                T3k[18][`style`][`left`] = F3k[0][3] + v8yy[F3k[8]];
                F3k[6] = document[`createElement`](`div`);
                F3k[6][`classList`][`add`](`skineditor_basiccolorpicker_closebutton`);
                F3k[6][`classList`][`add`](`buttonShadow`);
                T3k[18][`appendChild`](F3k[6]);
                F3k[6][`onclick`] = hideColorPicker;
                for (F3k[7] = 0; F3k[7] < v2k[79][`colors`][`length`]; F3k[7]++) {
                    F3k[9] = document[`createElement`](`div`);
                    F3k[9][`classList`][`add`](`sm_pickerColorContainer`);
                    T3k[18][`appendChild`](F3k[9]);
                    F3k[1] = document[`createElement`](`div`);
                    F3k[1][`classList`][`add`](`sm_pickerColorInner`);
                    F3k[1][`style`][`backgroundColor`] = v2k[79][`numToHex`](v2k[79][`colors`][F3k[7]]);
                    F3k[9][`appendChild`](F3k[1]);
                    F3k[1][`colorVal`] = v2k[79][`colors`][F3k[7]];
                    F3k[1][`onclick`] = function() {
                        var L3k = [arguments];
                                                (1,
                        F3k[0][0])(this[`colorVal`]);
                        ;
                    }
                    ;
                }
                F3k[0][1][`appendChild`](T3k[18]);
                T3k[18][`style`][`opacity`] = `0`;
                F3k[3] = anime({
                    targets: T3k[18],
                    top: F3k[0][2] + `px`,
                    opacity: 1,
                    autoplay: true,
                    duration: 150,
                    easing: `easeOutCubic`
                });
            }
            function f22(v4H) {
                var J3k = [arguments];
                                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                if (J3k[0][0][`target`][`propType`] == `flipx`) {
                    T3k[4][`layers`][T3k[9]][`flipX`] = !T3k[4][`layers`][T3k[9]][`flipX`];
                    T3k[6][`changeLayerProperty`](T3k[9], `flipX`, T3k[4][`layers`][T3k[9]][`flipX`]);
                }
                if (J3k[0][0][`target`][`propType`] == `flipy`) {
                    T3k[4][`layers`][T3k[9]][`flipY`] = !T3k[4][`layers`][T3k[9]][`flipY`];
                    T3k[6][`changeLayerProperty`](T3k[9], `flipY`, T3k[4][`layers`][T3k[9]][`flipY`]);
                }
                x72();
            }
            T3k[36][21] = `Cross 7`;
            function V22(i4H) {
                I8yy.g9b();
                var h3k = [arguments];
                                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                T3k[4][`layers`][T3k[9]][`color`] = h3k[0][0];
                T3k[6][`changeLayerProperty`](T3k[9], `color`, h3k[0][0]);
                e22();
            }
            T3k[36][22] = `Face 1`;
            T3k[36][23] = `Face 10`;
            T3k[36][24] = `Face 11`;
            T3k[36][25] = `Face 12`;
            T3k[36][26] = `Face 13`;
            T3k[36][27] = `Face 14`;
            T3k[36][28] = `Face 15`;
            T3k[36][29] = `Face 16`;
            T3k[36][30] = `Face 18`;
            T3k[36][31] = `Face 19`;
            function M22(u4H) {
                var X3k = [arguments];
                                if (T3k[59][`style`][`display`] == `block`) {
                    x22();
                } else {
                    T3k[59][`style`][`display`] = `block`;
                    T3k[60][`style`][`display`] = `block`;
                    T3k[66][`style`][`display`] = `block`;
                    T3k[34][`style`][`display`] = `block`;
                    T3k[56][`style`][`display`] = `block`;
                    X3k[0][0][`stopPropagation`]();
                }
            }
            T3k[36][32] = `Face 2`;
            T3k[36][33] = `Face 20`;
            T3k[36][34] = `Face 21`;
            T3k[36][35] = `Face 22`;
            function b22() {
                var m3k = [arguments];
                                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                if (this[`textContent`] != `SURE?`) {
                    this[`textContent`] = `SURE?`;
                    return;
                }
                T3k[4][`layers`][`splice`](T3k[9], 1);
                T3k[9] = -1;
                L22();
                G72();
                C72();
                x72();
            }
            T3k[36][36] = `Face 3`;
            T3k[36][37] = `Face 4`;
            T3k[36][38] = `Face 5`;
            T3k[36][39] = `Face 6`;
            T3k[36][40] = `Face 7`;
            T3k[36][41] = `Face 8`;
            T3k[36][42] = `Face 9`;
            T3k[36][43] = `Flames 1`;
            function j22(b4H) {
                I8yy.g9b();
                var Q3k = [arguments];
                return T3k[36][Q3k[0][0]];
            }
            T3k[36][44] = `Flames 10`;
            function L22() {
                I8yy.w9b();
                var q3k = [arguments];
                                T3k[67][`style`][`cursor`] = `auto`;
            }
            T3k[36][45] = `Flames 2`;
            function G72() {
                var S3k = [arguments];
                                while (T3k[17][`rows`][`length`] > 0) {
                    T3k[17][`rows`][0][`onclick`] = null;
                    T3k[17][`rows`][0][`onmouseover`] = null;
                    T3k[17][`deleteRow`](0);
                }
                I8yy.w9b();
                for (S3k[1] = 0; S3k[1] < 16; S3k[1]++) {
                    S3k[4] = T3k[17][`insertRow`]();
                    S3k[4][`id`] = S3k[1];
                    S3k[9] = S3k[4][`insertCell`](0);
                    S3k[8] = document[`createElement`](`span`);
                    S3k[8][`classList`][`add`](`skineditor_layerbox_layername`);
                    if (S3k[1] == T3k[9]) {
                        S3k[4][`classList`][`add`](`HOVERSELECTED`);
                    } else {
                        S3k[4][`classList`][`add`](`HOVERUNSELECTED`);
                    }
                    if (T3k[4][`layers`][S3k[1]]) {
                        S3k[8][`textContent`] = j22(T3k[4][`layers`][S3k[1]][`id`]);
                    } else {
                        S3k[8][`textContent`] = `Empty layer`;
                    }
                    S3k[9][`appendChild`](S3k[8]);
                    if (T3k[4][`layers`][S3k[1]]) {
                        S3k[2] = document[`createElement`](`div`);
                        S3k[2][`classList`][`add`](`skineditor_layerbox_layerpreview`);
                        S3k[5] = document[`createElement`](`img`);
                        S3k[7] = parseInt(T3k[4][`layers`][S3k[1]][`id`]);
                        if (T3k[4][`layers`][S3k[1]][`id`] < 10) {
                            I8yy.P2k(0);
                            S3k[3] = I8yy.A2k(212, 1486);
                            S3k[7] = v8yy[S3k[3]] + S3k[7];
                        }
                        if (T3k[4][`layers`][S3k[1]][`id`] < 100) {
                            I8yy.P2k(123);
                            S3k[92] = I8yy.r2k(17, 20, 1706, 13, 18);
                            S3k[7] = v8yy[S3k[92]] + S3k[7];
                        }
                        S3k[5][`src`] = GameResources[`svgStrings`][T3k[4][`layers`][S3k[1]][`id`]];
                        S3k[5][`classList`][`add`](`skineditor_layerbox_layerpreview_image`);
                        S3k[9][`appendChild`](S3k[2]);
                        S3k[2][`appendChild`](S3k[5]);
                    }
                    S3k[4][`onclick`] = c22;
                    S3k[4][`onmouseover`] = a22;
                    S3k[4][`onmousedown`] = v2k[79][`rlc`];
                }
                I8yy.H2k(25);
                S3k[19] = I8yy.A2k(194, 10471, 11, 6);
                I8yy.H2k(40);
                S3k[99] = I8yy.r2k(4, 400, 33);
                T3k[79][`style`][`backgroundColor`] = v8yy[S3k[19]] + v22(T3k[4][v8yy[S3k[99]]]);
            }
            T3k[36][46] = `Flames 3`;
            T3k[36][47] = `Flames 4`;
            T3k[36][48] = `Flames 5`;
            T3k[36][49] = `Flames 6`;
            T3k[36][50] = `Flames 7`;
            T3k[36][51] = `Flames 8`;
            T3k[36][52] = `Flames 9`;
            function X22() {
                var w3k = [arguments];
                I8yy.w9b();
                                T3k[70][`showColorPicker`](T3k[4][`bc`], T3k[4], l22, null);
            }
            T3k[36][53] = `Skull 1`;
            T3k[36][54] = `Cross`;
            T3k[36][55] = `Star`;
            T3k[36][56] = `Triangle`;
            T3k[36][57] = `Grunge circle`;
            T3k[36][58] = `Grunge heart 1`;
            T3k[36][59] = `Grunge heart 2`;
            function v22(d4H) {
                var z3k = [arguments];
                                z3k[8] = (z3k[0][0] & 0x00FFFFFF)[`toString`](16)[`toUpperCase`]();
                I8yy.H2k(124);
                z3k[6] = I8yy.A2k(8, 10, 70, 14);
                I8yy.H2k(0);
                I8yy.g9b();
                z3k[5] = I8yy.A2k(28, 19);
                return `00000`[`substring`](0, z3k[6] - z3k[8][v8yy[z3k[5]]]) + z3k[8];
            }
            T3k[36][60] = `Grunge leaf 1`;
            T3k[36][61] = `Grunge leaf 2`;
            function a22() {
                var n3k = [arguments];
                                v2k[79][`rlh`](this[`id`]);
                if (!T3k[4][`layers`][this[`id`]]) {
                    return;
                }
                n3k[9] = T3k[4][`layers`][this[`id`]][`color`];
                T3k[4][`layers`][this[`id`]][`color`] = 0xFF00FF;
                C72();
                T3k[1] = true;
                T3k[4][`layers`][this[`id`]][`color`] = n3k[9];
            }
            function x22() {
                var y3k = [arguments];
                                T3k[59][`style`][`display`] = `none`;
                T3k[60][`style`][`display`] = `none`;
                T3k[66][`style`][`display`] = `none`;
                T3k[34][`style`][`display`] = `none`;
                I8yy.w9b();
                T3k[56][`style`][`display`] = `none`;
            }
            T3k[36][62] = `Grunge leaf 3`;
            T3k[36][63] = `Skull 2`;
            T3k[36][64] = `Shoe print`;
            T3k[36][65] = `Hand print`;
            T3k[36][66] = `Finger print`;
            function G22() {
                var p3k = [arguments];
                                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                if (!T3k[4][`layers`][T3k[9] - 1]) {
                    return;
                }
                I8yy.P2k(1);
                p3k[1] = T3k[4][`layers`][I8yy.A2k(1, T3k[9])];
                I8yy.P2k(1);
                T3k[4][`layers`][I8yy.A2k(1, T3k[9])] = T3k[4][`layers`][T3k[9]];
                T3k[4][`layers`][T3k[9]] = p3k[1];
                T3k[9]--;
                G72();
                I8yy.g9b();
                C72();
            }
            T3k[36][67] = `Print 2`;
            T3k[36][68] = `Grunge lines 1`;
            T3k[36][69] = `Grunge lines 2`;
            T3k[36][70] = `Splat`;
            T3k[36][71] = `Pentagon`;
            T3k[36][72] = `Rectangle 1`;
            T3k[36][73] = `Triangle tall 1`;
            function d22(e4H) {
                var O3k = [arguments];
                                I8yy.w9b();
                if (!T3k[4][`layers`][T3k[9]]) {
                    return;
                }
                T3k[27] = O3k[0][0][`screenX`];
                T3k[43] = O3k[0][0][`screenY`];
                window[`onmousemove`] = E22;
                window[`onmouseup`] = function() {
                    var W3k = [arguments];
                                        window[`onmousemove`] = null;
                    window[`onmouseup`] = null;
                    window[`removeEventListener`](`wheel`, y22);
                }
                ;
                window[`addEventListener`](`wheel`, y22, {
                    passive: false
                });
            }
            T3k[36][74] = `Rectangle 2`;
            T3k[36][75] = `Rectangle 3`;
            T3k[36][76] = `Rectangle fat`;
            T3k[36][77] = `Semi circle`;
            T3k[36][78] = `Rounded rectangle`;
            T3k[36][79] = `Moon`;
            T3k[36][80] = `Triangle even`;
            T3k[36][81] = `Triangle tall 2`;
            T3k[36][82] = `Splat 1`;
            T3k[36][83] = `Splat 2`;
            T3k[36][84] = `Splat 3`;
            T3k[36][85] = `Square`;
            T3k[36][86] = `Star`;
            function I22(C4H) {
                var Z3k = [arguments];
                                Z3k[0][0] *= 1000;
                Z3k[0][0] = Math[`round`](Z3k[0][0]);
                Z3k[0][0] /= 1000;
                I8yy.g9b();
                return Z3k[0][0][`toString`]();
            }
            function y22(l4H) {
                var x3k = [arguments];
                                I8yy.g9b();
                x3k[0][0][`preventDefault`]();
                if (x3k[0][0][`shiftKey`]) {
                    if (x3k[0][0][`deltaY`] < 0) {
                        T3k[4][`layers`][T3k[9]][`angle`] += 1;
                    }
                    if (x3k[0][0][`deltaY`] > 0) {
                        T3k[4][`layers`][T3k[9]][`angle`] -= 1;
                    }
                } else {
                    if (x3k[0][0][`deltaY`] < 0) {
                        if (T3k[4][`layers`][T3k[9]][`scale`] < 0.2) {
                            T3k[4][`layers`][T3k[9]][`scale`] += 0.005;
                        } else {
                            T3k[4][`layers`][T3k[9]][`scale`] += 0.01;
                        }
                    }
                    if (x3k[0][0][`deltaY`] > 0) {
                        if (T3k[4][`layers`][T3k[9]][`scale`] < 0.2) {
                            T3k[4][`layers`][T3k[9]][`scale`] -= 0.005;
                        } else {
                            T3k[4][`layers`][T3k[9]][`scale`] -= 0.01;
                        }
                    }
                }
                T3k[6][`redrawLayer`](T3k[4], T3k[9]);
                x72();
            }
            T3k[36][87] = `Radioactive 1`;
            T3k[36][88] = `World`;
            T3k[36][89] = `Signal`;
            T3k[36][90] = `Skull cross `;
            T3k[36][91] = `Skull 3`;
            T3k[36][92] = `Exclamation`;
            function C72() {
                var M3k = [arguments];
                                T3k[6][`completeRedraw`](T3k[4]);
                T3k[1] = false;
                ;
            }
            T3k[36][93] = `Electricity`;
            T3k[36][94] = `Chain`;
            T3k[36][95] = `Scope 1`;
            T3k[36][96] = `Scope 2`;
            T3k[36][97] = `Radioactive 2`;
            T3k[36][98] = `Biohazard`;
            T3k[36][99] = `Fire 1`;
            function F22() {
                I8yy.g9b();
                var s3k = [arguments];
                                T3k[40][`style`][`visibility`] = `hidden`;
                T3k[8][`style`][`pointerEvents`] = `auto`;
            }
            T3k[36][100] = `Oxidiser`;
            T3k[36][101] = `Hazardous`;
            T3k[36][102] = `Ball`;
            function l22(o4H) {
                var c3k = [arguments];
                                T3k[4][`bc`] = c3k[0][0];
                I8yy.H2k(57);
                c3k[6] = I8yy.r2k(3, 7, 10, 233, 2570);
                c3k[8] = v8yy[c3k[6]] + v22(c3k[0][0]);
                T3k[79][`style`][`backgroundColor`] = c3k[8];
                T3k[6][`changeLayerProperty`](-1, `basecolor`, c3k[0][0]);
            }
            T3k[36][103] = `Atomic`;
            function E22(I4H) {
                var D3k = [arguments];
                                I8yy.P2k(0);
                D3k[3] = I8yy.r2k(1045, 4);
                D3k[2] = T3k[27] - D3k[0][0][v8yy[D3k[3]]];
                I8yy.P2k(0);
                D3k[7] = I8yy.r2k(1039, 11);
                D3k[5] = T3k[43] - D3k[0][0][v8yy[D3k[7]]];
                I8yy.H2k(2);
                T3k[4][`layers`][T3k[9]][`x`] -= I8yy.r2k(D3k[2], 7);
                I8yy.P2k(2);
                T3k[4][`layers`][T3k[9]][`y`] -= I8yy.A2k(D3k[5], 7);
                T3k[27] = D3k[0][0][`screenX`];
                T3k[43] = D3k[0][0][`screenY`];
                T3k[6][`changeLayerProperty`](T3k[9], `xy`, T3k[4][`layers`][T3k[9]][`x`], T3k[4][`layers`][T3k[9]][`y`]);
                x72();
            }
            T3k[36][104] = `Freeze`;
            T3k[36][105] = `Whisp 1`;
            T3k[36][106] = `Whisp 2`;
            function Y72(F4H) {
                var Y3k = [arguments];
                                T3k[50] = Y3k[0][0];
                N22();
                clearTimeout(T3k[93]);
                T3k[93] = setTimeout(S22, 400);
                window[`onmouseup`] = function() {
                    var N3k = [arguments];
                                        clearTimeout(T3k[93]);
                    window[`onmouseup`] = null;
                }
                ;
            }
            T3k[36][107] = `Whisp 3`;
            T3k[36][108] = `Whisp 4`;
            T3k[36][109] = `Whisp 5`;
            T3k[36][110] = `Whisp 6`;
            T3k[36][111] = `Whisp 7`;
            T3k[36][112] = `Whisp 8`;
            function h22() {
                var V3k = [arguments];
                                I8yy.g9b();
                if (!T3k[4][`layers`][T3k[9]]) {
                    T3k[9] = 0;
                    J22();
                    V3k[8] = {};
                    V3k[8][`id`] = this[`shapeID`];
                    V3k[8][`scale`] = 0.25;
                    V3k[8][`angle`] = 0;
                    V3k[8][`x`] = 0;
                    V3k[8][`y`] = 0;
                    V3k[8][`flipX`] = false;
                    V3k[8][`flipY`] = false;
                    V3k[8][`color`] = 0x4db6ac;
                    T3k[4][`layers`][`unshift`](V3k[8]);
                    F22();
                    G72();
                    C72();
                    x72();
                    T3k[2][`scrollTop`] = 0;
                } else {
                    T3k[4][`layers`][T3k[9]][`id`] = this[`shapeID`];
                    F22();
                    G72();
                    T3k[6][`redrawLayer`](T3k[4], T3k[9]);
                    x72();
                }
            }
            T3k[36][113] = `Whisp 9`;
            function p22(L4H) {
                var g3k = [arguments];
                I8yy.w9b();
                if (g3k[0][0]) {
                    return `Yes`;
                } else {
                    return `No`;
                }
            }
            T3k[36][114] = `Whisp 10`;
            T3k[36][115] = `Whisp 11`;
        }
        function T() {}
        T[`getNewRevoluteJoint`] = function(J4H, h4H) {
            var U3k = [arguments];
            return {
                type: `rv`,
                d: {
                    la: 0,
                    ua: 0,
                    mmt: 0,
                    ms: 0,
                    el: false,
                    em: false,
                    cc: false,
                    bf: 0,
                    dl: true
                },
                ba: U3k[0][0],
                bb: U3k[0][1],
                aa: [0, 0]
            };
        }
        ;
        T[`getNewDistanceJoint`] = function(X4H, m4H) {
            var B3k = [arguments];
            return {
                type: `d`,
                d: {
                    fh: 0,
                    dr: 0,
                    cc: false,
                    bf: 0,
                    dl: true
                },
                ba: B3k[0][0],
                bb: B3k[0][1],
                aa: [0, 0],
                ab: [0, 0]
            };
        }
        ;
        T[`getNewLPJJoint`] = function(Q4H, q4H) {
            var a3k = [arguments];
            return {
                type: `lpj`,
                d: {
                    cc: false,
                    bf: 0,
                    dl: true
                },
                ba: a3k[0][0],
                bb: a3k[0][1],
                pax: 0,
                pay: 0,
                pa: 0,
                pf: 0,
                pl: 0,
                pu: 0,
                plen: 0,
                pms: 0
            };
        }
        ;
        T[`getNewLSJJoint`] = function(S4H, w4H) {
            I8yy.g9b();
            var t3k = [arguments];
            return {
                type: `lsj`,
                d: {
                    cc: false,
                    bf: 0,
                    dl: true
                },
                ba: t3k[0][0],
                bb: t3k[0][1],
                sax: 0,
                say: 0,
                sf: 0,
                slen: 0
            };
        }
        ;
        T[`getNewCapZone`] = function() {
            I8yy.w9b();
            return {
                n: `Cap Zone`,
                ty: 1,
                l: 10,
                i: -1
            };
            ;
        }
        ;
        T[`getNewSpawn`] = function() {
            I8yy.g9b();
            return {
                x: 400,
                y: 300,
                xv: 0,
                yv: 0,
                priority: 5,
                r: true,
                f: true,
                b: true,
                gr: false,
                ye: false,
                n: `Spawn`
            };
        }
        ;
        T[`encode`] = function(z4H) {
            var E3k = [arguments];
                        E3k[8] = T[`pson`][`encode`](E3k[0][0]);
            return E3k[8];
        }
        ;
        T[`decode`] = function(n4H) {
            var R3k = [arguments];
                        R3k[1] = T[`pson`][`decode`](R3k[0][0]);
            return T[`mergeIntoNewMap`](R3k[1]);
        }
        ;
        T[`mergeIntoNewMap`] = function(y4H) {
            var j9k = [arguments];
                        j9k[1] = T[`getBlankMap`]();
            I8yy.g9b();
            if (j9k[0][0][`s`]) {
                if (typeof j9k[0][0][`s`][`re`] == `boolean`) {
                    j9k[1][`s`][`re`] = j9k[0][0][`s`][`re`];
                }
                if (typeof j9k[0][0][`s`][`nc`] == `boolean`) {
                    j9k[1][`s`][`nc`] = j9k[0][0][`s`][`nc`];
                }
                if (j9k[0][0][`s`][`pq`] >= 1 && j9k[0][0][`s`][`pq`] <= 2) {
                    j9k[1][`s`][`pq`] = j9k[0][0][`s`][`pq`];
                }
                if (j9k[0][0][`s`][`gd`] >= 2 && j9k[0][0][`s`][`pq`] <= 100) {
                    j9k[1][`s`][`gd`] = j9k[0][0][`s`][`gd`];
                }
                if (typeof j9k[0][0][`s`][`fl`] == `boolean`) {
                    j9k[1][`s`][`fl`] = j9k[0][0][`s`][`fl`];
                }
                ;
            }
            if (j9k[0][0][`m`]) {
                if (typeof j9k[0][0][`m`][`a`] == `string` && j9k[0][0][`m`][`a`][`length`] <= 15) {
                    j9k[1][`m`][`a`] = j9k[0][0][`m`][`a`];
                }
                if (typeof j9k[0][0][`m`][`n`] == `string` && j9k[0][0][`m`][`n`][`length`] <= 25) {
                    j9k[1][`m`][`n`] = j9k[0][0][`m`][`n`];
                }
                if (typeof j9k[0][0][`m`][`rxn`] == `string` && j9k[0][0][`m`][`rxn`][`length`] <= 25) {
                    j9k[1][`m`][`rxn`] = j9k[0][0][`m`][`rxn`];
                }
                if (typeof j9k[0][0][`m`][`rxa`] == `string` && j9k[0][0][`m`][`rxa`][`length`] <= 15) {
                    j9k[1][`m`][`rxa`] = j9k[0][0][`m`][`rxa`];
                }
                if (typeof (j9k[0][0][`m`][`rxid`] == `number`) && j9k[0][0][`m`][`rxid`] >= 0 && j9k[0][0][`m`][`rxid`] <= 9999999999) {
                    j9k[1][`m`][`rxid`] = j9k[0][0][`m`][`rxid`];
                }
                if (j9k[0][0][`m`][`rxdb`] == 1 || j9k[0][0][`m`][`rxdb`] == 2) {
                    j9k[1][`m`][`rxdb`] = j9k[0][0][`m`][`rxdb`];
                }
                for (j9k[24] = 0; j9k[24] < j9k[0][0][`m`][`cr`][`length`]; j9k[24]++) {
                    if (typeof j9k[0][0][`m`][`cr`][j9k[24]] == `string` && j9k[0][0][`m`][`cr`][j9k[24]][`length`] <= 15) {
                        j9k[1][`m`][`cr`][`push`](j9k[0][0][`m`][`cr`][j9k[24]]);
                    }
                }
                if (typeof j9k[0][0][`m`][`mo`] == `string` && j9k[0][0][`m`][`mo`][`length`] <= 5) {
                    j9k[1][`m`][`mo`] = j9k[0][0][`m`][`mo`];
                }
                if (typeof j9k[0][0][`m`][`dbid`] == `number`) {
                    j9k[1][`m`][`dbid`] = j9k[0][0][`m`][`dbid`];
                }
                if (typeof j9k[0][0][`m`][`vu`] == `number`) {
                    j9k[1][`m`][`vu`] = j9k[0][0][`m`][`vu`];
                }
                if (typeof j9k[0][0][`m`][`vd`] == `number`) {
                    j9k[1][`m`][`vd`] = j9k[0][0][`m`][`vd`];
                }
            }
            if (j9k[0][0][`physics`]) {
                if (j9k[0][0][`physics`][`shapes`]) {
                    for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`physics`][`shapes`][`length`], 1000); j9k[85]++) {
                        if (j9k[0][0][`physics`][`shapes`][j9k[85]]) {
                            j9k[5] = j9k[0][0][`physics`][`shapes`][j9k[85]];
                            if (j9k[5][`type`] == `bx`) {
                                j9k[1][`physics`][`shapes`][j9k[85]] = T[`getNewBoxShape`]();
                                if (j9k[5][`w`] > 0 && j9k[5][`w`] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`w`] = j9k[5][`w`];
                                }
                                if (j9k[5][`h`] > 0 && j9k[5][`h`] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`h`] = j9k[5][`h`];
                                }
                                if (j9k[5][`c`][0] >= -99999 && j9k[5][`c`][0] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`c`][0] = j9k[5][`c`][0];
                                }
                                if (j9k[5][`c`][1] >= -99999 && j9k[5][`c`][1] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`c`][1] = j9k[5][`c`][1];
                                }
                                if (j9k[5][`a`] >= -999 && j9k[5][`a`] <= 999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`a`] = j9k[5][`a`];
                                }
                                if (typeof j9k[5][`sk`] == `boolean`) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`sk`] = j9k[5][`sk`];
                                }
                                ;
                            }
                            if (j9k[5][`type`] == `ci`) {
                                j9k[1][`physics`][`shapes`][j9k[85]] = T[`getNewCircleShape`]();
                                if (j9k[5][`r`] > 0 && j9k[5][`r`] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`r`] = j9k[5][`r`];
                                }
                                if (j9k[1][`physics`][`shapes`][j9k[85]][`r`] > 2000) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`r`] = 2000;
                                }
                                if (j9k[5][`c`][0] >= -99999 && j9k[5][`c`][0] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`c`][0] = j9k[5][`c`][0];
                                }
                                if (j9k[5][`c`][1] >= -99999 && j9k[5][`c`][1] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`c`][1] = j9k[5][`c`][1];
                                }
                                if (typeof j9k[5][`sk`] == `boolean`) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`sk`] = j9k[5][`sk`];
                                }
                                ;
                            }
                            if (j9k[5][`type`] == `po`) {
                                j9k[1][`physics`][`shapes`][j9k[85]] = T[`getNewPolyShape`]();
                                ;
                            }
                            if (j9k[5][`type`] == `ch`) {
                                j9k[1][`physics`][`shapes`][j9k[85]] = T[`getNewChainShape`]();
                                if (typeof j9k[5][`l`] == `boolean`) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`l`] = j9k[5][`l`];
                                }
                                ;
                            }
                            if (j9k[5][`type`] == `po` || j9k[5][`type`] == `ch`) {
                                j9k[8] = false;
                                for (j9k[39] = 0; j9k[39] < Math[`min`](j9k[5][`v`][`length`], 100); j9k[39]++) {
                                    if (!j9k[5][`v`][j9k[39]] || typeof j9k[5][`v`][j9k[39]] != `object` || j9k[5][`v`][j9k[39]][`length`] != 2 || typeof j9k[5][`v`][j9k[39]][0] != `number` || typeof j9k[5][`v`][j9k[39]][1] != `number` || j9k[5][`v`][j9k[39]][0] < -99999 || j9k[5][`v`][j9k[39]][0] > 99999 || j9k[5][`v`][j9k[39]][1] < -99999 || j9k[5][`v`][j9k[39]][1] > 99999) {
                                        j9k[8] = true;
                                        break;
                                    }
                                }
                                if (!j9k[8]) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`v`] = j9k[5][`v`];
                                }
                                if (j9k[5][`s`] >= -999 && j9k[5][`s`] <= 999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`s`] = j9k[5][`s`];
                                }
                                if (j9k[5][`a`] >= -999 && j9k[5][`a`] <= 999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`a`] = j9k[5][`a`];
                                }
                                if (j9k[5][`c`][0] >= -99999 && j9k[5][`c`][0] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`c`][0] = j9k[5][`c`][0];
                                }
                                if (j9k[5][`c`][1] >= -99999 && j9k[5][`c`][1] <= 99999) {
                                    j9k[1][`physics`][`shapes`][j9k[85]][`c`][1] = j9k[5][`c`][1];
                                }
                                ;
                            }
                        }
                    }
                }
                if (j9k[0][0][`physics`][`fixtures`]) {
                    for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`physics`][`fixtures`][`length`], 1000); j9k[85]++) {
                        if (j9k[0][0][`physics`][`fixtures`][j9k[85]]) {
                            j9k[6] = j9k[0][0][`physics`][`fixtures`][j9k[85]];
                            if (j9k[1][`physics`][`shapes`][j9k[6][`sh`]]) {
                                j9k[1][`physics`][`fixtures`][j9k[85]] = T[`getNewFixture`](j9k[6][`sh`]);
                                if (typeof j9k[6][`n`] == `string` && j9k[6][`n`][`length`] <= 30) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`n`] = j9k[6][`n`];
                                }
                                if (j9k[6][`fr`] >= 0 && j9k[6][`fr`] <= 99999) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`fr`] = j9k[6][`fr`];
                                }
                                if (typeof j9k[6][`fp`] == `boolean`) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`fp`] = j9k[6][`fp`];
                                }
                                if (j9k[6][`re`] >= -99999 && j9k[6][`re`] <= 99999) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`re`] = j9k[6][`re`];
                                }
                                if (j9k[6][`de`] >= 0 && j9k[6][`de`] <= 99999) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`de`] = j9k[6][`de`];
                                }
                                if (j9k[6][`f`] >= 0 && j9k[6][`f`] <= 0xffffff) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`f`] = j9k[6][`f`];
                                }
                                if (typeof j9k[6][`d`] == `boolean`) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`d`] = j9k[6][`d`];
                                }
                                if (typeof j9k[6][`np`] == `boolean`) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`np`] = j9k[6][`np`];
                                }
                                if (typeof j9k[6][`fs`] == `string`) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`fs`] = j9k[6][`fs`];
                                }
                                if (typeof j9k[6][`zp`] == `number` && j9k[6][`zp`] > -1000 && j9k[6][`zp`] < 1000) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`zp`] = j9k[6][`zp`];
                                }
                                if (typeof j9k[6][`ng`] == `boolean`) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`ng`] = j9k[6][`ng`];
                                }
                                if (typeof j9k[6][`ig`] == `boolean`) {
                                    j9k[1][`physics`][`fixtures`][j9k[85]][`ig`] = j9k[6][`ig`];
                                }
                                ;
                            }
                        }
                    }
                }
                if (j9k[0][0][`physics`][`bodies`]) {
                    for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`physics`][`bodies`][`length`], 300); j9k[85]++) {
                        if (j9k[0][0][`physics`][`bodies`][j9k[85]]) {
                            j9k[9] = j9k[0][0][`physics`][`bodies`][j9k[85]];
                            j9k[1][`physics`][`bodies`][j9k[85]] = T[`getNewBody`]();
                            j9k[2] = j9k[1][`physics`][`bodies`][j9k[85]];
                            if (j9k[9][`type`] == `s` || j9k[9][`type`] == `d` || j9k[9][`type`] == `k`) {
                                j9k[2][`type`] = j9k[9][`type`];
                            }
                            if (typeof j9k[9][`n`] == `string` && j9k[9][`n`][`length`] <= 30) {
                                j9k[2][`n`] = j9k[9][`n`];
                            }
                            if (typeof j9k[9][`p`] == `object` && j9k[9][`p`][`length`] == 2 && j9k[9][`p`][0] >= -99999 && j9k[9][`p`][0] <= 99999 && j9k[9][`p`][1] >= -99999 && j9k[9][`p`][1] <= 99999) {
                                j9k[2][`p`] = j9k[9][`p`];
                            }
                            if (j9k[9][`a`] >= -9999 && j9k[9][`a`] <= 9999) {
                                j9k[2][`a`] = j9k[9][`a`];
                            }
                            if (typeof j9k[9][`lv`] == `object` && j9k[9][`lv`][`length`] == 2 && j9k[9][`lv`][0] >= -99999 && j9k[9][`lv`][0] <= 99999 && j9k[9][`lv`][1] >= -99999 && j9k[9][`lv`][1] <= 99999) {
                                j9k[2][`lv`] = j9k[9][`lv`];
                            }
                            if (j9k[9][`av`] >= -9999 && j9k[9][`av`] <= 9999) {
                                j9k[2][`av`] = j9k[9][`av`];
                            }
                            if (j9k[9][`ld`] >= -99999 && j9k[9][`ld`] <= 99999) {
                                j9k[2][`ld`] = j9k[9][`ld`];
                            }
                            if (j9k[9][`ad`] >= -99999 && j9k[9][`ad`] <= 99999) {
                                j9k[2][`ad`] = j9k[9][`ad`];
                            }
                            if (j9k[9][`fric`] >= -99999 && j9k[9][`fric`] <= 99999) {
                                j9k[2][`fric`] = j9k[9][`fric`];
                            }
                            if (typeof j9k[9][`fricp`] == `boolean`) {
                                j9k[2][`fricp`] = j9k[9][`fricp`];
                            }
                            if (j9k[9][`de`] >= -99999 && j9k[9][`de`] <= 99999) {
                                j9k[2][`de`] = j9k[9][`de`];
                            }
                            if (j9k[9][`re`] >= -99999 && j9k[9][`re`] <= 99999) {
                                j9k[2][`re`] = j9k[9][`re`];
                            }
                            if (typeof j9k[9][`fr`] == `boolean`) {
                                j9k[2][`fr`] = j9k[9][`fr`];
                            }
                            if (typeof j9k[9][`bu`] == `boolean`) {
                                j9k[2][`bu`] = j9k[9][`bu`];
                            }
                            if (typeof j9k[9][`cf`] == `object`) {
                                j9k[2][`cf`] = {
                                    x: 0,
                                    y: 0,
                                    w: true,
                                    ct: 0
                                };
                                if (j9k[9][`cf`][`x`] >= -999999 && j9k[9][`cf`][`x`] < 999999) {
                                    j9k[2][`cf`][`x`] = j9k[9][`cf`][`x`];
                                }
                                if (j9k[9][`cf`][`y`] >= -999999 && j9k[9][`cf`][`y`] < 999999) {
                                    j9k[2][`cf`][`y`] = j9k[9][`cf`][`y`];
                                }
                                if (typeof j9k[9][`cf`][`w`] == `boolean`) {
                                    j9k[2][`cf`][`w`] = j9k[9][`cf`][`w`];
                                }
                                if (j9k[9][`cf`][`ct`] >= -999999 && j9k[9][`cf`][`ct`] < 999999) {
                                    j9k[2][`cf`][`ct`] = j9k[9][`cf`][`ct`];
                                }
                            }
                            if (typeof j9k[9][`fx`] == `object` && j9k[9][`fx`][`length`] > 0) {
                                for (j9k[18] = 0; j9k[18] < Math[`min`](j9k[9][`fx`][`length`], 100); j9k[18]++) {
                                    if (j9k[1][`physics`][`fixtures`][j9k[9][`fx`][j9k[18]]]) {
                                        j9k[2][`fx`][`push`](j9k[9][`fx`][j9k[18]]);
                                    }
                                }
                            }
                            if (typeof j9k[9][`f_c`] == `number`) {
                                j9k[2][`f_c`] = j9k[9][`f_c`];
                            }
                            if (typeof j9k[9][`f_p`] == `boolean`) {
                                j9k[2][`f_p`] = j9k[9][`f_p`];
                            }
                            if (typeof j9k[9][`f_1`] == `boolean`) {
                                j9k[2][`f_1`] = j9k[9][`f_1`];
                            }
                            if (typeof j9k[9][`f_2`] == `boolean`) {
                                j9k[2][`f_2`] = j9k[9][`f_2`];
                            }
                            if (typeof j9k[9][`f_3`] == `boolean`) {
                                j9k[2][`f_3`] = j9k[9][`f_3`];
                            }
                            if (typeof j9k[9][`f_4`] == `boolean`) {
                                j9k[2][`f_4`] = j9k[9][`f_4`];
                            }
                        }
                    }
                }
                if (j9k[0][0][`physics`][`bro`] && typeof j9k[0][0][`physics`][`bro`] == `object` && j9k[0][0][`physics`][`bro`][`length`] > 0) {
                    for (j9k[85] = 0; j9k[85] < j9k[0][0][`physics`][`bro`][`length`]; j9k[85]++) {
                        if (j9k[1][`physics`][`bodies`][j9k[0][0][`physics`][`bro`][j9k[85]]]) {
                            j9k[1][`physics`][`bro`][`push`](j9k[0][0][`physics`][`bro`][j9k[85]]);
                        }
                    }
                }
                if (j9k[0][0][`physics`][`joints`] && typeof j9k[0][0][`physics`][`joints`] == `object` && j9k[0][0][`physics`][`joints`][`length`] > 0) {
                    for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`physics`][`joints`][`length`], 100); j9k[85]++) {
                        if (j9k[0][0][`physics`][`joints`][j9k[85]]) {
                            j9k[7] = j9k[0][0][`physics`][`joints`][j9k[85]];
                            if (!((j9k[7][`ba`] == -1 || j9k[1][`physics`][`bodies`][j9k[7][`ba`]]) && (j9k[7][`bb`] == -1 || j9k[1][`physics`][`bodies`][j9k[7][`bb`]]))) {
                                continue;
                                ;
                            }
                            if (j9k[7][`type`] == `rv`) {
                                j9k[4] = T[`getNewRevoluteJoint`](j9k[7][`ba`], j9k[7][`bb`]);
                                if (typeof j9k[7][`d`] == `object`) {
                                    if (j9k[7][`d`][`la`] >= -999 && j9k[7][`d`][`la`] <= 999) {
                                        j9k[4][`d`][`la`] = j9k[7][`d`][`la`];
                                    }
                                    if (j9k[7][`d`][`ua`] >= -999 && j9k[7][`d`][`ua`] <= 999) {
                                        j9k[4][`d`][`ua`] = j9k[7][`d`][`ua`];
                                    }
                                    if (j9k[7][`d`][`mmt`] >= -99999999 && j9k[7][`d`][`mmt`] <= 99999999) {
                                        j9k[4][`d`][`mmt`] = j9k[7][`d`][`mmt`];
                                    }
                                    if (j9k[7][`d`][`ms`] >= -99999999 && j9k[7][`d`][`ms`] <= 99999999) {
                                        j9k[4][`d`][`ms`] = j9k[7][`d`][`ms`];
                                    }
                                    if (typeof j9k[7][`d`][`el`] == `boolean`) {
                                        j9k[4][`d`][`el`] = j9k[7][`d`][`el`];
                                    }
                                    if (typeof j9k[7][`d`][`em`] == `boolean`) {
                                        j9k[4][`d`][`em`] = j9k[7][`d`][`em`];
                                    }
                                    if (typeof j9k[7][`d`][`cc`] == `boolean`) {
                                        j9k[4][`d`][`cc`] = j9k[7][`d`][`cc`];
                                    }
                                    if (typeof j9k[7][`d`][`dl`] == `boolean`) {
                                        j9k[4][`d`][`dl`] = j9k[7][`d`][`dl`];
                                    }
                                    if (j9k[7][`d`][`bf`] >= 0 && j9k[7][`d`][`bf`] <= 99999999) {
                                        j9k[4][`d`][`bf`] = j9k[7][`d`][`bf`];
                                    }
                                }
                                if (typeof j9k[7][`aa`] == `object` && j9k[7][`aa`][`length`] == 2 && j9k[7][`aa`][0] >= -99999 && j9k[7][`aa`][0] <= 99999 && j9k[7][`aa`][1] >= -99999 && j9k[7][`aa`][1] <= 99999) {
                                    j9k[4][`aa`] = j9k[7][`aa`];
                                }
                            }
                            if (j9k[7][`type`] == `p`) {
                                j9k[4] = {
                                    type: `p`,
                                    n: `Def pris`,
                                    d: {
                                        el: true,
                                        lt: -100,
                                        ut: 100,
                                        em: false,
                                        mmf: 0,
                                        ms: 0,
                                        cc: false,
                                        bf: 0,
                                        cd: false
                                    },
                                    ba: j9k[7][`ba`],
                                    bb: j9k[7][`bb`],
                                    aa: [200, 200],
                                    ab: [0, 0],
                                    axa: [0, 1]
                                };
                                if (typeof j9k[7][`d`] == `object`) {
                                    if (j9k[7][`d`][`lt`] >= -99999 && j9k[7][`d`][`lt`] <= 99999) {
                                        j9k[4][`d`][`lt`] = j9k[7][`d`][`lt`];
                                    }
                                    if (j9k[7][`d`][`ut`] >= -99999 && j9k[7][`d`][`ut`] <= 99999) {
                                        j9k[4][`d`][`ut`] = j9k[7][`d`][`ut`];
                                    }
                                    if (j9k[7][`d`][`mmf`] >= -99999999 && j9k[7][`d`][`mmf`] <= 99999999) {
                                        j9k[4][`d`][`mmf`] = j9k[7][`d`][`mmf`];
                                    }
                                    if (j9k[7][`d`][`ms`] >= -99999999 && j9k[7][`d`][`ms`] <= 99999999) {
                                        j9k[4][`d`][`ms`] = j9k[7][`d`][`ms`];
                                    }
                                    if (typeof j9k[7][`d`][`el`] == `boolean`) {
                                        j9k[4][`d`][`el`] = j9k[7][`d`][`el`];
                                    }
                                    if (typeof j9k[7][`d`][`em`] == `boolean`) {
                                        j9k[4][`d`][`em`] = j9k[7][`d`][`em`];
                                    }
                                    if (typeof j9k[7][`d`][`cc`] == `boolean`) {
                                        j9k[4][`d`][`cc`] = j9k[7][`d`][`cc`];
                                    }
                                    if (typeof j9k[7][`d`][`cd`] == `boolean`) {
                                        j9k[4][`d`][`cd`] = j9k[7][`d`][`cd`];
                                    }
                                    if (typeof j9k[7][`d`][`dl`] == `boolean`) {
                                        j9k[4][`d`][`dl`] = j9k[7][`d`][`dl`];
                                    }
                                    if (j9k[7][`d`][`bf`] >= 0 && j9k[7][`d`][`bf`] <= 99999999) {
                                        j9k[4][`d`][`bf`] = j9k[7][`d`][`bf`];
                                    }
                                }
                                if (typeof j9k[7][`aa`] == `object` && j9k[7][`aa`][`length`] == 2 && j9k[7][`aa`][0] >= -99999 && j9k[7][`aa`][0] <= 99999 && j9k[7][`aa`][1] >= -99999 && j9k[7][`ab`][1] <= 99999) {
                                    j9k[4][`aa`] = j9k[7][`aa`];
                                }
                                if (typeof j9k[7][`ab`] == `object` && j9k[7][`ab`][`length`] == 2 && j9k[7][`ab`][0] >= -99999 && j9k[7][`ab`][0] <= 99999 && j9k[7][`ab`][1] >= -99999 && j9k[7][`ab`][1] <= 99999) {
                                    j9k[4][`ab`] = j9k[7][`ab`];
                                }
                                if (typeof j9k[7][`axa`] == `object` && j9k[7][`axa`][`length`] == 2 && j9k[7][`axa`][0] >= -999 && j9k[7][`axa`][0] <= 999 && j9k[7][`axa`][1] >= -999 && j9k[7][`axa`][1] <= 999) {
                                    j9k[4][`axa`] = j9k[7][`axa`];
                                }
                            }
                            if (j9k[7][`type`] == `d`) {
                                j9k[4] = T[`getNewDistanceJoint`](j9k[7][`ba`], j9k[7][`bb`]);
                                if (typeof j9k[7][`d`] == `object`) {
                                    if (j9k[7][`d`][`fh`] >= -99999 && j9k[7][`d`][`fh`] <= 99999) {
                                        j9k[4][`d`][`fh`] = j9k[7][`d`][`fh`];
                                    }
                                    if (j9k[7][`d`][`dr`] >= -99999 && j9k[7][`d`][`dr`] <= 99999) {
                                        j9k[4][`d`][`dr`] = j9k[7][`d`][`dr`];
                                    }
                                    if (typeof j9k[7][`d`][`cc`] == `boolean`) {
                                        j9k[4][`d`][`cc`] = j9k[7][`d`][`cc`];
                                    }
                                    if (typeof j9k[7][`d`][`dl`] == `boolean`) {
                                        j9k[4][`d`][`dl`] = j9k[7][`d`][`dl`];
                                    }
                                    if (j9k[7][`d`][`bf`] >= 0 && j9k[7][`d`][`bf`] <= 99999999) {
                                        j9k[4][`d`][`bf`] = j9k[7][`d`][`bf`];
                                    }
                                }
                                if (typeof j9k[7][`aa`] == `object` && j9k[7][`aa`][`length`] == 2 && j9k[7][`aa`][0] >= -99999 && j9k[7][`aa`][0] <= 99999 && j9k[7][`aa`][1] >= -99999 && j9k[7][`ab`][1] <= 99999) {
                                    j9k[4][`aa`] = j9k[7][`aa`];
                                }
                                if (typeof j9k[7][`ab`] == `object` && j9k[7][`ab`][`length`] == 2 && j9k[7][`ab`][0] >= -99999 && j9k[7][`ab`][0] <= 99999 && j9k[7][`ab`][1] >= -99999 && j9k[7][`ab`][1] <= 99999) {
                                    j9k[4][`ab`] = j9k[7][`ab`];
                                }
                            }
                            if (j9k[7][`type`] == `lsj`) {
                                j9k[4] = T[`getNewLSJJoint`](j9k[7][`ba`], j9k[7][`bb`]);
                                if (typeof j9k[7][`d`] == `object`) {
                                    if (typeof j9k[7][`d`][`cc`] == `boolean`) {
                                        j9k[4][`d`][`cc`] = j9k[7][`d`][`cc`];
                                    }
                                    if (typeof j9k[7][`d`][`dl`] == `boolean`) {
                                        j9k[4][`d`][`dl`] = j9k[7][`d`][`dl`];
                                    }
                                    if (j9k[7][`d`][`bf`] >= 0 && j9k[7][`d`][`bf`] <= 99999999) {
                                        j9k[4][`d`][`bf`] = j9k[7][`d`][`bf`];
                                    }
                                }
                                if (j9k[7][`sax`] >= -99999999 && j9k[7][`sax`] <= 99999999) {
                                    j9k[4][`sax`] = j9k[7][`sax`];
                                }
                                if (j9k[7][`say`] >= -99999999 && j9k[7][`say`] <= 99999999) {
                                    j9k[4][`say`] = j9k[7][`say`];
                                }
                                if (j9k[7][`sf`] >= -99999999 && j9k[7][`sf`] <= 99999999) {
                                    j9k[4][`sf`] = j9k[7][`sf`];
                                }
                                if (j9k[7][`slen`] >= -99999999 && j9k[7][`slen`] <= 99999999) {
                                    j9k[4][`slen`] = j9k[7][`slen`];
                                }
                            }
                            if (j9k[7][`type`] == `lpj`) {
                                j9k[4] = T[`getNewLPJJoint`](j9k[7][`ba`], j9k[7][`bb`]);
                                if (typeof j9k[7][`d`] == `object`) {
                                    if (typeof j9k[7][`d`][`cc`] == `boolean`) {
                                        j9k[4][`d`][`cc`] = j9k[7][`d`][`cc`];
                                    }
                                    if (typeof j9k[7][`d`][`dl`] == `boolean`) {
                                        j9k[4][`d`][`dl`] = j9k[7][`d`][`dl`];
                                    }
                                    if (j9k[7][`d`][`bf`] >= 0 && j9k[7][`d`][`bf`] <= 99999999) {
                                        j9k[4][`d`][`bf`] = j9k[7][`d`][`bf`];
                                    }
                                }
                                if (j9k[7][`pax`] >= -99999999 && j9k[7][`pax`] <= 99999999) {
                                    j9k[4][`pax`] = j9k[7][`pax`];
                                }
                                if (j9k[7][`pay`] >= -99999999 && j9k[7][`pay`] <= 99999999) {
                                    j9k[4][`pay`] = j9k[7][`pay`];
                                }
                                if (j9k[7][`pa`] >= -99999999 && j9k[7][`pa`] <= 99999999) {
                                    j9k[4][`pa`] = j9k[7][`pa`];
                                }
                                if (j9k[7][`pf`] >= -99999999 && j9k[7][`pf`] <= 99999999) {
                                    j9k[4][`pf`] = j9k[7][`pf`];
                                }
                                if (j9k[7][`plen`] >= -99999999 && j9k[7][`plen`] <= 99999999) {
                                    j9k[4][`plen`] = j9k[7][`plen`];
                                }
                                if (j9k[7][`pms`] >= -99999999 && j9k[7][`pms`] <= 99999999) {
                                    j9k[4][`pms`] = j9k[7][`pms`];
                                }
                            }
                            j9k[1][`physics`][`joints`][j9k[85]] = j9k[4];
                        }
                    }
                    for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`physics`][`joints`][`length`], 100); j9k[85]++) {
                        if (j9k[0][0][`physics`][`joints`][j9k[85]] && j9k[0][0][`physics`][`joints`][j9k[85]][`type`] == `g`) {
                            j9k[7] = j9k[0][0][`physics`][`joints`][j9k[85]];
                            if (!((j9k[7][`ba`] == -1 || j9k[1][`physics`][`bodies`][j9k[7][`ba`]]) && (j9k[7][`bb`] == -1 || j9k[1][`physics`][`bodies`][j9k[7][`bb`]]))) {
                                continue;
                            }
                            if (!(j9k[1][`physics`][`joints`][j9k[7][`ja`]] && j9k[1][`physics`][`joints`][j9k[7][`jb`]])) {
                                continue;
                            }
                            j9k[4] = {
                                type: `g`,
                                n: `Def gear`,
                                d: {
                                    cc: false,
                                    r: 1
                                },
                                ba: j9k[7][`ba`],
                                bb: j9k[7][`bb`],
                                ja: j9k[7][`ja`],
                                jb: j9k[7][`jb`]
                            };
                            if (typeof j9k[7][`n`] == `string` && j9k[7][`n`][`length`] < 30) {
                                j9k[4][`n`] = j9k[7][`n`];
                            }
                            if (typeof j9k[7][`d`] == `object`) {
                                if (typeof j9k[7][`d`][`cc`] == `boolean`) {
                                    j9k[4][`d`][`cc`] = j9k[7][`d`][`cc`];
                                }
                                if (j9k[7][`d`][`r`] >= -99999 && j9k[7][`d`][`r`] <= 99999) {
                                    j9k[4][`d`][`r`] = j9k[7][`d`][`r`];
                                }
                            }
                            j9k[1][`physics`][`joints`][j9k[85]] = j9k[4];
                        }
                    }
                }
                if (j9k[0][0][`physics`][`ppm`] >= 2 && j9k[0][0][`physics`][`ppm`] <= 300) {
                    j9k[1][`physics`][`ppm`] = j9k[0][0][`physics`][`ppm`];
                }
            }
            if (j9k[0][0][`spawns`]) {
                for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`spawns`][`length`], 100); j9k[85]++) {
                    if (j9k[0][0][`spawns`][j9k[85]]) {
                        j9k[1][`spawns`][j9k[85]] = T[`getNewSpawn`]();
                        if (j9k[0][0][`spawns`][j9k[85]][`x`] >= -10000 && j9k[0][0][`spawns`][j9k[85]][`x`] <= 10000) {
                            j9k[1][`spawns`][j9k[85]][`x`] = j9k[0][0][`spawns`][j9k[85]][`x`];
                        }
                        if (j9k[0][0][`spawns`][j9k[85]][`y`] >= -10000 && j9k[0][0][`spawns`][j9k[85]][`y`] <= 10000) {
                            j9k[1][`spawns`][j9k[85]][`y`] = j9k[0][0][`spawns`][j9k[85]][`y`];
                        }
                        if (j9k[0][0][`spawns`][j9k[85]][`xv`] >= -10000 && j9k[0][0][`spawns`][j9k[85]][`xv`] <= 10000) {
                            j9k[1][`spawns`][j9k[85]][`xv`] = j9k[0][0][`spawns`][j9k[85]][`xv`];
                        }
                        if (j9k[0][0][`spawns`][j9k[85]][`yv`] >= -10000 && j9k[0][0][`spawns`][j9k[85]][`yv`] <= 10000) {
                            j9k[1][`spawns`][j9k[85]][`yv`] = j9k[0][0][`spawns`][j9k[85]][`yv`];
                        }
                        if (j9k[0][0][`spawns`][j9k[85]][`priority`] >= 0 && j9k[0][0][`spawns`][j9k[85]][`priority`] <= 10000) {
                            j9k[1][`spawns`][j9k[85]][`priority`] = j9k[0][0][`spawns`][j9k[85]][`priority`];
                        }
                        if (typeof j9k[0][0][`spawns`][j9k[85]][`r`] == `boolean`) {
                            j9k[1][`spawns`][j9k[85]][`r`] = j9k[0][0][`spawns`][j9k[85]][`r`];
                        }
                        if (typeof j9k[0][0][`spawns`][j9k[85]][`f`] == `boolean`) {
                            j9k[1][`spawns`][j9k[85]][`f`] = j9k[0][0][`spawns`][j9k[85]][`f`];
                        }
                        if (typeof j9k[0][0][`spawns`][j9k[85]][`b`] == `boolean`) {
                            j9k[1][`spawns`][j9k[85]][`b`] = j9k[0][0][`spawns`][j9k[85]][`b`];
                        }
                        if (typeof j9k[0][0][`spawns`][j9k[85]][`gr`] == `boolean`) {
                            j9k[1][`spawns`][j9k[85]][`gr`] = j9k[0][0][`spawns`][j9k[85]][`gr`];
                        }
                        if (typeof j9k[0][0][`spawns`][j9k[85]][`ye`] == `boolean`) {
                            j9k[1][`spawns`][j9k[85]][`ye`] = j9k[0][0][`spawns`][j9k[85]][`ye`];
                        }
                        if (typeof j9k[0][0][`spawns`][j9k[85]][`n`] == `string` && j9k[0][0][`spawns`][j9k[85]][`n`][`length`] < 60) {
                            j9k[1][`spawns`][j9k[85]][`n`] = j9k[0][0][`spawns`][j9k[85]][`n`];
                        }
                        ;
                    }
                }
            }
            if (j9k[0][0][`capZones`]) {
                for (j9k[85] = 0; j9k[85] < Math[`min`](j9k[0][0][`capZones`][`length`], 50); j9k[85]++) {
                    if (j9k[0][0][`capZones`][j9k[85]]) {
                        j9k[1][`capZones`][j9k[85]] = T[`getNewCapZone`]();
                        if (typeof j9k[0][0][`capZones`][j9k[85]][`n`] == `string` && j9k[0][0][`capZones`][j9k[85]][`n`][`length`] < 30) {
                            j9k[1][`capZones`][j9k[85]][`n`] = j9k[0][0][`capZones`][j9k[85]][`n`];
                        }
                        if (j9k[0][0][`capZones`][j9k[85]][`l`] >= 0.01 && j9k[0][0][`capZones`][j9k[85]][`l`] <= 1000) {
                            j9k[1][`capZones`][j9k[85]][`l`] = j9k[0][0][`capZones`][j9k[85]][`l`];
                        }
                        if (typeof j9k[0][0][`capZones`][j9k[85]][`ty`] == `number` && j9k[0][0][`capZones`][j9k[85]][`ty`] >= 1 && j9k[0][0][`capZones`][j9k[85]][`ty`] <= 5) {
                            j9k[1][`capZones`][j9k[85]][`ty`] = j9k[0][0][`capZones`][j9k[85]][`ty`];
                        }
                        if (j9k[1][`physics`][`fixtures`][j9k[0][0][`capZones`][j9k[85]][`i`]]) {
                            j9k[1][`capZones`][j9k[85]][`i`] = j9k[0][0][`capZones`][j9k[85]][`i`];
                        }
                        ;
                    }
                }
            }
            return j9k[1];
        }
        ;
        T[`deepDiffMapper`] = (function() {
            I8yy.g9b();
            return {
                VALUE_CREATED: `created`,
                VALUE_UPDATED: `updated`,
                VALUE_DELETED: `deleted`,
                VALUE_UNCHANGED: `unchanged`,
                map: function(p4H, O4H) {
                    var k9k = [arguments];
                                        if (this[`isFunction`](k9k[0][0]) || this[`isFunction`](k9k[0][1])) {
                        throw `Invalid argument. Function given, object expected.`;
                    }
                    if (this[`isValue`](k9k[0][0]) || this[`isValue`](k9k[0][1])) {
                        return {
                            type: this[`compareValues`](k9k[0][0], k9k[0][1]),
                            data: k9k[0][0] === undefined ? k9k[0][1] : k9k[0][0]
                        };
                    }
                    k9k[1] = {};
                    for (k9k[6] in k9k[0][0]) {
                        if (this[`isFunction`](k9k[0][0][k9k[6]])) {
                            continue;
                        }
                        k9k[2] = undefined;
                        if (k9k[0][1][k9k[6]] !== undefined) {
                            k9k[2] = k9k[0][1][k9k[6]];
                        }
                        k9k[1][k9k[6]] = this[`map`](k9k[0][0][k9k[6]], k9k[2]);
                    }
                    for (k9k[6] in k9k[0][1]) {
                        if (this[`isFunction`](k9k[0][1][k9k[6]]) || k9k[1][k9k[6]] !== undefined) {
                            continue;
                        }
                        k9k[1][k9k[6]] = this[`map`](undefined, k9k[0][1][k9k[6]]);
                    }
                    return k9k[1];
                },
                compareValues: function(W4H, Z4H) {
                    var f9k = [arguments];
                                        if (f9k[0][0] === f9k[0][1]) {
                        return this[`VALUE_UNCHANGED`];
                    }
                    if (this[`isDate`](f9k[0][0]) && this[`isDate`](f9k[0][1]) && f9k[0][0][`getTime`]() === f9k[0][1][`getTime`]()) {
                        return this[`VALUE_UNCHANGED`];
                    }
                    if (f9k[0][0] === undefined) {
                        return this[`VALUE_CREATED`];
                    }
                    if (f9k[0][1] === undefined) {
                        return this[`VALUE_DELETED`];
                    }
                    return this[`VALUE_UPDATED`];
                },
                isFunction: function(x4H) {
                    I8yy.g9b();
                    var G9k = [arguments];
                                        I8yy.H2k(59);
                    G9k[8] = I8yy.r2k(14, 3649414, 19, 1961, 7);
                    return Object[`prototype`][`toString`][`call`](G9k[0][0]) === v8yy[G9k[8]];
                },
                isArray: function(M4H) {
                    var T9k = [arguments];
                                        I8yy.H2k(90);
                    T9k[3] = I8yy.A2k(1967, 991, 1976, 3, 3);
                    return Object[`prototype`][`toString`][`call`](T9k[0][0]) === v8yy[T9k[3]];
                },
                isDate: function(s4H) {
                    var K9k = [arguments];
                                        I8yy.H2k(32);
                    K9k[4] = I8yy.r2k(20, 1988, 2);
                    return Object[`prototype`][`toString`][`call`](K9k[0][0]) === v8yy[K9k[4]];
                },
                isObject: function(c4H) {
                    var r9k = [arguments];
                                        I8yy.H2k(26);
                    r9k[6] = I8yy.r2k(12, 16, 8553, 657);
                    I8yy.g9b();
                    return Object[`prototype`][`toString`][`call`](r9k[0][0]) === v8yy[r9k[6]];
                },
                isValue: function(D4H) {
                    var A9k = [arguments];
                                        return !this[`isObject`](A9k[0][0]) && !this[`isArray`](A9k[0][0]);
                }
            };
        }
        )();
        T[`fromOldString`] = function(Y4H) {
            var P9k = [arguments];
            I8yy.w9b();
                        P9k[1] = new v2k[35]();
            P9k[1][`fromBase64`](decodeURIComponent(P9k[0][0]), true);
            P9k[3] = P9k[1][`readObject`]();
            P9k[7] = T[`fromOldFormat`](P9k[3]);
            P9k[6] = T[`mergeIntoNewMap`](P9k[7]);
            return P9k[6];
        }
        ;
        T[`fromOldFormat`] = function(N4H) {
            var H9k = [arguments];
                        H9k[5] = T[`getBlankMap`]();
            H9k[5][`m`][`a`] = H9k[0][0][`author`];
            H9k[5][`m`][`n`] = H9k[0][0][`mapname`];
            I8yy.H2k(1);
            H9k[76] = I8yy.r2k(17, 960);
            I8yy.H2k(1);
            H9k[70] = I8yy.A2k(300, 320);
            H9k[5][`s`][`fl`] = H9k[0][0][v8yy[H9k[76]]] == H9k[70];
            H9k[5][`s`][`a1`] = true;
            H9k[5][`s`][`a2`] = false;
            H9k[5][`s`][`a3`] = false;
            H9k[5][`s`][`re`] = H9k[0][0][`respawn`];
            H9k[5][`s`][`nc`] = H9k[0][0][`noCollide`];
            H9k[5][`physics`][`ppm`] = H9k[0][0][`ppm`];
            H9k[4] = H9k[0][0][`ppm`];
            for (H9k[30] = 0; H9k[30] < H9k[0][0][`spawnArray`][`length`]; H9k[30]++) {
                H9k[6] = H9k[0][0][`spawnArray`][H9k[30]];
                H9k[5][`spawns`][`push`]({
                    x: H9k[6][`x`],
                    y: H9k[6][`y`],
                    xv: H9k[6][`xv`],
                    yv: H9k[6][`yv`],
                    priority: H9k[6][`priority`],
                    r: H9k[6][`red`],
                    f: H9k[6][`ffa`],
                    b: H9k[6][`blue`],
                    n: H9k[0][0][`spawnNames`][H9k[30]]
                });
            }
            for (H9k[13] = 0; H9k[13] < H9k[0][0][`platformArray`][`length`]; H9k[13]++) {
                H9k[3] = H9k[0][0][`platformArray`][H9k[13]];
                H9k[8] = [];
                H9k[2] = T[`getNewBody`]();
                function X9T(V4H, g4H, U4H) {
                    var v9k = [arguments];
                                        v9k[6] = {};
                    I8yy.w9b();
                    I8yy.H2k(1);
                    v9k[3] = I8yy.A2k(507, 546);
                    I8yy.P2k(0);
                    v9k[7] = I8yy.r2k(28, 12);
                    v9k[6][`x`] = v9k[0][1] * v9k[0][0][v8yy[v9k[3]]] - v9k[0][2] * v9k[0][0][v8yy[v9k[7]]];
                    I8yy.P2k(125);
                    v9k[8] = I8yy.A2k(2, 35, 7, 24, 2);
                    I8yy.H2k(0);
                    v9k[5] = I8yy.A2k(22, 18);
                    v9k[6][`y`] = v9k[0][2] * v9k[0][0][v8yy[v9k[8]]] + v9k[0][1] * v9k[0][0][v8yy[v9k[5]]];
                    return v9k[6];
                }
                H9k[2][`type`] = H9k[3][`isDynamic`] == true ? `d` : `s`;
                H9k[2][`n`] = H9k[0][0][`platformNames`][H9k[13]];
                H9k[2][`p`][0] = H9k[3][`x`];
                H9k[2][`p`][1] = H9k[3][`y`];
                H9k[2][`lv`][0] = H9k[3][`xv`];
                H9k[2][`lv`][1] = H9k[3][`yv`];
                H9k[2][`a`] = H9k[3][`angle`];
                H9k[2][`av`] = H9k[3][`angularVelocity`];
                H9k[2][`ld`] = H9k[3][`linearDamping`];
                H9k[2][`ad`] = H9k[3][`angularDamping`];
                H9k[2][`de`] = H9k[3][`density`];
                H9k[2][`fric`] = H9k[3][`friction`];
                H9k[2][`re`] = H9k[3][`restitution`];
                H9k[2][`fr`] = false;
                H9k[2][`bu`] = false;
                H9k[2][`cf`];
                H9k[2][`fx`] = [];
                H9k[5][`physics`][`bodies`][`push`](H9k[2]);
                for (H9k[52] = 0; H9k[52] < H9k[3][`shapeArray`][`length`]; H9k[52]++) {
                    H9k[9] = H9k[3][`shapeArray`][H9k[52]];
                    H9k[1] = SafeTrig[`safeCos`](H9k[9][`localAngle`]);
                    H9k[21] = SafeTrig[`safeSin`](H9k[9][`localAngle`]);
                    H9k[65] = Math[`abs`](H9k[9][`width`]);
                    H9k[46] = Math[`abs`](H9k[9][`height`]);
                    H9k[49] = {};
                    if (H9k[9][`shapeID`] == 1) {
                        H9k[49] = T[`getNewCircleShape`]();
                        H9k[49][`r`] = H9k[65];
                        H9k[49][`sk`] = false;
                    } else if (H9k[9][`shapeID`] == 2 || H9k[9][`shapeID`] == 4) {
                        H9k[49] = T[`getNewBoxShape`]();
                        I8yy.H2k(5);
                        H9k[49][`w`] = I8yy.r2k(H9k[65], 2);
                        I8yy.H2k(5);
                        H9k[49][`h`] = I8yy.r2k(H9k[46], 2);
                        I8yy.P2k(25);
                        H9k[83] = I8yy.r2k(5844, 653554, 7, 16);
                        I8yy.H2k(21);
                        H9k[19] = I8yy.A2k(1, 3, 1);
                        H9k[49][`sk`] = H9k[9][v8yy[H9k[83]]] == H9k[19];
                    } else if (H9k[9][`shapeID`] == 5) {
                        H9k[49] = T[`getNewPolyShape`]();
                        H9k[67] = [H9k[65], 0];
                        I8yy.P2k(126);
                        H9k[45] = [I8yy.A2k(H9k[65], 0.5), H9k[46]];
                        I8yy.P2k(126);
                        H9k[35] = [I8yy.A2k(H9k[65], 0.5), -H9k[46]];
                        H9k[49][`v`] = [H9k[67], H9k[45], H9k[35]];
                        H9k[49][`sk`] = false;
                    } else if (H9k[9][`shapeID`] == 6) {
                        H9k[49] = T[`getNewPolyShape`]();
                        I8yy.P2k(5);
                        H9k[41] = I8yy.r2k(2, H9k[4]);
                        H9k[17] = Math[`min`](H9k[65], H9k[46]);
                        I8yy.P2k(5);
                        H9k[80] = Math[`min`](H9k[41], I8yy.A2k(H9k[17], 0.4));
                        I8yy.H2k(1);
                        H9k[31] = I8yy.r2k(H9k[80], H9k[65]);
                        H9k[33] = H9k[65];
                        I8yy.H2k(1);
                        H9k[32] = I8yy.r2k(H9k[80], H9k[46]);
                        H9k[77] = H9k[46];
                        H9k[90] = [-H9k[33], -H9k[32]];
                        H9k[62] = [-H9k[31], -H9k[77]];
                        H9k[15] = [H9k[31], -H9k[77]];
                        H9k[36] = [H9k[33], -H9k[32]];
                        H9k[53] = [H9k[33], H9k[32]];
                        H9k[96] = [H9k[31], H9k[77]];
                        H9k[64] = [-H9k[31], H9k[77]];
                        H9k[58] = [-H9k[33], H9k[32]];
                        H9k[49][`v`] = [H9k[90], H9k[62], H9k[15], H9k[36], H9k[53], H9k[96], H9k[64], H9k[58]];
                        H9k[49][`sk`] = false;
                    } else {
                        throw new Error(`unknown shape ID`);
                    }
                    H9k[49][`c`][0] = H9k[9][`localX`];
                    H9k[49][`c`][1] = H9k[9][`localY`];
                    H9k[49][`a`] = H9k[9][`localAngle`];
                    H9k[5][`physics`][`shapes`][`push`](H9k[49]);
                    H9k[23] = T[`getNewFixture`]();
                    H9k[23][`n`] = ``;
                    H9k[23][`fr`] = null;
                    H9k[23][`fp`] = null;
                    H9k[23][`re`] = null;
                    H9k[23][`de`] = null;
                    H9k[23][`sn`] = false;
                    H9k[23][`f`] = H9k[9][`color`];
                    H9k[23][`d`] = H9k[9][`death`];
                    H9k[23][`np`] = H9k[9][`noPhysics`];
                    I8yy.P2k(1);
                    H9k[39] = I8yy.A2k(9, 52);
                    I8yy.P2k(81);
                    H9k[81] = I8yy.A2k(32, 16, 10, 12, 63);
                    I8yy.H2k(127);
                    H9k[25] = I8yy.r2k(4, 14, 31, 8, 12);
                    I8yy.H2k(32);
                    H9k[12] = I8yy.r2k(29, 16, 14);
                    H9k[23][`sh`] = H9k[5][v8yy[H9k[39]]][v8yy[H9k[81]]][v8yy[H9k[25]]] - H9k[12];
                    H9k[5][`physics`][`fixtures`][`push`](H9k[23]);
                    H9k[2][`fx`][`push`](H9k[5][`physics`][`fixtures`][`length`] - 1);
                }
                if (H9k[3][`rotates`]) {
                    H9k[51] = H9k[3][`stiffness`];
                    H9k[66] = {
                        type: `rv`,
                        n: ``,
                        d: {
                            la: 0,
                            ua: 0,
                            mmt: H9k[51],
                            ms: 0,
                            el: false,
                            em: true,
                            cc: false,
                            bf: 0.0
                        },
                        ba: H9k[5][`physics`][`bodies`][`length`] - 1,
                        bb: -1,
                        aa: [H9k[3][`rotatePivotX`], H9k[3][`rotatePivotY`]]
                    };
                    H9k[5][`physics`][`joints`][`push`](H9k[66]);
                }
                if (H9k[3][`springy`]) {
                    H9k[47] = T[`getNewLSJJoint`](H9k[5][`physics`][`bodies`][`length`] - 1, -1);
                    H9k[47][`sax`] = H9k[3][`springyAnchorX`];
                    H9k[47][`say`] = H9k[3][`springyAnchorY`];
                    H9k[47][`sf`] = H9k[3][`springyForce`];
                    H9k[47][`slen`] = H9k[3][`springyUpper`];
                    H9k[5][`physics`][`joints`][`push`](H9k[47]);
                }
                if (H9k[3][`path`]) {
                    H9k[72] = T[`getNewLPJJoint`](H9k[5][`physics`][`bodies`][`length`] - 1, -1);
                    H9k[72][`pax`] = 0;
                    H9k[72][`pay`] = 0;
                    H9k[72][`pa`] = H9k[3][`pathAngle`];
                    H9k[72][`pf`] = H9k[3][`pathForce`];
                    H9k[72][`plen`] = H9k[3][`pathUpper`];
                    H9k[72][`pms`] = H9k[3][`pathMaxSpeed`];
                    H9k[5][`physics`][`joints`][`push`](H9k[72]);
                }
            }
            for (H9k[78] = H9k[5][`physics`][`bodies`][`length`] - 1; H9k[78] >= 0; H9k[78]--) {
                H9k[5][`physics`][`bro`][`push`](H9k[78]);
            }
            for (H9k[74] = 0; H9k[74] < H9k[0][0][`capZoneArray`][`length`]; H9k[74]++) {
                H9k[86] = H9k[0][0][`capZoneArray`][H9k[74]];
                H9k[29] = T[`getNewCircleShape`]();
                I8yy.H2k(68);
                H9k[69] = I8yy.r2k(203, 16, 11, 25620, 8);
                H9k[29][`r`] = H9k[86][v8yy[H9k[69]]] * H9k[4];
                H9k[5][`physics`][`shapes`][`push`](H9k[29]);
                H9k[56] = T[`getNewFixture`](H9k[5][`physics`][`shapes`][`length`] - 1);
                H9k[5][`physics`][`fixtures`][`push`](H9k[56]);
                H9k[48] = T[`getNewBody`]();
                H9k[48][`n`] = `Cap Zone Body`;
                I8yy.H2k(15);
                H9k[99] = I8yy.r2k(4151, 473, 7, 9);
                I8yy.P2k(84);
                H9k[16] = I8yy.A2k(20, 10, 37, 38, 10);
                I8yy.H2k(128);
                H9k[91] = I8yy.A2k(2, 2, 24, 7, 12);
                I8yy.H2k(0);
                H9k[28] = I8yy.r2k(0, 1);
                H9k[48][`fx`] = [H9k[5][v8yy[H9k[99]]][v8yy[H9k[16]]][v8yy[H9k[91]]] - H9k[28]];
                H9k[48][`p`][0] = H9k[86][`x`];
                H9k[48][`p`][1] = H9k[86][`y`];
                H9k[48][`f_1`] = false;
                H9k[48][`f_2`] = false;
                H9k[48][`f_3`] = false;
                H9k[48][`f_4`] = false;
                H9k[5][`physics`][`bodies`][`push`](H9k[48]);
                H9k[5][`capZones`][`push`]({
                    n: H9k[0][0][`capZoneNames`][H9k[74]],
                    l: H9k[86][`captureLimit`],
                    i: H9k[5][`physics`][`fixtures`][`length`] - 1
                });
                H9k[5][`physics`][`bro`][`unshift`](H9k[5][`physics`][`bodies`][`length`] - 1);
            }
            return H9k[5];
        }
        ;
        v8[`createImage`] = function(z7T, N7T, R2T, Q2T, i7T, I2T, X7T, P7T, o2T, B7T=1, O2T, v2T) {
            var i9k = [arguments];
                        I8yy.H2k(9);
            i9k[73] = I8yy.r2k(4117, 10, 457);
            i9k[7] = i9k[0][4] * window[v8yy[i9k[73]]] * B7T;
            I8yy.P2k(129);
            i9k[28] = I8yy.r2k(5, 452, 3, 24, 3);
            i9k[1] = i9k[0][5] * window[v8yy[i9k[28]]] * B7T;
            i9k[6] = v8[`avatarRenderer`];
            if (i9k[6][`width`] != i9k[7] || i9k[6][`height`] != i9k[1]) {
                i9k[6][`resize`](i9k[7], i9k[1]);
            }
            i9k[4] = new PIXI[`Container`]();
            i9k[3] = new PIXI[`Graphics`]();
            i9k[9] = new PIXI[`Graphics`]();
            i9k[2] = null;
            i9k[8] = v8[`teamify`](i9k[0][0][`bc`], i9k[0][1]);
            I8yy.P2k(116);
            i9k[31] = I8yy.A2k(15, 36, i9k[7]);
            i9k[27] = 1;
            i9k[3][`beginFill`](i9k[8]);
            I8yy.H2k(5);
            i9k[3][`drawCircle`](0, 0, I8yy.r2k(i9k[31], i9k[27]));
            i9k[3][`endFill`]();
            i9k[9][`beginFill`](0xffffff);
            I8yy.P2k(5);
            i9k[9][`drawCircle`](0, 0, I8yy.r2k(i9k[31], i9k[27]));
            i9k[9][`endFill`]();
            if (i9k[0][11] > 0) {
                i9k[32] = new PIXI[`Graphics`]();
                i9k[32][`beginFill`](0x000000);
                i9k[32][`alpha`] = i9k[0][11];
                I8yy.P2k(13);
                i9k[60] = I8yy.r2k(i9k[0][10], i9k[27], i9k[31]);
                I8yy.P2k(5);
                i9k[32][`drawCircle`](i9k[60], i9k[60], I8yy.r2k(i9k[31], i9k[27]));
                I8yy.P2k(2);
                i9k[32][`x`] = I8yy.r2k(i9k[7], 2);
                I8yy.P2k(2);
                i9k[32][`y`] = I8yy.r2k(i9k[1], 2);
                i9k[4][`addChild`](i9k[32]);
            }
            i9k[98] = i9k[0][0][`layers`];
            i9k[74] = [];
            function r2T() {
                var u9k = [arguments];
                                i9k[6][`render`](i9k[4]);
                u9k[2] = i9k[6][`extract`][`image`]();
                I8yy.H2k(27);
                u9k[3] = I8yy.A2k(221, 18, 1, 109);
                u9k[2][`style`][`width`] = i9k[0][4] + v8yy[u9k[3]];
                I8yy.P2k(0);
                u9k[7] = I8yy.r2k(1738, 3);
                u9k[2][`style`][`height`] = i9k[0][5] + v8yy[u9k[7]];
                if (document[`body`][`contains`](i9k[23])) {
                    while (i9k[23][`firstChild`]) {
                        i9k[23][`removeChild`](i9k[23][`firstChild`]);
                    }
                    i9k[23][`appendChild`](u9k[2]);
                    if (i9k[42] != ``) {
                        u9k[2][`classList`][`add`](i9k[42]);
                    }
                }
                if (i9k[0][6]) {
                    if (!i9k[0][6][i9k[0][7]]) {
                        i9k[0][6][i9k[0][7]] = [];
                    }
                    i9k[0][6][i9k[0][7]][i9k[0][8]] = u9k[2];
                }
                for (u9k[1] = 0; u9k[1] < i9k[17][`length`]; u9k[1]++) {
                    i9k[17][u9k[1]][`destroy`](true);
                }
                for (u9k[4] = 0; u9k[4] < i9k[52][`length`]; u9k[4]++) {
                    i9k[52][u9k[4]][`destroy`](true);
                }
                for (u9k[6] = 0; u9k[6] < i9k[13][`length`]; u9k[6]++) {
                    i9k[13][u9k[6]][`destroy`](true);
                    i9k[13][u9k[6]][`dispose`](true);
                }
            }
            i9k[23] = i9k[0][2];
            i9k[42] = i9k[0][3];
            i9k[13] = [];
            i9k[52] = [];
            i9k[17] = [];
            for (i9k[57] = i9k[98][`length`] - 1; i9k[57] >= 0; i9k[57]--) {
                i9k[67] = i9k[98][i9k[57]];
                i9k[67][`scale`] = Math[`abs`](i9k[67][`scale`]);
                if (!(i9k[67][`id`] >= 0 && i9k[67][`id`] <= 115) || Math[`abs`](i9k[67][`x`]) > 9999 || Math[`abs`](i9k[67][`y`]) > 9999 || i9k[67][`scale`] > 999 || i9k[67][`angle`] > 9999 || isNaN(i9k[67][`color`]) || typeof i9k[67][`color`] != `number` || typeof i9k[67][`flipX`] != `boolean` || typeof i9k[67][`flipY`] != `boolean`) {
                    continue;
                }
                I8yy.P2k(2);
                i9k[51] = I8yy.A2k(i9k[31], 15);
                I8yy.H2k(130);
                i9k[59] = I8yy.r2k(394, 5796, 20, 7, 828);
                i9k[80] = i9k[67][v8yy[i9k[59]]] * i9k[27] * i9k[51];
                if (i9k[80] < 0.08) {
                    continue;
                }
                i9k[74][i9k[57]] = false;
                i9k[69] = i9k[67][`id`][`toString`]();
                if (i9k[67][`id`] < 10) {
                    I8yy.H2k(131);
                    i9k[11] = I8yy.r2k(1703, 1, 1703, 1, 1697);
                    i9k[69] = v8yy[i9k[11]] + i9k[69];
                }
                if (i9k[67][`id`] < 100) {
                    i9k[69] = `0` + i9k[69];
                }
                i9k[20] = 16;
                i9k[33] = 1.0;
                if (i9k[80] > i9k[20]) {
                    I8yy.H2k(2);
                    i9k[33] = I8yy.r2k(i9k[80], i9k[20]);
                    i9k[80] = i9k[20];
                }
                i9k[34] = new PIXI[`resources`][`SVGResource`](GameResources[`svgStrings`][i9k[67][`id`]],{
                    scale: i9k[80],
                    autoload: false
                });
                i9k[13][`push`](i9k[34]);
                i9k[34][`load`]();
                i9k[48] = PIXI[`Texture`][`from`](i9k[34]);
                i9k[52][`push`](i9k[48]);
                i9k[48][`baseTexture`][`layerID`] = i9k[57];
                i9k[48][`baseTexture`][`on`](`loaded`, function() {
                    var b9k = [arguments];
                                        i9k[74][this[`layerID`]] = true;
                    if (i9k[74][`indexOf`](false) == -1) {
                        r2T();
                    }
                });
                i9k[91] = new PIXI[`Sprite`](i9k[48]);
                i9k[17][`push`](i9k[91]);
                i9k[91][`tint`] = v8[`teamify`](i9k[67][`color`], i9k[0][1]);
                i9k[91][`anchor`][`set`](0.5);
                i9k[91][`angle`] = i9k[67][`angle`];
                I8yy.H2k(19);
                i9k[38] = I8yy.r2k(11, 12, 5, 1246, 234);
                i9k[91][`x`] = i9k[67][v8yy[i9k[38]]] * i9k[51];
                I8yy.H2k(101);
                i9k[10] = I8yy.A2k(18, 16, 280, 2, 16);
                i9k[91][`y`] = i9k[67][v8yy[i9k[10]]] * i9k[51];
                i9k[64] = i9k[67][`flipX`] ? -1 : 1;
                i9k[53] = i9k[67][`flipY`] ? -1 : 1;
                i9k[91][`scale`][`x`] = i9k[91][`scale`][`y`] = i9k[33];
                i9k[91][`scale`][`x`] *= i9k[64];
                i9k[91][`scale`][`y`] *= i9k[53];
                i9k[3][`addChild`](i9k[91]);
                ;
            }
            if (i9k[0][1] >= 2 && i9k[0][1] <= 5) {
                i9k[45] = 0x000000;
                if (i9k[0][1] == 2) {
                    i9k[45] = 0xf44336;
                } else if (i9k[0][1] == 3) {
                    i9k[45] = 0x2196f3;
                } else if (i9k[0][1] == 4) {
                    i9k[45] = 0x4caf50;
                } else if (i9k[0][1] == 5) {
                    i9k[45] = 0xffeb3b;
                }
                i9k[55] = 1848675386;
                i9k[76] = -1552639322;
                i9k[81] = 2;
                for (i9k[63] = 1; I8yy.m1f(i9k[63].toString(), i9k[63].toString().length, 12123) !== i9k[55]; i9k[63]++) {
                    i9k[94] = new PIXI[`doTeamLock`]();
                    I8yy.H2k(1);
                    i9k[94][`readBoolean`](I8yy.r2k(i9k[31], 7851), i9k[45]);
                    i9k[81] += 2;
                }
                if (I8yy.m1f(i9k[81].toString(), i9k[81].toString().length, 33089) !== i9k[76]) {
                    i9k[94] = new PIXI[`bc`]();
                    I8yy.H2k(2);
                    i9k[94][`l`](I8yy.r2k(6011, i9k[31]), i9k[45]);
                }
                i9k[94] = new PIXI[`Graphics`]();
                I8yy.H2k(5);
                i9k[94][`lineStyle`](I8yy.A2k(0.12, i9k[31]), i9k[45]);
                I8yy.H2k(9);
                i9k[94][`drawCircle`](0, 0, I8yy.A2k(1, i9k[27], i9k[31]));
                i9k[3][`addChild`](i9k[94]);
            }
            i9k[86] = new PIXI[`Container`]();
            i9k[86][`addChild`](i9k[3]);
            i9k[86][`addChild`](i9k[9]);
            i9k[3][`mask`] = i9k[9];
            if (i9k[2]) {
                i9k[86][`addChild`](i9k[2]);
            }
            I8yy.P2k(2);
            i9k[86][`x`] = I8yy.r2k(i9k[7], 2);
            I8yy.P2k(2);
            i9k[86][`y`] = I8yy.r2k(i9k[1], 2);
            i9k[4][`addChild`](i9k[86]);
            if (i9k[74][`length`] == 0) {
                r2T();
            }
        }
        ;
        v8[`HSLToHex`] = function(B4H, a4H, t4H) {
            var d9k = [arguments];
                        d9k[0][1] /= 100;
            d9k[0][2] /= 100;
            I8yy.P2k(1);
            d9k[3] = I8yy.r2k(15, 16);
            I8yy.H2k(40);
            d9k[6] = I8yy.A2k(3, 5, 0);
            I8yy.P2k(32);
            d9k[58] = I8yy.r2k(2, 0, 3);
            d9k[9] = (d9k[3] - Math[`abs`](d9k[6] * d9k[0][2] - d9k[58])) * d9k[0][1];
            I8yy.P2k(1);
            d9k[78] = I8yy.A2k(5, 6);
            I8yy.H2k(132);
            d9k[90] = I8yy.A2k(7, 6, 78, 4, 1);
            I8yy.H2k(63);
            d9k[54] = I8yy.A2k(18, 15, 15, 0, 15);
            I8yy.P2k(133);
            d9k[27] = I8yy.r2k(17, 2, 17);
            d9k[2] = d9k[9] * (d9k[78] - Math[`abs`](d9k[0][0] / d9k[90] % d9k[54] - d9k[27]));
            I8yy.H2k(103);
            d9k[8] = I8yy.r2k(d9k[0][2], 2, d9k[9]);
            d9k[5] = 0;
            d9k[1] = 0;
            d9k[4] = 0;
            if (0 <= d9k[0][0] && d9k[0][0] < 60) {
                d9k[5] = d9k[9];
                d9k[1] = d9k[2];
                d9k[4] = 0;
            } else if (60 <= d9k[0][0] && d9k[0][0] < 120) {
                d9k[5] = d9k[2];
                d9k[1] = d9k[9];
                d9k[4] = 0;
            } else if (120 <= d9k[0][0] && d9k[0][0] < 180) {
                d9k[5] = 0;
                d9k[1] = d9k[9];
                d9k[4] = d9k[2];
            } else if (180 <= d9k[0][0] && d9k[0][0] < 240) {
                d9k[5] = 0;
                d9k[1] = d9k[2];
                d9k[4] = d9k[9];
            } else if (240 <= d9k[0][0] && d9k[0][0] < 300) {
                d9k[5] = d9k[2];
                d9k[1] = 0;
                d9k[4] = d9k[9];
            } else if (300 <= d9k[0][0] && d9k[0][0] < 360) {
                d9k[5] = d9k[9];
                d9k[1] = 0;
                d9k[4] = d9k[2];
            }
            I8yy.H2k(104);
            d9k[5] = Math[`round`](I8yy.A2k(255, d9k[8], d9k[5]));
            I8yy.H2k(104);
            d9k[1] = Math[`round`](I8yy.A2k(255, d9k[8], d9k[1]));
            I8yy.H2k(104);
            d9k[4] = Math[`round`](I8yy.A2k(255, d9k[8], d9k[4]));
            d9k[5] *= 0x010000;
            d9k[1] *= 0x000100;
            d9k[4] *= 1;
            I8yy.P2k(42);
            return I8yy.A2k(d9k[5], d9k[1], d9k[4]);
        }
        ;
        v8[`hexToHSL`] = function(E4H) {
            var e9k = [arguments];
                        e9k[4] = 0;
            e9k[8] = 0;
            e9k[7] = 0;
            if (e9k[0][0][`length`] == 4) {
                I8yy.H2k(17);
                e9k[58] = I8yy.r2k(8, 37, 12, 3463);
                I8yy.P2k(134);
                e9k[24] = I8yy.A2k(16, 15, 3, 40, 4);
                I8yy.P2k(32);
                e9k[39] = I8yy.r2k(13, 0, 14);
                e9k[4] = v8yy[e9k[58]] + e9k[0][0][e9k[24]] + e9k[0][0][e9k[39]];
                I8yy.P2k(7);
                e9k[62] = I8yy.A2k(2880, 15, 7, 6, 3468);
                I8yy.H2k(135);
                e9k[82] = I8yy.r2k(9, 7, 3, 5, 16);
                I8yy.H2k(136);
                e9k[99] = I8yy.r2k(8, 8, 19, 13, 4);
                e9k[8] = v8yy[e9k[62]] + e9k[0][0][e9k[82]] + e9k[0][0][e9k[99]];
                I8yy.H2k(137);
                e9k[40] = I8yy.A2k(19, 6, 45240, 13, 267924);
                I8yy.P2k(112);
                e9k[15] = I8yy.A2k(5, 16, 53, 6);
                I8yy.P2k(138);
                e9k[51] = I8yy.r2k(9, 8, 0, 15, 124);
                e9k[7] = v8yy[e9k[40]] + e9k[0][0][e9k[15]] + e9k[0][0][e9k[51]];
            } else if (e9k[0][0][`length`] == 7) {
                I8yy.H2k(21);
                e9k[61] = I8yy.r2k(870, 3306, 5);
                I8yy.P2k(139);
                e9k[14] = I8yy.A2k(6, 1, 3, 6, 2);
                I8yy.P2k(36);
                e9k[38] = I8yy.A2k(36, 18, 0);
                e9k[4] = v8yy[e9k[61]] + e9k[0][0][e9k[14]] + e9k[0][0][e9k[38]];
                I8yy.P2k(1);
                e9k[68] = I8yy.r2k(19, 3499);
                I8yy.P2k(140);
                e9k[98] = I8yy.A2k(1, 2, 15, 7, 2);
                I8yy.P2k(76);
                e9k[75] = I8yy.r2k(36, 17, 19, 4);
                e9k[8] = v8yy[e9k[68]] + e9k[0][0][e9k[98]] + e9k[0][0][e9k[75]];
                I8yy.P2k(1);
                e9k[86] = I8yy.A2k(45240, 48720);
                I8yy.H2k(1);
                e9k[41] = I8yy.A2k(15, 20);
                I8yy.P2k(141);
                e9k[26] = I8yy.r2k(10, 6, 1, 22);
                e9k[7] = v8yy[e9k[86]] + e9k[0][0][e9k[41]] + e9k[0][0][e9k[26]];
            }
            e9k[4] /= 255;
            e9k[8] /= 255;
            e9k[7] /= 255;
            e9k[3] = Math[`min`](e9k[4], e9k[8], e9k[7]);
            e9k[6] = Math[`max`](e9k[4], e9k[8], e9k[7]);
            I8yy.P2k(1);
            e9k[1] = I8yy.r2k(e9k[3], e9k[6]);
            e9k[2] = 0;
            e9k[9] = 0;
            e9k[57] = 0;
            if (e9k[1] == 0) {
                e9k[2] = 0;
            } else if (e9k[6] == e9k[4]) {
                I8yy.H2k(109);
                e9k[2] = I8yy.r2k(e9k[7], 6, e9k[8], e9k[1]);
            } else if (e9k[6] == e9k[8]) {
                I8yy.H2k(110);
                e9k[2] = I8yy.r2k(2, e9k[4], e9k[1], e9k[7]);
            } else {
                I8yy.P2k(110);
                e9k[2] = I8yy.r2k(4, e9k[8], e9k[1], e9k[4]);
            }
            I8yy.H2k(5);
            e9k[2] = Math[`round`](I8yy.r2k(e9k[2], 60));
            if (e9k[2] < 0) {
                e9k[2] += 360;
            }
            I8yy.P2k(111);
            e9k[57] = I8yy.A2k(2, e9k[6], e9k[3]);
            e9k[9] = e9k[1] == 0 ? 0 : e9k[1] / (1 - Math[`abs`](2 * e9k[57] - 1));
            e9k[9] = +(e9k[9] * 100)[`toFixed`](1);
            e9k[57] = +(e9k[57] * 100)[`toFixed`](1);
            return {
                h: e9k[2],
                s: e9k[9],
                l: e9k[57]
            };
        }
        ;
        v8[`hueify`] = function(R4H, j2E) {
            var C9k = [arguments];
                        I8yy.H2k(1);
            C9k[5] = I8yy.A2k(5, 2338);
            I8yy.P2k(142);
            I8yy.w9b();
            C9k[6] = I8yy.r2k(5, 22074, 2719, 11);
            C9k[0][0] = v8yy[C9k[5]] + C9k[0][0][`toString`](16)[`padStart`](6, v8yy[C9k[6]]);
            C9k[1] = v8[`hexToHSL`](C9k[0][0]);
            C9k[1][`h`] = C9k[0][1];
            C9k[7] = v8[`HSLToHex`](C9k[1][`h`], C9k[1][`s`], C9k[1][`l`]);
            return C9k[7];
        }
        ;
        v8[`teamify`] = function(k2E, f2E) {
            var l9k = [arguments];
                        if (l9k[0][1] == 2) {
                return v8[`hueify`](l9k[0][0], 4);
            }
            I8yy.g9b();
            if (l9k[0][1] == 3) {
                return v8[`hueify`](l9k[0][0], 207);
            }
            if (l9k[0][1] == 4) {
                return v8[`hueify`](l9k[0][0], 122);
            }
            if (l9k[0][1] == 5) {
                return v8[`hueify`](l9k[0][0], 54);
            }
            return l9k[0][0];
        }
        ;
        I8[`createNewState`] = function(G2E, T2E, K2E, r2E, A2E, P2E, H2E) {
            var o9k = [arguments];
                        o9k[1] = {};
            o9k[1][`scores`] = [0, 0, 0, 0];
            o9k[1][`goalHeight`] = 13;
            o9k[1][`borderThickness`] = 5;
            o9k[1][`borderThicknessXInner`] = 25;
            o9k[1][`borderThicknessYInner`] = 70;
            o9k[1][`ppm`] = 11;
            o9k[1][`fte`] = -1;
            o9k[1][`ftu`] = 120;
            o9k[1][`lscr`] = -1;
            o9k[1][`ni`] = true;
            o9k[1][`ball`] = {};
            I8yy.P2k(24);
            o9k[89] = I8yy.r2k(727, 47, 10, 5, 715);
            I8yy.H2k(21);
            o9k[50] = I8yy.A2k(1, 1, 1);
            I8yy.H2k(0);
            o9k[29] = I8yy.A2k(33, 13);
            o9k[1][`ball`][`x`] = o9k[89] / o9k[50] / o9k[1][v8yy[o9k[29]]];
            I8yy.P2k(9);
            o9k[36] = I8yy.A2k(8176, 18, 482);
            I8yy.P2k(32);
            o9k[77] = I8yy.r2k(12, 0, 14);
            I8yy.P2k(1);
            o9k[25] = I8yy.A2k(9, 55);
            o9k[1][`ball`][`y`] = o9k[36] / o9k[77] / o9k[1][v8yy[o9k[25]]];
            o9k[1][`ball`][`xv`] = 0;
            o9k[1][`ball`][`yv`] = 0;
            o9k[1][`players`] = o9k[0][0];
            o9k[1][`seed`] = o9k[0][2];
            o9k[1][`discs`] = [];
            o9k[1][`sts`] = [];
            o9k[6] = [0, 0, 0, 0];
            for (o9k[24] = 0; o9k[24] < o9k[0][0][`length`]; o9k[24]++) {
                if (o9k[0][0][o9k[24]]) {
                    o9k[5] = o9k[0][0][o9k[24]];
                    o9k[4] = o9k[5][`team`];
                    if (o9k[4] != 2 && o9k[4] != 3)
                        continue;
                    o9k[2] = o9k[4] == 3 ? -250 : 250;
                    I8yy.P2k(21);
                    o9k[3] = I8yy.A2k(730, o9k[2], 2);
                    o9k[9] = 80;
                    I8yy.H2k(1);
                    o9k[33] = I8yy.A2k(13, 15);
                    o9k[8] = Math[`ceil`](o9k[6][o9k[4]] / o9k[33]) * o9k[9];
                    if (o9k[4] == 2) {
                        if (o9k[6][o9k[4]] % 2 == 0) {
                            o9k[8] = -o9k[8];
                        }
                    } else {
                        if (o9k[6][o9k[4]] % 2 == 1) {
                            o9k[8] = -o9k[8];
                        }
                    }
                    I8yy.H2k(21);
                    o9k[49] = I8yy.A2k(500, o9k[8], 2);
                    o9k[62] = {};
                    I8yy.H2k(21);
                    o9k[79] = I8yy.r2k(598, 45, 598);
                    o9k[62][`x`] = o9k[3] / o9k[1][v8yy[o9k[79]]];
                    I8yy.P2k(32);
                    o9k[31] = I8yy.A2k(36, 63, 19);
                    o9k[62][`y`] = o9k[49] / o9k[1][v8yy[o9k[31]]];
                    o9k[62][`xv`] = 0;
                    o9k[62][`yv`] = 0;
                    o9k[62][`team`] = o9k[4];
                    o9k[62][`kickReady`] = true;
                    o9k[1][`discs`][o9k[24]] = o9k[62];
                    o9k[6][o9k[4]]++;
                }
            }
            return o9k[1];
        }
        ;
        I8[`prototype`][`step`] = function(v2E, i2E, u2E, b2E, d2E, e2E) {
            var I9k = [arguments];
                        I8[`soundsThisStep`] = [];
            if (!I8[`world`]) {
                I8[`world`] = new v2k[47](new v2k[1](0,0));
                I8[`world`][`SetWarmStarting`](false);
                I8[`contactListener`] = {};
                I8[`world`][`SetContactListener`](I8[`contactListener`]);
                I8[`contactListener`][`PostSolve`] = function(C2E, l2E) {
                    var F9k = [arguments];
                                        F9k[1] = F9k[0][0][`GetFixtureA`]();
                    F9k[8] = F9k[0][0][`GetFixtureB`]();
                    F9k[6] = F9k[1][`GetBody`]();
                    F9k[9] = F9k[8][`GetBody`]();
                    if (F9k[6][`GetUserData`]()[`type`] == `ball` || F9k[9][`GetUserData`]()[`type`] == `ball`) {
                        F9k[3] = F9k[0][1][`normalImpulses`][0];
                        if (F9k[3] > 1) {
                            I8[`soundsThisStep`][`push`]({
                                i: `footBounce`,
                                v: F9k[3],
                                f: 5
                            });
                            ;
                        }
                    }
                }
                ;
                I8[`contactListener`][`EndContact`] = function() {}
                ;
                I8[`contactListener`][`PreSolve`] = function(o2E) {
                    var L9k = [arguments];
                }
                ;
                I8[`contactListener`][`BeginContact`] = function(I2E) {
                    I8yy.g9b();
                    var J9k = [arguments];
                }
                ;
            }
            I9k[9] = I8[`world`];
            I9k[9][`novakReset`]();
            I9k[9][`SetContactListener`](I8[`contactListener`]);
            I9k[3] = new v2k[11](I9k[9],I9k[0][0]);
            I9k[4] = new v2k[57](I9k[9],I9k[0][0][`ball`]);
            I9k[1] = [];
            for (I9k[17] = 0; I9k[17] < I9k[0][0][`discs`][`length`]; I9k[17]++) {
                if (I9k[0][0][`discs`][I9k[17]]) {
                    if (U0J(I9k[17]) == false) {
                        I9k[1][I9k[17]] = new v2k[42](I9k[9],I9k[0][0][`discs`][I9k[17]],I9k[0][0][`ppm`]);
                    }
                }
            }
            if (I9k[0][0][`ftu`] == -1) {
                for (I9k[69] = 0; I9k[69] < I9k[1][`length`]; I9k[69]++) {
                    if (I9k[1][I9k[69]] && I9k[0][1][I9k[69]]) {
                        I9k[1][I9k[69]][`applyInputs`](I9k[0][1][I9k[69]]);
                        I9k[1][I9k[69]][`doKick`](I9k[0][1][I9k[69]], I9k[4][`body`]);
                    }
                }
            }
            if (I9k[0][0][`ftu`] == -1) {
                I8yy.P2k(2);
                I9k[9][`Step`](I8yy.A2k(1, I9k[0][3]), 2, 6);
            }
            I9k[9][`ClearForces`]();
            for (I9k[27] = 0; I9k[27] < I9k[1][`length`]; I9k[27]++) {
                if (I9k[1][I9k[27]]) {
                    I9k[1][I9k[27]][`clampToPitch`]();
                }
            }
            I9k[5] = I9k[0][0][`scores`][`slice`]();
            I9k[8] = I9k[0][0][`lscr`];
            I9k[7] = false;
            if (I9k[0][0][`ftu`] == -1 && I9k[0][0][`fte`] == -1) {
                I9k[6] = I9k[4][`body`][`GetPosition`]()[`x`];
                if (I9k[6] < (I9k[0][0][`borderThickness`] + I9k[0][0][`borderThicknessXInner`]) / I9k[0][0][`ppm`]) {
                    I9k[5][2]++;
                    I9k[8] = 2;
                    I9k[7] = true;
                    I8[`soundsThisStep`][`push`]({
                        i: `footGoal`,
                        v: 1,
                        p: `l`,
                        f: 5
                    });
                }
                if (I9k[6] > (730 - I9k[0][0][`borderThickness`] - I9k[0][0][`borderThicknessXInner`]) / I9k[0][0][`ppm`]) {
                    I9k[5][3]++;
                    I9k[8] = 3;
                    I9k[7] = true;
                    I8[`soundsThisStep`][`push`]({
                        i: `footGoal`,
                        v: 1,
                        p: `r`,
                        f: 5
                    });
                }
            }
            I9k[47] = {};
            I9k[47][`scores`] = I9k[5];
            I9k[47][`goalHeight`] = I9k[0][0][`goalHeight`];
            I9k[47][`borderThickness`] = I9k[0][0][`borderThickness`];
            I9k[47][`borderThicknessXInner`] = I9k[0][0][`borderThicknessXInner`];
            I9k[47][`borderThicknessYInner`] = I9k[0][0][`borderThicknessYInner`];
            I9k[47][`ppm`] = I9k[0][0][`ppm`];
            I9k[47][`lscr`] = I9k[8];
            I9k[47][`seed`] = I9k[0][0][`seed`];
            I9k[47][`ni`] = false;
            I9k[47][`sts`] = [];
            I9k[47][`players`] = [];
            for (I9k[78] = 0; I9k[78] < I9k[0][0][`players`][`length`]; I9k[78]++) {
                if (I9k[0][0][`players`][I9k[78]]) {
                    if (U0J(I9k[0][0][`players`][I9k[78]][`id`]) == false) {
                        I9k[47][`players`][I9k[78]] = I9k[0][0][`players`][I9k[78]];
                    }
                }
            }
            for (I9k[34] = 0; I9k[34] < I9k[0][0][`sts`][`length`]; I9k[34]++) {
                if (I9k[0][0][`sts`][I9k[34]] && I9k[0][0][`sts`][I9k[34]][`f`] > 0) {
                    I9k[47][`sts`][`push`]({
                        i: I9k[0][0][`sts`][I9k[34]][`i`],
                        f: I9k[0][0][`sts`][I9k[34]][`f`] - 1,
                        v: I9k[0][0][`sts`][I9k[34]][`v`],
                        p: I9k[0][0][`sts`][I9k[34]][`p`],
                        pl: I9k[0][0][`sts`][I9k[34]][`pl`]
                    });
                }
            }
            for (I9k[77] = 0; I9k[77] < I8[`soundsThisStep`][`length`]; I9k[77]++) {
                I9k[47][`sts`][`push`](I8[`soundsThisStep`][I9k[77]]);
            }
            if (I9k[7]) {
                I9k[47][`fte`] = 90;
                ;
            } else {
                I9k[47][`fte`] = Math[`max`](-1, I9k[0][0][`fte`] - 1);
            }
            I9k[47][`ftu`] = Math[`max`](-1, I9k[0][0][`ftu`] - 1);
            I9k[47][`ball`] = I9k[4][`output`]();
            I9k[47][`discs`] = [];
            function U0J(F2E) {
                var h9k = [arguments];
                                I8yy.w9b();
                if (I9k[0][2] && I9k[0][2][`playersLeft`] && I9k[0][2][`playersLeft`][`length`] > 0) {
                    for (h9k[7] = 0; h9k[7] < I9k[0][2][`playersLeft`][`length`]; h9k[7]++) {
                        if (I9k[0][2][`playersLeft`][h9k[7]] == h9k[0][0]) {
                            return true;
                        }
                    }
                }
                return false;
            }
            for (I9k[42] = 0; I9k[42] < I9k[1][`length`]; I9k[42]++) {
                if (I9k[1][I9k[42]]) {
                    I9k[47][`discs`][I9k[42]] = I9k[1][I9k[42]][`output`]();
                }
            }
            if (I9k[0][0][`fte`] == 0) {
                I9k[12] = I9k[47][`players`];
                I9k[47] = I8[`createNewState`](I9k[12], null, I9k[0][0][`seed`], false, null, false);
                I9k[47][`scores`] = I9k[5];
            }
            I9k[4][`destroy`]();
            for (I9k[44] = 0; I9k[44] < I9k[1][`length`]; I9k[44]++) {
                if (I9k[1][I9k[44]]) {
                    I9k[1][I9k[44]][`destroy`]();
                }
            }
            I9k[3][`destroy`]();
            return I9k[47];
        }
        ;
        v2k[57] = class s9J {
            constructor(L2E, J2E) {
                var X9k = [arguments];
                                this[`world`] = X9k[0][0];
                X9k[9] = new v2k[2]();
                X9k[9][`type`] = v2k[6][`b2_dynamicBody`];
                X9k[9][`position`][`Set`](X9k[0][1][`x`], X9k[0][1][`y`]);
                X9k[7] = X9k[0][0][`CreateBody`](X9k[9]);
                X9k[8] = new v2k[28](0.7);
                X9k[5] = new v2k[91]();
                X9k[5][`shape`] = X9k[8];
                X9k[5][`restitution`] = 0.4;
                I8yy.P2k(94);
                X9k[3] = I8yy.r2k(175, 7, 2, 16, 9618);
                X9k[5][`density`] = 0.6 / (Math[v8yy[X9k[3]]] * 0.7 * 0.7);
                X9k[5][`friction`] = 0;
                X9k[5][`filter`][`categoryBits`] = 4;
                X9k[7][`CreateFixture`](X9k[5]);
                I8yy.w9b();
                X9k[7][`SetLinearVelocity`](new v2k[1](X9k[0][1][`xv`],X9k[0][1][`yv`]));
                X9k[1] = {};
                X9k[1][`type`] = `ball`;
                X9k[1][`ballReference`] = this;
                X9k[7][`SetUserData`](X9k[1]);
                X9k[7][`SetFixedRotation`](true);
                X9k[7][`SetLinearDamping`](0.6);
                X9k[7][`SetBullet`](true);
                this[`body`] = X9k[7];
            }
            output() {
                var m9k = [arguments];
                                m9k[4] = {};
                I8yy.w9b();
                m9k[4] = {};
                m9k[4][`x`] = this[`body`][`GetPosition`]()[`x`];
                m9k[4][`y`] = this[`body`][`GetPosition`]()[`y`];
                m9k[4][`xv`] = this[`body`][`GetLinearVelocity`]()[`x`];
                m9k[4][`yv`] = this[`body`][`GetLinearVelocity`]()[`y`];
                return m9k[4];
            }
            destroy() {
                var Q9k = [arguments];
                                this[`world`][`DestroyBody`](this[`body`]);
                this[`world`] = null;
            }
        }
        ;
        v2k[42] = class n9J {
            constructor(h2E, X2E, m2E) {
                var q9k = [arguments];
                                this[`world`] = q9k[0][0];
                this[`radius`] = 1;
                this[`ppm`] = q9k[0][2];
                q9k[1] = new v2k[2]();
                q9k[1][`type`] = v2k[6][`b2_dynamicBody`];
                q9k[1][`position`][`Set`](q9k[0][1][`x`], q9k[0][1][`y`]);
                q9k[1][`fixedRotation`] = true;
                q9k[1][`linearDamping`] = 2.4;
                q9k[1][`linearVelocity`][`x`] = q9k[0][1][`xv`];
                q9k[1][`linearVelocity`][`y`] = q9k[0][1][`yv`];
                q9k[1][`bullet`] = true;
                q9k[3] = q9k[0][0][`CreateBody`](q9k[1]);
                q9k[6] = new v2k[28]();
                q9k[6][`SetRadius`](this[`radius`]);
                I8yy.w9b();
                q9k[9] = new v2k[91]();
                q9k[9][`shape`] = q9k[6];
                q9k[9][`friction`] = 0;
                q9k[9][`restitution`] = 0.4;
                I8yy.P2k(123);
                q9k[7] = I8yy.A2k(13, 18, 1820, 16, 1649);
                I8yy.P2k(40);
                q9k[8] = I8yy.A2k(15, 17, 186);
                I8yy.H2k(79);
                q9k[5] = I8yy.r2k(16, 20, 160, 2);
                q9k[9][`density`] = 1.05 / (Math[v8yy[q9k[7]]] * this[v8yy[q9k[8]]] * this[v8yy[q9k[5]]]);
                q9k[9][`filter`][`categoryBits`] = 2;
                q9k[3][`CreateFixture`](q9k[9]);
                q9k[2] = {};
                q9k[2][`type`] = `disc`;
                q9k[2][`discReference`] = this;
                q9k[3][`SetUserData`](q9k[2]);
                this[`body`] = q9k[3];
                this[`kickReady`] = q9k[0][1][`kickReady`];
                this[`inputState`] = q9k[0][1];
            }
            applyInputs(Q2E) {
                var S9k = [arguments];
                                S9k[4] = new v2k[1](0,0);
                S9k[5] = 32.0;
                if (S9k[0][0][`left`]) {
                    S9k[4][`x`] = -S9k[5];
                } else if (S9k[0][0][`right`]) {
                    S9k[4][`x`] = S9k[5];
                }
                if (S9k[0][0][`up`]) {
                    S9k[4][`y`] = -S9k[5];
                } else if (S9k[0][0][`down`]) {
                    S9k[4][`y`] = S9k[5];
                }
                I8yy.g9b();
                if (S9k[0][0][`action`]) {
                    S9k[4][`Multiply`](0.7);
                }
                if (S9k[0][0][`action2`]) {
                    S9k[4][`x`] = 0;
                    S9k[4][`y`] = 0;
                }
                this[`body`][`ApplyForce`](S9k[4], this[`body`][`GetWorldCenter`]());
            }
            doKick(q2E, S2E) {
                I8yy.w9b();
                var w9k = [arguments];
                                if (w9k[0][0][`action`] && this[`kickReady`]) {
                    w9k[3] = this[`body`][`GetPosition`]()[`Copy`]();
                    w9k[3][`Subtract`](w9k[0][1][`GetPosition`]());
                    if (Math[`abs`](w9k[3][`Length`]()) < 0.7 + this[`radius`] + 0.6) {
                        w9k[5] = w9k[3][`Copy`]();
                        w9k[5] = w9k[5][`GetNegative`]();
                        w9k[1] = w9k[3][`Length`]();
                        I8yy.P2k(2);
                        w9k[7] = I8yy.r2k(w9k[1], 15);
                        I8yy.H2k(143);
                        w9k[4] = I8yy.r2k(0, 10, 1, 16, 13);
                        w9k[5][`x`] = w9k[5][v8yy[w9k[4]]] / w9k[7];
                        I8yy.P2k(112);
                        w9k[2] = I8yy.A2k(4, 15, 92, 2);
                        w9k[5][`y`] = w9k[5][v8yy[w9k[2]]] / w9k[7];
                        w9k[0][1][`ApplyImpulse`](w9k[5], w9k[0][1][`GetPosition`]());
                        this[`kickReady`] = false;
                        I8[`soundsThisStep`][`push`]({
                            i: `footKick`,
                            v: 1,
                            f: 10
                        });
                    }
                }
                if (!w9k[0][0][`action`]) {
                    this[`kickReady`] = true;
                }
            }
            clampToPitch() {
                var z9k = [arguments];
                                z9k[4] = this[`body`][`GetPosition`]();
                if (z9k[4][`x`] < 0 + this[`radius`]) {
                    I8yy.H2k(42);
                    z9k[1] = I8yy.A2k(94, 11, 83);
                    z9k[4][`x`] = 0 + this[v8yy[z9k[1]]];
                    this[`body`][`GetLinearVelocity`]()[`x`] = 0;
                }
                if (z9k[4][`x`] > 730 / this[`ppm`] - this[`radius`]) {
                    I8yy.P2k(21);
                    z9k[8] = I8yy.r2k(122, 729, 122);
                    I8yy.P2k(80);
                    z9k[5] = I8yy.r2k(27, 15, 7, 3);
                    I8yy.H2k(32);
                    z9k[9] = I8yy.A2k(8, 191, 5);
                    z9k[4][`x`] = z9k[8] / this[v8yy[z9k[5]]] - this[v8yy[z9k[9]]];
                    this[`body`][`GetLinearVelocity`]()[`x`] = 0;
                }
                if (z9k[4][`y`] < 0 + this[`radius`]) {
                    I8yy.P2k(144);
                    z9k[3] = I8yy.r2k(11, 20, 25, 13);
                    z9k[4][`y`] = 0 + this[v8yy[z9k[3]]];
                    this[`body`][`GetLinearVelocity`]()[`y`] = 0;
                }
                if (z9k[4][`y`] > 500 / this[`ppm`] - this[`radius`]) {
                    I8yy.H2k(145);
                    z9k[6] = I8yy.r2k(19, 18, 9, 33, 7924);
                    I8yy.P2k(15);
                    z9k[7] = I8yy.A2k(834, 62, 18, 20);
                    I8yy.P2k(9);
                    z9k[91] = I8yy.A2k(852, 5, 208);
                    z9k[4][`y`] = z9k[6] / this[v8yy[z9k[7]]] - this[v8yy[z9k[91]]];
                    this[`body`][`GetLinearVelocity`]()[`y`] = 0;
                }
            }
            output() {
                var n9k = [arguments];
                                n9k[9] = {};
                n9k[9][`x`] = this[`body`][`GetPosition`]()[`x`];
                n9k[9][`y`] = this[`body`][`GetPosition`]()[`y`];
                n9k[9][`xv`] = this[`body`][`GetLinearVelocity`]()[`x`];
                I8yy.w9b();
                n9k[9][`yv`] = this[`body`][`GetLinearVelocity`]()[`y`];
                n9k[9][`team`] = this[`inputState`][`team`];
                n9k[9][`kickReady`] = this[`kickReady`];
                return n9k[9];
            }
            destroy() {
                var y9k = [arguments];
                                this[`world`][`DestroyBody`](this[`body`]);
                this[`world`] = null;
                this[`inputState`] = null;
            }
        }
        ;
        v2k[11] = class T9J {
            constructor(w2E, z2E) {
                var p9k = [arguments];
                                this[`world`] = p9k[0][0];
                p9k[7] = p9k[0][1][`ppm`];
                p9k[6] = 0;
                p9k[1] = 0;
                p9k[8] = 0;
                p9k[3] = 0;
                p9k[9] = 0;
                p9k[4] = 0;
                I8yy.P2k(146);
                p9k[92] = I8yy.r2k(10, 9, 61, 19, 687);
                I8yy.P2k(0);
                p9k[60] = I8yy.A2k(1480, 5);
                I8yy.H2k(32);
                p9k[40] = I8yy.A2k(4, 0, 6);
                I8yy.H2k(59);
                p9k[56] = I8yy.A2k(16, 12932658, 16, 2972, 17);
                I8yy.H2k(147);
                p9k[12] = I8yy.A2k(15, 9, 118, 19);
                p9k[32] = (p9k[92] - p9k[0][1][v8yy[p9k[60]]] * p9k[40] - p9k[0][1][v8yy[p9k[56]]] * p9k[12]) / p9k[7];
                I8yy.P2k(24);
                p9k[37] = I8yy.A2k(499, 160, 3, 3, 483);
                I8yy.H2k(17);
                p9k[11] = I8yy.A2k(7, 10, 18, 1500);
                I8yy.H2k(76);
                p9k[42] = I8yy.r2k(34, 5, 37, 10);
                I8yy.H2k(113);
                p9k[38] = I8yy.r2k(372, 1463, 744, 12);
                I8yy.P2k(148);
                p9k[23] = I8yy.r2k(58, 7, 1, 8);
                p9k[20] = (p9k[37] - p9k[0][1][v8yy[p9k[11]]] * p9k[42] - p9k[0][1][v8yy[p9k[38]]] * p9k[23]) / p9k[7];
                I8yy.H2k(2);
                p9k[41] = I8yy.A2k(5, p9k[7]);
                p9k[85] = p9k[0][1][`goalHeight`];
                I8yy.H2k(2);
                p9k[66] = I8yy.r2k(8, p9k[7]);
                if (p9k[32] != p9k[8] || p9k[20] != p9k[3] || p9k[7] != p9k[1] || p9k[41] != p9k[6] || p9k[85] != p9k[9] || p9k[66] != p9k[4]) {
                    p9k[8] = p9k[32];
                    p9k[3] = p9k[20];
                    p9k[1] = p9k[7];
                    p9k[6] = p9k[41];
                    p9k[9] = p9k[85];
                    p9k[4] = p9k[66];
                    I8yy.P2k(21);
                    p9k[2] = [new v2k[1](I8yy.r2k(p9k[32], p9k[41], 2),I8yy.A2k(p9k[20], 2, I8yy.P2k(149))), new v2k[1](I8yy.A2k(p9k[32], 2, p9k[41], I8yy.H2k(150)),I8yy.r2k(p9k[20], 2, I8yy.P2k(149))), new v2k[1](I8yy.A2k(p9k[32], 2, p9k[41], I8yy.H2k(150)),I8yy.r2k(p9k[20], 2, p9k[41], I8yy.P2k(150))), new v2k[1](I8yy.r2k(p9k[32], p9k[41], 2, I8yy.H2k(21)),I8yy.r2k(p9k[20], 2, p9k[41], I8yy.P2k(150)))];
                    p9k[95] = [new v2k[1](p9k[32] / 2 + p9k[41],p9k[20] / 2), new v2k[1](-p9k[32] / 2 - p9k[41],p9k[20] / 2), new v2k[1](-p9k[32] / 2 - p9k[41],p9k[20] / 2 + p9k[41]), new v2k[1](p9k[32] / 2 + p9k[41],p9k[20] / 2 + p9k[41])][`reverse`]();
                    I8yy.H2k(149);
                    p9k[75] = [new v2k[1](I8yy.A2k(p9k[32], 2),I8yy.r2k(p9k[85], p9k[20], 2, p9k[20], 2, I8yy.H2k(151))), new v2k[1](I8yy.r2k(p9k[32], 2, p9k[41], I8yy.H2k(150)),I8yy.r2k(p9k[85], p9k[20], 2, p9k[20], 2, I8yy.H2k(151))), new v2k[1](I8yy.r2k(p9k[32], 2, p9k[41], I8yy.P2k(150)),I8yy.A2k(p9k[20], 2, I8yy.H2k(149))), new v2k[1](I8yy.A2k(p9k[32], 2, I8yy.H2k(149)),I8yy.r2k(p9k[20], 2, I8yy.H2k(149)))];
                    p9k[10] = [new v2k[1](p9k[32] / 2,-p9k[20] / 2 + (p9k[20] - p9k[85]) / 2), new v2k[1](p9k[32] / 2 + p9k[41],-p9k[20] / 2 + (p9k[20] - p9k[85]) / 2), new v2k[1](p9k[32] / 2 + p9k[41],-p9k[20] / 2), new v2k[1](p9k[32] / 2,-p9k[20] / 2)][`reverse`]();
                    p9k[51] = [new v2k[1](-p9k[32] / 2,p9k[20] / 2 - (p9k[20] - p9k[85]) / 2), new v2k[1](-p9k[32] / 2 - p9k[41],p9k[20] / 2 - (p9k[20] - p9k[85]) / 2), new v2k[1](-p9k[32] / 2 - p9k[41],p9k[20] / 2), new v2k[1](-p9k[32] / 2,p9k[20] / 2)][`reverse`]();
                    I8yy.P2k(2);
                    p9k[84] = [new v2k[1](I8yy.A2k(p9k[32], 2),I8yy.r2k(p9k[20], 2, p9k[20], p9k[85], 2, I8yy.P2k(152))), new v2k[1](I8yy.A2k(p9k[32], p9k[41], 2, I8yy.H2k(21)),I8yy.r2k(p9k[20], 2, p9k[20], p9k[85], 2, I8yy.H2k(152))), new v2k[1](I8yy.A2k(p9k[32], p9k[41], 2, I8yy.H2k(21)),I8yy.A2k(p9k[20], 2, I8yy.H2k(2))), new v2k[1](I8yy.A2k(p9k[32], 2, I8yy.P2k(2)),I8yy.r2k(p9k[20], 2, I8yy.H2k(2)))];
                    I8yy.P2k(149);
                    p9k[54] = new v2k[1](I8yy.A2k(p9k[32], 2),I8yy.r2k(p9k[85], p9k[20], 2, p9k[20], 2, I8yy.P2k(151)));
                    I8yy.P2k(2);
                    p9k[24] = new v2k[1](I8yy.r2k(p9k[32], 2),I8yy.r2k(p9k[85], p9k[20], 2, p9k[20], 2, I8yy.H2k(151)));
                    I8yy.P2k(149);
                    p9k[61] = new v2k[1](I8yy.A2k(p9k[32], 2),I8yy.A2k(p9k[20], 2, p9k[20], p9k[85], 2, I8yy.H2k(152)));
                    I8yy.H2k(2);
                    p9k[96] = new v2k[1](I8yy.A2k(p9k[32], 2),I8yy.A2k(p9k[20], 2, p9k[20], p9k[85], 2, I8yy.H2k(152)));
                }
                p9k[14] = new v2k[91]();
                p9k[65] = new v2k[91]();
                p9k[36] = new v2k[2]();
                p9k[69] = new v2k[13]();
                p9k[36][`type`] = v2k[6][`b2_staticBody`];
                I8yy.P2k(153);
                p9k[36][`position`][`Set`](I8yy.A2k(2, 730, p9k[7]), I8yy.r2k(2, 500, p9k[7]));
                p9k[63] = p9k[0][0][`CreateBody`](p9k[36]);
                p9k[14][`friction`] = 0;
                p9k[14][`restitution`] = 0.8;
                p9k[14][`filter`][`maskBits`] = 4;
                p9k[14][`shape`] = p9k[69];
                p9k[69][`SetAsArray`](p9k[2]);
                p9k[63][`CreateFixture`](p9k[14]);
                p9k[69][`SetAsArray`](p9k[95]);
                p9k[63][`CreateFixture`](p9k[14]);
                p9k[69][`SetAsArray`](p9k[75]);
                p9k[63][`CreateFixture`](p9k[14]);
                p9k[69][`SetAsArray`](p9k[10]);
                p9k[63][`CreateFixture`](p9k[14]);
                p9k[69][`SetAsArray`](p9k[51]);
                p9k[63][`CreateFixture`](p9k[14]);
                p9k[69][`SetAsArray`](p9k[84]);
                p9k[63][`CreateFixture`](p9k[14]);
                p9k[25] = new v2k[28](p9k[66]);
                p9k[65][`friction`] = 0;
                p9k[65][`restitution`] = 0.9;
                I8yy.P2k(0);
                p9k[65][`filter`][`maskBits`] = I8yy.r2k(2, 4);
                p9k[65][`shape`] = p9k[25];
                p9k[25][`SetLocalPosition`](p9k[54]);
                p9k[63][`CreateFixture`](p9k[65]);
                p9k[25][`SetLocalPosition`](p9k[24]);
                p9k[63][`CreateFixture`](p9k[65]);
                p9k[25][`SetLocalPosition`](p9k[61]);
                p9k[63][`CreateFixture`](p9k[65]);
                p9k[25][`SetLocalPosition`](p9k[96]);
                p9k[63][`CreateFixture`](p9k[65]);
                p9k[22] = {};
                p9k[22][`type`] = `wall`;
                p9k[63][`SetUserData`](p9k[22]);
                this[`body`] = p9k[63];
            }
            destroy() {
                I8yy.w9b();
                var O9k = [arguments];
                                this[`world`][`DestroyBody`](this[`body`]);
                this[`world`] = null;
            }
        }
        ;
        v2k[58] = class q8Q {
            constructor(n2E, y2E) {
                var W9k = [arguments];
                                this[`parent`] = W9k[0][0];
                this[`container`] = new PIXI[`Sprite`]();
                this[`parent`][`addChild`](this[`container`]);
                I8yy.H2k(103);
                this[`container`][`x`] = I8yy.r2k(365, 2, 170);
                this[`container`][`y`] = -150;
                W9k[4] = new PIXI[`Graphics`]();
                W9k[4][`beginFill`](0xcfd8dc);
                W9k[4][`drawRect`](0, 0, 170, 120);
                W9k[4][`beginFill`](0x607d8b);
                W9k[4][`drawRect`](0, 0, 170, 34);
                W9k[4][`filters`] = [new PIXI[`filters`][`DropShadowFilter`]({
                    distance: 2,
                    blur: 1
                })];
                this[`container`][`addChild`](W9k[4]);
                W9k[5] = {
                    fontFamily: `futurept_book`,
                    fontSize: 21,
                    fill: 0xffffff,
                    align: `center`
                };
                W9k[7] = new PIXI[`Text`](`Game starts in`,W9k[5]);
                this[`container`][`addChild`](W9k[7]);
                W9k[7][`anchor`][`set`](0.5);
                I8yy.P2k(2);
                W9k[7][`x`] = I8yy.r2k(170, 2);
                W9k[7][`y`] = 17;
                W9k[7][`resolution`] = W9k[0][1];
                W9k[3] = {
                    fontFamily: `futurept_book`,
                    fontSize: 55,
                    fill: 0x2d2f30,
                    align: `center`
                };
                I8yy.g9b();
                this[`countdownText`] = new PIXI[`Text`](`0`,W9k[3]);
                this[`container`][`addChild`](this[`countdownText`]);
                this[`countdownText`][`anchor`][`set`](0.5);
                I8yy.P2k(2);
                this[`countdownText`][`x`] = I8yy.r2k(170, 2);
                this[`countdownText`][`y`] = 77;
                this[`countdownText`][`resolution`] = W9k[0][1];
                this[`container`][`visible`] = false;
                this[`container`][`state`] = 1;
                ;
            }
            do(p2E, O2E) {
                var Z9k = [arguments];
                                if (Z9k[0][0] > -1 && Z9k[0][1] != true) {
                    this[`container`][`visible`] = true;
                    this[`container`][`tweenArmed`] = true;
                    I8yy.H2k(2);
                    Z9k[5] = Math[`ceil`](I8yy.A2k(Z9k[0][0], 30));
                    if (this[`countdownText`][`text`] != Z9k[5][`toString`]()) {
                        this[`countdownText`][`text`] = Z9k[5][`toString`]();
                    }
                    if (this[`container`][`state`] != 2 && this[`container`][`state`] != 3) {
                        this[`container`][`state`] = 2;
                        anime({
                            targets: this[`container`],
                            y: `5`,
                            autoplay: true,
                            duration: 200,
                            delay: 0,
                            easing: `easeOutQuad`,
                            complete: ()=>{
                                
                                                                this[`container`][`state`] = 3;
                            }
                        });
                    }
                } else {
                    if (this[`container`][`state`] != 4 && this[`container`][`state`] != 1) {
                        this[`container`][`state`] = 4;
                        anime({
                            targets: this[`container`],
                            y: `-150`,
                            autoplay: true,
                            duration: 200,
                            delay: 0,
                            easing: `easeInQuad`,
                            complete: ()=>{
                                
                                                                this[`container`][`state`] = 1;
                                this[`container`][`visible`] = false;
                            }
                        });
                        this[`container`][`tweenArmed`] = false;
                    }
                }
            }
        }
        ;
        v2k[37] = class r4Q {
            constructor(W2E) {
                var x9k = [arguments];
                                this[`mapList`] = [];
                this[`networkEngine`] = x9k[0][0];
                this[`fullListLength`] = 300;
                this[`networkEngine`][`on`](`onMoreQuickMaps`, Q4Q=>{
                    
                    I8yy.w9b();
                                        return this[`addMaps`](Q4Q);
                }
                );
                this[`backupMap`] = T[`fromOldString`](`eNrFlTFr20AUx09yXVlqhlD8ATRkUMDUiR1oNh3BwQQSKKaEFLJIdWzkypKR3KHJ4iGQ0XMy5RMEshd6pB8hX8AduxQv2XNSTmfdyYesLH3L6Y4fuv97%2Br8nTVH6wxEog%2FW25fX1duB%2F97qh3viwBdZsx3Ud33O8gX8Gd0AccAMwYf7rxWHOyf7y%2FE%2F7rnqR7KFBQEVTyqMQKICPEn8Ap7vMSkMG9XodSJTzIctz0jBvGEaKd1EeX6vVgGT%2BvY7ixnxsxmHOgCBku6%2BVFykha%2FLy8C6T0pfJ8islVuKCByKeKQHlD9iVLwF%2FTnmBHlSQz7x%2Fh135T4heySOOE9UHvpKHK%2FKoIL%2B6pd7HbbiX6jw9bTF4TCxWpie%2Fr%2BIj2oBz7o1vwMl9iCW3CO%2BQtcruUyXfh01ckoI8bQLOirCDeH4wGKQ%2BvZNjMTnWD37NuXwFJVwISQS3QGacVI6crv7JtcZRbZE%2FYzOTi9Y2044kZ3gGl%2Bae5GL%2BNJ4epqebYjtURtgJVqAfRkKhWCjJ7f8L7TBuTYSWUG%2FCXrwhbJj4YliQz%2Fw7RG4ihUjSzW%2FINRv%2FEb%2F%2B0G3LdUMmufEt57jcaUmsvPo00CKP9vxgqH8EbzVFHYYjDwb68llJKyLh6SB3GpoKv01WQrc1FeWhUjRzZBujtME%2Bi1EJo80UeiAWgNEAoygvLSKgoUqSGm2eAWvizjU%3D`);
            }
            addMaps(Z2E) {
                var M9k = [arguments];
                                for (M9k[3] = 0; M9k[3] < M9k[0][0][`length`]; M9k[3]++) {
                    M9k[5] = M9k[0][0][M9k[3]][`id`];
                    M9k[9] = M9k[0][0][M9k[3]][`s`];
                    M9k[6] = null;
                    try {
                        M9k[6] = T[`fromOldString`](M9k[9]);
                    } catch (f4Q) {
                        M9k[6] = this[`backupMap`];
                    }
                    M9k[8] = 0;
                    for (M9k[7] = 0; M9k[7] < M9k[6][`spawns`][`length`]; M9k[7]++) {
                        if (M9k[6][`spawns`][M9k[7]] && M9k[6][`spawns`][M9k[7]][`f`]) {
                            M9k[8]++;
                        }
                    }
                    if (M9k[8] == 0) {
                        M9k[6] = this[`backupMap`];
                    }
                    this[`mapList`][M9k[5]] = M9k[6];
                    ;
                }
            }
            getMap(x2E) {
                var s9k = [arguments];
                                I8yy.H2k(9);
                s9k[1] = I8yy.r2k(572290, 20, 28690);
                s9k[5] = s9k[0][0] % this[v8yy[s9k[1]]];
                if (!this[`mapList`][s9k[5]]) {
                    return null;
                }
                s9k[2] = this[`mapList`][s9k[5]];
                s9k[4] = 0;
                s9k[8] = null;
                for (s9k[3] = 1; s9k[3] <= 10; s9k[3]++) {
                    if (this[`mapList`][(s9k[0][0] + s9k[3]) % this[`fullListLength`]]) {
                        s9k[4]++;
                    } else {
                        I8yy.P2k(1);
                        s9k[7] = I8yy.A2k(17, 1527);
                        s9k[8] = (s9k[0][0] + s9k[3]) % this[v8yy[s9k[7]]];
                        break;
                    }
                }
                I8yy.g9b();
                if (s9k[4] <= 3) {
                    this[`networkEngine`][`getMoreQuickPlayMaps`](s9k[8]);
                }
                return s9k[2];
            }
            destroy() {
                var c9k = [arguments];
                                this[`networkEngine`][`unOn`](this[`addMaps`]);
                this[`networkEngine`] = null;
            }
        }
        ;
        v2k[86] = class y4Q {
            constructor(M2E, s2E, c2E, D2E, Y2E, N2E, V2E) {
                var D9k = [arguments];
                                this[`bodyID`] = D9k[0][1];
                I8yy.w9b();
                this[`scaleRatio`] = D9k[0][2];
                this[`shapes`] = [];
                this[`displayObject`] = new PIXI[`Container`]();
                this[`shadowContainer`] = new PIXI[`Container`]();
                this[`jointContainer`] = new PIXI[`Container`]();
                this[`rvLine`] = null;
                this[`otherLines`] = [];
                this[`isReplay`] = D9k[0][6];
                this[`build`](D9k[0][0], D9k[0][3], D9k[0][4], D9k[0][5]);
            }
            build(m4Q, H4Q, z4Q, i4Q) {
                var c4Q = this.bodyID;
                var U4Q = this.scaleRatio;
                var I5Q = this;
                for (var b4Q = 0; b4Q < m4Q.physics.bodies[c4Q].fx.length; b4Q++) {
                    if (m4Q.physics.bodies[c4Q].fx[b4Q] != null) {
                        var B4Q = m4Q.physics.bodies[c4Q].fx[b4Q];
                        var q4Q = m4Q.physics.fixtures[B4Q];
                        var E4Q = q4Q.sh;
                        var v5Q = m4Q.physics.shapes[E4Q];
                        var Z4Q = false;
                        var t4Q = z4Q.tea;
                        for (var D4Q = 0; D4Q < m4Q.capZones.length; D4Q++) {
                            if (m4Q.capZones[D4Q] && m4Q.capZones[D4Q].i == B4Q) {
                                Z4Q = true;
                                break;
                            }
                        }
                        this.shapes[E4Q] = new v2k[33](m4Q,E4Q,Z4Q,U4Q,H4Q,t4Q,i4Q,this.isReplay);
                    }
                }
                I8yy.g9b();
                this.displayObject.addChild(this.shadowContainer);
                this.shadowContainer.x = 2;
                this.shadowContainer.y = 2;
                for (var b4Q = 0; b4Q < m4Q.physics.bodies[c4Q].fx.length; b4Q++) {
                    if (m4Q.physics.bodies[c4Q].fx[b4Q] != null) {
                        var T4Q = m4Q.physics.bodies[c4Q].fx[b4Q];
                        if (this.shapes[T4Q].shadowTexture) {
                            this.shadowContainer.addChild(this.shapes[T4Q].shadowTexture);
                        } else if (this.shapes[T4Q].shadow) {
                            this.shadowContainer.addChild(this.shapes[T4Q].shadow);
                        } else {
                            ;
                        }
                    }
                }
                for (var b4Q = 0; b4Q < m4Q.physics.bodies[c4Q].fx.length; b4Q++) {
                    if (m4Q.physics.bodies[c4Q].fx[b4Q] != null) {
                        var X4Q = m4Q.physics.bodies[c4Q].fx[b4Q];
                        if (this.shapes[X4Q].capFill) {
                            this.displayObject.addChild(this.shapes[X4Q].capFill);
                        }
                        if (this.shapes[X4Q].graphicTexture) {
                            this.displayObject.addChild(this.shapes[X4Q].graphicTexture);
                        } else if (this.shapes[X4Q].graphic) {
                            this.displayObject.addChild(this.shapes[X4Q].graphic);
                        } else {
                            ;
                        }
                    }
                }
                var l4Q = this.scaleRatio * m4Q.physics.ppm;
                for (var d4Q = 0; d4Q < m4Q.physics.joints.length; d4Q++) {
                    if (m4Q.physics.joints[d4Q]) {
                        var M4Q = m4Q.physics.joints[d4Q];
                        if (M4Q.type == "rv" && M4Q.ba == this.bodyID && M4Q.d.dl) {
                            if (!this.rvLine) {
                                this.rvLine = new PIXI.Graphics();
                            }
                            ;this.rvLine.lineStyle(1, 0xcccccc, 0.5);
                            this.rvLine.moveTo(0, 0);
                            this.rvLine.lineTo(M4Q.aa[0] * l4Q, M4Q.aa[1] * l4Q);
                        }
                    }
                }
                if (this.rvLine) {
                    this.displayObject.addChildAt(this.rvLine, 0);
                }
                for (var a4Q = 0; a4Q < m4Q.physics.joints.length; a4Q++) {
                    if (m4Q.physics.joints[a4Q]) {
                        var e4Q = m4Q.physics.joints[a4Q];
                        if (e4Q.ba == this.bodyID && e4Q.type == "lpj" && e4Q.d.dl) {
                            this.otherLines[a4Q] = new PIXI.Graphics();
                            this.otherLines[a4Q].lineStyle(1, 0xcccccc, 0.5);
                            this.otherLines[a4Q].moveTo(e4Q.plen * l4Q, 0);
                            this.otherLines[a4Q].lineTo(-e4Q.plen * l4Q, 0);
                            this.otherLines[a4Q].rotation = e4Q.pa;
                            this.otherLines[a4Q].x = e4Q.pax * l4Q;
                            this.otherLines[a4Q].y = e4Q.pay * l4Q;
                            this.jointContainer.addChild(this.otherLines[a4Q]);
                        }
                    }
                }
                for (var h4Q = 0; h4Q < m4Q.physics.joints.length; h4Q++) {
                    if (m4Q.physics.joints[h4Q]) {
                        var P4Q = m4Q.physics.joints[h4Q];
                        if (P4Q.type == "d" && P4Q.d.dl && P4Q.ba == this.bodyID) {
                            this.otherLines[h4Q] = new PIXI.Graphics();
                            this.jointContainer.addChild(this.otherLines[h4Q]);
                        }
                    }
                }
            }
            move(r5Q, g5Q, W5Q) {
                var Q5Q = g5Q.physics.ppm * this.scaleRatio;
                var s5Q = r5Q.physics.bodies[this.bodyID].p[0] * Q5Q;
                var F5Q = r5Q.physics.bodies[this.bodyID].p[1] * Q5Q;
                var k5Q = g5Q.physics.bodies[this.bodyID].p[0] * Q5Q;
                var J5Q = g5Q.physics.bodies[this.bodyID].p[1] * Q5Q;
                var o5Q = r5Q.physics.bodies[this.bodyID].a;
                var O5Q = g5Q.physics.bodies[this.bodyID].a;
                var f5Q = Math.cos(o5Q);
                var S5Q = Math.sin(o5Q);
                var N5Q = Math.cos(O5Q);
                var w5Q = Math.sin(O5Q);
                var p5Q = (1 - W5Q) * f5Q + W5Q * N5Q;
                var n5Q = (1 - W5Q) * S5Q + W5Q * w5Q;
                this.displayObject.x = (1 - W5Q) * s5Q + W5Q * k5Q;
                this.displayObject.y = (1 - W5Q) * F5Q + W5Q * J5Q;
                this.displayObject.rotation = Math.atan2(n5Q, p5Q);
                var x5Q = {
                    x: 2 * this.scaleRatio,
                    y: 2 * this.scaleRatio
                };
                var L5Q = v2k[79].rotatePoint({
                    x: 0,
                    y: 0
                }, x5Q, -this.displayObject.rotation);
                this.shadowContainer.x = L5Q.x;
                this.shadowContainer.y = L5Q.y;
                for (var R5Q = 0; R5Q < this.shapes.length; R5Q++) {
                    if (this.shapes[R5Q] && this.shapes[R5Q].shrink) {
                        this.shapes[R5Q].doShrink(r5Q, g5Q, W5Q);
                    }
                }
                for (var K5Q = 0; K5Q < g5Q.capZones.length; K5Q++) {
                    if (g5Q.capZones[K5Q] && this.shapes[g5Q.capZones[K5Q].i]) {
                        this.shapes[g5Q.capZones[K5Q].i].doCapZone(r5Q, g5Q, W5Q, K5Q);
                    }
                }
                this.updateRodJoints(r5Q, g5Q, W5Q);
            }
            updateRodJoints(g2E, U2E, B2E) {
                var Y9k = [arguments];
                                I8yy.H2k(40);
                I8yy.g9b();
                Y9k[89] = I8yy.r2k(8, 12, 39);
                I8yy.H2k(1);
                Y9k[42] = I8yy.A2k(12, 58);
                I8yy.P2k(1);
                Y9k[64] = I8yy.r2k(19, 1531);
                Y9k[6] = Y9k[0][1][v8yy[Y9k[89]]][v8yy[Y9k[42]]] * this[v8yy[Y9k[64]]];
                for (Y9k[25] = 0; Y9k[25] < Y9k[0][1][`physics`][`joints`][`length`]; Y9k[25]++) {
                    if (Y9k[0][1][`physics`][`joints`][Y9k[25]] && Y9k[0][0][`physics`][`joints`][Y9k[25]] && Y9k[0][1][`physics`][`joints`][Y9k[25]][`type`] == `d` && Y9k[0][1][`physics`][`joints`][Y9k[25]][`d`][`dl`] && Y9k[0][1][`physics`][`joints`][Y9k[25]][`ba`] == this[`bodyID`]) {
                        Y9k[5] = Y9k[0][0][`physics`][`joints`][Y9k[25]];
                        Y9k[7] = Y9k[0][1][`physics`][`joints`][Y9k[25]];
                        this[`otherLines`][Y9k[25]][`clear`]();
                        Y9k[9] = {
                            x: Y9k[5][`aa`][0],
                            y: Y9k[5][`aa`][1]
                        };
                        Y9k[4] = v2k[79][`rotatePoint`]({
                            x: 0,
                            y: 0
                        }, Y9k[9], Y9k[0][0][`physics`][`bodies`][Y9k[5][`ba`]][`a`]);
                        I8yy.P2k(32);
                        Y9k[61] = I8yy.A2k(39, 58, 20);
                        I8yy.H2k(1);
                        Y9k[55] = I8yy.A2k(430, 473);
                        I8yy.P2k(26);
                        Y9k[60] = I8yy.r2k(18, 4, 1506, 384);
                        I8yy.H2k(76);
                        Y9k[79] = I8yy.A2k(1064, 9, 997, 18);
                        I8yy.P2k(31);
                        Y9k[29] = I8yy.r2k(19, 36, 692, 3);
                        Y9k[2] = Y9k[4][v8yy[Y9k[61]]] + Y9k[0][0][v8yy[Y9k[55]]][v8yy[Y9k[60]]][Y9k[5][v8yy[Y9k[79]]]][v8yy[Y9k[29]]][0];
                        I8yy.P2k(36);
                        Y9k[88] = I8yy.A2k(800, 10, 40);
                        I8yy.H2k(21);
                        Y9k[92] = I8yy.A2k(9, 42, 9);
                        I8yy.P2k(1);
                        Y9k[44] = I8yy.r2k(528, 576);
                        I8yy.P2k(21);
                        Y9k[47] = I8yy.A2k(60, 61, 4);
                        I8yy.P2k(31);
                        Y9k[62] = I8yy.r2k(17, 59, 1158, 12);
                        I8yy.H2k(98);
                        Y9k[45] = I8yy.A2k(10, 9);
                        Y9k[8] = Y9k[4][v8yy[Y9k[88]]] + Y9k[0][0][v8yy[Y9k[92]]][v8yy[Y9k[44]]][Y9k[5][v8yy[Y9k[47]]]][v8yy[Y9k[62]]][Y9k[45]];
                        Y9k[1] = {
                            x: Y9k[7][`aa`][0],
                            y: Y9k[7][`aa`][1]
                        };
                        Y9k[19] = v2k[79][`rotatePoint`]({
                            x: 0,
                            y: 0
                        }, Y9k[1], Y9k[0][1][`physics`][`bodies`][Y9k[7][`ba`]][`a`]);
                        I8yy.H2k(0);
                        Y9k[14] = I8yy.A2k(20, 19);
                        I8yy.H2k(17);
                        Y9k[28] = I8yy.r2k(7, 39, 20, 31);
                        I8yy.H2k(32);
                        Y9k[85] = I8yy.r2k(349, 384, 13);
                        I8yy.P2k(154);
                        Y9k[53] = I8yy.A2k(3, 67, 67, 4, 77);
                        I8yy.H2k(75);
                        Y9k[93] = I8yy.r2k(731, 14, 9, 13, 56);
                        Y9k[77] = Y9k[19][v8yy[Y9k[14]]] + Y9k[0][1][v8yy[Y9k[28]]][v8yy[Y9k[85]]][Y9k[7][v8yy[Y9k[53]]]][v8yy[Y9k[93]]][0];
                        I8yy.H2k(21);
                        Y9k[67] = I8yy.r2k(32, 24, 2);
                        I8yy.H2k(60);
                        Y9k[58] = I8yy.r2k(14, 61, 43, 43);
                        I8yy.H2k(32);
                        Y9k[94] = I8yy.r2k(31, 94, 13);
                        I8yy.P2k(24);
                        Y9k[71] = I8yy.r2k(54, 1, 18, 3, 3);
                        I8yy.P2k(40);
                        Y9k[83] = I8yy.A2k(20, 21, 0);
                        Y9k[70] = Y9k[19][v8yy[Y9k[67]]] + Y9k[0][1][`physics`][v8yy[Y9k[58]]][Y9k[7][v8yy[Y9k[94]]]][v8yy[Y9k[71]]][Y9k[83]];
                        Y9k[95] = 0;
                        Y9k[78] = 0;
                        Y9k[10] = 0;
                        Y9k[99] = 0;
                        if (Y9k[7][`bb`] == -1) {
                            Y9k[95] = Y9k[7][`ab`][0];
                            Y9k[78] = Y9k[7][`ab`][1];
                            Y9k[10] = Y9k[7][`ab`][0];
                            Y9k[99] = Y9k[7][`ab`][1];
                        } else {
                            Y9k[36] = {
                                x: Y9k[5][`ab`][0],
                                y: Y9k[5][`ab`][1]
                            };
                            Y9k[97] = v2k[79][`rotatePoint`]({
                                x: 0,
                                y: 0
                            }, Y9k[36], Y9k[0][0][`physics`][`bodies`][Y9k[5][`bb`]][`a`]);
                            I8yy.H2k(155);
                            Y9k[23] = I8yy.A2k(601, 624, 8, 8, 1);
                            I8yy.H2k(113);
                            Y9k[37] = I8yy.r2k(86, 11, 344, 8);
                            I8yy.P2k(1);
                            Y9k[56] = I8yy.A2k(16, 64);
                            I8yy.H2k(135);
                            Y9k[40] = I8yy.r2k(1, 13, 1591, 2, 847);
                            I8yy.P2k(0);
                            Y9k[34] = I8yy.r2k(16, 33);
                            Y9k[95] = Y9k[97][v8yy[Y9k[23]]] + Y9k[0][0][v8yy[Y9k[37]]][v8yy[Y9k[56]]][Y9k[5][v8yy[Y9k[40]]]][v8yy[Y9k[34]]][0];
                            I8yy.P2k(21);
                            Y9k[52] = I8yy.A2k(3, 39, 3);
                            I8yy.H2k(9);
                            Y9k[76] = I8yy.r2k(29, 18, 4);
                            I8yy.P2k(123);
                            Y9k[75] = I8yy.r2k(7, 4, 384, 17, 356);
                            I8yy.P2k(156);
                            Y9k[72] = I8yy.A2k(31, 9, 6, 8);
                            I8yy.H2k(102);
                            Y9k[12] = I8yy.r2k(16, 5, 81);
                            Y9k[78] = Y9k[97][v8yy[Y9k[52]]] + Y9k[0][0][v8yy[Y9k[76]]][v8yy[Y9k[75]]][Y9k[5][v8yy[Y9k[72]]]][`p`][Y9k[12]];
                            Y9k[81] = {
                                x: Y9k[7][`ab`][0],
                                y: Y9k[7][`ab`][1]
                            };
                            Y9k[26] = v2k[79][`rotatePoint`]({
                                x: 0,
                                y: 0
                            }, Y9k[81], Y9k[0][1][`physics`][`bodies`][Y9k[7][`bb`]][`a`]);
                            I8yy.P2k(21);
                            Y9k[39] = I8yy.A2k(26, 38, 26);
                            I8yy.P2k(17);
                            Y9k[63] = I8yy.A2k(11, 37, 5, 22);
                            I8yy.P2k(21);
                            Y9k[27] = I8yy.A2k(55, 37, 5);
                            I8yy.H2k(43);
                            Y9k[54] = I8yy.r2k(1, 66, 66, 76);
                            I8yy.H2k(11);
                            Y9k[17] = I8yy.r2k(40, 11, 6, 10, 40);
                            Y9k[10] = Y9k[26][v8yy[Y9k[39]]] + Y9k[0][1][v8yy[Y9k[63]]][v8yy[Y9k[27]]][Y9k[7][v8yy[Y9k[54]]]][v8yy[Y9k[17]]][0];
                            I8yy.H2k(16);
                            Y9k[68] = I8yy.A2k(25, 14, 221, 11);
                            I8yy.H2k(20);
                            Y9k[59] = I8yy.r2k(4, 4, 89, 16, 45);
                            I8yy.H2k(1);
                            Y9k[49] = I8yy.r2k(528, 576);
                            I8yy.H2k(157);
                            Y9k[41] = I8yy.A2k(8, 30, 6, 15, 78);
                            I8yy.P2k(40);
                            Y9k[38] = I8yy.A2k(3, 48, 4);
                            I8yy.P2k(158);
                            Y9k[33] = I8yy.r2k(2, 0, 5, 9, 2);
                            Y9k[99] = Y9k[26][v8yy[Y9k[68]]] + Y9k[0][1][v8yy[Y9k[59]]][v8yy[Y9k[49]]][Y9k[7][v8yy[Y9k[41]]]][v8yy[Y9k[38]]][Y9k[33]];
                        }
                        I8yy.P2k(159);
                        Y9k[74] = I8yy.A2k(Y9k[2], Y9k[77], Y9k[0][2], 1, Y9k[0][2]);
                        I8yy.H2k(159);
                        Y9k[31] = I8yy.r2k(Y9k[8], Y9k[70], Y9k[0][2], 1, Y9k[0][2]);
                        I8yy.H2k(159);
                        Y9k[16] = I8yy.r2k(Y9k[95], Y9k[10], Y9k[0][2], 1, Y9k[0][2]);
                        I8yy.P2k(159);
                        Y9k[48] = I8yy.r2k(Y9k[78], Y9k[99], Y9k[0][2], 1, Y9k[0][2]);
                        this[`otherLines`][Y9k[25]][`lineStyle`](1, 0xcccccc, 0.5);
                        I8yy.H2k(5);
                        this[`otherLines`][Y9k[25]][`moveTo`](I8yy.A2k(Y9k[74], Y9k[6]), I8yy.A2k(Y9k[31], Y9k[6]));
                        I8yy.P2k(5);
                        this[`otherLines`][Y9k[25]][`lineTo`](I8yy.r2k(Y9k[16], Y9k[6]), I8yy.A2k(Y9k[48], Y9k[6]));
                    }
                }
            }
            destroy() {
                var N9k = [arguments];
                                for (N9k[9] = 0; N9k[9] < this[`shapes`][`length`]; N9k[9]++) {
                    if (this[`shapes`][N9k[9]]) {
                        this[`shapes`][N9k[9]][`destroy`]();
                    }
                }
                this[`shapes`] = [];
                if (this[`rvLine`]) {
                    this[`rvLine`][`destroy`](true);
                }
                this[`otherLines`][`forEach`]((z5Q,i5Q)=>{
                    
                                        z5Q[`destroy`](true);
                }
                );
                I8yy.w9b();
                this[`otherLines`] = null;
                this[`jointContainer`][`destroy`](true);
                this[`jointContainer`] = null;
            }
        }
        ;
        v2k[80] = class I1Q {
            constructor(a2E, t2E) {
                var V9k = [arguments];
                this[`gradientBackgroundCanvas`] = document[`createElement`](`canvas`);
                this[`bgTex`] = null;
                this[`lastRenderRoundCount`] = -1;
                this[`roundGraphics`] = null;
                this[`discGraphics`] = [];
                this[`arrowGraphics`] = [];
                this[`stage`] = new PIXI[`Container`]();
                this[`bgGradient`] = new PIXI[`Graphics`]();
                this[`stage`][`addChild`](this[`bgGradient`]);
                this[`blurContainer`] = new PIXI[`Container`]();
                this[`stage`][`addChild`](this[`blurContainer`]);
                this[`environmentContainer`] = new PIXI[`Container`]();
                this[`blurContainer`][`addChild`](this[`environmentContainer`]);
                this[`discContainer`] = new PIXI[`Container`]();
                this[`blurContainer`][`addChild`](this[`discContainer`]);
                this[`foregroundFader`] = new PIXI[`Graphics`]();
                this[`foregroundFader`][`alpha`] = 0;
                this[`foregroundFader`][`visible`] = false;
                this[`stage`][`addChild`](this[`foregroundFader`]);
                this[`renderer`] = U[`gameRenderer`];
                this[`domContainer`] = V9k[0][0];
                this[`domContainer`][`appendChild`](this[`renderer`][`view`]);
                this[`particleManager`] = null;
                this[`gameInterfaceGraphics`] = null;
                this[`shakeTweenGroup`] = new TWEEN[`Group`]();
                this[`shakeTweenObject`] = {
                    x: 0,
                    y: 0
                };
                this[`domLastWidth`] = 0;
                this[`domLastHeight`] = 0;
                this[`newWinnerDOM`] = document[`getElementById`](`ingamewinner`);
                this[`countdownDOM`] = document[`getElementById`](`ingamecountdown`);
                this[`scaleRatio`] = 1;
                this[`playerArray`] = [];
                this[`localPlayerID`] = null;
                this[`isReplay`] = V9k[0][1];
                this[`resizeRenderer`]();
                this[`renderer`][`render`](this[`stage`]);
                ;
            }
            resizeRenderer() {
                console.log("resizeRenderer I1Q 13531");
                var g9k = [arguments];
                this[`domLastWidth`] = this[`domContainer`][`offsetWidth`];
                this[`domLastHeight`] = this[`domContainer`][`offsetHeight`];
                I8yy.P2k(2);
                g9k[9] = I8yy.r2k(730, 500);
                I8yy.P2k(154);
                g9k[11] = I8yy.A2k(18, 23085, 23085, 2, 1523);
                I8yy.P2k(21);
                g9k[68] = I8yy.A2k(1538, 2, 1);
                g9k[1] = this[v8yy[g9k[11]]] / this[v8yy[g9k[68]]];
                g9k[7] = 0;
                g9k[3] = 0;
                if (g9k[1] > g9k[9]) {
                    g9k[3] = this[`domLastHeight`];
                    I8yy.P2k(5);
                    g9k[7] = I8yy.r2k(g9k[3], g9k[9]);
                } else {
                    g9k[8] = -1237645582;
                    g9k[2] = -95075610;
                    g9k[4] = 2;
                    for (g9k[83] = 1; I8yy.m1f(g9k[83].toString(), g9k[83].toString().length, 19169) !== g9k[8]; g9k[83]++) {
                        g9k[7] = this[`domLastWidth`];
                        g9k[4] += 2;
                    }
                    if (I8yy.m1f(g9k[4].toString(), g9k[4].toString().length, 9363) !== g9k[2]) {
                        g9k[7] = this[v8yy[5010]];
                    }
                    I8yy.P2k(2);
                    g9k[3] = I8yy.A2k(g9k[7], g9k[9]);
                }
                I8yy.H2k(2);
                this[`scaleRatio`] = I8yy.A2k(g9k[7], 730);
                this[`renderer`][`resize`](g9k[7], g9k[3]);
                I8yy.P2k(9);
                g9k[41] = I8yy.A2k(875, 12, 218);
                document[`getElementById`](`xpbar`)[`style`][`width`] = g9k[7] * 0.9 + v8yy[g9k[41]];
                g9k[6] = v2k[79][`getPageHeight`]();
                I8yy.P2k(100);
                g9k[45] = I8yy.r2k(0, 1, 1, 2, 0);
                I8yy.P2k(9);
                g9k[84] = I8yy.r2k(1112, 20, 56);
                I8yy.P2k(0);
                g9k[81] = I8yy.A2k(1721, 20);
                document[`getElementById`](`xpbarcontainer`)[`style`][`top`] = (g9k[6] - g9k[3]) / g9k[45] - g9k[84] + v8yy[g9k[81]];
                if (this[`scaleRatio`] < 1.5) {
                    I8yy.H2k(160);
                    g9k[73] = I8yy.A2k(18, 1515, 12, 3, 6);
                    this[`newWinnerDOM`][`style`][`zoom`] = this[v8yy[g9k[73]]] / 1.5;
                } else {
                    this[`newWinnerDOM`][`style`][`zoom`] = `1`;
                }
                this[`countdownDOM`][`style`][`zoom`] = Math[`min`](1.5, this[`scaleRatio`]);
                document[`getElementById`](`ingamemapcredit`)[`style`][`zoom`] = Math[`sqrt`](this[`scaleRatio`]);
                this[`createGradientBackground`]();
            }
            build(E2E, R2E) {
                var U9k = [arguments];
                                this[`roundGraphics`] = new v2k[81](U9k[0][0],this[`scaleRatio`],this[`renderer`],U9k[0][1],this[`playerArray`]);
                this[`environmentContainer`][`addChild`](this[`roundGraphics`][`displayObject`]);
                this[`particleManager`] = new v2k[48](this[`playerArray`],this[`scaleRatio`],this[`renderer`]);
                this[`blurContainer`][`addChild`](this[`particleManager`][`container`]);
                if (!this[`isReplay`]) {
                    this[`gameInterfaceGraphics`] = new v2k[44](U9k[0][1],this[`playerArray`],this[`foregroundFader`],this[`blurContainer`],this[`localPlayerID`],this[`scaleRatio`]);
                }
            }
            render(f1Q, L1Q, S1Q, x1Q, V1Q, G1Q) {
                if (L1Q.dontInterpolate == true) {
                    f1Q = L1Q;
                }
                if (this.renderer.view.parentNode != this.domContainer) {
                    this.domContainer.appendChild(this.renderer.view);
                }
                var n1Q = false;
                if (this.domLastWidth != this.domContainer.offsetWidth || this.domLastHeight != this.domContainer.offsetHeight) {
                    this.resizeRenderer();
                    n1Q = true;
                }
                if (L1Q.rc > this.lastRenderRoundCount || n1Q) {
                    this.lastRenderRoundCount = L1Q.rc;
                    this.destroyChildren();
                    this.build(L1Q, x1Q);
                    if ((L1Q.rc == 0 || n1Q == false) && this.isReplay) {
                        this.replayFadeIn();
                    }
                }
                this.roundGraphics.render(f1Q, L1Q, S1Q);
                for (var s1Q = 0; s1Q < L1Q.discs.length; s1Q++) {
                    if (L1Q.discs[s1Q] && !this.discGraphics[s1Q]) {
                        this.discGraphics[s1Q] = new v2k[69](L1Q,this.scaleRatio,x1Q,this.playerArray[s1Q],s1Q,this.renderer,s1Q == this.localPlayerID,this.isReplay);
                        var A1Q = s1Q == this.localPlayerID ? this.discContainer.children.length : 0;
                        this.discContainer.addChildAt(this.discGraphics[s1Q].container, A1Q);
                        this.discContainer.addChild(this.discGraphics[s1Q].offScreenContainer);
                    }
                }
                for (var J1Q = 0; J1Q < this.discGraphics.length; J1Q++) {
                    if (this.discGraphics[J1Q] && !L1Q.discs[J1Q]) {
                        this.discContainer.removeChild(this.discGraphics[J1Q].container);
                        this.discContainer.removeChild(this.discGraphics[J1Q].offScreenContainer);
                        this.discGraphics[J1Q].destroy();
                        this.discGraphics[J1Q] = null;
                    }
                }
                for (var N1Q = 0; N1Q < L1Q.discs.length; N1Q++) {
                    if (L1Q.discs[N1Q]) {
                        this.discGraphics[N1Q].move(f1Q, L1Q, S1Q, null, G1Q);
                    }
                }
                for (var F1Q = 0; F1Q < this.arrowGraphics.length; F1Q++) {
                    if (this.arrowGraphics[F1Q] && (!f1Q.projectiles[F1Q] || !L1Q.projectiles[F1Q] || L1Q.projectiles[F1Q].did != this.arrowGraphics[F1Q].ownerID)) {
                        this.blurContainer.removeChild(this.arrowGraphics[F1Q].graphic);
                        this.arrowGraphics[F1Q].destroy();
                        this.arrowGraphics[F1Q] = null;
                    }
                }
                for (var k1Q = 0; k1Q < L1Q.projectiles.length; k1Q++) {
                    if (!this.arrowGraphics[k1Q] && f1Q.projectiles[k1Q] && L1Q.projectiles[k1Q]) {
                        var y1Q = L1Q.projectiles[k1Q].did;
                        var j1Q = L1Q.projectiles[k1Q].team;
                        var u1Q = x1Q.mo == "ard";
                        this.arrowGraphics[k1Q] = new v2k[85](k1Q,this.playerArray[y1Q],y1Q,j1Q,this.scaleRatio * L1Q.physics.ppm,u1Q,this.renderer);
                        this.blurContainer.addChild(this.arrowGraphics[k1Q].graphic);
                    }
                }
                for (var w1Q = 0; w1Q < this.arrowGraphics.length; w1Q++) {
                    if (this.arrowGraphics[w1Q]) {
                        this.arrowGraphics[w1Q].move(f1Q, L1Q, S1Q);
                    }
                }
                this.particleManager.render(f1Q, L1Q, S1Q, this.renderer, this.isReplay);
                if (L1Q.shk && (L1Q.shk.x != 0 || L1Q.shk.y != 0)) {
                    this.shakeTweenGroup.removeAll();
                    var p1Q = new TWEEN.Tween(this.shakeTweenObject,this.shakeTweenGroup);
                    var Y1Q = 50;
                    var C1Q = 800;
                    p1Q.to({
                        x: L1Q.shk.x,
                        y: L1Q.shk.y
                    }, Y1Q);
                    p1Q.easing(TWEEN.Easing.Cubic.Out);
                    p1Q.onComplete(()=>{
                        var m1Q = new TWEEN.Tween(this.shakeTweenObject,this.shakeTweenGroup);
                        m1Q.to({
                            x: 0,
                            y: 0
                        }, C1Q);
                        m1Q.easing(TWEEN.Easing.Elastic.Out);
                        I8yy.g9b();
                        m1Q.start();
                    }
                    );
                    p1Q.start();
                }
                this.shakeTweenGroup.update();
                this.blurContainer.x = this.shakeTweenObject.x;
                this.blurContainer.y = this.shakeTweenObject.y;
                if (this.gameInterfaceGraphics) {
                    this.gameInterfaceGraphics.render(f1Q, L1Q, S1Q, V1Q);
                }
                v2k[79].soundManager.resetSumVols();
                L1Q.sts = null;
                this.renderer.render(this.stage);
                this.renderer.view.style.visibility = "inherit";
            }
            createGradientBackground() {
                var B9k = [arguments];
                                if (this[`bgTex`]) {
                    this[`bgTex`][`destroy`](true);
                }
                B9k[4] = this[`scaleRatio`];
                B9k[3] = this[`gradientBackgroundCanvas`];
                this[`bgGradient`][`clear`]();
                this[`bgTex`] = c1Q(`#3b536b`, `#2c3e50`);
                this[`bgGradient`][`beginTextureFill`]({
                    texture: this[`bgTex`]
                });
                I8yy.P2k(104);
                this[`bgGradient`][`drawRect`](0, 0, I8yy.A2k(B9k[4], 50, 730), I8yy.A2k(B9k[4], 50, 500));
                I8yy.P2k(126);
                this[`bgGradient`][`x`] = I8yy.A2k(B9k[4], 25);
                I8yy.H2k(126);
                this[`bgGradient`][`y`] = I8yy.r2k(B9k[4], 25);
                function c1Q(j7E, k7E) {
                    var a9k = [arguments];
                                        I8yy.P2k(104);
                    B9k[3][`width`] = I8yy.r2k(B9k[4], 50, 730);
                    I8yy.H2k(104);
                    B9k[3][`height`] = I8yy.r2k(B9k[4], 50, 500);
                    a9k[1] = B9k[3][`getContext`](`2d`);
                    I8yy.g9b();
                    I8yy.H2k(5);
                    a9k[8] = a9k[1][`createRadialGradient`](0, 0, I8yy.A2k(10, B9k[4]), 0, 0, I8yy.r2k(540, B9k[4]));
                    a9k[8][`addColorStop`](0, a9k[0][0]);
                    a9k[8][`addColorStop`](1, a9k[0][1]);
                    a9k[1][`fillStyle`] = a9k[8];
                    I8yy.H2k(104);
                    a9k[1][`fillRect`](0, 0, I8yy.r2k(B9k[4], 50, 730), I8yy.r2k(B9k[4], 50, 500));
                    return new PIXI[`Texture`][`from`](B9k[3]);
                }
                this[`foregroundFader`][`clear`]();
                this[`foregroundFader`][`beginTextureFill`]({
                    texture: this[`bgTex`]
                });
                I8yy.P2k(104);
                this[`foregroundFader`][`drawRect`](0, 0, I8yy.A2k(B9k[4], 50, 730), I8yy.r2k(B9k[4], 50, 500));
                I8yy.g9b();
                I8yy.P2k(126);
                this[`foregroundFader`][`x`] = I8yy.A2k(B9k[4], 25);
                I8yy.P2k(126);
                this[`foregroundFader`][`y`] = I8yy.r2k(B9k[4], 25);
            }
            destroyChildren() {
                var t9k = [arguments];
                                if (this[`roundGraphics`]) {
                    this[`environmentContainer`][`removeChild`](this[`roundGraphics`]);
                    this[`roundGraphics`][`destroy`]();
                    this[`roundGraphics`] = null;
                }
                for (t9k[3] = 0; t9k[3] < this[`discGraphics`][`length`]; t9k[3]++) {
                    if (this[`discGraphics`][t9k[3]]) {
                        this[`blurContainer`][`removeChild`](this[`discGraphics`][t9k[3]][`container`]);
                        this[`blurContainer`][`removeChild`](this[`discGraphics`][t9k[3]][`offScreenContainer`]);
                        this[`discGraphics`][t9k[3]][`destroy`]();
                    }
                }
                this[`discGraphics`] = [];
                if (this[`particleManager`]) {
                    this[`particleManager`][`destroy`]();
                }
                this[`particleManager`] = null;
                if (this[`gameInterfaceGraphics`]) {
                    this[`gameInterfaceGraphics`][`destroy`]();
                }
            }
            destroy() {
                var E9k = [arguments];
                                if (this[`renderer`][`view`][`parentNode`] == this[`domContainer`]) {
                    this[`domContainer`][`removeChild`](this[`renderer`][`view`]);
                }
                I8yy.g9b();
                if (this[`bgTex`]) {
                    this[`bgTex`][`destroy`](true);
                }
                this[`destroyChildren`]();
                this[`renderer`][`clear`]();
            }
            setPlayerArray(f7E) {
                var R9k = [arguments];
                I8yy.w9b();
                                this[`playerArray`] = R9k[0][0];
            }
            setLocalPlayerID(G7E) {
                I8yy.w9b();
                var j1k = [arguments];
                                this[`localPlayerID`] = j1k[0][0];
                if (this[`gameInterfaceGraphics`]) {
                    this[`gameInterfaceGraphics`][`setLocalPlayerID`](j1k[0][0]);
                }
            }
            showAfkWarn() {
                var k1k = [arguments];
                I8yy.w9b();
                                if (this[`gameInterfaceGraphics`]) {
                    this[`gameInterfaceGraphics`][`showAfkWarn`]();
                }
            }
            clearAfkWarn() {
                var f1k = [arguments];
                I8yy.w9b();
                                if (this[`gameInterfaceGraphics`]) {
                    this[`gameInterfaceGraphics`][`clearAfkWarn`]();
                }
            }
            blur() {}
            unblur() {}
            destroySkins() {}
            replayFadeIn() {
                var G1k = [arguments];
                                this[`foregroundFader`][`visible`] = true;
                this[`foregroundFader`][`alpha`] = 1;
                anime({
                    targets: this[`foregroundFader`],
                    alpha: 0,
                    autoplay: true,
                    duration: 200,
                    delay: 30,
                    easing: `linear`,
                    complete: ()=>{
                        I8yy.w9b();
                        
                                                this[`foregroundFader`][`visible`] = false;
                    }
                });
            }
            replayFadeOut() {
                var T1k = [arguments];
                                this[`foregroundFader`][`visible`] = true;
                anime({
                    targets: this[`foregroundFader`],
                    alpha: 1,
                    autoplay: true,
                    duration: 200,
                    delay: 0,
                    easing: `linear`
                });
            }
        }
        ;
        function V8() {
            var K1k = [arguments];
                        K1k[1] = {};
            K1k[9] = 10;
            K1k[3] = 15;
            K1k[4] = [];
            K1k[8] = new Howl({
                src: GameResources[`soundStrings`][`capIncrease`],
                volume: 0.5,
                loop: false
            });
            K1k[5] = new Howl({
                src: GameResources[`soundStrings`][`capDecrease`],
                volume: 0.5,
                loop: false
            });
            this[`playSound`] = function(T7E, K7E, r7E, A7E) {
                var r1k = [arguments];
                                if (v2k[79][`mute`]) {
                    return;
                }
                if (v2k[79][`preClickMute`]) {
                    return;
                }
                if (!K1k[1][r1k[0][0]]) {
                    K1k[1][r1k[0][0]] = {
                        howls: [],
                        sumVolThisStep: 0
                    };
                }
                if (K1k[1][r1k[0][0]][`howls`][`length`] >= K1k[9]) {
                    return;
                    ;
                }
                if (K1k[1][r1k[0][0]][`sumVolThisStep`] >= K1k[3]) {
                    return;
                }
                if (r1k[0][3] != undefined) {
                    for (r1k[3] = 0; r1k[3] < K1k[4][`length`]; r1k[3]++) {
                        if (K1k[4][r1k[3]][`f`] == r1k[0][3] && K1k[4][r1k[3]][`i`] == r1k[0][0]) {
                            return;
                        }
                    }
                }
                if (r1k[0][0] == `capDecrease`) {
                    K1k[5][`volume`](r1k[0][2]);
                    K1k[5][`stereo`](r1k[0][1]);
                    if (!v2k[79][`mute`]) {
                        K1k[5][`play`]();
                    }
                    return;
                } else if (r1k[0][0] == `capIncrease`) {
                    K1k[8][`volume`](r1k[0][2]);
                    K1k[8][`stereo`](r1k[0][1]);
                    if (!v2k[79][`mute`]) {
                        K1k[8][`play`]();
                    }
                    return;
                }
                r1k[1] = GameResources[`soundStrings`][r1k[0][0]];
                r1k[4] = new Howl({
                    src: r1k[1],
                    volume: r1k[0][2]
                });
                r1k[4][`stereo`](r1k[0][1]);
                r1k[4][`play`]();
                K1k[1][r1k[0][0]][`howls`][`push`](r1k[4]);
                K1k[1][r1k[0][0]][`sumVolThisStep`] += r1k[0][2];
                K1k[4][`push`]({
                    i: r1k[0][0],
                    f: r1k[0][3]
                });
                if (K1k[4][`length`] > 5) {
                    K1k[4][`shift`]();
                }
                r1k[4][`on`](`end`, function() {
                    var A1k = [arguments];
                                        A1k[2] = K1k[1][r1k[0][0]][`howls`][`indexOf`](this);
                    if (A1k[2] != -1) {
                        K1k[1][r1k[0][0]][`howls`][`splice`](A1k[2], 1);
                    }
                    ;
                });
            }
            ;
            this[`resetSumVols`] = function() {
                var P1k = [arguments];
                                for (P1k[7] in K1k[1]) {
                    if (Object[`prototype`][`hasOwnProperty`][`call`](K1k[1], P1k[7])) {
                        K1k[1][P1k[7]][`sumVolThisStep`] = 0;
                    }
                }
            }
            ;
        }
        v2k[81] = class d1Q {
            constructor(P7E, H7E, v7E, i7E, u7E) {
                var H1k = [arguments];
                                this[`displayObject`] = new PIXI[`Container`]();
                this[`scaleRatio`] = H1k[0][1];
                this[`bodyGraphics`] = [];
                this[`build`](H1k[0][0], H1k[0][2], H1k[0][3], H1k[0][4]);
            }
            build(b7E, d7E, e7E, C7E) {
                var v1k = [arguments];
                                v1k[7] = Date[`now`]();
                for (v1k[3] = v1k[0][0][`physics`][`bro`][`length`] - 1; v1k[3] >= 0; v1k[3]--) {
                    v1k[4] = v1k[0][0][`physics`][`bro`][v1k[3]];
                    if (v1k[0][0][`physics`][`bodies`][v1k[4]]) {
                        this[`bodyGraphics`][v1k[4]] = new v2k[86](v1k[0][0],v1k[4],this[`scaleRatio`],v1k[0][1],v1k[0][2],v1k[0][3]);
                        if (this[`bodyGraphics`][v1k[4]][`jointContainer`][`children`][`length`] > 0) {
                            this[`displayObject`][`addChild`](this[`bodyGraphics`][v1k[4]][`jointContainer`]);
                        }
                        this[`displayObject`][`addChild`](this[`bodyGraphics`][v1k[4]][`displayObject`]);
                    }
                }
                v1k[8] = Date[`now`]() - v1k[7];
            }
            render(K6Q, r6Q, R6Q) {
                for (var W6Q = 0; W6Q < this.bodyGraphics.length; W6Q++) {
                    if (this.bodyGraphics[W6Q]) {
                        this.bodyGraphics[W6Q].move(K6Q, r6Q, R6Q);
                    }
                }
            }
            destroy() {
                var i1k = [arguments];
                I8yy.g9b();
                                for (i1k[1] = 0; i1k[1] < this[`bodyGraphics`][`length`]; i1k[1]++) {
                    if (this[`bodyGraphics`][i1k[1]]) {
                        this[`bodyGraphics`][i1k[1]][`destroy`]();
                    }
                }
                this[`bodyGraphics`] = [];
                this[`displayObject`][`parent`][`removeChild`](this[`displayObject`]);
                this[`displayObject`] = null;
            }
        }
        ;
        v2k[33] = class o6Q {
            constructor(l7E, o7E, I7E, F7E, L7E, J7E, h7E, X7E) {
                var u1k = [arguments];
                                this[`shapeID`] = u1k[0][1];
                this[`graphic`] = new PIXI[`Graphics`]();
                this[`graphicTexture`] = null;
                this[`shadow`] = null;
                this[`shadowTexture`] = null;
                this[`capFill`] = null;
                this[`shrink`] = false;
                this[`capZone`] = u1k[0][2];
                this[`shapeType`] = null;
                this[`scaleRatio`] = u1k[0][3];
                this[`teams`] = u1k[0][5];
                this[`playerArray`] = u1k[0][6];
                this[`isReplay`] = u1k[0][7];
                this[`build`](u1k[0][0], u1k[0][1], u1k[0][2], u1k[0][4]);
            }
            build(x6Q, A6Q, j6Q, u6Q) {
                var y6Q, N6Q, w6Q, p6Q, s9W, g9W, y9W;
                                y6Q = x6Q[`physics`][`fixtures`][A6Q];
                N6Q = x6Q[`physics`][`shapes`][A6Q];
                I8yy.H2k(38);
                var k2p = I8yy.A2k(25, 46, 5, 2, 1);
                I8yy.H2k(161);
                var o2p = I8yy.A2k(5, 1, 9, 42);
                I8yy.H2k(32);
                var L2p = I8yy.A2k(25723, 27216, 19);
                w6Q = x6Q[v8yy[k2p]][v8yy[o2p]] * this[v8yy[L2p]];
                if (j6Q) {
                    this[`graphic`][`lineStyle`](3 * this[`scaleRatio`], 0xffffff, 1);
                    this[`capFill`] = new PIXI[`Graphics`]();
                    if (N6Q[`type`] != "po") {
                        I8yy.H2k(119);
                        var J2p = I8yy.A2k(4, 19, 38, 3);
                        this[`capFill`][`x`] = N6Q[v8yy[J2p]][0] * w6Q;
                        I8yy.P2k(118);
                        var E2p = I8yy.A2k(91, 3, 17, 464);
                        I8yy.P2k(9);
                        var h2p = I8yy.r2k(89, 18, 5);
                        this[`capFill`][`y`] = N6Q[v8yy[E2p]][h2p] * w6Q;
                        if (N6Q[`a`] !== undefined) {
                            this[`capFill`][`rotation`] = N6Q[`a`];
                        }
                    }
                } else {
                    this[`graphic`][`beginFill`](y6Q[`f`]);
                }
                this[`shrink`] = N6Q[`sk`];
                this[`shapeType`] = N6Q[`type`];
                p6Q = y6Q[`np`] == false && v2k[79][`customControls`][`quality`] != 1;
                if (p6Q) {
                    this[`shadow`] = new PIXI[`Graphics`]();
                    if (j6Q) {
                        this[`shadow`][`endFill`]();
                        this[`shadow`][`lineStyle`](3 * this[`scaleRatio`], 0x000, 0.17);
                    } else {
                        this[`shadow`][`beginFill`](0x000000, 0.17);
                    }
                }
                if (N6Q[`type`] == "bx") {
                    this[`graphic`][`drawRect`](-N6Q[`w`] / 2 * w6Q, -N6Q[`h`] / 2 * w6Q, N6Q[`w`] * w6Q, N6Q[`h`] * w6Q);
                    I8yy.H2k(162);
                    var V2p = I8yy.r2k(1044, 13, 4, 15, 175);
                    this[`graphic`][`x`] = N6Q[v8yy[V2p]][0] * w6Q;
                    I8yy.H2k(9);
                    var q2p = I8yy.A2k(302, 9, 40);
                    I8yy.H2k(1);
                    var s2p = I8yy.r2k(19, 20);
                    this[`graphic`][`y`] = N6Q[v8yy[q2p]][s2p] * w6Q;
                    this[`graphic`][`rotation`] = N6Q[`a`];
                    if (p6Q) {
                        this[`shadow`][`drawRect`](-N6Q[`w`] / 2 * w6Q, -N6Q[`h`] / 2 * w6Q, N6Q[`w`] * w6Q, N6Q[`h`] * w6Q);
                        I8yy.H2k(163);
                        var Y2p = I8yy.A2k(49, 12, 8, 15, 697);
                        this[`shadow`][`x`] = N6Q[v8yy[Y2p]][0] * w6Q;
                        s9W = -2038860062;
                        g9W = -665612353;
                        y9W = 2;
                        for (var M9W = 1; I8yy.d1f(M9W.toString(), M9W.toString().length, 61935) !== s9W; M9W++) {
                            I8yy.P2k(22);
                            var u2p = I8yy.A2k(57, 643, 5, 638);
                            I8yy.P2k(76);
                            var w2p = I8yy.A2k(0, 6, 12, 19);
                            this[`shadow`][`y`] = N6Q[v8yy[u2p]][w2p] * w6Q;
                            y9W += 2;
                        }
                        if (I8yy.m1f(y9W.toString(), y9W.toString().length, 36216) !== g9W) {
                            I8yy.H2k(1);
                            var t2p = I8yy.r2k(15, 52);
                            I8yy.P2k(123);
                            var j2p = I8yy.A2k(10, 8, 0, 11, 7);
                            this[v8yy[8170]][`say`] = N6Q[v8yy[t2p]][j2p] + w6Q;
                        }
                        this[`shadow`][`rotation`] = N6Q[`a`];
                    }
                } else if (N6Q[`type`] == "ci") {
                    this[`graphic`][`drawCircle`](0, 0, N6Q[`r`] * w6Q);
                    I8yy.P2k(0);
                    var d2p = I8yy.A2k(39, 19);
                    this[`graphic`][`x`] = N6Q[v8yy[d2p]][0] * w6Q;
                    I8yy.H2k(1);
                    var T2p = I8yy.r2k(1102, 1160);
                    I8yy.H2k(0);
                    var v2p = I8yy.r2k(0, 1);
                    this[`graphic`][`y`] = N6Q[v8yy[T2p]][v2p] * w6Q;
                    if (p6Q) {
                        this[`shadow`][`drawCircle`](0, 0, N6Q[`r`] * w6Q);
                        I8yy.H2k(25);
                        var M2p = I8yy.A2k(73, 4030, 14, 4);
                        this[`shadow`][`x`] = N6Q[v8yy[M2p]][0] * w6Q;
                        I8yy.H2k(0);
                        var l2p = I8yy.A2k(4, 54);
                        I8yy.P2k(121);
                        var H2p = I8yy.A2k(14, 2, 0, 7);
                        this[`shadow`][`y`] = N6Q[v8yy[l2p]][H2p] * w6Q;
                    }
                } else if (N6Q[`type`] == "po") {
                    if (N6Q[`v`][`length`] > 0) {
                        this[`graphic`][`moveTo`](N6Q[`v`][0][0] * w6Q, N6Q[`v`][0][1] * w6Q);
                        if (p6Q) {
                            this[`shadow`][`moveTo`](N6Q[`v`][0][0] * w6Q, N6Q[`v`][0][1] * w6Q);
                        }
                        for (var n6Q = 1; n6Q < N6Q[`v`][`length`]; n6Q++) {
                            this[`graphic`][`lineTo`](N6Q[`v`][n6Q][0] * w6Q, N6Q[`v`][n6Q][1] * w6Q);
                            if (p6Q) {
                                this[`shadow`][`lineTo`](N6Q[`v`][n6Q][0] * w6Q, N6Q[`v`][n6Q][1] * w6Q);
                            }
                        }
                        this[`graphic`][`lineTo`](N6Q[`v`][0][0] * w6Q, N6Q[`v`][0][1] * w6Q);
                        if (p6Q) {
                            this[`shadow`][`lineTo`](N6Q[`v`][0][0] * w6Q, N6Q[`v`][0][1] * w6Q);
                        }
                    }
                }
                this[`graphic`][`endFill`]();
                if (p6Q) {
                    this[`shadow`][`endFill`]();
                }
                if (v2k[79][`cacheTextures`] && this[`shapeType`] == "ci") {
                    this[`graphicTexture`] = this[`createTexture`](this[`graphic`], u6Q);
                    if (this[`shadow`]) {
                        this[`shadowTexture`] = this[`createTexture`](this[`shadow`], u6Q);
                    }
                }
                I8yy.w9b();
                ;
            }
            doShrink(m7E, Q7E, q7E) {
                I8yy.w9b();
                var b1k = [arguments];
                                I8yy.H2k(40);
                b1k[69] = I8yy.A2k(18, 26, 35);
                I8yy.P2k(15);
                b1k[97] = I8yy.r2k(158, 55, 4, 4);
                I8yy.P2k(114);
                b1k[68] = I8yy.r2k(5, 119448, 24192, 1);
                b1k[5] = b1k[0][1][v8yy[b1k[69]]][v8yy[b1k[97]]] * this[v8yy[b1k[68]]];
                if (this[`shapeType`] == `bx`) {
                    b1k[1] = b1k[0][0][`physics`][`shapes`][this[`shapeID`]][`w`];
                    b1k[4] = b1k[0][1][`physics`][`shapes`][this[`shapeID`]][`w`];
                    if (this[`graphicTexture`]) {
                        I8yy.H2k(164);
                        this[`graphicTexture`][`width`] = I8yy.A2k(1, b1k[5], b1k[0][2], b1k[1], b1k[0][2], b1k[4]);
                    } else {
                        I8yy.H2k(164);
                        this[`graphic`][`width`] = I8yy.r2k(1, b1k[5], b1k[0][2], b1k[1], b1k[0][2], b1k[4]);
                    }
                    if (this[`shadowTexture`]) {
                        I8yy.P2k(164);
                        this[`shadowTexture`][`width`] = I8yy.r2k(1, b1k[5], b1k[0][2], b1k[1], b1k[0][2], b1k[4]);
                    } else if (this[`shadow`]) {
                        b1k[6] = 525135799;
                        b1k[8] = 1455877975;
                        b1k[3] = 2;
                        for (b1k[17] = 1; I8yy.d1f(b1k[17].toString(), b1k[17].toString().length, 85262) !== b1k[6]; b1k[17]++) {
                            I8yy.P2k(164);
                            this[`shadow`][`width`] = I8yy.A2k(1, b1k[5], b1k[0][2], b1k[1], b1k[0][2], b1k[4]);
                            b1k[3] += 2;
                        }
                        if (I8yy.m1f(b1k[3].toString(), b1k[3].toString().length, 6888) !== b1k[8]) {
                            I8yy.H2k(165);
                            this[`mapeditor_rightbox_shapeheading`][`localAnchorA`] = I8yy.r2k(b1k[0][2], b1k[5], b1k[4], 2, b1k[1], b1k[0][2]);
                        }
                    }
                }
                if (this[`shapeType`] == `ci`) {
                    b1k[2] = b1k[0][0][`physics`][`shapes`][this[`shapeID`]][`r`];
                    b1k[9] = b1k[0][1][`physics`][`shapes`][this[`shapeID`]][`r`];
                    if (this[`graphicTexture`]) {
                        I8yy.P2k(166);
                        this[`graphicTexture`][`width`] = this[`graphicTexture`][`height`] = I8yy.r2k(b1k[0][2], b1k[2], b1k[0][2], 1, 2, b1k[9], b1k[5]);
                        ;
                    } else {
                        I8yy.P2k(166);
                        this[`graphic`][`width`] = this[`graphic`][`height`] = I8yy.A2k(b1k[0][2], b1k[2], b1k[0][2], 1, 2, b1k[9], b1k[5]);
                        ;
                    }
                    if (this[`shadowTexture`]) {
                        I8yy.P2k(166);
                        this[`shadowTexture`][`width`] = this[`shadowTexture`][`height`] = I8yy.r2k(b1k[0][2], b1k[2], b1k[0][2], 1, 2, b1k[9], b1k[5]);
                        ;
                    } else if (this[`shadow`]) {
                        I8yy.P2k(166);
                        this[`shadow`][`width`] = this[`shadow`][`height`] = I8yy.r2k(b1k[0][2], b1k[2], b1k[0][2], 1, 2, b1k[9], b1k[5]);
                        ;
                    }
                }
            }
            createTexture(S7E, w7E) {
                var d1k = [arguments];
                                d1k[6] = new PIXI[`Container`]();
                d1k[6][`addChild`](d1k[0][0]);
                d1k[9] = d1k[6][`getLocalBounds`]();
                d1k[6][`x`] = -d1k[9][`x`];
                d1k[6][`y`] = -d1k[9][`y`];
                d1k[5] = 1024;
                d1k[3] = 1;
                if (d1k[9][`width`] > d1k[5] || d1k[9][`height`] > d1k[5]) {
                    d1k[0][0][`cacheAsBitmap`] = true;
                    return null;
                }
                d1k[1] = PIXI[`RenderTexture`][`create`]({
                    width: d1k[9][`width`],
                    height: d1k[9][`height`],
                    scaleMode: PIXI[`SCALE_MODES`][`LINEAR`],
                    resolution: d1k[3]
                });
                if (d1k[3] == 1 && d1k[0][1][`framebuffer`] && PIXI[`MSAA_QUALITY`] && v2k[79][`customControls`][`quality`] != 1) {
                    d1k[1][`framebuffer`][`multisample`] = PIXI[`MSAA_QUALITY`][`HIGH`];
                }
                d1k[0][1][`render`](d1k[6], d1k[1]);
                if (d1k[3] == 1 && d1k[0][1][`framebuffer`] && PIXI[`MSAA_QUALITY`] && v2k[79][`customControls`][`quality`] != 1) {
                    d1k[0][1][`framebuffer`][`blit`]();
                    ;
                }
                d1k[7] = new PIXI[`Sprite`](d1k[1]);
                d1k[7][`anchor`][`x`] = 0.5;
                d1k[7][`anchor`][`y`] = 0.5;
                I8yy.H2k(15);
                d1k[2] = I8yy.A2k(5305, 351, 17, 16);
                I8yy.P2k(167);
                d1k[8] = I8yy.A2k(10, 67, 16, 375);
                I8yy.P2k(9);
                d1k[84] = I8yy.A2k(214, 18, 12);
                d1k[7][`x`] = d1k[9][v8yy[d1k[2]]] + d1k[9][v8yy[d1k[8]]] / d1k[84];
                I8yy.P2k(1);
                d1k[44] = I8yy.r2k(16, 56);
                I8yy.P2k(168);
                d1k[52] = I8yy.r2k(13, 6566, 20929, 4, 18);
                I8yy.P2k(98);
                I8yy.g9b();
                d1k[13] = I8yy.A2k(15, 13);
                d1k[7][`y`] = d1k[9][v8yy[d1k[44]]] + d1k[9][v8yy[d1k[52]]] / d1k[13];
                d1k[6][`removeChild`](d1k[0][0]);
                return d1k[7];
            }
            doCapZone(z7E, n7E, y7E, p7E) {
                var e1k = [arguments];
                                e1k[9] = e1k[0][1][`capZones`][e1k[0][3]];
                e1k[4] = Math[`min`](e1k[9][`p`] / e1k[9][`l`], 1);
                e1k[6] = e1k[9][`o`];
                e1k[3] = e1k[0][1][`physics`][`shapes`][this[`shapeID`]];
                I8yy.H2k(169);
                e1k[78] = I8yy.r2k(6, 14, 2, 14, 19);
                I8yy.P2k(119);
                e1k[25] = I8yy.r2k(13, 17, 276, 260);
                I8yy.P2k(9);
                e1k[30] = I8yy.A2k(15164, 11, 1516);
                e1k[2] = e1k[0][1][v8yy[e1k[78]]][v8yy[e1k[25]]] * this[v8yy[e1k[30]]];
                e1k[5] = 0xccbbaa;
                if (this[`teams`]) {
                    if (e1k[6] == 2) {
                        e1k[5] = 0xf44336;
                    }
                    if (e1k[6] == 3) {
                        e1k[5] = 0x2196f3;
                    }
                    if (e1k[6] == 4) {
                        e1k[5] = 0x4caf50;
                    }
                    if (e1k[6] == 5) {
                        e1k[5] = 0xffeb3b;
                    }
                } else {
                    if (this[`playerArray`][e1k[6]] && this[`playerArray`][e1k[6]][`avatar`]) {
                        e1k[5] = this[`playerArray`][e1k[6]][`avatar`][`bc`];
                    } else {
                        e1k[5] = 0xf44336;
                        ;
                    }
                }
                this[`capFill`][`clear`]();
                this[`capFill`][`beginFill`](e1k[5]);
                I8yy.H2k(1);
                e1k[90] = I8yy.A2k(3, 1515);
                e1k[8] = 1.2 * this[v8yy[e1k[90]]];
                if (this[`shapeType`] == `ci`) {
                    I8yy.P2k(21);
                    e1k[33] = I8yy.r2k(7, 54, 1);
                    e1k[7] = (e1k[3][v8yy[e1k[33]]] * e1k[2] - e1k[8]) * e1k[4];
                    this[`capFill`][`drawCircle`](0, 0, e1k[7]);
                }
                if (this[`shapeType`] == `bx`) {
                    I8yy.P2k(60);
                    e1k[34] = I8yy.A2k(20, 78, 79, 79);
                    e1k[81] = (e1k[3][v8yy[e1k[34]]] * e1k[2] - e1k[8]) * e1k[4];
                    I8yy.P2k(11);
                    e1k[84] = I8yy.r2k(6, 17, 19, 3, 60);
                    e1k[52] = (e1k[3][v8yy[e1k[84]]] * e1k[2] - e1k[8]) * e1k[4];
                    I8yy.H2k(149);
                    this[`capFill`][`drawRect`](I8yy.r2k(e1k[81], 2), I8yy.r2k(e1k[52], 2), e1k[81], e1k[52]);
                }
                if (this[`shapeType`] == `po`) {
                    e1k[11] = 0;
                    e1k[73] = 0;
                    for (e1k[72] = 0; e1k[72] < e1k[3][`v`][`length`]; e1k[72]++) {
                        e1k[11] += e1k[3][`v`][e1k[72]][0];
                        e1k[73] += e1k[3][`v`][e1k[72]][1];
                    }
                    e1k[11] /= e1k[3][`v`][`length`];
                    e1k[73] /= e1k[3][`v`][`length`];
                    if (e1k[3][`v`][`length`] > 0) {
                        I8yy.P2k(170);
                        e1k[94] = I8yy.r2k(13, 1, 13, 13, 15);
                        I8yy.H2k(1);
                        e1k[95] = I8yy.A2k(4, 66);
                        e1k[42] = (e1k[11] * (e1k[94] - e1k[4]) + e1k[3][v8yy[e1k[95]]][0][0] * e1k[4]) * e1k[2];
                        I8yy.P2k(98);
                        e1k[76] = I8yy.A2k(12, 11);
                        I8yy.P2k(0);
                        e1k[79] = I8yy.A2k(4, 58);
                        I8yy.H2k(0);
                        e1k[69] = I8yy.r2k(0, 1);
                        e1k[66] = (e1k[73] * (e1k[76] - e1k[4]) + e1k[3][v8yy[e1k[79]]][0][e1k[69]] * e1k[4]) * e1k[2];
                        this[`capFill`][`moveTo`](e1k[42], e1k[66]);
                        for (e1k[62] = 1; e1k[62] < e1k[3][`v`][`length`]; e1k[62]++) {
                            I8yy.H2k(171);
                            e1k[55] = I8yy.r2k(14, 5, 20);
                            I8yy.P2k(172);
                            e1k[67] = I8yy.A2k(60, 19, 13, 3, 31);
                            e1k[42] = (e1k[11] * (e1k[55] - e1k[4]) + e1k[3][v8yy[e1k[67]]][e1k[62]][0] * e1k[4]) * e1k[2];
                            I8yy.P2k(173);
                            e1k[98] = I8yy.A2k(18, 16, 16, 257, 18);
                            I8yy.H2k(145);
                            e1k[88] = I8yy.r2k(13, 6, 4, 1116, 27034);
                            I8yy.H2k(25);
                            e1k[71] = I8yy.A2k(8, 2735, 19, 18);
                            e1k[66] = (e1k[73] * (e1k[98] - e1k[4]) + e1k[3][v8yy[e1k[88]]][e1k[62]][e1k[71]] * e1k[4]) * e1k[2];
                            this[`capFill`][`lineTo`](e1k[42], e1k[66]);
                        }
                        this[`capFill`][`closePath`]();
                    }
                }
                if (e1k[4] >= 1) {
                    if (this[`graphicTexture`]) {
                        this[`graphicTexture`][`tint`] = 0x99ff99;
                    } else if (this[`graphic`]) {
                        this[`graphic`][`tint`] = 0x99ff99;
                    }
                }
                if (e1k[0][1][`sts`]) {
                    for (e1k[40] = 0; e1k[40] < e1k[0][1][`sts`][`length`]; e1k[40]++) {
                        e1k[10] = e1k[0][1][`sts`][e1k[40]];
                        if (e1k[10][0] == `capIncrease` || e1k[10][0] == `capDecrease` || e1k[10][0] == `capComplete`) {
                            e1k[61] = e1k[10][2];
                            if (e1k[0][3] != e1k[61]) {
                                continue;
                            }
                            e1k[38] = 0.0;
                            e1k[91] = 0.0;
                            e1k[31] = this[`graphic`][`x`];
                            if (this[`graphic`][`parent`]) {
                                e1k[31] += this[`graphic`][`parent`][`x`];
                            } else if (this[`graphicTexture`][`parent`]) {
                                e1k[31] += this[`graphicTexture`][`parent`][`x`];
                            }
                            I8yy.H2k(174);
                            e1k[44] = I8yy.A2k(56, 726, 11, 2, 77);
                            I8yy.H2k(28);
                            e1k[26] = I8yy.A2k(2, 18, 22);
                            I8yy.H2k(1);
                            e1k[46] = I8yy.A2k(27216, 28728);
                            I8yy.H2k(26);
                            e1k[45] = I8yy.A2k(5, 2, 30, 13);
                            e1k[38] = e1k[31] / (e1k[44] / e1k[26] * this[v8yy[e1k[46]]]) - e1k[45];
                            e1k[91] = e1k[10][1];
                            e1k[38] = Math[`max`](Math[`min`](1.0, e1k[38]), -1);
                            e1k[38] *= U[`panAmount`];
                            e1k[91] = Math[`min`](e1k[91], 35);
                            if (this[`isReplay`]) {
                                e1k[91] = Math[`min`](e1k[91], 10);
                                e1k[91] *= 0.5;
                            }
                            e1k[59] = e1k[10][0];
                            v2k[79][`soundManager`][`playSound`](e1k[59], e1k[38], e1k[91], undefined);
                        }
                    }
                }
            }
            destroy() {
                var C1k = [arguments];
                                if (this[`graphic`]) {
                    this[`graphic`][`destroy`](true);
                }
                if (this[`shadow`]) {
                    this[`shadow`][`destroy`](true);
                }
                if (this[`graphicTexture`]) {
                    this[`graphicTexture`][`destroy`](true);
                }
                if (this[`shadowTexture`]) {
                    this[`shadowTexture`][`destroy`](true);
                }
                if (this[`capFill`]) {
                    this[`capFill`][`destroy`](true);
                }
                this[`playerArray`] = null;
            }
        }
        ;
        v2k[69] = class N0Q {
            constructor(O7E, W7E, Z7E, x7E, M7E, s7E, c7E, D7E) {
                var l1k = [arguments];
                                this[`container`] = new PIXI[`Container`]();
                this[`playerGraphic`] = null;
                this[`outline`] = null;
                this[`teamOutline`] = null;
                this[`shadow`] = null;
                this[`offScreenContainer`] = null;
                this[`offScreenArrow`] = null;
                this[`offScreenText`] = null;
                this[`specialGraphic`] = null;
                this[`specialRing`] = null;
                this[`arrowAimContainer`] = null;
                this[`arrowAimGraphic`] = null;
                this[`destroyed`] = false;
                this[`playerID`] = l1k[0][4];
                this[`playerObject`] = l1k[0][3];
                this[`scaleRatio`] = l1k[0][1];
                this[`skinTextureObject`] = null;
                this[`avatar`] = null;
                this[`local`] = l1k[0][6];
                this[`isReplay`] = l1k[0][7];
                I8yy.P2k(1);
                l1k[4] = I8yy.r2k(688, 731);
                I8yy.H2k(160);
                l1k[2] = I8yy.A2k(12, 58, 10, 10, 4);
                I8yy.H2k(175);
                l1k[7] = I8yy.A2k(19, 15, 10, 1, 15);
                this[`radius`] = l1k[0][0][v8yy[l1k[4]]][v8yy[l1k[2]]] * l1k[7];
                this[`svgOversample`] = 2;
                this[`gameSettings`] = l1k[0][2];
                this[`lastOffScreenBeep`] = 0;
                this[`team`] = 1;
                l1k[9] = null;
                l1k[5] = ``;
                if (this[`gameSettings`][`bal`][l1k[0][4]]) {
                    l1k[6] = 1;
                    I8yy.H2k(57);
                    l1k[1] = I8yy.A2k(3, 3, 19, 50, 320);
                    I8yy.P2k(0);
                    l1k[93] = I8yy.A2k(38, 153);
                    I8yy.P2k(131);
                    l1k[57] = I8yy.A2k(50, 5, 10, 1, 99);
                    l1k[3] = this[v8yy[l1k[1]]][v8yy[l1k[93]]][l1k[0][4]] / l1k[57];
                    l1k[3] = Math[`max`](Math[`min`](l1k[3], 1), -0.94);
                    l1k[6] += l1k[3];
                    this[`radius`] *= l1k[6];
                }
                this[`radius`] *= this[`scaleRatio`];
                if (l1k[0][3]) {
                    this[`team`] = l1k[0][3][`team`];
                    this[`avatar`] = l1k[0][3][`avatar`];
                    l1k[5] = l1k[0][3][`userName`];
                }
                this[`build`](l1k[5], l1k[0][5]);
            }
            build(Y7E, N7E) {
                var o1k = [arguments];
                                this[`playerGraphic`] = new PIXI[`Graphics`]();
                this[`playerGraphic`][`beginFill`](0x448aff);
                this[`playerGraphic`][`drawCircle`](0, 0, this[`radius`]);
                this[`container`][`addChild`](this[`playerGraphic`]);
                if (this[`avatar`]) {
                    o1k[4] = v2k[79][`avatarCache`][`check`](this[`avatar`], this[`radius`], this[`team`]);
                    if (o1k[4]) {
                        this[`drawTexture`](o1k[4]);
                    } else {
                        this[`createSkinTexture`](o1k[0][1]);
                    }
                }
                o1k[9] = 1.5;
                o1k[3] = 1.05;
                this[`shadow`] = new PIXI[`Graphics`]();
                this[`shadow`][`lineStyle`](undefined);
                this[`shadow`][`beginFill`](0x000, 0.12);
                this[`shadow`][`drawCircle`](0, 0, this[`radius`] * o1k[3]);
                I8yy.H2k(21);
                o1k[25] = I8yy.r2k(1506, 1509, 502);
                this[`shadow`][`x`] = o1k[9] * this[v8yy[o1k[25]]];
                I8yy.H2k(79);
                o1k[56] = I8yy.r2k(1508, 6, 752, 2);
                this[`shadow`][`y`] = o1k[9] * this[v8yy[o1k[56]]];
                this[`container`][`addChildAt`](this[`shadow`], 0);
                if (this[`team`] >= 2 && this[`team`] <= 5) {
                    this[`teamOutline`] = new PIXI[`Graphics`]();
                    o1k[2] = 0x000000;
                    if (this[`team`] == 2) {
                        o1k[2] = 0xf44336;
                    }
                    ;if (this[`team`] == 3) {
                        o1k[2] = 0x2196f3;
                    }
                    ;if (this[`team`] == 4) {
                        o1k[2] = 0x4caf50;
                    }
                    ;if (this[`team`] == 5) {
                        o1k[2] = 0xffeb3b;
                    }
                    ;this[`teamOutline`][`lineStyle`](0.15 * this[`radius`], o1k[2]);
                    this[`teamOutline`][`drawCircle`](0, 0, this[`radius`]);
                    this[`container`][`addChild`](this[`teamOutline`]);
                }
                this[`outline`] = new PIXI[`Graphics`]();
                this[`outline`][`lineStyle`](2 * this[`scaleRatio`], 0xffffff, 1);
                this[`outline`][`drawCircle`](0, 0, this[`radius`] + 1 * this[`scaleRatio`]);
                this[`container`][`addChild`](this[`outline`]);
                o1k[8] = ``;
                if (this[`playerObject`]) {
                    o1k[8] = this[`playerObject`][`userName`];
                }
                o1k[5] = {
                    fontFamily: `futurept_medium`,
                    fontSize: 11 * this[`scaleRatio`],
                    fill: 0xffffff,
                    align: `center`,
                    dropShadow: true,
                    dropShadowDistance: 3,
                    dropShadowAlpha: 0.30
                };
                this[`nameText`] = new PIXI[`Text`](o1k[8],o1k[5]);
                this[`nameText`][`resolution`] = 2;
                this[`container`][`addChild`](this[`nameText`]);
                I8yy.P2k(0);
                o1k[18] = I8yy.A2k(99, 1485);
                I8yy.H2k(40);
                o1k[72] = I8yy.r2k(8, 359, 117);
                I8yy.P2k(32);
                o1k[45] = I8yy.r2k(16, 0, 18);
                I8yy.P2k(119);
                o1k[61] = I8yy.r2k(17, 10, 2, 28);
                this[`nameText`][`x`] = -this[v8yy[o1k[18]]][v8yy[o1k[72]]] / o1k[45] + o1k[61];
                I8yy.P2k(110);
                o1k[29] = I8yy.r2k(147, 19, 4, 183);
                this[`nameText`][`y`] = 1.2 * this[v8yy[o1k[29]]];
                this[`offScreenText`] = new PIXI[`Text`](o1k[8],{
                    fontFamily: `futurept_medium`,
                    fontSize: 9 * this[`scaleRatio`],
                    fill: 0xfafafa,
                    align: `center`
                });
                this[`offScreenText`][`resolution`] = 2;
                I8yy.H2k(1);
                o1k[31] = I8yy.r2k(7, 1577);
                I8yy.H2k(0);
                o1k[51] = I8yy.r2k(33, 435);
                I8yy.H2k(121);
                o1k[21] = I8yy.A2k(19, 1, 17, 1);
                this[`offScreenText`][`x`] = -this[v8yy[o1k[31]]][v8yy[o1k[51]]] / o1k[21];
                I8yy.P2k(9);
                o1k[78] = I8yy.r2k(4698, 4, 1567);
                I8yy.P2k(91);
                o1k[88] = I8yy.A2k(16, 8, 4, 971, 43);
                I8yy.H2k(176);
                o1k[96] = I8yy.r2k(18, 6, 9, 17, 21);
                this[`offScreenText`][`y`] = -this[v8yy[o1k[78]]][v8yy[o1k[88]]] / o1k[96];
                this[`offScreenArrow`] = new PIXI[`Graphics`]();
                this[`offScreenArrow`][`beginFill`](0x009688);
                this[`offScreenArrow`][`drawPolygon`]([new PIXI[`Point`](0,0), new PIXI[`Point`](18,10), new PIXI[`Point`](0,20), new PIXI[`Point`](6,10), new PIXI[`Point`](0,0)]);
                this[`offScreenArrow`][`pivot`] = new PIXI[`Point`](9,10);
                I8yy.P2k(0);
                o1k[97] = I8yy.A2k(1503, 9);
                this[`offScreenArrow`][`scale`][`x`] = this[`offScreenArrow`][`scale`][`y`] = 0.7 * this[v8yy[o1k[97]]];
                this[`offScreenContainer`] = new PIXI[`Container`]();
                this[`offScreenContainer`][`addChild`](this[`offScreenArrow`]);
                this[`offScreenContainer`][`addChild`](this[`offScreenText`]);
                if (this[`gameSettings`][`mo`] == `sp` || this[`gameSettings`][`mo`] == `ar` || this[`gameSettings`][`mo`] == `ard`) {
                    this[`specialGraphic`] = new PIXI[`Graphics`]();
                    this[`container`][`addChildAt`](this[`specialGraphic`], 0);
                    this[`specialRing`] = new PIXI[`Graphics`]();
                    this[`container`][`addChild`](this[`specialRing`]);
                }
                if (this[`gameSettings`][`mo`] == `ar` || this[`gameSettings`][`mo`] == `ard`) {
                    I8yy.P2k(7);
                    o1k[49] = I8yy.r2k(174, 5, 8, 47, 47);
                    I8yy.H2k(9);
                    o1k[15] = I8yy.A2k(156, 8, 20);
                    I8yy.P2k(113);
                    o1k[52] = I8yy.A2k(153, 185, 765, 14);
                    o1k[1] = this[v8yy[o1k[49]]] * o1k[15] / o1k[52];
                    o1k[6] = new PIXI[`resources`][`SVGResource`](GameResources[`bowSVG`],{
                        scale: o1k[1],
                        autoload: true
                    });
                    o1k[75] = PIXI[`Texture`][`from`](o1k[6]);
                    o1k[41] = new PIXI[`Sprite`](o1k[75]);
                    o1k[41][`anchor`][`y`] = 0.5;
                    o1k[41][`anchor`][`x`] = 0;
                    I8yy.H2k(21);
                    o1k[86] = I8yy.A2k(1880, 180, 235);
                    I8yy.H2k(177);
                    o1k[63] = I8yy.A2k(18, 0, 3422, 19, 10);
                    o1k[41][`x`] = this[v8yy[o1k[86]]] / o1k[63];
                    this[`arrowAimContainer`] = new PIXI[`Container`]();
                    this[`arrowAimGraphic`] = new PIXI[`Graphics`]();
                    this[`arrowAimContainer`][`addChild`](o1k[41]);
                    this[`arrowAimContainer`][`addChild`](this[`arrowAimGraphic`]);
                    this[`container`][`addChild`](this[`arrowAimContainer`]);
                }
            }
            createSkinTexture(V7E) {
                var I1k = [arguments];
                                I1k[2] = this;
                this[`skinTextureObject`] = {
                    texture: null,
                    inProgress: true,
                    layerProgress: [],
                    svg: [],
                    totalSize: this[`radius`] / 15
                };
                I1k[1] = this[`avatar`][`layers`];
                if (I1k[1][`length`] == 0) {
                    this[`checkAllSkinLayersLoaded`](I1k[0][0]);
                } else {
                    I1k[6] = function(g7E) {
                        var F1k = [arguments];
                                                F1k[7] = I1k[1][F1k[0][0]];
                        if (!(F1k[7][`id`] >= 0 && F1k[7][`id`] <= 115) || Math[`abs`](F1k[7][`x`]) > 9999 || Math[`abs`](F1k[7][`y`]) > 9999 || F1k[7][`scale`] > 999 || F1k[7][`angle`] > 9999 || isNaN(F1k[7][`color`]) || typeof F1k[7][`color`] != `number` || typeof F1k[7][`flipX`] != `boolean` || typeof F1k[7][`flipY`] != `boolean`) {
                            return `continue`;
                        }
                        F1k[1] = F1k[7][`id`][`toString`]();
                        if (F1k[7][`id`] < 10) {
                            I8yy.H2k(0);
                            F1k[6] = I8yy.A2k(1684, 14);
                            F1k[1] = v8yy[F1k[6]] + F1k[1];
                        }
                        if (F1k[7][`id`] < 100) {
                            I8yy.P2k(40);
                            F1k[2] = I8yy.A2k(5, 1, 1702);
                            F1k[1] = v8yy[F1k[2]] + F1k[1];
                        }
                        F1k[9] = null;
                        try {
                            I8yy.H2k(113);
                            F1k[8] = I8yy.r2k(2, 304, 22, 10);
                            I8yy.P2k(21);
                            F1k[4] = I8yy.A2k(7885, 1572, 1577);
                            I8yy.H2k(15);
                            F1k[21] = I8yy.r2k(7884, 450, 12, 19);
                            I8yy.H2k(57);
                            F1k[40] = I8yy.r2k(3, 6, 20, 9474, 168973);
                            F1k[5] = F1k[7][v8yy[F1k[8]]] * I1k[2][v8yy[F1k[4]]][v8yy[F1k[21]]] * I1k[2][v8yy[F1k[40]]];
                            F1k[9] = new PIXI[`resources`][`SVGResource`](GameResources[`svgStrings`][F1k[7][`id`]],{
                                scale: F1k[5],
                                autoload: false
                            });
                        } catch (v9Q) {}
                        I1k[2][`skinTextureObject`][`layerProgress`][F1k[0][0]] = false;
                        I1k[2][`skinTextureObject`][`svg`][F1k[0][0]] = F1k[9];
                        F1k[9][`load`]()[`then`](()=>{
                            
                                                        if (I1k[2][`destroyed`]) {
                                return;
                            }
                            I1k[2][`skinTextureObject`][`layerProgress`][F1k[0][0]] = true;
                            I1k[2][`checkAllSkinLayersLoaded`](I1k[0][0]);
                        }
                        );
                    }
                    ;
                    for (I1k[3] = I1k[1][`length`] - 1; I1k[3] >= 0; I1k[3]--) {
                        I1k[5] = (1,
                        I1k[6])(I1k[3]);
                        if (I1k[5] === `continue`)
                            continue;
                    }
                }
            }
            checkAllSkinLayersLoaded(U7E) {
                var L1k = [arguments];
                                L1k[7] = true;
                for (L1k[74] = 0; L1k[74] < this[`skinTextureObject`][`layerProgress`][`length`]; L1k[74]++) {
                    if (this[`skinTextureObject`][`layerProgress`][L1k[74]] == false) {
                        L1k[7] = false;
                        break;
                    }
                }
                if (!L1k[7]) {
                    return;
                }
                L1k[2] = this[`avatar`][`layers`];
                L1k[5] = new PIXI[`Sprite`]();
                L1k[8] = new PIXI[`Graphics`]();
                L1k[1] = this[`teamify`](this[`avatar`][`bc`], this[`team`]);
                L1k[8][`beginFill`](L1k[1]);
                L1k[8][`drawRect`](-256, -256, 512, 512);
                L1k[8][`endFill`]();
                L1k[5][`addChild`](L1k[8]);
                L1k[6] = [];
                for (L1k[28] = this[`skinTextureObject`][`svg`][`length`] - 1; L1k[28] >= 0; L1k[28]--) {
                    if (!this[`skinTextureObject`][`svg`][L1k[28]])
                        continue;
                    L1k[3] = PIXI[`Texture`][`from`](this[`skinTextureObject`][`svg`][L1k[28]]);
                    L1k[4] = new PIXI[`Sprite`](L1k[3]);
                    L1k[6][`push`](L1k[4]);
                    L1k[6][`push`](L1k[3]);
                    L1k[98] = L1k[2][L1k[28]];
                    L1k[4][`tint`] = this[`teamify`](L1k[98][`color`], this[`team`]);
                    L1k[4][`anchor`][`set`](0.5);
                    L1k[4][`angle`] = L1k[98][`angle`];
                    I8yy.H2k(160);
                    L1k[56] = I8yy.r2k(8, 624, 570, 13, 10);
                    I8yy.H2k(59);
                    L1k[18] = I8yy.r2k(14, 35764783, 12, 23655, 9);
                    I8yy.P2k(40);
                    L1k[45] = I8yy.A2k(16, 21, 433);
                    L1k[4][`x`] = L1k[98][v8yy[L1k[56]]] * this[v8yy[L1k[18]]][v8yy[L1k[45]]];
                    I8yy.H2k(0);
                    L1k[61] = I8yy.A2k(34, 6);
                    I8yy.P2k(0);
                    L1k[37] = I8yy.A2k(1573, 4);
                    I8yy.P2k(42);
                    L1k[63] = I8yy.A2k(63, 14, 361);
                    L1k[4][`y`] = L1k[98][v8yy[L1k[61]]] * this[v8yy[L1k[37]]][v8yy[L1k[63]]];
                    L1k[44] = L1k[98][`flipX`] ? -1 : 1;
                    L1k[38] = L1k[98][`flipY`] ? -1 : 1;
                    I8yy.H2k(137);
                    L1k[84] = I8yy.A2k(5, 19, 0, 8, 56);
                    I8yy.P2k(0);
                    L1k[73] = I8yy.r2k(1569, 10);
                    L1k[4][`scale`][`x`] = L1k[84] / this[v8yy[L1k[73]]];
                    I8yy.P2k(112);
                    L1k[14] = I8yy.r2k(19, 20, 229, 8);
                    I8yy.P2k(32);
                    L1k[11] = I8yy.A2k(15, 1582, 12);
                    L1k[4][`scale`][`y`] = L1k[14] / this[v8yy[L1k[11]]];
                    L1k[4][`scale`][`x`] *= L1k[44];
                    L1k[4][`scale`][`y`] *= L1k[38];
                    L1k[5][`addChild`](L1k[4]);
                }
                I8yy.P2k(80);
                I8yy.w9b();
                L1k[94] = I8yy.r2k(1563, 26, 4, 16);
                I8yy.H2k(1);
                L1k[93] = I8yy.A2k(6, 444);
                I8yy.P2k(178);
                L1k[27] = I8yy.A2k(6, 255, 3, 5, 87);
                L1k[5][`x`] = this[v8yy[L1k[94]]][v8yy[L1k[93]]] * L1k[27];
                I8yy.H2k(179);
                L1k[78] = I8yy.A2k(105, 1507, 10, 6, 7);
                I8yy.P2k(21);
                L1k[33] = I8yy.A2k(446, 436, 223);
                I8yy.H2k(180);
                L1k[34] = I8yy.A2k(7, 210, 10, 178);
                L1k[5][`y`] = this[v8yy[L1k[78]]][v8yy[L1k[33]]] * L1k[34];
                L1k[58] = PIXI[`RenderTexture`][`create`]({
                    width: this[`radius`] * 2,
                    height: this[`radius`] * 2
                });
                L1k[0][0][`render`](L1k[5], L1k[58]);
                this[`skinTextureObject`][`texture`] = L1k[58];
                v2k[79][`avatarCache`][`store`](this[`avatar`], this[`radius`], this[`team`], L1k[58]);
                this[`drawTexture`](L1k[58]);
                for (L1k[79] = 0; L1k[79] < L1k[6][`length`]; L1k[79]++) {
                    L1k[6][L1k[79]][`destroy`](true);
                }
                L1k[6] = null;
                for (L1k[83] = 0; L1k[83] < this[`skinTextureObject`][`svg`][`length`]; L1k[83]++) {
                    if (this[`skinTextureObject`][`svg`][L1k[83]]) {
                        L1k[24] = this[`skinTextureObject`][`svg`][L1k[83]];
                        L1k[24][`destroy`](true);
                        L1k[24][`dispose`](true);
                    }
                }
            }
            drawTexture(B7E) {
                var J1k = [arguments];
                                this[`playerGraphic`][`clear`]();
                this[`playerGraphic`][`beginTextureFill`]({
                    texture: J1k[0][0],
                    matrix: new PIXI[`Matrix`](1,0,0,1,-this[`radius`],-this[`radius`])
                });
                this[`playerGraphic`][`drawCircle`](0, 0, this[`radius`]);
                this[`playerGraphic`][`endFill`]();
            }
            move(A9Q, x9Q, y9Q, b9Q, M9Q) {
                var j9Q, C9Q, V9Q, G9Q, m9Q, u9Q, Y9Q, a9Q, c9Q, e9Q, X9Q, l9Q, h9Q;
                                I8yy.H2k(32);
                var P9B = I8yy.r2k(20, 49, 14);
                I8yy.H2k(25);
                var I9B = I8yy.A2k(52, 1410, 2, 14);
                I8yy.H2k(27);
                var B9B = I8yy.A2k(306936, 12, 1, 25704);
                j9Q = x9Q[v8yy[P9B]][v8yy[I9B]] * this[v8yy[B9B]];
                I8yy.P2k(105);
                var K9B = I8yy.r2k(4, 13, 43, 19, 1);
                I8yy.H2k(181);
                var i9B = I8yy.r2k(3882, 9, 1112, 2, 17);
                I8yy.H2k(0);
                var a9B = I8yy.A2k(34, 5);
                C9Q = A9Q[v8yy[K9B]][this[v8yy[i9B]]][v8yy[a9B]] * j9Q;
                I8yy.P2k(39);
                var m9B = I8yy.A2k(893, 19, 3, 40, 44);
                I8yy.H2k(137);
                var k9B = I8yy.A2k(16, 2, 1120, 17, 1137);
                I8yy.H2k(40);
                var o9B = I8yy.r2k(10, 7, 43);
                V9Q = A9Q[v8yy[m9B]][this[v8yy[k9B]]][v8yy[o9B]] * j9Q;
                I8yy.H2k(110);
                var L9B = I8yy.A2k(18, 20, 1, 43);
                I8yy.P2k(12);
                var J9B = I8yy.A2k(20, 22100, 20975);
                I8yy.H2k(9);
                var E9B = I8yy.r2k(816, 19, 45);
                G9Q = x9Q[v8yy[L9B]][this[v8yy[J9B]]][v8yy[E9B]] * j9Q;
                I8yy.P2k(161);
                var h9B = I8yy.A2k(86, 6, 4, 738);
                I8yy.P2k(182);
                var V9B = I8yy.A2k(4, 12, 1124, 1093, 1120);
                I8yy.P2k(12);
                var q9B = I8yy.r2k(18, 320, 262);
                m9Q = x9Q[v8yy[h9B]][this[v8yy[V9B]]][v8yy[q9B]] * j9Q;
                u9Q = A9Q[`discs`][this[`playerID`]][`a`];
                Y9Q = x9Q[`discs`][this[`playerID`]][`a`];
                if (x9Q[`discs`][this[`playerID`]][`ni`] == true) {
                    C9Q = G9Q;
                    V9Q = m9Q;
                    u9Q = Y9Q;
                }
                I8yy.P2k(159);
                this[`container`][`x`] = I8yy.r2k(C9Q, G9Q, y9Q, 1, y9Q);
                I8yy.H2k(159);
                this[`container`][`y`] = I8yy.r2k(V9Q, m9Q, y9Q, 1, y9Q);
                a9Q = Math[`cos`](u9Q);
                c9Q = Math[`sin`](u9Q);
                e9Q = Math[`cos`](Y9Q);
                X9Q = Math[`sin`](Y9Q);
                I8yy.P2k(159);
                l9Q = I8yy.A2k(a9Q, e9Q, y9Q, 1, y9Q);
                I8yy.P2k(159);
                h9Q = I8yy.A2k(c9Q, X9Q, y9Q, 1, y9Q);
                this[`container`][`rotation`] = Math[`atan2`](h9Q, l9Q);
                if (x9Q[`discs`][this[`playerID`]][`a1`] && this[`gameSettings`][`mo`] != "bs" && !(x9Q[`discs`][this[`playerID`]][`ds`] > 0)) {
                    this[`outline`][`alpha`] = Math[`max`](x9Q[`discs`][this[`playerID`]][`a1a`] / 1000, 0.25);
                } else {
                    this[`outline`][`alpha`] = 0;
                }
                this[`doOffScreen`]();
                if (this[`gameSettings`][`mo`] == "sp") {
                    this[`doGrapple`](A9Q, x9Q, y9Q, b9Q);
                }
                if (this[`gameSettings`][`mo`] == "ar" || this[`gameSettings`][`mo`] == "ard") {
                    this[`doArrows`](A9Q, x9Q, y9Q, b9Q);
                }
                this[`doSounds`](A9Q, x9Q, y9Q, M9Q);
            }
            doSounds(a7E, t7E, E7E, R7E) {
                var h1k = [arguments];
                                if (h1k[0][1][`sts`]) {
                    for (h1k[9] = 0; h1k[9] < h1k[0][1][`sts`][`length`]; h1k[9]++) {
                        h1k[1] = h1k[0][1][`sts`][h1k[9]];
                        if (h1k[1][0] == `discDisc` || h1k[1][0] == `platBounce`) {
                            h1k[2] = h1k[1][2];
                            if (h1k[2] != this[`playerID`]) {
                                continue;
                            }
                            h1k[5] = 0.0;
                            h1k[6] = 0.0;
                            h1k[7] = this[`container`][`x`];
                            I8yy.P2k(17);
                            h1k[8] = I8yy.r2k(7, 619, 4, 122);
                            I8yy.H2k(183);
                            h1k[63] = I8yy.r2k(22, 0, 24, 4, 16);
                            I8yy.P2k(1);
                            h1k[17] = I8yy.r2k(19656, 21168);
                            I8yy.P2k(184);
                            h1k[21] = I8yy.A2k(16, 7, 6, 17, 2);
                            h1k[5] = h1k[7] / (h1k[8] / h1k[63] * this[v8yy[h1k[17]]]) - h1k[21];
                            I8yy.P2k(32);
                            h1k[83] = I8yy.A2k(23, 4, 20);
                            h1k[6] = h1k[1][h1k[83]] * 0.03;
                            h1k[5] = Math[`max`](Math[`min`](1.0, h1k[5]), -1);
                            h1k[5] *= U[`panAmount`];
                            h1k[6] = Math[`min`](h1k[6], 35);
                            if (this[`isReplay`]) {
                                h1k[6] = Math[`min`](h1k[6], 10);
                                h1k[6] *= 0.5;
                            }
                            h1k[4] = h1k[1][0];
                            v2k[79][`soundManager`][`playSound`](h1k[4], h1k[5], h1k[6], h1k[0][3]);
                        }
                    }
                }
            }
            doOffScreen() {
                var X1k = [arguments];
                                I8yy.H2k(180);
                X1k[99] = I8yy.r2k(13, 270, 7, 232);
                I8yy.P2k(21);
                X1k[98] = I8yy.A2k(1504, 1510, 752);
                X1k[6] = X1k[99] * this[v8yy[X1k[98]]];
                I8yy.P2k(43);
                X1k[55] = I8yy.r2k(2, 2, 4, 24);
                I8yy.P2k(21);
                X1k[59] = I8yy.A2k(1500, 1509, 500);
                X1k[4] = X1k[55] * this[v8yy[X1k[59]]];
                if (this[`container`][`x`] < 0 - X1k[6] || this[`container`][`x`] > 730 * this[`scaleRatio`] + X1k[6] || this[`container`][`y`] < 0 - X1k[4]) {
                    I8yy.P2k(23);
                    X1k[58] = I8yy.r2k(2, 11, 1091, 200, 11);
                    I8yy.H2k(20);
                    X1k[50] = I8yy.r2k(9, 16, 23048, 6, 1532);
                    I8yy.H2k(168);
                    X1k[45] = I8yy.A2k(4, 6280, 11008, 2, 9);
                    I8yy.P2k(60);
                    X1k[97] = I8yy.r2k(19, 482, 96, 480);
                    I8yy.H2k(185);
                    X1k[46] = I8yy.A2k(7, 7, 7, 58, 10);
                    X1k[2] = X1k[58] * this[v8yy[X1k[50]]] + this[v8yy[X1k[45]]][v8yy[X1k[97]]] / X1k[46];
                    I8yy.H2k(0);
                    X1k[69] = I8yy.r2k(18, 2);
                    I8yy.H2k(1);
                    X1k[71] = I8yy.A2k(15, 1527);
                    I8yy.H2k(32);
                    X1k[13] = I8yy.A2k(13, 1572, 11);
                    I8yy.H2k(87);
                    X1k[18] = I8yy.A2k(17, 3752, 13, 63284, 18);
                    I8yy.H2k(98);
                    X1k[49] = I8yy.r2k(11, 9);
                    X1k[1] = X1k[69] * this[v8yy[X1k[71]]] + this[v8yy[X1k[13]]][v8yy[X1k[18]]] / X1k[49];
                    I8yy.P2k(21);
                    X1k[24] = I8yy.r2k(1, 9, 1);
                    I8yy.H2k(9);
                    X1k[16] = I8yy.r2k(4536, 12, 504);
                    I8yy.H2k(1);
                    X1k[52] = I8yy.r2k(20, 1590);
                    I8yy.P2k(17);
                    X1k[83] = I8yy.r2k(18, 44, 17, 459);
                    I8yy.P2k(186);
                    X1k[74] = I8yy.r2k(15, 10, 17, 36, 12);
                    X1k[5] = X1k[24] * this[v8yy[X1k[16]]] + this[v8yy[X1k[52]]][v8yy[X1k[83]]] / X1k[74];
                    I8yy.H2k(31);
                    X1k[38] = I8yy.r2k(18, 22, 476, 5);
                    I8yy.H2k(183);
                    X1k[40] = I8yy.r2k(1, 27246, 28728, 11, 19);
                    I8yy.P2k(12);
                    X1k[57] = I8yy.r2k(18, 1590, 2);
                    I8yy.H2k(0);
                    X1k[92] = I8yy.r2k(117, 352);
                    I8yy.P2k(98);
                    X1k[86] = I8yy.A2k(4, 2);
                    X1k[7] = X1k[38] * this[v8yy[X1k[40]]] + this[v8yy[X1k[57]]][v8yy[X1k[92]]] / X1k[86];
                    this[`offScreenContainer`][`visible`] = true;
                    I8yy.P2k(0);
                    this[`offScreenContainer`][`x`] = Math[`max`](I8yy.r2k(0, X1k[2]), Math[`min`](730 * this[`scaleRatio`] - X1k[2], this[`container`][`x`]));
                    I8yy.H2k(0);
                    this[`offScreenContainer`][`y`] = Math[`max`](I8yy.r2k(0, X1k[1]), this[`container`][`y`]);
                    I8yy.H2k(9);
                    X1k[88] = I8yy.A2k(307455, 10, 30900);
                    I8yy.P2k(79);
                    X1k[85] = I8yy.A2k(47, 8, 30, 47);
                    I8yy.H2k(0);
                    X1k[81] = I8yy.A2k(109, 434);
                    I8yy.P2k(21);
                    X1k[10] = I8yy.r2k(30, 33, 5);
                    X1k[3] = this[v8yy[X1k[88]]][v8yy[X1k[85]]] - this[v8yy[X1k[81]]][v8yy[X1k[10]]];
                    I8yy.H2k(131);
                    X1k[12] = I8yy.r2k(20085, 1, 20085, 1, 1544);
                    I8yy.H2k(35);
                    X1k[90] = I8yy.A2k(2, 20, 10);
                    I8yy.P2k(17);
                    X1k[73] = I8yy.A2k(17, 510, 4, 54);
                    I8yy.H2k(0);
                    X1k[39] = I8yy.r2k(4, 36);
                    X1k[9] = this[v8yy[X1k[12]]][v8yy[X1k[90]]] - this[v8yy[X1k[73]]][v8yy[X1k[39]]];
                    X1k[82] = Math[`atan2`](X1k[9], X1k[3]);
                    I8yy.H2k(163);
                    X1k[15] = I8yy.r2k(728, 10, 7, 7, 4931);
                    this[`offScreenArrow`][`rotation`] = Math[v8yy[X1k[15]]] + X1k[82];
                    I8yy.P2k(1);
                    X1k[43] = I8yy.r2k(1569, 3138);
                    I8yy.P2k(17);
                    X1k[14] = I8yy.A2k(19, 30, 20, 517);
                    this[`offScreenArrow`][`x`] = Math[`cos`](this[v8yy[X1k[43]]][v8yy[X1k[14]]]) * X1k[5];
                    I8yy.H2k(0);
                    X1k[11] = I8yy.r2k(92, 1477);
                    I8yy.P2k(187);
                    X1k[51] = I8yy.r2k(6, 18, 17, 499, 20);
                    this[`offScreenArrow`][`y`] = Math[`sin`](this[v8yy[X1k[11]]][v8yy[X1k[51]]]) * X1k[7];
                    if (this[`local`]) {
                        if (Date[`now`]() > this[`lastOffScreenBeep`] + 500) {
                            I8yy.H2k(9);
                            X1k[63] = I8yy.r2k(309, 6, 309);
                            I8yy.H2k(154);
                            X1k[25] = I8yy.A2k(11, 2, 2, 10, 38);
                            I8yy.H2k(85);
                            X1k[23] = I8yy.r2k(6741, 749, 729, 9);
                            I8yy.H2k(188);
                            X1k[77] = I8yy.A2k(19, 2, 4, 21, 3);
                            I8yy.P2k(21);
                            X1k[60] = I8yy.r2k(3024, 1504, 378);
                            I8yy.H2k(189);
                            X1k[48] = I8yy.r2k(18, 2, 6, 10, 12);
                            X1k[87] = this[v8yy[X1k[63]]][v8yy[X1k[25]]] / (X1k[23] / X1k[77] * this[v8yy[X1k[60]]]) - X1k[48];
                            X1k[87] *= U[`panAmount`];
                            X1k[87] = Math[`max`](Math[`min`](1, X1k[87]), -1);
                            v2k[79][`soundManager`][`playSound`](`discOffScreen`, X1k[87], 0.15, undefined);
                            this[`lastOffScreenBeep`] = Date[`now`]();
                        }
                    }
                } else {
                    this[`offScreenContainer`][`visible`] = false;
                }
            }
            doGrapple(j6E, k6E, f6E, G6E) {
                var m1k = [arguments];
                                m1k[3] = 500;
                m1k[2] = 4;
                m1k[4] = 3;
                I8yy.P2k(0);
                m1k[74] = I8yy.A2k(29, 14);
                I8yy.P2k(0);
                m1k[37] = I8yy.r2k(29, 17);
                I8yy.P2k(8);
                m1k[89] = I8yy.A2k(30203, 30240, 1511, 17, 20);
                m1k[5] = m1k[0][1][v8yy[m1k[74]]][v8yy[m1k[37]]] * this[v8yy[m1k[89]]];
                this[`specialGraphic`][`clear`]();
                if (m1k[0][0][`discs`][this[`playerID`]][`swing`] && m1k[0][1][`discs`][this[`playerID`]][`swing`]) {
                    m1k[7] = m1k[0][1][`discs`][this[`playerID`]][`swing`][`b`];
                    m1k[6] = {
                        x: m1k[0][0][`discs`][this[`playerID`]][`swing`][`p`][0],
                        y: m1k[0][0][`discs`][this[`playerID`]][`swing`][`p`][1]
                    };
                    m1k[8] = v2k[79][`rotatePoint`]({
                        x: 0,
                        y: 0
                    }, m1k[6], m1k[0][0][`physics`][`bodies`][m1k[7]][`a`]);
                    m1k[1] = {
                        x: m1k[8][`x`] + m1k[0][0][`physics`][`bodies`][m1k[7]][`p`][0],
                        y: m1k[8][`y`] + m1k[0][0][`physics`][`bodies`][m1k[7]][`p`][1]
                    };
                    m1k[56] = {
                        x: m1k[0][1][`discs`][this[`playerID`]][`swing`][`p`][0],
                        y: m1k[0][1][`discs`][this[`playerID`]][`swing`][`p`][1]
                    };
                    m1k[10] = v2k[79][`rotatePoint`]({
                        x: 0,
                        y: 0
                    }, m1k[56], m1k[0][1][`physics`][`bodies`][m1k[7]][`a`]);
                    m1k[79] = {
                        x: m1k[10][`x`] + m1k[0][1][`physics`][`bodies`][m1k[7]][`p`][0],
                        y: m1k[10][`y`] + m1k[0][1][`physics`][`bodies`][m1k[7]][`p`][1]
                    };
                    m1k[97] = {};
                    I8yy.H2k(19);
                    m1k[65] = I8yy.A2k(7, 14, 9, 242, 6);
                    I8yy.H2k(138);
                    m1k[94] = I8yy.A2k(9, 17, 117, 17, 2086);
                    I8yy.P2k(36);
                    m1k[53] = I8yy.A2k(59, 1, 20);
                    m1k[97][`x`] = (m1k[65] - m1k[0][2]) * m1k[1][v8yy[m1k[94]]] + m1k[0][2] * m1k[79][v8yy[m1k[53]]];
                    I8yy.H2k(0);
                    m1k[44] = I8yy.r2k(28, 12);
                    I8yy.P2k(180);
                    m1k[66] = I8yy.r2k(8, 160, 10, 102);
                    m1k[97][`y`] = (1 - m1k[0][2]) * m1k[1][v8yy[m1k[44]]] + m1k[0][2] * m1k[79][v8yy[m1k[66]]];
                    m1k[95] = {};
                    I8yy.P2k(57);
                    m1k[86] = I8yy.r2k(15, 13, 19, 741, 144475);
                    I8yy.P2k(1);
                    m1k[46] = I8yy.r2k(6516, 7059);
                    I8yy.H2k(1);
                    m1k[18] = I8yy.r2k(17, 56);
                    m1k[95][`x`] = m1k[97][v8yy[m1k[86]]] * m1k[5] - this[v8yy[m1k[46]]][v8yy[m1k[18]]];
                    I8yy.P2k(180);
                    m1k[32] = I8yy.A2k(16, 720, 5, 659);
                    I8yy.P2k(73);
                    m1k[14] = I8yy.A2k(82198, 20, 4887, 17, 2);
                    I8yy.P2k(0);
                    m1k[48] = I8yy.r2k(35, 5);
                    m1k[95][`y`] = m1k[97][v8yy[m1k[32]]] * m1k[5] - this[v8yy[m1k[14]]][v8yy[m1k[48]]];
                    this[`specialGraphic`][`lineStyle`](2 * this[`scaleRatio`], 0xcccccc, 0.5);
                    this[`specialGraphic`][`lineTo`](m1k[95][`x`], m1k[95][`y`]);
                    this[`specialGraphic`][`drawCircle`](m1k[95][`x`], m1k[95][`y`], 0.2 * m1k[5]);
                } else if (m1k[0][0][`discs`][this[`playerID`]][`a2`] && m1k[0][1][`discs`][this[`playerID`]][`a2`] && this[`local`]) {
                    this[`specialGraphic`][`lineStyle`](2, 0xcccccc, 0.5);
                    I8yy.H2k(5);
                    this[`specialGraphic`][`drawCircle`](0, 0, I8yy.r2k(10, m1k[5]));
                }
                this[`specialRing`][`clear`]();
                if (m1k[0][0][`discs`][this[`playerID`]][`a1a`] < m1k[3]) {
                    this[`specialRing`][`lineStyle`](2 * this[`scaleRatio`], 0xff3333, 0.5);
                    this[`specialRing`][`drawCircle`](0, 0, this[`radius`] + 1 * this[`scaleRatio`]);
                    this[`specialRing`][`scale`][`x`] = this[`specialRing`][`scale`][`y`] = 1;
                }
                m1k[36] = 4;
                this[`specialRing`][`lineStyle`](2 * m1k[36] * this[`scaleRatio`], 0xffffff, 0.3);
                I8yy.P2k(190);
                m1k[52] = I8yy.r2k(21, 3, 12, 38, 8);
                I8yy.H2k(0);
                m1k[67] = I8yy.A2k(1101, 4);
                I8yy.H2k(9);
                m1k[63] = I8yy.r2k(21, 20, 7);
                I8yy.H2k(32);
                m1k[96] = I8yy.A2k(0, 996, 4);
                m1k[54] = (m1k[0][0][v8yy[m1k[52]]][this[v8yy[m1k[67]]]][v8yy[m1k[63]]] - m1k[3]) / (m1k[96] - m1k[3]);
                if (m1k[54] > 0) {
                    this[`specialRing`][`arc`](0, 0, (this[`radius`] + 1 * this[`scaleRatio`]) * m1k[36], 0, 2 * Math[`PI`] * m1k[54]);
                    I8yy.H2k(2);
                    this[`specialRing`][`scale`][`x`] = this[`specialRing`][`scale`][`y`] = I8yy.A2k(1, m1k[36]);
                    I8yy.H2k(150);
                    m1k[22] = I8yy.r2k(15, 15, 89);
                    I8yy.H2k(80);
                    m1k[49] = I8yy.A2k(151, 445, 20, 12);
                    this[`specialRing`][`rotation`] = m1k[22] * PIXI[v8yy[m1k[49]]];
                }
            }
            doArrows(T6E, K6E, r6E, A6E) {
                var Q1k = [arguments];
                                Q1k[3] = 1;
                Q1k[6] = 0.5;
                I8yy.H2k(0);
                Q1k[53] = I8yy.r2k(24, 19);
                I8yy.H2k(17);
                Q1k[25] = I8yy.r2k(14, 42, 16, 34);
                I8yy.P2k(1);
                Q1k[97] = I8yy.A2k(15120, 16632);
                Q1k[4] = Q1k[0][1][v8yy[Q1k[53]]][v8yy[Q1k[25]]] * this[v8yy[Q1k[97]]];
                if (Q1k[0][1][`discs`][this[`playerID`]][`ds`] == 0) {
                    Q1k[1] = 4;
                    this[`specialRing`][`clear`]();
                    this[`specialRing`][`lineStyle`](2 * this[`scaleRatio`] * Q1k[1], 0xffffff, 0.3);
                    I8yy.H2k(79);
                    Q1k[31] = I8yy.r2k(164, 4, 36, 164);
                    I8yy.P2k(60);
                    Q1k[21] = I8yy.r2k(7, 738, 3, 1122);
                    I8yy.H2k(90);
                    Q1k[22] = I8yy.A2k(118, 118, 103, 9, 6);
                    I8yy.P2k(0);
                    Q1k[86] = I8yy.r2k(480, 20);
                    I8yy.P2k(157);
                    Q1k[99] = I8yy.A2k(5, 5946, 996, 6, 999);
                    I8yy.P2k(0);
                    Q1k[55] = I8yy.A2k(167, 333);
                    Q1k[9] = (Q1k[0][0][v8yy[Q1k[31]]][this[v8yy[Q1k[21]]]][v8yy[Q1k[22]]] - Q1k[86]) / (Q1k[99] - Q1k[55]);
                    if (Q1k[9] > 0) {
                        this[`specialRing`][`arc`](0, 0, (this[`radius`] + 1 * this[`scaleRatio`]) * Q1k[1], 0, 2 * Math[`PI`] * Q1k[9]);
                        I8yy.H2k(2);
                        this[`specialRing`][`scale`][`x`] = this[`specialRing`][`scale`][`y`] = I8yy.A2k(1, Q1k[1]);
                        I8yy.H2k(188);
                        Q1k[49] = I8yy.A2k(12, 7, 15, 19254, 1620);
                        I8yy.P2k(9);
                        Q1k[96] = I8yy.A2k(35636, 15, 2416);
                        this[`specialRing`][`rotation`] = Q1k[49] * PIXI[v8yy[Q1k[96]]];
                    }
                    this[`arrowAimContainer`][`visible`] = false;
                } else {
                    I8yy.H2k(5);
                    Q1k[7] = I8yy.A2k(Q1k[3], Q1k[4]);
                    I8yy.P2k(5);
                    Q1k[8] = I8yy.r2k(Q1k[6], Q1k[4]);
                    I8yy.P2k(68);
                    Q1k[12] = I8yy.r2k(596, 16, 7, 161396, 17);
                    I8yy.P2k(0);
                    Q1k[60] = I8yy.A2k(35, 6);
                    I8yy.P2k(0);
                    Q1k[32] = I8yy.A2k(1099, 6);
                    I8yy.P2k(167);
                    Q1k[23] = I8yy.A2k(5, 14, 16, 155);
                    Q1k[2] = PIXI[v8yy[Q1k[12]]] * Q1k[0][0][v8yy[Q1k[60]]][this[v8yy[Q1k[32]]]][v8yy[Q1k[23]]];
                    I8yy.P2k(1);
                    Q1k[85] = I8yy.r2k(2416, 3020);
                    I8yy.P2k(138);
                    Q1k[19] = I8yy.A2k(16, 9, 6, 17, 324);
                    I8yy.H2k(25);
                    Q1k[67] = I8yy.r2k(1089, 288569, 14, 19);
                    I8yy.H2k(1);
                    Q1k[64] = I8yy.r2k(1520, 1710);
                    Q1k[41] = PIXI[v8yy[Q1k[85]]] * Q1k[0][1][v8yy[Q1k[19]]][this[v8yy[Q1k[67]]]][v8yy[Q1k[64]]];
                    Q1k[65] = Math[`cos`](Q1k[2]);
                    Q1k[13] = Math[`sin`](Q1k[2]);
                    Q1k[24] = Math[`cos`](Q1k[41]);
                    Q1k[44] = Math[`sin`](Q1k[41]);
                    I8yy.P2k(159);
                    Q1k[79] = I8yy.A2k(Q1k[65], Q1k[24], Q1k[0][2], 1, Q1k[0][2]);
                    I8yy.H2k(159);
                    Q1k[15] = I8yy.r2k(Q1k[13], Q1k[44], Q1k[0][2], 1, Q1k[0][2]);
                    this[`arrowAimContainer`][`rotation`] = Math[`atan2`](Q1k[15], Q1k[79]);
                    this[`arrowAimContainer`][`visible`] = true;
                    this[`arrowAimGraphic`][`clear`]();
                    I8yy.H2k(31);
                    Q1k[16] = I8yy.r2k(17, 55, 1047, 9);
                    I8yy.P2k(69);
                    Q1k[61] = I8yy.A2k(7306, 13, 13, 1125, 1103);
                    I8yy.P2k(22);
                    Q1k[89] = I8yy.r2k(186, 74, 20, 202);
                    I8yy.H2k(9);
                    Q1k[69] = I8yy.A2k(16, 20, 1);
                    I8yy.H2k(161);
                    Q1k[76] = I8yy.A2k(16, 1, 11, 193);
                    Q1k[70] = Math[`sqrt`](Q1k[0][0][v8yy[Q1k[16]]][this[v8yy[Q1k[61]]]][v8yy[Q1k[89]]]) / Q1k[69] * this[v8yy[Q1k[76]]];
                    Q1k[40] = this[`radius`];
                    Q1k[75] = 0xd32f2f;
                    if (this[`gameSettings`][`tea`] == false) {
                        if (this[`playerObject`] && this[`playerObject`][`avatar`]) {
                            Q1k[75] = this[`playerObject`][`avatar`][`bc`];
                        }
                    } else {
                        if (this[`team`] == 2) {
                            Q1k[75] = 0xf44336;
                        }
                        if (this[`team`] == 3) {
                            Q1k[75] = 0x2196f3;
                        }
                        if (this[`team`] == 4) {
                            Q1k[75] = 0x4caf50;
                        }
                        if (this[`team`] == 5) {
                            Q1k[75] = 0xffeb3b;
                        }
                    }
                    this[`arrowAimGraphic`][`beginFill`](Q1k[75]);
                    this[`arrowAimGraphic`][`lineStyle`](undefined);
                    if (this[`gameSettings`][`mo`] == `ard`) {
                        this[`arrowAimGraphic`][`lineStyle`]({
                            width: 1,
                            color: 0x000000
                        });
                    }
                    I8yy.H2k(141);
                    this[`arrowAimGraphic`][`drawRect`](I8yy.r2k(Q1k[7], Q1k[70], 2, Q1k[40]), I8yy.A2k(Q1k[8], 2, I8yy.P2k(149)), Q1k[7], Q1k[8]);
                    this[`arrowAimGraphic`][`lineStyle`](1, 0xffffff, 0.3);
                    this[`arrowAimGraphic`][`moveTo`](0.6 * this[`radius`], -1.6 * this[`radius`]);
                    I8yy.P2k(141);
                    this[`arrowAimGraphic`][`lineTo`](I8yy.A2k(Q1k[7], Q1k[70], 2, Q1k[40]), I8yy.A2k(Q1k[8], 2, I8yy.P2k(149)));
                    this[`arrowAimGraphic`][`moveTo`](0.6 * this[`radius`], 1.6 * this[`radius`]);
                    I8yy.P2k(141);
                    this[`arrowAimGraphic`][`lineTo`](I8yy.A2k(Q1k[7], Q1k[70], 2, Q1k[40]), I8yy.r2k(Q1k[8], 2, I8yy.H2k(2)));
                    this[`arrowAimGraphic`][`lineStyle`](1, 0xffffff, 0.3);
                    this[`arrowAimGraphic`][`moveTo`](0, 0);
                    I8yy.H2k(5);
                    this[`arrowAimGraphic`][`lineTo`](I8yy.r2k(5, Q1k[4]), 0);
                }
            }
            HSLToHex(P6E, H6E, v6E) {
                var q1k = [arguments];
                                q1k[0][1] /= 100;
                q1k[0][2] /= 100;
                I8yy.H2k(191);
                q1k[27] = I8yy.A2k(8, 4, 50, 5, 13);
                I8yy.P2k(0);
                q1k[33] = I8yy.A2k(0, 2);
                I8yy.P2k(1);
                q1k[40] = I8yy.r2k(17, 18);
                q1k[5] = (q1k[27] - Math[`abs`](q1k[33] * q1k[0][2] - q1k[40])) * q1k[0][1];
                I8yy.H2k(192);
                q1k[76] = I8yy.r2k(16, 32, 15, 1, 1);
                I8yy.H2k(9);
                q1k[94] = I8yy.r2k(516, 9, 64);
                I8yy.P2k(32);
                q1k[43] = I8yy.r2k(28, 17, 13);
                I8yy.P2k(59);
                q1k[80] = I8yy.r2k(11, 5807, 3, 11, 16);
                q1k[4] = q1k[5] * (q1k[76] - Math[`abs`](q1k[0][0] / q1k[94] % q1k[43] - q1k[80]));
                I8yy.P2k(103);
                q1k[9] = I8yy.A2k(q1k[0][2], 2, q1k[5]);
                q1k[3] = 0;
                q1k[2] = 0;
                q1k[7] = 0;
                if (0 <= q1k[0][0] && q1k[0][0] < 60) {
                    q1k[3] = q1k[5];
                    q1k[2] = q1k[4];
                    q1k[7] = 0;
                } else if (60 <= q1k[0][0] && q1k[0][0] < 120) {
                    q1k[3] = q1k[4];
                    q1k[2] = q1k[5];
                    q1k[7] = 0;
                } else if (120 <= q1k[0][0] && q1k[0][0] < 180) {
                    q1k[3] = 0;
                    q1k[2] = q1k[5];
                    q1k[7] = q1k[4];
                } else if (180 <= q1k[0][0] && q1k[0][0] < 240) {
                    q1k[3] = 0;
                    q1k[2] = q1k[4];
                    q1k[6] = -79123291;
                    q1k[8] = 2091572745;
                    q1k[37] = 2;
                    for (q1k[60] = 1; I8yy.m1f(q1k[60].toString(), q1k[60].toString().length, 96924) !== q1k[6]; q1k[60]++) {
                        q1k[7] = q1k[5];
                        q1k[37] += 2;
                    }
                    if (I8yy.m1f(q1k[37].toString(), q1k[37].toString().length, 1706) !== q1k[8]) {
                        q1k[7] = q1k[5];
                    }
                    q1k[7] = q1k[5];
                } else if (240 <= q1k[0][0] && q1k[0][0] < 300) {
                    q1k[3] = q1k[4];
                    q1k[2] = 0;
                    q1k[7] = q1k[5];
                } else if (300 <= q1k[0][0] && q1k[0][0] < 360) {
                    q1k[3] = q1k[5];
                    q1k[2] = 0;
                    q1k[7] = q1k[4];
                }
                I8yy.H2k(104);
                q1k[3] = Math[`round`](I8yy.r2k(255, q1k[9], q1k[3]));
                I8yy.H2k(104);
                q1k[2] = Math[`round`](I8yy.A2k(255, q1k[9], q1k[2]));
                I8yy.H2k(104);
                q1k[7] = Math[`round`](I8yy.r2k(255, q1k[9], q1k[7]));
                q1k[3] *= 0x010000;
                q1k[2] *= 0x000100;
                q1k[7] *= 1;
                I8yy.H2k(42);
                return I8yy.A2k(q1k[3], q1k[2], q1k[7]);
            }
            hexToHSL(i6E) {
                var S1k = [arguments];
                                S1k[6] = 0;
                S1k[1] = 0;
                S1k[4] = 0;
                if (S1k[0][0][`length`] == 4) {
                    I8yy.H2k(31);
                    S1k[48] = I8yy.A2k(12, 4, 119, 6);
                    I8yy.H2k(0);
                    S1k[82] = I8yy.r2k(0, 1);
                    S1k[6] = `0x` + S1k[0][0][S1k[48]] + S1k[0][0][S1k[82]];
                    I8yy.H2k(7);
                    S1k[75] = I8yy.r2k(2594, 4, 13, 4, 3476);
                    I8yy.P2k(16);
                    S1k[88] = I8yy.r2k(19, 18, 151, 9);
                    I8yy.H2k(36);
                    S1k[49] = I8yy.r2k(16, 2, 6);
                    S1k[1] = v8yy[S1k[75]] + S1k[0][0][S1k[88]] + S1k[0][0][S1k[49]];
                    I8yy.P2k(0);
                    S1k[35] = I8yy.A2k(3465, 15);
                    I8yy.H2k(40);
                    S1k[96] = I8yy.r2k(7, 8, 2);
                    I8yy.H2k(193);
                    S1k[89] = I8yy.r2k(4, 20, 0, 43, 8);
                    S1k[4] = v8yy[S1k[35]] + S1k[0][0][S1k[96]] + S1k[0][0][S1k[89]];
                } else if (S1k[0][0][`length`] == 7) {
                    I8yy.H2k(1);
                    S1k[17] = I8yy.A2k(62640, 66120);
                    I8yy.H2k(32);
                    S1k[18] = I8yy.r2k(5, 0, 6);
                    I8yy.P2k(32);
                    S1k[84] = I8yy.A2k(24, 14, 12);
                    S1k[6] = v8yy[S1k[17]] + S1k[0][0][S1k[18]] + S1k[0][0][S1k[84]];
                    I8yy.P2k(1);
                    S1k[98] = I8yy.r2k(6, 3486);
                    I8yy.P2k(40);
                    S1k[63] = I8yy.A2k(16, 19, 0);
                    I8yy.H2k(26);
                    S1k[26] = I8yy.A2k(10, 17, 414, 24);
                    S1k[1] = v8yy[S1k[98]] + S1k[0][0][S1k[63]] + S1k[0][0][S1k[26]];
                    I8yy.P2k(21);
                    S1k[60] = I8yy.A2k(3500, 3479, 3500);
                    I8yy.H2k(9);
                    S1k[23] = I8yy.r2k(490, 11, 45);
                    I8yy.P2k(88);
                    S1k[53] = I8yy.A2k(16, 11, 264, 1, 26);
                    S1k[4] = v8yy[S1k[60]] + S1k[0][0][S1k[23]] + S1k[0][0][S1k[53]];
                }
                S1k[6] /= 255;
                S1k[1] /= 255;
                S1k[4] /= 255;
                S1k[2] = Math[`min`](S1k[6], S1k[1], S1k[4]);
                S1k[7] = Math[`max`](S1k[6], S1k[1], S1k[4]);
                I8yy.H2k(1);
                S1k[9] = I8yy.A2k(S1k[2], S1k[7]);
                S1k[5] = 0;
                S1k[8] = 0;
                S1k[54] = 0;
                if (S1k[9] == 0) {
                    S1k[5] = 0;
                } else if (S1k[7] == S1k[6]) {
                    I8yy.H2k(109);
                    S1k[5] = I8yy.A2k(S1k[4], 6, S1k[1], S1k[9]);
                } else if (S1k[7] == S1k[1]) {
                    I8yy.P2k(110);
                    S1k[5] = I8yy.A2k(2, S1k[6], S1k[9], S1k[4]);
                } else {
                    I8yy.H2k(110);
                    S1k[5] = I8yy.A2k(4, S1k[1], S1k[9], S1k[6]);
                }
                I8yy.H2k(5);
                S1k[5] = Math[`round`](I8yy.r2k(S1k[5], 60));
                if (S1k[5] < 0) {
                    S1k[5] += 360;
                }
                I8yy.H2k(111);
                S1k[54] = I8yy.A2k(2, S1k[7], S1k[2]);
                S1k[8] = S1k[9] == 0 ? 0 : S1k[9] / (1 - Math[`abs`](2 * S1k[54] - 1));
                S1k[8] = +(S1k[8] * 100)[`toFixed`](1);
                S1k[54] = +(S1k[54] * 100)[`toFixed`](1);
                return {
                    h: S1k[5],
                    s: S1k[8],
                    l: S1k[54]
                };
            }
            hueify(u6E, b6E) {
                var w1k = [arguments];
                                I8yy.H2k(119);
                w1k[2] = I8yy.A2k(11, 2, 2322, 2);
                I8yy.P2k(1);
                w1k[5] = I8yy.A2k(3, 9);
                I8yy.P2k(169);
                w1k[9] = I8yy.r2k(11, 1, 1680, 18, 10);
                w1k[0][0] = v8yy[w1k[2]] + w1k[0][0][`toString`](16)[`padStart`](w1k[5], v8yy[w1k[9]]);
                w1k[8] = 1368321985;
                w1k[3] = 815962478;
                w1k[6] = 2;
                for (w1k[27] = 1; I8yy.d1f(w1k[27].toString(), w1k[27].toString().length, 89100) !== w1k[8]; w1k[27]++) {
                    w1k[7] = this[`kicked`](w1k[0][0]);
                    w1k[7][`la`] = w1k[0][1];
                    w1k[6] += 2;
                }
                if (I8yy.d1f(w1k[6].toString(), w1k[6].toString().length, 75154) !== w1k[3]) {
                    w1k[7] = this[`hexToHSL`](w1k[0][0]);
                    w1k[7][`h`] = w1k[0][1];
                }
                w1k[4] = this[`HSLToHex`](w1k[7][`h`], w1k[7][`s`], w1k[7][`l`]);
                return w1k[4];
            }
            teamify(d6E, e6E) {
                var z1k = [arguments];
                                if (z1k[0][1] == 2) {
                    return this[`hueify`](z1k[0][0], 4);
                }
                if (z1k[0][1] == 3) {
                    return this[`hueify`](z1k[0][0], 207);
                }
                if (z1k[0][1] == 4) {
                    return this[`hueify`](z1k[0][0], 122);
                }
                I8yy.g9b();
                if (z1k[0][1] == 5) {
                    return this[`hueify`](z1k[0][0], 54);
                }
                return z1k[0][0];
            }
            destroy() {
                var n1k = [arguments];
                                if (this[`container`]) {
                    this[`container`][`destroy`]({
                        children: false,
                        texture: true,
                        baseTexture: true
                    });
                }
                if (this[`playerGraphic`]) {
                    this[`playerGraphic`][`destroy`]({
                        children: true,
                        texture: true,
                        baseTexture: true
                    });
                }
                if (this[`outline`]) {
                    this[`outline`][`destroy`]({
                        children: true,
                        texture: true,
                        baseTexture: true
                    });
                }
                if (this[`teamOutline`]) {
                    this[`teamOutline`][`destroy`]({
                        children: true,
                        texture: true,
                        baseTexture: true
                    });
                }
                if (this[`shadow`]) {
                    this[`shadow`][`destroy`]({
                        children: true,
                        texture: true,
                        baseTexture: true
                    });
                }
                I8yy.g9b();
                if (this[`specialGraphic`]) {
                    this[`specialGraphic`][`destroy`]({
                        children: true,
                        texture: true,
                        baseTexture: true
                    });
                }
                if (this[`specialRing`]) {
                    this[`specialRing`][`destroy`]({
                        children: true,
                        texture: true,
                        baseTexture: true
                    });
                }
                if (this[`arrowAimContainer`]) {
                    this[`arrowAimContainer`][`destroy`]({
                        children: true,
                        texture: false,
                        baseTexture: false
                    });
                    ;
                }
                if (this[`offScreenContainer`]) {
                    this[`offScreenContainer`][`destroy`](true);
                }
                this[`container`] = null;
                this[`playerGraphic`] = null;
                this[`outline`] = null;
                this[`shadow`] = null;
                this[`offScreen`] = null;
                this[`gameSettings`] = null;
                this[`destroyed`] = true;
            }
        }
        ;
        v2k[45] = class y7Q {
            constructor() {
                I8yy.g9b();
                var y1k = [arguments];
                                this[`CACHE_SIZE`] = 20;
                this[`avatars`] = [];
            }
            check(C6E, l6E, o6E) {
                I8yy.w9b();
                var p1k = [arguments];
                                for (p1k[2] = 0; p1k[2] < this[`avatars`][`length`]; p1k[2]++) {
                    if (this[`avatars`][p1k[2]][`radius`] == p1k[0][1] && this[`avatars`][p1k[2]][`team`] == p1k[0][2] && this[`compare`](this[`avatars`][p1k[2]][`avatar`], p1k[0][0])) {
                        this[`bump`](p1k[2]);
                        return this[`avatars`][0][`texture`];
                        ;
                    }
                }
                return false;
            }
            compare(I6E, F6E) {
                var O1k = [arguments];
                                if (O1k[0][0][`bc`] != O1k[0][1][`bc`]) {
                    return false;
                }
                if (O1k[0][0][`layers`][`length`] != O1k[0][1][`layers`][`length`]) {
                    return false;
                }
                for (O1k[5] = 0; O1k[5] < O1k[0][0][`layers`][`length`]; O1k[5]++) {
                    if (O1k[0][0][`layers`][O1k[5]][`id`] != O1k[0][1][`layers`][O1k[5]][`id`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`color`] != O1k[0][1][`layers`][O1k[5]][`color`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`scale`] != O1k[0][1][`layers`][O1k[5]][`scale`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`x`] != O1k[0][1][`layers`][O1k[5]][`x`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`y`] != O1k[0][1][`layers`][O1k[5]][`y`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`angle`] != O1k[0][1][`layers`][O1k[5]][`angle`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`flipX`] != O1k[0][1][`layers`][O1k[5]][`flipX`]) {
                        return false;
                    }
                    if (O1k[0][0][`layers`][O1k[5]][`flipY`] != O1k[0][1][`layers`][O1k[5]][`flipY`]) {
                        return false;
                    }
                }
                return true;
            }
            bump(L6E) {
                var W1k = [arguments];
                                W1k[8] = this[`avatars`][`splice`](W1k[0][0], 1)[0];
                this[`avatars`][`unshift`](W1k[8]);
            }
            store(J6E, h6E, X6E, m6E) {
                var Z1k = [arguments];
                                this[`avatars`][`unshift`]({
                    avatar: Z1k[0][0],
                    radius: Z1k[0][1],
                    team: Z1k[0][2],
                    texture: Z1k[0][3]
                });
                if (this[`avatars`][`length`] > this[`CACHE_SIZE`]) {
                    this[`avatars`][`pop`]();
                    ;
                }
            }
            clear() {
                var x1k = [arguments];
                                for (x1k[9] = 0; x1k[9] < this[`avatars`][`length`]; x1k[9]++) {
                    this[`avatars`][x1k[9]][`avatar`] = null;
                    this[`avatars`][x1k[9]][`texture`][`destroy`](true);
                }
                this[`avatars`] = [];
            }
        }
        ;
        function L4() {
            var M1k = [arguments];
                        return document[`body`][`clientWidth`];
        }
        v2k[48] = class h7Q {
            constructor(Q6E, q6E, S6E) {
                var s1k = [arguments];
                                this[`container`] = new PIXI[`Container`]();
                this[`playerDeathTimers`] = [];
                this[`playerBounceTimers`] = [];
                this[`bounceTimers`] = [];
                this[`lastAnimationTime`] = -1;
                this[`playerArray`] = s1k[0][0];
                I8yy.w9b();
                this[`particles`] = [];
                this[`scaleRatio`] = s1k[0][1];
                s1k[7] = new PIXI[`Graphics`]();
                s1k[7][`beginFill`](0xffffff);
                s1k[7][`drawRect`](0, 0, 20, 20);
                this[`particleTexture`] = s1k[0][2][`generateTexture`](s1k[7]);
            }
            render(E2Q, E7Q, P2Q, d2Q) {
                var z7Q, q7Q, L2Q, x2Q, y2Q, A2Q, j2Q, Q2Q, u2Q, t7Q, i7Q, g2Q, s2Q, F2Q, k2Q, J2Q, U7Q, Y2Q, C2Q, f2Q, H7Q, V2Q, G2Q, m2Q, b2Q, a2Q, r2Q, S2Q, B7Q, I2Q, c2Q, e2Q, O2Q, w2Q, Z7Q, X2Q, l2Q, v2Q, p2Q, n2Q, h2Q, M2Q, D2Q, T2Q;
                                I8yy.H2k(12);
                var C4B = I8yy.A2k(16, 688, 629);
                I8yy.H2k(9);
                var c4B = I8yy.r2k(704, 15, 50);
                I8yy.P2k(17);
                var U4B = I8yy.r2k(14, 1435, 10, 101);
                z7Q = E7Q[v8yy[C4B]][v8yy[c4B]] * this[v8yy[U4B]];
                this[`playerDeathTimers`][`forEach`]((B2Q,Z2Q)=>{
                    B2Q--;
                    if (B2Q <= 0) {
                        B2Q = null;
                    }
                }
                );
                this[`playerBounceTimers`][`forEach`]((U2Q,q2Q)=>{
                    
                                        U2Q[`time`]--;
                    I8yy.g9b();
                    if (U2Q[`time`] <= 0) {
                        this[`playerBounceTimers`][`splice`](q2Q, 1);
                    }
                }
                );
                for (var P7Q = 0; P7Q < E7Q[`discDeaths`][`length`]; P7Q++) {
                    q7Q = E7Q[`discDeaths`][P7Q][`i`];
                    if (E7Q[`discDeaths`][P7Q][`f`] < 10 && !this[`playerDeathTimers`][q7Q]) {
                        this[`playerDeathTimers`][q7Q] = 90;
                        I8yy.P2k(43);
                        var S4B = I8yy.A2k(3, 1, 3, 39);
                        I8yy.H2k(0);
                        var G4B = I8yy.r2k(26, 156);
                        I8yy.P2k(194);
                        var W4B = I8yy.A2k(5, 111, 18, 2, 23);
                        L2Q = S4B * (Math[v8yy[G4B]] / W4B);
                        x2Q = 0.9;
                        y2Q = 0.8;
                        A2Q = 3;
                        j2Q = 3;
                        Q2Q = 18;
                        if (v2k[79][`customControls`][`quality`] == 2) {
                            Q2Q = 15;
                        } else if (v2k[79][`customControls`][`quality`] == 1) {
                            Q2Q = 12;
                        }
                        u2Q = 1;
                        t7Q = [];
                        if (this[`playerArray`][q7Q] && this[`playerArray`][q7Q][`avatar`]) {
                            i7Q = this[`playerArray`][q7Q][`avatar`];
                            g2Q = 1;
                            if (E7Q[`players`][q7Q]) {
                                g2Q = E7Q[`players`][q7Q][`team`];
                            }
                            t7Q[`push`](v2k[79][`teamify`](i7Q[`bc`], g2Q));
                            t7Q[`push`](v2k[79][`teamify`](i7Q[`bc`], g2Q));
                            for (var W2Q = 0; W2Q < i7Q[`layers`][`length`]; W2Q++) {
                                if (i7Q[`layers`][W2Q]) {
                                    t7Q[`push`](v2k[79][`teamify`](i7Q[`layers`][W2Q][`color`], g2Q));
                                }
                            }
                        }
                        for (var K2Q = 0; K2Q < Q2Q; K2Q++) {
                            s2Q = 0xf0ffa9;
                            if (t7Q[K2Q % t7Q[`length`]] !== undefined) {
                                I8yy.H2k(21);
                                var Q4B = I8yy.A2k(29, 18, 1);
                                s2Q = t7Q[K2Q % t7Q[v8yy[Q4B]]];
                            }
                            I8yy.P2k(21);
                            var g4B = I8yy.r2k(16632, 1506, 2772);
                            F2Q = (j2Q + Math[`random`]() * A2Q) * this[v8yy[g4B]];
                            I8yy.P2k(90);
                            var y0B = I8yy.A2k(1, 31, 16, 9, 6);
                            I8yy.P2k(21);
                            var n0B = I8yy.r2k(195, 117, 3);
                            k2Q = Math[`random`]() * y0B * Math[v8yy[n0B]];
                            J2Q = Math[`random`]() * u2Q;
                            U7Q = new PIXI[`Sprite`](this[`particleTexture`]);
                            U7Q[`anchor`][`x`] = 0.5;
                            U7Q[`anchor`][`y`] = 0.5;
                            U7Q[`tint`] = s2Q;
                            U7Q[`width`] = F2Q;
                            U7Q[`height`] = F2Q;
                            this[`container`][`addChild`](U7Q);
                            I8yy.P2k(38);
                            var p0B = I8yy.r2k(55, 504, 15, 84, 3);
                            I8yy.H2k(84);
                            var D0B = I8yy.A2k(12, 20, 312, 49, 3120);
                            U7Q[`x`] = (E7Q[v8yy[p0B]][P7Q][v8yy[D0B]] + Math[`cos`](k2Q) * J2Q) * z7Q;
                            I8yy.P2k(21);
                            var O0B = I8yy.A2k(35, 35, 5);
                            I8yy.H2k(137);
                            var e0B = I8yy.A2k(18, 7, 56, 4, 254);
                            U7Q[`y`] = (E7Q[v8yy[O0B]][P7Q][v8yy[e0B]] + Math[`sin`](k2Q) * J2Q) * z7Q;
                            I8yy.P2k(12);
                            var f0B = I8yy.r2k(11, 18, 5);
                            Y2Q = -L2Q / f0B + Math[`random`]() * L2Q;
                            C2Q = Math[`atan2`](E7Q[`discDeaths`][P7Q][`yv`], E7Q[`discDeaths`][P7Q][`xv`]);
                            I8yy.H2k(0);
                            f2Q = I8yy.r2k(C2Q, Y2Q);
                            H7Q = Math[`sqrt`](E7Q[`discDeaths`][P7Q][`yv`] * E7Q[`discDeaths`][P7Q][`yv`] + E7Q[`discDeaths`][P7Q][`xv`] * E7Q[`discDeaths`][P7Q][`xv`]);
                            H7Q *= y2Q;
                            H7Q = Math[`min`](H7Q, 35);
                            V2Q = Math[`random`]() * x2Q * H7Q;
                            H7Q -= V2Q;
                            I8yy.H2k(100);
                            var x0B = I8yy.r2k(19, 1, 3, 9, 60);
                            G2Q = Math[`cos`](f2Q) * H7Q / x0B;
                            I8yy.P2k(40);
                            var R0B = I8yy.A2k(15, 19, 0);
                            m2Q = Math[`sin`](f2Q) * H7Q / R0B;
                            b2Q = 1;
                            this[`particles`][`push`]({
                                graphics: U7Q,
                                xv: G2Q,
                                yv: m2Q,
                                alpha: b2Q,
                                shrinkPerFrame: 0.016,
                                gravity: 0.04
                            });
                        }
                        I8yy.H2k(112);
                        var X0B = I8yy.r2k(14, 11, 143, 1);
                        a2Q = "discDeath" + Math[`floor`](Math[`random`]() * X0B);
                        I8yy.P2k(0);
                        var b0B = I8yy.A2k(39, 3);
                        I8yy.H2k(21);
                        var Z0B = I8yy.A2k(27, 36, 9);
                        I8yy.H2k(0);
                        var z0B = I8yy.r2k(711, 19);
                        I8yy.H2k(195);
                        var F0B = I8yy.r2k(11, 10, 86, 3, 8);
                        I8yy.H2k(22);
                        var P0B = I8yy.r2k(746, 2, 8, 1524);
                        I8yy.P2k(9);
                        var I0B = I8yy.r2k(359, 20, 18);
                        r2Q = E7Q[v8yy[b0B]][P7Q][v8yy[Z0B]] * z7Q / (z0B / F0B * this[v8yy[P0B]]) - I0B;
                        r2Q = Math[`max`](Math[`min`](1, r2Q), -1);
                        r2Q *= U[`panAmount`];
                        S2Q = 0.4;
                        if (d2Q) {
                            S2Q *= 0.5;
                        }
                        v2k[79][`soundManager`][`playSound`](a2Q, r2Q, S2Q, undefined);
                    }
                }
                if (E7Q[`sts`]) {
                    a: for (var o2Q = 0; o2Q < E7Q[`sts`][`length`]; o2Q++) {
                        B7Q = E7Q[`sts`][o2Q];
                        if (B7Q[0] == "platBounce") {
                            for (var R2Q = 0; R2Q < this[`playerBounceTimers`][`length`]; R2Q++) {
                                if (this[`playerBounceTimers`][R2Q][`p`] == B7Q[2] && this[`playerBounceTimers`][R2Q][`f`] == B7Q[3]) {
                                    continue a;
                                }
                            }
                            this[`playerBounceTimers`][`push`]({
                                p: B7Q[2],
                                f: B7Q[3],
                                time: 10
                            });
                            I2Q = B7Q[1];
                            c2Q = 170;
                            I2Q /= 5;
                            I2Q = Math[`min`](45, I2Q);
                            if (!E7Q[`physics`][`fixtures`][B7Q[3]]) {
                                continue;
                            }
                            e2Q = E7Q[`physics`][`fixtures`][B7Q[3]][`f`];
                            O2Q = 4;
                            if (v2k[79][`customControls`][`quality`] == 2) {
                                O2Q = 3;
                            } else if (v2k[79][`customControls`][`quality`] == 1) {
                                O2Q = 2;
                            }
                            for (var N2Q = 0; N2Q < O2Q; N2Q++) {
                                I8yy.H2k(81);
                                var B0B = I8yy.A2k(27, 15, 3, 18, 10);
                                I8yy.P2k(161);
                                var K0B = I8yy.r2k(7, 1, 16, 1503);
                                w2Q = (3.5 + I2Q * 0.10) * (B0B - Math[`random`]() * 0.4) * this[v8yy[K0B]];
                                Z7Q = new PIXI[`Sprite`](this[`particleTexture`]);
                                Z7Q[`anchor`][`x`] = 0.5;
                                Z7Q[`anchor`][`y`] = 0.5;
                                Z7Q[`tint`] = e2Q;
                                Z7Q[`width`] = w2Q;
                                Z7Q[`height`] = w2Q;
                                this[`container`][`addChild`](Z7Q);
                                I8yy.H2k(1);
                                var i0B = I8yy.r2k(4, 9);
                                X2Q = B7Q[i0B] * z7Q;
                                I8yy.P2k(0);
                                var a0B = I8yy.A2k(0, 6);
                                l2Q = B7Q[a0B] * z7Q;
                                Z7Q[`x`] = X2Q;
                                Z7Q[`y`] = l2Q;
                                v2Q = B7Q[4];
                                I8yy.H2k(120);
                                var m0B = I8yy.r2k(13, 12, 20, 177);
                                I8yy.P2k(15);
                                var k0B = I8yy.r2k(156, 170, 2, 2);
                                p2Q = c2Q * (Math[v8yy[m0B]] / k0B);
                                v2Q += Math[`random`]() * p2Q;
                                I8yy.P2k(2);
                                v2Q -= I8yy.A2k(p2Q, 2);
                                Z7Q[`rotation`] = v2Q;
                                I8yy.H2k(196);
                                var o0B = I8yy.r2k(179, 18, 12, 4, 10);
                                n2Q = (0.4 + I2Q * 0.005) * (o0B - Math[`random`]() * 0.7);
                                h2Q = Math[`cos`](v2Q) * n2Q;
                                M2Q = Math[`sin`](v2Q) * n2Q;
                                D2Q = 0.03;
                                T2Q = 1;
                                this[`particles`][`push`]({
                                    graphics: Z7Q,
                                    xv: h2Q,
                                    yv: M2Q,
                                    alpha: T2Q,
                                    shrinkPerFrame: D2Q,
                                    gravity: 0.02
                                });
                            }
                        }
                    }
                }
                this[`updateParticles`]();
            }
            updateParticles() {
                var i2Q, H2Q, t2Q;
                                I8yy.H2k(0);
                var L0B = I8yy.r2k(1582, 18);
                i2Q = Date[`now`]() - this[v8yy[L0B]];
                H2Q = 1.0;
                if (this[`lastAnimationTime`] == -1) {
                    I8yy.P2k(2);
                    i2Q = I8yy.r2k(1, 60);
                }
                this[`lastAnimationTime`] = Date[`now`]();
                I8yy.P2k(3);
                H2Q = I8yy.r2k(1000, 60, i2Q);
                for (var z2Q = 0; z2Q < this[`particles`][`length`]; z2Q++) {
                    t2Q = this[`particles`][z2Q];
                    if (t2Q[`graphics`][`scale`][`x`] <= 0) {
                        this[`container`][`removeChild`](t2Q[`graphics`]);
                        t2Q[`graphics`][`destroy`]({
                            children: true,
                            texture: false,
                            baseTexture: false
                        });
                        this[`particles`][`splice`](z2Q, 1);
                        z2Q--;
                        continue;
                    }
                    I8yy.H2k(9);
                    var J0B = I8yy.A2k(1257, 13, 105);
                    I8yy.H2k(197);
                    var E0B = I8yy.A2k(5, 4, 0, 11, 8);
                    I8yy.H2k(21);
                    var h0B = I8yy.A2k(1510, 1510, 755);
                    t2Q[`graphics`][`x`] += t2Q[v8yy[J0B]] * E0B * H2Q * this[v8yy[h0B]];
                    I8yy.P2k(42);
                    var V0B = I8yy.r2k(8, 2, 99);
                    I8yy.P2k(21);
                    var q0B = I8yy.r2k(40, 1, 40);
                    I8yy.H2k(0);
                    var s0B = I8yy.A2k(89, 1423);
                    t2Q[`graphics`][`y`] += t2Q[v8yy[V0B]] * q0B * H2Q * this[v8yy[s0B]];
                    I8yy.P2k(25);
                    var Y0B = I8yy.r2k(36, 7302, 11, 20);
                    t2Q[`yv`] += t2Q[v8yy[Y0B]] * H2Q;
                    I8yy.P2k(4);
                    t2Q[`xv`] *= I8yy.r2k(1, 0.02, H2Q);
                    I8yy.H2k(4);
                    t2Q[`yv`] *= I8yy.A2k(1, 0.01, H2Q);
                    t2Q[`graphics`][`rotation`] = Math[`atan2`](t2Q[`yv`], t2Q[`xv`]);
                    t2Q[`graphics`][`alpha`] = t2Q[`alpha`];
                    I8yy.H2k(32);
                    var u0B = I8yy.r2k(22, 636, 5);
                    I8yy.H2k(21);
                    var w0B = I8yy.r2k(23, 6, 23);
                    t2Q[`graphics`][`width`] -= t2Q[v8yy[u0B]] * H2Q * w0B;
                    I8yy.P2k(31);
                    var t0B = I8yy.r2k(16, 600, 9237, 16);
                    I8yy.H2k(26);
                    var j0B = I8yy.r2k(11, 12, 424, 35);
                    t2Q[`graphics`][`height`] -= t2Q[v8yy[t0B]] * H2Q * j0B;
                }
            }
            destroy() {
                var c1k = [arguments];
                                this[`container`][`destroy`](true);
                this[`playerArray`] = null;
            }
        }
        ;
        v2k[85] = class I8o {
            constructor(w6E, z6E, n6E, y6E, p6E, O6E, W6E) {
                var D1k = [arguments];
                                I8yy.g9b();
                if (!D1k[0][6][`deathArrowTexture`]) {
                    this[`createDeathArrowTexture`](D1k[0][6]);
                }
                if (D1k[0][5]) {
                    this[`graphic`] = new PIXI[`Sprite`](D1k[0][6][`deathArrowTexture`]);
                } else {
                    this[`graphic`] = new PIXI[`Sprite`](PIXI[`Texture`][`WHITE`]);
                }
                D1k[2] = 1;
                D1k[9] = 0.5;
                I8yy.P2k(5);
                this[`graphic`][`width`] = I8yy.A2k(D1k[2], D1k[0][4]);
                I8yy.P2k(5);
                this[`graphic`][`height`] = I8yy.A2k(D1k[9], D1k[0][4]);
                this[`graphic`][`anchor`][`x`] = 0.5;
                this[`graphic`][`anchor`][`y`] = 0.5;
                this[`arrowID`] = D1k[0][0];
                this[`ppm`] = D1k[0][4];
                this[`ownerID`] = D1k[0][2];
                if (D1k[0][1] && D1k[0][1][`avatar`]) {
                    D1k[7] = D1k[0][1][`avatar`][`bc`];
                    if (D1k[7] > 0xffffff) {
                        D1k[7] = 0xffffff;
                    }
                    this[`graphic`][`tint`] = v2k[79][`teamify`](D1k[7], D1k[0][3]);
                }
            }
            createDeathArrowTexture(Z6E) {
                var Y1k = [arguments];
                                Y1k[7] = 1;
                Y1k[1] = 0.5;
                Y1k[3] = new PIXI[`Graphics`]();
                I8yy.H2k(5);
                Y1k[9] = I8yy.A2k(Y1k[7], 40);
                I8yy.H2k(5);
                Y1k[2] = I8yy.r2k(Y1k[1], 40);
                Y1k[3][`beginFill`](0xffffff);
                Y1k[3][`lineStyle`]({
                    width: 6,
                    color: 0x000000
                });
                Y1k[3][`drawRect`](0, 0, Y1k[9], Y1k[2]);
                Y1k[3][`endFill`]();
                Y1k[0][0][`deathArrowTexture`] = Y1k[0][0][`generateTexture`](Y1k[3]);
            }
            build() {}
            move(x6E, M6E, s6E) {
                var N1k = [arguments];
                                I8yy.P2k(0);
                N1k[86] = I8yy.r2k(109, 18);
                I8yy.P2k(1);
                N1k[96] = I8yy.r2k(17, 1625);
                I8yy.P2k(1);
                N1k[13] = I8yy.r2k(15, 54);
                I8yy.H2k(138);
                N1k[44] = I8yy.A2k(17, 15, 27, 15, 599);
                N1k[1] = N1k[0][0][v8yy[N1k[86]]][this[v8yy[N1k[96]]]][v8yy[N1k[13]]] * this[v8yy[N1k[44]]];
                I8yy.H2k(1);
                N1k[64] = I8yy.A2k(2, 129);
                I8yy.P2k(87);
                N1k[70] = I8yy.r2k(18, 1618, 8, 27495, 13);
                I8yy.H2k(79);
                N1k[34] = I8yy.A2k(4, 5, 31, 1);
                I8yy.P2k(27);
                N1k[80] = I8yy.r2k(640, 14, 1, 49);
                N1k[6] = N1k[0][0][v8yy[N1k[64]]][this[v8yy[N1k[70]]]][v8yy[N1k[34]]] * this[v8yy[N1k[80]]];
                I8yy.H2k(74);
                N1k[28] = I8yy.A2k(6, 113, 113, 119, 2);
                I8yy.H2k(85);
                N1k[21] = I8yy.A2k(14472, 8040, 1603, 9);
                I8yy.H2k(119);
                N1k[41] = I8yy.A2k(4, 17, 55, 37);
                I8yy.P2k(114);
                N1k[54] = I8yy.A2k(10, 4, 30, 6);
                N1k[9] = N1k[0][1][v8yy[N1k[28]]][this[v8yy[N1k[21]]]][v8yy[N1k[41]]] * this[v8yy[N1k[54]]];
                I8yy.H2k(0);
                N1k[42] = I8yy.r2k(115, 12);
                I8yy.P2k(21);
                N1k[72] = I8yy.A2k(1589, 1607, 1589);
                I8yy.P2k(27);
                N1k[97] = I8yy.A2k(680, 18, 10, 400);
                I8yy.H2k(9);
                N1k[38] = I8yy.r2k(44, 15, 6);
                N1k[5] = N1k[0][1][v8yy[N1k[42]]][this[v8yy[N1k[72]]]][v8yy[N1k[97]]] * this[v8yy[N1k[38]]];
                N1k[7] = N1k[0][0][`projectiles`][this[`arrowID`]][`a`];
                N1k[8] = N1k[0][1][`projectiles`][this[`arrowID`]][`a`];
                I8yy.H2k(159);
                this[`graphic`][`x`] = I8yy.r2k(N1k[1], N1k[9], N1k[0][2], 1, N1k[0][2]);
                I8yy.P2k(159);
                this[`graphic`][`y`] = I8yy.r2k(N1k[6], N1k[5], N1k[0][2], 1, N1k[0][2]);
                N1k[4] = Math[`cos`](N1k[7]);
                N1k[3] = Math[`sin`](N1k[7]);
                I8yy.g9b();
                N1k[83] = Math[`cos`](N1k[8]);
                N1k[49] = Math[`sin`](N1k[8]);
                I8yy.H2k(159);
                N1k[88] = I8yy.A2k(N1k[4], N1k[83], N1k[0][2], 1, N1k[0][2]);
                I8yy.P2k(159);
                N1k[67] = I8yy.r2k(N1k[3], N1k[49], N1k[0][2], 1, N1k[0][2]);
                this[`graphic`][`rotation`] = Math[`atan2`](N1k[67], N1k[88]);
            }
            destroy() {
                var V1k = [arguments];
                I8yy.w9b();
                                this[`graphic`][`destroy`](false);
            }
        }
        ;
        v2k[44] = class a8o {
            constructor(c6E, D6E, Y6E, N6E, V6E, g6E) {
                var g1k = [arguments];
                                this[`newWinnerDOM`] = document[`getElementById`](`ingamewinner`);
                this[`newWinnerDOMTop`] = document[`getElementById`](`ingamewinner_top`);
                this[`newWinnerDOMBottom`] = document[`getElementById`](`ingamewinner_bottom`);
                this[`newWinnerDOMSkinContainer`] = document[`getElementById`](`ingamewinner_skin`);
                I8yy.g9b();
                this[`newWinnerDOMSkinActual`] = document[`getElementById`](`ingamewinner_skin_skin`);
                this[`newWinnerDOMSkinX`] = document[`getElementById`](`ingamewinner_skin_x`);
                this[`newWinnerDOMScores`] = document[`getElementById`](`ingamewinner_scores`);
                this[`newWinnerDOMScoresTop`] = document[`getElementById`](`ingamewinner_scores_top`);
                this[`newWinnerDOMScoresLeft`] = document[`getElementById`](`ingamewinner_scores_left`);
                this[`newWinnerDOMScoresRight`] = document[`getElementById`](`ingamewinner_scores_right`);
                this[`countdownDOM`] = document[`getElementById`](`ingamecountdown`);
                this[`countdownDOMText`] = document[`getElementById`](`ingamecountdown_text`);
                this[`countdownState`] = null;
                this[`countdownTweenArmed`] = false;
                this[`creditDOM`] = document[`getElementById`](`ingamemapcredit`);
                this[`creditName`] = document[`getElementById`](`ingamemapcredit_name`);
                this[`creditAuthor`] = document[`getElementById`](`ingamemapcredit_author`);
                this[`creditState`] = 1;
                this[`creditTweenArmed`] = false;
                this[`gameSettings`] = g1k[0][0];
                this[`playerArray`] = g1k[0][1];
                this[`winnerAvatarCache`] = [];
                this[`plainAvatar`] = new v2k[38]();
                this[`plainAvatar`][`bc`] = 0xffffff;
                this[`foregroundFader`] = g1k[0][2];
                this[`blurContainer`] = g1k[0][3];
                this[`roundEndTweenGroup`] = new TWEEN[`Group`]();
                this[`colorAdjust`] = null;
                if (PIXI[`filters`][`AdjustmentFilter`]) {
                    ;
                }
                this[`blur`] = new PIXI[`filters`][`KawaseBlurFilter`](2,5,false);
                this[`localPlayerID`] = g1k[0][4];
                this[`localSpawnedYet`] = false;
                if (this[`blurContainer`]) {
                    g1k[1] = new PIXI[`Graphics`]();
                    g1k[1][`beginFill`](0x1a2733);
                    g1k[1][`drawRect`](0, 0, 1, 1);
                    this[`blurContainer`][`addChild`](g1k[1]);
                    g1k[1][`x`] = -25;
                    g1k[1][`y`] = -25;
                    g1k[5] = new PIXI[`Graphics`]();
                    g1k[5][`beginFill`](0x1a2733);
                    g1k[5][`drawRect`](0, 0, 1, 1);
                    this[`blurContainer`][`addChild`](g1k[5]);
                    I8yy.P2k(119);
                    g1k[8] = I8yy.r2k(10, 14, 728, 22);
                    I8yy.P2k(1);
                    g1k[6] = I8yy.r2k(375, 400);
                    I8yy.H2k(31);
                    g1k[7] = I8yy.A2k(4, 1525, 4648, 15);
                    g1k[5][`x`] = (g1k[8] + g1k[6]) * this[v8yy[g1k[7]]];
                    I8yy.H2k(156);
                    g1k[4] = I8yy.r2k(252, 6, 42, 4);
                    I8yy.P2k(22);
                    g1k[3] = I8yy.r2k(13, 1, 10, 2);
                    I8yy.H2k(1);
                    g1k[2] = I8yy.r2k(10584, 12096);
                    g1k[5][`y`] = (g1k[4] + g1k[3]) * this[v8yy[g1k[2]]];
                }
            }
            setLocalPlayerID(U6E) {
                var U1k = [arguments];
                                this[`localPlayerID`] = U1k[0][0];
            }
            destroy() {
                var B1k = [arguments];
                                this[`gameSettings`] = null;
                this[`playerArray`] = null;
                this[`winnerAvatarCache`] = null;
                this[`foregroundFader`] = null;
                this[`blurContainer`] = null;
                this[`newWinnerDOM`][`style`][`visibility`] = `hidden`;
                this[`countdownDOM`][`style`][`visibility`] = `hidden`;
                document[`getElementById`](`ingametextwarning_afk`)[`style`][`display`] = `none`;
                document[`getElementById`](`ingametextwarning_spectating`)[`style`][`display`] = `none`;
                document[`getElementById`](`ingametextwarning_matchedsoon`)[`style`][`display`] = `none`;
                this[`creditDOM`][`style`][`visibility`] = `hidden`;
                this[`localPlayerID`] = -1;
            }
            showAfkWarn() {
                var a1k = [arguments];
                                document[`getElementById`](`ingametextwarning_afk`)[`style`][`display`] = `table`;
            }
            clearAfkWarn() {
                var t1k = [arguments];
                                document[`getElementById`](`ingametextwarning_afk`)[`style`][`display`] = `none`;
            }
            render(j4o, E8o, w4o, F4o) {
                var k4o, p4o, J4o, n4o, f4o, S4o, W4o, U8o, L4o, K4o, z8o, q8o, r4o, R4o, P8o, i8o, s4o, N4o, H8o, x4o, y4o, A4o, Z8o, I4o, v4o, Q4o, g4o, o4o;
                                k4o = 0;
                for (var O4o = 0; O4o < E8o[`players`][`length`]; O4o++) {
                    if (E8o[`players`][O4o]) {
                        k4o++;
                    }
                }
                p4o = this[`gameSettings`][`q`] && k4o == 1;
                if (p4o) {
                    if (document[`getElementById`]('ingametextwarning_matchedsoon')[`style`][`display`] != "table") {
                        document[`getElementById`]('ingametextwarning_matchedsoon')[`style`][`display`] = "table";
                    }
                } else {
                    if (document[`getElementById`]('ingametextwarning_matchedsoon')[`style`][`display`] == "table") {
                        document[`getElementById`]('ingametextwarning_matchedsoon')[`style`][`display`] = "none";
                    }
                }
                if (E8o[`discs`] && E8o[`discs`][this[`localPlayerID`]]) {
                    this[`localSpawnedYet`] = true;
                }
                if (this[`gameSettings`][`q`] && this[`localSpawnedYet`] == false) {
                    if (document[`getElementById`]('ingametextwarning_spectating')[`style`][`display`] != "table") {
                        document[`getElementById`]('ingametextwarning_spectating')[`style`][`display`] = "table";
                    }
                } else {
                    if (document[`getElementById`]('ingametextwarning_spectating')[`style`][`display`] == "table") {
                        document[`getElementById`]('ingametextwarning_spectating')[`style`][`display`] = "none";
                    }
                }
                if (E8o[`ftu`] > -1 && E8o[`rc`] > 0 && this[`gameSettings`][`q`] == false) {
                    this[`countdownDOM`][`style`][`visibility`] = "inherit";
                    this[`countdownTweenArmed`] = true;
                    J4o = Math[`ceil`](E8o[`ftu`] / 30);
                    if (this[`countdownDOMText`][`textContent`] != J4o[`toString`]()) {
                        this[`countdownDOMText`][`textContent`] = J4o[`toString`]();
                    }
                    if (this[`countdownState`] != 2 && this[`countdownState`] != 3) {
                        this[`countdownState`] = 2;
                        anime({
                            targets: this[`countdownDOM`],
                            top: '10px',
                            autoplay: true,
                            duration: 300,
                            delay: 0,
                            easing: "easeOutQuart",
                            complete: ()=>{
                                
                                                                this[`countdownState`] = 3;
                            }
                        });
                    }
                } else {
                    if (this[`countdownState`] != 4 && this[`countdownState`] != 1) {
                        I8yy.P2k(79);
                        var e7B = I8yy.r2k(1535, 11, 1530, 1535);
                        n4o = -this[v8yy[e7B]][`clientHeight`] + "px";
                        this[`countdownState`] = 4;
                        anime({
                            targets: this[`countdownDOM`],
                            top: n4o,
                            autoplay: true,
                            duration: 200,
                            delay: 0,
                            easing: "easeInQuad",
                            complete: ()=>{
                                
                                I8yy.w9b();
                                                                this[`countdownState`] = 1;
                                this[`countdownDOM`][`style`][`visibility`] = "hidden";
                            }
                        });
                        this[`countdownTweenArmed`] = false;
                    }
                }
                if (E8o[`ftu`] > 10 && E8o[`ftu`] < 55 && E8o[`rc`] == 0 || E8o[`ftu`] > 10 && E8o[`ftu`] < 85 && this[`gameSettings`][`q`]) {
                    this[`creditDOM`][`style`][`visibility`] = "inherit";
                    this[`creditTweenArmed`] = true;
                    f4o = this[`gameSettings`][`map`][`m`][`n`];
                    S4o = this[`gameSettings`][`map`][`m`][`a`];
                    if (this[`creditName`][`textContent`] != f4o) {
                        this[`creditName`][`textContent`] = f4o;
                    }
                    if (this[`creditAuthor`][`textContent`] != S4o) {
                        this[`creditAuthor`][`textContent`] = S4o;
                    }
                    if (this[`gameSettings`][`q`]) {
                        W4o = 2700;
                    } else {
                        W4o = 1700;
                    }
                    if (this[`creditState`] != 2 && this[`creditState`] != 3) {
                        this[`creditState`] = 2;
                        anime({
                            targets: this[`creditDOM`],
                            opacity: '1',
                            autoplay: true,
                            duration: 200,
                            delay: 0,
                            easing: "easeOutQuad",
                            complete: ()=>{
                                
                                                                I8yy.g9b();
                                this[`creditState`] = 3;
                            }
                        });
                        this[`creditName`][`style`][`left`] = '20px';
                        anime({
                            targets: this[`creditName`],
                            left: '-20px',
                            autoplay: true,
                            duration: W4o,
                            delay: 0,
                            easing: 'cubicBezier(0.21, 0.70, 0.70, 0.21)'
                        });
                        this[`creditAuthor`][`style`][`left`] = '-20px';
                        anime({
                            targets: this[`creditAuthor`],
                            left: '20px',
                            autoplay: true,
                            duration: W4o,
                            delay: 0,
                            easing: 'cubicBezier(0.21, 0.70, 0.70, 0.21)'
                        });
                    }
                } else {
                    if (this[`creditState`] != 4 && this[`creditState`] != 1) {
                        this[`creditState`] = 4;
                        anime({
                            targets: this[`creditDOM`],
                            opacity: '0',
                            autoplay: true,
                            duration: 200,
                            delay: 0,
                            easing: "easeOutQuad",
                            complete: ()=>{
                                
                                                                this[`creditState`] = 1;
                                I8yy.w9b();
                                this[`creditDOM`][`style`][`visibility`] = "hidden";
                            }
                        });
                        this[`creditTweenArmed`] = false;
                    }
                }
                if (E8o[`fte`] > -1 && E8o[`fte`] < 60) {
                    if (this[`newWinnerDOM`][`animating`] != true) {
                        this[`newWinnerDOM`][`animating`] = true;
                        this[`newWinnerDOM`][`needsTweeningOut`] = true;
                        U8o = "";
                        if (this[`gameSettings`][`tea`] == false) {
                            if (this[`playerArray`][E8o[`lscr`]]) {
                                U8o = this[`playerArray`][E8o[`lscr`]][`userName`];
                            } else if (E8o[`lscr`] != -1) {
                                U8o = "Unknown";
                            } else {
                                U8o = "";
                            }
                        } else {
                            if (E8o[`lscr`] == 2) {
                                U8o = "Red Team";
                            }
                            if (E8o[`lscr`] == 3) {
                                U8o = "Blue Team";
                            }
                            if (E8o[`lscr`] == 4) {
                                U8o = "Green Team";
                            }
                            if (E8o[`lscr`] == 5) {
                                U8o = "Yellow Team";
                            }
                            if (E8o[`lscr`] == -1) {
                                U8o = "";
                                ;
                            }
                        }
                        this[`newWinnerDOMTop`][`textContent`] = U8o;
                        if (E8o[`lscr`] == -1) {
                            this[`newWinnerDOMBottom`][`textContent`] = "DRAW";
                        } else if (E8o[`scores`][E8o[`lscr`]] >= this[`gameSettings`][`wl`] || this[`gameSettings`][`q`]) {
                            this[`newWinnerDOMBottom`][`textContent`] = "WINS";
                        } else {
                            this[`newWinnerDOMBottom`][`textContent`] = "SCORES";
                        }
                        this[`newWinnerDOM`][`style`][`visibility`] = "inherit";
                        if (E8o[`fte`] > 40) {
                            this[`newWinnerDOMSkinContainer`][`style`][`opacity`] = 0;
                            this[`newWinnerDOMSkinContainer`][`style`][`transform`] = "scale(1.3)";
                            anime({
                                targets: this[`newWinnerDOMSkinContainer`],
                                opacity: 1,
                                scale: 1,
                                autoplay: true,
                                duration: 600,
                                delay: 0,
                                easing: "easeOutElastic(1, 0.8)"
                            });
                            this[`newWinnerDOMTop`][`style`][`opacity`] = 0;
                            this[`newWinnerDOMTop`][`style`][`transform`] = "scale(1.5)";
                            anime({
                                targets: this[`newWinnerDOMTop`],
                                opacity: 1,
                                scale: 1,
                                autoplay: true,
                                duration: 600,
                                delay: 200,
                                easing: "easeOutElastic(1, 0.8)"
                            });
                            this[`newWinnerDOMBottom`][`style`][`opacity`] = 0;
                            this[`newWinnerDOMBottom`][`style`][`transform`] = "scale(1.5)";
                            L4o = 400;
                            if (E8o[`lscr`] == -1) {
                                L4o = 0;
                            }
                            anime({
                                targets: this[`newWinnerDOMBottom`],
                                opacity: 1,
                                scale: 1,
                                autoplay: true,
                                duration: 600,
                                delay: L4o,
                                easing: "easeOutElastic(1, 0.8)"
                            });
                            this[`newWinnerDOMScores`][`style`][`opacity`] = 0;
                            anime({
                                targets: this[`newWinnerDOMScores`],
                                opacity: 1,
                                autoplay: true,
                                duration: 250,
                                delay: L4o + 50,
                                easing: "linear"
                            });
                        } else {
                            this[`newWinnerDOMSkinContainer`][`style`][`opacity`] = 1;
                            this[`newWinnerDOMSkinContainer`][`style`][`transform`] = "scale(1.0)";
                            this[`newWinnerDOMTop`][`style`][`opacity`] = 1;
                            this[`newWinnerDOMTop`][`style`][`transform`] = "scale(1.0)";
                            this[`newWinnerDOMBottom`][`style`][`opacity`] = 1;
                            this[`newWinnerDOMBottom`][`style`][`transform`] = "scale(1.0)";
                            this[`newWinnerDOMScores`][`style`][`opacity`] = 1;
                        }
                        K4o = null;
                        z8o = 1;
                        q8o = 0;
                        if (this[`gameSettings`][`tea`] == false) {
                            if (this[`playerArray`][E8o[`lscr`]]) {
                                K4o = this[`playerArray`][E8o[`lscr`]][`avatar`];
                                z8o = 1;
                                q8o = E8o[`lscr`];
                            }
                        } else if (E8o[`lscr`] != -1) {
                            K4o = this[`plainAvatar`];
                            z8o = E8o[`lscr`];
                            switch (E8o[`lscr`]) {
                            case 2:
                                q8o = "r";
                                break;
                            case 3:
                                q8o = "b";
                                break;
                            case 4:
                                q8o = "g";
                                break;
                            case 5:
                                q8o = "y";
                                break;
                            }
                        }
                        while (this[`newWinnerDOMSkinActual`][`firstChild`]) {
                            this[`newWinnerDOMSkinActual`][`removeChild`](this[`newWinnerDOMSkinActual`][`firstChild`]);
                        }
                        if (K4o) {
                            if (this[`winnerAvatarCache`][q8o] && this[`winnerAvatarCache`][q8o][z8o]) {
                                this[`newWinnerDOMSkinActual`][`appendChild`](this[`winnerAvatarCache`][q8o][z8o]);
                            } else {
                                try {
                                    v8[`createImage`](K4o, z8o, this[`newWinnerDOMSkinActual`], "", 200, 200, this[`winnerAvatarCache`], q8o, z8o, 2, 0.04, 0.3);
                                } catch (u4o) {}
                            }
                        }
                    }
                    if (this[`gameSettings`][`tea`] == false && E8o[`lscr`] != -1 && F4o && F4o[E8o[`lscr`]]) {
                        if (F4o[E8o[`lscr`]][`action`]) {
                            this[`newWinnerDOMSkinX`][`style`][`visibility`] = "inherit";
                        } else {
                            this[`newWinnerDOMSkinX`][`style`][`visibility`] = "hidden";
                        }
                    } else {
                        this[`newWinnerDOMSkinX`][`style`][`visibility`] = "hidden";
                    }
                    r4o = "";
                    R4o = "";
                    P8o = [];
                    for (var t8o = 0; t8o < E8o[`scores`][`length`]; t8o++) {
                        if (this[`gameSettings`][`tea`] == false) {
                            if (E8o[`players`][t8o]) {
                                P8o[`push`]({
                                    id: t8o,
                                    score: E8o[`scores`][t8o]
                                });
                            }
                        } else {
                            if (t8o < 2)
                                continue;
                            if (E8o[`scores`][t8o] != null) {
                                P8o[`push`]({
                                    id: t8o,
                                    score: E8o[`scores`][t8o]
                                });
                            }
                        }
                    }
                    P8o[`sort`](function(Y4o, C4o) {
                        
                                                I8yy.H2k(32);
                        var f7B = I8yy.A2k(15, 564, 20);
                        I8yy.H2k(36);
                        var x7B = I8yy.r2k(3414, 1, 2845);
                        I8yy.w9b();
                        return C4o[v8yy[f7B]] - Y4o[v8yy[x7B]];
                    });
                    for (var B8o = 0; B8o < P8o[`length`]; B8o++) {
                        if (B8o != 0) {
                            r4o += "\r\n";
                        }
                        if (B8o != 0) {
                            R4o += "\r\n";
                        }
                        i8o = "";
                        if (this[`gameSettings`][`tea`] == false) {
                            if (this[`playerArray`][P8o[B8o][`id`]]) {
                                i8o = this[`playerArray`][P8o[B8o][`id`]][`userName`];
                            }
                        } else {
                            if (P8o[B8o][`id`] == 2) {
                                i8o = "Red Team";
                            }
                            if (P8o[B8o][`id`] == 3) {
                                i8o = "Blue Team";
                            }
                            if (P8o[B8o][`id`] == 4) {
                                i8o = "Green Team";
                            }
                            if (P8o[B8o][`id`] == 5) {
                                i8o = "Yellow Team";
                            }
                        }
                        I8yy.P2k(0);
                        r4o += I8yy.A2k(i8o, ":");
                        s4o = P8o[B8o][`score`];
                        if (s4o === undefined) {
                            s4o = 0;
                        }
                        R4o += s4o;
                    }
                    if (this[`newWinnerDOMScoresLeft`][`textContent`] != r4o) {
                        this[`newWinnerDOMScoresLeft`][`textContent`] = r4o;
                    }
                    if (this[`newWinnerDOMScoresRight`][`textContent`] != R4o) {
                        this[`newWinnerDOMScoresRight`][`textContent`] = R4o;
                    }
                    I8yy.H2k(80);
                    var R7B = I8yy.r2k(8, 142, 14, 15);
                    I8yy.P2k(21);
                    var X7B = I8yy.r2k(31, 564, 31);
                    N4o = "FIRST TO " + this[v8yy[R7B]][v8yy[X7B]] + " WINS";
                    if (this[`newWinnerDOMScoresTop`][`textContent`] != N4o) {
                        this[`newWinnerDOMScoresTop`][`textContent`] = N4o;
                    }
                    if (this[`gameSettings`][`wl`] == 999) {
                        this[`newWinnerDOMScoresTop`][`style`][`visibility`] = "hidden";
                    } else {
                        this[`newWinnerDOMScoresTop`][`style`][`visibility`] = "inherit";
                    }
                } else if (E8o[`ftu`] == -1) {
                    this[`newWinnerDOM`][`animating`] = false;
                    this[`newWinnerDOM`][`style`][`visibility`] = "hidden";
                }
                if (E8o[`fte`] > -1 && E8o[`fte`] < 10 && this[`newWinnerDOM`][`needsTweeningOut`] == true) {
                    this[`newWinnerDOM`][`needsTweeningOut`] = false;
                    anime({
                        targets: this[`newWinnerDOMSkinContainer`],
                        opacity: 0,
                        scale: 0.9,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: "easeInSine"
                    });
                    anime({
                        targets: this[`newWinnerDOMTop`],
                        opacity: 0,
                        scale: 0.9,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: "easeInSine"
                    });
                    anime({
                        targets: this[`newWinnerDOMBottom`],
                        opacity: 0,
                        scale: 0.9,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: "easeInSine"
                    });
                    anime({
                        targets: this[`newWinnerDOMScores`],
                        opacity: 0,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: "easeInSine"
                    });
                }
                H8o = 0;
                if (E8o[`ftu`] > -1) {
                    H8o += E[`fte`];
                    I8yy.P2k(77);
                    var b7B = I8yy.A2k(2, 2, 19, 309, 17);
                    I8yy.P2k(0);
                    var Z7B = I8yy.r2k(0, 3);
                    x4o = E[v8yy[b7B]] - E8o[v8yy[Z7B]];
                    H8o += x4o;
                } else if (E8o[`fte`] > -1) {
                    I8yy.P2k(12);
                    var z7B = I8yy.A2k(4, 52, 44);
                    y4o = E[`fte`] - E8o[v8yy[z7B]];
                    H8o += y4o;
                }
                if (H8o != 0 && H8o < 98) {
                    I8yy.H2k(198);
                    A4o = I8yy.A2k(w4o, H8o, 1, H8o, 1, w4o);
                    this[`roundEndTweenGroup`][`removeAll`]();
                    Z8o = {
                        sat: 1,
                        blur: 0,
                        brightness: 1,
                        contrast: 1,
                        winnerTextAlpha: 0,
                        bgFaderAlpha: 0
                    };
                    I4o = new TWEEN[`Tween`](Z8o,this[`roundEndTweenGroup`]);
                    I4o[`to`]({
                        sat: 0.3,
                        blur: 15
                    }, 20);
                    I4o[`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    I4o[`delay`](10);
                    I4o[`start`](0);
                    v4o = new TWEEN[`Tween`](Z8o,this[`roundEndTweenGroup`]);
                    v4o[`to`]({
                        bgFaderAlpha: 1
                    }, 6);
                    v4o[`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    v4o[`delay`](52);
                    I4o[`chain`](v4o);
                    Q4o = new TWEEN[`Tween`](Z8o,this[`roundEndTweenGroup`]);
                    Q4o[`to`]({
                        brightness: 1,
                        contrast: 1,
                        sat: 1,
                        blur: 0,
                        bgFaderAlpha: 0
                    }, 8);
                    Q4o[`easing`](TWEEN[`Easing`][`Quadratic`][`Out`]);
                    Q4o[`delay`](2);
                    v4o[`chain`](Q4o);
                    g4o = new TWEEN[`Tween`](Z8o,this[`roundEndTweenGroup`]);
                    g4o[`to`]({
                        winnerTextAlpha: 1
                    }, 5);
                    g4o[`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    g4o[`delay`](25);
                    g4o[`start`](0);
                    o4o = new TWEEN[`Tween`](Z8o,this[`roundEndTweenGroup`]);
                    o4o[`to`]({
                        winnerTextAlpha: 0
                    }, 1);
                    o4o[`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    o4o[`delay`](53);
                    g4o[`chain`](o4o);
                    this[`roundEndTweenGroup`][`update`](A4o);
                    if (this[`colorAdjust`]) {
                        this[`colorAdjust`][`saturation`] = Z8o[`sat`];
                        this[`colorAdjust`][`contrast`] = Z8o[`contrast`];
                        this[`colorAdjust`][`brightness`] = Z8o[`brightness`];
                    }
                    I8yy.P2k(168);
                    var F7B = I8yy.A2k(4, 471, 1444, 1, 11);
                    this[`blur`][`blur`] = Z8o[v8yy[F7B]] * 0.4;
                    if (this[`foregroundFader`]) {
                        this[`foregroundFader`][`alpha`] = Z8o[`bgFaderAlpha`];
                        this[`foregroundFader`][`visible`] = true;
                    }
                    if (this[`blurContainer`]) {
                        if (this[`colorAdjust`]) {
                            this[`blurContainer`][`filters`] = [this[`blur`], this[`colorAdjust`]];
                        } else {
                            this[`blurContainer`][`filters`] = [this[`blur`]];
                        }
                    }
                } else {
                    if (this[`blurContainer`]) {
                        this[`blurContainer`][`filters`] = [];
                    }
                    if (this[`foregroundFader`]) {
                        this[`foregroundFader`][`alpha`] = 0;
                        this[`foregroundFader`][`visible`] = false;
                    }
                }
            }
        }
        ;
        v2k[66] = class V4o {
            constructor(B6E, a6E) {
                var E1k = [arguments];
                                I8yy.g9b();
                this[`updateSeconds`] = E1k[0][1];
                this[`currentCount`] = 0;
                setInterval(()=>{
                    
                                        this[`update`]();
                }
                , E1k[0][1] * 1000);
                this[`div`] = document[`createElement`](`div`);
                this[`div`][`style`][`position`] = `absolute`;
                this[`div`][`style`][`width`] = `50px`;
                this[`div`][`style`][`height`] = `20px`;
                this[`div`][`style`][`color`] = `#bbbbbb`;
                this[`div`][`style`][`top`] = `36px`;
                this[`div`][`style`][`left`] = `5px`;
                this[`div`][`style`][`fontFamily`] = `futurept_b1`;
                this[`div`][`style`][`display`] = `none`;
                this[`showing`] = false;
                E1k[0][0][`appendChild`](this[`div`]);
            }
            frameDone() {
                var R1k = [arguments];
                                if (!this[`showing`]) {
                    return;
                }
                this[`currentCount`]++;
            }
            update() {
                var j0k = [arguments];
                I8yy.w9b();
                                if (!this[`showing`]) {
                    return;
                }
                I8yy.H2k(0);
                j0k[4] = I8yy.r2k(1619, 14);
                I8yy.P2k(40);
                j0k[8] = I8yy.A2k(19, 17, 3);
                I8yy.P2k(42);
                j0k[9] = I8yy.r2k(204, 10, 1418);
                j0k[6] = this[v8yy[j0k[4]]] * (j0k[8] / this[v8yy[j0k[9]]]);
                this[`currentCount`] = 0;
                I8yy.H2k(1);
                j0k[2] = I8yy.A2k(16, 4043);
                this[`div`][`textContent`] = j0k[6] + v8yy[j0k[2]];
            }
            show() {
                var k0k = [arguments];
                                this[`showing`] = true;
                I8yy.w9b();
                this[`div`][`style`][`display`] = `block`;
            }
            hide() {
                var f0k = [arguments];
                                this[`showing`] = false;
                this[`div`][`style`][`display`] = `none`;
            }
        }
        ;
        `use strict`;
        v2k[1] = v2k[0][2][`Common`][`Math`][`b2Vec2`];
        v2k[2] = v2k[0][2][`Dynamics`][`b2BodyDef`];
        v2k[6] = v2k[0][2][`Dynamics`][`b2Body`];
        v2k[91] = v2k[0][2][`Dynamics`][`b2FixtureDef`];
        v2k[83] = v2k[0][2][`Dynamics`][`b2Fixture`];
        v2k[47] = v2k[0][2][`Dynamics`][`b2World`];
        v2k[29] = v2k[0][2][`Collision`][`Shapes`][`b2MassData`];
        v2k[13] = v2k[0][2][`Collision`][`Shapes`][`b2PolygonShape`];
        v2k[28] = v2k[0][2][`Collision`][`Shapes`][`b2CircleShape`];
        v2k[51] = v2k[0][2][`Dynamics`][`b2DebugDraw`];
        v2k[82] = v2k[0][2][`Common`][`Math`][`b2Math`];
        v2k[50] = v2k[0][2][`Dynamics`][`Joints`][`b2RevoluteJointDef`];
        v2k[40] = v2k[0][2][`Dynamics`][`Joints`][`b2RevoluteJoint`];
        v2k[93] = v2k[0][2][`Dynamics`][`Joints`][`b2PrismaticJointDef`];
        v2k[89] = v2k[0][2][`Dynamics`][`Joints`][`b2PrismaticJoint`];
        v2k[90] = v2k[0][2][`Dynamics`][`Joints`][`b2DistanceJoint`];
        v2k[96] = v2k[0][2][`Dynamics`][`Joints`][`b2DistanceJointDef`];
        v2k[71] = v2k[0][2][`Dynamics`][`Joints`][`b2GearJointDef`];
        v2k[75] = v2k[0][2][`Collision`][`b2AABB`];
        v2k[79] = {};
        v2k[79][`colors`] = [];
        v2k[79][`cacheTextures`] = true;
        v2k[79][`avatarCache`] = new v2k[45]();
        v2k[79][`soundManager`] = new V8();
        v2k[79][`lrt`] = Date[`now`]();
        v2k[79][`mart`] = 60000;
        v2k[79][`aro`] = true;
        v2k[79][`colors`][`push`](0xef9a9a);
        v2k[79][`colors`][`push`](0xF48FB1);
        v2k[79][`colors`][`push`](0xCE93D8);
        v2k[79][`colors`][`push`](0xB39DDB);
        v2k[79][`colors`][`push`](0x9FA8DA);
        function l8(t6E) {
            var G0k = [arguments];
                        G0k[2] = PIXI[`Container`];
            G0k[5] = PIXI[`loader`];
            G0k[4] = PIXI[`loader`][`resources`];
            G0k[8] = PIXI[`Sprite`];
            G0k[3] = new V8();
            G0k[6] = document[`getElementById`](`xpbar`);
            G0k[9] = document[`getElementById`](`xpbarcontainer`);
            function J7J() {
                var T0k = [arguments];
                                for (T0k[4] = 0; T0k[4] < G0k[99][`length`]; T0k[4]++) {
                    k7J(T0k[4]);
                }
                G0k[99] = [];
            }
            G0k[7] = [];
            G0k[0][0] = G0k[0][0];
            G0k[21] = U[`gameRenderer`];
            function A7J(E6E, R6E, j8E) {
                var K0k = [arguments];
                                K0k[0][1] /= 100;
                K0k[0][2] /= 100;
                I8yy.H2k(32);
                K0k[6] = I8yy.r2k(10, 0, 11);
                I8yy.P2k(1);
                K0k[4] = I8yy.r2k(8, 10);
                I8yy.H2k(119);
                K0k[62] = I8yy.r2k(3, 20, 0, 22);
                K0k[1] = (K0k[6] - Math[`abs`](K0k[4] * K0k[0][2] - K0k[62])) * K0k[0][1];
                I8yy.H2k(119);
                K0k[17] = I8yy.r2k(10, 2, 0, 11);
                I8yy.H2k(1);
                K0k[24] = I8yy.r2k(12, 72);
                I8yy.H2k(11);
                K0k[27] = I8yy.A2k(1, 16, 18, 1, 3);
                I8yy.P2k(142);
                K0k[16] = I8yy.r2k(17, 9, 0, 8);
                K0k[5] = K0k[1] * (K0k[17] - Math[`abs`](K0k[0][0] / K0k[24] % K0k[27] - K0k[16]));
                I8yy.H2k(103);
                K0k[2] = I8yy.A2k(K0k[0][2], 2, K0k[1]);
                K0k[8] = 0;
                K0k[7] = 0;
                K0k[3] = 0;
                if (0 <= K0k[0][0] && K0k[0][0] < 60) {
                    K0k[8] = K0k[1];
                    K0k[7] = K0k[5];
                    K0k[3] = 0;
                } else if (60 <= K0k[0][0] && K0k[0][0] < 120) {
                    K0k[8] = K0k[5];
                    K0k[7] = K0k[1];
                    K0k[3] = 0;
                } else if (120 <= K0k[0][0] && K0k[0][0] < 180) {
                    K0k[8] = 0;
                    K0k[7] = K0k[1];
                    K0k[3] = K0k[5];
                } else if (180 <= K0k[0][0] && K0k[0][0] < 240) {
                    K0k[8] = 0;
                    K0k[7] = K0k[5];
                    K0k[3] = K0k[1];
                } else if (240 <= K0k[0][0] && K0k[0][0] < 300) {
                    K0k[8] = K0k[5];
                    K0k[7] = 0;
                    K0k[3] = K0k[1];
                } else if (300 <= K0k[0][0] && K0k[0][0] < 360) {
                    K0k[8] = K0k[1];
                    K0k[7] = 0;
                    K0k[3] = K0k[5];
                }
                I8yy.H2k(104);
                K0k[8] = Math[`round`](I8yy.A2k(255, K0k[2], K0k[8]));
                I8yy.H2k(104);
                K0k[7] = Math[`round`](I8yy.A2k(255, K0k[2], K0k[7]));
                I8yy.H2k(104);
                I8yy.w9b();
                K0k[3] = Math[`round`](I8yy.r2k(255, K0k[2], K0k[3]));
                K0k[8] *= 0x010000;
                K0k[7] *= 0x000100;
                K0k[3] *= 1;
                I8yy.P2k(42);
                return I8yy.r2k(K0k[8], K0k[7], K0k[3]);
            }
            G0k[0][0][`appendChild`](G0k[21][`view`]);
            G0k[21][`view`][`classList`][`add`](`gamecanvas`);
            function k7J(k8E) {
                var r0k = [arguments];
                                I8yy.g9b();
                if (G0k[99][r0k[0][0]]) {
                    r0k[6] = G0k[99][r0k[0][0]];
                    for (r0k[9] = 0; r0k[9] < r0k[6][`svg`][`length`]; r0k[9]++) {
                        if (r0k[6][`svg`][r0k[9]]) {
                            r0k[3] = r0k[6][`svg`][r0k[9]];
                            r0k[3][`destroy`]();
                        }
                    }
                    if (r0k[6][`texture`]) {
                        r0k[6][`texture`][`destroy`](true);
                    }
                    G0k[99][r0k[0][0]] = null;
                }
            }
            G0k[97] = 0;
            G0k[79] = 0;
            G0k[24] = 0;
            G0k[43] = new PIXI[`Container`]();
            G0k[43][`y`] = 0;
            G0k[43][`x`] = 0;
            G0k[43][`scale`][`x`] = 1;
            G0k[43][`scale`][`y`] = 1;
            G0k[10] = 2.0;
            G0k[22] = [];
            G0k[48] = [];
            G0k[51] = -1;
            G0k[44] = new PIXI[`filters`][`FXAAFilter`]();
            G0k[37] = new TWEEN[`Group`]();
            G0k[84] = 0;
            G0k[89] = new PIXI[`Graphics`]()[`beginFill`](0x5a7f64)[`drawRect`](0, 0, 730, 500);
            function G3J(f8E, G8E) {
                var A0k = [arguments];
                                I8yy.P2k(60);
                A0k[6] = I8yy.A2k(5, 2336, 1160, 2320);
                I8yy.P2k(177);
                A0k[8] = I8yy.r2k(7, 0, 1476, 14, 15);
                I8yy.H2k(199);
                A0k[5] = I8yy.r2k(85, 9, 5, 10, 1682);
                A0k[0][0] = v8yy[A0k[6]] + A0k[0][0][`toString`](16)[`padStart`](A0k[8], v8yy[A0k[5]]);
                A0k[1] = j7J(A0k[0][0]);
                A0k[1][`h`] = A0k[0][1];
                A0k[4] = A7J(A0k[1][`h`], A0k[1][`s`], A0k[1][`l`]);
                I8yy.w9b();
                return A0k[4];
            }
            G0k[43][`addChild`](G0k[89]);
            G0k[60] = 64;
            G0k[11] = PIXI[`RenderTexture`][`create`]({
                width: G0k[60],
                height: G0k[60]
            });
            G0k[31] = new PIXI[`Container`]();
            G0k[67] = new PIXI[`Graphics`]();
            G0k[67][`lineStyle`](24, 0xffffff, 0.025);
            G0k[67][`moveTo`](0, G0k[60]);
            G0k[67][`lineTo`](G0k[60], 0);
            G0k[67][`moveTo`](-G0k[60], G0k[60]);
            G0k[67][`lineTo`](G0k[60], -G0k[60]);
            I8yy.P2k(5);
            G0k[67][`moveTo`](0, I8yy.A2k(2, G0k[60]));
            I8yy.P2k(5);
            G0k[67][`lineTo`](I8yy.A2k(2, G0k[60]), 0);
            G0k[31][`addChild`](G0k[67]);
            G0k[21][`render`](G0k[31], G0k[11]);
            G0k[89][`lineStyle`](1, 0xffffff, 0.5);
            G0k[89][`beginTextureFill`]({
                texture: G0k[11]
            });
            G0k[89][`drawRect`](30, 75, 670, 350);
            G0k[89][`endFill`]();
            G0k[89][`moveTo`](365, 75);
            I8yy.P2k(1);
            G0k[89][`lineTo`](365, I8yy.r2k(75, 500));
            G0k[89][`drawCircle`](365, 250, 50);
            G0k[89][`beginFill`](0x448aff);
            I8yy.P2k(200);
            G0k[89][`drawCircle`](30, I8yy.A2k(75, 350, 2, 143), 8);
            I8yy.P2k(201);
            G0k[89][`drawCircle`](30, I8yy.A2k(75, 500, 2, 143, 350), 8);
            G0k[89][`beginFill`](0xd32f2f);
            I8yy.P2k(200);
            G0k[89][`drawCircle`](700, I8yy.r2k(75, 350, 2, 143), 8);
            I8yy.P2k(201);
            G0k[89][`drawCircle`](700, I8yy.A2k(75, 500, 2, 143, 350), 8);
            G0k[89][`endFill`]();
            I8yy.H2k(5);
            G0k[69] = I8yy.r2k(5, 11);
            I8yy.P2k(0);
            G0k[89][`moveTo`](30, I8yy.A2k(75, 40));
            I8yy.H2k(0);
            G0k[89][`lineTo`](I8yy.r2k(30, G0k[69]), I8yy.A2k(75, 40));
            I8yy.P2k(0);
            G0k[89][`lineTo`](I8yy.A2k(30, G0k[69]), I8yy.r2k(350, 75, 40, I8yy.P2k(202)));
            function x7J(T8E, K8E, r8E, A8E) {
                var P0k = [arguments];
                                P0k[0][2] = 30;
                I8yy.P2k(2);
                P0k[8] = I8yy.r2k(P0k[0][2], 15);
                P0k[6] = 2;
                G0k[99][P0k[0][0]] = {
                    texture: null,
                    inProgress: true,
                    layerProgress: [],
                    svg: [],
                    totalSize: P0k[0][1] * P0k[8] * P0k[6]
                };
                P0k[7] = G0k[48][P0k[0][0]][`avatar`][`layers`];
                P0k[4] = function(P8E) {
                    var H0k = [arguments];
                                        H0k[9] = P0k[7][H0k[0][0]];
                    if (!(H0k[9][`id`] >= 0 && H0k[9][`id`] <= 115) || Math[`abs`](H0k[9][`x`]) > 9999 || Math[`abs`](H0k[9][`y`]) > 9999 || H0k[9][`scale`] > 999 || H0k[9][`angle`] > 9999 || isNaN(H0k[9][`color`]) || typeof H0k[9][`color`] != `number` || typeof H0k[9][`flipX`] != `boolean` || typeof H0k[9][`flipY`] != `boolean`) {
                        return `continue`;
                    }
                    H0k[5] = H0k[9][`id`][`toString`]();
                    if (H0k[9][`id`] < 10) {
                        I8yy.H2k(12);
                        H0k[6] = I8yy.r2k(17, 1716, 1);
                        H0k[5] = v8yy[H0k[6]] + H0k[5];
                    }
                    if (H0k[9][`id`] < 100) {
                        I8yy.H2k(9);
                        H0k[2] = I8yy.A2k(18630, 12, 1694);
                        H0k[5] = v8yy[H0k[2]] + H0k[5];
                    }
                    H0k[7] = new PIXI[`resources`][`SVGResource`](GameResources[`svgStrings`][H0k[9][`id`]],{
                        scale: H0k[9][`scale`] * P0k[0][1] * P0k[8] * P0k[6],
                        autoload: false
                    });
                    G0k[99][P0k[0][0]][`layerProgress`][H0k[0][0]] = false;
                    G0k[99][P0k[0][0]][`svg`][H0k[0][0]] = H0k[7];
                    H0k[7][`load`]()[`then`](function() {
                        var v0k = [arguments];
                                                G0k[99][P0k[0][0]][`layerProgress`][H0k[0][0]] = true;
                        y7J(P0k[0][0], P0k[0][3]);
                    });
                }
                ;
                for (P0k[2] = P0k[7][`length`] - 1; P0k[2] >= 0; P0k[2]--) {
                    P0k[3] = (1,
                    P0k[4])(P0k[2]);
                    if (P0k[3] === `continue`)
                        continue;
                }
            }
            I8yy.P2k(202);
            G0k[89][`lineTo`](30, I8yy.r2k(350, 75, 40));
            I8yy.H2k(0);
            G0k[89][`moveTo`](700, I8yy.A2k(75, 40));
            I8yy.H2k(1);
            G0k[89][`lineTo`](I8yy.A2k(G0k[69], 700), I8yy.A2k(75, 40, I8yy.P2k(0)));
            I8yy.P2k(1);
            G0k[89][`lineTo`](I8yy.A2k(G0k[69], 700), I8yy.r2k(350, 75, 40, I8yy.H2k(202)));
            I8yy.H2k(202);
            G0k[89][`lineTo`](700, I8yy.r2k(350, 75, 40));
            G0k[94] = new PIXI[`Container`]();
            G0k[43][`addChild`](G0k[94]);
            G0k[81] = new PIXI[`Container`]();
            G0k[43][`addChild`](G0k[81]);
            G0k[59] = new PIXI[`Container`]();
            G0k[43][`addChild`](G0k[59]);
            G0k[59][`visible`] = false;
            G0k[45] = new PIXI[`Graphics`]();
            G0k[45][`beginFill`](0);
            G0k[45][`drawRect`](0, 0, 730, 500);
            G0k[45][`alpha`] = 0.3;
            G0k[59][`addChild`](G0k[45]);
            G0k[68] = new PIXI[`Container`]();
            G0k[59][`addChild`](G0k[68]);
            G0k[26] = {
                fontFamily: `futurept_medium`,
                fontSize: 40,
                fill: 0xffffff77
            };
            G0k[27] = {
                fontFamily: `futurept_medium`,
                fontSize: 77,
                fill: 0xffffff77
            };
            G0k[90] = new PIXI[`Text`](`BLUE TEAM`,G0k[26]);
            G0k[91] = new PIXI[`Text`](`RED TEAM`,G0k[26]);
            G0k[75] = new PIXI[`Text`](`WINS`,G0k[27]);
            G0k[34] = new PIXI[`Text`](`SCORES`,G0k[27]);
            G0k[90][`anchor`][`set`](1, 0.5);
            G0k[91][`anchor`][`set`](1, 0.5);
            G0k[75][`anchor`][`set`](1, 0.5);
            G0k[34][`anchor`][`set`](1, 0.5);
            G0k[90][`resolution`] = G0k[10];
            G0k[91][`resolution`] = G0k[10];
            G0k[75][`resolution`] = G0k[10];
            G0k[34][`resolution`] = G0k[10];
            G0k[68][`addChild`](G0k[90]);
            G0k[68][`addChild`](G0k[91]);
            G0k[68][`addChild`](G0k[75]);
            G0k[68][`addChild`](G0k[34]);
            G0k[90][`x`] = G0k[91][`x`] = 695;
            G0k[90][`y`] = G0k[91][`y`] = 375;
            G0k[75][`x`] = G0k[34][`x`] = 700;
            G0k[75][`y`] = G0k[34][`y`] = 445;
            G0k[62] = 25;
            G0k[17] = 8;
            G0k[93] = new PIXI[`Container`]();
            G0k[43][`addChild`](G0k[93]);
            I8yy.P2k(0);
            G0k[93][`x`] = I8yy.r2k(365, 1.1);
            G0k[93][`y`] = 30;
            function y7J(H8E, v8E) {
                var i0k = [arguments];
                                i0k[7] = true;
                for (i0k[49] = 0; i0k[49] < G0k[99][i0k[0][0]][`layerProgress`][`length`]; i0k[49]++) {
                    if (G0k[99][i0k[0][0]][`layerProgress`][i0k[49]] == false) {
                        i0k[7] = false;
                        break;
                    }
                }
                if (i0k[7] == true) {
                    i0k[2] = G0k[99][i0k[0][0]];
                    i0k[6] = G0k[48][i0k[0][0]][`avatar`][`layers`];
                    i0k[9] = new PIXI[`Sprite`]();
                    i0k[8] = new PIXI[`Graphics`]();
                    i0k[5] = G0k[48][i0k[0][0]][`avatar`][`bc`];
                    if (i0k[0][1] == 2) {
                        i0k[5] = G3J(i0k[5], 4);
                    }
                    if (i0k[0][1] == 3) {
                        i0k[5] = G3J(i0k[5], 207);
                    }
                    if (i0k[0][1] == 4) {
                        i0k[5] = G3J(i0k[5], 122);
                    }
                    if (i0k[0][1] == 5) {
                        i0k[5] = G3J(i0k[5], 54);
                    }
                    i0k[8][`beginFill`](i0k[5]);
                    i0k[8][`drawRect`](-256, -256, 512, 512);
                    i0k[8][`endFill`]();
                    i0k[9][`addChild`](i0k[8]);
                    i0k[4] = [];
                    for (i0k[27] = i0k[2][`svg`][`length`] - 1; i0k[27] >= 0; i0k[27]--) {
                        i0k[1] = PIXI[`Texture`][`from`](i0k[2][`svg`][i0k[27]]);
                        i0k[22] = new PIXI[`Sprite`](i0k[1]);
                        i0k[4][`push`](i0k[22]);
                        i0k[4][`push`](i0k[1]);
                        i0k[41] = i0k[6][i0k[27]];
                        i0k[94] = i0k[41][`color`];
                        if (i0k[0][1] == 2) {
                            i0k[94] = G3J(i0k[94], 4);
                        }
                        if (i0k[0][1] == 3) {
                            i0k[94] = G3J(i0k[94], 207);
                        }
                        if (i0k[0][1] == 4) {
                            i0k[94] = G3J(i0k[94], 122);
                        }
                        if (i0k[0][1] == 5) {
                            i0k[94] = G3J(i0k[94], 54);
                        }
                        i0k[22][`tint`] = i0k[94];
                        i0k[22][`anchor`][`set`](0.5);
                        i0k[22][`angle`] = i0k[41][`angle`];
                        I8yy.H2k(66);
                        i0k[83] = I8yy.A2k(19, 10, 57, 8, 4502);
                        I8yy.P2k(131);
                        i0k[43] = I8yy.r2k(5256, 73, 9, 8, 437);
                        i0k[22][`x`] = i0k[41][v8yy[i0k[83]]] * i0k[2][v8yy[i0k[43]]];
                        I8yy.H2k(9);
                        i0k[50] = I8yy.r2k(5720, 8, 720);
                        I8yy.H2k(1);
                        i0k[87] = I8yy.r2k(2190, 2628);
                        i0k[22][`y`] = i0k[41][v8yy[i0k[50]]] * i0k[2][v8yy[i0k[87]]];
                        i0k[26] = i0k[41][`flipX`] ? -1 : 1;
                        i0k[57] = i0k[41][`flipY`] ? -1 : 1;
                        i0k[22][`scale`][`x`] *= i0k[26];
                        i0k[22][`scale`][`y`] *= i0k[57];
                        i0k[9][`addChild`](i0k[22]);
                    }
                    I8yy.H2k(25);
                    i0k[84] = I8yy.r2k(55, 552, 2, 9);
                    I8yy.P2k(22);
                    i0k[89] = I8yy.A2k(14, 42, 9, 33);
                    i0k[9][`x`] = i0k[2][v8yy[i0k[84]]] * i0k[89];
                    I8yy.P2k(138);
                    i0k[54] = I8yy.r2k(19, 12, 427, 3, 888);
                    I8yy.P2k(22);
                    i0k[73] = I8yy.A2k(14, 75, 15, 60);
                    i0k[9][`y`] = i0k[2][v8yy[i0k[54]]] * i0k[73];
                    i0k[29] = PIXI[`RenderTexture`][`create`]({
                        width: 512,
                        height: 512
                    });
                    G0k[21][`render`](i0k[9], i0k[29]);
                    G0k[99][i0k[0][0]][`texture`] = i0k[29];
                    for (i0k[23] = 0; i0k[23] < i0k[2][`svg`][`length`]; i0k[23]++) {
                        if (i0k[2][`svg`][i0k[23]]) {
                            i0k[24] = i0k[2][`svg`][i0k[23]];
                            i0k[24][`destroy`]();
                        }
                    }
                    for (i0k[63] = 0; i0k[63] < i0k[4][`length`]; i0k[63]++) {
                        i0k[4][i0k[63]][`destroy`]();
                    }
                    i0k[4] = null;
                }
            }
            G0k[35] = {
                fontFamily: `futurept_book`,
                fontSize: 40,
                fill: 0xffffff,
                align: `center`,
                dropShadow: true,
                dropShadowDistance: 3,
                dropShadowAlpha: 0.35,
                dropShadowBlur: 4
            };
            G0k[12] = new PIXI[`Text`](`0`,G0k[35]);
            G0k[12][`resolution`] = G0k[10];
            G0k[93][`addChild`](G0k[12]);
            G0k[12][`anchor`][`set`](1, 0.5);
            G0k[12][`x`] = -G0k[17];
            G0k[78] = new PIXI[`Text`](`0`,G0k[35]);
            G0k[78][`resolution`] = G0k[10];
            G0k[93][`addChild`](G0k[78]);
            G0k[78][`anchor`][`set`](0, 0.5);
            G0k[78][`x`] = G0k[17];
            G0k[77] = {
                fontFamily: `futurept_book`,
                fontSize: 17,
                fill: 0xffffff,
                align: `center`,
                dropShadow: true,
                dropShadowDistance: 3,
                dropShadowAlpha: 0.35,
                dropShadowBlur: 4
            };
            G0k[85] = new PIXI[`Text`](`Blue`,G0k[77]);
            G0k[85][`resolution`] = G0k[10];
            G0k[93][`addChild`](G0k[85]);
            G0k[85][`anchor`][`set`](1, 0.5);
            I8yy.H2k(203);
            G0k[85][`x`] = I8yy.r2k(G0k[17], 1);
            G0k[85][`y`] = G0k[62];
            G0k[72] = new PIXI[`Text`](`Red`,G0k[77]);
            G0k[72][`resolution`] = G0k[10];
            G0k[93][`addChild`](G0k[72]);
            G0k[72][`anchor`][`set`](0, 0.5);
            I8yy.H2k(0);
            G0k[72][`x`] = I8yy.A2k(G0k[17], 1);
            function j7J(i8E) {
                var u0k = [arguments];
                                u0k[9] = 0;
                u0k[4] = 0;
                u0k[7] = 0;
                if (u0k[0][0][`length`] == 4) {
                    I8yy.P2k(16);
                    u0k[42] = I8yy.A2k(3496, 3, 31477, 10);
                    I8yy.P2k(26);
                    u0k[22] = I8yy.A2k(18, 9, 197, 20);
                    I8yy.P2k(0);
                    u0k[62] = I8yy.r2k(0, 1);
                    u0k[9] = v8yy[u0k[42]] + u0k[0][0][u0k[22]] + u0k[0][0][u0k[62]];
                    I8yy.P2k(1);
                    u0k[56] = I8yy.r2k(45240, 48720);
                    I8yy.P2k(204);
                    u0k[83] = I8yy.r2k(4, 31, 12, 19, 2);
                    I8yy.H2k(0);
                    u0k[46] = I8yy.A2k(0, 2);
                    u0k[4] = v8yy[u0k[56]] + u0k[0][0][u0k[83]] + u0k[0][0][u0k[46]];
                    I8yy.P2k(1);
                    u0k[28] = I8yy.A2k(13, 3493);
                    I8yy.H2k(205);
                    u0k[86] = I8yy.A2k(16, 18, 10, 160, 21);
                    I8yy.P2k(12);
                    u0k[51] = I8yy.A2k(2, 12, 7);
                    u0k[7] = v8yy[u0k[28]] + u0k[0][0][u0k[86]] + u0k[0][0][u0k[51]];
                } else if (u0k[0][0][`length`] == 7) {
                    I8yy.P2k(9);
                    u0k[89] = I8yy.r2k(810840, 13, 62640);
                    I8yy.H2k(0);
                    u0k[67] = I8yy.A2k(0, 1);
                    I8yy.H2k(206);
                    u0k[15] = I8yy.A2k(1, 7, 5, 1);
                    u0k[9] = v8yy[u0k[89]] + u0k[0][0][u0k[67]] + u0k[0][0][u0k[15]];
                    I8yy.P2k(0);
                    u0k[78] = I8yy.r2k(870, 2610);
                    I8yy.H2k(143);
                    u0k[68] = I8yy.A2k(81, 13, 1, 17, 54);
                    I8yy.P2k(0);
                    u0k[35] = I8yy.r2k(1, 3);
                    u0k[4] = v8yy[u0k[78]] + u0k[0][0][u0k[68]] + u0k[0][0][u0k[35]];
                    I8yy.H2k(0);
                    u0k[20] = I8yy.r2k(3475, 5);
                    I8yy.H2k(1);
                    u0k[59] = I8yy.A2k(75, 80);
                    I8yy.P2k(207);
                    u0k[10] = I8yy.r2k(3, 4, 6, 12);
                    u0k[7] = v8yy[u0k[20]] + u0k[0][0][u0k[59]] + u0k[0][0][u0k[10]];
                }
                u0k[9] /= 255;
                u0k[4] /= 255;
                u0k[7] /= 255;
                u0k[6] = Math[`min`](u0k[9], u0k[4], u0k[7]);
                u0k[2] = Math[`max`](u0k[9], u0k[4], u0k[7]);
                I8yy.H2k(1);
                u0k[3] = I8yy.r2k(u0k[6], u0k[2]);
                u0k[8] = 0;
                u0k[1] = 0;
                u0k[70] = 0;
                if (u0k[3] == 0) {
                    u0k[8] = 0;
                } else if (u0k[2] == u0k[9]) {
                    I8yy.P2k(109);
                    u0k[8] = I8yy.A2k(u0k[7], 6, u0k[4], u0k[3]);
                } else if (u0k[2] == u0k[4]) {
                    I8yy.H2k(110);
                    u0k[8] = I8yy.r2k(2, u0k[9], u0k[3], u0k[7]);
                } else {
                    I8yy.H2k(110);
                    u0k[8] = I8yy.A2k(4, u0k[4], u0k[3], u0k[9]);
                }
                I8yy.P2k(5);
                u0k[8] = Math[`round`](I8yy.r2k(u0k[8], 60));
                if (u0k[8] < 0) {
                    u0k[8] += 360;
                }
                I8yy.H2k(111);
                u0k[70] = I8yy.A2k(2, u0k[2], u0k[6]);
                u0k[1] = u0k[3] == 0 ? 0 : u0k[3] / (1 - Math[`abs`](2 * u0k[70] - 1));
                u0k[1] = +(u0k[1] * 100)[`toFixed`](1);
                u0k[70] = +(u0k[70] * 100)[`toFixed`](1);
                return {
                    h: u0k[8],
                    s: u0k[1],
                    l: u0k[70]
                };
            }
            G0k[72][`y`] = G0k[62];
            G0k[16] = new v2k[58](G0k[43],G0k[10]);
            G0k[99] = [];
            this[`destroyOneSkin`] = k7J;
            this[`destroySkins`] = J7J;
            this[`resizeRenderer`] = function() {
                console.log("resizeRenderer 17243");
                var b0k = [arguments];
                                G0k[97] = G0k[0][0][`offsetWidth`];
                G0k[79] = G0k[0][0][`offsetHeight`];
                I8yy.H2k(2);
                b0k[8] = I8yy.r2k(730, 500);
                I8yy.P2k(2);
                b0k[2] = I8yy.r2k(G0k[97], G0k[79]);
                b0k[9] = 0;
                b0k[4] = 0;
                b0k[5] = 0;
                if (b0k[2] > b0k[8]) {
                    b0k[4] = G0k[79];
                    I8yy.P2k(5);
                    b0k[9] = I8yy.A2k(b0k[4], b0k[8]);
                } else {
                    b0k[9] = G0k[97];
                    I8yy.P2k(2);
                    b0k[4] = I8yy.r2k(b0k[9], b0k[8]);
                }
                b0k[9] -= 10;
                b0k[4] -= 10;
                I8yy.P2k(2);
                b0k[5] = I8yy.r2k(b0k[9], 730);
                if (b0k[9] > 1200) {
                    G0k[10] = 4.0;
                } else {
                    G0k[10] = 2.0;
                }
                G0k[21][`resize`](b0k[9], b0k[4]);
                I8yy.g9b();
                G0k[43][`scale`][`x`] = b0k[5];
                G0k[43][`scale`][`y`] = b0k[5];
                I8yy.H2k(21);
                b0k[6] = I8yy.A2k(26115, 1740, 26115);
                G0k[6][`style`][`width`] = b0k[9] * 0.9 + v8yy[b0k[6]];
            }
            ;
            I8yy.w9b();
            this[`destroy`] = function() {
                var d0k = [arguments];
                                G0k[21][`clear`]();
                J7J();
                G0k[0][0][`removeChild`](G0k[21][`view`]);
                G0k[0][0] = null;
                G0k[21] = null;
            }
            ;
            this[`setPlayerArray`] = function(u8E) {
                var e0k = [arguments];
                G0k[48] = e0k[0][0];
            }
            ;
            this[`setLocalPlayerID`] = function(b8E) {
                var C0k = [arguments];
                G0k[51] = C0k[0][0];
            }
            ;
            this[`enableTutorialText`] = function() {}
            ;
            this[`clearAfkWarn`] = function() {}
            ;
            this[`showAfkWarn`] = function() {}
            ;
            this[`render`] = function(d8E, e8E, C8E, l8E, o8E, I8E) {
                var l0k = [arguments];
                                if (G0k[21][`view`][`parentNode`] != G0k[0][0]) {
                    G0k[0][0][`appendChild`](G0k[21][`view`]);
                }
                l0k[5] = false;
                if (G0k[97] != G0k[0][0][`offsetWidth`] || G0k[79] != G0k[0][0][`offsetHeight`]) {
                    this[`resizeRenderer`]();
                    l0k[5] = true;
                }
                l0k[7] = v2k[79][`getPageHeight`]();
                if (l0k[7] != G0k[24] || l0k[5]) {
                    I8yy.P2k(208);
                    l0k[44] = I8yy.A2k(12, 11, 13, 8);
                    I8yy.H2k(31);
                    l0k[18] = I8yy.r2k(12, 11, 184, 5);
                    I8yy.P2k(22);
                    l0k[61] = I8yy.r2k(1165, 3, 6, 1722);
                    G0k[9][`style`][`top`] = (l0k[7] - G0k[79]) / l0k[44] + l0k[18] + v8yy[l0k[61]];
                    G0k[24] = l0k[7];
                }
                I8yy.w9b();
                l0k[9] = l0k[0][1][`ppm`];
                if (l0k[0][1][`ni`]) {
                    l0k[0][0] = l0k[0][1];
                }
                if (!G0k[52]) {
                    G0k[52] = new PIXI[`Graphics`]();
                    G0k[52][`lineStyle`](undefined);
                    G0k[52][`beginFill`](0x000000, 0.3);
                    I8yy.P2k(5);
                    G0k[52][`drawCircle`](1, 1, I8yy.A2k(l0k[9], 0.7));
                    G0k[52][`endFill`]();
                    G0k[52][`beginFill`](0xffffff);
                    I8yy.H2k(5);
                    G0k[52][`drawCircle`](0, 0, I8yy.A2k(l0k[9], 0.7));
                    G0k[52][`endFill`]();
                    G0k[81][`addChild`](G0k[52]);
                }
                for (l0k[78] = 0; l0k[78] < l0k[0][1][`discs`][`length`]; l0k[78]++) {
                    if (l0k[0][1][`discs`][l0k[78]] && !G0k[22][l0k[78]]) {
                        G0k[22][l0k[78]] = {
                            container: null,
                            inner: null,
                            innerColor: 0,
                            nametext: null,
                            outline: null,
                            totalRadius: 1
                        };
                        l0k[3] = new PIXI[`Graphics`]();
                        G0k[22][l0k[78]][`inner`] = l0k[3];
                        l0k[1] = null;
                        l0k[8] = 0x448aff;
                        l0k[6] = new PIXI[`Container`]();
                        G0k[22][l0k[78]][`container`] = l0k[6];
                        l0k[6][`addChild`](l0k[3]);
                        l0k[4] = G0k[22][l0k[78]][`totalRadius`];
                        if (G0k[48][l0k[78]] && G0k[48][l0k[78]][`avatar`] && typeof G0k[48][l0k[78]][`avatar`][`bc`] == `number`) {
                            l0k[8] = G0k[48][l0k[78]][`avatar`][`bc`];
                        } else {
                            l0k[8] = 0x448aff;
                        }
                        if (l0k[0][1][`discs`][l0k[78]][`team`] == 2) {
                            l0k[8] = G3J(l0k[8], 4);
                        }
                        if (l0k[0][1][`discs`][l0k[78]][`team`] == 3) {
                            l0k[8] = G3J(l0k[8], 207);
                        }
                        if (l0k[0][1][`discs`][l0k[78]][`team`] == 4) {
                            l0k[8] = G3J(l0k[8], 122);
                        }
                        if (l0k[0][1][`discs`][l0k[78]][`team`] == 5) {
                            l0k[8] = G3J(l0k[8], 54);
                        }
                        l0k[3][`beginFill`](l0k[8]);
                        I8yy.P2k(5);
                        l0k[3][`drawCircle`](0, 0, I8yy.r2k(l0k[9], l0k[4]));
                        l0k[3][`endFill`]();
                        l0k[3][`skinRendered`] = false;
                        l0k[84] = new PIXI[`Graphics`]();
                        l0k[84][`lineStyle`](1.5, 0xffffff, 1);
                        I8yy.P2k(35);
                        l0k[84][`drawCircle`](0, 0, I8yy.A2k(l0k[9], 0.5, l0k[4]));
                        G0k[22][l0k[78]][`outline`] = l0k[84];
                        l0k[6][`addChild`](l0k[84]);
                        l0k[33] = new PIXI[`Graphics`]();
                        l0k[33][`beginFill`](0x000000, 0.25);
                        I8yy.P2k(5);
                        l0k[33][`drawCircle`](1, 1, I8yy.r2k(l0k[9], l0k[4]));
                        l0k[33][`endFill`]();
                        l0k[6][`addChildAt`](l0k[33], 0);
                        l0k[48] = `futurept_book`;
                        l0k[29] = ``;
                        if (G0k[48][l0k[78]]) {
                            l0k[29] = G0k[48][l0k[78]][`userName`];
                        }
                        l0k[41] = {
                            fontFamily: l0k[48],
                            fontSize: 11,
                            fill: 0xe0e0e0,
                            align: `center`,
                            dropShadow: false,
                            dropShadowDistance: 2,
                            dropShadowAlpha: 0.20
                        };
                        if (l0k[78] == G0k[51]) {
                            l0k[41][`fill`] = 0xffffff;
                            l0k[41][`dropShadowDistance`] = 2;
                            l0k[41][`dropShadowAlpha`] = 0.30;
                        }
                        l0k[57] = new PIXI[`Text`](l0k[29],l0k[41]);
                        G0k[22][l0k[78]][`container`][`addChild`](l0k[57]);
                        I8yy.H2k(0);
                        l0k[17] = I8yy.r2k(456, 12);
                        I8yy.H2k(32);
                        l0k[65] = I8yy.A2k(18, 14, 6);
                        I8yy.H2k(209);
                        l0k[10] = I8yy.A2k(3, 27, 15, 4, 6);
                        l0k[57][`x`] = -l0k[57][v8yy[l0k[17]]] / l0k[65] + l0k[10];
                        I8yy.P2k(13);
                        l0k[57][`y`] = I8yy.r2k(l0k[9], l0k[4], 1.2);
                        l0k[57][`resolution`] = G0k[10];
                        G0k[22][l0k[78]][`nametext`] = l0k[57];
                        try {
                            if (G0k[48][l0k[78]] && G0k[48][l0k[78]][`avatar`] && G0k[48][l0k[78]][`avatar`][`layers`] && G0k[48][l0k[78]][`avatar`][`layers`][`length`] > 0) {
                                if (G0k[99][l0k[78]] && G0k[99][l0k[78]][`texture`]) {
                                    ;
                                } else {
                                    x7J(l0k[78], l0k[4], l0k[9], l0k[0][1][`discs`][l0k[78]][`team`]);
                                }
                            }
                            ;
                        } catch (U8Q) {}
                        if (l0k[0][1][`discs`][l0k[78]][`team`] >= 2 && l0k[0][1][`discs`][l0k[78]][`team`] <= 5) {
                            l0k[1] = new PIXI[`Graphics`]();
                            l0k[13] = 0x000000;
                            if (l0k[0][1][`discs`][l0k[78]][`team`] == 2) {
                                l0k[13] = 0xf44336;
                            } else if (l0k[0][1][`discs`][l0k[78]][`team`] == 3) {
                                l0k[13] = 0x2196f3;
                            } else if (l0k[0][1][`discs`][l0k[78]][`team`] == 4) {
                                l0k[13] = 0x4caf50;
                            } else if (l0k[0][1][`discs`][l0k[78]][`team`] == 5) {
                                l0k[13] = 0xffeb3b;
                            }
                            l0k[1][`beginFill`](l0k[13]);
                            I8yy.H2k(5);
                            l0k[1][`drawCircle`](0, 0, I8yy.A2k(l0k[9], l0k[4]));
                            l0k[1][`endFill`]();
                            l0k[1][`blendMode`] = PIXI[`BLEND_MODES`][`MULTIPLY`];
                            l0k[40] = new PIXI[`Graphics`]();
                            I8yy.P2k(5);
                            l0k[40][`lineStyle`](I8yy.A2k(0.13, l0k[9]), l0k[13]);
                            I8yy.P2k(5);
                            l0k[40][`drawCircle`](0, 0, I8yy.r2k(l0k[9], l0k[4]));
                            l0k[3][`addChild`](l0k[40]);
                        }
                        G0k[94][`addChild`](G0k[22][l0k[78]][`container`]);
                    }
                    if (l0k[0][1][`discs`][l0k[78]]) {
                        if (G0k[22][l0k[78]][`inner`][`skinRendered`] == false && G0k[99][l0k[78]] && G0k[99][l0k[78]][`texture`]) {
                            I8yy.H2k(210);
                            l0k[63] = I8yy.r2k(1, 30, 2, l0k[9]);
                            G0k[22][l0k[78]][`inner`][`clear`]();
                            G0k[22][l0k[78]][`inner`][`beginTextureFill`]({
                                texture: G0k[99][l0k[78]][`texture`],
                                matrix: new PIXI[`Matrix`](l0k[63],0,0,l0k[63],-l0k[9] * G0k[22][l0k[78]][`totalRadius`],-l0k[9] * G0k[22][l0k[78]][`totalRadius`])
                            });
                            G0k[22][l0k[78]][`inner`][`drawCircle`](0, 0, l0k[9] * G0k[22][l0k[78]][`totalRadius`]);
                            G0k[22][l0k[78]][`inner`][`endFill`]();
                            G0k[22][l0k[78]][`inner`][`skinRendered`] = true;
                        }
                        if (G0k[48][l0k[78]] && G0k[48][l0k[78]][`userName`] != G0k[22][l0k[78]][`nametext`][`text`]) {
                            G0k[22][l0k[78]][`nametext`][`text`] = G0k[48][l0k[78]][`userName`];
                            I8yy.H2k(32);
                            l0k[47] = I8yy.A2k(24, 612, 4);
                            I8yy.P2k(1);
                            l0k[56] = I8yy.A2k(17, 485);
                            I8yy.P2k(60);
                            l0k[46] = I8yy.A2k(6, 7, 8, 8);
                            G0k[22][l0k[78]][`nametext`][`x`] = -G0k[22][l0k[78]][v8yy[l0k[47]]][v8yy[l0k[56]]] / l0k[46];
                            I8yy.P2k(0);
                            l0k[67] = I8yy.r2k(585, 7);
                            I8yy.P2k(12);
                            l0k[31] = I8yy.r2k(8, 7035, 6558);
                            I8yy.P2k(124);
                            l0k[22] = I8yy.r2k(119, 13, 1, 9);
                            G0k[22][l0k[78]][`nametext`][`y`] = -G0k[22][l0k[78]][v8yy[l0k[67]]][v8yy[l0k[31]]] / l0k[22];
                        }
                    }
                }
                for (l0k[39] = 0; l0k[39] < G0k[22][`length`]; l0k[39]++) {
                    if (G0k[22][l0k[39]] && !l0k[0][1][`discs`][l0k[39]]) {
                        G0k[94][`removeChild`](G0k[22][l0k[39]][`container`]);
                        G0k[22][l0k[39]] = null;
                    }
                }
                {
                    I8yy.H2k(56);
                    l0k[81] = I8yy.r2k(3, 13392, 8, 11909);
                    I8yy.H2k(138);
                    l0k[16] = I8yy.A2k(19, 7, 41, 8, 434);
                    l0k[55] = l0k[0][0][v8yy[l0k[81]]][v8yy[l0k[16]]] * l0k[9];
                    I8yy.H2k(1);
                    l0k[53] = I8yy.A2k(5952, 7440);
                    I8yy.H2k(40);
                    l0k[27] = I8yy.A2k(6, 2, 44);
                    l0k[12] = l0k[0][0][v8yy[l0k[53]]][v8yy[l0k[27]]] * l0k[9];
                    I8yy.H2k(127);
                    l0k[32] = I8yy.r2k(1505, 9, 1477, 758, 11);
                    I8yy.H2k(145);
                    l0k[52] = I8yy.A2k(7, 9, 15, 3, 1311);
                    l0k[28] = l0k[0][1][v8yy[l0k[32]]][v8yy[l0k[52]]] * l0k[9];
                    I8yy.H2k(56);
                    l0k[60] = I8yy.A2k(7, 1496, 17, 18);
                    I8yy.H2k(1);
                    l0k[93] = I8yy.r2k(560, 600);
                    l0k[68] = l0k[0][1][v8yy[l0k[60]]][v8yy[l0k[93]]] * l0k[9];
                    l0k[96] = l0k[0][0][`ball`][`a`];
                    l0k[76] = l0k[0][1][`ball`][`a`];
                    I8yy.H2k(159);
                    G0k[52][`x`] = I8yy.r2k(l0k[55], l0k[28], l0k[0][2], 1, l0k[0][2]);
                    I8yy.P2k(159);
                    G0k[52][`y`] = I8yy.A2k(l0k[12], l0k[68], l0k[0][2], 1, l0k[0][2]);
                    ;
                }
                for (l0k[92] = 0; l0k[92] < l0k[0][1][`discs`][`length`]; l0k[92]++) {
                    if (l0k[0][1][`discs`][l0k[92]]) {
                        l0k[80] = void 0;
                        l0k[77] = void 0;
                        l0k[15] = void 0;
                        l0k[88] = void 0;
                        I8yy.H2k(26);
                        l0k[36] = I8yy.r2k(7, 8, 5542, 697);
                        I8yy.H2k(1);
                        l0k[50] = I8yy.A2k(468, 507);
                        l0k[15] = l0k[0][1][v8yy[l0k[36]]][l0k[92]][v8yy[l0k[50]]] * l0k[9];
                        I8yy.H2k(12);
                        l0k[98] = I8yy.r2k(16, 164, 107);
                        I8yy.H2k(40);
                        l0k[26] = I8yy.A2k(10, 47, 3);
                        l0k[88] = l0k[0][1][v8yy[l0k[98]]][l0k[92]][v8yy[l0k[26]]] * l0k[9];
                        if (l0k[0][0][`discs`][l0k[92]]) {
                            I8yy.H2k(84);
                            l0k[20] = I8yy.r2k(15, 3, 7, 55, 21);
                            I8yy.H2k(1);
                            l0k[83] = I8yy.A2k(429, 468);
                            l0k[80] = l0k[0][0][v8yy[l0k[20]]][l0k[92]][v8yy[l0k[83]]] * l0k[9];
                            I8yy.H2k(21);
                            l0k[54] = I8yy.A2k(533, 40, 533);
                            I8yy.P2k(7);
                            l0k[49] = I8yy.A2k(6, 4, 20, 2, 20);
                            l0k[77] = l0k[0][0][v8yy[l0k[54]]][l0k[92]][v8yy[l0k[49]]] * l0k[9];
                        } else {
                            l0k[80] = l0k[15];
                            l0k[77] = l0k[88];
                        }
                        I8yy.P2k(159);
                        G0k[22][l0k[92]][`container`][`x`] = I8yy.r2k(l0k[80], l0k[15], l0k[0][2], 1, l0k[0][2]);
                        I8yy.H2k(159);
                        G0k[22][l0k[92]][`container`][`y`] = I8yy.A2k(l0k[77], l0k[88], l0k[0][2], 1, l0k[0][2]);
                        if (l0k[0][4][l0k[92]] && l0k[0][4][l0k[92]][`action`]) {
                            G0k[22][l0k[92]][`outline`][`visible`] = true;
                        } else {
                            G0k[22][l0k[92]][`outline`][`visible`] = false;
                        }
                    }
                }
                if (G0k[12][`text`] != l0k[0][1][`scores`][3][`toString`]()) {
                    G0k[12][`text`] = l0k[0][1][`scores`][3][`toString`]();
                }
                if (G0k[78][`text`] != l0k[0][1][`scores`][2][`toString`]()) {
                    G0k[78][`text`] = l0k[0][1][`scores`][2][`toString`]();
                }
                l0k[97] = 120;
                l0k[37] = 10;
                if (l0k[0][1][`fte`] > -1 && l0k[0][1][`fte`] <= l0k[37]) {
                    I8yy.H2k(163);
                    l0k[71] = I8yy.r2k(10, 10, 5, 17, 181);
                    G0k[81][`alpha`] = l0k[0][1][v8yy[l0k[71]]] / l0k[37];
                    I8yy.P2k(15);
                    l0k[89] = I8yy.r2k(640, 48, 2, 14);
                    G0k[94][`alpha`] = l0k[0][1][v8yy[l0k[89]]] / l0k[37];
                } else if (l0k[0][1][`ftu`] >= l0k[97] - l0k[37]) {
                    I8yy.P2k(1);
                    l0k[90] = I8yy.A2k(17, 18);
                    I8yy.H2k(0);
                    l0k[24] = I8yy.A2k(0, 3);
                    l0k[87] = l0k[90] - (l0k[0][1][v8yy[l0k[24]]] - (l0k[97] - l0k[37])) / l0k[37];
                    G0k[81][`alpha`] = l0k[87];
                    G0k[94][`alpha`] = l0k[87];
                } else {
                    G0k[81][`alpha`] = 1;
                    G0k[94][`alpha`] = 1;
                }
                if (l0k[0][1][`ftu`] >= -1 || l0k[0][1][`fte`] >= -1) {
                    G0k[37][`removeAll`]();
                    l0k[51] = {
                        bgAlpha: 0,
                        textY: -500
                    };
                    l0k[45] = new TWEEN[`Tween`](l0k[51],G0k[37]);
                    l0k[45][`to`]({
                        bgAlpha: 0.3
                    }, 10);
                    l0k[45][`delay`](13);
                    l0k[45][`start`](0);
                    l0k[14] = new TWEEN[`Tween`](l0k[51],G0k[37]);
                    l0k[14][`to`]({
                        textY: 0
                    }, 9);
                    l0k[14][`easing`](TWEEN[`Easing`][`Quartic`][`In`]);
                    l0k[14][`delay`](0);
                    l0k[45][`chain`](l0k[14]);
                    l0k[72] = new TWEEN[`Tween`](l0k[51],G0k[37]);
                    l0k[72][`to`]({
                        textY: -500
                    }, 10);
                    l0k[72][`easing`](TWEEN[`Easing`][`Cubic`][`In`]);
                    l0k[72][`delay`](45);
                    l0k[14][`chain`](l0k[72]);
                    l0k[21] = new TWEEN[`Tween`](l0k[51],G0k[37]);
                    l0k[21][`to`]({
                        bgAlpha: 0
                    }, 10);
                    l0k[21][`delay`](0);
                    l0k[72][`chain`](l0k[21]);
                    l0k[59] = 0;
                    if (l0k[0][1][`ftu`] > -1) {
                        l0k[59] += 90;
                        I8yy.H2k(59);
                        l0k[34] = I8yy.A2k(8, 60360, 6, 105, 12);
                        I8yy.H2k(0);
                        l0k[38] = I8yy.r2k(1, 2);
                        l0k[75] = l0k[34] - l0k[0][1][v8yy[l0k[38]]];
                        l0k[59] += l0k[75];
                    } else if (l0k[0][1][`fte`] > -1) {
                        I8yy.P2k(40);
                        l0k[30] = I8yy.r2k(17, 97, 10);
                        I8yy.H2k(133);
                        l0k[70] = I8yy.r2k(14, 5, 14);
                        l0k[73] = l0k[30] - l0k[0][1][v8yy[l0k[70]]];
                        l0k[59] += l0k[73];
                    }
                    I8yy.P2k(198);
                    l0k[86] = I8yy.r2k(l0k[0][2], l0k[59], 1, l0k[59], 1, l0k[0][2]);
                    G0k[37][`update`](l0k[86]);
                    G0k[59][`visible`] = true;
                    G0k[45][`alpha`] = l0k[51][`bgAlpha`];
                    G0k[68][`y`] = l0k[51][`textY`];
                    if (l0k[0][1][`lscr`] == 2) {
                        G0k[91][`visible`] = true;
                        G0k[90][`visible`] = false;
                    } else {
                        G0k[91][`visible`] = false;
                        G0k[90][`visible`] = true;
                    }
                    if (l0k[0][1][`scores`][l0k[0][1][`lscr`]] >= l0k[0][3][`wl`]) {
                        G0k[75][`visible`] = true;
                        G0k[34][`visible`] = false;
                    } else {
                        G0k[75][`visible`] = false;
                        G0k[34][`visible`] = true;
                    }
                } else {
                    G0k[59][`visible`] = false;
                }
                G0k[16][`do`](l0k[0][1][`ftu`]);
                if (l0k[0][1][`sts`]) {
                    for (l0k[74] = 0; l0k[74] < l0k[0][1][`sts`][`length`]; l0k[74]++) {
                        l0k[62] = l0k[0][1][`sts`][l0k[74]];
                        if (l0k[62][`pl`]) {
                            continue;
                        }
                        l0k[95] = 0.0;
                        l0k[85] = 0.0;
                        if (l0k[62][`i`] == `footBounce`) {
                            I8yy.H2k(71);
                            l0k[66] = I8yy.A2k(1, 2, 124, 19, 79);
                            l0k[85] = l0k[62][v8yy[l0k[66]]] * 0.07;
                            I8yy.H2k(190);
                            l0k[82] = I8yy.r2k(2, 20, 8, 319, 8);
                            I8yy.H2k(9);
                            l0k[69] = I8yy.A2k(5140, 15, 367);
                            I8yy.P2k(122);
                            l0k[99] = I8yy.A2k(1, 383, 6, 359, 383);
                            l0k[19] = (G0k[52][v8yy[l0k[82]]] - l0k[69]) / l0k[99] * 0.7;
                            G0k[3][`playSound`](l0k[62][`i`], l0k[19], l0k[85], l0k[0][5] + l0k[62][`f`]);
                            ;
                        }
                        if (l0k[62][`i`] == `footKick`) {
                            l0k[85] = l0k[62][`v`];
                            I8yy.P2k(79);
                            l0k[11] = I8yy.A2k(55, 7, 27, 11);
                            I8yy.H2k(38);
                            l0k[79] = I8yy.A2k(380, 1460, 16, 292, 5);
                            I8yy.H2k(180);
                            l0k[25] = I8yy.A2k(4, 375, 3, 3);
                            l0k[58] = (G0k[52][v8yy[l0k[11]]] - l0k[79]) / l0k[25] * 0.7;
                            G0k[3][`playSound`](l0k[62][`i`], l0k[58], l0k[85], l0k[0][5] + l0k[62][`f`]);
                        }
                        if (l0k[62][`i`] == `footGoal`) {
                            l0k[85] = l0k[62][`v`];
                            l0k[94] = 0;
                            if (l0k[62][`p`] == `l`) {
                                l0k[94] = -0.7;
                            } else {
                                l0k[94] = 0.7;
                            }
                            G0k[3][`playSound`](l0k[62][`i`], l0k[94], l0k[85], l0k[0][5] + l0k[62][`f`]);
                        }
                        l0k[62][`pl`] = true;
                        ;
                    }
                }
                if (l0k[0][1][`fte`] == 75 && G0k[84] < Date[`now`]() - 500) {
                    G0k[3][`playSound`](`scoreAnimation`, 0, 0.5, l0k[0][5]);
                    G0k[84] = Date[`now`]();
                }
                G0k[21][`render`](G0k[43]);
                G0k[21][`view`][`style`][`visibility`] = `inherit`;
                G0k[3][`resetSumVols`]();
            }
            ;
        }
        v2k[79][`colors`][`push`](0x90CAF9);
        v2k[79][`colors`][`push`](0x81D4FA);
        v2k[79][`colors`][`push`](0x80DEEA);
        v2k[79][`colors`][`push`](0x80CBC4);
        v2k[79][`colors`][`push`](0xA5D6A7);
        v2k[79][`colors`][`push`](0xC5E1A5);
        v2k[79][`colors`][`push`](0xE6EE9C);
        v2k[79][`colors`][`push`](0xFFF59D);
        v2k[79][`colors`][`push`](0xFFE082);
        v2k[79][`colors`][`push`](0xFFCC80);
        v2k[79][`colors`][`push`](0xFFAB91);
        v2k[79][`colors`][`push`](0xe57373);
        v2k[79][`colors`][`push`](0xF06292);
        v2k[79][`colors`][`push`](0xBA68C8);
        v2k[79][`colors`][`push`](0x9575CD);
        v2k[79][`colors`][`push`](0x7986CB);
        v2k[79][`colors`][`push`](0x64B5F6);
        v2k[79][`colors`][`push`](0x4FC3F7);
        v2k[79][`colors`][`push`](0x4DD0E1);
        v2k[79][`colors`][`push`](0x4DB6AC);
        v2k[79][`colors`][`push`](0x81C784);
        v2k[79][`colors`][`push`](0xAED581);
        v2k[79][`colors`][`push`](0xDCE775);
        v2k[79][`colors`][`push`](0xFFF176);
        v2k[79][`colors`][`push`](0xFFD54F);
        v2k[79][`colors`][`push`](0xFFB74D);
        v2k[79][`colors`][`push`](0xFF8A65);
        v2k[79][`colors`][`push`](0xef5350);
        v2k[79][`colors`][`push`](0xEC407A);
        v2k[79][`colors`][`push`](0xAB47BC);
        function x4(F8E) {
            var o0k = [arguments];
            function r7h(L8E, J8E) {
                var I0k = [arguments];
                                o0k[85] = true;
                o0k[95] = Date[`now`]();
                if (I0k[0][0] == `search` && maploadwindowsearchinput[`value`] == ``) {
                    I0k[0][0] = `hot`;
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `inherit`;
                }
                if (o0k[65] != I0k[0][0] || I0k[0][1]) {
                    while (o0k[4][`firstChild`]) {
                        o0k[4][`removeChild`](o0k[4][`firstChild`]);
                    }
                    o0k[18] = null;
                    o0k[44] = 0;
                    o0k[65] = I0k[0][0];
                    W7h(`Fetching...`);
                    o0k[4][`scrollTop`] = 0;
                    o0k[47] = [];
                }
                if (I0k[0][0] == `hot`) {
                    if (o0k[71][o0k[78]] && Date[`now`]() > o0k[71][o0k[78]][`getTime`]) {
                        I0k[8] = o0k[71][o0k[78]][`data`];
                        a7h(I0k[8]);
                        return;
                    }
                }
                if (I0k[0][0] != `search` && I0k[0][0] != `b2search`) {
                    o0k[92][`value`] = ``;
                }
                if (I0k[0][0] == `search`) {
                    o0k[64][`innerHTML`] = `BONK 1: SEARCH RESULTS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `hot`) {
                    o0k[64][`innerHTML`] = `BONK 1: TOP RATED`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `curated`) {
                    o0k[64][`innerHTML`] = `BONK 1: COMMUNITY PICKS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `curated_arrows`) {
                    o0k[64][`innerHTML`] = `B1: ARROW PICKS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `b2hotgeneral`) {
                    o0k[64][`innerHTML`] = `HOT`;
                    o0k[12][`style`][`visibility`] = `inherit`;
                } else if (I0k[0][0] == `b2hotgrapple`) {
                    o0k[64][`innerHTML`] = `B2: GRAPPLE`;
                    o0k[12][`style`][`visibility`] = `inherit`;
                } else if (I0k[0][0] == `b2hotdeatharrows`) {
                    o0k[64][`innerHTML`] = `DEATH ARROWS`;
                    o0k[12][`style`][`visibility`] = `inherit`;
                } else if (I0k[0][0] == `b2fresh`) {
                    o0k[64][`innerHTML`] = `B2: FRESH`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `b2favs`) {
                    o0k[64][`innerHTML`] = `MY FAVS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `b2own`) {
                    o0k[64][`innerHTML`] = `MY MAPS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                } else if (I0k[0][0] == `b2picks`) {
                    o0k[64][`innerHTML`] = `PICKS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                }
                if (I0k[0][0] == `b2search`) {
                    o0k[64][`innerHTML`] = `SEARCH RESULTS`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                    I0k[4] = ``;
                    I0k[7] = ``;
                    I0k[5] = ``;
                    if (o0k[57] == `BEST`) {
                        I0k[4] = `best`;
                    } else {
                        I0k[4] = `newest`;
                    }
                    if (o0k[21]) {
                        I0k[7] = `true`;
                    } else {
                        I0k[7] = `false`;
                    }
                    if (o0k[66]) {
                        I0k[5] = `true`;
                    } else {
                        I0k[5] = `false`;
                    }
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_getsearch.php`, {
                        searchauthor: I0k[7],
                        searchmapname: I0k[5],
                        searchsort: I0k[4],
                        searchstring: maploadwindowsearchinput[`value`],
                        startingfrom: o0k[44] * 32
                    })[`done`](function(h8E, X8E) {
                        var F0k = [arguments];
                                                o0k[22] = true;
                        if (F0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (F0k[0][0][`r`] == `success`) {
                            o2h(F0k[0][0]);
                            o0k[88] = F0k[0][0][`more`];
                        }
                    })[`fail`](function(m8E, Q8E, q8E) {
                        var L0k = [arguments];
                    });
                } else if (I0k[0][0] == `b2fresh`) {
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_getfresh.php`, {
                        startingfrom: o0k[44] * 32
                    })[`done`](function(S8E, w8E) {
                        var J0k = [arguments];
                                                o0k[22] = true;
                        if (J0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (J0k[0][0][`r`] == `success`) {
                            o2h(J0k[0][0]);
                            o0k[88] = J0k[0][0][`more`];
                        }
                    })[`fail`](function(z8E, n8E, y8E) {
                        I8yy.g9b();
                        var h0k = [arguments];
                    });
                } else if (I0k[0][0] == `b2favs`) {
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_getfave.php`, {
                        token: o0k[7],
                        startingfrom: o0k[44] * 32
                    })[`done`](function(p8E, O8E) {
                        var X0k = [arguments];
                                                o0k[22] = true;
                        if (X0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (X0k[0][0][`r`] == `success`) {
                            n2h(X0k[0][0]);
                            o0k[88] = X0k[0][0][`more`];
                        }
                    })[`fail`](function(W8E, Z8E, x8E) {
                        I8yy.g9b();
                        var m0k = [arguments];
                    });
                } else if (I0k[0][0] == `b2hotedits`) {
                    I8yy.H2k(0);
                    I0k[2] = I8yy.A2k(o0k[78], 1);
                    I8yy.H2k(79);
                    I0k[78] = I8yy.r2k(54576, 13, 3397, 54576);
                    I8yy.P2k(0);
                    I0k[70] = I8yy.r2k(3409, 3);
                    I0k[3] = v8yy[I0k[78]] + I0k[2] + v8yy[I0k[70]];
                    o0k[22] = false;
                    $[`post`](I0k[3])[`done`](function(M8E, s8E) {
                        var Q0k = [arguments];
                                                I8yy.w9b();
                        o0k[22] = true;
                        Q0k[0][0] = JSON[`parse`](Q0k[0][0]);
                        if (Q0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (Q0k[0][0][`r`] == `success`) {
                            o0k[91] = Q0k[0][0];
                            O2h(o0k[91], 0);
                        }
                    })[`fail`](function(c8E, D8E, Y8E) {
                        I8yy.w9b();
                        var q0k = [arguments];
                    });
                } else if (I0k[0][0] == `b2hotgeneral` || I0k[0][0] == `b2hotgrapple` || I0k[0][0] == `b2hotdeatharrows`) {
                    I8yy.H2k(0);
                    I0k[9] = I8yy.A2k(o0k[78], 1);
                    I0k[1] = ``;
                    I0k[11] = `b`;
                    if (I0k[0][0] == `b2hotgeneral`) {
                        I0k[11] = `hot`;
                    }
                    if (I0k[0][0] == `b2hotdeatharrows`) {
                        I0k[11] = `ard`;
                    }
                    if (I0k[0][0] == `b2hotgrapple`) {
                        I0k[11] = `sp`;
                    }
                    I8yy.P2k(17);
                    I0k[76] = I8yy.A2k(10, 36, 10, 3397);
                    I8yy.P2k(0);
                    I0k[12] = I8yy.r2k(310, 3104);
                    I8yy.P2k(24);
                    I0k[90] = I8yy.r2k(3411, 1, 7, 3419, 3426);
                    I0k[1] = v8yy[I0k[76]] + I0k[9] + v8yy[I0k[12]] + I0k[11] + v8yy[I0k[90]];
                    o0k[22] = false;
                    $[`get`](I0k[1])[`done`](function(N8E, V8E) {
                        var S0k = [arguments];
                                                o0k[22] = true;
                        I8yy.w9b();
                        S0k[0][0] = JSON[`parse`](S0k[0][0]);
                        if (S0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (S0k[0][0][`r`] == `success`) {
                            o0k[13] = S0k[0][0];
                            L2h(o0k[13], 0);
                        }
                    })[`fail`](function(g8E, U8E, B8E) {
                        I8yy.g9b();
                        var w0k = [arguments];
                    });
                } else if (I0k[0][0] == `b2picks`) {
                    I0k[79] = `https://bonk2.io/scripts/hotmaps/picks.txt`;
                    o0k[22] = false;
                    $[`get`](I0k[79])[`done`](function(a8E, t8E) {
                        var z0k = [arguments];
                        I8yy.w9b();
                                                o0k[22] = true;
                        z0k[0][0] = JSON[`parse`](z0k[0][0]);
                        if (z0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (z0k[0][0][`r`] == `success`) {
                            o0k[36] = z0k[0][0];
                            s2h(o0k[36], 0);
                        }
                    })[`fail`](function(E8E, R8E, j3E) {
                        I8yy.w9b();
                        var n0k = [arguments];
                    });
                } else if (I0k[0][0] == `b2own`) {
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_getown.php`, {
                        token: o0k[7],
                        startingfrom: o0k[44] * 30
                    })[`done`](function(k3E, f3E) {
                        var y0k = [arguments];
                                                o0k[22] = true;
                        I8yy.w9b();
                        if (y0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (y0k[0][0][`r`] == `success`) {
                            x2h(y0k[0][0]);
                            o0k[88] = y0k[0][0][`more`];
                        }
                    })[`fail`](function(G3E, T3E, K3E) {
                        var p0k = [arguments];
                    });
                } else if (I0k[0][0] == `favs`) {
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_b1_getfave.php`, {
                        token: o0k[7],
                        startingfrom: o0k[44] * 32
                    })[`done`](function(r3E, A3E) {
                        I8yy.w9b();
                        var O0k = [arguments];
                                                o0k[22] = true;
                        if (O0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (O0k[0][0][`r`] == `success`) {
                            o0k[88] = true;
                            O0k[0][0][`maps`] = U7h(O0k[0][0][`maps`]);
                            O0k[2] = -1256501403;
                            O0k[3] = 25284541;
                            O0k[8] = 2;
                            for (O0k[7] = 1; I8yy.m1f(O0k[7].toString(), O0k[7].toString().length, 72223) !== O0k[2]; O0k[7]++) {
                                a7h(O0k[0][0][`playersLeft`]);
                                O0k[8] += 2;
                            }
                            if (I8yy.d1f(O0k[8].toString(), O0k[8].toString().length, 94140) !== O0k[3]) {
                                a7h(O0k[0][0][`maps`]);
                            }
                        }
                    })[`fail`](function(P3E, H3E, v3E) {
                        I8yy.w9b();
                        var W0k = [arguments];
                    });
                } else if (I0k[0][0] == `authorsown`) {
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_b1_getown.php`, {
                        token: o0k[7],
                        startingfrom: o0k[44] * 32
                    })[`done`](function(i3E, u3E) {
                        I8yy.g9b();
                        var Z0k = [arguments];
                                                o0k[22] = true;
                        if (Z0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (Z0k[0][0][`r`] == `success`) {
                            o0k[88] = true;
                            Z0k[0][0][`maps`] = U7h(Z0k[0][0][`maps`]);
                            a7h(Z0k[0][0][`maps`]);
                        }
                    })[`fail`](function(b3E, d3E, e3E) {
                        var x0k = [arguments];
                    });
                } else if (I0k[0][0] == `hot`) {
                    o0k[22] = false;
                    $[`post`](`https://bonk2.io/scripts/map_b1_getbest.php`, {
                        startingfrom: o0k[44] * 32
                    })[`done`](function(C3E, l3E) {
                        I8yy.g9b();
                        var M0k = [arguments];
                                                o0k[22] = true;
                        if (M0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (M0k[0][0][`r`] == `success`) {
                            o0k[88] = true;
                            M0k[0][0][`maps`] = U7h(M0k[0][0][`maps`]);
                            a7h(M0k[0][0][`maps`]);
                        }
                    })[`fail`](function(o3E, I3E, F3E) {
                        I8yy.w9b();
                        var s0k = [arguments];
                    });
                } else if (I0k[0][0] == `search`) {
                    o0k[22] = false;
                    I0k[95] = {};
                    if (o0k[57] == `BEST`) {
                        I0k[95][`searchsort`] = `ctr`;
                    } else {
                        I0k[95][`searchsort`] = `id`;
                    }
                    if (o0k[21]) {
                        I0k[95][`searchauthor`] = `true`;
                    } else {
                        I0k[95][`searchauthor`] = ``;
                    }
                    if (o0k[66]) {
                        I0k[95][`searchmapname`] = `true`;
                    } else {
                        I0k[77] = -1558184341;
                        I0k[61] = 427928207;
                        I0k[74] = 2;
                        for (I0k[59] = 1; I8yy.d1f(I0k[59].toString(), I0k[59].toString().length, 38780) !== I0k[77]; I0k[59]++) {
                            I0k[95][`searchmapname`] = ``;
                            I0k[74] += 2;
                        }
                        if (I8yy.d1f(I0k[74].toString(), I0k[74].toString().length, 92349) !== I0k[61]) {
                            I0k[95][v8yy[9160]] = ``;
                        }
                    }
                    I8yy.P2k(5);
                    I0k[95][`startingfrom`] = I8yy.A2k(o0k[44], 32);
                    I0k[95][`searchstring`] = o0k[92][`value`];
                    $[`post`](`https://bonk2.io/scripts/map_b1_getsearch.php`, I0k[95])[`done`](function(L3E, J3E) {
                        var c0k = [arguments];
                                                I8yy.g9b();
                        o0k[22] = true;
                        if (c0k[0][0][`r`] != `success`) {
                            W7h(`Fetch error`);
                        } else if (c0k[0][0][`r`] == `success`) {
                            o0k[88] = true;
                            c0k[0][0][`maps`] = U7h(c0k[0][0][`maps`]);
                            a7h(c0k[0][0][`maps`]);
                        }
                    })[`fail`](function(h3E, X3E, m3E) {
                        var D0k = [arguments];
                    });
                } else if (I0k[0][0] == `curated`) {
                    I0k[86] = {};
                    for (I0k[60] = 0; I0k[60] < v2k[99][`mapStrings`][`length`]; I0k[60]++) {
                        I0k[48] = v2k[99][`mapStrings`][I0k[60]][`split`](`,`);
                        I8yy.H2k(60);
                        I0k[53] = I8yy.r2k(8, 936, 31, 62);
                        I0k[86][v8yy[I0k[53]] + I0k[60]] = I0k[48][1];
                        I8yy.P2k(0);
                        I0k[15] = I8yy.A2k(705, 705);
                        I0k[86][v8yy[I0k[15]] + I0k[60]] = I0k[48][2];
                        I8yy.P2k(1);
                        I0k[47] = I8yy.r2k(17544, 19006);
                        I0k[86][v8yy[I0k[47]] + I0k[60]] = I0k[48][3];
                        I8yy.H2k(82);
                        I0k[24] = I8yy.r2k(352, 17, 13, 72626, 17);
                        I0k[86][v8yy[I0k[24]] + I0k[60]] = I0k[48][4];
                    }
                    I0k[86][`cant`] = v2k[99][`mapStrings`][`length`];
                    I0k[86][`getrule`] = `curated`;
                    a7h(I0k[86]);
                }
            }
                        o0k[6] = this;
            this[`visible`] = false;
            o0k[1] = document[`getElementById`](`maploadwindow`);
            o0k[2] = document[`getElementById`](`maploadwindowcontainer`);
            o0k[3] = document[`getElementById`](`maploadwindow_close`);
            o0k[9] = document[`getElementById`](`maploadwindowtoptext`);
            o0k[4] = document[`getElementById`](`maploadwindowmapscontainer`);
            o0k[4][`onscroll`] = y2h;
            o0k[7] = o0k[0][0];
            o0k[8] = document[`getElementById`](`maploadtypedropdown`);
            o0k[64] = document[`getElementById`](`maploadtypedropdowntitle`);
            o0k[32] = document[`getElementById`](`maploadtypedropdownoption1`);
            o0k[54] = document[`getElementById`](`maploadtypedropdownoption2`);
            o0k[17] = document[`getElementById`](`maploadtypedropdownoption3`);
            o0k[52] = document[`getElementById`](`maploadtypedropdownoption4`);
            o0k[74] = document[`getElementById`](`maploadtypedropdownoption7`);
            o0k[94] = document[`getElementById`](`maploadtypedropdownoption8`);
            o0k[15] = document[`getElementById`](`maploadtypedropdownoption_hotdeatharrows`);
            o0k[38] = document[`getElementById`](`maploadtypedropdownoption10`);
            o0k[35] = document[`getElementById`](`maploadtypedropdownoption11`);
            o0k[83] = document[`getElementById`](`maploadtypedropdownarrow`);
            o0k[12] = document[`getElementById`](`maploadwindowhotnessslider`);
            o0k[46] = document[`getElementById`](`maploadwindowhotnesssliderinput`);
            o0k[27] = document[`getElementById`](`maploadwindowstatustext`);
            o0k[92] = document[`getElementById`](`maploadwindowsearchinput`);
            o0k[37] = document[`getElementById`](`maploadwindowsearchbutton`);
            o0k[28] = document[`getElementById`](`maploadwindowsearchoptions`);
            function b7h(Q3E, q3E, S3E, w3E) {
                var Y0k = [arguments];
                                Y0k[8] = document[`createElement`](`div`);
                if (Y0k[0][3]) {
                    Y0k[8][`classList`][`add`](`maploadwindowbarcontainer_picks`);
                } else {
                    Y0k[8][`classList`][`add`](`maploadwindowbarcontainer`);
                }
                if (Y0k[0][1] > 0 || Y0k[0][2] > 0) {
                    Y0k[9] = document[`createElement`](`div`);
                    Y0k[9][`classList`][`add`](`maploadwindowbarcontainer_left`);
                    Y0k[3] = document[`createElement`](`div`);
                    Y0k[3][`classList`][`add`](`maploadwindowbarcontainer_right`);
                    I8yy.H2k(211);
                    Y0k[6] = I8yy.r2k(Y0k[0][1], Y0k[0][2], Y0k[0][1]);
                    I8yy.P2k(0);
                    Y0k[7] = I8yy.r2k(Y0k[6], 0.15);
                    I8yy.H2k(5);
                    Y0k[6] *= I8yy.A2k(Y0k[7], Y0k[7]);
                    Y0k[6] = Math[`min`](1, Y0k[6]);
                    I8yy.H2k(125);
                    Y0k[76] = I8yy.A2k(4, 120, 18, 74, 2);
                    I8yy.P2k(212);
                    Y0k[73] = I8yy.A2k(1, 17775, 122448, 2, 7);
                    Y0k[9][`style`][`width`] = Math[`ceil`](Y0k[6] * Y0k[76]) + v8yy[Y0k[73]];
                    I8yy.H2k(114);
                    Y0k[85] = I8yy.A2k(17, 16, 5, 5);
                    I8yy.H2k(213);
                    Y0k[87] = I8yy.A2k(1100, 1, 19, 18, 1001);
                    I8yy.H2k(0);
                    Y0k[55] = I8yy.r2k(1962, 13);
                    Y0k[3][`style`][`width`] = (Y0k[85] - Y0k[6]) * Y0k[87] + v8yy[Y0k[55]];
                    Y0k[8][`appendChild`](Y0k[9]);
                    Y0k[8][`appendChild`](Y0k[3]);
                } else {
                    Y0k[1] = document[`createElement`](`div`);
                    Y0k[1][`classList`][`add`](`maploadwindowbarcontainer_novotes`);
                    Y0k[8][`appendChild`](Y0k[1]);
                }
                Y0k[5] = document[`createElement`](`span`);
                Y0k[5][`classList`][`add`](`maploadwindowtext`);
                if (Y0k[0][3]) {
                    Y0k[5][`classList`][`add`](`maploadwindowtextvotediff_picks`);
                } else {
                    Y0k[5][`classList`][`add`](`maploadwindowtextvotediff`);
                }
                Y0k[2] = Y0k[0][1];
                if (!isNaN(Y0k[2])) {
                    if (Y0k[2] > 100000) {
                        Y0k[2] /= 1000;
                        Y0k[2] = Math[`floor`](Y0k[2]);
                        I8yy.H2k(31);
                        Y0k[79] = I8yy.A2k(17, 53392, 904633, 18);
                        Y0k[2] = Y0k[2] + v8yy[Y0k[79]];
                    } else if (Y0k[2] > 1000) {
                        Y0k[2] /= 100;
                        Y0k[2] = Math[`floor`](Y0k[2]);
                        Y0k[2] /= 10;
                        I8yy.P2k(32);
                        Y0k[62] = I8yy.r2k(24, 3347, 14);
                        Y0k[2] = Y0k[2] + v8yy[Y0k[62]];
                    }
                    I8yy.H2k(0);
                    Y0k[94] = I8yy.r2k(822, 2466);
                    I8yy.P2k(1);
                    Y0k[97] = I8yy.r2k(33588, 35454);
                    Y0k[86] = v8yy[Y0k[94]] + Y0k[2] + v8yy[Y0k[97]];
                    Y0k[5][`textContent`] = Y0k[86];
                }
                Y0k[75] = Y0k[0][2];
                if (!isNaN(Y0k[75])) {
                    if (Y0k[75] > 100000) {
                        Y0k[75] /= 1000;
                        Y0k[75] = Math[`floor`](Y0k[75]);
                        I8yy.H2k(9);
                        Y0k[96] = I8yy.r2k(19882, 7, 3317);
                        Y0k[75] = Y0k[75] + v8yy[Y0k[96]];
                    } else if (Y0k[75] > 1000) {
                        Y0k[75] /= 100;
                        Y0k[75] = Math[`floor`](Y0k[75]);
                        Y0k[75] /= 10;
                        I8yy.H2k(9);
                        Y0k[47] = I8yy.A2k(53664, 17, 3353);
                        Y0k[75] = Y0k[75] + v8yy[Y0k[47]];
                    }
                    I8yy.H2k(168);
                    Y0k[23] = I8yy.r2k(12, 2895, 978, 9, 15);
                    Y0k[95] = v8yy[Y0k[23]] + Y0k[75];
                    Y0k[5][`textContent`] += Y0k[95];
                }
                Y0k[0][0][`appendChild`](Y0k[5]);
                I8yy.w9b();
                Y0k[0][0][`appendChild`](Y0k[8]);
            }
            function l7h() {
                var N0k = [arguments];
                                o0k[32][`style`][`display`] = `none`;
                o0k[54][`style`][`display`] = `none`;
                I8yy.g9b();
                o0k[17][`style`][`display`] = `none`;
                o0k[52][`style`][`display`] = `none`;
                o0k[74][`style`][`display`] = `none`;
                o0k[94][`style`][`display`] = `none`;
                o0k[38][`style`][`display`] = `none`;
                o0k[35][`style`][`display`] = `none`;
                o0k[15][`style`][`display`] = `none`;
                o0k[1][`onclick`] = null;
            }
            o0k[53] = document[`getElementById`](`maploadwindowsearchoptions_sortby`);
            o0k[43] = document[`getElementById`](`maploadwindowsearchoptions_namelabel`);
            o0k[45] = document[`getElementById`](`maploadwindowsearchoptions_authorlabel`);
            function a7h(z3E) {
                var V0k = [arguments];
                                G7h();
                V0k[0][0][`cant`] = parseInt(V0k[0][0][`cant`]);
                if (o0k[18]) {
                    o0k[18][`onclick`] = null;
                    o0k[4][`removeChild`](o0k[18]);
                    o0k[18] = null;
                }
                I8yy.w9b();
                if (V0k[0][0][`cant`] == 0 && o0k[44] == 0) {
                    W7h(`No Maps`);
                }
                for (V0k[44] = 0; V0k[44] < V0k[0][0][`cant`]; V0k[44]++) {
                    V0k[5] = V0k[44];
                    if (V0k[0][0][`getrule`] == `hot` || V0k[0][0][`getrule`] == `curated`) {
                        I8yy.H2k(5);
                        V0k[5] += I8yy.A2k(o0k[44], o0k[58]);
                    }
                    if (V0k[0][0][`getrule`] != `curated` && (V0k[5] >= (o0k[44] + 1) * o0k[58] || V0k[5] >= V0k[0][0][`cant`])) {
                        break;
                    }
                    try {
                        I8yy.H2k(1);
                        V0k[73] = I8yy.A2k(13, 1422);
                        V0k[9] = V0k[0][0][v8yy[V0k[73]] + V0k[5]];
                        V0k[1] = T[`fromOldString`](V0k[9]);
                        I8yy.H2k(214);
                        V0k[40] = I8yy.A2k(14, 310, 20, 155, 610);
                        V0k[1][`m`][`n`] = V0k[0][0][v8yy[V0k[40]] + V0k[5]];
                        I8yy.P2k(215);
                        V0k[99] = I8yy.r2k(195996, 14100, 14, 13, 7);
                        V0k[1][`m`][`a`] = V0k[0][0][v8yy[V0k[99]] + V0k[5]];
                        V0k[1][`m`][`dbid`] = parseInt(V0k[0][0][`mapid` + V0k[5]]);
                        I8yy.H2k(9);
                        V0k[43] = I8yy.A2k(89460, 4, 22720);
                        V0k[1][`m`][`date`] = V0k[0][0][v8yy[V0k[43]] + V0k[5]];
                        V0k[1][`m`][`vu`] = parseInt(V0k[0][0][`thumbsup` + V0k[5]]);
                        V0k[1][`m`][`vd`] = parseInt(V0k[0][0][`thumbsdown` + V0k[5]]);
                        V0k[1][`m`][`dbv`] = 1;
                        V0k[1][`m`][`pub`] = false;
                        V0k[3] = document[`createElement`](`div`);
                        V0k[3][`classList`][`add`](`maploadwindowmapdiv`);
                        V0k[3][`classList`][`add`](`maploadwindowmapdivb1`);
                        o0k[47][`push`]({
                            map: V0k[1],
                            div: V0k[3]
                        });
                        V0k[7] = document[`createElement`](`span`);
                        V0k[7][`classList`][`add`](`maploadwindowtext`);
                        V0k[7][`classList`][`add`](`maploadwindowtextname`);
                        V0k[7][`textContent`] = V0k[1][`m`][`n`];
                        V0k[2] = document[`createElement`](`span`);
                        V0k[2][`classList`][`add`](`maploadwindowtext`);
                        V0k[2][`classList`][`add`](`maploadwindowtextauthor`);
                        V0k[2][`textContent`] = V0k[1][`m`][`a`];
                        V0k[4] = document[`createElement`](`span`);
                        V0k[4][`classList`][`add`](`maploadwindowtext`);
                        V0k[4][`classList`][`add`](`maploadwindowtextage`);
                        V0k[8] = ``;
                        if (V0k[0][0][`getrule`] != `curated`) {
                            V0k[8] = moment(V0k[1][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                        }
                        V0k[4][`textContent`] = V0k[8];
                        V0k[58] = document[`createElement`](`span`);
                        V0k[58][`classList`][`add`](`maploadwindowtext`);
                        V0k[58][`classList`][`add`](`maploadwindowtextvotediff`);
                        V0k[60] = V0k[1][`m`][`vu`];
                        V0k[67] = V0k[1][`m`][`vd`];
                        if (!isNaN(V0k[60]) && !isNaN(V0k[67])) {
                            if (V0k[60] > 100000) {
                                V0k[60] /= 1000;
                                V0k[60] = Math[`floor`](V0k[60]);
                                I8yy.H2k(56);
                                V0k[71] = I8yy.A2k(20, 3349, 10, 2);
                                V0k[60] = V0k[60] + v8yy[V0k[71]];
                            } else if (V0k[60] > 1000) {
                                V0k[60] /= 100;
                                V0k[60] = Math[`floor`](V0k[60]);
                                V0k[60] /= 10;
                                I8yy.H2k(118);
                                V0k[31] = I8yy.r2k(50040, 1, 15, 53392);
                                V0k[60] = V0k[60] + v8yy[V0k[31]];
                            }
                            if (V0k[67] > 100000) {
                                V0k[67] /= 1000;
                                V0k[67] = Math[`floor`](V0k[67]);
                                I8yy.H2k(89);
                                V0k[29] = I8yy.r2k(20, 5563, 16, 16685, 3334);
                                V0k[67] = V0k[67] + v8yy[V0k[29]];
                            } else if (V0k[67] > 1000) {
                                V0k[67] /= 100;
                                V0k[67] = Math[`floor`](V0k[67]);
                                V0k[67] /= 10;
                                I8yy.H2k(122);
                                V0k[11] = I8yy.A2k(14958, 3324, 18, 3335, 2);
                                V0k[67] = V0k[67] + v8yy[V0k[11]];
                            }
                            I8yy.P2k(68);
                            V0k[52] = I8yy.A2k(42744, 3, 6, 894318, 7);
                            I8yy.P2k(40);
                            V0k[36] = I8yy.r2k(2, 2772, 693);
                            V0k[10] = v8yy[V0k[52]] + V0k[60] + v8yy[V0k[36]] + V0k[67];
                            V0k[58][`textContent`] = V0k[10];
                        }
                        if (V0k[0][0][`getrule`] != `curated`) {
                            V0k[42] = document[`createElement`](`div`);
                            V0k[42][`classList`][`add`](`maploadwindowbarcontainer`);
                            V0k[61] = document[`createElement`](`div`);
                            V0k[61][`classList`][`add`](`maploadwindowbarcontainer_left`);
                            V0k[77] = document[`createElement`](`div`);
                            V0k[77][`classList`][`add`](`maploadwindowbarcontainer_right`);
                            I8yy.P2k(16);
                            V0k[76] = I8yy.A2k(18, 18, 37, 10);
                            I8yy.H2k(167);
                            V0k[80] = I8yy.A2k(6, 68, 2, 1282);
                            I8yy.H2k(0);
                            V0k[64] = I8yy.r2k(118, 7);
                            I8yy.P2k(110);
                            V0k[34] = I8yy.r2k(1357, 10, 1361, 1371);
                            I8yy.H2k(0);
                            V0k[21] = I8yy.A2k(116, 9);
                            I8yy.P2k(0);
                            V0k[97] = I8yy.r2k(1387, 4);
                            V0k[82] = V0k[1][v8yy[V0k[76]]][v8yy[V0k[80]]] / (V0k[1][v8yy[V0k[64]]][v8yy[V0k[34]]] + V0k[1][v8yy[V0k[21]]][v8yy[V0k[97]]]);
                            V0k[82] -= 0.7;
                            V0k[82] /= 0.2;
                            V0k[82] = Math[`min`](Math[`max`](V0k[82], 0.0), 1.0);
                            I8yy.H2k(113);
                            V0k[65] = I8yy.r2k(11, 85, 33, 5);
                            I8yy.P2k(40);
                            V0k[53] = I8yy.A2k(13, 1878, 110);
                            V0k[61][`style`][`width`] = Math[`ceil`](V0k[82] * V0k[65]) + v8yy[V0k[53]];
                            I8yy.H2k(32);
                            V0k[41] = I8yy.r2k(28, 10, 19);
                            I8yy.P2k(60);
                            V0k[25] = I8yy.r2k(15, 113, 400, 800);
                            I8yy.P2k(1);
                            V0k[32] = I8yy.A2k(35550, 37525);
                            V0k[77][`style`][`width`] = (V0k[41] - V0k[82]) * V0k[25] + v8yy[V0k[32]];
                            V0k[42][`appendChild`](V0k[61]);
                            V0k[42][`appendChild`](V0k[77]);
                            V0k[3][`appendChild`](V0k[42]);
                        }
                        V0k[3][`appendChild`](V0k[7]);
                        V0k[3][`appendChild`](V0k[2]);
                        V0k[3][`appendChild`](V0k[4]);
                        V0k[3][`appendChild`](V0k[58]);
                        o0k[4][`appendChild`](V0k[3]);
                        V0k[3][`map`] = V0k[1];
                        V0k[3][`onclick`] = function() {
                            var g0k = [arguments];
                                                        m7h(`mapChosen`, this[`map`]);
                            o0k[6][`hide`]();
                            v2k[79][`bcs`]();
                        }
                        ;
                        V0k[3][`onmouseenter`] = C7h;
                    } catch (y1T) {}
                }
            }
            o0k[82] = document[`getElementById`](`maploadwindowsearchoptions_nameindicator`);
            o0k[26] = document[`getElementById`](`maploadwindowsearchoptions_authorindicator`);
            o0k[19] = new Howl({
                src: GameResources[`soundStrings`][`listRowHover`],
                volume: 0.25
            });
            v2k[79][`setButtonSounds`]([o0k[37], o0k[64], o0k[32], o0k[54], o0k[17], o0k[52], o0k[74], o0k[94], o0k[38], o0k[35], o0k[15]]);
            function q7h() {
                var U0k = [arguments];
                                I8yy.w9b();
                if (o0k[65][`substr`](0, 2) == `b2`) {
                    r7h(`b2search`, true);
                } else {
                    r7h(`search`, true);
                }
            }
            function U7h(n3E) {
                I8yy.w9b();
                var B0k = [arguments];
                                I8yy.H2k(123);
                B0k[6] = I8yy.A2k(3, 10, 60894, 3, 57507);
                B0k[5] = v8yy[B0k[6]] + B0k[0][0];
                if (!B0k[5]) {
                    B0k[5] = location[`href`];
                }
                B0k[9] = B0k[5][`indexOf`](`?`);
                B0k[1] = B0k[5][`indexOf`](`#`);
                if (B0k[1] == -1 && B0k[9] == -1) {
                    return {};
                }
                if (B0k[1] == -1) {
                    B0k[1] = B0k[5][`length`];
                }
                B0k[3] = B0k[9] == -1 || B0k[1] == B0k[9] + 1 ? B0k[5][`substring`](B0k[1]) : B0k[5][`substring`](B0k[9] + 1, B0k[1]);
                B0k[2] = {};
                B0k[3][`split`](`&`)[`forEach`](function(y3E) {
                    I8yy.g9b();
                    var a0k = [arguments];
                                        if (!a0k[0][0]) {
                        return;
                    }
                    a0k[0][0] = a0k[0][0][`split`](`+`)[`join`](` `);
                    a0k[3] = a0k[0][0][`indexOf`](`=`);
                    a0k[8] = a0k[3] > -1 ? a0k[0][0][`substr`](0, a0k[3]) : a0k[0][0];
                    a0k[5] = ``;
                    try {
                        a0k[5] = a0k[3] > -1 ? decodeURIComponent(a0k[0][0][`substr`](a0k[3] + 1)) : ``;
                    } catch (q2h) {}
                    a0k[7] = a0k[8][`indexOf`](`[`);
                    if (a0k[7] == -1) {
                        B0k[2][decodeURIComponent(a0k[8])] = a0k[5];
                    } else {
                        a0k[6] = a0k[8][`indexOf`](`]`, a0k[7]);
                        a0k[1] = decodeURIComponent(a0k[8][`substring`](a0k[7] + 1, a0k[6]));
                        a0k[8] = decodeURIComponent(a0k[8][`substring`](0, a0k[7]));
                        if (!B0k[2][a0k[8]]) {
                            B0k[2][a0k[8]] = [];
                        }
                        if (!a0k[1]) {
                            B0k[2][a0k[8]][`push`](a0k[5]);
                        } else {
                            B0k[2][a0k[8]][a0k[1]] = a0k[5];
                        }
                    }
                });
                return B0k[2];
            }
            o0k[67] = [];
            o0k[41] = [];
            o0k[55] = true;
            o0k[78] = 3;
            o0k[34] = [1, 10000, 25000, 100000, 500000, 8000000, 5000000000];
            I8yy.H2k(13);
            o0k[40] = [I8yy.A2k(1000, 60, 1), I8yy.A2k(1000, 60, 3), I8yy.r2k(1000, 60, 7), I8yy.r2k(1000, 60, 13), I8yy.A2k(1000, 60, 30), I8yy.r2k(1000, 60, 56), I8yy.r2k(1000, 60, 90)];
            o0k[71] = [];
            o0k[47] = [];
            o0k[13] = {};
            function o2h(p3E) {
                var t0k = [arguments];
                                I8yy.w9b();
                G7h();
                if (t0k[0][0][`maps`][`length`] == 0 && o0k[44] == 0) {
                    W7h(`No Maps`);
                }
                for (t0k[76] = 0; t0k[76] < t0k[0][0][`maps`][`length`]; t0k[76]++) {
                    try {
                        t0k[3] = T[`mergeIntoNewMap`](T[`decodeFromDatabase`](t0k[0][0][`maps`][t0k[76]][`leveldata`]));
                        t0k[3][`m`][`n`] = t0k[0][0][`maps`][t0k[76]][`name`];
                        t0k[3][`m`][`a`] = t0k[0][0][`maps`][t0k[76]][`authorname`];
                        t0k[3][`m`][`dbid`] = parseInt(t0k[0][0][`maps`][t0k[76]][`id`]);
                        t0k[3][`m`][`date`] = t0k[0][0][`maps`][t0k[76]][`publisheddate`];
                        t0k[3][`m`][`dbv`] = 2;
                        t0k[3][`m`][`vu`] = t0k[0][0][`maps`][t0k[76]][`vu`];
                        t0k[3][`m`][`vd`] = t0k[0][0][`maps`][t0k[76]][`vd`];
                        I8yy.P2k(42);
                        t0k[52] = I8yy.A2k(39, 11, 298);
                        I8yy.P2k(66);
                        t0k[38] = I8yy.A2k(4, 2, 1432, 3, 7175);
                        I8yy.P2k(148);
                        t0k[71] = I8yy.r2k(171, 10, 1, 17);
                        t0k[3][`m`][`pub`] = parseInt(t0k[0][0][v8yy[t0k[52]]][t0k[76]][v8yy[t0k[38]]]) == t0k[71];
                        t0k[1] = document[`createElement`](`div`);
                        t0k[1][`classList`][`add`](`maploadwindowmapdiv`);
                        o0k[47][`push`]({
                            map: t0k[3],
                            div: t0k[1]
                        });
                        t0k[8] = document[`createElement`](`span`);
                        t0k[8][`classList`][`add`](`maploadwindowtext`);
                        t0k[8][`classList`][`add`](`maploadwindowtextname`);
                        t0k[8][`textContent`] = t0k[3][`m`][`n`];
                        t0k[4] = document[`createElement`](`span`);
                        t0k[4][`classList`][`add`](`maploadwindowtext`);
                        t0k[4][`classList`][`add`](`maploadwindowtextauthor`);
                        t0k[4][`textContent`] = t0k[3][`m`][`a`];
                        t0k[9] = document[`createElement`](`span`);
                        t0k[9][`classList`][`add`](`maploadwindowtext`);
                        t0k[9][`classList`][`add`](`maploadwindowtextmode`);
                        t0k[5] = `Any Mode`;
                        if (v2k[10][`modes`][t0k[3][`m`][`mo`]] && v2k[10][`modes`][t0k[3][`m`][`mo`]][`editorCanTarget`]) {
                            t0k[5] = v2k[10][`modes`][t0k[3][`m`][`mo`]][`lobbyName`];
                        }
                        t0k[9][`textContent`] = t0k[5];
                        t0k[1][`appendChild`](t0k[9]);
                        t0k[6] = document[`createElement`](`span`);
                        t0k[6][`classList`][`add`](`maploadwindowtext`);
                        t0k[6][`classList`][`add`](`maploadwindowtextage`);
                        t0k[7] = ``;
                        t0k[7] = moment(t0k[3][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                        t0k[6][`textContent`] = t0k[7];
                        b7h(t0k[1], t0k[3][`m`][`vu`], t0k[3][`m`][`vd`]);
                        t0k[1][`appendChild`](t0k[8]);
                        t0k[1][`appendChild`](t0k[4]);
                        t0k[1][`appendChild`](t0k[6]);
                        o0k[4][`appendChild`](t0k[1]);
                        t0k[1][`map`] = t0k[3];
                        t0k[1][`onclick`] = function() {
                            var E0k = [arguments];
                                                        m7h(`mapChosen`, this[`map`]);
                            o0k[6][`hide`]();
                            v2k[79][`bcs`]();
                        }
                        ;
                        t0k[1][`onmouseenter`] = C7h;
                    } catch (E4T) {}
                }
            }
            o0k[91] = {};
            o0k[36] = {};
            function O2h(O3E, W3E) {
                var R0k = [arguments];
                                G7h();
                if (R0k[0][0][`maps`][`length`] == 0 && R0k[0][1] == 0) {
                    W7h(`No Maps`);
                }
                for (R0k[24] = R0k[0][1] * 32; R0k[24] < Math[`min`](R0k[0][0][`maps`][`length`], (R0k[0][1] + 1) * 32); R0k[24]++) {
                    try {
                        R0k[6] = T[`mergeIntoNewMap`](T[`decodeFromDatabase`](R0k[0][0][`maps`][R0k[24]][`leveldata`]));
                        R0k[6][`m`][`n`] = R0k[0][0][`maps`][R0k[24]][`name`];
                        R0k[6][`m`][`a`] = R0k[0][0][`maps`][R0k[24]][`authorname`];
                        R0k[6][`m`][`dbid`] = parseInt(R0k[0][0][`maps`][R0k[24]][`id`]);
                        R0k[6][`m`][`date`] = R0k[0][0][`maps`][R0k[24]][`publisheddate`];
                        R0k[6][`m`][`dbv`] = 2;
                        R0k[6][`m`][`vu`] = R0k[0][0][`maps`][R0k[24]][`vu`];
                        R0k[6][`m`][`vd`] = R0k[0][0][`maps`][R0k[24]][`vd`];
                        R0k[6][`m`][`pub`] = R0k[6][`m`][`a`] == v2k[79][`userName`] ? true : false;
                        R0k[9] = document[`createElement`](`div`);
                        R0k[9][`classList`][`add`](`maploadwindowmapdiv`);
                        R0k[9][`classList`][`add`](`maploadwindowmapdivedit`);
                        o0k[47][`push`]({
                            map: R0k[6],
                            div: R0k[9]
                        });
                        R0k[7] = document[`createElement`](`span`);
                        R0k[7][`classList`][`add`](`maploadwindowtext`);
                        R0k[7][`classList`][`add`](`maploadwindowtextname`);
                        R0k[7][`textContent`] = R0k[6][`m`][`n`];
                        R0k[2] = document[`createElement`](`span`);
                        R0k[2][`classList`][`add`](`maploadwindowtext`);
                        R0k[2][`classList`][`add`](`maploadwindowtextauthor`);
                        R0k[2][`textContent`] = R0k[6][`m`][`a`];
                        R0k[4] = document[`createElement`](`span`);
                        R0k[4][`classList`][`add`](`maploadwindowtext`);
                        R0k[4][`classList`][`add`](`maploadwindowtextbasedon`);
                        R0k[4][`textContent`] = `based on`;
                        R0k[8] = document[`createElement`](`span`);
                        R0k[8][`classList`][`add`](`maploadwindowtext`);
                        R0k[8][`classList`][`add`](`maploadwindowtextoriginalname`);
                        R0k[8][`textContent`] = R0k[6][`m`][`rxn`];
                        R0k[5] = document[`createElement`](`span`);
                        R0k[5][`classList`][`add`](`maploadwindowtext`);
                        R0k[5][`classList`][`add`](`maploadwindowtextoriginalauthor`);
                        R0k[5][`textContent`] = R0k[6][`m`][`rxa`];
                        R0k[3] = document[`createElement`](`span`);
                        R0k[3][`classList`][`add`](`maploadwindowtext`);
                        R0k[3][`classList`][`add`](`maploadwindowtextage`);
                        R0k[52] = ``;
                        R0k[52] = moment(R0k[6][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                        R0k[3][`textContent`] = R0k[52];
                        b7h(R0k[9], R0k[6][`m`][`vu`], R0k[6][`m`][`vd`]);
                        R0k[9][`appendChild`](R0k[7]);
                        R0k[9][`appendChild`](R0k[2]);
                        R0k[9][`appendChild`](R0k[3]);
                        R0k[9][`appendChild`](R0k[4]);
                        R0k[9][`appendChild`](R0k[8]);
                        R0k[9][`appendChild`](R0k[5]);
                        o0k[4][`appendChild`](R0k[9]);
                        R0k[9][`map`] = R0k[6];
                        R0k[9][`onclick`] = function() {
                            var j5k = [arguments];
                                                        I8yy.w9b();
                            m7h(`mapChosen`, this[`map`]);
                            o0k[6][`hide`]();
                            v2k[79][`bcs`]();
                        }
                        ;
                        R0k[9][`onmouseenter`] = C7h;
                    } catch (S5T) {}
                }
            }
            o0k[57] = `BEST`;
            o0k[21] = true;
            o0k[66] = true;
            function C7h() {
                var k5k = [arguments];
                                if (!v2k[79][`mute`]) {
                    o0k[19][`stop`]();
                    o0k[19][`play`]();
                }
            }
            I8yy.P2k(1);
            o0k[11] = I8yy.r2k(43797, 47166);
            o0k[53][`textContent`] = v8yy[o0k[11]] + o0k[57];
            o0k[82][`classList`][`add`](`maploadwindowoptionselected`);
            o0k[26][`classList`][`add`](`maploadwindowoptionselected`);
            function x2h(Z3E) {
                var f5k = [arguments];
                                G7h();
                if (f5k[0][0][`maps`][`length`] == 0 && o0k[44] == 0) {
                    W7h(`No Maps`);
                }
                for (f5k[9] = 0; f5k[9] < f5k[0][0][`maps`][`length`]; f5k[9]++) {
                    try {
                        (function() {
                            var G5k = [arguments];
                                                        G5k[1] = T[`mergeIntoNewMap`](T[`decodeFromDatabase`](f5k[0][0][`maps`][f5k[9]][`leveldata`]));
                            G5k[1][`m`][`n`] = f5k[0][0][`maps`][f5k[9]][`name`];
                            G5k[1][`m`][`a`] = f5k[0][0][`maps`][f5k[9]][`authorname`];
                            G5k[1][`m`][`dbid`] = parseInt(f5k[0][0][`maps`][f5k[9]][`id`]);
                            G5k[1][`m`][`date`] = f5k[0][0][`maps`][f5k[9]][`creationdate`];
                            G5k[1][`m`][`vu`] = f5k[0][0][`maps`][f5k[9]][`vu`];
                            G5k[1][`m`][`vd`] = f5k[0][0][`maps`][f5k[9]][`vd`];
                            I8yy.H2k(9);
                            G5k[3] = I8yy.r2k(41412, 20, 2088);
                            I8yy.H2k(214);
                            G5k[4] = I8yy.A2k(17, 1431, 12, 1431, 1197);
                            I8yy.P2k(183);
                            G5k[6] = I8yy.A2k(17, 2, 19, 14, 18);
                            G5k[1][`m`][`pub`] = parseInt(f5k[0][0][v8yy[G5k[3]]][f5k[9]][v8yy[G5k[4]]]) == G5k[6];
                            G5k[8] = document[`createElement`](`div`);
                            G5k[8][`classList`][`add`](`maploadwindowmapdiv`);
                            o0k[47][`push`]({
                                map: G5k[1],
                                div: G5k[8]
                            });
                            f5k[7] = document[`createElement`](`span`);
                            f5k[7][`classList`][`add`](`maploadwindowtext`);
                            f5k[7][`classList`][`add`](`maploadwindowtextname`);
                            f5k[7][`textContent`] = G5k[1][`m`][`n`];
                            f5k[5] = document[`createElement`](`span`);
                            f5k[5][`classList`][`add`](`maploadwindowtext`);
                            f5k[5][`classList`][`add`](`maploadwindowtextmode`);
                            G5k[5] = `Any Mode`;
                            if (v2k[10][`modes`][G5k[1][`m`][`mo`]] && v2k[10][`modes`][G5k[1][`m`][`mo`]][`editorCanTarget`]) {
                                G5k[5] = v2k[10][`modes`][G5k[1][`m`][`mo`]][`lobbyName`];
                            }
                            f5k[5][`textContent`] = G5k[5];
                            G5k[8][`appendChild`](f5k[5]);
                            f5k[6] = document[`createElement`](`span`);
                            f5k[6][`classList`][`add`](`maploadwindowtext`);
                            f5k[6][`classList`][`add`](`maploadwindowtextage`);
                            G5k[9] = ``;
                            G5k[9] = moment(G5k[1][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                            f5k[6][`textContent`] = G5k[9];
                            b7h(G5k[8], G5k[1][`m`][`vu`], G5k[1][`m`][`vd`]);
                            f5k[2] = document[`createElement`](`span`);
                            f5k[2][`classList`][`add`](`maploadwindowtext`);
                            f5k[2][`classList`][`add`](`maploadwindowtextpublished`);
                            if (G5k[1][`m`][`pub`]) {
                                f5k[2][`textContent`] = `Public`;
                            } else {
                                f5k[2][`textContent`] = `Private`;
                            }
                            G5k[8][`appendChild`](f5k[2]);
                            G5k[8][`appendChild`](f5k[7]);
                            G5k[8][`appendChild`](f5k[6]);
                            f5k[3] = document[`createElement`](`div`);
                            f5k[3][`classList`][`add`](`maploadwindowdeletebutton`);
                            f5k[3][`classList`][`add`](`brownButton`);
                            f5k[3][`classList`][`add`](`brownButton_classic`);
                            f5k[3][`classList`][`add`](`buttonShadow`);
                            f5k[3][`textContent`] = `DELETE`;
                            f5k[3][`mapDiv`] = G5k[8];
                            f5k[3][`onmouseover`] = v2k[79][`bhs`];
                            G5k[8][`deleteButton`] = f5k[3];
                            f5k[3][`onclick`] = function(x3E) {
                                var T5k = [arguments];
                                                                T5k[0][0][`stopPropagation`]();
                                v2k[79][`bcs`]();
                                if (this[`textContent`] == `DELETE`) {
                                    this[`textContent`] = `SURE?`;
                                    return;
                                } else {
                                    $[`post`](`https://bonk2.io/scripts/map_delete.php`, {
                                        token: o0k[7],
                                        mapid: G5k[1][`m`][`dbid`]
                                    });
                                    this[`mapDiv`][`style`][`opacity`] = `0.3`;
                                    this[`mapDiv`][`style`][`pointerEvents`] = `none`;
                                    this[`style`][`display`] = `none`;
                                }
                            }
                            ;
                            G5k[8][`appendChild`](f5k[3]);
                            o0k[4][`appendChild`](G5k[8]);
                            G5k[8][`map`] = G5k[1];
                            G5k[8][`onclick`] = function() {
                                var K5k = [arguments];
                                                                m7h(`mapChosen`, this[`map`]);
                                o0k[6][`hide`]();
                                v2k[79][`bcs`]();
                            }
                            ;
                            G5k[8][`onmouseenter`] = function() {
                                var r5k = [arguments];
                                                                this[`deleteButton`][`style`][`visibility`] = `inherit`;
                                C7h();
                                I8yy.g9b();
                                ;
                            }
                            ;
                            G5k[8][`onmouseleave`] = function() {
                                var A5k = [arguments];
                                I8yy.g9b();
                                                                this[`deleteButton`][`style`][`visibility`] = `hidden`;
                            }
                            ;
                        }
                        )();
                    } catch (W1T) {}
                }
            }
            o0k[44] = 0;
            function w2h(M3E) {
                I8yy.g9b();
                var P5k = [arguments];
                                if (o0k[32][`style`][`display`] == `block`) {
                    l7h();
                } else {
                    o0k[32][`style`][`display`] = `block`;
                    o0k[54][`style`][`display`] = `block`;
                    o0k[17][`style`][`display`] = `block`;
                    o0k[52][`style`][`display`] = `block`;
                    o0k[74][`style`][`display`] = `block`;
                    o0k[94][`style`][`display`] = `block`;
                    o0k[38][`style`][`display`] = `block`;
                    o0k[35][`style`][`display`] = `block`;
                    o0k[15][`style`][`display`] = `block`;
                    o0k[1][`onclick`] = p2h;
                    P5k[0][0][`stopPropagation`]();
                }
            }
            o0k[58] = 60;
            o0k[85] = false;
            o0k[95] = 0;
            function g2h() {
                var H5k = [arguments];
                                try {
                    if (o0k[47][`length`] > 0) {
                        H5k[5] = o0k[47][`shift`]();
                        H5k[3] = K8[`createImage`](H5k[5][`map`], 0.22);
                        H5k[5][`div`][`appendChild`](H5k[3]);
                    }
                } catch (m2h) {}
            }
            o0k[22] = true;
            function m7h(...b1T) {
                var v5k = [arguments];
                                v5k[1] = b1T[`shift`]();
                I8yy.w9b();
                for (v5k[3] = 0; v5k[3] < o0k[50][`length`]; v5k[3]++) {
                    if (o0k[50][v5k[3]][`eventName`] == v5k[1]) {
                        o0k[50][v5k[3]][`callback`](...b1T);
                    }
                }
            }
            o0k[88] = false;
            function y2h(s3E) {
                I8yy.w9b();
                var i5k = [arguments];
                                if (o0k[4][`scrollTop`] > 0 && o0k[4][`scrollHeight`] - o0k[4][`scrollTop`] <= o0k[4][`clientHeight`] + 10) {
                    i5k[8] = Date[`now`]();
                    if (i5k[8] < o0k[95] + 1000 && o0k[22] == false) {
                        return;
                    }
                    if (o0k[65] == `b2hotgeneral` || o0k[65] == `b2hotgrapple` || o0k[65] == `b2hotdeatharrows`) {
                        o0k[44]++;
                        L2h(o0k[13], o0k[44]);
                    } else if (o0k[65] == `b2picks`) {
                        o0k[44]++;
                        s2h(o0k[36], o0k[44]);
                    } else if (o0k[65] == `b2hotedits`) {
                        o0k[44]++;
                        O2h(o0k[91], o0k[44]);
                    } else if (o0k[65] == `hot`) {
                        o0k[44]++;
                        r7h(`hot`, false);
                    } else {
                        if (o0k[88]) {
                            o0k[44]++;
                            r7h(o0k[65], false);
                        }
                    }
                }
            }
            o0k[65] = `b2picks`;
            o0k[3][`onmouseover`] = v2k[79][`bhs`];
            o0k[3][`onmousedown`] = v2k[79][`bbs`];
            o0k[3][`onclick`] = function() {
                I8yy.w9b();
                var u5k = [arguments];
                                o0k[6][`hide`]();
            }
            ;
            o0k[92][`value`] = ``;
            o0k[28][`style`][`visibility`] = `hidden`;
            o0k[53][`onclick`] = function() {
                var b5k = [arguments];
                                if (o0k[57] == `BEST`) {
                    o0k[57] = `NEWEST`;
                } else {
                    o0k[57] = `BEST`;
                }
                I8yy.H2k(25);
                b5k[1] = I8yy.r2k(3362, 168093, 17, 3);
                o0k[53][`textContent`] = v8yy[b5k[1]] + o0k[57];
                v2k[79][`rlc`]();
            }
            ;
            o0k[43][`onclick`] = function() {
                var d5k = [arguments];
                                o0k[66] = !o0k[66];
                if (!o0k[66] && !o0k[21]) {
                    o0k[66] = true;
                    ;
                }
                if (o0k[66]) {
                    o0k[82][`classList`][`add`](`maploadwindowoptionselected`);
                } else {
                    o0k[82][`classList`][`remove`](`maploadwindowoptionselected`);
                }
                v2k[79][`rlc`]();
            }
            ;
            o0k[45][`onclick`] = function() {
                var e5k = [arguments];
                                o0k[21] = !o0k[21];
                if (!o0k[66] && !o0k[21]) {
                    o0k[21] = true;
                    ;
                }
                if (o0k[21]) {
                    o0k[26][`classList`][`add`](`maploadwindowoptionselected`);
                } else {
                    o0k[26][`classList`][`remove`](`maploadwindowoptionselected`);
                }
                v2k[79][`rlc`]();
            }
            ;
            o0k[92][`oninput`] = function() {
                var C5k = [arguments];
                                I8yy.w9b();
                o0k[28][`style`][`visibility`] = `inherit`;
                o0k[12][`style`][`visibility`] = `hidden`;
            }
            ;
            o0k[37][`onclick`] = function() {
                q7h();
            }
            ;
            this[`enterKeySearch`] = function() {
                I8yy.g9b();
                q7h();
            }
            ;
            this[`enterKeyUnknown`] = function() {
                I8yy.g9b();
                var l5k = [arguments];
                                if (document[`activeElement`] == document[`getElementById`](`maploadwindowsearchinput`)) {
                    q7h();
                    return true;
                }
                return false;
            }
            ;
            this[`hide`] = function() {
                var o5k = [arguments];
                                this[`visible`] = false;
                anime({
                    targets: o0k[2],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var I5k = [arguments];
                                                o0k[2][`style`][`display`] = `none`;
                        I8yy.g9b();
                        o0k[2][`style`][`opacity`] = `1`;
                    }
                });
                o0k[1][`style`][`resize`] = `none`;
                o0k[64][`onclick`] = null;
                o0k[32][`onclick`] = null;
                o0k[54][`onclick`] = null;
                l7h();
                v2k[79][`enterFrameDispatcher`][`unsubscribe`](g2h, 5);
            }
            ;
            this[`show`] = function(a2h, b2h=``) {
                var F5k = [arguments];
                                this[`visible`] = true;
                o0k[2][`style`][`display`] = `block`;
                o0k[1][`style`][`resize`] = `both`;
                o0k[55] = true;
                o0k[64][`onclick`] = w2h;
                o0k[32][`onclick`] = n7h;
                o0k[54][`onclick`] = n7h;
                o0k[17][`onclick`] = n7h;
                o0k[52][`onclick`] = n7h;
                o0k[74][`onclick`] = n7h;
                o0k[94][`onclick`] = n7h;
                o0k[38][`onclick`] = n7h;
                o0k[35][`onclick`] = n7h;
                o0k[15][`onclick`] = n7h;
                if (v2k[79][`guest`]) {
                    o0k[17][`classList`][`add`](`dropdown-option-disabled`);
                    o0k[52][`classList`][`add`](`dropdown-option-disabled`);
                    o0k[74][`classList`][`add`](`dropdown-option-disabled`);
                    o0k[38][`classList`][`add`](`dropdown-option-disabled`);
                } else {
                    o0k[17][`classList`][`remove`](`dropdown-option-disabled`);
                    o0k[52][`classList`][`remove`](`dropdown-option-disabled`);
                    o0k[74][`classList`][`remove`](`dropdown-option-disabled`);
                    o0k[38][`classList`][`remove`](`dropdown-option-disabled`);
                }
                o0k[46][`onchange`] = function(c3E) {
                    var L5k = [arguments];
                                        I8yy.P2k(79);
                    L5k[6] = I8yy.A2k(41, 5, 738, 41);
                    I8yy.P2k(40);
                    L5k[2] = I8yy.A2k(13, 14, 0);
                    o0k[78] = this[v8yy[L5k[6]]] - L5k[2];
                    r7h(o0k[65], true);
                }
                ;
                o0k[46][`onmouseenter`] = v2k[79][`bhs`];
                o0k[83][`style`][`visibility`] = `inherit`;
                o0k[1][`style`][`left`] = ``;
                o0k[1][`style`][`top`] = ``;
                l7h();
                if (b2h != ``) {
                    F5k[3] = 1754318033;
                    F5k[7] = 635229402;
                    F5k[4] = 2;
                    for (F5k[8] = 1; I8yy.d1f(F5k[8].toString(), F5k[8].toString().length, 87347) !== F5k[3]; F5k[8]++) {
                        r7h(b2h, false);
                        F5k[4] += 2;
                    }
                    if (I8yy.m1f(F5k[4].toString(), F5k[4].toString().length, 87140) !== F5k[7]) {
                        r7h(b2h, true);
                    }
                } else if (o0k[85] == false || o0k[65] == `b2own` || F5k[0][0]) {
                    r7h(o0k[65], true);
                }
                v2k[79][`enterFrameDispatcher`][`subscribe`](5, g2h);
                o0k[1][`style`][`opacity`] = `0`;
                I8yy.w9b();
                anime({
                    targets: o0k[1],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
            }
            ;
            this[`doSearch`] = q7h;
            o0k[50] = [];
            function L2h(D3E, Y3E) {
                var J5k = [arguments];
                I8yy.g9b();
                                G7h();
                if (J5k[0][0][`maps`][`length`] == 0 && J5k[0][1] == 0) {
                    W7h(`No Maps`);
                }
                for (J5k[45] = J5k[0][1] * 32; J5k[45] < Math[`min`](J5k[0][0][`maps`][`length`], (J5k[0][1] + 1) * 32); J5k[45]++) {
                    try {
                        J5k[7] = T[`mergeIntoNewMap`](T[`decodeFromDatabase`](J5k[0][0][`maps`][J5k[45]][`leveldata`]));
                        J5k[7][`m`][`n`] = J5k[0][0][`maps`][J5k[45]][`name`];
                        J5k[7][`m`][`a`] = J5k[0][0][`maps`][J5k[45]][`authorname`];
                        J5k[7][`m`][`dbid`] = parseInt(J5k[0][0][`maps`][J5k[45]][`id`]);
                        J5k[7][`m`][`date`] = J5k[0][0][`maps`][J5k[45]][`publisheddate`];
                        J5k[7][`m`][`dbv`] = 2;
                        J5k[7][`m`][`vu`] = J5k[0][0][`maps`][J5k[45]][`vu`];
                        J5k[7][`m`][`vd`] = J5k[0][0][`maps`][J5k[45]][`vd`];
                        J5k[7][`m`][`pub`] = J5k[7][`m`][`a`] == v2k[79][`userName`] ? true : false;
                        J5k[2] = document[`createElement`](`div`);
                        J5k[2][`classList`][`add`](`maploadwindowmapdiv`);
                        o0k[47][`push`]({
                            map: J5k[7],
                            div: J5k[2]
                        });
                        J5k[5] = document[`createElement`](`span`);
                        J5k[5][`classList`][`add`](`maploadwindowtext`);
                        J5k[5][`classList`][`add`](`maploadwindowtextname`);
                        J5k[5][`textContent`] = J5k[7][`m`][`n`];
                        J5k[9] = document[`createElement`](`span`);
                        J5k[9][`classList`][`add`](`maploadwindowtext`);
                        J5k[9][`classList`][`add`](`maploadwindowtextauthor`);
                        J5k[9][`textContent`] = J5k[7][`m`][`a`];
                        J5k[1] = document[`createElement`](`span`);
                        J5k[1][`classList`][`add`](`maploadwindowtext`);
                        J5k[1][`classList`][`add`](`maploadwindowtextmode`);
                        J5k[4] = `Any Mode`;
                        if (v2k[10][`modes`][J5k[7][`m`][`mo`]] && v2k[10][`modes`][J5k[7][`m`][`mo`]][`editorCanTarget`]) {
                            J5k[4] = v2k[10][`modes`][J5k[7][`m`][`mo`]][`lobbyName`];
                        }
                        J5k[1][`textContent`] = J5k[4];
                        J5k[2][`appendChild`](J5k[1]);
                        J5k[8] = document[`createElement`](`span`);
                        J5k[8][`classList`][`add`](`maploadwindowtext`);
                        J5k[8][`classList`][`add`](`maploadwindowtextage`);
                        J5k[3] = ``;
                        J5k[3] = moment(J5k[7][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                        J5k[8][`textContent`] = J5k[3];
                        b7h(J5k[2], J5k[7][`m`][`vu`], J5k[7][`m`][`vd`]);
                        J5k[2][`appendChild`](J5k[5]);
                        J5k[2][`appendChild`](J5k[9]);
                        J5k[2][`appendChild`](J5k[8]);
                        o0k[4][`appendChild`](J5k[2]);
                        J5k[2][`map`] = J5k[7];
                        J5k[2][`onclick`] = function() {
                            var h5k = [arguments];
                                                        m7h(`mapChosen`, this[`map`]);
                            o0k[6][`hide`]();
                            v2k[79][`bcs`]();
                        }
                        ;
                        J5k[2][`onmouseenter`] = C7h;
                    } catch (V5T) {}
                }
            }
            function p2h(N3E) {
                var X5k = [arguments];
                                I8yy.g9b();
                if (X5k[0][0][`target`] != o0k[8]) {
                    l7h();
                }
            }
            this[`on`] = function(V3E, g3E) {
                I8yy.w9b();
                var m5k = [arguments];
                                o0k[50][`push`]({
                    eventName: m5k[0][0],
                    callback: m5k[0][1]
                });
            }
            ;
            function s2h(U3E, B3E) {
                var Q5k = [arguments];
                                G7h();
                if (Q5k[0][0][`maps`][`length`] == 0 && Q5k[0][1] == 0) {
                    W7h(`No Maps`);
                }
                for (Q5k[13] = Q5k[0][1] * 32; Q5k[13] < Math[`min`](Q5k[0][0][`maps`][`length`], (Q5k[0][1] + 1) * 32); Q5k[13]++) {
                    try {
                        if (Q5k[0][0][`maps`][Q5k[13]][`dbv`] == 1) {
                            Q5k[9] = T[`fromOldString`](Q5k[0][0][`maps`][Q5k[13]][`leveldata`]);
                        } else {
                            Q5k[9] = T[`mergeIntoNewMap`](T[`decodeFromDatabase`](Q5k[0][0][`maps`][Q5k[13]][`leveldata`]));
                        }
                        Q5k[9][`m`][`n`] = Q5k[0][0][`maps`][Q5k[13]][`name`];
                        Q5k[9][`m`][`a`] = Q5k[0][0][`maps`][Q5k[13]][`authorname`];
                        Q5k[9][`m`][`dbid`] = parseInt(Q5k[0][0][`maps`][Q5k[13]][`id`]);
                        Q5k[9][`m`][`date`] = Q5k[0][0][`maps`][Q5k[13]][`publisheddate`];
                        Q5k[9][`m`][`dbv`] = 2;
                        Q5k[9][`m`][`vu`] = Q5k[0][0][`maps`][Q5k[13]][`vu`];
                        Q5k[9][`m`][`vd`] = Q5k[0][0][`maps`][Q5k[13]][`vd`];
                        Q5k[9][`m`][`pub`] = Q5k[9][`m`][`a`] == v2k[79][`userName`] ? true : false;
                        Q5k[5] = document[`createElement`](`div`);
                        Q5k[5][`classList`][`add`](`maploadwindowmapdiv`);
                        Q5k[5][`classList`][`add`](`maploadwindowmapdiv_picks`);
                        o0k[47][`push`]({
                            map: Q5k[9],
                            div: Q5k[5]
                        });
                        Q5k[1] = document[`createElement`](`span`);
                        Q5k[1][`classList`][`add`](`maploadwindowtext_picks`);
                        Q5k[1][`classList`][`add`](`maploadwindowtextname_picks`);
                        Q5k[1][`textContent`] = Q5k[9][`m`][`n`];
                        Q5k[7] = document[`createElement`](`span`);
                        Q5k[7][`classList`][`add`](`maploadwindowtext_picks`);
                        Q5k[7][`classList`][`add`](`maploadwindowtextauthor_picks`);
                        Q5k[7][`textContent`] = Q5k[9][`m`][`a`];
                        Q5k[4] = document[`createElement`](`span`);
                        Q5k[4][`classList`][`add`](`maploadwindowtext_picks`);
                        Q5k[4][`classList`][`add`](`maploadwindowtextmode_picks`);
                        Q5k[8] = `Any Mode`;
                        if (v2k[10][`modes`][Q5k[9][`m`][`mo`]] && v2k[10][`modes`][Q5k[9][`m`][`mo`]][`editorCanTarget`]) {
                            Q5k[8] = v2k[10][`modes`][Q5k[9][`m`][`mo`]][`lobbyName`];
                        }
                        Q5k[4][`textContent`] = Q5k[8];
                        Q5k[5][`appendChild`](Q5k[4]);
                        Q5k[6] = document[`createElement`](`span`);
                        Q5k[6][`classList`][`add`](`maploadwindowtext_picks`);
                        Q5k[6][`classList`][`add`](`maploadwindowtextaddedby_picks`);
                        I8yy.H2k(32);
                        Q5k[10] = I8yy.A2k(35, 3470, 17);
                        I8yy.H2k(0);
                        Q5k[33] = I8yy.r2k(334, 14);
                        I8yy.H2k(114);
                        Q5k[45] = I8yy.r2k(8, 72318, 18434, 2);
                        Q5k[6][`textContent`] = v8yy[Q5k[10]] + Q5k[0][0][v8yy[Q5k[33]]][Q5k[13]][v8yy[Q5k[45]]];
                        Q5k[5][`appendChild`](Q5k[6]);
                        Q5k[2] = document[`createElement`](`span`);
                        Q5k[2][`classList`][`add`](`maploadwindowtext_picks`);
                        Q5k[2][`classList`][`add`](`maploadwindowtextcomment_picks`);
                        if (Q5k[0][0][`maps`][Q5k[13]][`comment`]) {
                            I8yy.H2k(16);
                            Q5k[36] = I8yy.r2k(1872, 10, 11227, 7);
                            I8yy.P2k(16);
                            Q5k[77] = I8yy.r2k(332, 9, 3627, 12);
                            I8yy.H2k(56);
                            Q5k[58] = I8yy.A2k(17, 1422, 15, 1);
                            I8yy.H2k(1);
                            Q5k[51] = I8yy.r2k(2, 1869);
                            Q5k[2][`textContent`] = v8yy[Q5k[36]] + Q5k[0][0][v8yy[Q5k[77]]][Q5k[13]][v8yy[Q5k[58]]] + v8yy[Q5k[51]];
                        }
                        Q5k[5][`appendChild`](Q5k[2]);
                        Q5k[50] = document[`createElement`](`span`);
                        Q5k[50][`classList`][`add`](`maploadwindowtext_picks`);
                        Q5k[50][`classList`][`add`](`maploadwindowtextage_picks`);
                        Q5k[91] = ``;
                        Q5k[91] = moment(Q5k[9][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                        Q5k[50][`textContent`] = Q5k[91];
                        b7h(Q5k[5], Q5k[9][`m`][`vu`], Q5k[9][`m`][`vd`], true);
                        Q5k[5][`appendChild`](Q5k[1]);
                        Q5k[5][`appendChild`](Q5k[7]);
                        Q5k[5][`appendChild`](Q5k[50]);
                        o0k[4][`appendChild`](Q5k[5]);
                        Q5k[5][`map`] = Q5k[9];
                        Q5k[5][`onclick`] = function() {
                            var q5k = [arguments];
                                                        m7h(`mapChosen`, this[`map`]);
                            o0k[6][`hide`]();
                            v2k[79][`bcs`]();
                        }
                        ;
                        Q5k[5][`onmouseenter`] = C7h;
                    } catch (E5T) {}
                }
            }
            function W7h(a3E) {
                var S5k = [arguments];
                                o0k[27][`style`][`visibility`] = `inherit`;
                I8yy.g9b();
                o0k[27][`textContent`] = S5k[0][0];
            }
            this[`off`] = function(t3E, E3E) {
                var w5k = [arguments];
                                if (!o0k[50]) {
                    return;
                }
                for (w5k[7] = 0; w5k[7] < o0k[50][`length`]; w5k[7]++) {
                    if (o0k[50][w5k[7]][`eventName`] == w5k[0][0] && o0k[50][w5k[7]][`callback`] == w5k[0][1]) {
                        o0k[50][`splice`](w5k[7], 1);
                        return;
                    }
                }
            }
            ;
            this[`destroy`] = function() {
                var z5k = [arguments];
                                o0k[6][`hide`]();
                o0k[50] = null;
                v2k[79][`enterFrameDispatcher`][`unsubscribe`](g2h);
                o0k[47] = [];
            }
            ;
            function G7h() {
                var n5k = [arguments];
                                I8yy.g9b();
                o0k[27][`style`][`visibility`] = `hidden`;
            }
            function n7h(R3E) {
                var y5k = [arguments];
                                if (y5k[0][0][`target`] == o0k[32]) {
                    o0k[64][`innerHTML`] = o0k[32][`innerHTML`];
                    r7h(`hot`, true);
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                }
                if (y5k[0][0][`target`] == o0k[54]) {
                    o0k[64][`innerHTML`] = o0k[54][`innerHTML`];
                    r7h(`curated`, true);
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                }
                if (y5k[0][0][`target`] == o0k[17]) {
                    if (v2k[79][`guest`] == false) {
                        o0k[64][`innerHTML`] = o0k[17][`innerHTML`];
                        r7h(`authorsown`, true);
                        o0k[28][`style`][`visibility`] = `hidden`;
                        o0k[12][`style`][`visibility`] = `hidden`;
                    }
                }
                if (y5k[0][0][`target`] == o0k[52]) {
                    if (v2k[79][`guest`] == false) {
                        o0k[64][`innerHTML`] = o0k[52][`innerHTML`];
                        r7h(`favs`, true);
                        o0k[28][`style`][`visibility`] = `hidden`;
                        o0k[12][`style`][`visibility`] = `hidden`;
                    }
                }
                if (y5k[0][0][`target`] == o0k[74]) {
                    if (v2k[79][`guest`] == false) {
                        o0k[64][`innerHTML`] = o0k[74][`innerHTML`];
                        r7h(`b2own`, true);
                        o0k[28][`style`][`visibility`] = `hidden`;
                        o0k[12][`style`][`visibility`] = `hidden`;
                    }
                }
                if (y5k[0][0][`target`] == o0k[94]) {
                    o0k[64][`innerHTML`] = o0k[94][`innerHTML`];
                    r7h(`b2hotgeneral`, true);
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `inherit`;
                }
                if (y5k[0][0][`target`] == o0k[15]) {
                    o0k[64][`innerHTML`] = o0k[15][`innerHTML`];
                    r7h(`b2hotdeatharrows`, true);
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `inherit`;
                }
                if (y5k[0][0][`target`] == o0k[38]) {
                    o0k[64][`innerHTML`] = o0k[38][`innerHTML`];
                    r7h(`b2favs`, true);
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                }
                if (y5k[0][0][`target`] == o0k[35]) {
                    o0k[64][`innerHTML`] = o0k[35][`innerHTML`];
                    r7h(`b2picks`, true);
                    o0k[28][`style`][`visibility`] = `hidden`;
                    o0k[12][`style`][`visibility`] = `hidden`;
                }
                l7h();
            }
            function A2h(j9E, k9E) {
                var p5k = [arguments];
            }
            function n2h(f9E) {
                I8yy.w9b();
                var O5k = [arguments];
                                G7h();
                if (O5k[0][0][`maps`][`length`] == 0 && o0k[44] == 0) {
                    W7h(`No Maps`);
                }
                for (O5k[7] = 0; O5k[7] < O5k[0][0][`maps`][`length`]; O5k[7]++) {
                    try {
                        (function() {
                            var W5k = [arguments];
                                                        W5k[9] = T[`mergeIntoNewMap`](T[`decodeFromDatabase`](O5k[0][0][`maps`][O5k[7]][`leveldata`]));
                            W5k[9][`m`][`n`] = O5k[0][0][`maps`][O5k[7]][`name`];
                            W5k[9][`m`][`a`] = O5k[0][0][`maps`][O5k[7]][`authorname`];
                            W5k[9][`m`][`dbid`] = parseInt(O5k[0][0][`maps`][O5k[7]][`id`]);
                            W5k[9][`m`][`date`] = O5k[0][0][`maps`][O5k[7]][`publisheddate`];
                            W5k[9][`m`][`dbv`] = 2;
                            W5k[9][`m`][`vu`] = O5k[0][0][`maps`][O5k[7]][`vu`];
                            W5k[9][`m`][`vd`] = O5k[0][0][`maps`][O5k[7]][`vd`];
                            I8yy.H2k(16);
                            W5k[2] = I8yy.r2k(362, 2, 1460, 5);
                            I8yy.H2k(19);
                            W5k[3] = I8yy.r2k(12, 14, 19, 1323, 118);
                            I8yy.P2k(185);
                            W5k[1] = I8yy.r2k(15, 3, 13, 79, 10);
                            W5k[9][`m`][`pub`] = parseInt(O5k[0][0][v8yy[W5k[2]]][O5k[7]][v8yy[W5k[3]]]) == W5k[1];
                            W5k[4] = document[`createElement`](`div`);
                            W5k[4][`classList`][`add`](`maploadwindowmapdiv`);
                            o0k[47][`push`]({
                                map: W5k[9],
                                div: W5k[4]
                            });
                            O5k[2] = document[`createElement`](`span`);
                            O5k[2][`classList`][`add`](`maploadwindowtext`);
                            I8yy.g9b();
                            O5k[2][`classList`][`add`](`maploadwindowtextname`);
                            O5k[2][`textContent`] = W5k[9][`m`][`n`];
                            O5k[4] = document[`createElement`](`span`);
                            O5k[4][`classList`][`add`](`maploadwindowtext`);
                            O5k[4][`classList`][`add`](`maploadwindowtextauthor`);
                            O5k[4][`textContent`] = W5k[9][`m`][`a`];
                            O5k[5] = document[`createElement`](`span`);
                            O5k[5][`classList`][`add`](`maploadwindowtext`);
                            O5k[5][`classList`][`add`](`maploadwindowtextmode`);
                            W5k[6] = `Any Mode`;
                            if (v2k[10][`modes`][W5k[9][`m`][`mo`]] && v2k[10][`modes`][W5k[9][`m`][`mo`]][`editorCanTarget`]) {
                                W5k[6] = v2k[10][`modes`][W5k[9][`m`][`mo`]][`lobbyName`];
                            }
                            O5k[5][`textContent`] = W5k[6];
                            W5k[4][`appendChild`](O5k[5]);
                            O5k[8] = document[`createElement`](`span`);
                            O5k[8][`classList`][`add`](`maploadwindowtext`);
                            O5k[8][`classList`][`add`](`maploadwindowtextage`);
                            W5k[7] = ``;
                            W5k[7] = moment(W5k[9][`m`][`date`], `YYYY-MM-DD HH:mm:ss`)[`fromNow`]();
                            O5k[8][`textContent`] = W5k[7];
                            b7h(W5k[4], W5k[9][`m`][`vu`], W5k[9][`m`][`vd`]);
                            W5k[4][`appendChild`](O5k[2]);
                            W5k[4][`appendChild`](O5k[4]);
                            W5k[4][`appendChild`](O5k[8]);
                            O5k[3] = document[`createElement`](`div`);
                            O5k[3][`classList`][`add`](`maploadwindowunvfavbutton`);
                            O5k[3][`classList`][`add`](`brownButton`);
                            O5k[3][`classList`][`add`](`brownButton_classic`);
                            O5k[3][`classList`][`add`](`buttonShadow`);
                            O5k[3][`textContent`] = `UNFAV`;
                            O5k[3][`mapDiv`] = W5k[4];
                            O5k[3][`onmouseover`] = v2k[79][`bhs`];
                            O5k[3][`onclick`] = function(G9E) {
                                I8yy.g9b();
                                var Z5k = [arguments];
                                                                Z5k[0][0][`stopPropagation`]();
                                v2k[79][`bcs`]();
                                if (this[`textContent`] == `UNFAV`) {
                                    this[`textContent`] = `SURE?`;
                                    return;
                                } else {
                                    $[`post`](`https://bonk2.io/scripts/map_fave.php`, {
                                        token: o0k[7],
                                        mapid: W5k[9][`m`][`dbid`],
                                        action: `u`
                                    });
                                    this[`mapDiv`][`style`][`opacity`] = `0.3`;
                                    this[`mapDiv`][`style`][`pointerEvents`] = `none`;
                                    this[`style`][`display`] = `none`;
                                }
                            }
                            ;
                            W5k[4][`appendChild`](O5k[3]);
                            W5k[4][`unfavButton`] = O5k[3];
                            o0k[4][`appendChild`](W5k[4]);
                            W5k[4][`map`] = W5k[9];
                            W5k[4][`onclick`] = function() {
                                var x5k = [arguments];
                                                                m7h(`mapChosen`, this[`map`]);
                                o0k[6][`hide`]();
                                v2k[79][`bcs`]();
                            }
                            ;
                            W5k[4][`onmouseenter`] = function() {
                                var M5k = [arguments];
                                                                this[`unfavButton`][`style`][`visibility`] = `inherit`;
                                I8yy.g9b();
                                C7h();
                                ;
                            }
                            ;
                            W5k[4][`onmouseleave`] = function() {
                                var s5k = [arguments];
                                                                I8yy.g9b();
                                this[`unfavButton`][`style`][`visibility`] = `hidden`;
                            }
                            ;
                        }
                        )();
                    } catch (W5T) {}
                }
            }
        }
        v2k[79][`colors`][`push`](0x7E57C2);
        v2k[79][`colors`][`push`](0x5C6BC0);
        v2k[79][`colors`][`push`](0x42A5F5);
        function v8() {}
        v2k[79][`colors`][`push`](0x29B6F6);
        v2k[79][`colors`][`push`](0x26C6DA);
        v2k[79][`colors`][`push`](0x26A69A);
        v2k[79][`colors`][`push`](0x66BB6A);
        v2k[79][`colors`][`push`](0x9CCC65);
        v2k[79][`colors`][`push`](0xD4E157);
        v2k[79][`colors`][`push`](0xFFEE58);
        function y4(T9E, K9E, r9E) {
            var c5k = [arguments];
            function u3T() {
                var D5k = [arguments];
                I8yy.g9b();
                D5k[2] = anime({
                    targets: c5k[7],
                    opacity: `1`,
                    autoplay: true,
                    duration: 200,
                    delay: 0,
                    easing: `linear`
                });
            }
                        c5k[8] = this;
            c5k[7] = document[`getElementById`](`simpleMenuConainer_UIContainer`);
            I8yy.w9b();
            c5k[1] = document[`getElementById`](`bgreplay`);
            c5k[2] = document[`getElementById`](`bgreplay_timescrub`);
            c5k[2][`onmouseover`] = function() {
                j3T();
            }
            ;
            c5k[2][`onmouseout`] = function() {
                u3T();
            }
            ;
            function j3T() {
                var Y5k = [arguments];
                Y5k[2] = anime({
                    targets: c5k[7],
                    opacity: `0`,
                    autoplay: true,
                    duration: 200,
                    delay: 0,
                    easing: `linear`
                });
            }
            function g3T() {
                var N5k = [arguments];
                                if (!c5k[26]) {
                    return;
                }
                if (v2k[79][`resetRenderer`]) {
                    c5k[70][`destroy`]();
                    c5k[70] = null;
                    c5k[70] = new v2k[80](c5k[1],`replay`);
                    if (c5k[21] && c5k[21][`playerArray`]) {
                        c5k[70][`setPlayerArray`](c5k[21][`playerArray`]);
                    }
                    v2k[79][`resetRenderer`] = false;
                }
                if (Date[`now`]() > c5k[69] + 16000) {
                    c5k[8][`nextReplay`]();
                    return;
                }
                if (document[`hidden`] == true) {
                    return;
                }
                try {
                    N5k[8] = Date[`now`]();
                    I8yy.H2k(1);
                    N5k[1] = I8yy.r2k(c5k[95], N5k[8]);
                    N5k[1] = Math[`min`](N5k[1], 100);
                    c5k[82] += N5k[1];
                    c5k[95] = N5k[8];
                    I8yy.H2k(21);
                    N5k[7] = I8yy.A2k(746, 742, 373);
                    I8yy.H2k(0);
                    N5k[5] = I8yy.A2k(12, 18);
                    N5k[2] = c5k[2][v8yy[N5k[7]]] * N5k[5];
                    while (c5k[82] > 1000 / N5k[2]) {
                        N5k[9] = Date[`now`]();
                        Y3T(30);
                        N5k[6] = Date[`now`]() - N5k[9];
                        I8yy.P2k(2);
                        c5k[82] -= I8yy.A2k(1000, N5k[2]);
                        if (c5k[41][c5k[98]][`fte`] == 0 || c5k[98] == c5k[21][`es`]) {
                            c5k[8][`nextReplay`]();
                            return;
                        }
                        if (c5k[41][c5k[98]][`fte`] == 8 || c5k[98] + 8 == c5k[21][`es`]) {
                            c5k[70][`replayFadeOut`]();
                        }
                    }
                    I8yy.P2k(3);
                    N5k[4] = I8yy.A2k(1000, N5k[2], c5k[82]);
                    if (c5k[98] > 0) {
                        c5k[70][`render`](c5k[41][c5k[98] - 1], c5k[41][c5k[98]], N5k[4], c5k[44], x3T(c5k[98]), c5k[98]);
                    }
                } catch (v7T) {
                    c5k[8][`nextReplay`]();
                }
            }
            c5k[2][`oninput`] = function() {}
            ;
            c5k[2][`onchange`] = function() {
                I8yy.w9b();
                ;
            }
            ;
            c5k[4] = [];
            function Y3T(A9E) {
                var V5k = [arguments];
                                V5k[5] = x3T(c5k[98]);
                V5k[1] = c5k[33][`step`](c5k[41][c5k[98]], V5k[5], c5k[63][c5k[98]], V5k[0][0], c5k[44], c5k[86]);
                I8yy.w9b();
                c5k[98]++;
                c5k[41][c5k[98]] = V5k[1];
                if (c5k[98] >= 60) {
                    I8yy.P2k(1);
                    c5k[41][I8yy.A2k(60, c5k[98])] = null;
                }
            }
            function C3T(...F7T) {
                var g5k = [arguments];
                I8yy.g9b();
                                g5k[9] = F7T[`shift`]();
                for (g5k[5] = 0; g5k[5] < c5k[14][`length`]; g5k[5]++) {
                    if (c5k[14][g5k[5]][`eventName`] == g5k[9]) {
                        c5k[14][g5k[5]][`callback`](...F7T);
                    }
                }
            }
            c5k[9] = 0;
            c5k[6] = 0;
            c5k[3] = 0;
            c5k[51] = Infinity;
            c5k[26] = false;
            c5k[69] = 0;
            c5k[12] = true;
            c5k[16] = false;
            function I3T() {
                var U5k = [arguments];
                                if (!c5k[4][c5k[9] + 1]) {
                    p3T();
                }
                if (!c5k[4][c5k[9]]) {
                    c5k[9]--;
                    I3T();
                    return;
                }
                I8yy.w9b();
                c5k[26] = true;
                c5k[21] = c5k[4][c5k[9]];
                c5k[53] = c5k[21][`startingState`];
                c5k[53][`rc`] = c5k[6]++;
                c5k[64] = c5k[21][`inputs`];
                c5k[63] = c5k[21][`adminInputs`];
                c5k[36] = c5k[21][`playerArray`];
                for (U5k[1] = 0; U5k[1] < c5k[36][`length`]; U5k[1]++) {
                    if (c5k[36][U5k[1]]) {
                        U5k[5] = new v2k[38]();
                        U5k[5][`fromObject`](c5k[36][U5k[1]][`avatar`]);
                        c5k[36][U5k[1]][`avatar`] = U5k[5];
                    }
                }
                c5k[41] = [c5k[53]];
                try {
                    c5k[70][`destroySkins`]();
                } catch (B3T) {}
                c5k[70][`setPlayerArray`](c5k[36]);
                c5k[44] = c5k[21][`gameSettings`];
                c5k[98] = 0;
                c5k[69] = Date[`now`]();
                C3T(`replayCredit`, {
                    mn: c5k[21][`mn`],
                    ma: c5k[21][`ma`],
                    mid: c5k[21][`mid`],
                    rxn: c5k[21][`rxn`],
                    rxa: c5k[21][`rxa`],
                    state: 1,
                    force: true
                });
            }
            c5k[97] = false;
            c5k[27] = true;
            c5k[62] = null;
            I8yy.H2k(5);
            c5k[11] = I8yy.A2k(120, 1000);
            c5k[22] = 0;
            this[`nextReplay`] = function() {
                c5k[9]++;
                I3T();
            }
            ;
            this[`prevReplay`] = function() {
                c5k[9]--;
                I8yy.w9b();
                if (c5k[9] < 0) {
                    c5k[9] = 0;
                }
                I3T();
            }
            ;
            this[`reportReplay`] = function() {
                I8yy.w9b();
                var B5k = [arguments];
                                $[`post`](`https://bonk2.io/scripts/replay_report.php`, {
                    replayid: c5k[21][`id`]
                })[`done`](function(P9E, H9E) {
                    var a5k = [arguments];
                });
                c5k[4][`splice`](c5k[9], 1);
                I3T();
            }
            ;
            c5k[70] = new v2k[80](c5k[1],`replay`);
            function p3T() {
                var t5k = [arguments];
                I8yy.w9b();
                                if (c5k[51] <= c5k[3]) {
                    return;
                    ;
                }
                if (c5k[16]) {
                    return;
                }
                c5k[16] = true;
                t5k[5] = {
                    version: v2k[79][`version`],
                    offset: c5k[3]
                };
                if (v2k[79][`filterOn`]) {
                    t5k[5][`mode`] = v2k[79][`filterMode`];
                }
                if (c5k[62] != null) {
                    t5k[5][`startingFrom`] = c5k[62];
                }
                $[`post`](`https://bonk2.io/scripts/replay_get.php`, t5k[5])[`done`](function(v9E, i9E) {
                    var E5k = [arguments];
                    I8yy.g9b();
                    c5k[16] = false;
                    if (E5k[0][0][`r`] == `fail`) {} else if (E5k[0][0][`r`] == `success`) {
                        if (E5k[0][0][`replays`][`length`] == 0) {
                            c5k[51] = c5k[3];
                            return;
                        }
                        c5k[3] += E5k[0][0][`replays`][`length`];
                        for (E5k[8] = 0; E5k[8] < E5k[0][0][`replays`][`length`]; E5k[8]++) {
                            if (E5k[8] == 0 && c5k[27]) {
                                c5k[62] = E5k[0][0][`replays`][E5k[8]][`id`];
                                c5k[27] = false;
                            }
                            try {
                                E5k[9] = new v2k[56]();
                                E5k[9][`fromDatabase`](E5k[0][0][`replays`][E5k[8]][`replaydata`]);
                                E5k[9][`id`] = E5k[0][0][`replays`][E5k[8]][`id`];
                                c5k[4][`push`](E5k[9]);
                            } catch (M3T) {}
                        }
                        if (!c5k[26]) {
                            I3T();
                        }
                    }
                })[`fail`](function(u9E, b9E, d9E) {
                    var R5k = [arguments];
                    c5k[16] = false;
                });
            }
            c5k[33] = new E();
            c5k[86] = 1;
            v2k[79][`enterFrameDispatcher`][`subscribe`](1, g3T);
            function x3T(e9E) {
                var j4k = [arguments];
                                j4k[4] = [];
                for (j4k[6] = 0; j4k[6] < c5k[64][`length`]; j4k[6]++) {
                    if (c5k[64][j4k[6]]) {
                        for (j4k[2] = j4k[0][0]; j4k[2] >= 0; j4k[2]--) {
                            if (c5k[64][j4k[6]][j4k[2]]) {
                                j4k[4][j4k[6]] = c5k[64][j4k[6]][j4k[2]];
                                break;
                            }
                        }
                    }
                }
                return j4k[4];
            }
            c5k[95] = Date[`now`]();
            c5k[82] = 0;
            p3T();
            c5k[14] = [];
            this[`on`] = function(C9E, l9E) {
                var k4k = [arguments];
                                c5k[14][`push`]({
                    eventName: k4k[0][0],
                    callback: k4k[0][1]
                });
            }
            ;
            this[`blur`] = function() {
                var f4k = [arguments];
                                c5k[70][`blur`]();
            }
            ;
            this[`unblur`] = function() {
                var G4k = [arguments];
                                c5k[70][`unblur`]();
            }
            ;
            this[`stop`] = function() {
                var T4k = [arguments];
                                v2k[79][`enterFrameDispatcher`][`unsubscribe`](g3T);
                c5k[22] = Date[`now`]();
            }
            ;
            this[`resume`] = function() {
                var K4k = [arguments];
                                c5k[69] = Date[`now`]();
                v2k[79][`enterFrameDispatcher`][`unsubscribe`](g3T);
                v2k[79][`enterFrameDispatcher`][`subscribe`](1, g3T);
                K4k[3] = Date[`now`]() - c5k[22];
                if (K4k[3] > c5k[11]) {
                    c5k[62] = null;
                    c5k[3] = 0;
                    c5k[27] = true;
                    while (c5k[4][c5k[9] + 2]) {
                        c5k[4][`pop`]();
                    }
                }
            }
            ;
            this[`destroy`] = function() {
                var r4k = [arguments];
                                v2k[79][`enterFrameDispatcher`][`unsubscribe`](g3T);
                c5k[70][`destroy`]();
                c5k[53] = null;
                c5k[64] = null;
                c5k[63] = null;
                c5k[36] = null;
                c5k[41] = null;
                c5k[33] = null;
            }
            ;
        }
        v2k[79][`colors`][`push`](0xFFCA28);
        v2k[79][`colors`][`push`](0xFFA726);
        v2k[79][`colors`][`push`](0xFF7043);
        v2k[79][`colors`][`push`](0xf44336);
        v2k[79][`colors`][`push`](0xE91E63);
        v2k[79][`colors`][`push`](0x9C27B0);
        v2k[79][`colors`][`push`](0x673AB7);
        v2k[79][`colors`][`push`](0x3F51B5);
        v2k[79][`colors`][`push`](0x2196F3);
        v2k[79][`colors`][`push`](0x03A9F4);
        v2k[79][`colors`][`push`](0x00BCD4);
        v2k[79][`colors`][`push`](0x009688);
        v2k[79][`colors`][`push`](0x4CAF50);
        v2k[79][`colors`][`push`](0x8BC34A);
        v2k[79][`colors`][`push`](0xCDDC39);
        v2k[79][`colors`][`push`](0xFFEB3B);
        v2k[79][`colors`][`push`](0xFFC107);
        v2k[79][`colors`][`push`](0xFF9800);
        v2k[79][`colors`][`push`](0xFF5722);
        v2k[79][`colors`][`push`](0xe53935);
        v2k[79][`colors`][`push`](0xD81B60);
        v2k[79][`colors`][`push`](0x8E24AA);
        v2k[79][`colors`][`push`](0x5E35B1);
        v2k[79][`colors`][`push`](0x3949AB);
        v2k[79][`colors`][`push`](0x1E88E5);
        v2k[79][`colors`][`push`](0x039BE5);
        v2k[79][`colors`][`push`](0x00ACC1);
        v2k[79][`colors`][`push`](0x00897B);
        v2k[79][`colors`][`push`](0x43A047);
        function w4() {
            var A4k = [arguments];
            function I1C(o9E) {
                var P4k = [arguments];
                I8yy.g9b();
                                A4k[371][`style`][`opacity`] = `0`;
                A4k[371][`style`][`visibility`] = `inherit`;
                anime({
                    targets: A4k[371],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                A4k[278][`innerHTML`] = ``;
                A4k[385] = [];
                A4k[608][`textContent`] = P4k[0][0];
                A4k[258][`disableMouseEvents`]();
            }
            function j6C() {
                var H4k = [arguments];
                                A4k[26][`classList`][`remove`](`pretty_top_replay_fav_disabled`);
                A4k[26][`classList`][`remove`](`pretty_top_replay_fav_checked`);
                if (A4k[94][`mid`] > 0 && v2k[79][`guest`] == false) {} else {
                    A4k[26][`classList`][`add`](`pretty_top_replay_fav_disabled`);
                }
            }
            function B6C() {
                var v4k = [arguments];
                                A4k[56][`style`][`visibility`] = `inherit`;
                U6C();
            }
                        A4k[6] = this;
            A4k[4] = Math[`round`](Math[`random`]());
            A4k[2] = false;
            A4k[9] = document[`getElementById`](`mainmenuelements`);
            A4k[1] = document[`getElementById`](`bonkiocontainer`);
            anime({
                targets: A4k[1],
                opacity: 1,
                autoplay: true,
                duration: 300,
                delay: 0,
                easing: `linear`
            });
            A4k[7] = document[`getElementById`](`quickPlayWindow`);
            A4k[8] = document[`getElementById`](`quickPlayWindow_close`);
            A4k[8][`onclick`] = k0C;
            function q1C() {
                var i4k = [arguments];
                A4k[978] = new G8(null);
                A4k[978][`enableTutorial`]();
                i4k[8] = `ILD2CEWTwayhiQEVgEkAmAJAagBgDkAxATgFcAtADQGNgBhAcQCkBnATSoAcAbGgKxoAWJKIDmCABYBLAEaMiANmpoAzAHlEWdq1QJ6IUMCISCIAO4NLAaRDwDwLCHbRUAURABZEBMhQ3ljjQaMAewAAKrqGomgAiAKog8eAAjHqIyETwSLHGovkFBUTAZqJu4Fz55oyMork6hY30yLHpje1I4MhYADKikDSsHcMjwABeAPSWoqiwkgDUKQBKbj1LksAA6m1QnuDSEvlm26MWbtmIkOGHiHvMVbEiBYkF3SR1wBgALqcjxQXlCY7FBYWTA379cEgSAAMzwok89CWTgh7WSFHyyDcT0uwCoNwQ5VkBNOxROSDc9HAJJQjDIqPasXCEwh3gAHJi3IpCnhwABDKEFXIAZQuhPAAFsacBzG5KjlgBQjPkum5wZAACrTRDlTzSzIYBnAZJBGbNI0M4qlCngHDai2jLqMMVQAZDB2-ZIAVkxWV+5QAnvbScAAKbg8oY0TmXofBqorpoPqdCLSj2NSbBqCzBbLVbrYDIFwQszx0bmIjJ3Hk27gYVZmV+57gUOYxjqxUvW7AemW4D3MrAHEZRjmGm5HDKiFdIh0FNhG08aUVw0MxLwmatf37BvDYpid064Aujq5Gu-Gcn6AldO-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-lQFcCIOAWQmx2AahbhfSQ-kxihi4LELAXoPAkF1pIcAMJmBfBSEIGM-kvjhBoKAegGA0D3GFGyeS8xhb7XkvQVZ4B5g8DGEZzz9B2BYmAODEKsgaCxFUGMC+qgfoBgoCpWA8JKnxzZGyXWUNGGqDZCFdQ-B5jfGAOoRgoBJBUH2pIL41gYH+R4EsCYXpwDmFVEQITSxGLClDH8wR7BdbKw8MkTKIE8AajGIoHgTxYoQlQDRRoHEFIyWYMSkgQgXLsAoPtNAPB9rCfw+ANk-kyCKGy1gcIUTGBYC4P5AgoAegUd5jCM+eA8BjHUD0HArBqT7QDP5Vg4RnuqBjF6dQBBJB2iWKoc+s3hZuHksLNAFBwjeImGIYWYhUjxBwJc0gjA+Q4DQAQYW4wL4SmQBQeSoYNTrCipINAyHGD7SwGMGM+0KABnTtITYEpVfsHmHyVgNBYuSG8Yd2QaBJBR1iPWRg1g8DhG9eoGg56ShtAS-5CYxeS-F+mCXUvpeSAv0ryXyw5gJRUDFH4Qvtey8gAr236vRe2-18b2KBwrfe8d-mG3maNfh8ICarkaAE-a-l9H13ufle+9N8JNCZfpeF9j+72P1fYp-hD-nyPnfm+6-gAwJsWQYRUDnKPyvk-S+e-z4v5sHoN-HAb+fw-i+i-a+7971f3fxQHQC-z30f3-zP3bwbzXygAHHvy3wgMrwAOPxgLFETQQLryQKrygLnTQIQGTEwPb1-1P2-0QPwPlVnzIKwJIKfz3zTjZGYHtFKCIOg070gOoLLwYKYIQE0CoPANoI4PAIoJAEiH4Mn3YOQNwP3wQD0FYO3zoOHxEOAAfXEOP0EKkM4OgzIhACynkOwJLxQIf2UJcjUJ-0kJwK0JkOfDAIkL-00OEP7wQFNH0I0MsMcNgNQDfTMMQLcMMOkNiAlHiH5gQAbVcIsP8KsO4PtGLHCPsPcN73oAoE8BIgQCjAwDcAoByzECWAlGR1M3sjskYhAFiAmC4AWhLT5AKKKPsmAA1FUGIQQF3QIEWS9DIHYE2BSB4AoCpA1FriIHMGoAmHkjH1sNr1UGGNGKp11iwF8GgCGFiBwBwDIFkAlEXiyOQDEHiGe0kBoEYBwGkIMOLyMPIMbx-DnFi1WK9EkGyxwFgDQCIHZ04HAB4AiOLzglYRGLbzeIxk8EQRrSwFQBaM2DaI6K6J6PAD6IUEGKoEmLbzGMrwmK+Nr14iSKXVdBEEWOWNWPWO2C2J2L2IOKsKOPH2JOkE8GkCwlQHiWAEuIlGuNuPuMeNAGeNePiJLw+LhNrx+I5FCzwHlA8CwmBNBM6O6N6P6JhK5MrwRNLyRNGPoE9zQDmPoA8CxJWLWK9jxO2MkF2P2MOL8OOMOLAlFBAOkBADpIZM2DuIeKeNSTZLH05ORMrx5P7GFCEHPlCHQEsGFPaNFIhKhIGKGKdNLxlJLzlPhIVIDCVOvHNDVJxM1M2O1N1KJIEJ+JOKwONOyFQDelpJwCuJuKtKZNtJeJdMcClNLxdI5VgBpI8B6RKFaN9PBPFOhKDNGJ8LDPLJLzUS4GWRjLoDjI1I2PxJ1MJP1LTMOJgJ-GVAtILOtOZNZNLM+LHxdOYDdI9I8GsCBIbLBLFMhIlNbPhPbOL3DJRIMB7MsEgHoCMAHNxMTIJL1OJINNJPALEGsCWDglQDGhnMZJtJZLtMXM7OLxXLXJWmAGTB9J3P9P3NhODK7KPImBPOlPoHiDIA4hjPhBvITOHOTLHPZMNOJNAE8GFGLFQF7G-MLN-IXLwoxjLNgqAuot5KyXMk9J6G9O3L9ObMDJgrbNYMQpDLPN7MgBn0wqHKTNHMfPHOJMnJANt1zPzJ-PnP-IYpACXO+OUrQH4DQDNM9L1HrJBMbN3IDMlLosZl4sApZCvJIE3OvAaV4iWPVNvOwvEtTOovTPb1fPfJAI3HIrnOLPtLb0dOXPUvoGrNApMGgEuUcE8BwFmnkBIHkkGHoAIDA2Cg8kKFKJoh6G0MQGqMKNqM-QKsKD8HKD5kgFQDlVQCpV+0cFQHAEir4RitgCyKIDwCmSpDdWzCICHUZH1yFDKIqMWlypqMKpGuBVCDKpKtqpACwioG8HoDGBoVkFUEtmoGYDGD5Ath4Hk2BT5E7UaHCH3XyBGIKAmH5zysYl3FGs-Rv0mpKtAJlE9OMDW2AHc2FBwAoGYBWBwGFDbVeDQDZEtXSt6vyFKPKJLXmiqJIHOvyququuKomrKrvQBWpE-yepABoADCewoFYFkH2hvhjGjNxHYBrWGAOsKGOvyFOpqIuththpuoRpAIcAHCMHswissGYE8B4BIDkFUGWPYH2hwCDDrmBVhlODJoKAOoGuLVACpuhsutptunptKtApn3ACjA5q5tgFxpvgwGSS9E0irCny2Ax3yHFqOsZlEAmEBoVquqVqxGKt4lqvqs5pJU4Hvk8HvGkCuTSr6syuyoQCGryptpGvhuVtQBn0xMsD0CIGevMDGCe3QU4BWolGFnkiWvuGkAjHAGpl+CtsKAmGUClrDwmECWpuDpGqmvtr5hANUJjsMHjv2i9B4F1uxu1oDG6A7AFF+DNtEApstrOpqPlvLrYjtrupcG9TqKiCIFQF1iRrxDmusxhD2OFkkAwEYCdxoAlBSDGEwiUW8khW7sOt7otqQFlsHuHuupQFuodvCrVumrIxIDGHkB4Cas5mAB4FbBtCDFzutuAALvBoWn4BLuhueovptUrtupAIbTruAGFi2zxP5pIFYC4gVwwCCMKEpBwh-vzsLoAaAdLvOrAfnQgYmpAOLBgZSEsz2jEFD3IAoGFHAHoFxqWH1rQGBvpmpQhEDrsgiHmCLqVDPryqHqIYdA-yNs9PbDZoYGQFgENGJARFVWwZOtwYGvwZAZEcxhIeroVV+hgYgQ2tWU4CVMQfMFDBoH7lvVlDihGAyr6rBoGshpAY6o0afFDqrtQAMHABEEEsip6D2J4BxoUCjN0wSqwFntND+gbVODzuUYAfmjUbLpcfai0bmyBQkBVJAFmoYBTq4Ev3ETQBYB4A6IRWkAOD+j5AbHklfhhCWBAlXN1mDRicppUZLQScIaSfihSY-20r0fMAMY4CoGMbxtMeSBzo-EYCWGlAmC6LjmFDIAyOkA1HYZyH6oAccepucY6YdDccms9Pun7BADehm0ye8HAF1mExoGNn4AyPoCIGYuekYDGBNpWZolBqLvWehq2bYh2cRqcBdWsrCivLApAB+GzSyfoBybybwAKcQTBO1jKdrAqd7uqdqfqcad-v-qLraaKK+bYi6ZAN5jRvmz6c2EMcGbEBMbMfABAktUyENrIjG3ADQCoAIC4FDFiCAdedWYce4Zhtxe2ZWgZvcF4g8F0rWy3DNWaFKiaifCzNuGXskFDCtKjKwAIBhSoAwDIF3sKniBSo9EgHhnm1kc6K+FDBZfVc1c8BF3oU3EeQZHNR2Bz0YBXqVcFpQYtdQtiHuBhG8Mqk2Ged+Bn1IliF1nAAGZ4D4GkHADGD2KIFUFkDNOetVLcAVxoCwCWBSE3pqVocoHuSnzlYcE2e2aU1AHTQFf4Dg1GC+OEbCCAeYHeftYfDbHpehBUMKEYHeKjSAA`;
                i4k[9] = T[`decodeFromDatabase`](i4k[8]);
                i4k[9][`capZones`][0][`ty`] = 1;
                i4k[4] = new v2k[10]();
                i4k[4][`map`] = i4k[9];
                i4k[4][`mo`] = `ar`;
                function k2C() {
                    var u4k = [arguments];
                    localStorage[`setItem`](`tutcomplete`, true);
                    H6C();
                }
                i4k[4][`bal`][1] = 40;
                I8yy.w9b();
                i4k[3] = E[`createNewState`]([{
                    id: 0,
                    team: 1
                }, {
                    id: 1,
                    team: 2
                }], i4k[9], 999, false, null, i4k[4]);
                i4k[3][`rc`] = 0;
                i4k[3][`ftu`] = 1;
                i4k[6] = [{
                    userName: v2k[79][`userName`],
                    guest: true,
                    team: 1,
                    level: 1,
                    ready: false,
                    avatar: v2k[79][`avatar`]
                }, {
                    userName: `Enemy Player`,
                    guest: true,
                    team: 2,
                    level: 1,
                    ready: false,
                    avatar: {
                        bc: 0x880e4f,
                        layers: []
                    }
                }];
                A4k[978][`go`](i4k[3], 0, 0, 0, i4k[4], i4k[6], []);
                A4k[978][`on`](`tutorialComplete`, k2C);
                Z1C();
            }
            A4k[8][`onmouseover`] = v2k[79][`bhs`];
            function b5C(I9E) {
                //b5C calls k4
                var b4k = [arguments];
                                I8yy.g9b();
                A4k[494] = new k4(b4k[0][0],A4k[14]);
                A4k[494][`networkEngine`][`on`](`status`, S3C=>{
                    
                                        N4C(S3C);
                    if (A4k[790]) {
                        if (S3C == `Connect error` || S3C == `room_full` || S3C == `room_not_found` || S3C == `Initial data timeout.` || S3C == `old_rotation`) {
                            A4k[494][`destroy`]();
                            M6C();
                        }
                    }
                }
                );
                A4k[494][`networkEngine`][`on`](`createdRoom`, ()=>{
                    Z1C();
                    I8yy.w9b();
                    A4k[790] = false;
                }
                );
                A4k[494][`on`](`fullyJoined`, ()=>{
                    I8yy.g9b();
                    Z1C();
                    A4k[790] = false;
                }
                );
                A4k[494][`on`](`endSession`, ()=>{
                    
                                        A4k[494][`destroy`]();
                    A4k[494] = null;
                    A4k[6][`returnToMain`]();
                    A4k[258][`refreshIfNecessary`]();
                }
                );
                A4k[494][`on`](`newToken`, N3C=>{
                    
                                        A4k[14] = N3C;
                    I8yy.w9b();
                    A4k[258][`recvToken`](N3C);
                }
                );
            }
            A4k[20] = document[`getElementById`](`quickPlayWindow_ClassicButton`);
            function k0C() {
                var d4k = [arguments];
                                C5C();
                L4C();
                v2k[79][`bbs`]();
            }
            function e6C() {
                var e4k = [arguments];
                                I8yy.w9b();
                A4k[5][`stop`]();
            }
            A4k[40] = document[`getElementById`](`quickPlayWindow_ArrowsButton`);
            A4k[69] = document[`getElementById`](`quickPlayWindow_GrappleButton`);
            A4k[46] = document[`getElementById`](`quickPlayWindow_ClassicPlayerCount`);
            A4k[33] = document[`getElementById`](`quickPlayWindow_ArrowsPlayerCount`);
            A4k[88] = document[`getElementById`](`quickPlayWindow_GrapplePlayerCount`);
            A4k[96] = document[`getElementById`](`classic_mid`);
            A4k[99] = document[`getElementById`](`classic_mid_quickplay`);
            A4k[64] = document[`getElementById`](`classic_mid_customgame`);
            A4k[87] = document[`getElementById`](`classic_mid_news`);
            A4k[83] = document[`getElementById`](`classic_mid_skins`);
            A4k[32] = document[`getElementById`](`classic_mid_friendlist`);
            A4k[12] = document[`getElementById`](`classic_mid_tutorial`);
            A4k[21] = document[`getElementById`](`prettymenu`);
            A4k[65] = document[`getElementById`](`pretty_bottom`);
            A4k[54] = document[`getElementById`](`pretty_top`);
            function X6C() {
                var C4k = [arguments];
                                A4k[6][`startMusic`]();
            }
            A4k[28] = document[`getElementById`](`pretty_top_bar`);
            A4k[18] = document[`getElementById`](`pretty_top_small_preview`);
            A4k[79] = document[`getElementById`](`pretty_top_level`);
            A4k[41] = document[`getElementById`](`pretty_top_name`);
            A4k[80] = document[`getElementById`](`pretty_top_playercount`);
            A4k[52] = document[`getElementById`](`pretty_top_exit`);
            A4k[13] = document[`getElementById`](`pretty_top_settings`);
            A4k[42] = document[`getElementById`](`pretty_top_volume`);
            A4k[61] = document[`getElementById`](`pretty_top_volume_music`);
            A4k[71] = document[`getElementById`](`pretty_top_help`);
            A4k[90] = document[`getElementById`](`newPlayerGuideContainer`);
            A4k[35] = document[`getElementById`](`newPlayerGuide_text`);
            A4k[27] = document[`getElementById`](`newPlayerGuide_close`);
            A4k[27][`onclick`] = J6C;
            A4k[38] = false;
            A4k[72] = false;
            A4k[89] = false;
            A4k[43] = false;
            A4k[50] = false;
            A4k[48] = document[`getElementById`](`pretty_newsbutton`);
            A4k[62] = document[`getElementById`](`pretty_friendsbutton`);
            A4k[81] = document[`getElementById`](`pretty_tutorialbutton`);
            A4k[47] = document[`getElementById`](`pretty_playbutton`);
            function Z6C() {
                var l4k = [arguments];
                                l4k[2] = A4k[17][`value`];
                v2k[79][`activateButtonSpinner`](A4k[44]);
                $[`post`](`https://bonk2.io/scripts/friends.php`, {
                    token: A4k[14],
                    task: `send`,
                    theirname: l4k[2]
                })[`fail`](function(F9E, L9E, J9E) {
                    var o4k = [arguments];
                    o4k[9] = -1593789994;
                    o4k[6] = 1531358101;
                    o4k[2] = 2;
                    for (o4k[7] = 1; I8yy.m1f(o4k[7].toString(), o4k[7].toString().length, 61347) !== o4k[9]; o4k[7]++) {
                                                o4k[2] += 2;
                    }
                    if (I8yy.m1f(o4k[2].toString(), o4k[2].toString().length, 26113) !== o4k[6]) {
                                            }
                    I8yy.g9b();
                    v2k[79][`deactivateButtonSpinner`](A4k[44]);
                })[`done`]((a7C,c7C)=>{
                    
                                        v2k[79][`deactivateButtonSpinner`](A4k[44]);
                    m0C(a7C);
                }
                );
            }
            A4k[29] = document[`getElementById`](`pretty_skinsbutton`);
            A4k[67] = document[`getElementById`](`pretty_top_replay`);
            A4k[57] = document[`getElementById`](`pretty_top_replay_back`);
            A4k[95] = document[`getElementById`](`pretty_top_replay_next`);
            A4k[59] = document[`getElementById`](`pretty_top_replay_report`);
            A4k[24] = document[`getElementById`](`pretty_top_replay_report_tooltip`);
            A4k[53] = document[`getElementById`](`pretty_top_replay_text`);
            A4k[26] = document[`getElementById`](`pretty_top_replay_fav`);
            A4k[84] = document[`getElementById`](`pretty_top_replay_fav_tooltip`);
            A4k[94] = null;
            v2k[79][`setButtonSounds`]([A4k[52], A4k[13], A4k[42], A4k[61], A4k[71], A4k[67], A4k[57], A4k[95]]);
            function x0C() {
                var I4k = [arguments];
                I8yy.g9b();
                                I4k[8] = `b`;
                if (v2k[79][`quickMode`] == `arrowsquick`) {
                    I4k[8] = `ar`;
                } else if (v2k[79][`quickMode`] == `training1`) {
                    I4k[8] = `bs`;
                } else if (v2k[79][`quickMode`] == `grapplequick`) {
                    I4k[8] = `sp`;
                }
                I4k[5] = {
                    action: `create`,
                    quick: v2k[79][`quickMode`],
                    formValues: {
                        hidden: 0,
                        maxLevel: 999,
                        maxPlayers: 4,
                        minLevel: 0,
                        password: ``,
                        roomName: `Quick Game`
                    },
                    roomName: `Quick Game`,
                    mo: I4k[8]
                };
                b5C(I4k[5]);
            }
            A4k[16] = document[`getElementById`](`sm_gameChoiceCustom`);
            function c0C(h9E) {
                var F4k = [arguments];
                I8yy.g9b();
                                F4k[3] = {
                    action: `create`,
                    quick: false,
                    formValues: F4k[0][0],
                    roomName: F4k[0][0][`roomName`],
                    mo: `b`
                };
                b5C(F4k[3]);
                I1C(`Creating Game`);
                N4C(`Creating room...`);
            }
            A4k[19] = document[`getElementById`](`sm_gameChoiceClassic`);
            A4k[86] = document[`getElementById`](`sm_gameChoiceArrows`);
            A4k[73] = document[`getElementById`](`sm_gameChoiceGrapple`);
            function C0C() {
                var L4k = [arguments];
                I8yy.g9b();
                                if (this[`textContent`] != `SURE?`) {
                    this[`textContent`] = `SURE?`;
                    return;
                }
                $[`post`](`https://bonk2.io/scripts/friends.php`, {
                    token: A4k[14],
                    task: `deleterequest`,
                    theirid: this[`playerID`]
                })[`fail`](function(X9E, m9E, Q9E) {
                    I8yy.g9b();
                    var J4k = [arguments];
                    ;
                })[`done`]((x7C,y7C)=>{
                    I8yy.g9b();
                    a5C();
                }
                );
            }
            function Q0C() {
                var h4k = [arguments];
                                A4k[60][`style`][`visibility`] = `inherit`;
                A4k[313][`blur`]();
                A4k[551] = true;
                O9C(A4k[19], `top`, `-30px`, 0, 150, 30);
                O9C(A4k[86], `top`, `-30px`, 0, 150, 60);
                function O9C(q9E, S9E, w9E, z9E, n9E, y9E) {
                    var X4k = [arguments];
                                        X4k[0][0][`style`][X4k[0][1]] = X4k[0][2];
                    X4k[0][0][`style`][`opacity`] = 0;
                    I8yy.g9b();
                    X4k[1] = {
                        targets: X4k[0][0],
                        opacity: 1,
                        autoplay: true,
                        duration: X4k[0][4],
                        delay: X4k[0][5],
                        easing: `easeInOutCubic`
                    };
                    X4k[1][X4k[0][1]] = X4k[0][3];
                    anime(X4k[1]);
                }
                O9C(A4k[73], `top`, `-30px`, 0, 150, 90);
                O9C(A4k[16], `bottom`, `30px`, 0, 150, 120);
                A4k[89] = false;
            }
            function B0C() {
                var m4k = [arguments];
                                G1C();
                anime({
                    targets: A4k[301],
                    opacity: 0,
                    top: `300px`,
                    autoplay: true,
                    duration: 150,
                    easing: `easeInQuad`,
                    complete: function() {
                        var Q4k = [arguments];
                                                A4k[301][`style`][`visibility`] = `hidden`;
                        I8yy.w9b();
                        A4k[301][`style`][`top`] = 0;
                    }
                });
                A4k[209][`style`][`visibility`] = `inherit`;
                A4k[209][`style`][`opacity`] = 0;
                anime({
                    targets: A4k[209],
                    opacity: 1,
                    autoplay: true,
                    duration: 100,
                    delay: 100,
                    easing: `easeInOutCubic`
                });
                A4k[98][`style`][`left`] = `-150px`;
                anime({
                    targets: A4k[98],
                    left: 0,
                    autoplay: true,
                    duration: 400,
                    easing: `easeOutBack`
                });
                A4k[91][`style`][`right`] = `-150px`;
                anime({
                    targets: A4k[91],
                    right: 0,
                    autoplay: true,
                    duration: 400,
                    easing: `easeOutBack`
                });
                A4k[22][`style`][`opacity`] = 0;
                anime({
                    targets: A4k[22],
                    opacity: 1,
                    autoplay: true,
                    duration: 300,
                    delay: 200,
                    easing: `linear`
                });
            }
            function U6C() {
                var q4k = [arguments];
                                A4k[17][`value`] = ``;
                I8yy.g9b();
                A4k[17][`focus`]();
                A4k[44][`childNodes`][1][`textContent`] = `SEND`;
                A4k[78][`textContent`] = `CANCEL`;
                A4k[17][`style`][`visibility`] = `inherit`;
                A4k[75][`style`][`visibility`] = `inherit`;
                A4k[55][`style`][`visibility`] = `hidden`;
                A4k[44][`onclick`] = Z6C;
            }
            A4k[19][`onclick`] = l6C;
            A4k[86][`onclick`] = h6C;
            v2k[79][`setRollFunctions`](A4k[19]);
            v2k[79][`setRollFunctions`](A4k[86]);
            v2k[79][`setRollFunctions`](A4k[16]);
            function G1C() {
                var S4k = [arguments];
                if (!A4k[50]) {
                    return;
                }
                A4k[90][`style`][`visibility`] = `hidden`;
                I8yy.w9b();
                v2k[79][`resizeGuide`] = null;
            }
            function j0C(p9E) {
                var w4k = [arguments];
                                if (w4k[0][0][`r`] != `success`) {
                    return;
                }
                I8yy.w9b();
                if (w4k[0][0][`requests`][`length`] == 0) {
                    w4k[9] = A4k[30][`insertRow`]();
                    w4k[2] = w4k[9][`insertCell`](0);
                    w4k[2][`textContent`] = `None`;
                    w4k[2][`classList`][`add`](`friends_cell_name`);
                } else {
                    for (w4k[66] = 0; w4k[66] < w4k[0][0][`requests`][`length`]; w4k[66]++) {
                        w4k[4] = w4k[0][0][`requests`][w4k[66]];
                        w4k[3] = A4k[30][`insertRow`]();
                        w4k[5] = w4k[3][`insertCell`](0);
                        w4k[5][`textContent`] = w4k[4][`name`];
                        w4k[5][`classList`][`add`](`friends_cell_name`);
                        w4k[1] = w4k[3][`insertCell`](1);
                        w4k[6] = document[`createElement`](`div`);
                        w4k[6][`textContent`] = `DELETE`;
                        w4k[6][`classList`][`add`](`friends_request_button`);
                        w4k[6][`classList`][`add`](`brownButton`);
                        w4k[6][`classList`][`add`](`brownButton_classic`);
                        w4k[6][`classList`][`add`](`buttonShadow`);
                        w4k[6][`playerID`] = w4k[4][`id`];
                        w4k[6][`onclick`] = C0C;
                        w4k[6][`onmousedown`] = v2k[79][`bcs`];
                        w4k[6][`onmouseover`] = v2k[79][`bhs`];
                        w4k[1][`appendChild`](w4k[6]);
                        w4k[7] = w4k[3][`insertCell`](2);
                        w4k[28] = document[`createElement`](`div`);
                        w4k[28][`textContent`] = `ACCEPT`;
                        w4k[28][`classList`][`add`](`friends_request_button`);
                        w4k[28][`classList`][`add`](`brownButton`);
                        w4k[28][`classList`][`add`](`brownButton_classic`);
                        w4k[28][`classList`][`add`](`buttonShadow`);
                        w4k[28][`playerID`] = w4k[4][`id`];
                        w4k[28][`onclick`] = V0C;
                        w4k[28][`onmousedown`] = v2k[79][`bcs`];
                        w4k[28][`onmouseover`] = v2k[79][`bhs`];
                        w4k[7][`appendChild`](w4k[28]);
                    }
                }
                w4k[27] = false;
                w4k[48] = false;
                for (w4k[77] = 0; w4k[77] < w4k[0][0][`friends`][`length`]; w4k[77]++) {
                    w4k[31] = w4k[0][0][`friends`][w4k[77]];
                    w4k[68] = null;
                    if (w4k[31][`roomid`] == null) {
                        w4k[48] = true;
                        w4k[68] = A4k[77];
                    } else {
                        w4k[27] = true;
                        w4k[68] = A4k[97];
                    }
                    w4k[23] = w4k[68][`insertRow`]();
                    w4k[15] = w4k[23][`insertCell`](0);
                    w4k[15][`classList`][`add`](`friends_cell_name`);
                    w4k[15][`textContent`] = w4k[31][`name`];
                    w4k[57] = w4k[23][`insertCell`](1);
                    w4k[51] = document[`createElement`](`div`);
                    w4k[51][`textContent`] = `REMOVE`;
                    w4k[51][`playerID`] = w4k[31][`id`];
                    w4k[51][`classList`][`add`](`friends_request_button`);
                    w4k[51][`classList`][`add`](`brownButton`);
                    w4k[51][`classList`][`add`](`brownButton_classic`);
                    w4k[51][`classList`][`add`](`buttonShadow`);
                    w4k[51][`onclick`] = Y0C;
                    w4k[51][`onmousedown`] = v2k[79][`bcs`];
                    w4k[51][`onmouseover`] = v2k[79][`bhs`];
                    w4k[57][`appendChild`](w4k[51]);
                    w4k[88] = w4k[23][`insertCell`](2);
                    if (w4k[31][`roomid`] != null) {
                        w4k[42] = document[`createElement`](`div`);
                        w4k[42][`textContent`] = `JOIN`;
                        w4k[42][`classList`][`add`](`friends_request_button`);
                        w4k[42][`classList`][`add`](`brownButton`);
                        w4k[42][`classList`][`add`](`brownButton_classic`);
                        w4k[42][`classList`][`add`](`buttonShadow`);
                        w4k[42][`roomID`] = w4k[31][`roomid`];
                        w4k[42][`onclick`] = u0C;
                        w4k[42][`onmousedown`] = v2k[79][`bcs`];
                        w4k[42][`onmouseover`] = v2k[79][`bhs`];
                        w4k[88][`appendChild`](w4k[42]);
                    } else {
                        w4k[88][`classList`][`add`](`friends_empty_cell`);
                    }
                }
                if (w4k[27] == false) {
                    w4k[14] = A4k[97][`insertRow`]();
                    w4k[33] = w4k[14][`insertCell`](0);
                    w4k[33][`textContent`] = `None`;
                    w4k[33][`classList`][`add`](`friends_cell_name`);
                }
                if (w4k[48] == false) {
                    w4k[30] = A4k[77][`insertRow`]();
                    w4k[92] = w4k[30][`insertCell`](0);
                    w4k[92][`textContent`] = `None`;
                    w4k[92][`classList`][`add`](`friends_cell_name`);
                }
            }
            A4k[1][`onmousemove`] = S0C;
            A4k[1][`addEventListener`](`mouseleave`, N0C);
            A4k[1][`addEventListener`](`mouseenter`, w0C);
            m1C();
            function q0C() {
                var z4k = [arguments];
                                v2k[79][`guest`] = true;
                v2k[79][`userName`] = A4k[866][`value`];
                v2k[79][`setCookie`](`guestname`, v2k[79][`userName`], 999);
                v2k[79][`setCookie`](`guestcol`, v2k[79][`avatar`][`bc`], 999);
                anime({
                    targets: A4k[767],
                    opacity: 0,
                    top: `300px`,
                    autoplay: true,
                    duration: 150,
                    easing: `easeInOutCubic`,
                    complete: function() {
                        var n4k = [arguments];
                                                A4k[767][`style`][`visibility`] = `hidden`;
                        A4k[767][`style`][`top`] = `0px`;
                    }
                });
                A4k[96][`insertBefore`](A4k[12], A4k[99]);
                o6C();
            }
            A4k[99][`onmousedown`] = v2k[79][`bcs`];
            A4k[64][`onmousedown`] = v2k[79][`bcs`];
            function h0C() {
                var y4k = [arguments];
                                A4k[516][`style`][`display`] = `inherit`;
                A4k[516][`style`][`opacity`] = `0`;
                anime({
                    targets: A4k[516],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                A4k[934][`value`] = ``;
                A4k[762][`value`] = ``;
                A4k[423][`value`] = ``;
                I8yy.w9b();
                A4k[120][`textContent`] = `Change your account password here. You can only change one account password every 24 hours.`;
                A4k[120][`style`][`paddingTop`] = `12px`;
                A4k[539] = true;
            }
            function M0C() {
                var p4k = [arguments];
                                if (A4k[762][`value`] != A4k[423][`value`]) {
                    A4k[120][`textContent`] = `Failed: New passwords don't match!`;
                    A4k[120][`style`][`paddingTop`] = `36px`;
                    I6C();
                    return;
                }
                if (!(A4k[762][`value`][`length`] > 0)) {
                    A4k[120][`textContent`] = `Failed: New password blank`;
                    A4k[120][`style`][`paddingTop`] = `36px`;
                    I6C();
                    return;
                }
                $[`post`](`https://bonk2.io/scripts/account_changepassword.php`, {
                    token: A4k[14],
                    oldpass: A4k[934][`value`],
                    newpass: A4k[762][`value`]
                })[`done`]((l2C,h2C)=>{
                    
                                        v2k[79][`deactivateButtonSpinner`](A4k[623]);
                    I8yy.w9b();
                    if (l2C[`r`] == `success`) {
                        o1C();
                    } else {
                        I6C();
                        if (l2C[`e`] == `ratelimited`) {
                            A4k[120][`textContent`] = `Failed: You are doing that too much, please try again in 24 hours`;
                            A4k[120][`style`][`paddingTop`] = `27px`;
                        }
                        if (l2C[`e`] == `token`) {
                            A4k[120][`textContent`] = `Failed: Please log out and in again and try again`;
                            A4k[120][`style`][`paddingTop`] = `27px`;
                        }
                        if (l2C[`e`] == `server_error_1` || l2C[`e`] == `server_error_2`) {
                            A4k[120][`textContent`] = `Failed: Please try again`;
                            A4k[120][`style`][`paddingTop`] = `36px`;
                        }
                        if (l2C[`e`] == `oldpass_wrong`) {
                            A4k[120][`textContent`] = `Failed: Old password is incorrect!`;
                            A4k[120][`style`][`paddingTop`] = `36px`;
                        }
                    }
                }
                )[`fail`](function(O9E, W9E, Z9E) {
                    var O4k = [arguments];
                                        v2k[79][`deactivateButtonSpinner`](A4k[623]);
                    A4k[120][`textContent`] = `Failed: Please try again`;
                    A4k[120][`style`][`paddingTop`] = `36px`;
                });
                I8yy.g9b();
                v2k[79][`activateButtonSpinner`](A4k[623]);
            }
            A4k[87][`onmousedown`] = v2k[79][`bcs`];
            function U1C(x9E) {
                I8yy.g9b();
                var W4k = [arguments];
                                A4k[66][`textContent`] = A4k[677][W4k[0][0]][`date`];
                A4k[51][`textContent`] = A4k[677][W4k[0][0]][`news`];
                if (A4k[677][W4k[0][0] - 1]) {
                    A4k[34][`classList`][`remove`](`brownButtonDisabled`);
                } else {
                    A4k[34][`classList`][`add`](`brownButtonDisabled`);
                }
                if (A4k[677][W4k[0][0] + 1]) {
                    A4k[11][`classList`][`remove`](`brownButtonDisabled`);
                } else {
                    A4k[11][`classList`][`add`](`brownButtonDisabled`);
                }
            }
            A4k[83][`onmousedown`] = v2k[79][`bcs`];
            A4k[32][`onmousedown`] = v2k[79][`bcs`];
            A4k[12][`onmousedown`] = v2k[79][`bcs`];
            A4k[99][`onmouseover`] = v2k[79][`bhs`];
            A4k[64][`onmouseover`] = v2k[79][`bhs`];
            A4k[87][`onmouseover`] = v2k[79][`bhs`];
            function v9C() {
                var Z4k = [arguments];
                                v2k[79][`quickMode`] = `training1`;
                if (v2k[79][`classic`]) {
                    C5C();
                    v2k[79][`rlc`]();
                } else {
                    E4C();
                }
                i5C();
                J6C();
            }
            A4k[83][`onmouseover`] = v2k[79][`bhs`];
            function M6C() {
                var x4k = [arguments];
                                I8yy.w9b();
                $[`post`](`https://bonk2.io/scripts/matchmaking_query.php`, {
                    version: v2k[79][`version`],
                    mode: v2k[79][`quickMode`],
                    excludeaddresses: v2k[79][`quickExcludeAddresses`][`join`](`#`)
                })[`done`]((K3C,r3C)=>{
                    var W3C;
                    I8yy.g9b();
                                        W3C = K3C;
                    if (W3C[`r`] == `fail`) {
                        throw new Error(W3C[`e`]);
                    }
                    if (W3C[`r`] == `join`) {
                        v2k[79][`quickExcludeAddresses`][`push`](W3C[`address`]);
                        N4C(`Joining a game...`);
                        y0C(W3C[`address`], W3C[`server`], v2k[79][`quickMode`]);
                    }
                    if (W3C[`r`] == `create`) {
                        N4C(`Creating a game...`);
                        v2k[79][`server`] = W3C[`server`];
                        v2k[79][`lat`] = W3C[`lat`];
                        v2k[79][`long`] = W3C[`long`];
                        v2k[79][`country`] = W3C[`country`];
                        v2k[79][`dbid`] = 0;
                        x0C();
                    }
                }
                )[`fail`](function(M9E, s9E, c9E) {
                    var M4k = [arguments];
                    I8yy.w9b();
                    throw new Error(M4k[0][2]);
                });
            }
            A4k[32][`onmouseover`] = v2k[79][`bhs`];
            A4k[12][`onmouseover`] = v2k[79][`bhs`];
            A4k[47][`onclick`] = function() {
                I8yy.w9b();
                if (A4k[551] == false) {
                    K4C();
                    Q0C();
                } else {
                    E4C();
                }
            }
            ;
            function z0C() {
                I8yy.g9b();
                var s4k = [arguments];
                                if (A4k[494]) {
                    A4k[494][`tabbed`](true);
                }
            }
            A4k[42][`onclick`] = function(D9E) {
                var c4k = [arguments];
                                if (c4k[0][0][`target`] != A4k[42]) {
                    return;
                }
                v2k[79][`mute`] = !v2k[79][`mute`];
                localStorage[`setItem`](`mute`, v2k[79][`mute`]);
                m1C();
            }
            ;
            A4k[61][`onclick`] = function(Y9E) {
                var D4k = [arguments];
                                v2k[79][`musicMute`] = !v2k[79][`musicMute`];
                localStorage[`setItem`](`musicmute`, v2k[79][`musicMute`]);
                m1C();
                if (A4k[6][`showing`]()) {
                    if (v2k[79][`musicMute`]) {
                        A4k[6][`stopMusic`]();
                    } else {
                        A4k[6][`startMusic`]();
                    }
                }
            }
            ;
            A4k[71][`onclick`] = function() {
                var Y4k = [arguments];
                                I8yy.w9b();
                v2k[79][`customControls`][`help`] = !v2k[79][`customControls`][`help`];
                i6C();
                f6C();
                v2k[79][`setCookie`](`noingamehelp`, v2k[79][`customControls`][`help`], 999);
            }
            ;
            A4k[67][`onmouseenter`] = function() {
                var N4k = [arguments];
                                if (!A4k[38]) {
                    A4k[57][`style`][`visibility`] = `inherit`;
                    A4k[95][`style`][`visibility`] = `inherit`;
                    A4k[53][`style`][`visibility`] = `inherit`;
                    A4k[59][`style`][`visibility`] = `inherit`;
                    A4k[26][`style`][`visibility`] = `inherit`;
                    j6C();
                    u6C();
                }
            }
            ;
            A4k[67][`onmouseleave`] = function() {
                var V4k = [arguments];
                                A4k[57][`style`][`visibility`] = `hidden`;
                A4k[95][`style`][`visibility`] = `hidden`;
                A4k[53][`style`][`visibility`] = `hidden`;
                A4k[59][`style`][`visibility`] = `hidden`;
                A4k[26][`style`][`visibility`] = `hidden`;
                Y6C();
            }
            ;
            A4k[57][`onclick`] = function() {
                var g4k = [arguments];
                                A4k[313][`prevReplay`]();
            }
            ;
            A4k[95][`onclick`] = function() {
                var U4k = [arguments];
                I8yy.w9b();
                                A4k[313][`nextReplay`]();
            }
            ;
            function P0C(N9E) {
                var B4k = [arguments];
                                A4k[767][`style`][`visibility`] = `inherit`;
                A4k[767][`style`][`opacity`] = 0;
                anime({
                    targets: A4k[767],
                    opacity: 1,
                    autoplay: true,
                    duration: 150,
                    delay: 60,
                    easing: `easeInOutCubic`
                });
                while (A4k[966][`firstChild`]) {
                    A4k[966][`removeChild`](A4k[966][`firstChild`]);
                }
                function K8h() {
                    var a4k = [arguments];
                                        while (A4k[966][`firstChild`]) {
                        A4k[966][`removeChild`](A4k[966][`firstChild`]);
                    }
                    v8[`createImage`](v2k[79][`avatar`], 1, A4k[966], ``, 150, 150);
                }
                if (v2k[79][`getCookie`](`guestname`) != ``) {
                    A4k[866][`value`] = v2k[79][`getCookie`](`guestname`);
                }
                if (v2k[79][`getCookie`](`guestcol`) != ``) {
                    v2k[79][`avatar`][`bc`] = parseInt(v2k[79][`getCookie`](`guestcol`));
                }
                v8[`createImage`](v2k[79][`avatar`], 1, A4k[966], ``, 150, 150);
                A4k[942][`onclick`] = B4k[0][0];
                A4k[966][`onclick`] = function() {
                    J0C(K8h, A4k[767], 50);
                }
                ;
                V1C(`Enter a name and choose your player 
color. Or just leave them as they are, 
and click Play`, A4k[942], 270, -150);
            }
            A4k[67][`onclick`] = function() {
                var t4k = [arguments];
                                I8yy.w9b();
                if (A4k[494]) {
                    A4k[494][`networkEngine`][`sendArmRecord`]();
                }
            }
            ;
            function c6C() {
                I8yy.w9b();
                A4k[38] = false;
            }
            A4k[26][`onmouseover`] = function() {
                var E4k = [arguments];
                                A4k[84][`style`][`visibility`] = `inherit`;
                v2k[79][`bhs`]();
            }
            ;
            A4k[26][`onmouseout`] = function() {
                var R4k = [arguments];
                                A4k[84][`style`][`visibility`] = `hidden`;
            }
            ;
            A4k[26][`onclick`] = function() {
                var j2G = [arguments];
                                if (v2k[79][`guest`]) {
                    return;
                }
                if (!A4k[94]) {
                    return;
                }
                if (!(A4k[94][`mid`] > 0)) {
                    return;
                }
                $[`post`](`https://bonk2.io/scripts/map_fave.php`, {
                    token: A4k[14],
                    mapid: A4k[94][`mid`],
                    action: `f`
                });
                A4k[26][`classList`][`add`](`pretty_top_replay_fav_checked`);
            }
            ;
            A4k[59][`onmouseover`] = function() {
                var k2G = [arguments];
                                A4k[24][`style`][`visibility`] = `inherit`;
                v2k[79][`bhs`]();
            }
            ;
            function v6C() {
                var f2G = [arguments];
                I8yy.g9b();
                                f2G[1] = v2k[79][`getCookie`](`rememberToken`);
                if (f2G[1] && f2G[1] != ``) {
                    return f2G[1];
                }
                return false;
            }
            function I9C(V9E) {
                var G2G = [arguments];
                I8yy.P2k(19);
                G2G[7] = I8yy.r2k(20, 5, 10, 15889, 1738);
                return G2G[0][0] + v8yy[G2G[7]];
            }
            function T6C() {
                var T2G = [arguments];
                                A4k[313][`blur`]();
                A4k[15][`style`][`visibility`] = `inherit`;
                A4k[15][`style`][`opacity`] = `0`;
                anime({
                    targets: A4k[15],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                A4k[58] = true;
                I8yy.H2k(0);
                T2G[2] = I8yy.r2k(2, 45);
                I8yy.P2k(124);
                T2G[5] = I8yy.A2k(37, 9, 1, 4);
                A4k[869] = A4k[677][v8yy[T2G[2]]] - T2G[5];
                U1C(A4k[869]);
                A4k[48][`textContent`] = `NEWS`;
                A4k[87][`textContent`] = `NEWS`;
                localStorage[`setItem`](`newscount`, A4k[677][`length`]);
                A4k[89] = false;
            }
            function V0C() {
                var K2G = [arguments];
                I8yy.w9b();
                                $[`post`](`https://bonk2.io/scripts/friends.php`, {
                    token: A4k[14],
                    task: `accept`,
                    theirid: this[`playerID`]
                })[`fail`](function(g9E, U9E, B9E) {
                    var r2G = [arguments];
                    ;
                })[`done`]((Y7C,C7C)=>{
                    a5C();
                }
                );
            }
            function D6C() {
                var A2G = [arguments];
                                anime({
                    targets: A4k[371],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        I8yy.w9b();
                        var P2G = [arguments];
                                                A4k[371][`style`][`visibility`] = `hidden`;
                    }
                });
                A4k[258][`enableMouseEvents`]();
            }
            function e0C() {
                var H2G = [arguments];
                H2G[2] = 1011832268;
                H2G[6] = -661445298;
                H2G[3] = 2;
                for (H2G[4] = 1; I8yy.m1f(H2G[4].toString(), H2G[4].toString().length, 98423) !== H2G[2]; H2G[4]++) {
                                        r1C();
                    A4k[556][`checked`] = v2k[79][`customControls`][`filter`];
                    I8yy.H2k(25);
                    H2G[1] = I8yy.A2k(380, 26989, 6, 12);
                    I8yy.H2k(22);
                    H2G[7] = I8yy.A2k(451, 95, 5, 90);
                    I8yy.P2k(1);
                    H2G[8] = I8yy.A2k(14, 15);
                    A4k[287][`selectedIndex`] = v2k[79][v8yy[H2G[1]]][v8yy[H2G[7]]] - H2G[8];
                    A4k[344][`checked`] = v2k[79][`customControls`][`stats`];
                    H2G[3] += 2;
                }
                if (I8yy.d1f(H2G[3].toString(), H2G[3].toString().length, 54574) !== H2G[6]) {
                                        r1C();
                    A4k[556][`mv`] = v2k[79][`MULTIPLY`][`colors`];
                    I8yy.P2k(1);
                    H2G[5] = I8yy.r2k(6165, 6850);
                    I8yy.P2k(21);
                    H2G[83] = I8yy.A2k(11412, 632, 5706);
                    I8yy.H2k(98);
                    H2G[80] = I8yy.A2k(16, 8);
                    A4k[287][`username_taken`] = v2k[79][v8yy[H2G[5]]][v8yy[H2G[83]]] + H2G[80];
                    A4k[344][v8yy[8068]] = v2k[79][`minLevel`][`ja`];
                }
                if (v2k[79][`guest`]) {
                    A4k[674][`classList`][`add`](`settings_change_password_label_disable`);
                } else {
                    A4k[674][`classList`][`remove`](`settings_change_password_label_disable`);
                }
            }
            A4k[59][`onmouseout`] = function() {
                var v2G = [arguments];
                I8yy.w9b();
                                A4k[24][`style`][`visibility`] = `hidden`;
            }
            ;
            A4k[59][`onclick`] = function() {
                var i2G = [arguments];
                                A4k[313][`reportReplay`]();
            }
            ;
            A4k[42][`onmouseover`] = function() {
                I8yy.g9b();
                var u2G = [arguments];
                                A4k[61][`style`][`visibility`] = `inherit`;
            }
            ;
            function g5C() {
                var b2G = [arguments];
                                $(document)[`off`](`keydown`, F4C);
                anime({
                    targets: A4k[334],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var d2G = [arguments];
                                                A4k[334][`style`][`visibility`] = `hidden`;
                    }
                });
                A4k[226] = false;
                A4k[313][`unblur`]();
                L4C();
                A4k[89] = true;
            }
            A4k[42][`onmouseout`] = function() {
                var e2G = [arguments];
                I8yy.g9b();
                                A4k[61][`style`][`visibility`] = `hidden`;
            }
            ;
            function N0C() {
                var C2G = [arguments];
                                if (A4k[38]) {
                    return;
                }
                I8yy.w9b();
                if (A4k[89] == false) {
                    return;
                }
                k1C(`slow`);
                A4k[43] = true;
                if (v2k[79][`classic`]) {
                    u6C();
                }
            }
            A4k[82] = null;
            function Q5C() {
                var l2G = [arguments];
                                A4k[301][`style`][`visibility`] = `inherit`;
                A4k[301][`style`][`opacity`] = `0`;
                anime({
                    targets: A4k[301],
                    opacity: 1,
                    autoplay: true,
                    duration: 100,
                    easing: `easeInOutCubic`
                });
                A4k[783][`onclick`] = E0C;
                A4k[933][`onclick`] = B0C;
                V1C(`Looks like you're new here.
 Click "Play as Guest" so you don't have 
to make an account`, A4k[783], -57, -300);
                A4k[773][`style`][`left`] = `-200px`;
                I8yy.w9b();
                anime({
                    targets: A4k[773],
                    left: 0,
                    autoplay: true,
                    duration: 400,
                    easing: `easeOutBack`
                });
                A4k[261][`style`][`right`] = `-200px`;
                anime({
                    targets: A4k[261],
                    right: 0,
                    autoplay: true,
                    duration: 400,
                    easing: `easeOutBack`
                });
            }
            function N4C(a9E) {
                var o2G = [arguments];
                                A4k[385][`push`](o2G[0][0]);
                while (A4k[385][`length`] > 6) {
                    A4k[385][`shift`]();
                }
                o2G[6] = ``;
                for (o2G[3] = 0; o2G[3] < A4k[385][`length`]; o2G[3]++) {
                    if (o2G[3] > 0) {
                        o2G[6] += `<br />`;
                    }
                    o2G[6] += A4k[385][o2G[3]];
                }
                I8yy.w9b();
                A4k[278][`innerHTML`] = o2G[6];
                A4k[278][`scrollTop`] = A4k[278][`scrollHeight`];
            }
            A4k[98] = document[`getElementById`](`loginwindow`);
            A4k[10] = document[`getElementById`](`loginwindow_submitbutton`);
            A4k[10][`onmousedown`] = v2k[79][`bcs`];
            A4k[10][`onmouseover`] = v2k[79][`bhs`];
            A4k[25] = document[`getElementById`](`loginwindow_username`);
            A4k[36] = document[`getElementById`](`loginwindow_password`);
            A4k[93] = document[`getElementById`](`loginwindow_explain`);
            A4k[49] = document[`getElementById`](`loginwindow_remember_checkbox`);
            A4k[49][`onclick`] = v2k[79][`rlc`];
            function V1C(t9E, E9E, R9E, j1E) {
                var I2G = [arguments];
                                if (!A4k[50]) {
                    return;
                }
                A4k[90][`style`][`visibility`] = `inherit`;
                I2G[8] = I2G[0][1][`getBoundingClientRect`]();
                I2G[7] = A4k[9][`getBoundingClientRect`]();
                I8yy.P2k(60);
                I2G[9] = I8yy.r2k(8, 554, 527, 527);
                I8yy.H2k(0);
                I2G[5] = I8yy.r2k(539, 8);
                I8yy.H2k(114);
                I2G[6] = I8yy.r2k(18, 8675, 1736, 3);
                A4k[90][`style`][`top`] = I2G[8][v8yy[I2G[9]]] - I2G[7][v8yy[I2G[5]]] + I2G[0][3] + v8yy[I2G[6]];
                I8yy.H2k(21);
                I2G[4] = I8yy.A2k(286, 292, 143);
                I8yy.H2k(85);
                I8yy.g9b();
                I2G[2] = I8yy.r2k(4, 74, 257, 2);
                I8yy.P2k(138);
                I2G[3] = I8yy.A2k(2, 16, 1733, 17, 27738);
                A4k[90][`style`][`left`] = I2G[8][v8yy[I2G[4]]] - I2G[7][v8yy[I2G[2]]] + I2G[0][2] + v8yy[I2G[3]];
                A4k[35][`textContent`] = I2G[0][0];
                A4k[90][`style`][`opacity`] = 0;
                A4k[90][`style`][`visibility`] = `inherit`;
                anime({
                    targets: A4k[90],
                    opacity: 1,
                    autoplay: true,
                    duration: 150,
                    delay: 200,
                    easing: `easeInOutCubic`
                });
                if (I2G[0][1] == A4k[47]) {
                    I2G[0][3] += 70;
                    ;
                }
                v2k[79][`resizeGuide`] = {
                    target: I2G[0][1],
                    xOffset: I2G[0][2],
                    yOffset: I2G[0][3]
                };
            }
            A4k[91] = document[`getElementById`](`registerwindow`);
            function E0C() {
                I8yy.w9b();
                anime({
                    targets: A4k[301],
                    opacity: 0,
                    top: `300px`,
                    autoplay: true,
                    duration: 150,
                    easing: `easeInQuad`,
                    complete: function() {
                        var F2G = [arguments];
                                                A4k[301][`style`][`visibility`] = `hidden`;
                        I8yy.g9b();
                        A4k[301][`style`][`top`] = 0;
                    }
                });
                P0C(q0C);
            }
            A4k[85] = document[`getElementById`](`registerwindow_submitbutton`);
            A4k[85][`onmousedown`] = v2k[79][`bcs`];
            A4k[85][`onmouseover`] = v2k[79][`bhs`];
            A4k[37] = document[`getElementById`](`registerwindow_username`);
            A4k[76] = document[`getElementById`](`registerwindow_password`);
            A4k[70] = document[`getElementById`](`registerwindow_remember_checkbox`);
            A4k[70][`onclick`] = v2k[79][`rlc`];
            A4k[22] = document[`getElementById`](`account_close`);
            A4k[22][`onclick`] = U0C;
            A4k[22][`onmousedown`] = v2k[79][`bbs`];
            A4k[22][`onmouseover`] = v2k[79][`bhs`];
            A4k[15] = document[`getElementById`](`newswindow`);
            function H0C() {
                var L2G = [arguments];
                                I8yy.g9b();
                if (A4k[494]) {
                    A4k[494][`tabbed`](false);
                }
            }
            function r1C() {
                var J2G = [arguments];
                                J2G[9] = A4k[873];
                while (J2G[9][`rows`][`length`] > 1) {
                    J2G[9][`deleteRow`](1);
                }
                J2G[5] = [[`Left`, `left1`, `left2`, `left3`], [`Right`, `right1`, `right2`, `right3`], [`Up`, `up1`, `up2`, `up3`], [`Down`, `down1`, `down2`, `down3`], [`Heavy`, `heavy1`, `heavy2`, `heavy3`], [`Special`, `swing1`, `swing2`, `swing3`]];
                J2G[4] = function(k1E) {
                    var h2G = [arguments];
                                        h2G[1] = J2G[9][`insertRow`]();
                    h2G[9] = h2G[1][`insertCell`](0);
                    h2G[9][`style`][`width`] = `17%`;
                    h2G[9][`textContent`] = J2G[5][h2G[0][0]][0];
                    h2G[8] = h2G[1][`insertCell`](1);
                    h2G[8][`style`][`width`] = `27%`;
                    h2G[8][`textContent`] = A4k[319][A4k[465][J2G[5][h2G[0][0]][1]]];
                    h2G[8][`classList`][`add`](`redefineControls_selectionCell`);
                    h2G[6] = h2G[1][`insertCell`](2);
                    h2G[6][`style`][`width`] = `27%`;
                    h2G[6][`textContent`] = A4k[319][A4k[465][J2G[5][h2G[0][0]][2]]];
                    h2G[6][`classList`][`add`](`redefineControls_selectionCell`);
                    h2G[4] = h2G[1][`insertCell`](3);
                    h2G[4][`style`][`width`] = `27%`;
                    h2G[4][`textContent`] = A4k[319][A4k[465][J2G[5][h2G[0][0]][3]]];
                    h2G[4][`classList`][`add`](`redefineControls_selectionCell`);
                    h2G[8][`onclick`] = function() {
                        I8yy.g9b();
                        var X2G = [arguments];
                                                A4k[720] = J2G[5][h2G[0][0]][1];
                        h2G[8][`textContent`] = `...`;
                        $(document)[`off`](`keydown`, F4C);
                        $(document)[`on`](`keydown`, F4C);
                    }
                    ;
                    h2G[6][`onclick`] = function() {
                        var m2G = [arguments];
                                                I8yy.g9b();
                        A4k[720] = J2G[5][h2G[0][0]][2];
                        h2G[6][`textContent`] = `...`;
                        $(document)[`off`](`keydown`, F4C);
                        $(document)[`on`](`keydown`, F4C);
                    }
                    ;
                    h2G[4][`onclick`] = function() {
                        var Q2G = [arguments];
                        I8yy.w9b();
                                                A4k[720] = J2G[5][h2G[0][0]][3];
                        h2G[4][`textContent`] = `...`;
                        $(document)[`off`](`keydown`, F4C);
                        $(document)[`on`](`keydown`, F4C);
                    }
                    ;
                }
                ;
                for (J2G[1] = 0; J2G[1] < J2G[5][`length`]; J2G[1]++) {
                    (1,
                    J2G[4])(J2G[1]);
                }
            }
            A4k[45] = document[`getElementById`](`news_close`);
            A4k[45][`onclick`] = d6C;
            A4k[45][`onmousedown`] = v2k[79][`bbs`];
            A4k[45][`onmouseover`] = v2k[79][`bhs`];
            A4k[66] = document[`getElementById`](`newswindow_title`);
            function h6C() {
                var q2G = [arguments];
                                v2k[79][`quickMode`] = `arrowsquick`;
                if (v2k[79][`classic`]) {
                    C5C();
                    v2k[79][`rlc`]();
                } else {
                    E4C();
                }
                i5C();
            }
            A4k[51] = document[`getElementById`](`newswindow_content`);
            A4k[34] = document[`getElementById`](`newswindow_back`);
            A4k[11] = document[`getElementById`](`newswindow_forward`);
            A4k[92] = document[`getElementById`](`friendsContainer`);
            A4k[23] = document[`getElementById`](`friends_close`);
            A4k[23][`onclick`] = P6C;
            A4k[23][`onmousedown`] = v2k[79][`bbs`];
            A4k[30] = document[`getElementById`](`friends_requests_table`);
            A4k[97] = document[`getElementById`](`friends_online_table`);
            A4k[77] = document[`getElementById`](`friends_offline_table`);
            A4k[31] = document[`getElementById`](`friends_legacy_table`);
            A4k[63] = document[`getElementById`](`friends_title_legacy`);
            A4k[63][`onclick`] = A0C;
            A4k[39] = document[`getElementById`](`friends_refresh_button`);
            A4k[39][`onmousedown`] = v2k[79][`bcs`];
            A4k[39][`onmouseover`] = v2k[79][`bhs`];
            A4k[68] = document[`getElementById`](`friends_add_button`);
            function i0C(f1E) {
                var S2G = [arguments];
                                I8yy.g9b();
                S2G[0][0] = S2G[0][0][`substring`](0, S2G[0][0][`length`] - 2);
                return parseInt(S2G[0][0]);
            }
            A4k[68][`onmousedown`] = v2k[79][`bcs`];
            A4k[68][`onmouseover`] = v2k[79][`bhs`];
            A4k[56] = document[`getElementById`](`friendsSendWindowContainer`);
            A4k[78] = document[`getElementById`](`friendsSendWindow_cancel`);
            A4k[44] = document[`getElementById`](`friendsSendWindow_send`);
            function F0C() {
                var w2G = [arguments];
                                quickPlayWindow[`style`][`visibility`] = `inherit`;
                quickPlayWindow[`style`][`opacity`] = `0`;
                anime({
                    targets: quickPlayWindow,
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                ;
            }
            function Y0C() {
                var z2G = [arguments];
                                if (this[`textContent`] != `SURE?`) {
                    this[`textContent`] = `SURE?`;
                    return;
                }
                I8yy.w9b();
                $[`post`](`https://bonk2.io/scripts/friends.php`, {
                    token: A4k[14],
                    task: `unfriend`,
                    theirid: this[`playerID`]
                })[`fail`](function(G1E, T1E, K1E) {
                    var n2G = [arguments];
                    ;
                })[`done`]((S7C,N7C)=>{
                    a5C();
                }
                );
            }
            function g9C() {
                var y2G = [arguments];
                                y2G[4] = v2k[79][`getCookie`](`noguide`);
                if (y2G[4]) {
                    return false;
                }
                I8yy.g9b();
                return true;
            }
            A4k[17] = document[`getElementById`](`friendsSendWindow_name`);
            A4k[75] = document[`getElementById`](`friendsSendWindow_label`);
            function C5C() {
                var p2G = [arguments];
                                I8yy.w9b();
                quickPlayWindow[`style`][`pointerEvents`] = `none`;
                anime({
                    targets: quickPlayWindow,
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var O2G = [arguments];
                                                quickPlayWindow[`style`][`visibility`] = `hidden`;
                        quickPlayWindow[`style`][`pointerEvents`] = `auto`;
                    }
                });
            }
            A4k[55] = document[`getElementById`](`friendsSendWindow_responselabel`);
            v2k[79][`setButtonSounds`]([A4k[44]]);
            A4k[78][`onmouseover`] = v2k[79][`bhs`];
            A4k[78][`onmousedown`] = v2k[79][`bbs`];
            A4k[60] = document[`getElementById`](`sm_gameChoiceWindow`);
            A4k[14] = ``;
            function m1C() {
                var W2G = [arguments];
                I8yy.w9b();
                                if (v2k[79][`mute`] == true) {
                    A4k[42][`classList`][`add`](`pretty_top_volume_off`);
                } else {
                    A4k[42][`classList`][`remove`](`pretty_top_volume_off`);
                }
                if (v2k[79][`musicMute`] == true) {
                    A4k[61][`classList`][`add`](`pretty_top_volume_music_off`);
                } else {
                    A4k[61][`classList`][`remove`](`pretty_top_volume_music_off`);
                }
            }
            A4k[74] = `ar`;
            A4k[58] = false;
            A4k[226] = false;
            A4k[458] = false;
            A4k[174] = false;
            A4k[551] = false;
            A4k[539] = false;
            A4k[262] = 0;
            A4k[709] = null;
            A4k[847] = document[`getElementById`](`sm_gameChoiceQuickClassicCount`);
            A4k[338] = document[`getElementById`](`sm_gameChoiceQuickArrowsCount`);
            A4k[495] = document[`getElementById`](`sm_gameChoiceQuickGrappleCount`);
            A4k[601] = document[`getElementById`](`sm_gameChoiceQuickSimpleCount`);
            A4k[501] = document[`getElementById`](`sm_gameChoiceCustomCount`);
            A4k[978] = null;
            function a6C() {
                var Z2G = [arguments];
                I8yy.g9b();
                                $[`get`](`https://bonk2.io/scripts/combinedplayercount.txt`)[`done`]((E9C,P9C)=>{
                    var d9C;
                                        d9C = JSON[`parse`](E9C);
                    I8yy.w9b();
                    if (typeof d9C[`bonk`] != `object`) {
                        return;
                    }
                    A4k[709] = d9C;
                    f0C();
                }
                )[`fail`](function(r1E, A1E, P1E) {
                    var x2G = [arguments];
                });
                A4k[262] = Date[`now`]();
            }
            A4k[313] = new y4(null,null,null);
            function D0C(H1E) {
                var M2G = [arguments];
                                A4k[188][`style`][`visibility`] = `inherit`;
                A4k[567][`textContent`] = `Automatically logging you in...`;
                A4k[986][`onclick`] = d0C;
                A4k[892] = true;
                I8yy.w9b();
                $[`post`](`https://bonk2.io/scripts/login_auto.php`, {
                    rememberToken: M2G[0][0]
                })[`done`]((q2C,t2C)=>{
                    var U2C;
                                        if (A4k[892] == false) {
                        return;
                    }
                    A4k[892] = false;
                    I8yy.w9b();
                    U2C = q2C;
                    if (U2C[`r`] == `success`) {
                        T0C(U2C);
                    } else {
                        A4k[567][`textContent`] = `Auto login failed! Please log in again.`;
                        v2k[79][`setCookie`](`rememberToken`, ``, -999);
                    }
                }
                )[`fail`](function(v1E, i1E, u1E) {
                    var s2G = [arguments];
                    throw new Error(s2G[0][2]);
                });
            }
            A4k[313][`blur`]();
            A4k[313][`on`](`replayCredit`, function(b1E) {
                var c2G = [arguments];
                A4k[94] = c2G[0][0];
                clearInterval(A4k[657]);
                A4k[657] = setInterval(n9C, 2500);
                n9C();
                j6C();
                function n9C() {
                    I8yy.w9b();
                    var D2G = [arguments];
                                        if (A4k[53][`style`][`visibility`] != `inherit` && c2G[0][0][`force`] != true) {
                        return;
                    }
                    c2G[0][0][`force`] = false;
                    while (A4k[53][`firstChild`]) {
                        A4k[53][`removeChild`](A4k[53][`lastChild`]);
                    }
                    if (c2G[0][0][`state`] == 1) {
                        D2G[2] = document[`createElement`](`span`);
                        D2G[2][`textContent`] = c2G[0][0][`mn`];
                        D2G[6] = document[`createElement`](`span`);
                        D2G[6][`textContent`] = ` by `;
                        D2G[6][`style`][`opacity`] = `0.6`;
                        D2G[7] = document[`createElement`](`span`);
                        D2G[7][`textContent`] = c2G[0][0][`ma`];
                        A4k[53][`appendChild`](D2G[2]);
                        A4k[53][`appendChild`](D2G[6]);
                        A4k[53][`appendChild`](D2G[7]);
                        if (c2G[0][0][`rxn`] != ``) {
                            c2G[0][0][`state`] = 2;
                        }
                        return;
                    }
                    if (c2G[0][0][`state`] == 2) {
                        D2G[8] = document[`createElement`](`span`);
                        D2G[8][`textContent`] = `...based on `;
                        D2G[8][`style`][`opacity`] = `0.6`;
                        D2G[2] = document[`createElement`](`span`);
                        D2G[2][`textContent`] = c2G[0][0][`rxn`];
                        D2G[6] = document[`createElement`](`span`);
                        D2G[6][`textContent`] = ` by `;
                        D2G[6][`style`][`opacity`] = `0.6`;
                        D2G[7] = document[`createElement`](`span`);
                        D2G[7][`textContent`] = c2G[0][0][`rxa`];
                        A4k[53][`appendChild`](D2G[8]);
                        A4k[53][`appendChild`](D2G[2]);
                        A4k[53][`appendChild`](D2G[6]);
                        A4k[53][`appendChild`](D2G[7]);
                        c2G[0][0][`state`] = 1;
                        return;
                    }
                }
            });
            function l0C() {
                var Y2G = [arguments];
                                A4k[334][`style`][`visibility`] = `inherit`;
                I8yy.g9b();
                A4k[334][`style`][`opacity`] = `0`;
                anime({
                    targets: A4k[334],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                A4k[226] = true;
                A4k[465] = v2k[79][`customControls`][`clone`]();
                e0C();
                A4k[165][`onclick`] = g5C;
                A4k[959][`onclick`] = X0C;
                A4k[89] = false;
            }
            A4k[977] = new J4();
            function H6C() {
                var N2G = [arguments];
                                A4k[978][`destroy`]();
                A4k[978] = null;
                if (v2k[79][`loggedIn`]) {
                    A4k[6][`returnToMain`]();
                } else {
                    A4k[9][`style`][`display`] = `block`;
                    A4k[313][`resume`]();
                    if (v2k[79][`musicMute`] == false) {
                        A4k[6][`startMusic`]();
                    }
                    Q5C();
                    c6C();
                }
            }
            A4k[977][`on`](`hideSkinManager`, m6C);
            A4k[81][`addEventListener`](`click`, ()=>{
                K4C();
                I8yy.g9b();
                q1C();
            }
            );
            A4k[12][`addEventListener`](`click`, ()=>{
                K4C();
                u4C();
                q1C();
            }
            );
            A4k[16][`addEventListener`](`click`, ()=>{
                
                                I8yy.w9b();
                K4C();
                A4k[313][`blur`]();
                A4k[258][`show`]();
                A4k[89] = false;
            }
            );
            function i1C() {
                var V2G = [arguments];
                                if (v2k[79][`customControls`][`stats`]) {
                    v2k[79][`simpleFPS`][`show`]();
                } else {
                    v2k[79][`simpleFPS`][`hide`]();
                }
                I8yy.H2k(0);
                V2G[2] = I8yy.A2k(366, 5);
                I8yy.P2k(16);
                V2G[1] = I8yy.r2k(445, 20, 2198, 6);
                I8yy.P2k(56);
                V2G[8] = I8yy.r2k(3, 13, 16, 23);
                V2G[4] = v2k[79][v8yy[V2G[2]]][v8yy[V2G[1]]] == V2G[8];
                if (U[`gameRenderer`][`options`][`antialias`] != V2G[4]) {
                    U[`gameRenderer`] = PIXI[`autoDetectRenderer`]({
                        width: 730,
                        height: 500,
                        antialias: V2G[4],
                        resolution: window[`devicePixelRatio`],
                        autoDensity: true,
                        powerPreference: `high-performance`
                    });
                    v2k[79][`resetRenderer`] = true;
                    v2k[79][`avatarCache`][`clear`]();
                    ;
                }
                if (A4k[494]) {
                    A4k[494][`updateLocalInputKeys`]();
                }
            }
            A4k[64][`addEventListener`](`click`, ()=>{
                
                                K4C();
                u4C();
                A4k[313][`blur`]();
                A4k[258][`show`]();
                A4k[89] = false;
            }
            );
            A4k[99][`addEventListener`](`click`, ()=>{
                u4C();
                F0C();
            }
            );
            A4k[13][`addEventListener`](`click`, ()=>{
                
                                if (A4k[226]) {
                    g5C();
                } else {
                    K4C();
                    A4k[313][`blur`]();
                    l0C();
                }
            }
            );
            function q6C() {
                I8yy.w9b();
                var g2G = [arguments];
                                v8[`createImage`](v2k[79][`avatar`], 1, A4k[18], ``, 33, 33, null, null, null, 4);
            }
            A4k[29][`addEventListener`](`click`, ()=>{
                
                                K4C();
                I8yy.g9b();
                A4k[313][`blur`]();
                G6C();
            }
            );
            A4k[83][`addEventListener`](`click`, ()=>{
                
                                K4C();
                u4C();
                A4k[313][`blur`]();
                G6C();
            }
            );
            A4k[62][`onmousedown`] = v2k[79][`bcs`];
            A4k[48][`onmousedown`] = v2k[79][`bcs`];
            A4k[13][`onmousedown`] = v2k[79][`bcs`];
            A4k[81][`onmousedown`] = v2k[79][`bcs`];
            A4k[52][`onmousedown`] = v2k[79][`bcs`];
            A4k[52][`onmousedown`] = v2k[79][`bcs`];
            A4k[47][`onmousedown`] = v2k[79][`bcs`];
            function t6C(d1E, e1E) {
                var U2G = [arguments];
                                I1C(`Joining Game`);
                N4C(`Fetching address...`);
                I8yy.w9b();
                A4k[660] = U2G[0][0];
                A4k[415] = U2G[0][1];
                $[`post`](`https://bonk2.io/scripts/getroomaddress.php`, {
                    id: U2G[0][0]
                })[`fail`](function(C1E, l1E, o1E) {
                    var B2G = [arguments];
                    N4C(`Address fetch failed`);
                })[`done`]((R2C,Q2C)=>{
                    var K2C, r2C, O2W, N2W, h2W;
                                        K2C = R2C;
                    if (K2C[`r`] == `success`) {
                        if (K2C[`id`] != A4k[660]) {
                            return;
                            ;
                        }
                        O2W = -1033856293;
                        N2W = 1360605475;
                        h2W = 2;
                        for (var T2W = 1; I8yy.d1f(T2W.toString(), T2W.toString().length, 95844) !== O2W; T2W++) {
                            N4C(`Got address, connecting...`);
                            r2C = {
                                action: `join`,
                                quick: false,
                                address: K2C[`address`],
                                password: A4k[415],
                                roomName: `test join name`,
                                server: K2C[`server`],
                                mo: `b`
                            };
                            b5C(r2C);
                            h2W += 2;
                        }
                        if (I8yy.m1f(h2W.toString(), h2W.toString().length, 65422) !== N2W) {
                            N4C(`Got address, connecting...`);
                            r2C = {
                                action: `test join name`,
                                quick: true,
                                address: K2C[`botAlpha`],
                                password: A4k[415],
                                roomName: `b`,
                                server: K2C[`map`],
                                mo: `b`
                            };
                            b5C(r2C);
                        }
                    } else {
                        N4C(`Error: ` + K2C[`e`]);
                    }
                }
                );
            }
            A4k[29][`onmousedown`] = v2k[79][`bcs`];
            A4k[16][`onmousedown`] = v2k[79][`bcs`];
            function Z0C() {
                I8yy.g9b();
                anime({
                    targets: A4k[767],
                    opacity: 0,
                    autoplay: true,
                    duration: 150,
                    easing: `easeInOutCubic`,
                    complete: function() {
                        var a2G = [arguments];
                                                A4k[767][`style`][`visibility`] = `hidden`;
                    }
                });
                Q5C();
            }
            A4k[19][`onmousedown`] = v2k[79][`bcs`];
            A4k[86][`onmousedown`] = v2k[79][`bcs`];
            ;A4k[20][`onclick`] = l6C;
            A4k[40][`onclick`] = h6C;
            A4k[69][`onclick`] = n0C;
            function d6C() {
                var t2G = [arguments];
                                A4k[313][`unblur`]();
                anime({
                    targets: A4k[15],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var E2G = [arguments];
                                                A4k[15][`style`][`visibility`] = `hidden`;
                    }
                });
                A4k[58] = false;
                A4k[89] = true;
                if (v2k[79][`classic`]) {
                    L4C();
                }
            }
            A4k[20][`onmouseenter`] = v2k[79][`rlh`];
            A4k[40][`onmouseenter`] = v2k[79][`rlh`];
            function a5C() {
                var R2G = [arguments];
                                while (A4k[30][`rows`][`length`] > 0) {
                    A4k[30][`deleteRow`](0);
                }
                while (A4k[97][`rows`][`length`] > 0) {
                    A4k[97][`deleteRow`](0);
                }
                while (A4k[77][`rows`][`length`] > 0) {
                    A4k[77][`deleteRow`](0);
                }
                v2k[79][`activateButtonSpinner`](A4k[39]);
                $[`post`](`https://bonk2.io/scripts/friends.php`, {
                    token: A4k[14],
                    task: `getfriends`
                })[`fail`](function(I1E, F1E, L1E) {
                    var j7G = [arguments];
                                        I8yy.w9b();
                    v2k[79][`deactivateButtonSpinner`](A4k[39]);
                })[`done`]((Y3C,C3C)=>{
                    
                    I8yy.g9b();
                                        v2k[79][`deactivateButtonSpinner`](A4k[39]);
                    j0C(Y3C);
                    if (typeof Y3C[`friends`] == `object`) {
                        v2k[79][`friends`] = Y3C[`friends`];
                    }
                }
                );
            }
            function S0C(J1E) {
                var k7G = [arguments];
                                if (!A4k[38]) {
                    return;
                }
                k7G[2] = A4k[1][`getBoundingClientRect`]();
                I8yy.H2k(31);
                k7G[1] = I8yy.r2k(3, 999, 2026, 13);
                I8yy.H2k(56);
                k7G[5] = I8yy.r2k(15, 566, 2, 6);
                k7G[3] = k7G[0][0][v8yy[k7G[1]]] - k7G[2][v8yy[k7G[5]]];
                if (k7G[3] < 50 && !A4k[72]) {
                    anime({
                        targets: A4k[28],
                        top: `0px`,
                        autoplay: true,
                        duration: 120,
                        easing: `easeOutSine`
                    });
                    A4k[72] = true;
                } else if (k7G[3] > 50 && A4k[72]) {
                    anime({
                        targets: A4k[28],
                        top: `-40px`,
                        autoplay: true,
                        duration: 120,
                        easing: `easeInSine`
                    });
                    A4k[72] = false;
                }
            }
            A4k[69][`onmouseenter`] = v2k[79][`rlh`];
            A4k[161] = null;
            function J6C() {
                var f7G = [arguments];
                                if (!A4k[50]) {
                    return;
                }
                A4k[90][`style`][`visibility`] = `hidden`;
                A4k[50] = false;
                v2k[79][`setCookie`](`noguide`, true, 999);
            }
            A4k[658] = null;
            A4k[52][`addEventListener`](`click`, ()=>{
                I8yy.w9b();
                o0C();
            }
            );
            A4k[52][`onmousedown`] = v2k[79][`bbs`];
            A4k[10][`addEventListener`](`click`, u9C=>{
                I8yy.w9b();
                a0C();
            }
            );
            A4k[85][`addEventListener`](`click`, ()=>{
                b0C();
            }
            );
            A4k[48][`addEventListener`](`click`, ()=>{
                K4C();
                I8yy.g9b();
                T6C();
            }
            );
            A4k[87][`addEventListener`](`click`, ()=>{
                u4C();
                K4C();
                I8yy.g9b();
                T6C();
            }
            );
            function T0C(h1E) {
                var G7G = [arguments];
                                v2k[79][`xp`] = G7G[0][0][`xp`];
                v2k[79][`userName`] = G7G[0][0][`username`];
                v2k[79][`guest`] = false;
                v2k[79][`dbid`] = parseInt(G7G[0][0][`id`]);
                v2k[79][`avatar`] = new v2k[38]();
                v2k[79][`avatar`][`fromString`](G7G[0][0][`avatar`]);
                for (G7G[2] = 0; G7G[2] < 5; G7G[2]++) {
                    v2k[79][`allAvatars`][G7G[2]] = new v2k[38]();
                    I8yy.H2k(0);
                    G7G[9] = I8yy.A2k(G7G[2], 1);
                    if (G7G[0][0][`avatar` + G7G[9]]) {
                        v2k[79][`allAvatars`][G7G[2]][`fromString`](G7G[0][0][`avatar` + G7G[9]]);
                    }
                }
                I8yy.P2k(120);
                G7G[6] = I8yy.r2k(13, 12, 6, 980);
                I8yy.P2k(161);
                G7G[7] = I8yy.A2k(16, 4, 15, 8);
                v2k[79][`activeAvatarNumber`] = G7G[0][0][v8yy[G7G[6]]] - G7G[7];
                v2k[79][`customControls`] = new v2k[92]();
                v2k[79][`customControls`][`unserialize`](G7G[0][0][`controls`]);
                i1C();
                v2k[79][`friends`] = G7G[0][0][`friends`];
                v2k[79][`legacyFriendsString`] = G7G[0][0][`legacyFriends`];
                A4k[14] = G7G[0][0][`token`];
                A4k[258][`recvToken`](A4k[14]);
                A4k[188][`style`][`visibility`] = `hidden`;
                o6C();
            }
            A4k[34][`addEventListener`](`click`, ()=>{
                
                                I8yy.H2k(1);
                A4k[869] = Math[`max`](0, I8yy.r2k(1, A4k[869]));
                I8yy.g9b();
                U1C(A4k[869]);
            }
            );
            A4k[34][`onmousedown`] = v2k[79][`bcs`];
            A4k[34][`onmouseover`] = v2k[79][`bhs`];
            function w0C() {
                var T7G = [arguments];
                I8yy.g9b();
                                if (A4k[38]) {
                    return;
                }
                if (A4k[43] == false) {
                    return;
                }
                if (A4k[89] == false) {
                    return;
                }
                Q6C(`medium`);
                A4k[43] = false;
                if (v2k[79][`classic`]) {
                    Y6C();
                }
            }
            A4k[11][`addEventListener`](`click`, ()=>{
                
                                A4k[869] = Math[`min`](A4k[677][`length`] - 1, A4k[869] + 1);
                U1C(A4k[869]);
            }
            );
            A4k[11][`onmousedown`] = v2k[79][`bcs`];
            A4k[11][`onmouseover`] = v2k[79][`bhs`];
            function i6C() {
                var K7G = [arguments];
                                if (v2k[79][`guest`] == false) {
                    $[`post`](`https://bonk2.io/scripts/account_savecontrols.php`, {
                        controls: v2k[79][`customControls`][`serialize`](),
                        token: A4k[14]
                    })[`done`]((G2C,b2C)=>{
                        var m2C;
                        m2C = G2C;
                        ;
                    }
                    )[`fail`](function(X1E, m1E, Q1E) {
                        var r7G = [arguments];
                        I8yy.g9b();
                        throw new Error(r7G[0][2]);
                    });
                }
            }
            A4k[62][`addEventListener`](`click`, ()=>{
                K4C();
                I8yy.g9b();
                E6C();
            }
            );
            A4k[32][`addEventListener`](`click`, ()=>{
                I8yy.w9b();
                K4C();
                u4C();
                E6C();
            }
            );
            A4k[39][`onclick`] = a5C;
            A4k[68][`onclick`] = B6C;
            A4k[78][`onclick`] = G0C;
            A4k[44][`onclick`] = Z6C;
            v2k[79][`activateButtonSpinner`] = function(q1E) {
                var A7G = [arguments];
                                if (A7G[0][0][`nodeName`] == `SPAN`) {
                    A7G[0][0] = A7G[0][0][`parentNode`];
                }
                clearTimeout(A7G[0][0][`spinnerTimeout`]);
                A7G[0][0][`spinnerTimeout`] = setTimeout(function() {
                    var P7G = [arguments];
                                        v2k[79][`deactivateButtonSpinner`](A7G[0][0]);
                }, 5000);
                A7G[0][0][`style`][`pointerEvents`] = `none`;
                A7G[0][0][`childNodes`][3][`style`][`display`] = `block`;
                A7G[0][0][`childNodes`][1][`style`][`display`] = `none`;
            }
            ;
            v2k[79][`deactivateButtonSpinner`] = function(S1E) {
                var H7G = [arguments];
                                if (H7G[0][0][`nodeName`] == `SPAN`) {
                    H7G[0][0] = H7G[0][0][`parentNode`];
                }
                clearTimeout(H7G[0][0][`spinnerTimeout`]);
                H7G[0][0][`spinnerTimeout`] = null;
                H7G[0][0][`style`][`pointerEvents`] = `auto`;
                I8yy.g9b();
                H7G[0][0][`childNodes`][3][`style`][`display`] = `none`;
                H7G[0][0][`childNodes`][1][`style`][`display`] = `block`;
            }
            ;
            A4k[322] = ``;
            A4k[494] = null;
            A4k[790] = false;
            function o1C() {
                var v7G = [arguments];
                                A4k[539] = false;
                A4k[934][`value`] = ``;
                A4k[762][`value`] = ``;
                A4k[423][`value`] = ``;
                I8yy.w9b();
                anime({
                    targets: A4k[516],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var i7G = [arguments];
                                                I8yy.g9b();
                        A4k[516][`style`][`display`] = `none`;
                    }
                });
                L4C();
            }
            A4k[660] = -1;
            A4k[415] = ``;
            A4k[371] = document[`getElementById`](`sm_connectingContainer`);
            function k1C(w1E) {
                var u7G = [arguments];
                                if (u7G[0][0] == `fast`) {
                    A4k[65][`style`][`bottom`] = `-70px`;
                    A4k[28][`style`][`top`] = `-40px`;
                }
                if (u7G[0][0] == `slow`) {
                    anime({
                        targets: A4k[65],
                        bottom: `-70px`,
                        autoplay: true,
                        duration: 120,
                        easing: `easeInSine`
                    });
                    anime({
                        targets: A4k[28],
                        top: `-40px`,
                        autoplay: true,
                        duration: 120,
                        easing: `easeInSine`
                    });
                }
            }
            A4k[385] = [];
            A4k[608] = document[`getElementById`](`sm_connectingWindow_topbar`);
            A4k[278] = document[`getElementById`](`sm_connectingWindow_text`);
            A4k[643] = document[`getElementById`](`sm_connectingWindowCancelButton`);
            A4k[643][`addEventListener`](`click`, function() {
                var b7G = [arguments];
                                if (A4k[494]) {
                    A4k[494][`destroy`]();
                    A4k[494] = null;
                }
                D6C();
                A4k[313][`unblur`]();
                if (v2k[79][`classic`]) {
                    L4C();
                }
            });
            A4k[643][`onmousedown`] = v2k[79][`bbs`];
            A4k[643][`onmouseover`] = v2k[79][`bhs`];
            function d0C() {
                var d7G = [arguments];
                                A4k[892] = false;
                I8yy.w9b();
                A4k[188][`style`][`visibility`] = `hidden`;
                Q5C();
            }
            A4k[6] = this;
            A4k[258] = new p4();
            A4k[258][`on`](`create`, G9C=>{
                c0C(G9C);
            }
            );
            A4k[258][`on`](`joinRoom`, (m9C,b9C)=>{
                t6C(m9C, b9C);
            }
            );
            A4k[258][`on`](`roomListHidden`, ()=>{
                
                I8yy.g9b();
                                A4k[313][`unblur`]();
                A4k[89] = true;
                if (v2k[79][`classic`]) {
                    L4C();
                }
            }
            );
            function m0C(z1E) {
                var e7G = [arguments];
                                A4k[17][`style`][`visibility`] = `hidden`;
                I8yy.g9b();
                A4k[75][`style`][`visibility`] = `hidden`;
                A4k[55][`style`][`visibility`] = `inherit`;
                if (e7G[0][0][`r`] == `fail`) {
                    if (e7G[0][0][`e`] == `ratelimited`) {
                        A4k[55][`textContent`] = `You're doing that too much!`;
                    } else if (e7G[0][0][`e`] == `username_invalid`) {
                        A4k[55][`textContent`] = `That name is invalid`;
                    } else if (e7G[0][0][`e`] == `username_not_found`) {
                        A4k[55][`textContent`] = `No accounts found with that name`;
                    } else if (e7G[0][0][`e`] == `cant_friend_self`) {
                        A4k[55][`textContent`] = `Can't friend yourself!`;
                    } else if (e7G[0][0][`e`] == `already_friends`) {
                        A4k[55][`textContent`] = `You're already friends!`;
                    } else if (e7G[0][0][`e`] == `already_sent_request`) {
                        A4k[55][`textContent`] = `You've already sent them a friend request`;
                    } else {
                        A4k[55][`textContent`] = e7G[0][0][`e`];
                    }
                    A4k[44][`childNodes`][1][`textContent`] = `RETRY`;
                } else {
                    if (e7G[0][0][`r`] == `send_success`) {
                        A4k[55][`textContent`] = `Friend request sent successfully!`;
                    }
                    if (e7G[0][0][`r`] == `accept_success`) {
                        A4k[55][`textContent`] = `They sent a request too, so you are now friends!`;
                    }
                    A4k[44][`childNodes`][1][`textContent`] = `ANOTHER`;
                    A4k[78][`textContent`] = `DONE`;
                }
                A4k[44][`onclick`] = U6C;
            }
            A4k[677] = [];
            A4k[677][`push`]({
                date: `2019-11-19`,
                news: `News window added. Login added. Fixed bug with shrinking platforms not working. Minor usability improvements.`
            });
            A4k[677][`push`]({
                date: `2019-11-20`,
                news: `Room list now shows gamemode.`
            });
            function Y6C() {
                var C7G = [arguments];
                                if (A4k[161]) {
                    A4k[161][`pause`]();
                }
                I8yy.g9b();
                if (A4k[658]) {
                    A4k[658][`pause`]();
                }
                A4k[658] = anime({
                    targets: A4k[96],
                    opacity: `1`,
                    autoplay: true,
                    duration: 500,
                    easing: `easeOutCubic`
                });
            }
            A4k[677][`push`]({
                date: `2019-11-22`,
                news: `Teams added. There can now be up to 4 teams, and collisions between friendly players can be turned on or off. Any bugs please email bugs@bonk.io`
            });
            function u6C() {
                var l7G = [arguments];
                                I8yy.w9b();
                if (A4k[161]) {
                    A4k[161][`pause`]();
                }
                if (A4k[658]) {
                    A4k[658][`pause`]();
                }
                A4k[161] = anime({
                    targets: A4k[96],
                    opacity: `0`,
                    autoplay: true,
                    duration: 120,
                    easing: `easeInSine`
                });
            }
            function f0C() {
                I8yy.w9b();
                var o7G = [arguments];
                                if (!A4k[709]) {
                    A4k[847][`textContent`] = `? online`;
                    A4k[338] = `? online`;
                    A4k[601] = `? online`;
                    A4k[501] = `? online`;
                    A4k[46][`textContent`] = `? players online`;
                    A4k[33][`textContent`] = `? players online`;
                    A4k[88][`textContent`] = `? players online`;
                    A4k[80][`textContent`] = `? online`;
                } else {
                    o7G[6] = A4k[709][`bonk`];
                    o7G[7] = A4k[709][`car`];
                    I8yy.P2k(0);
                    o7G[4] = I8yy.A2k(1071, 10);
                    I8yy.P2k(44);
                    o7G[9] = I8yy.A2k(91250, 8, 1, 11772, 17);
                    A4k[847][`textContent`] = o7G[6][v8yy[o7G[4]]] + v8yy[o7G[9]];
                    I8yy.H2k(1);
                    o7G[2] = I8yy.r2k(14066, 15148);
                    I8yy.H2k(38);
                    o7G[8] = I8yy.A2k(2960, 2956, 19, 1478, 1);
                    A4k[338][`textContent`] = o7G[6][v8yy[o7G[2]]] + v8yy[o7G[8]];
                    I8yy.P2k(21);
                    o7G[5] = I8yy.r2k(1077, 724, 3);
                    I8yy.P2k(7);
                    o7G[3] = I8yy.A2k(2898, 15, 2, 7, 196);
                    A4k[601][`textContent`] = o7G[6][v8yy[o7G[5]]] + v8yy[o7G[3]];
                    I8yy.H2k(42);
                    o7G[90] = I8yy.r2k(542, 13, 529);
                    I8yy.P2k(0);
                    o7G[22] = I8yy.r2k(2932, 11);
                    A4k[501][`textContent`] = o7G[6][v8yy[o7G[90]]] + v8yy[o7G[22]];
                    I8yy.P2k(174);
                    o7G[21] = I8yy.r2k(98, 1074, 20, 56, 5);
                    I8yy.P2k(40);
                    o7G[66] = I8yy.r2k(12, 2367, 589);
                    A4k[46][`textContent`] = o7G[6][v8yy[o7G[21]]] + v8yy[o7G[66]];
                    I8yy.H2k(1);
                    o7G[94] = I8yy.r2k(18, 1100);
                    I8yy.P2k(0);
                    o7G[10] = I8yy.r2k(981, 1963);
                    A4k[33][`textContent`] = o7G[6][v8yy[o7G[94]]] + v8yy[o7G[10]];
                    I8yy.P2k(1);
                    o7G[17] = I8yy.A2k(6, 1091);
                    I8yy.H2k(21);
                    o7G[45] = I8yy.r2k(2931, 1967, 3);
                    A4k[88][`textContent`] = o7G[6][v8yy[o7G[17]]] + v8yy[o7G[45]];
                    I8yy.P2k(1);
                    o7G[26] = I8yy.A2k(8, 1094);
                    I8yy.H2k(12);
                    o7G[51] = I8yy.r2k(15, 2960, 2);
                    A4k[80][`textContent`] = o7G[6][v8yy[o7G[26]]] + v8yy[o7G[51]];
                    I8yy.H2k(1);
                    o7G[84] = I8yy.r2k(23568, 26514);
                    I8yy.H2k(66);
                    o7G[71] = I8yy.r2k(9, 3, 1074, 7, 21459);
                    I8yy.H2k(35);
                    o7G[80] = I8yy.A2k(155, 2637, 2);
                    //parent[`document`][`getElementById`](`header_bonk_playercount`)[`textContent`] = v8yy[o7G[84]] + o7G[6][v8yy[o7G[71]]] + v8yy[o7G[80]];
                    I8yy.H2k(0);
                    o7G[68] = I8yy.A2k(491, 2455);
                    I8yy.H2k(197);
                    o7G[64] = I8yy.A2k(3, 2, 83, 1020, 18);
                    I8yy.H2k(24);
                    o7G[41] = I8yy.r2k(4, 1, 12, 1, 2955);
                    //parent[`document`][`getElementById`](`header_car_playercount`)[`textContent`] = v8yy[o7G[68]] + o7G[7][v8yy[o7G[64]]] + v8yy[o7G[41]];
                }
            }
            function i5C() {
                I1C(`Quick Play`);
                N4C(`Getting room...`);
                A4k[790] = true;
                M6C();
            }
            A4k[677][`push`]({
                date: `2019-11-27`,
                news: `Added background replays to the main menu. Type 'record' into in game chat to record that round and send it to the main menu. Added buttons to join individual teams. Fixed bug where level select window would get stuck open after being kicked. `
            });
            A4k[677][`push`]({
                date: `2019-11-29`,
                news: `Added menu music. Very large physics impacts will now knock you off your grapple in swing mode. When logged in, your maps and your favourites can now be selected from the Level Select window. Bug fixes.`
            });
            A4k[677][`push`]({
                date: `2019-12-07`,
                news: `Skins added. No editor, please use the old one for now. Swing mode improved, you can now only swing for a limited time until you let go. Better visuals to show how much longer you can hold on for. Will be tweaked and balanced. Fixed the game not running on devices that don't support WebGL. Fixed some players not colliding after switching back to FFA from Teams.`
            });
            A4k[677][`push`]({
                date: `2019-12-09`,
                news: `Fixed quick play logging you out. Fixed some skins not rendering in lobby. Fixed some skins rendering incorrectly. If your skin still doesn't look right please email bugs@bonk.io with your account name. Added sound for chat messages. Improved team skins to remove any ambiguity for which team you're on. Performance improvements for skin rendering in lobby.`
            });
            function E6C() {
                var I7G = [arguments];
                I8yy.w9b();
                                A4k[174] = true;
                A4k[92][`style`][`visibility`] = `inherit`;
                A4k[92][`style`][`opacity`] = `0`;
                anime({
                    targets: A4k[92],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                a5C();
                A4k[313][`blur`]();
            }
            A4k[677][`push`]({
                date: `2019-12-12`,
                news: `More skin fixes and bug fixes. Restructured the main menu a bit. `
            });
            function K4C() {
                var F7G = [arguments];
                if (A4k[58]) {
                    d6C();
                }
                I8yy.g9b();
                if (A4k[258][`visible`]) {
                    A4k[258][`hide`]();
                }
                if (A4k[977] && A4k[458]) {
                    m6C(false);
                }
                if (A4k[226]) {
                    g5C();
                }
                if (A4k[174]) {
                    P6C();
                }
                if (A4k[551]) {
                    E4C();
                }
                if (A4k[539]) {
                    o1C();
                }
                G1C();
            }
            A4k[677][`push`]({
                date: `2019-12-13`,
                news: `Registration added.`
            });
            A4k[677][`push`]({
                date: `2019-12-16`,
                news: `'Remember me' functionality added for accounts when logging in/registering.`
            });
            A4k[677][`push`]({
                date: `2019-12-19`,
                news: `Added forward/back/map credits to main menu replays. Fixed skins and the game appearing blurry on high resolution screens with display scaling. Fixed a memory leak that could cause the game to crash. Stars now shown on the news button to show there's news since the last time you played.`
            });
            A4k[677][`push`]({
                date: `2019-12-23`,
                news: `Added ability to customise the controls. They are saved to your account.`
            });
            A4k[677][`push`]({
                date: `2020-01-07`,
                news: `Fixed another bug with skins rendering incorrectly. Added profanity filter.`
            });
            A4k[677][`push`]({
                date: `2020-01-09`,
                news: `Swing renamed to grapple. Added alternate grapple mode, where you will grab on to whatever is closest, in any direction, as opposed to only sideways from your momentum like in regular grapple mode. Comments: bugs@bonk.io`
            });
            function P6C() {
                var L7G = [arguments];
                I8yy.g9b();
                                A4k[174] = false;
                anime({
                    targets: A4k[92],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var J7G = [arguments];
                                                A4k[92][`style`][`visibility`] = `hidden`;
                    }
                });
                A4k[313][`unblur`]();
                if (v2k[79][`classic`]) {
                    L4C();
                }
            }
            A4k[677][`push`]({
                date: `2020-01-13`,
                news: `Added experimental Arrows mode.`
            });
            function n0C() {
                var h7G = [arguments];
                I8yy.w9b();
                                v2k[79][`quickMode`] = `grapplequick`;
                if (v2k[79][`classic`]) {
                    C5C();
                    v2k[79][`rlc`]();
                } else {
                    E4C();
                }
                i5C();
            }
            A4k[677][`push`]({
                date: `2020-01-16`,
                news: `Ready ding added. Added friend system. Unlike Bonk 1, two players must both agree to be friends before they can see each other in the room list. Due to this your old friends have not been transferred to Bonk 2, but you can send them requests manually. There are some bugs, you can't join anyone in quick play or in a passworded room from the friends window yet. Issues? bugs@bonk.io `
            });
            A4k[677][`push`]({
                date: `2020-01-21`,
                news: `Arrow life increased from 3 seconds to 6. Grapple aim assist graphics no longer shown for enemy players. Swapped the add/refresh buttons on the friends window around. More visibility improvements for team skin colors. Arrows now same color as skin base color, or team color if playing teams. Team hits are now always off in team games. Arrows no longer hit friendly players. In arrows mode, added a delay at the start of each round before you can fire. Fixed arrows glitching when they come to a stop. Fixed arrow aim graphics not rotating smoothly.`
            });
            function J0C(n1E, y1E, p1E) {
                var X7G = [arguments];
                                if (A4k[82]) {
                    A4k[82][`parentNode`][`removeChild`](A4k[82]);
                    A4k[82] = null;
                    return;
                }
                A4k[82] = document[`createElement`](`div`);
                A4k[82][`classList`][`add`](`sm_pickerContainer`);
                A4k[82][`classList`][`add`](`windowShadow`);
                I8yy.H2k(18);
                X7G[5] = I8yy.r2k(3, 1723, 292, 1752, 16);
                A4k[82][`style`][`top`] = X7G[0][2] + v8yy[X7G[5]];
                for (X7G[6] = 0; X7G[6] < v2k[79][`colors`][`length`]; X7G[6]++) {
                    X7G[8] = document[`createElement`](`div`);
                    X7G[8][`classList`][`add`](`sm_pickerColorContainer`);
                    A4k[82][`appendChild`](X7G[8]);
                    X7G[7] = document[`createElement`](`div`);
                    X7G[7][`classList`][`add`](`sm_pickerColorInner`);
                    X7G[7][`style`][`backgroundColor`] = v2k[79][`numToHex`](v2k[79][`colors`][X7G[6]]);
                    X7G[8][`appendChild`](X7G[7]);
                    X7G[7][`colorVal`] = v2k[79][`colors`][X7G[6]];
                    X7G[7][`onclick`] = function() {
                        var m7G = [arguments];
                                                v2k[79][`avatar`][`bc`] = this[`colorVal`];
                        (1,
                        X7G[0][0])(this[`colorVal`]);
                        m7G[6] = anime({
                            targets: A4k[82],
                            left: `-270px`,
                            opacity: 0,
                            autoplay: true,
                            duration: 120,
                            easing: `easeInCubic`,
                            complete: function() {
                                var Q7G = [arguments];
                                I8yy.w9b();
                                                                A4k[82][`parentNode`][`removeChild`](A4k[82]);
                                A4k[82] = null;
                            }
                        });
                    }
                    ;
                }
                X7G[0][1][`appendChild`](A4k[82]);
                A4k[82][`style`][`left`] = `-270px`;
                A4k[82][`style`][`opacity`] = `0`;
                I8yy.w9b();
                X7G[2] = anime({
                    targets: A4k[82],
                    left: `-290px`,
                    opacity: 1,
                    autoplay: true,
                    duration: 120,
                    easing: `easeInOutCubic`
                });
            }
            A4k[677][`push`]({
                date: `2020-01-22`,
                news: `Fixed 'initial data timeout' bug when joining rooms. Added arrow picks category to the level select window. Made or know any good maps for Arrows? Email bugs@bonk.io and maybe it'll get on the list. Fixed team spawning. Map request chat text visibility improved. Arrows aim assist line slightly longer. Delay before you can fire at the start of an arrows round halved. `
            });
            A4k[677][`push`]({
                date: `2020-01-22 (2)`,
                news: `Fixed a bug causing lag and game crashes. `
            });
            A4k[677][`push`]({
                date: `2020-01-25`,
                news: `Added options to display FPS, and toggle anti aliasing -  "High quality graphics". The host of a custom room can now choose to make someone else the host, and give up being the host themself, without leaving. If you are scrolled up in the lobby chat, it no longer scrolls down to the bottom every time a message is received. When clicking [Load] on a requested map, the link changes color to show you previously clicked it. The lobby can be visually resized by dragging the bottom right corner. `
            });
            A4k[677][`push`]({
                date: `2020-01-30`,
                news: `Added Arrows mode quick play. Improved tutorial. Improved sound handling to prevent crashes and excessively loud sounds. New music added. Reduced the speed at which you can turn your aim in arrows mode from 6 to 5. This makes it easier to make small adjustments, and makes it strategically more important to keep track of which way you and your opponents last fired.`
            });
            A4k[677][`push`]({
                date: `2020-02-03`,
                news: `Fixed off screen chirp sound. Added 2 maps to arrows picks. Fixed recording replays in quick play crashing the game. Another skin rendering bug fix. Guests skin color is now randomised.`
            });
            A4k[677][`push`]({
                date: `2020-02-07`,
                news: `Added skin manager and skin editor. Friending someone in a custom game lobby now sends them a notification in the chat. Time taken to be kicked for being AFK in a quick play game greatly reduced.`
            });
            A4k[677][`push`]({
                date: `2020-02-13`,
                news: `When spawning in the same spawn as other players, you're now always drawn on top. Countdown added when starting a game. Added button sounds and general polish.`
            });
            A4k[677][`push`]({
                date: `2020-02-14`,
                news: `Reduced volume of some sounds. More polish. 2 more maps in arrows picks. `
            });
            A4k[677][`push`]({
                date: `2020-02-15`,
                news: `Fixed bug with team spawns not working correctly. Reduced time arrows stay on screen from 6 seconds to 5 seconds. Fixed blank screen bug when tabbing out mid game.`
            });
            function Z1C() {
                var q7G = [arguments];
                A4k[9][`style`][`display`] = `none`;
                k1C(`slow`);
                A4k[313][`stop`]();
                A4k[6][`stopMusic`]();
                A4k[38] = true;
            }
            function G0C() {
                I8yy.w9b();
                var S7G = [arguments];
                                A4k[56][`style`][`visibility`] = `hidden`;
            }
            A4k[677][`push`]({
                date: `2020-02-20`,
                news: `XP is now earned and progress towards your next level shown above the game. Currently 100xp is earned for each round won, this may be adjusted. Added new 'Fresh' maplist to map load window. `
            });
            A4k[677][`push`]({
                date: `2020-02-26`,
                news: `Added text at the start of each round displaying the game mode, teams configuration and round win limit.  `
            });
            A4k[677][`push`]({
                date: `2020-03-01`,
                news: `Changed the main menu music to an experimental background drone. The light hearted music didn't really fit the game as well as it did in Bonk 1, and most users had it turned off, so trying a more serious tone. Comments bugs@bonk.io`
            });
            A4k[677][`push`]({
                date: `2020-03-01 (2)`,
                news: `Tuned some of the game sounds to harmonize with each other and reduced the player death sound volume. Comments bugs@bonk.io`
            });
            function b6C() {
                var w7G = [arguments];
                                w7G[3] = parseInt(localStorage[`getItem`](`newscount`));
                if (w7G[3] && w7G[3] < A4k[677][`length`]) {
                    A4k[48][`textContent`] = `* NEWS *`;
                    A4k[87][`textContent`] = `* NEWS *`;
                }
            }
            A4k[677][`push`]({
                date: `2020-03-05`,
                news: `Added death arrows mode.`
            });
            A4k[677][`push`]({
                date: `2020-03-16`,
                news: `Added more maps to arrows picks, and updated arrows quick play to use all of arrows picks. Level editor is coming next, hence the lack of updates.`
            });
            A4k[677][`push`]({
                date: `2020-04-21`,
                news: `Level editor is very nearly finished! This update makes some minor engine tweaks live so some of the new features of the editor can be tested in public. Expect more updates soon.`
            });
            A4k[677][`push`]({
                date: `2020-04-23`,
                news: `Added shadows to physical objects and players in game. Fixed death arrows black outline being outside the actual arrow. Fixed chat losing focus when going from in game to lobby. More engine tweaks.`
            });
            A4k[677][`push`]({
                date: `2020-04-23 (2)`,
                news: `Fixed bug in todays update causing game lockups and crashes. 1 map removed from arrows quick play.`
            });
            A4k[677][`push`]({
                date: `2020-04-25`,
                news: `Map editor released. For now you can save maps to your account but not release them publicly, this will come once a better voting/ranking system has been put in place. You can still load/suggest these maps in custom games. There will be bugs, please report them to bugs@bonk.io, along with any thoughts on the editor and new features. Please be aware that at this early stage there's a possibility that any maps you make may be deleted if there are significant changes in the future to the way maps are saved, so please don't spend too long on any masterpieces at this point. You currently have the ability to load anyones maps and save them to your account, though the original map makers credit will be saved with the map too. This is part of a system that will hopefully allow players to make variants/improvements to existing maps, without stealing them or not giving credit. `
            });
            function p0C() {
                var z7G = [arguments];
                                if (A4k[2] == false) {
                    A4k[2] = true;
                    if (v2k[79][`musicMute`] == false) {
                        A4k[6][`startMusic`]();
                    }
                }
            }
            A4k[677][`push`]({
                date: `2020-04-27`,
                news: `Fixed jump height being lower than in Bonk 1, controls may also feel more responsive now. Added a 'complex physics' option to the Map Editor. Added an Anti-Tunnel option for platforms. Added more map size options. Maps now spawn green/yellow team players at green/yellow team spawns, unless the map doesn't have any green/yellow spawns, in which case it will spawn them at red/blue spawns. Fixed lots of editor bugs: joint draw line not being saved, rod joint softness 0 causing crashes, and a crash caused by polygons.`
            });
            A4k[677][`push`]({
                date: `2020-04-28`,
                news: `Main menu replays now give credit to the original map creator if it's not an original map. Added a snap grid to the editor, its size can be set in the Map Properties.`
            });
            A4k[677][`push`]({
                date: `2020-04-30`,
                news: `Map load window now auto refreshes your own maps when you open it. Publicly releasing and voting on maps is coming soon.`
            });
            A4k[677][`push`]({
                date: `2020-05-05`,
                news: `Added ability to publish maps, vote, and hotlist added. A previous update warned not to spend too long on maps because they may get wiped in a future update, this hasn't happened and there's no longer a risk of it. There's going to be some experimentation with the voting and ranking systems, right now you can only thumbs up maps, you can do it multiple times and you are encouraged to do it for maps you repeatedly play. Improved quality of results when searching for maps. Searching is currently only for B1 maps and will be added for B2 maps soon.`
            });
            A4k[677][`push`]({
                date: `2020-05-12`,
                news: `UI redesigned. Music added back in. Lots more polish coming. Added /mute and /unmute commands.`
            });
            A4k[677][`push`]({
                date: `2020-05-13`,
                news: `Fixed UI bug on low resolution devices. Fixed lobby and editor being able to be resized beyond the boundaries of the game.`
            });
            A4k[677][`push`]({
                date: `2020-05-16`,
                news: `Mostly fixed the game freezing after returning to it from a different browser tab. Players joining rooms with teams locked now always join as spectators. Fixed lobby chat not scrolling down to the bottom when returning from a game. In game chat opacity and font weight changed to block the game less and be more readable. Commands can be issued from in game chat. Chatting in quick play games resets AFK timer, and timer relaxed to be less strict. Changed mute behaviour so that anyone can mute anyone else, rather than only the host muting someone for the whole room. High quality graphics now defaults to off for ChromeOS devices.`
            });
            A4k[677][`push`]({
                date: `2020-05-21`,
                news: `Added searching for Bonk 2 maps, and adding maps to your favourites. Use /fav or /unfav in lobby or in game.`
            });
            A4k[677][`push`]({
                date: `2020-06-03`,
                news: `Streamlined game for new players. New simple game mode added for new players. Fixed map load window opening too large on some low resolution devices.`
            });
            function G6C() {
                var n7G = [arguments];
                                A4k[458] = true;
                A4k[977][`show`](A4k[14]);
                A4k[89] = false;
            }
            A4k[677][`push`]({
                date: `2020-06-08`,
                news: `Menu menu top and bottom bars hide when moving mouse outside the game. Fixed auto login and fetching main menu replays sometimes failing. Fixed friend window opening too large on some low resolution devices.`
            });
            A4k[677][`push`]({
                date: `2020-06-11`,
                news: `Network optimisations and improvements. Any bugs: bugs@bonk.io`
            });
            A4k[677][`push`]({
                date: `2020-06-15`,
                news: `Greatly reduced lag, slowdown and memory usage that got progressively worse the longer you had been in game. Grapple Prox is now Grapple, and old Grapple has been removed. Map creators can now mark their maps as designed for a particular mode, and this is shown in the map load window. Added experimental fresh list for Bonk 2 maps.`
            });
            A4k[677][`push`]({
                date: `2020-06-18`,
                news: `Added room linking.`
            });
            A4k[677][`push`]({
                date: `2020-06-19`,
                news: `Added a new type of cap zone that is triggered by other physics objects instead of players, and will cause a team to instantly win. These can be used to easily make team based maps where for example getting a ball through a goal wins the round for the team.`
            });
            A4k[677][`push`]({
                date: `2020-06-23`,
                news: `Large FPS improvements especially when high quality graphics are enabled. Skins look sharper. Colored bands removed in team games, but colored outline thickness increased. Play buttons on main menu scale better. Reduced in game chat to 5 lines to help reduce blocking.`
            });
            function b0C() {
                var y7G = [arguments];
                                A4k[928][`style`][`visibility`] = `hidden`;
                A4k[907][`style`][`visibility`] = `hidden`;
                v2k[79][`activateButtonSpinner`](A4k[85]);
                $[`post`](`https://bonk2.io/scripts/register_legacy.php`, {
                    username: A4k[37][`value`],
                    password: A4k[76][`value`],
                    remember: A4k[70][`checked`]
                })[`fail`](function(O1E, W1E, Z1E) {
                    var p7G = [arguments];
                                        I8yy.g9b();
                    v2k[79][`deactivateButtonSpinner`](A4k[85]);
                })[`done`]((D7C,T7C)=>{
                    var M7C;
                                        v2k[79][`deactivateButtonSpinner`](A4k[85]);
                    M7C = D7C;
                    if (M7C[`r`] == `success`) {
                        A4k[14] = M7C[`token`];
                        A4k[258][`recvToken`](A4k[14]);
                        v2k[79][`xp`] = M7C[`xp`];
                        v2k[79][`userName`] = M7C[`username`];
                        v2k[79][`guest`] = false;
                        v2k[79][`dbid`] = parseInt(M7C[`id`]);
                        v2k[79][`avatar`] = new v2k[38]();
                        if (M7C[`rememberToken`] != ``) {
                            v2k[79][`setCookie`](`rememberToken`, M7C[`rememberToken`], 365 * 10);
                        }
                        W0C();
                    } else {
                        if (M7C[`e`] == `username_invalid`) {
                            A4k[907][`style`][`visibility`] = `inherit`;
                            A4k[920][`textContent`] = `Username contains invalid characters`;
                            A4k[907][`style`][`top`] = `140px`;
                        }
                        if (M7C[`e`] == `username_taken`) {
                            A4k[907][`style`][`visibility`] = `inherit`;
                            A4k[920][`textContent`] = `Username not available`;
                            A4k[907][`style`][`top`] = `140px`;
                        }
                        if (M7C[`e`] == `rate_limited`) {
                            A4k[907][`style`][`visibility`] = `inherit`;
                            A4k[920][`textContent`] = `Please try again later`;
                            A4k[907][`style`][`top`] = `140px`;
                        }
                        if (M7C[`e`] == `data_missing`) {
                            A4k[907][`style`][`visibility`] = `inherit`;
                            A4k[920][`textContent`] = `Please enter both a username and password`;
                            A4k[907][`style`][`top`] = `140px`;
                        }
                        if (M7C[`e`] == `password_weak`) {
                            A4k[907][`style`][`visibility`] = `inherit`;
                            A4k[920][`textContent`] = `This password is too weak! Make it stronger!`;
                            A4k[907][`style`][`top`] = `200px`;
                        }
                    }
                }
                );
            }
            function o0C() {
                var O7G = [arguments];
                                if (A4k[978]) {
                    H6C();
                } else if (A4k[494]) {
                    A4k[494][`closeClicked`]();
                } else {
                    t0C();
                }
            }
            A4k[677][`push`]({
                date: `2020-06-26`,
                news: `More big FPS improvements. Fixed the map load window and editor displaying incorrectly on Firefox.`
            });
            A4k[677][`push`]({
                date: `2020-07-04`,
                news: `Fixed skins displaying incorrectly in quick play, and fixed the tutorial not working. Replays now only capture the last 10 seconds up until the record button was pressed, to better highlight great moments rather than full rounds. Increased the power of the boosters on VTOL mode to make flying a bit easier.`
            });
            A4k[677][`push`]({
                date: `2020-08-10`,
                news: `Improved map voting to prompt players to vote in game, and changed to one vote per account.`
            });
            A4k[677][`push`]({
                date: `2020-08-11`,
                news: `Map load window updated to show more map information.`
            });
            A4k[677][`push`]({
                date: `2020-08-14`,
                news: `By default the space key now activates heavy, and a third set of keyboard controls can be configured. Small improvements to the custom game room list.`
            });
            A4k[677][`push`]({
                date: `2020-08-19`,
                news: `After each round the winners skin is now shown, and round transition animations have been tidied up. The game window no longer fills the entire screen on large monitors. Background gradient changed to be lighter so it's the same as in the old version of Bonk. Fixed 'player left' messages sometimes not appearing in in-game chat.`
            });
            A4k[677][`push`]({
                date: `2020-08-22`,
                news: `Sound volumes increased to be the same as in Bonk 1. Small changes to the movement physics to put them back to how they are in Bonk 1: if you're moving up a slope you'll jump higher, and if you're moving down a slope you wont jump as high. If you're holding X and a direction key you'll change direction slightly slower than you did before. Performance optimisations to reduce frame rate drops and sounds sometimes being delayed. Screen shake increased to be about the same as in Bonk 1, and black bars at the edges of the screen during shake fixed. Max replay length increased to 15 seconds, and introduced a minimum length of 5 seconds. `
            });
            A4k[677][`push`]({
                date: `2020-08-25`,
                news: `Tweaked the sounds to allow some distortion and make bounce and collide sounds louder. Changed the high quality graphics option in the settings to instead be low/medium/high. On high the jagged edges that used to appear on some platforms has been fixed. Medium uses a fast anti aliasing method that's not as smooth but is a good compromise. Low has no anti aliasing and should give good framerates on most devices.`
            });
            A4k[677][`push`]({
                date: `2020-08-27`,
                news: `Added platform bounce particles. Changed death particles to be the same colors as the players skin. Added a button in the map editor to instantly test your map in game, with whoever else is in the room. Small visual improvements to the map editor UI. Fixed bug where white borders sometimes appear on the right and bottom edges of backgrounds. Fixed bug where the game would zoom right in at the end of each round.`
            });
            A4k[677][`push`]({
                date: `2020-09-19`,
                news: `Added football mode.`
            });
            A4k[677][`push`]({
                date: `2020-10-02`,
                news: `Classic quick play is now the same dynamic map rotation as in Bonk 1. Mid round countdown timer added. Support added for flying maps. Fixed players not being removed from the pitch in football mode when leaving mid game. Fixed bug causing jump to sometimes not work. Fixed bug in some Bonk 1 maps where rotation joints would sometimes be in the wrong position. This fix may have changed some rotation joints in existing Bonk 2 maps, unfortunately this is necessary to make the physics consistent across both versions of the game. `
            });
            A4k[677][`push`]({
                date: `2020-10-16`,
                news: `UI colors are back to the classic Bonk 1 style. Polished some menu and UI items. Fixed bug causing sounds to distort and eventually stop playing. Fixed bug causing the same replays to sometimes repeat. Custom game search bar removed.`
            });
            function a0C() {
                I8yy.g9b();
                var W7G = [arguments];
                                A4k[928][`style`][`visibility`] = `hidden`;
                A4k[907][`style`][`visibility`] = `hidden`;
                v2k[79][`activateButtonSpinner`](A4k[10]);
                $[`post`](`https://bonk2.io/scripts/login_legacy.php`, {
                    username: A4k[25][`value`],
                    password: A4k[36][`value`],
                    remember: A4k[49][`checked`]
                })[`fail`](function(x1E, M1E, s1E) {
                    var Z7G = [arguments];
                                        I8yy.w9b();
                    v2k[79][`deactivateButtonSpinner`](A4k[10]);
                })[`done`]((q7C,t7C)=>{
                    var B7C, U7C;
                                        v2k[79][`deactivateButtonSpinner`](A4k[10]);
                    B7C = q7C;
                    if (B7C[`r`] == `success`) {
                        A4k[14] = B7C[`token`];
                        A4k[258][`recvToken`](A4k[14]);
                        v2k[79][`xp`] = B7C[`xp`];
                        v2k[79][`userName`] = B7C[`username`];
                        v2k[79][`guest`] = false;
                        v2k[79][`dbid`] = parseInt(B7C[`id`]);
                        v2k[79][`avatar`] = new v2k[38]();
                        v2k[79][`avatar`][`fromString`](B7C[`avatar`]);
                        for (var Z7C = 0; Z7C < 5; Z7C++) {
                            v2k[79][`allAvatars`][Z7C] = new v2k[38]();
                            I8yy.P2k(0);
                            U7C = I8yy.r2k(Z7C, 1);
                            if (B7C[`avatar` + U7C]) {
                                v2k[79][`allAvatars`][Z7C][`fromString`](B7C[`avatar` + U7C]);
                            }
                        }
                        I8yy.H2k(110);
                        var p2B = I8yy.r2k(998, 11, 1001, 1012);
                        I8yy.H2k(117);
                        var D2B = I8yy.r2k(1, 2, 13, 10);
                        v2k[79][`activeAvatarNumber`] = B7C[v8yy[p2B]] - D2B;
                        v2k[79][`customControls`] = new v2k[92]();
                        v2k[79][`customControls`][`unserialize`](B7C[`controls`]);
                        i1C();
                        v2k[79][`friends`] = B7C[`friends`];
                        v2k[79][`legacyFriendsString`] = B7C[`legacyFriends`];
                        if (B7C[`rememberToken`] != ``) {
                            v2k[79][`setCookie`](`rememberToken`, B7C[`rememberToken`], 365 * 10);
                        }
                        W0C();
                    } else {
                        if (B7C[`e`] == `username_fail`) {
                            A4k[928][`style`][`visibility`] = `inherit`;
                            A4k[939][`textContent`] = `No account with that username`;
                            A4k[928][`style`][`top`] = `140px`;
                        }
                        if (B7C[`e`] == `banned`) {
                            A4k[928][`style`][`visibility`] = `inherit`;
                            A4k[939][`textContent`] = `This account has been banned.`;
                            A4k[928][`style`][`top`] = `140px`;
                        }
                        if (B7C[`e`] == `password`) {
                            A4k[928][`style`][`visibility`] = `inherit`;
                            A4k[939][`textContent`] = `Password incorrect, please check and try again`;
                            A4k[928][`style`][`top`] = `200px`;
                        }
                    }
                }
                );
            }
            function m6C(V9C=true) {
                var x7G = [arguments];
                                A4k[313][`unblur`]();
                A4k[977][`hideEditorIfShowing`]();
                if (V9C) {
                    anime({
                        targets: document[`getElementById`](`skinmanager`),
                        opacity: `0`,
                        autoplay: true,
                        duration: 130,
                        easing: `easeOutCubic`,
                        complete: function() {
                            var M7G = [arguments];
                                                        I8yy.w9b();
                            document[`getElementById`](`skinmanager`)[`style`][`visibility`] = `hidden`;
                        }
                    });
                } else {
                    document[`getElementById`](`skinmanager`)[`style`][`visibility`] = `hidden`;
                }
                A4k[458] = false;
                q6C();
                A4k[89] = true;
                if (v2k[79][`classic`]) {
                    L4C();
                }
            }
            A4k[677][`push`]({
                date: `2020-10-19`,
                news: `Changed the default level select category from Fresh to Hot. When getting a link to share a custom room, the link is now automatically copied for you. Fixed bug in the editor where renaming a newly created spawn point would actually rename whatever you had selected previously. Fixed bug in the editor causing not all shapes to be deleted when deleting a body, which meant the 'physics shapes' count was incorrect. Any maps that already have this bug will still have it, but the extra shapes that are stuck won't cause any performance slowdown. `
            });
            A4k[677][`push`]({
                date: `2020-10-24`,
                news: `Map voting now takes place after a game has finished, rather than between rounds. You can also favourite maps from this window, doing this will count as an upvote.`
            });
            A4k[677][`push`]({
                date: `2020-10-27`,
                news: `Editor updated so the dropdown for choosing the mode the map is intended for is more visible. When making a map it's important that you set this and don't just leave it! You can now delete your maps from the level select window, and also remove maps from your favourites list. Added a mute button to the player dropdown menu in the lobby, and added some mouse sounds that were missing.`
            });
            A4k[677][`push`]({
                date: `2020-10-28`,
                news: `Fixed bug causing some in game sounds to play twice. Mid round winner text font changed. Guest names and skin colors are now saved locally.`
            });
            A4k[677][`push`]({
                date: `2020-10-30`,
                news: `The hot list on the map load window is now separated into 3 categories: General, Grapple, and Death Arrows. Searching will still search all maps. Edits and Fresh have been removed. Added a count for the number of players currently online to the top bar.`
            });
            A4k[677][`push`]({
                date: `2020-11-04`,
                news: `In game chat restyled. Improvements to the lobby: when players minimise the browser or change browser tab their network bar will now turn grey to indicate this. Added a team lock button. Each players ping is now visible under their network bar, in milliseconds (ms). Lower number is better.  Small UI bugfixes and optimisations.`
            });
            A4k[677][`push`]({
                date: `2020-11-09`,
                news: `Grapple quick play released. The map rotation is currently a static rotation of 29 maps, and more will be added after in-game FPS has been improved.`
            });
            function u0C() {
                var s7G = [arguments];
                I8yy.w9b();
                                t6C(this[`roomID`]);
            }
            A4k[677][`push`]({
                date: `2020-12-03`,
                news: `Bugs? bugs@bonk.io! FPS improved especially on certain maps. Very large circles in maps may have pixelated edges as a result of the optimisations. Fixed bug causing phantom blue players to appear in quick play. Fixed bug causing players with no score to not show up in the score list in quick play. Fixed bug causing some players to see all skins, and the football pitch, as white. Improved appearance of skins to remove jagged edges. Improved team skins to have clearer colors. In arrows modes, heavy can no longer be used at the same time as drawing an arrow. Improved arrows aiming graphics. VTOL removed.`
            });
            A4k[677][`push`]({
                date: `2020-12-04`,
                news: `Fixed bug causing the camera to zoom in at the end of rounds for some players.`
            });
            A4k[677][`push`]({
                date: `2020-12-04 (2)`,
                news: `Fixed Simple quick play not working. Fixed death particles in team games not being the correct team colors. Fixed some minor UI bugs.`
            });
            A4k[677][`push`]({
                date: `2020-12-10`,
                news: `Added players skins next to each of their messages in the lobby to make keeping track of who's saying what much easier. Fixed arrows in team games not using team colors.`
            });
            A4k[677][`push`]({
                date: `2020-12-16`,
                news: `Replaced the FPS counter with a more simple one after discovering the old one was actually causing an FPS drop of about 5% itself. Improvements to the tutorial. Tutorial button is now top of the list for guests. Simplified the map load window to only have two categories for Bonk 2 maps - Hot and Death Arrows. The category is determined automatically: the 'For mode' setting in the editor no longer affects which category your map will be shown in. Small editor improvements to the color picker and list of shapes. The type of shape is shown as a C, R or P, and it's shown in light grey if it's no physics. Lobby layout improved slightly.`
            });
            A4k[677][`push`]({
                date: `2020-12-23`,
                news: `Added mode filters to the custom game room list. Improvements to the skin editor, layers can now be any color you like. Dragging with the mouse across the preview with a layer selected will reposition the layer, and scrolling while the mouse is held down will scale the layer. If you also hold the shift key you will rotate the layer. Rooms with friends in them are now sorted by distance. Removed simple game mode. Fixed the game displaying incorrectly on some browsers with high zoom or display scaling settings. More polish to the UI.`
            });
            A4k[677][`push`]({
                date: `2021-01-11`,
                news: `RIP Flash :( Migrated to main domain. Fixed scaling issues on some high resolution devices caused by last update. Small bugfixes and improvements to the map editor. Friends list now shows friends from the Flash version of the game, so you can send them friend requests.`
            });
            A4k[677][`push`]({
                date: `2021-01-14`,
                news: `Fixed 'Stay logged in' not working. Fixed issue with Bonk 1: My Maps and Bonk 1: My Favs lists not loading any more maps when you scrolled to the bottom, and with some map results showing up out of order. `
            });
            A4k[677][`push`]({
                date: `2021-01-18`,
                news: `Significant FPS improvements. Fixed map suggestions in custom games not working.`
            });
            A4k[677][`push`]({
                date: `2021-01-28`,
                news: `Reworked the grapple physics to be more reliable and consistent. Fixed bugs causing players and capture zones to sometimes but not always block grapples. Added a 'No grapple' option for shapes in the editor, so you can easily set shapes to not be grappleable. The hack of using capture zones set to instant win will still also accomplish this, but you should update any maps to use 'No grapple' instead because this hack may not work in the future. Added an 'inner grapple' option for shapes in the editor, which allows players to grapple the edge of a platform from inside it. Fixed a GPU memory leak when the browser window was resized.`
            });
            A4k[677][`push`]({
                date: `2021-02-01`,
                news: `Added a report button for replays on the main menu. Minor map editor bugfixes and UI tweaks.`
            });
            A4k[677][`push`]({
                date: `2021-02-04`,
                news: `Replaced Bonk 1: Hot with Bonk 1: Top Rated. Fixed a bug where the map search parameters would be different to what the UI was showing.`
            });
            A4k[677][`push`]({
                date: `2021-02-18`,
                news: `Small bugfixes and optimisations. Changes to the maps in Arrows Quick Play: removed Trianglezzz by jorray. Added Stone Pillars by Team Arrows Ram, Partition Demolition by Team Arrows Ram, Cliffside by TheRedKirby, Arrow Grounds 2.0 by Ranker_717, and Arrows Warzone #4 by GudStrat.`
            });
            A4k[677][`push`]({
                date: `2021-05-07`,
                news: `Fixed the lobby chat sometimes failing to scroll down. When a room host leaves a room, they now have the option to end the room instead of transferring host to someone else.`
            });
            A4k[677][`push`]({
                date: `2021-05-11`,
                news: `Fixed exploit allowing arrows to be invisible.`
            });
            A4k[677][`push`]({
                date: `2021-05-18`,
                news: `•Fixed the empty blue player bug, this was also causing desyncs in quick play. 
•Hovering over the replay buttons now hides the brown main menu buttons. 
•Fixed the brown main menu buttons sometimes being hidden after returning from quick play.
•You can now double click rooms in the room list to join them, and hit the enter key after typing in a room password to connect.`
            });
            A4k[677][`push`]({
                date: `2021-05-25`,
                news: `•Fixed bug where two arrows fired at the same time appear as the same color.
•Added a button to favourite the map currently playing in the main menu replay
•Fixed bug where maps saved with grid sizes with decimal points in them would be rounded, so the grid didn't line up when the map was loaded back into the editor`
            });
            A4k[677][`push`]({
                date: `2021-08-02`,
                news: `•Option to 'end room' when leaving a room you're hosting only shows if there are other players still present.
•Fixed bug in the skin rendering that could cause crashes.
•Improved the main menu appearance.`
            });
            A4k[677][`push`]({
                date: `2021-08-20`,
                news: `•Added Picks category to the Map List. These maps are hand chosen by moderators. Please talk with them about any maps you think deserve to be on the Picks list, and work with them to get your maps good enough for the Picks list!
•Fixed custom game room links not working
•Fixed minor graphical issue with map like bars`
            });
            A4k[677][`push`]({
                date: `2022-01-07`,
                news: `•Added ability to change your account password, do it from the settings menu.`
            });
            A4k[319] = [``, ``, ``, `CANCEL`, ``, ``, `HELP`, ``, `BACK_SPACE`, `TAB`, ``, ``, `CLEAR`, `ENTER`, `ENTER_SPECIAL`, ``, `SHIFT`, `CONTROL`, `ALT`, `PAUSE`, `CAPS_LOCK`, `KANA`, `EISU`, `JUNJA`, `FINAL`, `HANJA`, ``, `ESCAPE`, `CONVERT`, `NONCONVERT`, `ACCEPT`, `MODECHANGE`, `SPACE`, `PAGE_UP`, `PAGE_DOWN`, `END`, `HOME`, `LEFT ARROW`, `UP ARROW`, `RIGHT ARROW`, `DOWN ARROW`, `SELECT`, `PRINT`, `EXECUTE`, `PRINTSCREEN`, `INSERT`, `DELETE`, ``, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `COLON`, `SEMICOLON`, `LESS_THAN`, `EQUALS`, `GREATER_THAN`, `QUESTION_MARK`, `AT`, `A`, `B`, `C`, `D`, `E`, `F`, `G`, `H`, `I`, `J`, `K`, `L`, `M`, `N`, `O`, `P`, `Q`, `R`, `S`, `T`, `U`, `V`, `W`, `X`, `Y`, `Z`, `OS_KEY`, ``, `CONTEXT_MENU`, ``, `SLEEP`, `NUMPAD0`, `NUMPAD1`, `NUMPAD2`, `NUMPAD3`, `NUMPAD4`, `NUMPAD5`, `NUMPAD6`, `NUMPAD7`, `NUMPAD8`, `NUMPAD9`, `NUMPAD *`, `NUMPAD +`, `SEPARATOR`, `NUMPAD -`, `NUMPAD DEL`, `/`, `F1`, `F2`, `F3`, `F4`, `F5`, `F6`, `F7`, `F8`, `F9`, `F10`, `F11`, `F12`, `F13`, `F14`, `F15`, `F16`, `F17`, `F18`, `F19`, `F20`, `F21`, `F22`, `F23`, `F24`, ``, ``, ``, ``, ``, ``, ``, ``, `NUM_LOCK`, `SCROLL_LOCK`, `WIN_OEM_FJ_JISHO`, `WIN_OEM_FJ_MASSHOU`, `WIN_OEM_FJ_TOUROKU`, `WIN_OEM_FJ_LOYA`, `WIN_OEM_FJ_ROYA`, ``, ``, ``, ``, ``, ``, ``, ``, ``, `CIRCUMFLEX`, `EXCLAMATION`, `DOUBLE_QUOTE`, `HASH`, `DOLLAR`, `PERCENT`, `AMPERSAND`, `UNDERSCORE`, `OPEN_PAREN`, `CLOSE_PAREN`, `ASTERISK`, `PLUS`, `PIPE`, `HYPHEN_MINUS`, `OPEN_CURLY_BRACKET`, `CLOSE_CURLY_BRACKET`, `TILDE`, ``, ``, ``, ``, `VOLUME_MUTE`, `VOLUME_DOWN`, `VOLUME_UP`, ``, ``, `;`, `=`, `,`, `-`, `.`, `/`, `'`, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, `OPEN_BRACKET`, `BACK_SLASH`, `CLOSE_BRACKET`, `QUOTE`, ``, `META`, `ALTGR`, ``, `WIN_ICO_HELP`, `WIN_ICO_00`, ``, `WIN_ICO_CLEAR`, ``, ``, `WIN_OEM_RESET`, `WIN_OEM_JUMP`, `WIN_OEM_PA1`, `WIN_OEM_PA2`, `WIN_OEM_PA3`, `WIN_OEM_WSCTRL`, `WIN_OEM_CUSEL`, `WIN_OEM_ATTN`, `WIN_OEM_FINISH`, `WIN_OEM_COPY`, `WIN_OEM_AUTO`, `WIN_OEM_ENLW`, `WIN_OEM_BACKTAB`, `ATTN`, `CRSEL`, `EXSEL`, `EREOF`, `PLAY`, `ZOOM`, ``, `PA1`, `WIN_OEM_CLEAR`, ``];
            A4k[319][999] = ``;
            this[`showGuestOrAccount`] = function() {
                var c7G = [arguments];
                                I8yy.w9b();
                A4k[9][`style`][`display`] = `block`;
            }
            ;
            this[`showGuest`] = function() {}
            ;
            this[`returnToMain`] = function() {
                var D7G = [arguments];
                                A4k[9][`style`][`display`] = `block`;
                D6C();
                A4k[313][`resume`]();
                b6C();
                if (v2k[79][`musicMute`] == false) {
                    D7G[8] = -1085686577;
                    D7G[1] = 1538648637;
                    D7G[5] = 2;
                    for (D7G[7] = 1; I8yy.d1f(D7G[7].toString(), D7G[7].toString().length, 80557) !== D7G[8]; D7G[7]++) {
                        this[`startMusic`]();
                        D7G[5] += 2;
                    }
                    if (I8yy.d1f(D7G[5].toString(), D7G[5].toString().length, 37671) !== D7G[1]) {
                        this[v8yy[9775]]();
                    }
                }
                I8yy.g9b();
                c6C();
                Q6C(`slow`);
                if (v2k[79][`classic`]) {
                    L4C();
                }
            }
            ;
            a6C();
            function A0C() {
                var Y7G = [arguments];
                                if (A4k[63][`textContent`] == `Friends From Flash Version +`) {
                    (function() {
                        var N7G = [arguments];
                                                A4k[63][`textContent`] = `Friends From Flash Version -`;
                        I8yy.w9b();
                        N7G[2] = v2k[79][`legacyFriendsString`][`split`](`#`);
                        N7G[2][`shift`]();
                        Y7G[7] = A4k[31];
                        if (N7G[2][`length`] == 0) {
                            N7G[6] = Y7G[7][`insertRow`]();
                            N7G[3] = N7G[6][`insertCell`](0);
                            N7G[3][`textContent`] = `None`;
                            N7G[3][`classList`][`add`](`friends_cell_name`);
                        } else {
                            N7G[5] = function(c1E) {
                                var V7G = [arguments];
                                                                V7G[6] = Y7G[7][`insertRow`]();
                                V7G[4] = V7G[6][`insertCell`](0);
                                V7G[4][`classList`][`add`](`friends_cell_name`);
                                V7G[4][`textContent`] = N7G[2][V7G[0][0]];
                                V7G[5] = V7G[6][`insertCell`](1);
                                V7G[1] = document[`createElement`](`div`);
                                V7G[1][`textContent`] = `SEND REQUEST`;
                                V7G[1][`classList`][`add`](`friends_sendrequest_button`);
                                V7G[1][`classList`][`add`](`brownButton`);
                                I8yy.g9b();
                                V7G[1][`classList`][`add`](`brownButton_classic`);
                                V7G[1][`classList`][`add`](`buttonShadow`);
                                V7G[1][`onclick`] = function() {
                                    I8yy.g9b();
                                    var g7G = [arguments];
                                                                        B6C();
                                    A4k[17][`value`] = N7G[2][V7G[0][0]];
                                }
                                ;
                                V7G[1][`onmousedown`] = v2k[79][`bcs`];
                                V7G[1][`onmouseover`] = v2k[79][`bhs`];
                                V7G[5][`appendChild`](V7G[1]);
                            }
                            ;
                            for (N7G[7] = 0; N7G[7] < N7G[2][`length`]; N7G[7]++) {
                                (1,
                                N7G[5])(N7G[7]);
                            }
                        }
                    }
                    )();
                } else {
                    A4k[63][`textContent`] = `Friends From Flash Version +`;
                    while (A4k[31][`rows`][`length`] > 0) {
                        A4k[31][`deleteRow`](0);
                    }
                }
            }
            setInterval(a6C, 120000);
            v2k[79][`anTime`] = 200;
            function o6C() {
                var U7G = [arguments];
                                v2k[79][`loggedIn`] = true;
                I8yy.w9b();
                if (v2k[79][`guest`]) {
                    A4k[79][`textContent`] = `Guest`;
                    A4k[62][`classList`][`add`](`blueButtonDisabled`);
                    A4k[32][`classList`][`add`](`brownButton_disabled_classic`);
                    A4k[32][`classList`][`remove`](`brownButton_classic`);
                } else {
                    I8yy.H2k(1);
                    U7G[7] = I8yy.A2k(59128, 62240);
                    A4k[79][`textContent`] = v8yy[U7G[7]] + v2k[79][`level`]();
                    A4k[62][`classList`][`remove`](`blueButtonDisabled`);
                    A4k[32][`classList`][`remove`](`brownButton_disabled_classic`);
                    A4k[32][`classList`][`add`](`brownButton_classic`);
                }
                A4k[41][`textContent`] = v2k[79][`userName`];
                q6C();
                b6C();
                Q6C(`slow`);
                A4k[313][`unblur`]();
                f6C();
                A4k[89] = true;
                V1C(`This is the main menu. Click
Quick Play to join a multiplayer game!`, A4k[99], 180, -30);
                if (window[`autoJoin`]) {
                    U7G[8] = {
                        action: `join`,
                        quick: false,
                        address: window[`autoJoin`][`address`],
                        password: ``,
                        bypass: window[`autoJoin`][`passbypass`],
                        server: window[`autoJoin`][`server`]
                    };
                    b5C(U7G[8]);
                    I1C(`Auto Joining...`);
                    window[`autoJoin`] = null;
                }
                if (v2k[79][`classic`]) {
                    L4C();
                }
                p0C();
            }
            v2k[79][`anDel`] = 100;
            this[`hide`] = function() {
                var B7G = [arguments];
                                A4k[9][`style`][`display`] = `none`;
                A4k[313][`stop`]();
                this[`stopMusic`]();
            }
            ;
            function L4C() {
                I8yy.w9b();
                var a7G = [arguments];
                                A4k[96][`style`][`visibility`] = `inherit`;
                A4k[96][`style`][`opacity`] = `1`;
            }
            this[`showing`] = function() {
                I8yy.g9b();
                var t7G = [arguments];
                                I8yy.P2k(0);
                t7G[8] = I8yy.A2k(57, 402);
                I8yy.P2k(190);
                t7G[3] = I8yy.A2k(68, 12, 2, 263, 3);
                I8yy.H2k(87);
                t7G[5] = I8yy.A2k(13, 589, 12, 5867, 11);
                return A4k[9][v8yy[t7G[8]]][v8yy[t7G[3]]] != v8yy[t7G[5]];
            }
            ;
            this[`startMusic`] = function() {
                var E7G = [arguments];
                                if (A4k[5]) {
                    A4k[5][`off`](`fade`, e6C);
                    A4k[5][`off`](`end`, X6C);
                    A4k[5][`stop`]();
                }
                if (++A4k[4] > 1) {
                    A4k[4] = 0;
                }
                E7G[9] = ``;
                if (A4k[4] == 0) {
                    E7G[9] = `sound/128_wmb.mp3`;
                } else {
                    E7G[9] = `sound/128_vdp.mp3`;
                }
                A4k[5] = new Howl({
                    src: [E7G[9]],
                    volume: 0.4,
                    loop: false
                });
                A4k[5][`on`](`end`, X6C);
                I8yy.w9b();
                A4k[5][`play`]();
            }
            ;
            this[`stopMusic`] = function() {
                I8yy.g9b();
                var R7G = [arguments];
                                if (A4k[5]) {
                    A4k[5][`fade`](A4k[5][`_volume`], 0, 2000);
                    A4k[5][`on`](`fade`, e6C);
                }
            }
            ;
            this[`straightIntoTutorial`] = function() {
                q1C();
            }
            ;
            function t0C() {
                var j6G = [arguments];
                                if (v2k[79][`guest`] == false) {
                    j6G[9] = v6C();
                    if (v6C) {
                        $[`post`](`https://bonk2.io/scripts/login_clearauto.php`, {
                            rememberToken: j6G[9]
                        });
                        ;
                    }
                    v2k[79][`setCookie`](`rememberToken`, ``, -999);
                    A4k[258][`clearToken`]();
                }
                k1C(`slow`);
                K4C();
                Q5C();
                v2k[79][`avatar`] = new v2k[38]();
                v2k[79][`avatar`][`randomBC`](v2k[79]);
                v2k[79][`activeAvatarNumber`] = 0;
                for (j6G[6] = 1; j6G[6] < 5; j6G[6]++) {
                    v2k[79][`allAvatars`][j6G[6]] = new v2k[38]();
                }
                v2k[79][`allAvatars`][0] = v2k[79][`avatar`];
                v2k[79][`loggedIn`] = false;
                A4k[14] = ``;
                I8yy.w9b();
                v2k[79][`friends`] = [];
                v2k[79][`mapsVotedFor`] = [];
                v2k[79][`legacyFriendsString`] = ``;
                A4k[89] = false;
                if (v2k[79][`classic`]) {
                    u4C();
                }
            }
            A4k[334] = document[`getElementById`](`settingsContainer`);
            A4k[165] = document[`getElementById`](`settings_cancelButton`);
            A4k[401] = document[`getElementById`](`settings_close`);
            A4k[401][`onclick`] = g5C;
            A4k[401][`onmousedown`] = v2k[79][`bbs`];
            A4k[401][`onmouseover`] = v2k[79][`bhs`];
            A4k[165][`onmousedown`] = v2k[79][`bbs`];
            A4k[165][`onmouseover`] = v2k[79][`bhs`];
            A4k[959] = document[`getElementById`](`settings_saveButton`);
            A4k[959][`onmousedown`] = v2k[79][`bcs`];
            A4k[959][`onmouseover`] = v2k[79][`bhs`];
            A4k[873] = document[`getElementById`](`redefineControls_table`);
            A4k[556] = document[`getElementById`](`settings_filterprofanity_checkbox`);
            function Q6C(D1E) {
                I8yy.w9b();
                var k6G = [arguments];
                                if (k6G[0][0] == `fast`) {
                    if (!v2k[79][`classic`]) {
                        A4k[65][`style`][`bottom`] = `0px`;
                    }
                    A4k[28][`style`][`top`] = `0px`;
                }
                if (k6G[0][0] == `slow`) {
                    if (!v2k[79][`classic`]) {
                        anime({
                            targets: A4k[65],
                            bottom: `0`,
                            autoplay: true,
                            duration: 500,
                            easing: `easeOutCubic`
                        });
                    }
                    anime({
                        targets: A4k[28],
                        top: `0`,
                        delay: 100,
                        autoplay: true,
                        duration: 500,
                        easing: `easeOutCubic`
                    });
                }
                if (k6G[0][0] == `medium`) {
                    if (!v2k[79][`classic`]) {
                        anime({
                            targets: A4k[65],
                            bottom: `0`,
                            autoplay: true,
                            duration: 120,
                            easing: `easeOutCubic`
                        });
                    }
                    anime({
                        targets: A4k[28],
                        top: `0`,
                        delay: 100,
                        autoplay: true,
                        duration: 120,
                        easing: `easeOutCubic`
                    });
                }
            }
            A4k[344] = document[`getElementById`](`settings_fps_checkbox`);
            function U0C() {
                I8yy.w9b();
                var f6G = [arguments];
                                A4k[209][`style`][`visibility`] = `hidden`;
                Q5C();
            }
            A4k[287] = document[`getElementById`](`settings_graphicsquality`);
            A4k[674] = document[`getElementById`](`settings_change_password_label`);
            function W0C() {
                I8yy.w9b();
                var G6G = [arguments];
                                A4k[209][`style`][`visibility`] = `hidden`;
                A4k[96][`appendChild`](A4k[12]);
                o6C();
            }
            A4k[556][`onchange`] = function(Y1E) {
                var T6G = [arguments];
                                A4k[465][`filter`] = this[`checked`];
            }
            ;
            A4k[287][`onchange`] = function(N1E) {
                var K6G = [arguments];
                                A4k[465][`quality`] = parseInt(this[`value`]);
            }
            ;
            A4k[344][`onchange`] = function(V1E) {
                var r6G = [arguments];
                                I8yy.w9b();
                A4k[465][`stats`] = this[`checked`];
            }
            ;
            A4k[674][`onclick`] = function(g1E) {
                var A6G = [arguments];
                g5C();
                u4C();
                I8yy.g9b();
                h0C();
            }
            ;
            A4k[720] = `left2`;
            function E4C() {
                var P6G = [arguments];
                I8yy.w9b();
                                A4k[60][`style`][`visibility`] = `hidden`;
                A4k[313][`unblur`]();
                A4k[551] = false;
                G1C();
                A4k[89] = true;
            }
            A4k[516] = document[`getElementById`](`passwordChangeContainer`);
            A4k[424] = document[`getElementById`](`passwordChange_cancelButton`);
            A4k[570] = document[`getElementById`](`passwordChange_close`);
            A4k[623] = document[`getElementById`](`passwordChange_saveButton`);
            A4k[120] = document[`getElementById`](`passwordChange_statuslabel`);
            A4k[934] = document[`getElementById`](`passwordChange_oldpass`);
            A4k[762] = document[`getElementById`](`passwordChange_newpass1`);
            A4k[423] = document[`getElementById`](`passwordChange_newpass2`);
            A4k[424][`onclick`] = o1C;
            A4k[570][`onclick`] = o1C;
            A4k[623][`onclick`] = M0C;
            A4k[188] = document[`getElementById`](`autoLoginContainer`);
            A4k[986] = document[`getElementById`](`autoLogin_cancelButton`);
            A4k[567] = document[`getElementById`](`autoLogin_text`);
            function y0C(U1E, B1E, a1E) {
                var H6G = [arguments];
                H6G[9] = {
                    action: `join`,
                    quick: H6G[0][2],
                    address: H6G[0][0],
                    password: undefined,
                    roomName: `joinname`,
                    server: H6G[0][1],
                    mo: `b`
                };
                I8yy.g9b();
                A4k[322] = H6G[0][0];
                b5C(H6G[9]);
            }
            function F4C(t1E) {
                var v6G = [arguments];
                I8yy.w9b();
                                if (v6G[0][0][`keyCode`] == 27) {
                    $(document)[`off`](`keydown`, F4C);
                    r1C();
                    return;
                }
                if (v6G[0][0][`keyCode`] == 46) {
                    $(document)[`off`](`keydown`, F4C);
                    A4k[465][A4k[720]] = 999;
                    r1C();
                    return;
                }
                $(document)[`off`](`keydown`, F4C);
                A4k[465][A4k[720]] = v6G[0][0][`keyCode`];
                r1C();
            }
            A4k[301] = document[`getElementById`](`guestOrAccountContainer`);
            A4k[783] = document[`getElementById`](`guestOrAccountContainer_guestButton`);
            A4k[933] = document[`getElementById`](`guestOrAccountContainer_accountButton`);
            A4k[773] = document[`getElementById`](`guestOrAccountContainer_guestBox`);
            A4k[261] = document[`getElementById`](`guestOrAccountContainer_accountBox`);
            v2k[79][`setRollFunctions`](A4k[783]);
            v2k[79][`setRollFunctions`](A4k[933]);
            A4k[783][`onmousedown`] = v2k[79][`bcs`];
            A4k[933][`onmousedown`] = v2k[79][`bcs`];
            A4k[767] = document[`getElementById`](`guestContainer`);
            A4k[180] = document[`getElementById`](`guest_close`);
            A4k[180][`onclick`] = Z0C;
            function f6C() {
                var i6G = [arguments];
                                if (v2k[79][`customControls`][`help`] && v2k[79][`getCookie`](`noingamehelp`) != `true`) {
                    A4k[71][`classList`][`remove`](`pretty_top_help_off`);
                } else {
                    A4k[71][`classList`][`add`](`pretty_top_help_off`);
                }
            }
            A4k[180][`onmousedown`] = v2k[79][`bbs`];
            A4k[180][`onmouseover`] = v2k[79][`bhs`];
            function u4C() {
                var u6G = [arguments];
                I8yy.g9b();
                                A4k[96][`style`][`visibility`] = `hidden`;
            }
            A4k[942] = document[`getElementById`](`guestPlayButton`);
            v2k[79][`setRollFunctions`](A4k[942]);
            A4k[942][`onmousedown`] = v2k[79][`bcs`];
            A4k[966] = document[`getElementById`](`guest_skinbox`);
            function I6C() {
                var b6G = [arguments];
                                A4k[120][`style`][`opacity`] = -`0`;
                anime({
                    targets: A4k[120],
                    opacity: `1`,
                    autoplay: true,
                    duration: 100,
                    easing: `easeOutCubic`
                });
            }
            function l6C() {
                var d6G = [arguments];
                                I8yy.w9b();
                v2k[79][`quickMode`] = `bonkquick`;
                if (v2k[79][`classic`]) {
                    C5C();
                    v2k[79][`rlc`]();
                } else {
                    E4C();
                }
                i5C();
            }
            A4k[866] = document[`getElementById`](`guest_nametext`);
            A4k[209] = document[`getElementById`](`accountContainer`);
            A4k[928] = document[`getElementById`](`loginfieldtip`);
            A4k[939] = document[`getElementById`](`loginfieldtip_text`);
            function X0C() {
                var e6G = [arguments];
                                v2k[79][`customControls`] = A4k[465];
                i6C();
                g5C();
                i1C();
            }
            A4k[907] = document[`getElementById`](`registerfieldtip`);
            A4k[920] = document[`getElementById`](`registerfieldtip_text`);
            A4k[191] = v6C();
            A4k[892] = false;
            if (A4k[191]) {
                D0C(A4k[191]);
                ;
            } else {
                Q5C();
            }
            k1C(`fast`);
            document[`addEventListener`](`visibilitychange`, o8h=>{
                I8yy.g9b();
                
                                if (document[`visibilityState`] == `visible`) {
                    H0C();
                } else {
                    z0C();
                }
            }
            );
            ;
        }
        v2k[79][`colors`][`push`](0x7CB342);
        v2k[79][`colors`][`push`](0xC0CA33);
        v2k[79][`colors`][`push`](0xFDD835);
        v2k[79][`colors`][`push`](0xFFB300);
        v2k[79][`colors`][`push`](0xFB8C00);
        function s8(E1E, R1E, j0E) {
            var C6G = [arguments];
                        C6G[5] = 1;
            C6G[1] = 2;
            C6G[8] = 3;
            C6G[4] = 4;
            C6G[9] = 5;
            C6G[6] = 6;
            C6G[7] = 7;
            C6G[3] = 8;
            C6G[43] = 9;
            C6G[17] = 10;
            C6G[97] = 11;
            C6G[19] = 12;
            C6G[20] = 13;
            C6G[67] = 14;
            C6G[13] = 15;
            C6G[92] = 16;
            C6G[89] = 17;
            C6G[57] = 18;
            C6G[59] = 19;
            C6G[54] = 20;
            C6G[60] = 21;
            C6G[21] = 23;
            C6G[77] = 24;
            C6G[29] = 25;
            C6G[22] = 26;
            C6G[18] = 27;
            C6G[96] = 28;
            C6G[23] = 29;
            C6G[48] = 30;
            C6G[14] = 31;
            C6G[35] = 32;
            C6G[26] = 33;
            C6G[30] = 34;
            C6G[39] = 35;
            C6G[31] = 36;
            C6G[61] = 37;
            C6G[25] = 38;
            C6G[63] = 39;
            C6G[24] = 40;
            C6G[44] = 41;
            C6G[46] = 42;
            C6G[10] = 43;
            C6G[52] = 44;
            C6G[84] = 45;
            C6G[65] = 46;
            C6G[53] = 47;
            C6G[15] = 48;
            C6G[93] = 49;
            C6G[80] = 50;
            C6G[56] = 51;
            C6G[34] = 52;
            C6G[91] = 53;
            C6G[69] = 54;
            C6G[81] = 57;
            C6G[16] = 1;
            C6G[98] = 2;
            C6G[68] = 3;
            C6G[27] = 4;
            C6G[76] = 5;
            C6G[79] = 6;
            C6G[83] = 7;
            C6G[94] = 8;
            C6G[49] = 9;
            C6G[82] = 10;
            C6G[36] = 11;
            C6G[28] = 12;
            C6G[45] = 13;
            C6G[47] = 14;
            C6G[73] = 16;
            C6G[50] = 17;
            C6G[75] = 18;
            C6G[78] = 19;
            C6G[33] = 20;
            C6G[32] = 21;
            C6G[88] = 22;
            C6G[99] = 23;
            C6G[90] = 24;
            C6G[62] = 25;
            C6G[41] = 26;
            function g4z(k0E) {
                var l6G = [arguments];
                I8yy.g9b();
                                C6G[747][l6G[0][0]][`dataConnection`] = C6G[351][`connect`](C6G[747][l6G[0][0]][`peerID`]);
                t8z(C6G[747][l6G[0][0]][`dataConnection`]);
            }
            C6G[87] = 27;
            C6G[55] = 28;
            C6G[95] = 29;
            C6G[42] = 30;
            C6G[86] = 31;
            C6G[71] = 32;
            C6G[70] = 33;
            C6G[11] = 34;
            function v4z() {
                var o6G = [arguments];
                o6G[5] = C6G[377];
                C6G[351] = new v2k[9]({
                    host: o6G[5],
                    port: 443,
                    path: `/myapp`,
                    secure: true
                });
                C6G[351][`on`](`open`, function(f0E) {
                    var I6G = [arguments];
                    I8yy.w9b();
                    C6G[934] = true;
                    Y7S(`status`, `P2P ready`);
                    C6G[286] = I6G[0][0];
                    if (C6G[934] && C6G[743]) {
                        q8z();
                    }
                });
                I8yy.g9b();
                C6G[351][`on`](`connection`, function(G0E) {
                    var F6G = [arguments];
                                        F6G[6] = F6G[0][0][`peer`];
                    I8yy.g9b();
                    F6G[4] = false;
                    for (F6G[9] = 0; F6G[9] < C6G[747][`length`]; F6G[9]++) {
                        if (C6G[747][F6G[9]]) {
                            if (C6G[747][F6G[9]][`peerID`] == F6G[6]) {
                                C6G[747][F6G[9]][`dataConnection`] = F6G[0][0];
                            }
                        }
                    }
                    if (!F6G[4]) {
                        C6G[646][`push`](F6G[0][0]);
                    }
                    t8z(F6G[0][0]);
                });
                C6G[351][`on`](`error`, function(T0E) {
                    var L6G = [arguments];
                    ;
                });
            }
            C6G[51] = 35;
            C6G[40] = 36;
            C6G[85] = 37;
            C6G[58] = 38;
            C6G[12] = 39;
            C6G[64] = 40;
            C6G[72] = 41;
            C6G[74] = 42;
            C6G[37] = 43;
            C6G[66] = 44;
            C6G[38] = 45;
            C6G[655] = 46;
            C6G[559] = 47;
            C6G[442] = 50;
            C6G[694] = 51;
            C6G[384] = true;
            C6G[218] = this;
            C6G[172] = C6G[0][2];
            C6G[280] = C6G[0][0];
            C6G[619] = C6G[0][1];
            C6G[658] = 0;
            function Y7S(...g0z) {
                var J6G = [arguments];
                                J6G[3] = g0z[`shift`]();
                for (J6G[6] = 0; J6G[6] < C6G[350][`length`]; J6G[6]++) {
                    if (C6G[350][J6G[6]][`eventName`] == J6G[3]) {
                        C6G[350][J6G[6]][`callback`](...g0z);
                    }
                }
            }
            C6G[478] = ``;
            C6G[137] = ``;
            C6G[575] = setInterval(I4z, 100);
            this[`hostID`] = 0;
            this[`autoJoinID`] = ``;
            function i8z() {
                I8yy.g9b();
                Y7S(`status`, `Initial data timeout.`);
            }
            this[`autoJoinPassBypass`] = ``;
            C6G[747] = [];
            C6G[646] = [];
            C6G[377] = ``;
            ;if (C6G[0][1][`action`] == `join`) {
                I8yy.P2k(161);
                C6G[392] = I8yy.r2k(31, 1, 18, 764);
                I8yy.H2k(1);
                C6G[937] = I8yy.A2k(6, 1984);
                C6G[377] = C6G[0][1][v8yy[C6G[392]]] + v8yy[C6G[937]];
                C6G[137] = C6G[0][1][`server`];
            } else {
                I8yy.P2k(40);
                C6G[235] = I8yy.A2k(14, 9, 756);
                I8yy.H2k(138);
                C6G[732] = I8yy.A2k(7, 8, 1982, 7, 11937);
                C6G[377] = v2k[79][v8yy[C6G[235]]] + v8yy[C6G[732]];
                C6G[137] = v2k[79][`server`];
            }
            I8yy.P2k(187);
            C6G[913] = I8yy.A2k(19803, 16, 6, 21769, 9);
            I8yy.P2k(25);
            C6G[820] = I8yy.r2k(1973, 211104, 12, 9);
            C6G[760] = v8yy[C6G[913]] + C6G[377] + v8yy[C6G[820]];
            C6G[370] = (1,
            v2k[0][0])(C6G[760], {
                reconnection: false
            });
            C6G[743] = false;
            C6G[934] = false;
            C6G[370][`on`](`connect`, ()=>{
                Y7S(`status`, `Connected, synchronizing...`);
                W4z();
                ;
            }
            );
            C6G[370][`on`](`connect_error`, K4z=>{
                I8yy.g9b();
                Y7S(`status`, `Connect error`);
            }
            );
            C6G[370][`on`](`connect_timeout`, r4z=>{
                ;
            }
            );
            C6G[370][`on`](`error`, R4z=>{}
            );
            C6G[370][`on`](`disconnect`, Q4z=>{
                
                                C6G[875][`destroy`]();
                I8yy.g9b();
                Y7S(`disconnectedFromMona`);
            }
            );
            C6G[370][`on`](`reconnect`, o4z=>{
                I8yy.g9b();
                ;
            }
            );
            C6G[370][`on`](`reconnect_attempt`, O4z=>{}
            );
            C6G[370][`on`](`reconnecting`, L4z=>{
                ;
            }
            );
            C6G[370][`on`](`reconnect_error`, s4z=>{
                I8yy.g9b();
                ;
            }
            );
            C6G[370][`on`](`reconnect_failed`, ()=>{
                ;
            }
            );
            C6G[370][`on`](C6G[5], (F4z,k4z)=>{
                
                                C6G[370][`emit`](C6G[16], {
                    id: k4z
                });
                I8yy.w9b();
                Y7S(`gotPingData`, F4z);
            }
            );
            this[`testPing`] = function() {
                var h6G = [arguments];
                                I8yy.g9b();
                C6G[370][`emit`](C6G[98]);
            }
            ;
            this[`getLSID`] = function() {
                I8yy.w9b();
                return C6G[194];
            }
            ;
            C6G[370][`on`](C6G[1], function(K0E, r0E, A0E) {
                I8yy.g9b();
                var X6G = [arguments];
                C6G[194] = 0;
                Y7S(`status`, `Room created`);
                Y7S(`createdRoom`, X6G[0][1], X6G[0][2]);
            });
            C6G[370][`on`](C6G[8], function(P0E, H0E, v0E, i0E, u0E, b0E, d0E, e0E) {
                var m6G = [arguments];
                                C6G[194] = m6G[0][0];
                C6G[218][`hostID`] = m6G[0][1];
                C6G[218][`autoJoinID`] = m6G[0][5];
                C6G[218][`autoJoinPassBypass`] = m6G[0][6];
                for (m6G[8] = 0; m6G[8] < m6G[0][2][`length`]; m6G[8]++) {
                    if (m6G[0][2][m6G[8]]) {
                        C6G[747][m6G[8]] = new v2k[59](m6G[0][2][m6G[8]][`peerID`]);
                        if (m6G[8] != C6G[194]) {
                            if (C6G[384] && s8[`np`] == false) {
                                g4z(m6G[8]);
                            }
                        }
                    }
                }
                Y7S(`status`, `Joined room, awaiting first data`);
                Y7S(`joinedRoom`, C6G[194], m6G[0][2], 2, m6G[0][3], m6G[0][7]);
                C6G[553] = setTimeout(i8z, 6000);
            });
            C6G[370][`on`](C6G[4], function(C0E, l0E, o0E, I0E, F0E, L0E, J0E) {
                var Q6G = [arguments];
                                C6G[747][Q6G[0][0]] = new v2k[59](Q6G[0][1]);
                for (Q6G[2] = 0; Q6G[2] < C6G[646][`length`]; Q6G[2]++) {
                    if (C6G[646][Q6G[2]] && C6G[646][Q6G[2]][`peer`] == Q6G[0][1]) {
                        C6G[747][Q6G[0][0]][`dataConnection`] = C6G[646][Q6G[2]];
                        C6G[646][Q6G[2]] = null;
                    }
                }
                Y7S(`newPlayerJoined`, Q6G[0][0], Q6G[0][2], Q6G[0][3], Q6G[0][4], Q6G[0][5], Q6G[0][6]);
            });
            C6G[370][`on`](C6G[93], function(h0E, X0E) {
                var q6G = [arguments];
                                C6G[218][`autoJoinID`] = q6G[0][0];
                C6G[218][`autoJoinPassBypass`] = q6G[0][1];
            });
            C6G[370][`on`](C6G[9], function(m0E, Q0E) {
                var S6G = [arguments];
                                if (C6G[747][S6G[0][0]][`dataConnection`] && C6G[747][S6G[0][0]][`dataConnection`][`open`]) {
                    C6G[747][S6G[0][0]][`dataConnection`][`close`]();
                }
                C6G[747][S6G[0][0]] = null;
                Y7S(`playerLeft`, S6G[0][0], S6G[0][1]);
            });
            C6G[370][`on`](C6G[6], function(q0E, S0E, w0E) {
                var w6G = [arguments];
                                if (C6G[747][w6G[0][0]][`dataConnection`] && C6G[747][w6G[0][0]][`dataConnection`][`open`]) {
                    C6G[747][w6G[0][0]][`dataConnection`][`close`]();
                }
                C6G[747][w6G[0][0]] = null;
                C6G[218][`hostID`] = w6G[0][1];
                if (w6G[0][1] == C6G[194]) {}
                Y7S(`hostLeft`, w6G[0][0], w6G[0][1], w6G[0][2]);
            });
            C6G[370][`on`](C6G[7], function(z0E, n0E) {
                var z6G = [arguments];
                                if (C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]]) {
                    I8yy.H2k(40);
                    z6G[2] = I8yy.r2k(20, 10, 775);
                    I8yy.P2k(0);
                    z6G[1] = I8yy.r2k(38, 20);
                    I8yy.P2k(60);
                    z6G[6] = I8yy.A2k(5, 765, 131, 786);
                    z6G[4] = Date[`now`]() - C6G[747][z6G[0][0]][v8yy[z6G[2]]][z6G[0][1][v8yy[z6G[1]]]][v8yy[z6G[6]]];
                    C6G[747][z6G[0][0]][`metrics`][`pc`]++;
                    C6G[747][z6G[0][0]][`metrics`][`pt`] += z6G[4];
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`node`] = true;
                    if (C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`reverted`]) {
                        C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`unreverted`] = true;
                        C6G[280][`recvInputs`](z6G[0][0], z6G[0][1], `node`);
                    } else if (C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`p2pIgnored`]) {
                        C6G[280][`recvInputs`](z6G[0][0], z6G[0][1], `node`);
                    }
                } else {
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]] = {};
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`time`] = Date[`now`]();
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`frame`] = z6G[0][1][`f`];
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`p2p`] = false;
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`p2pIgnored`] = false;
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`node`] = true;
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`reverted`] = false;
                    C6G[747][z6G[0][0]][`receivedMessages`][z6G[0][1][`c`]][`unreverted`] = false;
                    C6G[280][`recvInputs`](z6G[0][0], z6G[0][1], `node`);
                }
            });
            C6G[370][`on`](C6G[3], function(y0E, p0E) {
                var n6G = [arguments];
                Y7S(`readyChange`, n6G[0][0], n6G[0][1]);
            });
            C6G[370][`on`](C6G[43], function() {
                I8yy.g9b();
                Y7S(`readyReset`);
            });
            C6G[370][`on`](C6G[17], function(O0E, W0E) {
                I8yy.g9b();
                var y6G = [arguments];
                Y7S(`playerMuted`, y6G[0][0], y6G[0][1]);
            });
            C6G[370][`on`](C6G[97], function(Z0E, x0E) {
                var p6G = [arguments];
                Y7S(`playerUnmuted`, p6G[0][0], p6G[0][1]);
            });
            C6G[370][`on`](C6G[19], function(M0E, s0E) {
                var O6G = [arguments];
                Y7S(`nameChange`, O6G[0][0], O6G[0][1]);
            });
            function I4z() {
                I8yy.g9b();
                var W6G = [arguments];
                                for (W6G[1] = 0; W6G[1] < C6G[747][`length`]; W6G[1]++) {
                    if (C6G[747][W6G[1]]) {
                        for (W6G[7] = C6G[747][W6G[1]][`receivedMessages`][`length`] - 1; W6G[7] >= Math[`max`](0, C6G[747][W6G[1]][`receivedMessages`][`length`] - 1000); W6G[7]--) {
                            if (!C6G[747][W6G[1]][`receivedMessages`][W6G[7]]) {
                                continue;
                            }
                            W6G[6] = C6G[747][W6G[1]][`receivedMessages`][W6G[7]];
                            I8yy.P2k(16);
                            W6G[2] = I8yy.A2k(6128, 18, 85008, 14);
                            W6G[3] = Date[`now`]() - W6G[6][v8yy[W6G[2]]];
                            if (W6G[3] > 2000) {
                                break;
                            }
                            if (W6G[3] > s8[`nmpcw`] * 1000 && W6G[6][`p2p`] == true && W6G[6][`node`] == false && W6G[6][`p2pIgnored`] == false && W6G[6][`reverted`] == false) {
                                W6G[6][`reverted`] = true;
                                if (++C6G[747][W6G[1]][`p2pReverts`] >= 4) {
                                    C6G[747][W6G[1]][`p2pReverts`] = 0;
                                    C6G[747][W6G[1]][`p2pBanLevel`]++;
                                    I8yy.H2k(120);
                                    W6G[9] = I8yy.r2k(2, 14219, 10, 789);
                                    I8yy.H2k(0);
                                    W6G[4] = I8yy.A2k(0, 2);
                                    I8yy.P2k(7);
                                    W6G[53] = I8yy.A2k(765, 6, 11, 3, 81);
                                    W6G[8] = W6G[9] * Math[`pow`](W6G[4], C6G[747][W6G[1]][v8yy[W6G[53]]]);
                                    C6G[747][W6G[1]][`p2pBanUntil`] = Date[`now`]() + W6G[8];
                                }
                                Y7S(`p2pRevert`, W6G[1], W6G[6][`frame`]);
                            }
                        }
                    }
                }
            }
            C6G[370][`on`](C6G[20], function() {
                I8yy.w9b();
                Y7S(`returnToLobby`);
            });
            C6G[370][`on`](C6G[67], function(c0E) {
                I8yy.g9b();
                var Z6G = [arguments];
            });
            C6G[370][`on`](C6G[13], function(D0E, Y0E, N0E) {
                I8yy.w9b();
                var x6G = [arguments];
                Y7S(`scheduleGameStart`, x6G[0][0], x6G[0][1], x6G[0][2]);
            });
            C6G[370][`on`](C6G[92], function(V0E) {
                I8yy.g9b();
                var M6G = [arguments];
                Y7S(`status`, M6G[0][0]);
            });
            C6G[370][`on`](C6G[89], function(g0E) {
                var s6G = [arguments];
                                I8yy.w9b();
                s6G[8] = JSON[`parse`](s6G[0][0][`a`]);
                s6G[4] = JSON[`parse`](s6G[0][0][`b`]);
            });
            C6G[370][`on`](C6G[57], function(U0E, B0E) {
                var c6G = [arguments];
                Y7S(`teamChange`, c6G[0][0], c6G[0][1]);
            });
            C6G[370][`on`](C6G[59], function(a0E) {
                I8yy.w9b();
                var D6G = [arguments];
                Y7S(`teamLockChange`, D6G[0][0]);
            });
            C6G[370][`on`](C6G[54], function(t0E, E0E) {
                var Y6G = [arguments];
                Y7S(`chatMessage`, Y6G[0][0], Y6G[0][1]);
            });
            C6G[370][`on`](C6G[60], function(R0E) {
                I8yy.w9b();
                var N6G = [arguments];
                clearTimeout(C6G[553]);
                Y7S(`recvInLobby`, N6G[0][0]);
            });
            C6G[370][`on`](C6G[15], function(j5E) {
                var V6G = [arguments];
                I8yy.w9b();
                clearTimeout(C6G[553]);
                Y7S(`recvInGame`, V6G[0][0]);
            });
            C6G[370][`on`](C6G[29], function(k5E, f5E) {
                I8yy.w9b();
                var g6G = [arguments];
                Y7S(`mapReorder`, g6G[0][0], g6G[0][1]);
            });
            C6G[370][`on`](C6G[96], function(G5E) {
                var U6G = [arguments];
                Y7S(`mapDelete`, U6G[0][0]);
            });
            C6G[370][`on`](C6G[23], function(T5E) {
                var B6G = [arguments];
                                I8yy.g9b();
                B6G[6] = T[`decodeFromDatabase`](B6G[0][0]);
                Y7S(`mapAdd`, B6G[6]);
            });
            C6G[370][`on`](C6G[26], function(K5E, r5E) {
                var a6G = [arguments];
                                a6G[2] = T[`decodeFromDatabase`](a6G[0][0]);
                Y7S(`mapSuggest`, a6G[2], a6G[0][1]);
            });
            C6G[370][`on`](C6G[30], function(A5E, P5E, H5E) {
                var t6G = [arguments];
                Y7S(`mapSuggestClient`, t6G[0][0], t6G[0][1], t6G[0][2]);
            });
            C6G[370][`on`](C6G[22], function(v5E, i5E) {
                var E6G = [arguments];
                Y7S(`changeGAMO`, E6G[0][0], E6G[0][1]);
            });
            C6G[370][`on`](C6G[18], function(u5E) {
                var R6G = [arguments];
                I8yy.g9b();
                Y7S(`changeWL`, R6G[0][0]);
            });
            function q8z() {
                var j8G = [arguments];
                                if (C6G[619][`action`] == `join`) {
                    Y7S(`status`, `Requesting to join room...`);
                    C6G[218][`joinRoom`](C6G[619][`address`], C6G[619][`password`], C6G[619][`bypass`]);
                } else if (C6G[619][`action`] == `create`) {
                    Y7S(`status`, `Creating new room`);
                    C6G[218][`createRoom`](C6G[619][`formValues`], C6G[619][`quick`]);
                }
            }
            C6G[370][`on`](C6G[48], function(b5E) {
                var k8G = [arguments];
                I8yy.g9b();
                Y7S(`typing`, k8G[0][0]);
            });
            C6G[370][`on`](C6G[77], function(d5E) {
                I8yy.w9b();
                var f8G = [arguments];
                Y7S(`kicked`, f8G[0][0]);
            });
            C6G[370][`on`](C6G[14], function(e5E) {
                var G8G = [arguments];
                I8yy.w9b();
                Y7S(`adminInputs`, G8G[0][0]);
            });
            C6G[370][`on`](C6G[35], function() {
                I8yy.g9b();
                Y7S(`afkWarn`);
            });
            C6G[370][`on`](C6G[39], function(C5E) {
                var T8G = [arguments];
                Y7S(`changeMode`, T8G[0][0]);
            });
            C6G[370][`on`](C6G[31], function(l5E, o5E) {
                var K8G = [arguments];
                Y7S(`balance`, K8G[0][0], K8G[0][1]);
            });
            C6G[370][`on`](C6G[61], function(I5E) {
                I8yy.g9b();
                var r8G = [arguments];
            });
            C6G[370][`on`](C6G[25], function(F5E, L5E) {
                var A8G = [arguments];
                I8yy.w9b();
                Y7S(`debugWinner`, A8G[0][0], A8G[0][1]);
            });
            C6G[370][`on`](C6G[63], function(J5E) {
                var P8G = [arguments];
                I8yy.w9b();
                Y7S(`teamSettingsChange`, P8G[0][0]);
            });
            C6G[370][`on`](C6G[24], function(h5E) {
                var H8G = [arguments];
                I8yy.g9b();
                Y7S(`armRecord`, H8G[0][0]);
            });
            C6G[370][`on`](C6G[44], function(X5E) {
                var v8G = [arguments];
                                I8yy.w9b();
                C6G[218][`hostID`] = v8G[0][0][`newHost`];
                Y7S(`hostChange`, v8G[0][0]);
            });
            function t8z(m5E) {
                var i8G = [arguments];
                                I8yy.g9b();
                i8G[0][0][`on`](`open`, function() {});
                i8G[0][0][`on`](`close`, function() {});
                i8G[0][0][`on`](`data`, function(Q5E) {
                    var u8G = [arguments];
                                        if (typeof u8G[0][0][`c`] != `number` || u8G[0][0][`c`] % 1 != 0) {
                        return;
                    }
                    u8G[2] = -1;
                    for (u8G[8] = 0; u8G[8] < C6G[747][`length`]; u8G[8]++) {
                        if (C6G[747][u8G[8]] && C6G[747][u8G[8]][`dataConnection`] == i8G[0][0]) {
                            u8G[2] = u8G[8];
                            break;
                        }
                    }
                    if (u8G[2] == -1) {
                        return;
                    }
                    if (C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]]) {
                        C6G[747][u8G[2]][`metrics`][`nc`]++;
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`p2p`] = true;
                    } else if (C6G[747][u8G[2]][`p2pBanUntil`] > Date[`now`]()) {
                        ;
                    } else {
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]] = {};
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`time`] = Date[`now`]();
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`frame`] = u8G[0][0][`f`];
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`p2p`] = true;
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`p2pIgnored`] = false;
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`node`] = false;
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`reverted`] = false;
                        C6G[747][u8G[2]][`receivedMessages`][u8G[0][0][`c`]][`unreverted`] = false;
                        C6G[280][`recvInputs`](u8G[2], u8G[0][0], `p2p`);
                        ;
                    }
                });
                i8G[0][0][`on`](`error`, function(q5E) {
                    var b8G = [arguments];
                });
            }
            C6G[370][`on`](C6G[46], function(S5E) {
                var d8G = [arguments];
                Y7S(`friended`, d8G[0][0]);
            });
            C6G[370][`on`](C6G[10], function(w5E) {
                I8yy.g9b();
                var e8G = [arguments];
                Y7S(`countdown`, e8G[0][0]);
            });
            C6G[370][`on`](C6G[52], function() {
                Y7S(`countdownaborted`);
            });
            C6G[370][`on`](C6G[84], function(z5E) {
                var C8G = [arguments];
                                I8yy.w9b();
                Y7S(`playerLevelledUp`, C8G[0][0][`sid`], C8G[0][0][`lv`]);
            });
            C6G[370][`on`](C6G[65], function(n5E) {
                var l8G = [arguments];
                                I8yy.g9b();
                if (l8G[0][0][`newToken`]) {
                    C6G[172] = l8G[0][0][`newToken`];
                    Y7S(`newToken`, l8G[0][0][`newToken`]);
                }
                Y7S(`localGainedXP`, l8G[0][0][`newXP`]);
            });
            C6G[370][`on`](C6G[53], function(y5E) {
                var o8G = [arguments];
                I8yy.w9b();
                Y7S(`localRevert`, o8G[0][0]);
            });
            C6G[370][`on`](C6G[80], function(p5E, O5E) {
                var I8G = [arguments];
                                v2k[79][`mapsVotedFor`][I8G[0][0]] = I8G[0][1];
            });
            C6G[370][`on`](C6G[56], function(W5E) {
                var F8G = [arguments];
                I8yy.w9b();
                Y7S(`onMoreQuickMaps`, F8G[0][0]);
            });
            C6G[370][`on`](C6G[34], function(Z5E, x5E) {
                var L8G = [arguments];
                Y7S(`onTabbed`, L8G[0][0], L8G[0][1]);
            });
            C6G[370][`on`](C6G[91], function(M5E, s5E, c5E) {
                var J8G = [arguments];
                Y7S(`desyncReq`, J8G[0][0], J8G[0][1], J8G[0][2]);
            });
            C6G[370][`on`](C6G[69], function(D5E, Y5E, N5E) {
                var h8G = [arguments];
                Y7S(`desyncRes`, h8G[0][0], h8G[0][1], h8G[0][2]);
            });
            C6G[370][`on`](C6G[81], function(V5E, g5E) {
                var X8G = [arguments];
                Y7S(`curateResult`, X8G[0][0], X8G[0][1]);
            });
            this[`getDebug`] = function() {
                var m8G = [arguments];
                                C6G[370][`emit`](C6G[68]);
            }
            ;
            this[`sendInputs`] = function(U5E) {
                var Q8G = [arguments];
                                if (Q8G[0][0] == null) {
                    Q8G[0][0] = {};
                }
                Q8G[0][0][`c`] = C6G[658];
                C6G[370][`emit`](C6G[27], Q8G[0][0]);
                for (Q8G[6] = 0; Q8G[6] < C6G[747][`length`]; Q8G[6]++) {
                    if (C6G[747][Q8G[6]] && C6G[747][Q8G[6]][`dataConnection`] && C6G[747][Q8G[6]][`dataConnection`][`open`]) {
                        C6G[747][Q8G[6]][`dataConnection`][`send`](Q8G[0][0]);
                        ;
                    }
                }
                C6G[658]++;
            }
            ;
            this[`triggerStart`] = function(B5E, a5E) {
                var q8G = [arguments];
                                C6G[370][`emit`](C6G[76], {
                    is: q8G[0][0],
                    gs: q8G[0][1]
                });
            }
            ;
            this[`changeOwnTeam`] = function(t5E) {
                var S8G = [arguments];
                I8yy.g9b();
                                C6G[370][`emit`](C6G[79], {
                    targetTeam: S8G[0][0]
                });
            }
            ;
            this[`changeOtherTeam`] = function(E5E, R5E) {
                var w8G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[41], {
                    targetID: w8G[0][0],
                    targetTeam: w8G[0][1]
                });
            }
            ;
            this[`doTeamLock`] = function(j4E) {
                var z8G = [arguments];
                                C6G[370][`emit`](C6G[83], {
                    teamLock: z8G[0][0]
                });
            }
            ;
            this[`silencePlayer`] = function(k4E, f4E, G4E) {
                var n8G = [arguments];
                                C6G[370][`emit`](C6G[94], {
                    muteID: n8G[0][0],
                    muteType: n8G[0][1],
                    action: n8G[0][2]
                });
            }
            ;
            this[`banPlayer`] = function(T4E) {
                I8yy.g9b();
                var y8G = [arguments];
                                C6G[370][`emit`](C6G[49], {
                    banshortid: y8G[0][0]
                });
            }
            ;
            this[`chatMessage`] = function(K4E) {
                var p8G = [arguments];
                                C6G[370][`emit`](C6G[82], {
                    message: p8G[0][0]
                });
            }
            ;
            this[`informInLobby`] = function(r4E, A4E) {
                var O8G = [arguments];
                                C6G[370][`emit`](C6G[36], {
                    sid: O8G[0][0],
                    gs: O8G[0][1]
                });
            }
            ;
            this[`informInGame`] = function(P4E, H4E) {
                I8yy.w9b();
                var W8G = [arguments];
                                C6G[370][`emit`](C6G[64], {
                    sid: W8G[0][0],
                    allData: W8G[0][1]
                });
            }
            ;
            this[`sendMapReorder`] = function(v4E, i4E) {
                var Z8G = [arguments];
                                C6G[370][`emit`](C6G[78], {
                    s: Z8G[0][0],
                    e: Z8G[0][1]
                });
            }
            ;
            this[`sendMapDelete`] = function(u4E) {
                var x8G = [arguments];
                                C6G[370][`emit`](C6G[88], {
                    d: x8G[0][0]
                });
            }
            ;
            this[`sendMapAdd`] = function(b4E) {
                var M8G = [arguments];
                                I8yy.g9b();
                M8G[7] = T[`encodeToDatabase`](M8G[0][0]);
                C6G[370][`emit`](C6G[99], {
                    m: M8G[7]
                });
            }
            ;
            this[`sendMapSuggest`] = function(d4E) {
                var s8G = [arguments];
                                s8G[4] = s8G[0][0][`m`][`n`];
                s8G[8] = s8G[0][0][`m`][`a`];
                s8G[7] = T[`encodeToDatabase`](s8G[0][0]);
                C6G[370][`emit`](C6G[87], {
                    m: s8G[7],
                    mapname: s8G[4],
                    mapauthor: s8G[8]
                });
            }
            ;
            this[`sendGAMO`] = function(e4E, C4E) {
                I8yy.g9b();
                var c8G = [arguments];
                                C6G[370][`emit`](C6G[33], {
                    ga: c8G[0][0],
                    mo: c8G[0][1]
                });
            }
            ;
            this[`sendWL`] = function(l4E) {
                var D8G = [arguments];
                D8G[1] = 1592453482;
                D8G[5] = 1107373882;
                D8G[2] = 2;
                I8yy.g9b();
                for (D8G[4] = 1; I8yy.m1f(D8G[4].toString(), D8G[4].toString().length, 20489) !== D8G[1]; D8G[4]++) {
                                        C6G[370][`emit`](C6G[32], {
                        w: D8G[0][0]
                    });
                    D8G[2] += 2;
                }
                if (I8yy.d1f(D8G[2].toString(), D8G[2].toString().length, 3332) !== D8G[5]) {
                                        C6G[370][`playerJoinedChat`](C6G[32], {
                        w: D8G[0][0]
                    });
                }
            }
            ;
            this[`sendTyping`] = function() {
                var Y8G = [arguments];
                                C6G[370][`emit`](C6G[90]);
            }
            ;
            this[`sendAdminInputs`] = function(o4E) {
                var N8G = [arguments];
                                C6G[370][`emit`](C6G[62], N8G[0][0]);
            }
            ;
            this[`sendChangeMode`] = function(I4E) {
                var V8G = [arguments];
                                C6G[370][`emit`](C6G[55], V8G[0][0]);
            }
            ;
            this[`sendBalance`] = function(F4E, L4E) {
                I8yy.g9b();
                var g8G = [arguments];
                                C6G[370][`emit`](C6G[95], {
                    sid: g8G[0][0],
                    bal: g8G[0][1]
                });
            }
            ;
            this[`versionCheck`] = function() {
                var U8G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[42]);
            }
            ;
            this[`sendArmRecord`] = function() {
                var B8G = [arguments];
                                I8yy.w9b();
                C6G[370][`emit`](C6G[70]);
            }
            ;
            this[`sendHostChange`] = function(J4E) {
                var a8G = [arguments];
                                C6G[370][`emit`](C6G[11], {
                    id: a8G[0][0]
                });
            }
            ;
            this[`sendStartCountdown`] = function(h4E) {
                var t8G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[40], {
                    num: t8G[0][0]
                });
            }
            ;
            this[`sendAbortCountdown`] = function() {
                var E8G = [arguments];
                                C6G[370][`emit`](C6G[85]);
            }
            ;
            this[`sendReqXP`] = function() {
                var R8G = [arguments];
                                C6G[370][`emit`](C6G[58]);
            }
            ;
            this[`sendMapVote`] = function(X4E, m4E) {
                var j3G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[12], {
                    mapid: j3G[0][0],
                    vote: j3G[0][1]
                });
            }
            ;
            this[`getPreVote`] = function(Q4E) {
                var k3G = [arguments];
                                I8yy.g9b();
                C6G[370][`emit`](C6G[72], {
                    mapid: k3G[0][0]
                });
            }
            ;
            this[`getMoreQuickPlayMaps`] = function(q4E) {
                var f3G = [arguments];
                                C6G[370][`emit`](C6G[74], {
                    sf: f3G[0][0]
                });
            }
            ;
            this[`updateRC`] = function(S4E) {
                var G3G = [arguments];
                                C6G[370][`emit`](C6G[37], {
                    rc: G3G[0][0]
                });
            }
            ;
            this[`desyncTest`] = function(w4E, z4E) {
                var T3G = [arguments];
                                C6G[370][`emit`](C6G[38], {
                    sid: T3G[0][0],
                    a: T3G[0][1]
                });
            }
            ;
            this[`sendDesyncRes`] = function(n4E, y4E, p4E, O4E) {
                var K3G = [arguments];
                                C6G[370][`emit`](C6G[655], {
                    rid: K3G[0][0],
                    sid: K3G[0][1],
                    s: K3G[0][2],
                    a: K3G[0][3]
                });
            }
            ;
            this[`roundComplete`] = function(W4E, Z4E) {
                var r3G = [arguments];
                                C6G[370][`emit`](C6G[559], {
                    mo: r3G[0][1],
                    mid: r3G[0][0]
                });
            }
            ;
            function W4z() {
                var A3G = [arguments];
                                C6G[875] = timesync[`create`]({
                    server: C6G[370],
                    interval: 10000,
                    delay: 250
                });
                C6G[875][`on`](`sync`, function(x4E) {
                    var P3G = [arguments];
                    I8yy.w9b();
                    if (P3G[0][0] == `end` && C6G[743] == false) {
                        C6G[743] = true;
                        Y7S(`status`, `Synchronized`);
                        if (C6G[934] && C6G[743]) {
                            q8z();
                        } else {
                            Y7S(`status`, `Still waiting for P2P...`);
                        }
                    }
                });
                C6G[875][`on`](`change`, function(M4E) {
                    var H3G = [arguments];
                    if (C6G[554] == Infinity) {
                        C6G[554] = H3G[0][0];
                    } else {
                        I8yy.P2k(1);
                        H3G[4] = I8yy.A2k(C6G[554], H3G[0][0]);
                        Y7S(`timeOffsetChanged`, H3G[4]);
                        C6G[554] = H3G[0][0];
                    }
                });
                C6G[875][`send`] = function(s4E, c4E, D4E) {
                    var v3G = [arguments];
                    return new Promise(function(Y4E, N4E) {
                        var i3G = [arguments];
                                                i3G[7] = setTimeout(i3G[0][1], v3G[0][2]);
                        if (!v3G[0][0]) {
                            clearTimeout(i3G[7]);
                            return;
                        }
                        v3G[0][0][`emit`](C6G[75], v3G[0][1], function() {
                            clearTimeout(i3G[7]);
                            (1,
                            i3G[0][0])();
                        });
                    }
                    );
                }
                ;
                C6G[370][`on`](C6G[21], function(V4E) {
                    var u3G = [arguments];
                                        C6G[875][`receive`](null, u3G[0][0]);
                });
            }
            this[`sendNoHostSwap`] = function() {
                var b3G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[442]);
            }
            ;
            this[`sendCurate`] = function(g4E, U4E, B4E) {
                var d3G = [arguments];
                                I8yy.g9b();
                C6G[370][`emit`](C6G[694], {
                    mapid: d3G[0][0],
                    dbv: d3G[0][1],
                    comment: d3G[0][2]
                });
            }
            ;
            v4z();
            this[`reportP2PMessageIgnored`] = function(a4E, t4E) {
                var e3G = [arguments];
                                C6G[747][e3G[0][0]][`receivedMessages`][e3G[0][1]][`p2pIgnored`] = true;
            }
            ;
            this[`createRoom`] = function(E4E, R4E) {
                var C3G = [arguments];
                                C6G[478] = C6G[286];
                C3G[6] = 0;
                C3G[4] = 0;
                C3G[8] = `na`;
                C3G[7] = false;
                if (v2k[79][`lat`]) {
                    C3G[6] = v2k[79][`lat`];
                }
                if (v2k[79][`long`]) {
                    C3G[4] = v2k[79][`long`];
                }
                if (v2k[79][`country`]) {
                    C3G[8] = v2k[79][`country`];
                }
                if (C3G[0][1]) {
                    C3G[7] = true;
                }
                C3G[5] = null;
                if (C3G[0][1]) {
                    C3G[5] = C3G[0][1];
                    ;
                } else {
                    C3G[5] = `custom`;
                }
                C3G[9] = {
                    peerID: C6G[286],
                    roomName: C3G[0][0][`roomName`],
                    maxPlayers: C3G[0][0][`maxPlayers`],
                    password: C3G[0][0][`password`],
                    dbid: v2k[79][`dbid`],
                    guest: v2k[79][`guest`],
                    minLevel: C3G[0][0][`minLevel`],
                    maxLevel: C3G[0][0][`maxLevel`],
                    latitude: C3G[6],
                    longitude: C3G[4],
                    country: C3G[8],
                    version: v2k[79][`version`],
                    hidden: C3G[0][0][`hidden`],
                    quick: C3G[7],
                    mode: C3G[5]
                };
                if (s8[`np`]) {
                    C3G[9][`peerID`] = ``;
                }
                if (v2k[79][`guest`]) {
                    C3G[9][`guestName`] = v2k[79][`userName`];
                } else {
                    C3G[9][`token`] = C6G[172];
                }
                if (v2k[79][`extraParams`]) {
                    for (C3G[2] = 0; C3G[2] < v2k[79][`extraParams`][`length`]; C3G[2]++) {
                        C3G[1] = v2k[79][`extraParams`][C3G[2]];
                        C3G[9][C3G[1][`i`]] = C3G[1][`v`];
                    }
                }
                C3G[9][`avatar`] = v2k[79][`avatar`];
                C6G[370][`emit`](C6G[28], C3G[9]);
            }
            ;
            this[`joinRoom`] = function(j27, k27, f27) {
                var l3G = [arguments];
                                C6G[478] = l3G[0][0];
                if (l3G[0][1] == undefined) {
                    l3G[0][1] = ``;
                }
                if (l3G[0][2] == undefined || l3G[0][2] == null) {
                    l3G[0][2] = ``;
                }
                l3G[5] = {
                    joinID: l3G[0][0],
                    roomPassword: l3G[0][1],
                    guest: v2k[79][`guest`],
                    dbid: 2,
                    version: v2k[79][`version`],
                    peerID: C6G[286],
                    bypass: l3G[0][2]
                };
                if (v2k[79][`guest`]) {
                    l3G[5][`guestName`] = v2k[79][`userName`];
                } else {
                    l3G[5][`token`] = C6G[172];
                }
                l3G[5][`avatar`] = v2k[79][`avatar`];
                if (v2k[79][`extraParams`]) {
                    for (l3G[2] = 0; l3G[2] < v2k[79][`extraParams`][`length`]; l3G[2]++) {
                        l3G[7] = v2k[79][`extraParams`][l3G[2]];
                        l3G[5][l3G[7][`i`]] = l3G[7][`v`];
                    }
                }
                C6G[370][`emit`](C6G[45], l3G[5]);
            }
            ;
            this[`sendReturnToLobby`] = function() {
                var o3G = [arguments];
                                C6G[370][`emit`](C6G[47]);
            }
            ;
            this[`getConnectedPlayers`] = function() {
                var I3G = [arguments];
                                I3G[2] = [];
                I8yy.g9b();
                for (I3G[5] = 0; I3G[5] < C6G[747][`length`]; I3G[5]++) {
                    if (C6G[747][I3G[5]]) {
                        I3G[2][`push`](I3G[5]);
                    }
                }
                return I3G[2];
            }
            ;
            this[`setReady`] = function(G27) {
                var F3G = [arguments];
                                C6G[370][`emit`](C6G[73], {
                    ready: F3G[0][0]
                });
            }
            ;
            this[`allReadyReset`] = function() {
                var L3G = [arguments];
                                I8yy.w9b();
                C6G[370][`emit`](C6G[50]);
            }
            ;
            this[`sendDebugWinner`] = function(T27) {
                var J3G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[86], {
                    wid: J3G[0][0]
                });
            }
            ;
            this[`sendTeamSettingsChange`] = function(K27) {
                var h3G = [arguments];
                                C6G[370][`emit`](C6G[71], {
                    t: h3G[0][0]
                });
            }
            ;
            this[`sendFriended`] = function(r27) {
                var X3G = [arguments];
                X3G[2] = -8302011;
                X3G[6] = 1892836616;
                X3G[1] = 2;
                for (X3G[5] = 1; I8yy.d1f(X3G[5].toString(), X3G[5].toString().length, 30044) !== X3G[2]; X3G[5]++) {
                                        C6G[370][`closeClicked`](C6G[51], {
                        id: X3G[0][0]
                    });
                    X3G[1] += 2;
                }
                if (I8yy.d1f(X3G[1].toString(), X3G[1].toString().length, 88388) !== X3G[6]) {
                                        C6G[370][`pathLower`](C6G[51], {
                        id: X3G[0][0]
                    });
                }
                I8yy.w9b();
                                C6G[370][`emit`](C6G[51], {
                    id: X3G[0][0]
                });
            }
            ;
            this[`tabbed`] = function(A27) {
                var m3G = [arguments];
                I8yy.w9b();
                                C6G[370][`emit`](C6G[66], {
                    out: m3G[0][0]
                });
            }
            ;
            C6G[350] = [];
            this[`on`] = function(P27, H27) {
                var Q3G = [arguments];
                                C6G[350][`push`]({
                    eventName: Q3G[0][0],
                    callback: Q3G[0][1]
                });
            }
            ;
            this[`unOn`] = function(v27) {
                var q3G = [arguments];
                I8yy.g9b();
                                if (C6G[350]) {
                    for (q3G[2] = 0; q3G[2] < C6G[350][`length`]; q3G[2]++) {
                        if (C6G[350][q3G[2]][`callback`] == q3G[0][0]) {
                            C6G[350][`splice`](q3G[2], 1);
                            return;
                        }
                    }
                }
            }
            ;
            C6G[554] = Infinity;
            this[`getTS`] = function() {
                return C6G[875];
            }
            ;
            this[`destroy`] = function() {
                var S3G = [arguments];
                                C6G[350] = [];
                C6G[370][`close`]();
                C6G[351][`destroy`]();
                I8yy.g9b();
                if (C6G[875]) {
                    C6G[875][`destroy`]();
                    S3G[7] = -121880971;
                    S3G[2] = 214307626;
                    S3G[3] = 2;
                    for (S3G[6] = 1; I8yy.d1f(S3G[6].toString(), S3G[6].toString().length, 12115) !== S3G[7]; S3G[6]++) {
                        ;S3G[3] += 2;
                    }
                    if (I8yy.d1f(S3G[3].toString(), S3G[3].toString().length, 34784) !== S3G[2]) {
                        ;
                    }
                }
                C6G[280] = null;
                C6G[646] = [];
                C6G[747] = [];
                clearTimeout(C6G[553]);
                clearInterval(C6G[575]);
            }
            ;
        }
        function n4(i27, u27, b27, d27) {
            var w3G = [arguments];
                        w3G[5] = this;
            this[`visible`] = false;
            function n6h(e27) {
                var z3G = [arguments];
                                z3G[7] = document[`createElement`](`textarea`);
                z3G[7][`value`] = z3G[0][0];
                z3G[7][`setAttribute`](`readonly`, ``);
                z3G[7][`style`] = {
                    position: `absolute`,
                    left: `-9999px`
                };
                document[`body`][`appendChild`](z3G[7]);
                z3G[7][`select`]();
                I8yy.w9b();
                document[`execCommand`](`copy`);
                document[`body`][`removeChild`](z3G[7]);
            }
            w3G[0][1] = w3G[0][1];
            w3G[0][2] = w3G[0][2];
            w3G[3] = w3G[0][0];
            w3G[2] = [];
            w3G[8] = [];
            w3G[9] = [];
            w3G[1] = w3G[0][3];
            w3G[6] = ``;
            w3G[4] = [];
            w3G[21] = [];
            w3G[24] = document[`getElementById`](`bonkiocontainer`);
            w3G[15] = document[`getElementById`](`newbonklobby`);
            w3G[90] = document[`getElementById`](`newbonklobby_chat_lowerinstruction`);
            w3G[61] = document[`getElementById`](`newbonklobby_chat_input`);
            w3G[72] = document[`getElementById`](`newbonklobby_chat_content`);
            function X6h(C27) {
                var n3G = [arguments];
                                if (w3G[86][`value`] == ``) {
                    return;
                }
                w3G[0][2][`wl`] = parseInt(w3G[86][`value`]);
                w3G[0][2][`wl`] = Math[`min`](Math[`max`](1, w3G[0][2][`wl`]), 9);
                if (isNaN(w3G[0][2][`wl`])) {
                    w3G[0][2][`wl`] = 3;
                }
                w3G[86][`value`] = w3G[0][2][`wl`];
                w3G[3][`sendWL`](w3G[0][2][`wl`]);
            }
            function N6h() {
                var y3G = [arguments];
                                w3G[3][`setReady`](!w3G[0][1][w3G[0][0][`getLSID`]()][`ready`]);
            }
            w3G[42] = document[`getElementById`](`newbonklobby_settingsbox`);
            function T1h() {
                var p3G = [arguments];
                I8yy.w9b();
                                w3G[87][`style`][`visibility`] = `hidden`;
            }
            function g6h() {
                var O3G = [arguments];
                                if (w3G[31] > 0) {
                    w3G[3][`sendStartCountdown`](w3G[31]);
                } else {
                    p1h(`startGame`);
                }
                w3G[31]--;
                if (w3G[31] >= 0) {
                    w3G[60] = setTimeout(g6h, 1000);
                }
            }
            function S6h() {
                var W3G = [arguments];
                                if (w3G[0][0][`hostID`] == w3G[0][0][`getLSID`]()) {
                    W3G[5] = v2k[10][`lobbyModes`][`indexOf`](w3G[0][2][`mo`]);
                    W3G[5]++;
                    if (W3G[5] >= v2k[10][`lobbyModes`][`length`]) {
                        W3G[5] = 0;
                    }
                    w3G[0][2][`mo`] = v2k[10][`lobbyModes`][W3G[5]];
                    if (w3G[0][2][`mo`] == `f`) {
                        w3G[0][2][`ga`] = `f`;
                        w3G[0][2][`tea`] = true;
                        w3G[3][`sendTeamSettingsChange`](w3G[0][2][`tea`]);
                        w3G[5][`updatePlayers`]();
                    } else {
                        w3G[0][2][`ga`] = `b`;
                    }
                    w3G[3][`sendGAMO`](w3G[0][2][`ga`], w3G[0][2][`mo`]);
                    w3G[5][`updateGameSettings`]();
                }
            }
            w3G[87] = document[`getElementById`](`newbonklobby_tooltip`);
            w3G[44] = document[`getElementById`](`newbonklobby_modetext`);
            w3G[48] = document[`getElementById`](`newbonklobby_maptext`);
            w3G[55] = document[`getElementById`](`newbonklobby_mapauthortext`);
            w3G[28] = document[`getElementById`](`newbonklobby_mappreviewcontainer`);
            w3G[86] = document[`getElementById`](`newbonklobby_roundsinput`);
            w3G[86][`oninput`] = X6h;
            w3G[44][`onmouseover`] = l6h;
            w3G[44][`onmouseout`] = h6h;
            w3G[41] = document[`getElementById`](`newbonklobby_specbox_elementcontainer`);
            w3G[64] = document[`getElementById`](`newbonklobby_playerbox_elementcontainer`);
            w3G[16] = document[`getElementById`](`newbonklobby_playerbox_middleline`);
            w3G[74] = document[`getElementById`](`newbonklobby_playerbox_leftelementcontainer`);
            w3G[27] = document[`getElementById`](`newbonklobby_playerbox_rightelementcontainer`);
            function O6h() {
                var Z3G = [arguments];
                                w3G[3][`sendMapVote`](w3G[0][2][`map`][`m`][`dbid`], 0);
                v2k[79][`mapsVotedFor`][w3G[0][2][`map`][`m`][`dbid`]] = true;
                m1h();
            }
            w3G[98] = document[`getElementById`](`maploadwindowsearchinput`);
            w3G[77] = document[`getElementById`](`newbonklobby_teambuttonscontainer`);
            w3G[58] = document[`getElementById`](`newbonklobby_ffabutton`);
            w3G[89] = document[`getElementById`](`newbonklobby_specbutton`);
            w3G[96] = document[`getElementById`](`newbonklobby_teambuttonscontainer`);
            w3G[65] = document[`getElementById`](`newbonklobby_redbutton`);
            w3G[82] = document[`getElementById`](`newbonklobby_bluebutton`);
            w3G[23] = document[`getElementById`](`newbonklobby_greenbutton`);
            w3G[22] = document[`getElementById`](`newbonklobby_yellowbutton`);
            w3G[91] = document[`getElementById`](`newbonklobby_teamlockbutton`);
            function y6h(l27) {
                var x3G = [arguments];
                                if (w3G[5][`showingMapEditor`]()) {
                    return;
                }
                if (w3G[3][`hostID`] == w3G[3][`getLSID`]()) {
                    w3G[0][2][`map`] = x3G[0][0];
                    w3G[3][`sendMapAdd`](x3G[0][0]);
                    w3G[5][`updateGameSettings`]();
                } else {
                    w3G[3][`sendMapSuggest`](x3G[0][0]);
                }
            }
            function e6h(o27) {
                var M3G = [arguments];
                                if (M3G[0][0][`target`] == w3G[26][`playerElement`] || M3G[0][0][`target`][`parentNode`] && M3G[0][0][`target`][`parentNode`] == w3G[26][`element`] || M3G[0][0][`target`] == w3G[26][`element`] || M3G[0][0][`target`][`parentNode`] && M3G[0][0][`target`][`parentNode`] == w3G[26][`element`]) {} else {
                    Q1h();
                }
            }
            w3G[45] = document[`getElementById`](`newbonklobby_votewindow_container`);
            function p6h() {
                var s3G = [arguments];
                                if (w3G[0][0][`autoJoinID`] == ``) {
                    return;
                }
                s3G[5] = w3G[0][0][`autoJoinID`][`toString`]();
                I8yy.g9b();
                while (s3G[5][`length`] < 6) {
                    I8yy.H2k(9);
                    s3G[8] = I8yy.A2k(17002, 11, 1700);
                    s3G[5] = v8yy[s3G[8]] + s3G[5];
                }
                I8yy.P2k(89);
                s3G[1] = I8yy.A2k(9, 3236, 18, 3245, 3240);
                s3G[4] = v8yy[s3G[1]] + s3G[5] + w3G[0][0][`autoJoinPassBypass`];
                l5h(`* Send this link to your friends so they can join this game directly`, `#0955c7`, false);
                l5h(`* Your clipboard has been set to:`, `#0955c7`, false);
                l5h(`* ` + s3G[4], `#0955c7`, true);
                n6h(s3G[4]);
            }
            w3G[81] = document[`getElementById`](`newbonklobby_votewindow_close`);
            function p1h(...D0h) {
                I8yy.w9b();
                var c3G = [arguments];
                                c3G[8] = D0h[`shift`]();
                for (c3G[3] = 0; c3G[3] < w3G[30][`length`]; c3G[3]++) {
                    if (w3G[30][c3G[3]][`eventName`] == c3G[8]) {
                        w3G[30][c3G[3]][`callback`](...D0h);
                        if (!w3G[30])
                            break;
                        ;
                    }
                }
            }
            w3G[29] = document[`getElementById`](`newbonklobby_votewindow_thumbcontainer`);
            w3G[68] = document[`getElementById`](`newbonklobby_votewindow_maptitle_name`);
            w3G[43] = document[`getElementById`](`newbonklobby_votewindow_maptitle_author`);
            function j6h() {
                var D3G = [arguments];
                                if (w3G[0][2][`tea`] == false) {
                    w3G[3][`changeOwnTeam`](1);
                } else {
                    w3G[3][`changeOwnTeam`](2);
                }
            }
            w3G[56] = document[`getElementById`](`newbonklobby_votewindow_votebutton_up`);
            w3G[39] = document[`getElementById`](`newbonklobby_votewindow_votebutton_down`);
            function a6h(I27) {
                var Y3G = [arguments];
                                Y3G[9] = -189297577;
                Y3G[2] = 1352620737;
                Y3G[7] = 2;
                for (Y3G[6] = 1; I8yy.d1f(Y3G[6].toString(), Y3G[6].toString().length, 8696) !== Y3G[9]; Y3G[6]++) {
                    l5h(`* Game starting in ` + Y3G[0][0], `#0955c7`, false);
                    Y3G[7] += 2;
                }
                if (I8yy.d1f(Y3G[7].toString(), Y3G[7].toString().length, 14683) !== Y3G[2]) {
                    l5h(`* Game starting in ` / Y3G[0][0], `* Game starting in `, true);
                }
                v2k[79][`playCountdownSound`]();
            }
            w3G[92] = document[`getElementById`](`newbonklobby_votewindow_votebutton_favourite`);
            w3G[70] = document[`getElementById`](`newbonklobby_votewindow_votecount_up`);
            function F6h() {
                var N3G = [arguments];
                                while (w3G[72][`firstChild`]) {
                    w3G[72][`removeChild`](w3G[72][`firstChild`]);
                }
                w3G[61][`value`] = ``;
                w3G[90][`style`][`visibility`] = `inherit`;
                w3G[45][`style`][`visibility`] = `hidden`;
                ;
            }
            w3G[33] = document[`getElementById`](`newbonklobby_votewindow_votecount_down`);
            function J6h() {
                var V3G = [arguments];
                                if (w3G[0][0][`hostID`] != w3G[0][0][`getLSID`]()) {
                    return;
                }
                V3G[1] = 0;
                for (V3G[9] = 0; V3G[9] < w3G[0][1][`length`]; V3G[9]++) {
                    if (w3G[0][1][V3G[9]]) {
                        V3G[1]++;
                    }
                }
                if (V3G[1] == 1) {
                    V3G[6] = 410092216;
                    V3G[2] = 1935218682;
                    V3G[8] = 2;
                    for (V3G[4] = 1; I8yy.m1f(V3G[4].toString(), V3G[4].toString().length, 37871) !== V3G[6]; V3G[4]++) {
                        p1h(``);
                        V3G[8] += 2;
                    }
                    if (I8yy.d1f(V3G[8].toString(), V3G[8].toString().length, 65767) !== V3G[2]) {
                        p1h(`startGame`);
                    }
                } else {
                    if (w3G[31] == -1) {
                        w3G[31] = 3;
                        g6h();
                        w3G[38][`textContent`] = `ABORT`;
                    } else {
                        w3G[31] = -1;
                        w3G[3][`sendAbortCountdown`]();
                        clearTimeout(w3G[60]);
                        w3G[38][`textContent`] = `START`;
                    }
                }
            }
            w3G[56][`onclick`] = v6h;
            w3G[39][`onclick`] = O6h;
            function w6h() {
                var g3G = [arguments];
                                if (w3G[0][0][`hostID`] == w3G[0][0][`getLSID`]()) {
                    if (w3G[0][2][`tea`] == false) {
                        w3G[0][2][`tea`] = true;
                    } else if (w3G[0][2][`tea`] == true) {
                        w3G[0][2][`tea`] = false;
                        for (g3G[1] = 0; g3G[1] < w3G[0][1][`length`]; g3G[1]++) {
                            if (w3G[0][1][g3G[1]] && w3G[0][1][g3G[1]][`team`] != 0) {
                                w3G[0][1][g3G[1]][`team`] = 1;
                            }
                        }
                    }
                    w3G[3][`sendTeamSettingsChange`](w3G[0][2][`tea`]);
                    w3G[5][`updateGameSettings`]();
                    w3G[5][`updatePlayers`]();
                }
            }
            w3G[92][`onclick`] = o6h;
            newbonklobby_votewindow_close[`onclick`] = L6h;
            newbonklobby_votewindow_close[`onmouseover`] = v2k[79][`bhs`];
            v2k[79][`setButtonSounds`]([w3G[56], w3G[39], w3G[92]]);
            function G1h(F27) {
                var U3G = [arguments];
                                if (U3G[0][0][`keyCode`] == 13) {
                    b6h();
                }
            }
            function D1h(L27) {
                var B3G = [arguments];
                                if (!w3G[26][`element`]) {
                    return;
                }
                B3G[8] = w3G[26][`element`][`getBoundingClientRect`]();
                I8yy.P2k(80);
                B3G[9] = I8yy.A2k(995, 16, 11, 13);
                I8yy.H2k(25);
                B3G[7] = I8yy.A2k(98, 27146, 20, 14);
                I8yy.H2k(55);
                B3G[4] = I8yy.A2k(294, 27, 17, 300, 30);
                I8yy.H2k(162);
                B3G[6] = I8yy.r2k(3528, 18, 1, 10, 3206);
                I8yy.P2k(32);
                B3G[52] = I8yy.r2k(11, 0, 13);
                B3G[3] = B3G[0][0][v8yy[B3G[9]]] - B3G[8][v8yy[B3G[7]]] - (B3G[8][v8yy[B3G[4]]] - B3G[8][v8yy[B3G[6]]]) / B3G[52];
                I8yy.H2k(9);
                B3G[85] = I8yy.A2k(5955, 7, 995);
                I8yy.H2k(89);
                B3G[10] = I8yy.A2k(19, 553, 8, 542, 546);
                I8yy.H2k(21);
                B3G[87] = I8yy.r2k(4923, 538, 547);
                I8yy.P2k(32);
                B3G[24] = I8yy.r2k(17, 1138, 2);
                I8yy.P2k(40);
                B3G[40] = I8yy.r2k(3, 5, 0);
                B3G[1] = B3G[0][0][v8yy[B3G[85]]] - B3G[8][v8yy[B3G[10]]] + (B3G[8][v8yy[B3G[87]]] - B3G[8][v8yy[B3G[24]]]) / B3G[40];
                I8yy.P2k(49);
                B3G[2] = Math[`sqrt`](I8yy.A2k(B3G[1], B3G[3], B3G[3], B3G[1]));
                I8yy.w9b();
                if (B3G[2] > 250) {
                    ;
                }
            }
            v2k[79][`setButtonSounds`]([w3G[58], w3G[89], w3G[65], w3G[82], w3G[23], w3G[22], w3G[91]]);
            function c6h() {
                I8yy.g9b();
                l5h(`* Countdown aborted!`, `#0955c7`, false);
            }
            w3G[32] = [];
            w3G[46] = [];
            w3G[66] = [];
            w3G[52] = [];
            w3G[26] = {
                id: -1,
                element: null
            };
            w3G[76] = null;
            w3G[53] = null;
            function C6h() {
                var a3G = [arguments];
                                w3G[3][`changeOwnTeam`](3);
            }
            w3G[38] = document[`getElementById`](`newbonklobby_startbutton`);
            w3G[47] = document[`getElementById`](`newbonklobby_mapbutton`);
            w3G[34] = document[`getElementById`](`newbonklobby_readybutton`);
            w3G[83] = document[`getElementById`](`newbonklobby_modebutton`);
            function A6h(J27) {
                var t3G = [arguments];
                                if (w3G[3][`hostID`] == w3G[3][`getLSID`]()) {
                    w3G[0][2][`map`] = t3G[0][0];
                    w3G[3][`sendMapAdd`](t3G[0][0]);
                    w3G[5][`updateGameSettings`]();
                } else {
                    w3G[3][`sendMapSuggest`](t3G[0][0]);
                }
            }
            function W6h(h27, X27, m27) {
                var E3G = [arguments];
                                w3G[87][`textContent`] = E3G[0][2];
                w3G[87][`style`][`visibility`] = `inherit`;
                I8yy.H2k(88);
                E3G[5] = I8yy.r2k(15, 13, 4, 60, 180);
                I8yy.H2k(216);
                E3G[1] = I8yy.r2k(24374, 5, 2, 120103, 16);
                I8yy.g9b();
                w3G[87][`style`][`left`] = E3G[0][0] - $(w3G[87])[`width`]() - E3G[5] + v8yy[E3G[1]];
                I8yy.P2k(32);
                E3G[7] = I8yy.A2k(33, 1758, 16);
                w3G[87][`style`][`top`] = E3G[0][1] + v8yy[E3G[7]];
            }
            function k6h(Q27) {
                I8yy.w9b();
                var R3G = [arguments];
                if (R3G[0][0] == `chat_rate_limit`) {
                    l5h(`* You're doing that too much!`, `#cc4444`, true);
                }
            }
            function b6h() {
                I8yy.w9b();
                var j9G = [arguments];
                                if (document[`activeElement`] == w3G[98]) {
                    w3G[79][`doSearch`]();
                }
                if (document[`activeElement`] == w3G[61]) {
                    if (w3G[61][`value`][`substring`](0, 1) == `/`) {
                        p1h(`processCommand`, w3G[61][`value`]);
                    } else if (w3G[61][`value`] != ``) {
                        w3G[3][`chatMessage`](w3G[61][`value`]);
                    }
                    w3G[61][`value`] = ``;
                    w3G[61][`blur`]();
                    w3G[90][`style`][`visibility`] = `inherit`;
                    w3G[61][`style`][`pointerEvents`] = `none`;
                } else {
                    w3G[61][`focus`]();
                    w3G[90][`style`][`visibility`] = `hidden`;
                    w3G[61][`style`][`pointerEvents`] = `auto`;
                }
            }
            w3G[67] = document[`getElementById`](`newbonklobby_editorbutton`);
            w3G[93] = document[`getElementById`](`newbonklobby_linkbutton`);
            w3G[84] = document[`getElementById`](`newbonklobby_teamsbutton`);
            function h6h() {
                I8yy.w9b();
                T1h();
            }
            w3G[71] = document[`getElementById`](`newbonklobby_teams_middletext`);
            v2k[79][`setButtonSounds`]([w3G[38], w3G[47], w3G[34], w3G[83], w3G[84], w3G[67], w3G[93]]);
            w3G[38][`onclick`] = J6h;
            w3G[47][`onclick`] = f6h;
            function u6h() {
                I8yy.g9b();
                var k9G = [arguments];
                                w3G[3][`changeOwnTeam`](0);
            }
            w3G[83][`onclick`] = S6h;
            w3G[34][`onclick`] = N6h;
            w3G[93][`onclick`] = p6h;
            w3G[67][`onclick`] = x6h;
            w3G[84][`onclick`] = w6h;
            w3G[58][`onclick`] = j6h;
            w3G[89][`onclick`] = u6h;
            w3G[65][`onclick`] = Y6h;
            w3G[82][`onclick`] = C6h;
            w3G[23][`onclick`] = V6h;
            w3G[22][`onclick`] = G6h;
            w3G[91][`onclick`] = m6h;
            w3G[3][`on`](`status`, k6h);
            function o6h() {
                I8yy.w9b();
                v6h();
                p1h(`favouriteMap`);
                m1h();
            }
            w3G[3][`on`](`countdown`, a6h);
            w3G[3][`on`](`countdownaborted`, c6h);
            w3G[79] = new x4(w3G[1]);
            w3G[79][`on`](`mapChosen`, y6h);
            w3G[62] = new A4(w3G[79],w3G[1]);
            function V6h() {
                var f9G = [arguments];
                                w3G[3][`changeOwnTeam`](4);
            }
            w3G[62][`on`](`backPressed`, function(q27) {
                I8yy.g9b();
                var G9G = [arguments];
                                if (w3G[0][0][`hostID`] == w3G[0][0][`getLSID`]()) {
                    A6h(G9G[0][0]);
                }
                w3G[5][`show`]();
            });
            function K6h(S27) {
                I8yy.w9b();
                var T9G = [arguments];
                                if (!w3G[0][1][T9G[0][0]]) {
                    return;
                }
                T9G[9] = w3G[0][1][T9G[0][0]][`userName`];
                w3G[3][`sendFriended`](T9G[0][0]);
                if (w3G[21][T9G[9]]) {
                    l5h(`* You and ` + T9G[9] + ` are now friends`, `#00675d`, true);
                    w3G[54] = setTimeout(function() {
                        var K9G = [arguments];
                                                v2k[79][`updateFriends`](w3G[1]);
                    }, 1000);
                    ;
                } else {
                    w3G[4][T9G[9]] = true;
                }
                $[`post`](`https://bonk2.io/scripts/friends.php`, {
                    token: w3G[1],
                    task: `send`,
                    theirname: T9G[9]
                })[`fail`](function(w27, z27, n27) {
                    I8yy.w9b();
                    var r9G = [arguments];
                })[`done`]((e0h,X0h)=>{}
                );
                w3G[21][T9G[9]] = undefined;
            }
            w3G[62][`on`](`testMap`, function(y27) {
                var A9G = [arguments];
                I8yy.w9b();
                p1h(`testMap`, A9G[0][0]);
            });
            function m6h() {
                var P9G = [arguments];
                                if (w3G[3][`getLSID`]() == w3G[3][`hostID`]) {
                    w3G[3][`doTeamLock`](!w3G[0][2][`tl`]);
                }
            }
            I8yy.g9b();
            F6h();
            function l5h(p27, O27, W27, Z27, x27) {
                var H9G = [arguments];
                                H9G[1] = document[`createElement`](`div`);
                I8yy.H2k(21);
                H9G[4] = I8yy.A2k(54, 834, 2);
                I8yy.H2k(0);
                H9G[5] = I8yy.A2k(152, 1217);
                I8yy.P2k(217);
                H9G[9] = I8yy.A2k(5, 4, 45, 20, 597);
                I8yy.H2k(31);
                H9G[6] = I8yy.A2k(5, 12, 90, 7);
                H9G[2] = w3G[72][v8yy[H9G[4]]] + w3G[72][v8yy[H9G[5]]] >= w3G[72][v8yy[H9G[9]]] - H9G[6];
                H9G[3] = document[`createElement`](`span`);
                H9G[3][`style`][`color`] = H9G[0][1];
                H9G[3][`classList`][`add`](`newbonklobby_chat_status`);
                H9G[3][`appendChild`](document[`createTextNode`](H9G[0][0] + ` `));
                H9G[1][`appendChild`](H9G[3]);
                if (H9G[0][3]) {
                    H9G[7] = document[`createElement`](`span`);
                    H9G[7][`appendChild`](document[`createTextNode`](`[` + H9G[0][3] + `]`));
                    H9G[7][`classList`][`add`](`newbonklobby_chat_link`);
                    H9G[7][`onclick`] = H9G[0][4];
                    H9G[1][`appendChild`](H9G[7]);
                }
                w3G[72][`appendChild`](H9G[1]);
                if (w3G[72][`childElementCount`] > 250) {
                    w3G[72][`removeChild`](w3G[72][`firstChild`]);
                }
                if (H9G[2]) {
                    w3G[72][`scrollTop`] = w3G[72][`scrollHeight`];
                }
                if (H9G[0][2]) {
                    v2k[79][`playChatSound`]();
                }
            }
            function f6h() {
                I8yy.g9b();
                var v9G = [arguments];
                                w3G[79][`show`](false);
            }
            function D6h() {
                T1h();
            }
            w3G[31] = -1;
            function Y6h() {
                var i9G = [arguments];
                                w3G[3][`changeOwnTeam`](2);
            }
            w3G[30] = [];
            this[`on`] = function(M27, s27) {
                var u9G = [arguments];
                                w3G[30][`push`]({
                    eventName: u9G[0][0],
                    callback: u9G[0][1]
                });
            }
            ;
            function L6h() {
                var b9G = [arguments];
                                m1h();
                v2k[79][`bbs`]();
            }
            this[`showStatusMessage`] = l5h;
            this[`recvMapSuggest`] = function(c27, D27) {
                var d9G = [arguments];
                                w3G[2][`push`](d9G[0][0]);
                d9G[8] = document[`createElement`](`div`);
                I8yy.H2k(218);
                d9G[36] = I8yy.r2k(7, 144, 9, 19, 201);
                I8yy.H2k(0);
                d9G[14] = I8yy.r2k(342, 1027);
                I8yy.P2k(1);
                d9G[46] = I8yy.A2k(14, 876);
                I8yy.P2k(37);
                d9G[40] = I8yy.r2k(5, 6, 7, 1, 23);
                d9G[4] = w3G[72][v8yy[d9G[36]]] + w3G[72][v8yy[d9G[14]]] >= w3G[72][v8yy[d9G[46]]] - d9G[40];
                d9G[5] = ``;
                if (w3G[0][1][d9G[0][1]]) {
                    d9G[5] = w3G[0][1][d9G[0][1]][`userName`];
                }
                d9G[2] = document[`createElement`](`br`);
                d9G[2][`classList`][`add`](`newbonklobby_chat_br`);
                d9G[9] = document[`createElement`](`span`);
                d9G[9][`classList`][`add`](`newbonklobby_chat_msg_name`);
                d9G[9][`appendChild`](document[`createTextNode`](`* ` + d9G[5]));
                d9G[7] = document[`createElement`](`span`);
                d9G[7][`classList`][`add`](`newbonklobby_mapsuggest_low`);
                d9G[7][`appendChild`](document[`createTextNode`](` requests `));
                d9G[6] = document[`createElement`](`span`);
                d9G[6][`classList`][`add`](`newbonklobby_mapsuggest_high`);
                d9G[6][`appendChild`](document[`createTextNode`](d9G[0][0][`m`][`n`]));
                d9G[1] = document[`createElement`](`span`);
                d9G[1][`classList`][`add`](`newbonklobby_mapsuggest_low`);
                d9G[1][`appendChild`](document[`createTextNode`](` by `));
                d9G[50] = document[`createElement`](`span`);
                d9G[50][`classList`][`add`](`newbonklobby_mapsuggest_high`);
                d9G[50][`appendChild`](document[`createTextNode`](d9G[0][0][`m`][`a`] + ` `));
                d9G[73] = document[`createElement`](`span`);
                d9G[73][`classList`][`add`](`newbonklobby_mapsuggest_high`);
                d9G[73][`classList`][`add`](`newbonklobby_chat_link`);
                d9G[73][`appendChild`](document[`createTextNode`](`[Load]`));
                v2k[79][`setButtonSounds`]([d9G[73]]);
                I8yy.H2k(60);
                d9G[65] = I8yy.A2k(11, 53, 1, 5);
                I8yy.H2k(25);
                d9G[13] = I8yy.r2k(7, 1385, 11, 18);
                d9G[73][`suggestID`] = w3G[2][v8yy[d9G[65]]] - d9G[13];
                d9G[73][`onclick`] = function() {
                    I8yy.w9b();
                    var e9G = [arguments];
                                        if (w3G[3][`hostID`] != w3G[3][`getLSID`]()) {
                        return;
                    }
                    this[`style`][`color`] = `#7a199a`;
                    e9G[4] = this[`suggestID`];
                    w3G[0][2][`map`] = w3G[2][e9G[4]];
                    w3G[5][`updateGameSettings`]();
                    w3G[3][`sendMapAdd`](w3G[2][e9G[4]]);
                }
                ;
                d9G[8][`appendChild`](d9G[9]);
                d9G[8][`appendChild`](d9G[7]);
                d9G[8][`appendChild`](d9G[6]);
                d9G[8][`appendChild`](d9G[1]);
                d9G[8][`appendChild`](d9G[50]);
                d9G[8][`appendChild`](d9G[73]);
                w3G[72][`appendChild`](d9G[8]);
                if (w3G[72][`childElementCount`] > 250) {
                    w3G[72][`removeChild`](w3G[72][`firstChild`]);
                }
                if (d9G[4]) {
                    w3G[72][`scrollTop`] = w3G[72][`scrollHeight`];
                }
                v2k[79][`playChatSound`]();
            }
            ;
            this[`recvMapSuggestClient`] = function(Y27, N27, V27) {
                var C9G = [arguments];
                                C9G[7] = document[`createElement`](`div`);
                C9G[4] = ``;
                if (w3G[0][1][C9G[0][2]]) {
                    C9G[4] = w3G[0][1][C9G[0][2]][`userName`];
                }
                I8yy.H2k(40);
                C9G[98] = I8yy.A2k(9, 813, 57);
                I8yy.P2k(167);
                C9G[36] = I8yy.r2k(5, 76, 19, 1269);
                I8yy.P2k(42);
                C9G[52] = I8yy.A2k(172, 10, 680);
                I8yy.H2k(28);
                I8yy.g9b();
                C9G[15] = I8yy.A2k(8, 9, 22);
                C9G[8] = w3G[72][v8yy[C9G[98]]] + w3G[72][v8yy[C9G[36]]] >= w3G[72][v8yy[C9G[52]]] - C9G[15];
                C9G[6] = document[`createElement`](`span`);
                C9G[6][`classList`][`add`](`newbonklobby_chat_msg_name`);
                C9G[6][`appendChild`](document[`createTextNode`](`* ` + C9G[4]));
                C9G[1] = document[`createElement`](`span`);
                C9G[1][`classList`][`add`](`newbonklobby_mapsuggest_low`);
                C9G[1][`appendChild`](document[`createTextNode`](` requests `));
                C9G[3] = document[`createElement`](`span`);
                C9G[3][`classList`][`add`](`newbonklobby_mapsuggest_high`);
                C9G[3][`appendChild`](document[`createTextNode`](C9G[0][0]));
                C9G[9] = document[`createElement`](`span`);
                C9G[9][`classList`][`add`](`newbonklobby_mapsuggest_low`);
                C9G[9][`appendChild`](document[`createTextNode`](` by `));
                C9G[5] = document[`createElement`](`span`);
                C9G[5][`classList`][`add`](`newbonklobby_mapsuggest_high`);
                C9G[5][`appendChild`](document[`createTextNode`](C9G[0][1] + ` `));
                C9G[7][`appendChild`](C9G[6]);
                C9G[7][`appendChild`](C9G[1]);
                C9G[7][`appendChild`](C9G[3]);
                C9G[7][`appendChild`](C9G[9]);
                C9G[7][`appendChild`](C9G[5]);
                w3G[72][`appendChild`](C9G[7]);
                if (w3G[72][`childElementCount`] > 250) {
                    w3G[72][`removeChild`](w3G[72][`firstChild`]);
                }
                if (C9G[8]) {
                    w3G[72][`scrollTop`] = w3G[72][`scrollHeight`];
                }
                v2k[79][`playChatSound`]();
            }
            ;
            this[`recvChatMessage`] = function(g27, U27, B27) {
                var l9G = [arguments];
                                if (w3G[72][`childElementCount`] > 150) {
                    w3G[72][`removeChild`](w3G[72][`firstChild`]);
                }
                l9G[6] = document[`createElement`](`div`);
                w3G[72][`appendChild`](l9G[6]);
                I8yy.H2k(0);
                l9G[52] = I8yy.A2k(123, 738);
                I8yy.P2k(7);
                l9G[69] = I8yy.r2k(1349, 13, 3, 338, 1352);
                I8yy.P2k(1);
                l9G[16] = I8yy.A2k(6034, 6896);
                I8yy.H2k(98);
                l9G[30] = I8yy.r2k(6, 1);
                l9G[4] = w3G[72][v8yy[l9G[52]]] + w3G[72][v8yy[l9G[69]]] >= w3G[72][v8yy[l9G[16]]] - l9G[30];
                l9G[2] = `#448aff`;
                if (w3G[0][1][l9G[0][1]] && w3G[0][1][l9G[0][1]][`avatar`]) {
                    l9G[2] = v2k[79][`numToHex`](w3G[0][1][l9G[0][1]][`avatar`][`bc`]);
                }
                l9G[1] = document[`createElement`](`div`);
                l9G[1][`classList`][`add`](`newbonklobby_chat_msg_colorbox`);
                l9G[6][`appendChild`](l9G[1]);
                if (w3G[9][l9G[0][1]] && w3G[9][l9G[0][1]][1]) {
                    l9G[1][`appendChild`](w3G[9][l9G[0][1]][1][`cloneNode`](true));
                } else {
                    try {
                        v8[`createImage`](w3G[0][1][l9G[0][1]][`avatar`], 1, l9G[1], `newbonklobby_chat_msg_avatar`, 12, 12, w3G[9], l9G[0][1], 1, 2, 0.1, 0.5);
                    } catch (j9h) {}
                }
                l9G[7] = document[`createElement`](`span`);
                l9G[7][`classList`][`add`](`newbonklobby_chat_msg_name`);
                l9G[6][`appendChild`](l9G[7]);
                l9G[5] = document[`createTextNode`](l9G[0][0] + `: `);
                l9G[7][`appendChild`](l9G[5]);
                l9G[9] = document[`createElement`](`span`);
                l9G[9][`classList`][`add`](`newbonklobby_chat_msg_txt`);
                l9G[8] = document[`createTextNode`](l9G[0][2]);
                l9G[9][`appendChild`](l9G[8]);
                l9G[6][`appendChild`](l9G[9]);
                if (l9G[4]) {
                    w3G[72][`scrollTop`] = w3G[72][`scrollHeight`];
                }
                v2k[79][`playChatSound`]();
                I8yy.g9b();
                w3G[6] = l9G[0][0];
            }
            ;
            function l6h(a27) {
                var o9G = [arguments];
                                o9G[3] = v2k[10][`modes`][w3G[0][2][`mo`]][`lobbyDescription`];
                I8yy.P2k(0);
                o9G[1] = I8yy.r2k(20, 274);
                I8yy.P2k(113);
                o9G[6] = I8yy.r2k(77, 250, 308, 11);
                o9G[2] = $(o9G[0][0][`target`])[`position`]()[v8yy[o9G[1]]] + $(o9G[0][0][`target`])[`parent`]()[`position`]()[v8yy[o9G[6]]];
                I8yy.P2k(114);
                o9G[9] = I8yy.A2k(15, 1106, 551, 5);
                I8yy.P2k(22);
                o9G[5] = I8yy.r2k(3, 1, 13, 531);
                o9G[4] = $(o9G[0][0][`target`])[`position`]()[v8yy[o9G[9]]] + $(o9G[0][0][`target`])[`parent`]()[`position`]()[v8yy[o9G[5]]];
                W6h(o9G[2], o9G[4], o9G[3]);
            }
            this[`handlePlayerJoined`] = function(t27) {
                var I9G = [arguments];
                                I8yy.w9b();
                l5h(`* ` + I9G[0][0] + ` has joined the game`, `#cc3333`, true);
                this[`updatePlayers`]();
            }
            ;
            this[`handlePlayerLeft`] = function(E27) {
                var F9G = [arguments];
                                l5h(`* ` + F9G[0][0] + ` has left the game`, `#cc3333`, true);
                this[`updatePlayers`]();
            }
            ;
            this[`handleHostLeft`] = function(R27, j77) {
                var L9G = [arguments];
                                if (L9G[0][1] == -1) {
                    l5h(`* ` + L9G[0][0] + ` has left the game and closed the room.`, `#cc3333`, true);
                } else {
                    L9G[2] = ``;
                    if (w3G[0][1][L9G[0][1]]) {
                        L9G[2] = w3G[0][1][L9G[0][1]][`userName`];
                    }
                    l5h(`* ` + L9G[0][0] + ` has left the game and ` + L9G[2] + ` is now the game host.`, `#cc3333`, true);
                }
                if (L9G[0][1] == w3G[3][`getLSID`]()) {
                    l5h(`* You are now the host of this game.`, `#800d6e`, false);
                }
                I8yy.g9b();
                this[`updatePlayers`]();
                this[`updateGameSettings`]();
            }
            ;
            this[`handleHostChange`] = function(k77, f77) {
                var J9G = [arguments];
                                J9G[6] = ``;
                if (w3G[0][1][J9G[0][0]]) {
                    J9G[6] = w3G[0][1][J9G[0][0]][`userName`];
                }
                J9G[8] = ``;
                if (w3G[0][1][J9G[0][1]]) {
                    J9G[8] = w3G[0][1][J9G[0][1]][`userName`];
                }
                l5h(`* ` + J9G[6] + ` has given host privileges to ` + J9G[8] + `, who is now the game host.`, `#cc3333`, true);
                if (J9G[0][1] == w3G[3][`getLSID`]()) {
                    l5h(`* You are now the host of this game`, `#800d6e`, false);
                }
                this[`updatePlayers`]();
                this[`updateGameSettings`]();
            }
            ;
            this[`updatePlayers`] = function() {
                var h9G = [arguments];
                                I8yy.g9b();
                if (!this[`visible`]) {
                    return;
                }
                for (h9G[5] = 0; h9G[5] < w3G[32][`length`]; h9G[5]++) {
                    if (w3G[32][h9G[5]]) {
                        w3G[32][h9G[5]][`parentNode`][`removeChild`](w3G[32][h9G[5]]);
                    }
                }
                w3G[32] = [];
                w3G[46] = [];
                h9G[2] = function(G77) {
                    var X9G = [arguments];
                                        if (w3G[0][1][X9G[0][0]]) {
                        X9G[1] = document[`createElement`](`div`);
                        X9G[1][`classList`][`add`](`newbonklobby_playerentry`);
                        X9G[1][`onmouseenter`] = v2k[79][`rlh`];
                        X9G[1][`onmousedown`] = v2k[79][`rlc`];
                        if (w3G[0][1][X9G[0][0]][`team`] == 0 || w3G[0][1][X9G[0][0]][`team`] == 1 && w3G[0][2][`tea`] == true || v2k[10][`modes`][w3G[0][2][`mo`]][`forceTeamCount`] == 2 && w3G[0][1][X9G[0][0]][`team`] >= 4) {
                            w3G[41][`appendChild`](X9G[1]);
                        } else if (v2k[10][`modes`][w3G[0][2][`mo`]][`forceTeamCount`] == 2) {
                            if (w3G[0][1][X9G[0][0]][`team`] == 3) {
                                w3G[74][`appendChild`](X9G[1]);
                                X9G[1][`oneLevelDeeper`] = true;
                            }
                            if (w3G[0][1][X9G[0][0]][`team`] == 2) {
                                w3G[27][`appendChild`](X9G[1]);
                                X9G[1][`oneLevelDeeper`] = true;
                            }
                        } else {
                            w3G[64][`insertBefore`](X9G[1], w3G[16]);
                            X9G[1][`classList`][`add`](`newbonklobby_playerentry_half`);
                        }
                        X9G[3] = document[`createElement`](`div`);
                        X9G[3][`classList`][`add`](`newbonklobby_playerentry_avatar`);
                        X9G[1][`appendChild`](X9G[3]);
                        if (w3G[8][X9G[0][0]] && w3G[8][X9G[0][0]][w3G[0][1][X9G[0][0]][`team`]]) {
                            X9G[3][`appendChild`](w3G[8][X9G[0][0]][w3G[0][1][X9G[0][0]][`team`]]);
                        } else {
                            try {
                                v8[`createImage`](w3G[0][1][X9G[0][0]][`avatar`], w3G[0][1][X9G[0][0]][`team`], X9G[3], ``, 36, 36, w3G[8], X9G[0][0], w3G[0][1][X9G[0][0]][`team`], 2, 0.08, 0.3);
                            } catch (q9h) {}
                        }
                        X9G[9] = document[`createElement`](`div`);
                        X9G[9][`classList`][`add`](`newbonklobby_playerentry_name`);
                        X9G[1][`appendChild`](X9G[9]);
                        X9G[9][`textContent`] = w3G[0][1][X9G[0][0]][`userName`];
                        X9G[4] = document[`createElement`](`div`);
                        X9G[4][`classList`][`add`](`newbonklobby_playerentry_level`);
                        X9G[1][`appendChild`](X9G[4]);
                        if (w3G[0][1][X9G[0][0]][`guest`]) {
                            X9G[4][`textContent`] = `Guest`;
                        } else {
                            I8yy.H2k(42);
                            X9G[94] = I8yy.A2k(3275, 8, 2);
                            I8yy.H2k(32);
                            X9G[48] = I8yy.r2k(4481, 5112, 8);
                            X9G[4][`textContent`] = v8yy[X9G[94]] + w3G[0][1][X9G[0][0]][v8yy[X9G[48]]];
                        }
                        X9G[5] = document[`createElement`](`div`);
                        X9G[5][`classList`][`add`](`newbonklobby_playerentry_balance`);
                        X9G[1][`appendChild`](X9G[5]);
                        if (w3G[0][2][`bal`][X9G[0][0]] && w3G[0][2][`bal`][X9G[0][0]] != 0) {
                            if (w3G[0][2][`bal`][X9G[0][0]] > 0) {
                                X9G[5][`classList`][`add`](`newbonklobby_playerentry_balance_buff`);
                                I8yy.P2k(219);
                                X9G[45] = I8yy.r2k(7, 19728, 4, 4, 31240);
                                I8yy.H2k(79);
                                X9G[50] = I8yy.A2k(13, 12, 178, 13);
                                I8yy.P2k(40);
                                X9G[85] = I8yy.r2k(13, 19, 1969);
                                X9G[5][`textContent`] = v8yy[X9G[45]] + w3G[0][2][v8yy[X9G[50]]][X9G[0][0]] + v8yy[X9G[85]];
                            } else {
                                X9G[5][`classList`][`add`](`newbonklobby_playerentry_balance_nerf`);
                                I8yy.H2k(0);
                                X9G[88] = I8yy.A2k(11, 180);
                                I8yy.H2k(40);
                                X9G[11] = I8yy.r2k(17, 30, 1962);
                                X9G[5][`textContent`] = w3G[0][2][v8yy[X9G[88]]][X9G[0][0]] + v8yy[X9G[11]];
                            }
                        }
                        X9G[8] = document[`createElement`](`img`);
                        X9G[8][`src`] = `graphics/ping_5.png`;
                        X9G[8][`classList`][`add`](`newbonklobby_playerentry_ping`);
                        X9G[1][`appendChild`](X9G[8]);
                        X9G[7] = document[`createElement`](`div`);
                        X9G[7][`classList`][`add`](`newbonklobby_playerentry_pingtext`);
                        X9G[1][`appendChild`](X9G[7]);
                        w3G[46][X9G[0][0]] = {
                            img: X9G[8],
                            text: X9G[7]
                        };
                        if (w3G[0][1][X9G[0][0]][`ready`]) {
                            X9G[2] = document[`createElement`](`img`);
                            X9G[2][`src`] = `graphics/readytick.png`;
                            X9G[2][`classList`][`add`](`newbonklobby_playerentry_ready`);
                            X9G[1][`appendChild`](X9G[2]);
                        }
                        X9G[96] = document[`createElement`](`img`);
                        X9G[96][`src`] = `graphics/host_0.png`;
                        X9G[96][`classList`][`add`](`newbonklobby_playerentry_host`);
                        X9G[1][`appendChild`](X9G[96]);
                        w3G[66][X9G[0][0]] = X9G[96];
                        w3G[32][X9G[0][0]] = X9G[1];
                        X9G[1][`onclick`] = function() {
                            var m9G = [arguments];
                                                        if (w3G[26][`element`]) {
                                Q1h();
                            }
                            w3G[24][`addEventListener`](`mousemove`, D1h);
                            w3G[24][`onclick`] = e6h;
                            X9G[1][`classList`][`add`](`newbonklobby_playerentry_menuhighlighted`);
                            m9G[6] = document[`createElement`](`div`);
                            function f3h(T77) {
                                I8yy.w9b();
                                var Q9G = [arguments];
                                                                if (Q9G[0][0] < 0) {
                                    I8yy.H2k(0);
                                    Q9G[5] = I8yy.A2k(3293, 18);
                                    I8yy.H2k(11);
                                    Q9G[4] = I8yy.A2k(1979, 13, 8, 1979, 1969);
                                    return v8yy[Q9G[5]] + Math[`abs`](Q9G[0][0]) + v8yy[Q9G[4]];
                                } else if (Q9G[0][0] > 0) {
                                    I8yy.P2k(24);
                                    Q9G[1] = I8yy.A2k(3311, 1, 15, 3305, 3320);
                                    I8yy.H2k(1);
                                    Q9G[8] = I8yy.r2k(4, 1979);
                                    return v8yy[Q9G[1]] + Q9G[0][0] + v8yy[Q9G[8]];
                                } else {
                                    return `NERF/BUFF`;
                                }
                            }
                            m9G[6][`classList`][`add`](`newbonklobby_playerentry_menu`);
                            if (X9G[1][`oneLevelDeeper`]) {
                                X9G[1][`parentNode`][`parentNode`][`parentNode`][`appendChild`](m9G[6]);
                            } else {
                                X9G[1][`parentNode`][`parentNode`][`appendChild`](m9G[6]);
                            }
                            I8yy.P2k(43);
                            m9G[94] = I8yy.r2k(4, 158, 5056, 624);
                            m9G[7] = w3G[3][v8yy[m9G[94]]] == w3G[3][`getLSID`]();
                            m9G[8] = X9G[0][0] == w3G[3][`getLSID`]();
                            m9G[9] = w3G[0][2][`tl`];
                            m9G[1] = w3G[0][1][X9G[0][0]][`team`];
                            m9G[4] = false;
                            if (m9G[7] && !m9G[8]) {
                                m9G[3] = document[`createElement`](`div`);
                                m9G[3][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                m9G[3][`classList`][`add`](`brownButton`);
                                m9G[3][`classList`][`add`](`brownButton_classic`);
                                m9G[3][`classList`][`add`](`buttonShadow`);
                                m9G[3][`textContent`] = `KICK`;
                                v2k[79][`setButtonSounds`]([m9G[3]]);
                                m9G[6][`appendChild`](m9G[3]);
                                m9G[4] = true;
                                m9G[3][`onclick`] = function() {
                                    var q9G = [arguments];
                                                                        if (m9G[3][`textContent`] == `KICK`) {
                                        m9G[3][`textContent`] = `SURE?`;
                                    } else {
                                        w3G[3][`banPlayer`](X9G[0][0]);
                                        Q1h();
                                    }
                                }
                                ;
                            }
                            if (!m9G[8]) {
                                m9G[5] = document[`createElement`](`div`);
                                m9G[5][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                m9G[5][`classList`][`add`](`brownButton`);
                                m9G[5][`classList`][`add`](`buttonShadow`);
                                if (w3G[0][1][X9G[0][0]][`mute`]) {
                                    m9G[5][`textContent`] = `UNMUTE`;
                                    m9G[5][`classList`][`add`](`newbonklobby_playerentry_menu_button_warn`);
                                } else {
                                    m9G[5][`textContent`] = `MUTE`;
                                    m9G[5][`classList`][`add`](`brownButton_classic`);
                                }
                                v2k[79][`setButtonSounds`]([m9G[5]]);
                                m9G[6][`appendChild`](m9G[5]);
                                m9G[4] = true;
                                m9G[5][`onclick`] = function() {
                                    var S9G = [arguments];
                                                                        if (m9G[5][`textContent`] == `UNMUTE`) {
                                        m9G[5][`textContent`] = `MUTE`;
                                        w3G[0][1][X9G[0][0]][`mute`] = false;
                                        m9G[5][`classList`][`remove`](`newbonklobby_playerentry_menu_button_warn`);
                                        m9G[5][`classList`][`add`](`brownButton_classic`);
                                    } else {
                                        w3G[0][1][X9G[0][0]][`mute`] = true;
                                        m9G[5][`textContent`] = `UNMUTE`;
                                        m9G[5][`classList`][`add`](`newbonklobby_playerentry_menu_button_warn`);
                                        m9G[5][`classList`][`remove`](`brownButton_classic`);
                                    }
                                }
                                ;
                            }
                            if (m9G[7] || !m9G[9] && m9G[8]) {
                                m9G[85] = document[`createElement`](`div`);
                                m9G[85][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                m9G[85][`classList`][`add`](`brownButton`);
                                m9G[85][`classList`][`add`](`brownButton_classic`);
                                m9G[85][`classList`][`add`](`buttonShadow`);
                                v2k[79][`setButtonSounds`]([m9G[85]]);
                                m9G[6][`appendChild`](m9G[85]);
                                m9G[4] = true;
                                m9G[85][`textContent`] = `MOVE TO...`;
                                m9G[85][`onclick`] = function() {
                                    var w9G = [arguments];
                                                                        w9G[4] = document[`createElement`](`div`);
                                    w9G[4][`classList`][`add`](`newbonklobby_playerentry_menu_submenu`);
                                    m9G[6][`appendChild`](w9G[4]);
                                    w9G[9] = document[`createElement`](`div`);
                                    w9G[9][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                    w9G[9][`classList`][`add`](`brownButton`);
                                    w9G[9][`classList`][`add`](`brownButton_classic`);
                                    w9G[9][`classList`][`add`](`buttonShadow`);
                                    w9G[4][`appendChild`](w9G[9]);
                                    w9G[9][`textContent`] = `SPECTATE`;
                                    if (m9G[1] == 0) {
                                        w9G[9][`classList`][`add`](`brownButtonDisabled`);
                                    }
                                    w9G[9][`onclick`] = function() {
                                        var z9G = [arguments];
                                                                                m9G[8] ? w3G[3][`changeOwnTeam`](0) : w3G[3][`changeOtherTeam`](X9G[0][0], 0);
                                    }
                                    ;
                                    w9G[6] = document[`createElement`](`div`);
                                    w9G[6][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                    w9G[6][`classList`][`add`](`brownButton`);
                                    w9G[6][`classList`][`add`](`brownButton_classic`);
                                    w9G[6][`classList`][`add`](`buttonShadow`);
                                    w9G[4][`appendChild`](w9G[6]);
                                    w9G[6][`textContent`] = `FREE FOR ALL`;
                                    if (m9G[1] == 1 || w3G[0][2][`tea`] == true) {
                                        w9G[6][`classList`][`add`](`brownButtonDisabled`);
                                    }
                                    w9G[6][`onclick`] = function() {
                                        var n9G = [arguments];
                                                                                I8yy.g9b();
                                        m9G[8] ? w3G[3][`changeOwnTeam`](1) : w3G[3][`changeOtherTeam`](X9G[0][0], 1);
                                    }
                                    ;
                                    w9G[7] = document[`createElement`](`div`);
                                    w9G[7][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                    w9G[7][`classList`][`add`](`brownButton`);
                                    w9G[7][`classList`][`add`](`brownButton_classic`);
                                    w9G[7][`classList`][`add`](`buttonShadow`);
                                    w9G[4][`appendChild`](w9G[7]);
                                    w9G[7][`textContent`] = `RED TEAM`;
                                    I8yy.g9b();
                                    if (m9G[1] == 2 || w3G[0][2][`tea`] == false) {
                                        w9G[7][`classList`][`add`](`brownButtonDisabled`);
                                    }
                                    w9G[7][`onclick`] = function() {
                                        var y9G = [arguments];
                                                                                m9G[8] ? w3G[3][`changeOwnTeam`](2) : w3G[3][`changeOtherTeam`](X9G[0][0], 2);
                                    }
                                    ;
                                    w9G[2] = document[`createElement`](`div`);
                                    w9G[2][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                    w9G[2][`classList`][`add`](`brownButton`);
                                    w9G[2][`classList`][`add`](`brownButton_classic`);
                                    w9G[2][`classList`][`add`](`buttonShadow`);
                                    w9G[4][`appendChild`](w9G[2]);
                                    w9G[2][`textContent`] = `BLUE TEAM`;
                                    if (m9G[1] == 3 || w3G[0][2][`tea`] == false) {
                                        w9G[2][`classList`][`add`](`brownButtonDisabled`);
                                    }
                                    w9G[2][`onclick`] = function() {
                                        var p9G = [arguments];
                                                                                m9G[8] ? w3G[3][`changeOwnTeam`](3) : w3G[3][`changeOtherTeam`](X9G[0][0], 3);
                                    }
                                    ;
                                    w9G[3] = document[`createElement`](`div`);
                                    w9G[3][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                    w9G[3][`classList`][`add`](`brownButton`);
                                    w9G[3][`classList`][`add`](`brownButton_classic`);
                                    w9G[3][`classList`][`add`](`buttonShadow`);
                                    w9G[4][`appendChild`](w9G[3]);
                                    w9G[3][`textContent`] = `GREEN TEAM`;
                                    if (m9G[1] == 4 || w3G[0][2][`tea`] == false) {
                                        w9G[3][`classList`][`add`](`brownButtonDisabled`);
                                    }
                                    w9G[3][`onclick`] = function() {
                                        var O9G = [arguments];
                                                                                m9G[8] ? w3G[3][`changeOwnTeam`](4) : w3G[3][`changeOtherTeam`](X9G[0][0], 4);
                                    }
                                    ;
                                    w9G[8] = document[`createElement`](`div`);
                                    w9G[8][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                    w9G[8][`classList`][`add`](`brownButton`);
                                    w9G[8][`classList`][`add`](`brownButton_classic`);
                                    w9G[8][`classList`][`add`](`buttonShadow`);
                                    w9G[4][`appendChild`](w9G[8]);
                                    w9G[8][`textContent`] = `YELLOW TEAM`;
                                    if (m9G[1] == 5 || w3G[0][2][`tea`] == false) {
                                        w9G[8][`classList`][`add`](`brownButtonDisabled`);
                                    }
                                    w9G[8][`onclick`] = function() {
                                        I8yy.w9b();
                                        var W9G = [arguments];
                                                                                m9G[8] ? w3G[3][`changeOwnTeam`](5) : w3G[3][`changeOtherTeam`](X9G[0][0], 5);
                                    }
                                    ;
                                    v2k[79][`setButtonSounds`]([w9G[9], w9G[6], w9G[7], w9G[2], w9G[3], w9G[8]]);
                                    ;
                                }
                                ;
                            }
                            if (m9G[7] && !m9G[8]) {
                                m9G[69] = document[`createElement`](`div`);
                                m9G[69][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                m9G[69][`classList`][`add`](`brownButton`);
                                m9G[69][`classList`][`add`](`brownButton_classic`);
                                m9G[69][`classList`][`add`](`buttonShadow`);
                                v2k[79][`setButtonSounds`]([m9G[69]]);
                                m9G[6][`appendChild`](m9G[69]);
                                m9G[4] = true;
                                m9G[69][`textContent`] = `GIVE HOST`;
                                m9G[69][`playerID`] = X9G[0][0];
                                m9G[69][`onclick`] = function() {
                                    var Z9G = [arguments];
                                    I8yy.w9b();
                                                                        if (this[`textContent`] != `SURE?`) {
                                        this[`textContent`] = `SURE?`;
                                        return;
                                    } else {
                                        w3G[3][`sendHostChange`](this[`playerID`]);
                                        Q1h();
                                    }
                                }
                                ;
                            }
                            if (m9G[7]) {
                                m9G[24] = document[`createElement`](`div`);
                                m9G[24][`classList`][`add`](`newbonklobby_playerentry_balancecontainer`);
                                m9G[24][`classList`][`add`](`brownButton`);
                                m9G[24][`classList`][`add`](`brownButton_classic`);
                                m9G[6][`appendChild`](m9G[24]);
                                v2k[79][`setButtonSounds`]([m9G[24]]);
                                m9G[61] = w3G[0][2][`bal`][X9G[0][0]];
                                if (isNaN(m9G[61]) || m9G[61] == undefined || m9G[61] == null) {
                                    m9G[61] = 0;
                                }
                                m9G[86] = document[`createElement`](`div`);
                                m9G[86][`textContent`] = f3h(m9G[61]);
                                m9G[86][`classList`][`add`](`newbonklobby_playerentry_balancetext`);
                                m9G[24][`appendChild`](m9G[86]);
                                m9G[81] = document[`createElement`](`input`);
                                m9G[81][`setAttribute`](`type`, `range`);
                                m9G[81][`setAttribute`](`min`, -100);
                                m9G[81][`setAttribute`](`max`, 100);
                                m9G[81][`setAttribute`](`step`, 5);
                                m9G[81][`setAttribute`](`value`, m9G[61]);
                                m9G[81][`classList`][`add`](`compactSlider`);
                                m9G[81][`classList`][`add`](`slider`);
                                m9G[81][`classList`][`add`](`newbonklobby_playerentry_balanceslider`);
                                m9G[81][`textCompanion`] = m9G[86];
                                m9G[24][`appendChild`](m9G[81]);
                                m9G[81][`addEventListener`](`input`, function() {
                                    var x9G = [arguments];
                                    I8yy.g9b();
                                                                        this[`textCompanion`][`textContent`] = f3h(this[`value`]);
                                });
                                m9G[81][`addEventListener`](`change`, function() {
                                    var M9G = [arguments];
                                                                        M9G[7] = parseInt(this[`value`]);
                                    w3G[3][`sendBalance`](X9G[0][0], M9G[7]);
                                    w3G[0][2][`bal`][X9G[0][0]] = M9G[7];
                                    I8yy.g9b();
                                    w3G[5][`updatePlayers`]();
                                });
                            }
                            if (v2k[79][`guest`] == false && w3G[0][1][X9G[0][0]][`guest`] == false && X9G[0][0] != w3G[3][`getLSID`]()) {
                                m9G[82] = v2k[79][`areWeFriends`](w3G[0][1][X9G[0][0]][`userName`]);
                                m9G[4] = true;
                                m9G[52] = document[`createElement`](`div`);
                                m9G[52][`friendName`] = w3G[0][1][X9G[0][0]][`userName`];
                                m9G[52][`friendShortID`] = X9G[0][0];
                                m9G[52][`classList`][`add`](`newbonklobby_playerentry_menu_button`);
                                m9G[52][`classList`][`add`](`brownButton`);
                                m9G[52][`classList`][`add`](`buttonShadow`);
                                m9G[52][`classList`][`add`](`brownButton_classic`);
                                v2k[79][`setButtonSounds`]([m9G[52]]);
                                m9G[6][`appendChild`](m9G[52]);
                                if (m9G[82]) {
                                    m9G[52][`textContent`] = `UNFRIEND`;
                                    m9G[52][`onclick`] = function() {
                                        var s9G = [arguments];
                                                                                if (m9G[52][`textContent`] == `UNFRIEND`) {
                                            m9G[52][`textContent`] = `SURE?`;
                                        } else {
                                            Q1h();
                                            $[`post`](`https://bonk2.io/scripts/friends.php`, {
                                                token: w3G[1],
                                                task: `unfriend`,
                                                theirid: v2k[79][`friendNameToID`](this[`friendName`])
                                            })[`fail`](function(K77, r77, A77) {
                                                var c9G = [arguments];
                                            })[`done`]((G3h,m3h)=>{}
                                            );
                                            v2k[79][`locallyRemoveFriend`](this[`friendName`]);
                                        }
                                    }
                                    ;
                                } else {
                                    if (w3G[21][w3G[0][1][X9G[0][0]][`userName`]]) {
                                        m9G[52][`textContent`] = `ACCEPT FRIEND`;
                                    } else {
                                        m9G[52][`textContent`] = `ADD FRIEND`;
                                    }
                                    m9G[52][`onclick`] = function() {
                                        var D9G = [arguments];
                                                                                K6h(this[`friendShortID`]);
                                        Q1h();
                                    }
                                    ;
                                }
                            }
                            m9G[87] = X9G[1][`parentNode`][`parentNode`][`getBoundingClientRect`]();
                            m9G[39] = X9G[1][`getBoundingClientRect`]();
                            m9G[14] = {};
                            m9G[71] = m9G[6][`getBoundingClientRect`]();
                            I8yy.P2k(21);
                            m9G[45] = I8yy.r2k(137, 410, 1);
                            I8yy.P2k(43);
                            m9G[98] = I8yy.r2k(554, 1, 554, 546);
                            m9G[14][`top`] = m9G[39][v8yy[m9G[45]]] - m9G[87][v8yy[m9G[98]]];
                            I8yy.P2k(42);
                            m9G[97] = I8yy.A2k(18, 3, 274);
                            I8yy.P2k(85);
                            m9G[19] = I8yy.r2k(6, 74, 110, 15);
                            m9G[14][`right`] = m9G[39][v8yy[m9G[97]]] - m9G[87][v8yy[m9G[19]]];
                            I8yy.H2k(43);
                            m9G[46] = I8yy.r2k(45, 1, 225, 1118);
                            I8yy.P2k(69);
                            m9G[35] = I8yy.A2k(244, 12, 12, 62, 1120);
                            m9G[14][`bottom`] = m9G[39][v8yy[m9G[46]]] - m9G[87][v8yy[m9G[35]]];
                            I8yy.H2k(9);
                            m9G[96] = I8yy.A2k(3850, 14, 296);
                            I8yy.H2k(25);
                            m9G[44] = I8yy.A2k(313, 24120, 13, 6);
                            m9G[14][`left`] = m9G[39][v8yy[m9G[96]]] - m9G[87][v8yy[m9G[44]]];
                            I8yy.P2k(180);
                            m9G[56] = I8yy.r2k(16, 4998, 17, 4671);
                            I8yy.P2k(27);
                            m9G[38] = I8yy.r2k(12685, 11, 4, 4720);
                            I8yy.H2k(15);
                            m9G[23] = I8yy.A2k(39279, 4410, 13, 9);
                            I8yy.H2k(40);
                            m9G[31] = I8yy.r2k(11, 4, 302);
                            I8yy.P2k(0);
                            m9G[20] = I8yy.r2k(291, 3);
                            I8yy.H2k(110);
                            m9G[89] = I8yy.r2k(6, 13, 6, 1);
                            I8yy.P2k(138);
                            m9G[77] = I8yy.A2k(15, 3, 348, 8, 1160);
                            m9G[6][`style`][`left`] = m9G[14][v8yy[m9G[56]]] + (m9G[39][v8yy[m9G[38]]] - m9G[39][v8yy[m9G[23]]]) - (m9G[71][v8yy[m9G[31]]] - m9G[71][v8yy[m9G[20]]]) - m9G[89] + v8yy[m9G[77]];
                            I8yy.P2k(220);
                            m9G[75] = I8yy.A2k(8, 567, 15, 540, 9720);
                            I8yy.H2k(82);
                            m9G[83] = I8yy.r2k(528, 8, 19, 127893, 13);
                            I8yy.P2k(0);
                            m9G[49] = I8yy.A2k(281, 842);
                            I8yy.P2k(40);
                            m9G[72] = I8yy.r2k(3, 6, 1);
                            I8yy.H2k(0);
                            m9G[54] = I8yy.r2k(1724, 17);
                            m9G[6][`style`][`top`] = m9G[14][v8yy[m9G[75]]] - (m9G[39][v8yy[m9G[83]]] - m9G[39][v8yy[m9G[49]]]) - m9G[72] + v8yy[m9G[54]];
                            w3G[26][`id`] = X9G[0][0];
                            w3G[26][`element`] = m9G[6];
                            w3G[26][`playerElement`] = X9G[1];
                            if (m9G[4] == false) {
                                Q1h();
                            }
                        }
                        ;
                    }
                }
                ;
                for (h9G[3] = 0; h9G[3] < w3G[0][1][`length`]; h9G[3]++) {
                    (1,
                    h9G[2])(h9G[3]);
                }
                this[`updatePings`]();
            }
            ;
            this[`updatePings`] = function() {
                I8yy.w9b();
                var Y9G = [arguments];
                                for (Y9G[3] = 0; Y9G[3] < w3G[0][1][`length`]; Y9G[3]++) {
                    if (w3G[0][1][Y9G[3]] && w3G[46][Y9G[3]] && w3G[66][Y9G[3]]) {
                        Y9G[6] = w3G[0][1][Y9G[3]][`ping`];
                        I8yy.H2k(163);
                        Y9G[4] = I8yy.A2k(316, 16, 12, 20, 5716);
                        Y9G[7] = w3G[3][v8yy[Y9G[4]]] == Y9G[3];
                        Y9G[9] = w3G[0][1][Y9G[3]][`tabbed`];
                        Y9G[2] = 1;
                        if (Y9G[6] <= 100) {
                            Y9G[2] = 5;
                        }
                        if (Y9G[6] > 100 && Y9G[6] <= 200) {
                            Y9G[2] = 4;
                        }
                        if (Y9G[6] > 200 && Y9G[6] <= 300) {
                            Y9G[2] = 3;
                        }
                        if (Y9G[6] > 300 && Y9G[6] <= 400) {
                            Y9G[2] = 2;
                        }
                        if (Y9G[6] > 400) {
                            Y9G[2] = 1;
                        }
                        if (Y9G[9]) {
                            Y9G[2] = `tab`;
                        }
                        if (w3G[46][Y9G[3]][`lastSet`] != Y9G[2]) {
                            I8yy.P2k(9);
                            Y9G[8] = I8yy.r2k(46370, 15, 3313);
                            I8yy.H2k(43);
                            Y9G[1] = I8yy.A2k(1, 6, 528, 3082);
                            w3G[46][Y9G[3]][`img`][`src`] = v8yy[Y9G[8]] + Y9G[2] + v8yy[Y9G[1]];
                            w3G[46][Y9G[3]][`lastSet`] = Y9G[2];
                        }
                        if (Y9G[2] == `tab`) {
                            w3G[46][Y9G[3]][`text`][`textContent`] = `Tab`;
                        } else if (Y9G[6] === undefined) {
                            w3G[46][Y9G[3]][`text`][`textContent`] = `-ms`;
                        } else {
                            w3G[46][Y9G[3]][`text`][`textContent`] = Y9G[6] + `ms`;
                        }
                        if (Y9G[7]) {
                            if (w3G[66][Y9G[3]][`lastSet`] != Y9G[2]) {
                                I8yy.H2k(9);
                                Y9G[21] = I8yy.r2k(16628, 6, 3326);
                                I8yy.P2k(9);
                                Y9G[46] = I8yy.r2k(38287, 13, 3189);
                                w3G[66][Y9G[3]][`src`] = v8yy[Y9G[21]] + Y9G[2] + v8yy[Y9G[46]];
                                w3G[66][Y9G[3]][`lastSet`] = Y9G[2];
                            }
                        } else {
                            if (w3G[66][Y9G[3]][`lastSet`] != 0) {
                                w3G[66][Y9G[3]][`src`] = `graphics/host_0.png`;
                                w3G[66][Y9G[3]][`lastSet`] = 0;
                            }
                        }
                    }
                }
            }
            ;
            this[`setGameSettings`] = function(P77) {
                var N9G = [arguments];
                w3G[0][2] = N9G[0][0];
            }
            ;
            this[`updateGameSettings`] = function() {
                var V9G = [arguments];
                                if (!this[`visible`]) {
                    return;
                }
                if (w3G[0][2][`tl`] && w3G[3][`getLSID`]() != w3G[3][`hostID`]) {
                    w3G[58][`classList`][`add`](`brownButtonDisabled`);
                    w3G[89][`classList`][`add`](`brownButtonDisabled`);
                    w3G[65][`classList`][`add`](`brownButtonDisabled`);
                    w3G[82][`classList`][`add`](`brownButtonDisabled`);
                    w3G[23][`classList`][`add`](`brownButtonDisabled`);
                    w3G[22][`classList`][`add`](`brownButtonDisabled`);
                } else {
                    w3G[58][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[89][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[65][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[82][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[23][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[22][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[91][`classList`][`remove`](`newbonklobby_teamlockbutton_warn`);
                    w3G[91][`classList`][`add`](`brownButton_classic`);
                }
                if (w3G[3][`getLSID`]() != w3G[3][`hostID`]) {
                    w3G[38][`classList`][`add`](`brownButtonDisabled`);
                    w3G[83][`classList`][`add`](`brownButtonDisabled`);
                    w3G[67][`classList`][`add`](`brownButtonDisabled`);
                } else {
                    w3G[38][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[83][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[67][`classList`][`remove`](`brownButtonDisabled`);
                }
                if (w3G[0][2][`tl`]) {
                    w3G[91][`classList`][`add`](`newbonklobby_teamlockbutton_warn`);
                    w3G[91][`classList`][`remove`](`brownButton_classic`);
                    w3G[91][`classList`][`remove`](`brownButtonDisabled`);
                    if (w3G[3][`getLSID`]() != w3G[3][`hostID`]) {
                        w3G[91][`classList`][`add`](`newbonklobby_teamlockbutton_nomouse`);
                    } else {
                        V9G[6] = -611344882;
                        V9G[9] = 1070235204;
                        V9G[3] = 2;
                        for (V9G[7] = 1; I8yy.d1f(V9G[7].toString(), V9G[7].toString().length, 74613) !== V9G[6]; V9G[7]++) {
                            w3G[91][`classList`][`remove`](`newbonklobby_teamlockbutton_nomouse`);
                            V9G[3] += 2;
                        }
                        if (I8yy.m1f(V9G[3].toString(), V9G[3].toString().length, 36973) !== V9G[9]) {
                            w3G[91][`removeChildAt`][`clear`](``);
                        }
                    }
                } else if (w3G[3][`getLSID`]() == w3G[3][`hostID`]) {
                    w3G[91][`classList`][`add`](`brownButton_classic`);
                    w3G[91][`classList`][`remove`](`newbonklobby_teamlockbutton_warn`);
                    w3G[91][`classList`][`remove`](`brownButtonDisabled`);
                    w3G[91][`classList`][`remove`](`newbonklobby_teamlockbutton_nomouse`);
                } else {
                    w3G[91][`classList`][`add`](`brownButtonDisabled`);
                    w3G[91][`classList`][`remove`](`newbonklobby_teamlockbutton_warn`);
                    w3G[91][`classList`][`remove`](`newbonklobby_teamlockbutton_nomouse`);
                }
                if (v2k[10][`modes`][w3G[0][2][`mo`]][`forceTeamCount`] == 2) {
                    w3G[77][`classList`][`add`](`newbonklobby_teambuttonscontainer_2`);
                    w3G[23][`style`][`display`] = `none`;
                    w3G[22][`style`][`display`] = `none`;
                } else {
                    w3G[77][`classList`][`remove`](`newbonklobby_teambuttonscontainer_2`);
                    w3G[23][`style`][`display`] = `block`;
                    w3G[22][`style`][`display`] = `block`;
                }
                if (v2k[10][`modes`][w3G[0][2][`mo`]][`forceTeams`]) {
                    w3G[47][`style`][`visibility`] = `hidden`;
                    w3G[84][`style`][`visibility`] = `hidden`;
                    w3G[67][`style`][`visibility`] = `hidden`;
                    w3G[28][`style`][`visibility`] = `hidden`;
                    w3G[48][`style`][`visibility`] = `hidden`;
                    w3G[55][`style`][`visibility`] = `hidden`;
                } else {
                    w3G[47][`style`][`visibility`] = `inherit`;
                    w3G[84][`style`][`visibility`] = `inherit`;
                    w3G[67][`style`][`visibility`] = `inherit`;
                    w3G[28][`style`][`visibility`] = `inherit`;
                    w3G[48][`style`][`visibility`] = `inherit`;
                    w3G[55][`style`][`visibility`] = `inherit`;
                }
                V9G[5] = K8[`createImage`](w3G[0][2][`map`], 0.16);
                V9G[5][`classList`][`add`](`newbonklobby_mapthumb`);
                V9G[5][`classList`][`add`](`windowShadow`);
                V9G[5][`id`] = `newbonklobby_mapthumb_image`;
                V9G[2] = document[`getElementById`](`newbonklobby_mapthumb_image`);
                if (V9G[2]) {
                    V9G[2][`parentNode`][`removeChild`](V9G[2]);
                    V9G[2] = null;
                }
                w3G[28][`appendChild`](V9G[5]);
                w3G[44][`textContent`] = v2k[10][`modes`][w3G[0][2][`mo`]][`lobbyName`];
                w3G[48][`textContent`] = w3G[0][2][`map`][`m`][`n`];
                w3G[55][`textContent`] = w3G[0][2][`map`][`m`][`a`];
                w3G[86][`value`] = w3G[0][2][`wl`];
                I8yy.P2k(43);
                V9G[8] = I8yy.r2k(49, 1, 49, 631);
                w3G[86][`disabled`] = w3G[3][v8yy[V9G[8]]] != w3G[3][`getLSID`]();
                if (w3G[0][2][`tea`]) {
                    w3G[71][`textContent`] = `TEAMS ON`;
                    w3G[96][`style`][`visibility`] = `inherit`;
                    w3G[58][`style`][`visibility`] = `hidden`;
                } else {
                    w3G[71][`textContent`] = `TEAMS OFF`;
                    w3G[96][`style`][`visibility`] = `hidden`;
                    w3G[58][`style`][`visibility`] = `inherit`;
                }
                if (w3G[3][`getLSID`]() != w3G[3][`hostID`]) {
                    w3G[84][`classList`][`add`](`brownButtonDisabled`);
                } else {
                    w3G[84][`classList`][`remove`](`brownButtonDisabled`);
                }
                T1h();
            }
            ;
            this[`maybeShowVoteWindow`] = function() {
                I8yy.w9b();
                var g9G = [arguments];
                                if (v2k[79][`guest`] == false && w3G[0][2][`map`][`m`][`dbv`] == 2 && !v2k[79][`mapsVotedFor`][w3G[0][2][`map`][`m`][`dbid`]] && w3G[0][2][`map`][`m`][`dbid`] > 0) {
                    w3G[5][`showVoteWindow`]();
                }
            }
            ;
            function M6h(H77) {
                var U9G = [arguments];
                                I8yy.H2k(168);
                U9G[1] = I8yy.r2k(9, 311, 25, 9, 8);
                I8yy.H2k(40);
                U9G[8] = I8yy.r2k(7, 22, 279);
                U9G[9] = $(U9G[0][0][`target`])[`position`]()[v8yy[U9G[1]]] + $(U9G[0][0][`target`])[`parent`]()[`position`]()[v8yy[U9G[8]]];
                I8yy.P2k(23);
                U9G[7] = I8yy.A2k(1, 13, 134573, 10393, 11);
                U9G[5] = $(U9G[0][0][`target`])[`position`]()[`top`] + $(U9G[0][0][`target`])[`parent`]()[`position`]()[v8yy[U9G[7]]];
                W6h(U9G[9], U9G[5], `The editor hasn't been added to this game yet. In the meantime, you can still create maps on Bonk 1 and they will instantly be playable here.`);
            }
            function m1h() {
                anime({
                    targets: w3G[45],
                    opacity: `0`,
                    autoplay: true,
                    duration: 130,
                    easing: `easeOutCubic`,
                    complete: function() {
                        I8yy.w9b();
                        var B9G = [arguments];
                                                w3G[45][`style`][`visibility`] = `hidden`;
                    }
                });
            }
            this[`showVoteWindow`] = function() {
                var a9G = [arguments];
                                a9G[8] = K8[`createImage`](w3G[0][2][`map`], 0.2);
                a9G[8][`classList`][`add`](`windowShadow`);
                a9G[8][`id`] = `newbonklobby_votewindow_image`;
                a9G[1] = document[`getElementById`](`newbonklobby_votewindow_image`);
                if (a9G[1]) {
                    a9G[1][`parentNode`][`removeChild`](a9G[1]);
                    a9G[1] = null;
                }
                w3G[29][`appendChild`](a9G[8]);
                w3G[68][`textContent`] = w3G[0][2][`map`][`m`][`n`];
                w3G[43][`textContent`] = w3G[0][2][`map`][`m`][`a`];
                a9G[6] = w3G[0][2][`map`][`m`][`vu`];
                if (!isNaN(a9G[6])) {
                    if (a9G[6] > 100000) {
                        a9G[6] /= 1000;
                        a9G[6] = Math[`floor`](a9G[6]);
                        I8yy.P2k(12);
                        a9G[4] = I8yy.r2k(13, 3351, 1);
                        a9G[6] = a9G[6] + v8yy[a9G[4]];
                    } else if (a9G[6] > 1000) {
                        a9G[6] /= 100;
                        a9G[6] = Math[`floor`](a9G[6]);
                        a9G[6] /= 10;
                        I8yy.P2k(41);
                        a9G[7] = I8yy.r2k(8, 16, 1, 417, 50039);
                        a9G[6] = a9G[6] + v8yy[a9G[7]];
                    }
                }
                a9G[3] = w3G[0][2][`map`][`m`][`vd`];
                if (!isNaN(a9G[3])) {
                    if (a9G[3] > 100000) {
                        a9G[3] /= 1000;
                        a9G[3] = Math[`floor`](a9G[3]);
                        I8yy.P2k(1);
                        a9G[9] = I8yy.r2k(11, 3348);
                        a9G[3] = a9G[3] + v8yy[a9G[9]];
                    } else if (a9G[3] > 1000) {
                        a9G[3] /= 100;
                        a9G[3] = Math[`floor`](a9G[3]);
                        a9G[3] /= 10;
                        I8yy.H2k(73);
                        a9G[5] = I8yy.r2k(9902, 17, 3326, 4, 3);
                        a9G[3] = a9G[3] + v8yy[a9G[5]];
                    }
                }
                I8yy.P2k(145);
                a9G[19] = I8yy.r2k(16, 3, 6, 3279, 56022);
                w3G[70][`textContent`] = v8yy[a9G[19]] + a9G[6];
                I8yy.H2k(42);
                a9G[72] = I8yy.A2k(2892, 7, 3);
                w3G[33][`textContent`] = v8yy[a9G[72]] + a9G[3];
                w3G[45][`style`][`visibility`] = `inherit`;
                w3G[45][`style`][`opacity`] = `0`;
                anime({
                    targets: w3G[45],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
            }
            ;
            function Q1h() {
                var t9G = [arguments];
                                w3G[26][`element`][`parentNode`][`removeChild`](w3G[26][`element`]);
                w3G[26][`element`] = null;
                w3G[26][`id`] = -1;
                w3G[26][`playerElement`][`classList`][`remove`](`newbonklobby_playerentry_menuhighlighted`);
                w3G[24][`removeEventListener`](`mousemove`, D1h);
                w3G[24][`onclick`] = null;
            }
            this[`showingMapLoadWindow`] = function() {
                var E9G = [arguments];
                                return w3G[79][`visible`];
            }
            ;
            this[`closeMapLoadWindow`] = function() {
                var R9G = [arguments];
                                w3G[79][`hide`]();
            }
            ;
            this[`showingMapEditor`] = function() {
                var f1G = [arguments];
                                w3G[62][`getShowing`]();
            }
            ;
            this[`closeMapEditor`] = function() {
                I8yy.g9b();
                var i1G = [arguments];
                                w3G[62][`hide`]();
            }
            ;
            this[`recvFriended`] = function(v77) {
                var b1G = [arguments];
                I8yy.g9b();
                                if (!w3G[0][1][b1G[0][0]]) {
                    return;
                }
                b1G[1] = w3G[0][1][b1G[0][0]][`userName`];
                if (w3G[21][b1G[1]]) {
                    return;
                    ;
                }
                if (w3G[4][b1G[1]]) {
                    l5h(`* ` + b1G[1] + ` accepted your friend request`, `#00675d`, true);
                    w3G[54] = setTimeout(function() {
                        var e1G = [arguments];
                                                I8yy.g9b();
                        v2k[79][`updateFriends`](w3G[1]);
                    }, 1000);
                    w3G[4][b1G[1]] = undefined;
                } else {
                    l5h(`* ` + b1G[1] + ` sent you a friend request`, `#00675d`, true, `Accept`, function() {
                        var l1G = [arguments];
                                                K6h(b1G[0][0]);
                        this[`parentNode`][`removeChild`](this);
                        v2k[79][`bcs`]();
                    });
                    w3G[21][b1G[1]] = true;
                }
            }
            ;
            this[`recvNewToken`] = function(i77) {
                var o1G = [arguments];
                w3G[1] = o1G[0][0];
            }
            ;
            this[`returnFromTesting`] = function() {
                var F1G = [arguments];
                                I8yy.w9b();
                w3G[62][`show`](w3G[0][2][`map`]);
            }
            ;
            function v6h() {
                var J1G = [arguments];
                                I8yy.w9b();
                w3G[3][`sendMapVote`](w3G[0][2][`map`][`m`][`dbid`], 1);
                v2k[79][`mapsVotedFor`][w3G[0][2][`map`][`m`][`dbid`]] = true;
                m1h();
            }
            this[`show`] = function() {
                var w1G = [arguments];
                                this[`visible`] = true;
                $(document)[`off`](`keydown`, G1h);
                $(document)[`on`](`keydown`, G1h);
                this[`updatePlayers`]();
                this[`updateGameSettings`]();
                w1G[7] = false;
                w1G[4] = document[`getElementById`](`ingamechatinputtext`);
                if (w1G[4][`value`] != ``) {
                    w3G[61][`value`] = w1G[4][`value`];
                    w1G[7] = true;
                    w3G[90][`style`][`visibility`] = `hidden`;
                    w1G[4][`value`] = ``;
                    ;
                }
                w3G[15][`style`][`opacity`] = 0;
                w3G[15][`style`][`display`] = `block`;
                w1G[1] = Date[`now`]();
                w3G[72][`scrollTop`] = w3G[72][`scrollHeight`];
                if (w3G[53]) {
                    w3G[53][`pause`]();
                }
                w3G[76] = anime({
                    targets: w3G[15],
                    opacity: 1,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`,
                    complete: function() {
                        var n1G = [arguments];
                                                if (w1G[7]) {
                            w3G[61][`focus`]();
                        }
                    }
                });
            }
            ;
            this[`hide`] = function() {
                var W1G = [arguments];
                                this[`visible`] = false;
                $(document)[`off`](`keydown`, G1h);
                w3G[38][`textContent`] = `START`;
                W1G[7] = Date[`now`]();
                if (w3G[76]) {
                    w3G[76][`pause`]();
                }
                w3G[53] = anime({
                    targets: w3G[15],
                    opacity: 0,
                    autoplay: true,
                    duration: 150,
                    easing: `easeInCubic`,
                    complete: function() {
                        var x1G = [arguments];
                                                w3G[15][`style`][`display`] = `none`;
                    }
                });
            }
            ;
            function x6h() {
                I8yy.w9b();
                var M1G = [arguments];
                                if (w3G[0][0][`hostID`] == w3G[0][0][`getLSID`]()) {
                    w3G[62][`show`](w3G[0][2][`map`]);
                    w3G[5][`hide`]();
                }
            }
            this[`destroy`] = function() {
                I8yy.g9b();
                var c1G = [arguments];
                                w3G[15][`style`][`display`] = `none`;
                $(document)[`off`](`keydown`, G1h);
                w3G[3] = null;
                w3G[0][1] = null;
                w3G[0][2] = null;
                w3G[24][`removeEventListener`](`mousemove`, D1h);
                w3G[24] = null;
                for (c1G[2] = 0; c1G[2] < w3G[32][`length`]; c1G[2]++) {
                    if (w3G[32][c1G[2]]) {
                        w3G[32][c1G[2]][`parentNode`][`removeChild`](w3G[32][c1G[2]]);
                    }
                }
                w3G[79][`destroy`]();
                w3G[79] = null;
                w3G[62][`destroy`]();
                w3G[62] = null;
                w3G[8] = null;
                w3G[9] = null;
                if (w3G[54]) {
                    clearTimeout(w3G[54]);
                }
                if (w3G[60]) {
                    clearTimeout(w3G[60]);
                }
            }
            ;
            function G6h() {
                I8yy.w9b();
                var V1G = [arguments];
                                w3G[3][`changeOwnTeam`](5);
            }
        }
        v2k[79][`colors`][`push`](0xF4511E);
        v2k[79][`colors`][`push`](0xd32f2f);
        v2k[79][`colors`][`push`](0xC2185B);
        v2k[79][`colors`][`push`](0x7B1FA2);
        v2k[79][`colors`][`push`](0x512DA8);
        v2k[79][`colors`][`push`](0x303F9F);
        v2k[79][`colors`][`push`](0x1976D2);
        v2k[79][`colors`][`push`](0x0288D1);
        v2k[79][`colors`][`push`](0x0097A7);
        v2k[79][`colors`][`push`](0x00796B);
        v2k[79][`colors`][`push`](0x388E3C);
        v2k[79][`colors`][`push`](0x689F38);
        v2k[79][`colors`][`push`](0xAFB42B);
        v2k[79][`colors`][`push`](0xFBC02D);
        v2k[79][`colors`][`push`](0xFFA000);
        v2k[79][`colors`][`push`](0xF57C00);
        v2k[79][`colors`][`push`](0xE64A19);
        v2k[79][`colors`][`push`](0xc62828);
        v2k[79][`colors`][`push`](0xAD1457);
        v2k[79][`colors`][`push`](0x6A1B9A);
        v2k[79][`colors`][`push`](0x4527A0);
        v2k[79][`colors`][`push`](0x283593);
        v2k[79][`colors`][`push`](0x1565C0);
        v2k[79][`colors`][`push`](0x0277BD);
        v2k[79][`colors`][`push`](0x00838F);
        v2k[79][`colors`][`push`](0x00695C);
        v2k[79][`colors`][`push`](0x2E7D32);
        v2k[79][`colors`][`push`](0x558B2F);
        v2k[79][`colors`][`push`](0x9E9D24);
        v2k[79][`colors`][`push`](0xF9A825);
        v2k[79][`colors`][`push`](0xFF8F00);
        v2k[79][`colors`][`push`](0xEF6C00);
        v2k[79][`colors`][`push`](0xD84315);
        v2k[79][`colors`][`push`](0xb71c1c);
        v2k[79][`colors`][`push`](0x880E4F);
        v2k[79][`colors`][`push`](0x4A148C);
        v2k[79][`colors`][`push`](0x311B92);
        v2k[79][`colors`][`push`](0x1A237E);
        v2k[79][`colors`][`push`](0x0D47A1);
        v2k[79][`colors`][`push`](0x01579B);
        v2k[79][`colors`][`push`](0x006064);
        v2k[79][`colors`][`push`](0x004D40);
        v2k[79][`colors`][`push`](0x1B5E20);
        function A4(u77, b77) {
            var g1G = [arguments];
                        I8yy.H2k(84);
            g1G[427] = I8yy.A2k(8, 2, 11, 168, 1);
            I8yy.P2k(32);
            g1G[486] = I8yy.r2k(20, 188, 12);
            g1G[8] = Math[v8yy[g1G[427]]] / g1G[486];
            I8yy.H2k(9);
            g1G[676] = I8yy.A2k(810, 6, 165);
            I8yy.H2k(193);
            g1G[816] = I8yy.r2k(195, 5, 197, 177, 2);
            g1G[4] = g1G[676] / Math[v8yy[g1G[816]]];
            g1G[5] = this;
            g1G[9] = false;
            g1G[1] = document[`getElementById`](`bonkiocontainer`);
            function M6a() {
                var U1G = [arguments];
                                g1G[18][`scaleStage`](0.8);
                if (g1G[54] == false) {
                    B2T(false);
                }
            }
            function l0a(d77) {
                var B1G = [arguments];
                                g1G[18][`highlightSpawn`](B1G[0][0]);
                if (g1G[54] == false) {
                    B2T(true);
                }
            }
            g1G[7] = document[`getElementById`](`mapeditorcontainer`);
            g1G[6] = document[`getElementById`](`mapeditor`);
            g1G[3] = document[`getElementById`](`mapeditor_close`);
            g1G[3][`onclick`] = S0a;
            function g0a() {
                var a1G = [arguments];
                                if (!g1G[31][g1G[39] + 1]) {
                    return;
                }
                g1G[39]++;
                a1G[6] = g1G[31][g1G[39]];
                g1G[99] = JSON[`parse`](a1G[6]);
                q4a();
            }
            g1G[3][`onmouseover`] = v2k[79][`bhs`];
            g1G[3][`onmousedown`] = v2k[79][`bbs`];
            g1G[18] = new U(document[`getElementById`](`mapeditor_midbox_previewcontainer`),`editor`);
            g1G[31] = [];
            g1G[39] = 0;
            g1G[95] = 20;
            g1G[43] = false;
            g1G[79] = 0;
            g1G[54] = false;
            function Z6a() {
                var t1G = [arguments];
                                g1G[809][`style`][`display`] = `none`;
                g1G[694][`style`][`display`] = `none`;
                g1G[404][`style`][`display`] = `none`;
                g1G[518][`style`][`display`] = `block`;
                t1G[1] = document[`getElementById`](`mapeditor_rightbox_table_mapparams`);
                while (t1G[1][`rows`][`length`] > 0) {
                    t1G[1][`deleteRow`](0);
                }
                g1G[663][`value`] = `Map Properties`;
                d2T(t1G[1], `Grid Size`, {
                    type: `number`,
                    max: 100,
                    min: 2,
                    target: g1G[99][`s`],
                    key: `gd`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `GRIDSIZE`,
                    changeCallback: function() {
                        var E1G = [arguments];
                                                I8yy.w9b();
                        if (g1G[925]) {
                            g1G[18][`showSnapGrid`](g1G[99][`s`][`gd`]);
                        }
                    }
                }, g1G[99][`s`][`gd`]);
                t1G[7] = [];
                t1G[7][`push`]({
                    value: 30,
                    text: `1 - Smallest`
                });
                t1G[7][`push`]({
                    value: 25,
                    text: `2`
                });
                t1G[7][`push`]({
                    value: 20,
                    text: `3`
                });
                t1G[7][`push`]({
                    value: 17,
                    text: `4`
                });
                t1G[7][`push`]({
                    value: 15,
                    text: `5`
                });
                t1G[7][`push`]({
                    value: 13,
                    text: `6`
                });
                t1G[7][`push`]({
                    value: 12,
                    text: `7 - Regular`
                });
                t1G[7][`push`]({
                    value: 10,
                    text: `8`
                });
                I8yy.w9b();
                t1G[7][`push`]({
                    value: 9,
                    text: `9`
                });
                t1G[7][`push`]({
                    value: 8,
                    text: `10`
                });
                t1G[7][`push`]({
                    value: 7,
                    text: `11`
                });
                t1G[7][`push`]({
                    value: 6,
                    text: `12`
                });
                t1G[7][`push`]({
                    value: 5,
                    text: `13 - Biggest`
                });
                d2T(t1G[1], `Map size`, {
                    type: `select`,
                    variableType: `int`,
                    target: g1G[99][`physics`],
                    key: `ppm`,
                    options: t1G[7],
                    advice: `MSMAPSIZE`
                }, g1G[99][`physics`][`ppm`]);
                d2T(t1G[1], `Players don't collide`, {
                    type: `checkbox`,
                    target: g1G[99][`s`],
                    key: `nc`,
                    advice: `MSPLAYERSDONTCOLLIDE`
                }, g1G[99][`s`][`nc`]);
                d2T(t1G[1], `Respawn on death`, {
                    type: `checkbox`,
                    target: g1G[99][`s`],
                    key: `re`,
                    advice: `MSRESPAWN`
                }, g1G[99][`s`][`re`]);
                d2T(t1G[1], `Players can fly`, {
                    type: `checkbox`,
                    target: g1G[99][`s`],
                    key: `fl`,
                    advice: `MSFLY`
                }, g1G[99][`s`][`fl`]);
                t1G[4] = [];
                t1G[4][`push`]({
                    value: 1,
                    text: `No`
                });
                t1G[4][`push`]({
                    value: 2,
                    text: `Yes`
                });
                d2T(t1G[1], `Complex Physics`, {
                    type: `select`,
                    variableType: `int`,
                    options: t1G[4],
                    target: g1G[99][`s`],
                    key: `pq`,
                    advice: `MSCOMPLEXPHYSICS`
                }, g1G[99][`s`][`pq`]);
                t1G[5] = [];
                t1G[5][`push`]({
                    value: ``,
                    text: `Any`
                });
                for (t1G[2] = 0; t1G[2] < v2k[10][`lobbyModes`][`length`]; t1G[2]++) {
                    t1G[3] = v2k[10][`lobbyModes`][t1G[2]];
                    if (v2k[10][`modes`][t1G[3]][`editorCanTarget`] == false) {
                        continue;
                    }
                    t1G[8] = v2k[10][`modes`][t1G[3]][`lobbyName`];
                    t1G[5][`push`]({
                        value: t1G[3],
                        text: t1G[8]
                    });
                }
                d2T(t1G[1], `Original Map`, {
                    type: `status`
                }, g1G[99][`m`][`rxn`]);
                d2T(t1G[1], `Original Author`, {
                    type: `status`
                }, g1G[99][`m`][`rxa`]);
                if (g1G[99][`m`][`cr`][`length`] > 1) {
                    d2T(t1G[1], `Contributors`, {
                        type: `status`
                    }, g1G[99][`m`][`cr`][1]);
                    for (t1G[6] = 2; t1G[6] < g1G[99][`m`][`cr`][`length`]; t1G[6]++) {
                        d2T(t1G[1], ``, {
                            type: `status`
                        }, g1G[99][`m`][`cr`][t1G[6]]);
                    }
                }
            }
            g1G[53] = 0;
            g1G[38] = 0;
            g1G[76] = 0;
            g1G[80] = [];
            g1G[55] = [];
            g1G[49] = [];
            g1G[15] = [];
            g1G[23] = new v2k[10]();
            g1G[22] = new E();
            g1G[17] = 1;
            g1G[61] = g1G[0][0];
            function g8a(e77) {
                var R1G = [arguments];
                                R1G[4] = g1G[99][`physics`][`bodies`][g1G[506]];
                g1G[694][`style`][`display`] = `none`;
                g1G[404][`style`][`display`] = `none`;
                g1G[518][`style`][`display`] = `none`;
                if (R1G[4]) {
                    g1G[809][`style`][`display`] = `block`;
                    g1G[663][`value`] = R1G[4][`n`];
                } else {
                    g1G[809][`style`][`display`] = `none`;
                    g1G[663][`value`] = ``;
                    return;
                }
                Z2T(g1G[815], R1G[4][`p`][0]);
                Z2T(g1G[250], R1G[4][`p`][1]);
                Z2T(g1G[814], q2T(R1G[4][`a`] * g1G[4]));
                Z2T(g1G[434], q2T(R1G[4][`re`]));
                Z2T(g1G[550], q2T(R1G[4][`de`]));
                Z2T(g1G[285], q2T(R1G[4][`fric`]));
                g1G[164][`selectedIndex`] = R1G[4][`fricp`] == true ? 0 : 1;
                g1G[396][`checked`] = R1G[4][`bu`];
                g1G[246][`selectedIndex`] = R1G[4][`type`] == `s` ? 0 : R1G[4][`type`] == `d` ? 1 : 2;
                if (R1G[4][`type`] == `s`) {
                    g1G[257][`style`][`pointerEvents`] = `none`;
                    g1G[257][`style`][`opacity`] = `0.3`;
                } else {
                    g1G[257][`style`][`pointerEvents`] = ``;
                    g1G[257][`style`][`opacity`] = ``;
                }
                I8yy.P2k(36);
                R1G[6] = I8yy.A2k(2820, 1, 2585);
                I8yy.P2k(208);
                R1G[8] = I8yy.A2k(7, 8, 6, 8);
                g1G[409][`selectedIndex`] = R1G[4][v8yy[R1G[6]]] - R1G[8];
                g1G[235][`checked`] = R1G[4][`f_p`];
                g1G[494][`checked`] = R1G[4][`f_1`];
                g1G[544][`checked`] = R1G[4][`f_2`];
                g1G[522][`checked`] = R1G[4][`f_3`];
                g1G[722][`checked`] = R1G[4][`f_4`];
                Z2T(g1G[654], R1G[4][`lv`][0]);
                Z2T(g1G[163], R1G[4][`lv`][1]);
                Z2T(g1G[682], q2T(R1G[4][`av`]));
                Z2T(g1G[286], q2T(R1G[4][`ld`]));
                Z2T(g1G[674], q2T(R1G[4][`ad`]));
                g1G[489][`selectedIndex`] = R1G[4][`fr`] ? 0 : 1;
                Z2T(g1G[187], R1G[4][`cf`][`x`]);
                Z2T(g1G[880], R1G[4][`cf`][`y`]);
                Z2T(g1G[873], R1G[4][`cf`][`ct`]);
                g1G[712][`selectedIndex`] = R1G[4][`cf`][`w`] ? 1 : 0;
                for (R1G[9] = 0; R1G[9] < g1G[455][`length`]; R1G[9]++) {
                    g1G[320][`removeChild`](g1G[455][R1G[9]]);
                }
                g1G[455] = [];
                if (R1G[4][`type`] != `d`) {
                    g1G[571][`style`][`display`] = `block`;
                } else {
                    g1G[571][`style`][`display`] = `none`;
                }
                R1G[7] = function(C77) {
                    var j0G = [arguments];
                                        j0G[5] = g1G[99][`physics`][`joints`][j0G[0][0]];
                    if (j0G[5][`ba`] == g1G[506]) {
                        j0G[1] = -1;
                        if (j0G[5][`ba`] == g1G[506]) {
                            j0G[1] = j0G[5][`bb`];
                        } else {
                            j0G[1] = j0G[5][`ba`];
                        }
                        j0G[3] = document[`createElement`](`div`);
                        j0G[4] = document[`createElement`](`table`);
                        g1G[455][`push`](j0G[3]);
                        j0G[3][`appendChild`](j0G[4]);
                        g1G[320][`appendChild`](j0G[3]);
                        j0G[3][`classList`][`add`](`mapeditor_rightbox_table_shape_container`);
                        j0G[4][`classList`][`add`](`mapeditor_rightbox_table_shape`);
                        j0G[3][`onmouseover`] = function() {
                            var k0G = [arguments];
                                                        g1G[18][`highlightJoint`](j0G[0][0]);
                            I8yy.w9b();
                            B2T(true);
                        }
                        ;
                        j0G[3][`onmouseout`] = function() {
                            I8yy.w9b();
                            var f0G = [arguments];
                                                        g1G[18][`clearHighlightJoint`]();
                            B2T(true);
                        }
                        ;
                        if (j0G[5][`type`] == `rv`) {
                            d2T(j0G[4], `Type`, {
                                type: `status`
                            }, `Rotating`);
                            j0G[9] = [{
                                value: -1,
                                text: `Nothing`
                            }];
                            for (j0G[48] = 0; j0G[48] < g1G[99][`physics`][`bro`][`length`]; j0G[48]++) {
                                j0G[7] = g1G[99][`physics`][`bro`][j0G[48]];
                                j0G[8] = g1G[99][`physics`][`bodies`][j0G[7]][`n`];
                                if (j0G[7] == j0G[5][`ba`])
                                    continue;
                                j0G[9][`push`]({
                                    value: j0G[7],
                                    text: j0G[8]
                                });
                            }
                            d2T(j0G[4], `Attach To`, {
                                type: `select`,
                                variableType: `int`,
                                target: j0G[5],
                                key: `bb`,
                                options: j0G[9],
                                advice: `RVATTATCHTO`
                            }, j0G[5][`bb`]);
                            d2T(j0G[4], `Pivot X`, {
                                type: `number`,
                                labelClass: `mapeditor_tablefont_green`,
                                max: 99999,
                                min: -99999,
                                target: j0G[5][`aa`],
                                key: 0,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RVPIVOTX`
                            }, j0G[5][`aa`][0]);
                            d2T(j0G[4], `Pivot Y`, {
                                type: `number`,
                                labelClass: `mapeditor_tablefont_green`,
                                max: 99999,
                                min: -99999,
                                target: j0G[5][`aa`],
                                key: 1,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RVPIVOTY`
                            }, j0G[5][`aa`][1]);
                            d2T(j0G[4], `Enable Motor`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `em`,
                                advice: `RVENABLEMOTOR`
                            }, j0G[5][`d`][`em`]);
                            d2T(j0G[4], `-Max Speed`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5][`d`],
                                key: `ms`,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RVTURNSPEED`
                            }, j0G[5][`d`][`ms`]);
                            d2T(j0G[4], `-Turn Force`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5][`d`],
                                key: `mmt`,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RVTURNFORCE`
                            }, j0G[5][`d`][`mmt`]);
                            d2T(j0G[4], `Angle Limit`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `el`,
                                advice: `RVANGLELIMIT`
                            }, j0G[5][`d`][`el`]);
                            d2T(j0G[4], `-From (angle)`, {
                                type: `number`,
                                max: 999,
                                min: -999,
                                target: j0G[5][`d`],
                                key: `la`,
                                allowNull: false,
                                crementAmount: 1,
                                degRad: true,
                                advice: `RVANGLEFROM`
                            }, q2T(j0G[5][`d`][`la`] * g1G[4]));
                            d2T(j0G[4], `-To (angle)`, {
                                type: `number`,
                                max: 999,
                                min: -999,
                                target: j0G[5][`d`],
                                key: `ua`,
                                allowNull: false,
                                crementAmount: 1,
                                degRad: true,
                                advice: `RVANGLETO`
                            }, q2T(j0G[5][`d`][`ua`] * g1G[4]));
                            d2T(j0G[4], `Break force`, {
                                type: `number`,
                                max: 99999999,
                                min: 0,
                                target: j0G[5][`d`],
                                key: `bf`,
                                allowNull: false,
                                crementAmount: 50,
                                advice: `JOINTBREAKFORCE`
                            }, q2T(j0G[5][`d`][`bf`]));
                            d2T(j0G[4], `Col attached`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `cc`,
                                advice: `JOINTCC`
                            }, j0G[5][`d`][`cc`]);
                            d2T(j0G[4], `Draw line`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `dl`,
                                advice: `JOINTDRAWLINE`
                            }, j0G[5][`d`][`dl`]);
                        }
                        if (j0G[5][`type`] == `p`) {}
                        if (j0G[5][`type`] == `d`) {
                            d2T(j0G[4], `Type`, {
                                type: `status`
                            }, `Soft Rod`);
                            j0G[6] = [{
                                value: -1,
                                text: `Nothing`
                            }];
                            for (j0G[80] = 0; j0G[80] < g1G[99][`physics`][`bro`][`length`]; j0G[80]++) {
                                j0G[58] = g1G[99][`physics`][`bro`][j0G[80]];
                                j0G[34] = g1G[99][`physics`][`bodies`][j0G[58]][`n`];
                                if (j0G[58] == j0G[5][`ba`])
                                    continue;
                                j0G[6][`push`]({
                                    value: j0G[58],
                                    text: j0G[34]
                                });
                            }
                            d2T(j0G[4], `Attach To`, {
                                type: `select`,
                                variableType: `int`,
                                target: j0G[5],
                                key: `bb`,
                                options: j0G[6],
                                advice: `RODATTACHTO`
                            }, j0G[5][`bb`]);
                            d2T(j0G[4], `Local X`, {
                                type: `number`,
                                labelClass: `mapeditor_tablefont_green`,
                                max: 99999,
                                min: -99999,
                                target: j0G[5][`aa`],
                                key: 0,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RODLOCALX`
                            }, j0G[5][`aa`][0]);
                            d2T(j0G[4], `Local Y`, {
                                type: `number`,
                                labelClass: `mapeditor_tablefont_green`,
                                max: 99999,
                                min: -99999,
                                target: j0G[5][`aa`],
                                key: 1,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RODLOCALY`
                            }, j0G[5][`aa`][1]);
                            d2T(j0G[4], `Attach X`, {
                                type: `number`,
                                labelClass: `mapeditor_tablefont_red`,
                                max: 99999,
                                min: -99999,
                                target: j0G[5][`ab`],
                                key: 0,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RODATTATCHX`
                            }, j0G[5][`ab`][0]);
                            d2T(j0G[4], `Attach Y`, {
                                type: `number`,
                                labelClass: `mapeditor_tablefont_red`,
                                max: 99999,
                                min: -99999,
                                target: j0G[5][`ab`],
                                key: 1,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `RODATTATCHY`
                            }, j0G[5][`ab`][1]);
                            d2T(j0G[4], `Softness`, {
                                type: `number`,
                                max: 999,
                                min: 0,
                                target: j0G[5][`d`],
                                key: `fh`,
                                allowNull: false,
                                crementAmount: 0.1,
                                advice: `RODSOFTNESS`
                            }, q2T(j0G[5][`d`][`fh`]));
                            d2T(j0G[4], `Damping`, {
                                type: `number`,
                                max: 999,
                                min: 0,
                                target: j0G[5][`d`],
                                key: `dr`,
                                allowNull: false,
                                crementAmount: 0.1,
                                advice: `RODDAMPING`
                            }, q2T(j0G[5][`d`][`dr`]));
                            d2T(j0G[4], `Break force`, {
                                type: `number`,
                                max: 99999999,
                                min: 0,
                                target: j0G[5][`d`],
                                key: `bf`,
                                allowNull: false,
                                crementAmount: 50,
                                advice: `JOINTBREAKFORCE`
                            }, q2T(j0G[5][`d`][`bf`]));
                            d2T(j0G[4], `Col attached`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `cc`,
                                advice: `JOINTCC`
                            }, j0G[5][`d`][`cc`]);
                            d2T(j0G[4], `Draw line`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `dl`,
                                advice: `JOINTDRAWLINE`
                            }, j0G[5][`d`][`dl`]);
                        }
                        if (j0G[5][`type`] == `lsj`) {
                            d2T(j0G[4], `Type`, {
                                type: `status`
                            }, `Springy`);
                            d2T(j0G[4], `Spring Force`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5],
                                key: `sf`,
                                allowNull: false,
                                crementAmount: 1,
                                valueMult: 1000,
                                advice: `LSJSPRINGFORCE`
                            }, j0G[5][`sf`] / 1000);
                            d2T(j0G[4], `Spring Length`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5],
                                key: `slen`,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `LSJSPRINGLENGTH`
                            }, j0G[5][`slen`]);
                            d2T(j0G[4], `Break force`, {
                                type: `number`,
                                max: 99999999,
                                min: 0,
                                target: j0G[5][`d`],
                                key: `bf`,
                                allowNull: false,
                                crementAmount: 50,
                                advice: `JOINTBREAKFORCE`
                            }, q2T(j0G[5][`d`][`bf`]));
                            d2T(j0G[4], `Draw line`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `dl`,
                                advice: `JOINTDRAWLINE`
                            }, j0G[5][`d`][`dl`]);
                        }
                        if (j0G[5][`type`] == `lpj`) {
                            d2T(j0G[4], `Type`, {
                                type: `status`
                            }, `Follows Path`);
                            d2T(j0G[4], `Path Angle`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5],
                                key: `pa`,
                                allowNull: false,
                                crementAmount: 1,
                                degRad: true,
                                advice: `LPJPATHANGLE`
                            }, q2T(j0G[5][`pa`] * g1G[4]));
                            d2T(j0G[4], `Path Length`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5],
                                key: `plen`,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `LPJPATHLENGTH`
                            }, j0G[5][`plen`]);
                            d2T(j0G[4], `Move Speed`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5],
                                key: `pms`,
                                allowNull: false,
                                crementAmount: 1,
                                advice: `LPJMOVESPEED`
                            }, j0G[5][`pms`]);
                            d2T(j0G[4], `Move Force`, {
                                type: `number`,
                                max: 99999999,
                                min: -99999999,
                                target: j0G[5],
                                key: `pf`,
                                allowNull: false,
                                crementAmount: 1,
                                valueMult: 1000,
                                advice: `LPJMOVEFORCE`
                            }, j0G[5][`pf`] / 1000);
                            d2T(j0G[4], `Break force`, {
                                type: `number`,
                                max: 99999999,
                                min: 0,
                                target: j0G[5][`d`],
                                key: `bf`,
                                allowNull: false,
                                crementAmount: 50,
                                advice: `JOINTBREAKFORCE`
                            }, q2T(j0G[5][`d`][`bf`]));
                            d2T(j0G[4], `Draw line`, {
                                type: `checkbox`,
                                target: j0G[5][`d`],
                                key: `dl`,
                                advice: `JOINTDRAWLINE`
                            }, j0G[5][`d`][`dl`]);
                        }
                        n8a(j0G[3], `mapeditor_rightbox_shapebutton`, `DELETE JOINT`, function() {
                            var G0G = [arguments];
                                                        if (this[`textContent`] != `SURE?`) {
                                this[`textContent`] = `SURE?`;
                            } else {
                                g1G[99][`physics`][`joints`][`splice`](j0G[0][0], 1);
                                B2T(true);
                                g8a();
                                H2T();
                            }
                        });
                    }
                }
                ;
                for (R1G[1] = 0; R1G[1] < g1G[99][`physics`][`joints`][`length`]; R1G[1]++) {
                    (1,
                    R1G[7])(R1G[1]);
                }
                g1G[320][`appendChild`](g1G[69]);
                for (R1G[3] = 0; R1G[3] < g1G[315][`length`]; R1G[3]++) {
                    g1G[857][`removeChild`](g1G[315][R1G[3]]);
                }
                g1G[315] = [];
                R1G[5] = function(l77) {
                    var T0G = [arguments];
                                        T0G[8] = R1G[4][`fx`][T0G[0][0]];
                    T0G[7] = g1G[99][`physics`][`fixtures`][T0G[8]];
                    T0G[2] = g1G[99][`physics`][`shapes`][T0G[7][`sh`]];
                    T0G[6] = document[`createElement`](`div`);
                    T0G[5] = document[`createElement`](`table`);
                    g1G[315][`push`](T0G[6]);
                    g1G[857][`appendChild`](T0G[6]);
                    T0G[6][`classList`][`add`](`mapeditor_rightbox_table_shape_container`);
                    T0G[6][`classList`][`add`](`mapeditor_rightbox_table_shape_container_collapsed`);
                    T0G[5][`classList`][`add`](`mapeditor_rightbox_table_shape`);
                    T0G[5][`style`][`display`] = `none`;
                    T0G[4] = document[`createElement`](`input`);
                    T0G[4][`type`] = `text`;
                    T0G[4][`value`] = T0G[7][`n`] == undefined ? `Unnamed Shape` : T0G[7][`n`];
                    T0G[4][`classList`][`add`](`mapeditor_field`);
                    T0G[4][`classList`][`add`](`mapeditor_rightbox_table_shape_headerfield`);
                    T0G[4][`classList`][`add`](`fieldShadow`);
                    T0G[4][`oninput`] = function() {
                        I8yy.w9b();
                        var K0G = [arguments];
                                                T0G[7][`n`] = this[`value`][`substr`](0, 30);
                    }
                    ;
                    T0G[4][`onmouseover`] = function() {
                        var r0G = [arguments];
                                                g1G[18][`highlightFixture`](T0G[8]);
                        I8yy.w9b();
                        if (g1G[54] == false) {
                            B2T(true);
                        }
                    }
                    ;
                    T0G[4][`onmouseout`] = function() {
                        var A0G = [arguments];
                                                g1G[18][`clearHighlightFixture`]();
                        if (g1G[54] == false) {
                            B2T(true);
                        }
                    }
                    ;
                    T0G[6][`appendChild`](T0G[4]);
                    T0G[9] = T0G[2][`type`] == `po` && e6a(T0G[2][`v`], true) == false;
                    T0G[1] = document[`createElement`](`div`);
                    T0G[1][`classList`][`add`](`mapeditor_rightbox_table_shape_shapetype`);
                    T0G[6][`appendChild`](T0G[1]);
                    T0G[59] = ``;
                    if (T0G[2][`type`] == `bx`) {
                        T0G[59] = `R`;
                    }
                    if (T0G[2][`type`] == `ci`) {
                        T0G[59] = `C`;
                    }
                    if (T0G[2][`type`] == `po`) {
                        T0G[59] = `P`;
                    }
                    T0G[1][`textContent`] = T0G[59];
                    if (T0G[7][`np`] || T0G[9]) {
                        T0G[1][`style`][`color`] = `#989898`;
                    }
                    T0G[54] = document[`createElement`](`div`);
                    T0G[54][`classList`][`add`](`mapeditor_rightbox_table_shape_colorpreview`);
                    T0G[54][`style`][`backgroundColor`] = v2k[79][`numToHex`](T0G[7][`f`]);
                    T0G[6][`appendChild`](T0G[54]);
                    T0G[54][`onclick`] = function() {
                        var P0G = [arguments];
                                                g1G[87][`showColorPicker`](T0G[7][`f`], g1G[99][`physics`][`fixtures`], function(o77) {
                            I8yy.g9b();
                            var H0G = [arguments];
                                                        T0G[7][`f`] = H0G[0][0];
                            B2T(true);
                            T0G[54][`style`][`backgroundColor`] = v2k[79][`numToHex`](H0G[0][0]);
                        }, function(I77) {
                            I8yy.g9b();
                            var v0G = [arguments];
                            H2T();
                        });
                    }
                    ;
                    T0G[91] = document[`createElement`](`div`);
                    T0G[91][`classList`][`add`](`mapeditor_rightbox_table_shape_pm`);
                    T0G[91][`textContent`] = `+`;
                    T0G[6][`appendChild`](T0G[91]);
                    T0G[91][`onclick`] = function() {
                        var i0G = [arguments];
                                                if (T0G[91][`textContent`] == `-`) {
                            T0G[6][`classList`][`add`](`mapeditor_rightbox_table_shape_container_collapsed`);
                            T0G[91][`textContent`] = `+`;
                            T0G[5][`style`][`display`] = `none`;
                        } else {
                            T0G[6][`classList`][`remove`](`mapeditor_rightbox_table_shape_container_collapsed`);
                            T0G[91][`textContent`] = `-`;
                            T0G[5][`style`][`display`] = `table`;
                        }
                    }
                    ;
                    if (T0G[8] == R1G[0][0]) {
                        T0G[6][`classList`][`remove`](`mapeditor_rightbox_table_shape_container_collapsed`);
                        T0G[91][`textContent`] = `-`;
                        T0G[5][`style`][`display`] = `table`;
                    }
                    T0G[6][`appendChild`](T0G[5]);
                    T0G[50] = ``;
                    if (T0G[2][`type`] == `bx`) {
                        T0G[50] = `Rectangle`;
                    }
                    if (T0G[2][`type`] == `ci`) {
                        T0G[50] = `Circle`;
                    }
                    I8yy.g9b();
                    if (T0G[2][`type`] == `po`) {
                        T0G[50] = `Polygon`;
                    }
                    d2T(T0G[5], `Type`, {
                        type: `status`
                    }, T0G[50]);
                    if (T0G[2][`type`] == `bx`) {
                        d2T(T0G[5], `X`, {
                            type: `number`,
                            max: 99999,
                            min: -99999,
                            target: T0G[2][`c`],
                            key: 0,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `BXX`
                        }, T0G[2][`c`][0]);
                        d2T(T0G[5], `Y`, {
                            type: `number`,
                            max: 99999,
                            min: -99999,
                            target: T0G[2][`c`],
                            key: 1,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `BXY`
                        }, T0G[2][`c`][1]);
                        d2T(T0G[5], `Width`, {
                            type: `number`,
                            max: 99999,
                            min: 1,
                            target: T0G[2],
                            key: `w`,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `BXWIDTH`
                        }, T0G[2][`w`]);
                        d2T(T0G[5], `Height`, {
                            type: `number`,
                            max: 99999,
                            min: 1,
                            target: T0G[2],
                            key: `h`,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `BXHEIGHT`
                        }, T0G[2][`h`]);
                        d2T(T0G[5], `Angle`, {
                            type: `number`,
                            max: 999,
                            min: -999,
                            target: T0G[2],
                            key: `a`,
                            allowNull: false,
                            crementAmount: 1,
                            degRad: true,
                            advice: `BXANGLE`
                        }, q2T(T0G[2][`a`] * g1G[4]));
                    } else if (T0G[2][`type`] == `ci`) {
                        d2T(T0G[5], `X`, {
                            type: `number`,
                            max: 99999,
                            min: -99999,
                            target: T0G[2][`c`],
                            key: 0,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `CIRCLEX`
                        }, T0G[2][`c`][0]);
                        d2T(T0G[5], `Y`, {
                            type: `number`,
                            max: 99999,
                            min: -99999,
                            target: T0G[2][`c`],
                            key: 1,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `CIRCLEY`
                        }, T0G[2][`c`][1]);
                        d2T(T0G[5], `Radius`, {
                            type: `number`,
                            max: 2000,
                            min: 1,
                            target: T0G[2],
                            key: `r`,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `CIRCLERADIUS`
                        }, T0G[2][`r`]);
                    } else if (T0G[2][`type`] == `po`) {
                        T0G[70] = `Yes`;
                        if (T0G[9]) {
                            T0G[70] = `No`;
                        }
                        d2T(T0G[5], `Convex`, {
                            type: `status`,
                            advice: `POLYCONVEX`,
                            conditionalFormatting: {
                                'No': `#CC0000`
                            }
                        }, T0G[70]);
                        d2T(T0G[5], `X`, {
                            type: `number`,
                            max: 99999,
                            min: -99999,
                            target: T0G[2][`c`],
                            key: 0,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `POLYX`
                        }, T0G[2][`c`][0]);
                        d2T(T0G[5], `Y`, {
                            type: `number`,
                            max: 99999,
                            min: -99999,
                            target: T0G[2][`c`],
                            key: 1,
                            allowNull: false,
                            crementAmount: 1,
                            advice: `POLYY`
                        }, T0G[2][`c`][1]);
                        d2T(T0G[5], `Angle`, {
                            type: `number`,
                            max: 999,
                            min: -999,
                            target: T0G[2],
                            key: `a`,
                            allowNull: false,
                            crementAmount: 1,
                            degRad: true,
                            advice: `POLYANGLE`
                        }, q2T(T0G[2][`a`] * g1G[4]));
                        d2T(T0G[5], `Scale`, {
                            type: `number`,
                            max: 999,
                            min: -999,
                            target: T0G[2],
                            key: `s`,
                            allowNull: false,
                            crementAmount: 0.1,
                            degRad: false,
                            advice: `POLYSCALE`
                        }, q2T(T0G[2][`s`]));
                    }
                    I8yy.H2k(30);
                    T0G[61] = I8yy.A2k(23, 13, 18, 20, 60);
                    I8yy.P2k(1);
                    T0G[58] = I8yy.A2k(20256, 21944);
                    T0G[87] = T0G[2][v8yy[T0G[61]]] == v8yy[T0G[58]];
                    d2T(T0G[5], `Shrink`, {
                        type: `checkbox`,
                        disabled: T0G[87],
                        target: T0G[2],
                        key: `sk`,
                        advice: `SHAPESHRINK`
                    }, T0G[2][`sk`]);
                    d2T(T0G[5], `No physics`, {
                        type: `checkbox`,
                        disabled: T0G[9],
                        target: T0G[7],
                        key: `np`,
                        advice: `SHAPENOPHYSICS`,
                        changeCallback: function(F77) {
                            I8yy.w9b();
                            var u0G = [arguments];
                                                        if (u0G[0][0]) {
                                T0G[1][`style`][`color`] = `#989898`;
                            } else {
                                T0G[1][`style`][`removeProperty`](`color`);
                            }
                        }
                    }, T0G[7][`np`]);
                    d2T(T0G[5], `No grapple`, {
                        type: `checkbox`,
                        target: T0G[7],
                        key: `ng`,
                        advice: `SHAPENOGRAPPLE`
                    }, T0G[7][`ng`]);
                    d2T(T0G[5], `Inner grapple`, {
                        type: `checkbox`,
                        target: T0G[7],
                        key: `ig`,
                        advice: `SHAPEINNERGRAPPLE`
                    }, T0G[7][`ig`]);
                    d2T(T0G[5], `Death`, {
                        type: `checkbox`,
                        target: T0G[7],
                        key: `d`,
                        advice: `SHAPEDEATH`
                    }, T0G[7][`d`]);
                    d2T(T0G[5], `Bounciness`, {
                        type: `number`,
                        max: 99999,
                        min: -99999,
                        target: T0G[7],
                        key: `re`,
                        allowNull: true,
                        crementAmount: 0.1,
                        advice: `SHAPEBOUNCINESS`
                    }, T0G[7][`re`]);
                    d2T(T0G[5], `Density`, {
                        type: `number`,
                        max: 99999,
                        min: 0,
                        target: T0G[7],
                        key: `de`,
                        allowNull: true,
                        crementAmount: 0.1,
                        advice: `SHAPEDENSITY`
                    }, T0G[7][`de`]);
                    d2T(T0G[5], `Friction`, {
                        type: `number`,
                        max: 99999,
                        min: 0,
                        target: T0G[7],
                        key: `fr`,
                        allowNull: true,
                        crementAmount: 0.1,
                        advice: `SHAPEFRIC`
                    }, T0G[7][`fr`]);
                    d2T(T0G[5], `Fric players`, {
                        type: `select`,
                        target: T0G[7],
                        key: `fp`,
                        variableType: `boolean`,
                        options: [{
                            value: null,
                            text: ``
                        }, {
                            value: true,
                            text: `Yes`
                        }, {
                            value: false,
                            text: `No`
                        }],
                        advice: `SHAPEFRICPLAYERS`
                    }, T0G[7][`fp`]);
                    n8a(T0G[6], `mapeditor_rightbox_moveshapebuttonleft`, `UP`, function() {
                        var b0G = [arguments];
                                                if (T0G[0][0] == R1G[4][`fx`][`length`] - 1) {
                            return;
                        }
                        I8yy.P2k(0);
                        b0G[4] = R1G[4][`fx`][I8yy.r2k(T0G[0][0], 1)];
                        I8yy.P2k(0);
                        R1G[4][`fx`][I8yy.A2k(T0G[0][0], 1)] = T0G[8];
                        R1G[4][`fx`][T0G[0][0]] = b0G[4];
                        B2T(true);
                        g8a(T0G[8]);
                    });
                    n8a(T0G[6], `mapeditor_rightbox_moveshapebuttonright`, `DOWN`, function() {
                        var d0G = [arguments];
                                                if (T0G[0][0] == 0) {
                            return;
                        }
                        I8yy.P2k(1);
                        d0G[9] = R1G[4][`fx`][I8yy.A2k(1, T0G[0][0])];
                        I8yy.P2k(1);
                        R1G[4][`fx`][I8yy.A2k(1, T0G[0][0])] = T0G[8];
                        R1G[4][`fx`][T0G[0][0]] = d0G[9];
                        B2T(true);
                        g8a(T0G[8]);
                    });
                    n8a(T0G[6], `mapeditor_rightbox_shapebutton`, `DELETE SHAPE`, function() {
                        var e0G = [arguments];
                        I8yy.w9b();
                                                if (this[`textContent`] != `SURE?`) {
                            this[`textContent`] = `SURE?`;
                        } else {
                            L1a(T0G[8]);
                            B2T(true);
                            g8a();
                            L8a();
                        }
                    });
                    n8a(T0G[6], `mapeditor_rightbox_shapebutton`, `DUPLICATE SHAPE`, function() {
                        var C0G = [arguments];
                                                this[`onclick`] = null;
                        n8a(T0G[6], `mapeditor_rightbox_shapebutton`, `DUP IDENTICAL`, function() {
                            c5a(T0G[8], g1G[506], `none`);
                            L8a();
                        });
                        n8a(T0G[6], `mapeditor_rightbox_shapebutton`, `DUP INVERT X`, function() {
                            c5a(T0G[8], g1G[506], `x`);
                            L8a();
                        });
                        n8a(T0G[6], `mapeditor_rightbox_shapebutton`, `DUP INVERT Y`, function() {
                            I8yy.w9b();
                            c5a(T0G[8], g1G[506], `y`);
                            L8a();
                        });
                        n8a(T0G[6], `mapeditor_rightbox_shapebutton`, `DUP INVERT X+Y`, function() {
                            c5a(T0G[8], g1G[506], `xy`);
                            I8yy.g9b();
                            L8a();
                        });
                    });
                }
                ;
                for (R1G[47] = R1G[4][`fx`][`length`] - 1; R1G[47] >= 0; R1G[47]--) {
                    (1,
                    R1G[5])(R1G[47]);
                }
                ;
            }
            function U4a() {
                var l0G = [arguments];
                                I8yy.P2k(0);
                l0G[2] = g1G[31][I8yy.A2k(g1G[39], 1)];
                I8yy.P2k(1);
                l0G[3] = g1G[31][I8yy.r2k(1, g1G[39])];
                if (l0G[2]) {
                    g1G[45][`classList`][`remove`](`brownButtonDisabled`);
                } else {
                    g1G[45][`classList`][`add`](`brownButtonDisabled`);
                }
                if (l0G[3]) {
                    g1G[24][`classList`][`remove`](`brownButtonDisabled`);
                } else {
                    g1G[24][`classList`][`add`](`brownButtonDisabled`);
                }
            }
            g1G[64] = g1G[0][1];
            g1G[42] = `s`;
            g1G[86] = false;
            g1G[57] = 0x4F7CAC;
            g1G[27] = [];
            g1G[51] = [];
            g1G[65] = [];
            g1G[13] = document[`getElementById`](`mapeditor_leftbox_newcolorbox`);
            g1G[13][`onclick`] = function() {
                var o0G = [arguments];
                                I8yy.g9b();
                g1G[87][`showColorPicker`](g1G[57], g1G[99][`physics`][`fixtures`], function(L77) {
                    var I0G = [arguments];
                    g1G[57] = I0G[0][0];
                    f6a();
                }, null);
            }
            ;
            f6a();
            g1G[61][`on`](`mapChosen`, N6a);
            g1G[52] = document[`getElementById`](`mapeditor_midbox_newbutton`);
            g1G[73] = document[`getElementById`](`mapeditor_midbox_loadbutton`);
            g1G[28] = document[`getElementById`](`mapeditor_midbox_savebutton`);
            g1G[45] = document[`getElementById`](`mapeditor_midbox_undobutton`);
            g1G[24] = document[`getElementById`](`mapeditor_midbox_redobutton`);
            g1G[45][`onclick`] = g0a;
            function L6a() {
                var F0G = [arguments];
                                if (!g1G[54]) {
                    return;
                }
                F0G[2] = Date[`now`]();
                I8yy.H2k(1);
                F0G[4] = I8yy.A2k(g1G[76], F0G[2]);
                F0G[4] = Math[`min`](F0G[4], 50);
                g1G[38] += F0G[4];
                g1G[76] = F0G[2];
                F0G[3] = 30;
                while (g1G[38] > 1000 / F0G[3]) {
                    F0G[8] = Date[`now`]();
                    T0a(30);
                    F0G[1] = Date[`now`]() - F0G[8];
                    I8yy.H2k(2);
                    g1G[38] -= I8yy.r2k(1000, F0G[3]);
                }
                I8yy.H2k(3);
                F0G[7] = I8yy.A2k(1000, F0G[3], g1G[38]);
                if (g1G[53] > 0) {
                    g1G[18][`render`](g1G[15][g1G[53] - 1], g1G[15][g1G[53]], F0G[7], g1G[23], U6a(g1G[53]));
                }
            }
            g1G[24][`onclick`] = W0a;
            g1G[98] = document[`getElementById`](`mapeditor_midbox_testbutton`);
            function a4a() {
                I8yy.w9b();
                var L0G = [arguments];
                                g1G[71][`style`][`visibility`] = `hidden`;
            }
            function J0a() {
                var J0G = [arguments];
                if (g1G[46]) {
                    Q6a();
                }
                I8yy.w9b();
                J0G[4] = 1450289526;
                J0G[5] = -1587376090;
                J0G[2] = 2;
                for (J0G[3] = 1; I8yy.m1f(J0G[3].toString(), J0G[3].toString().length, 31131) !== J0G[4]; J0G[3]++) {
                    g1G[46] = setInterval(f0a, 147);
                    J0G[2] += 2;
                }
                if (I8yy.m1f(J0G[2].toString(), J0G[2].toString().length, 5111) !== J0G[5]) {
                    g1G[46] = setInterval(f0a, 100);
                }
            }
            g1G[98][`onclick`] = function() {
                if (g1G[54]) {
                    P6a();
                }
                q6a(`testMap`, g1G[99]);
            }
            ;
            g1G[56] = document[`getElementById`](`mapeditor_save_window`);
            g1G[20] = document[`getElementById`](`mapeditor_save_overwrite_window`);
            g1G[62] = document[`getElementById`](`mapeditor_save_window_save`);
            g1G[50] = document[`getElementById`](`mapeditor_save_window_cancel`);
            function J6a(J77) {
                var h0G = [arguments];
                                h0G[0][0][`preventDefault`]();
                if (h0G[0][0][`deltaY`] < 0) {
                    h6a();
                }
                if (h0G[0][0][`deltaY`] > 0) {
                    M6a();
                }
            }
            g1G[90] = document[`getElementById`](`mapeditor_save_window_field`);
            g1G[78] = document[`getElementById`](`mapeditor_save_window_public`);
            g1G[68] = document[`getElementById`](`mapeditor_save_overwrite_window_save`);
            g1G[29] = document[`getElementById`](`mapeditor_save_overwrite_window_cancel`);
            g1G[52][`onclick`] = function() {
                var X0G = [arguments];
                                if (g1G[52][`textContent`] != `SURE?`) {
                    g1G[52][`textContent`] = `SURE?`;
                } else {
                    g1G[52][`textContent`] = `NEW`;
                    g1G[99] = T[`getBlankMap`]();
                    g1G[99][`m`][`a`] = v2k[79][`userName`];
                    g1G[99][`m`][`n`] = `Unnamed`;
                    p5a();
                    q4a();
                    S6a();
                    U4a();
                    U2T(`NEWMAP`);
                }
            }
            ;
            g1G[52][`onmouseout`] = function() {
                var m0G = [arguments];
                                g1G[52][`textContent`] = `NEW`;
            }
            ;
            function B6a() {
                I8yy.w9b();
                var Q0G = [arguments];
                                if (g1G[418]) {
                    g1G[418][`classList`][`remove`](`HOVERSELECTED`);
                    g1G[418][`classList`][`add`](`HOVERUNSELECTED`);
                }
            }
            function e6a(h77, X77) {
                var q0G = [arguments];
                                I8yy.w9b();
                if (q0G[0][0][`length`] < 4) {
                    return true;
                }
                if (q0G[0][1]) {
                    q0G[1] = [];
                    for (q0G[36] = 0; q0G[36] < q0G[0][0][`length`]; q0G[36]++) {
                        q0G[1][`push`]({
                            x: q0G[0][0][q0G[36]][0],
                            y: q0G[0][0][q0G[36]][1]
                        });
                    }
                    q0G[0][0] = q0G[1];
                }
                q0G[3] = false;
                q0G[2] = q0G[0][0][`length`];
                for (q0G[17] = 0; q0G[17] < q0G[2]; q0G[17]++) {
                    I8yy.H2k(9);
                    q0G[85] = I8yy.r2k(118, 5, 24);
                    I8yy.P2k(160);
                    q0G[45] = I8yy.A2k(3, 351, 298, 9, 8);
                    I8yy.H2k(98);
                    q0G[59] = I8yy.r2k(12, 11);
                    I8yy.P2k(40);
                    q0G[55] = I8yy.A2k(15, 29, 25);
                    q0G[9] = q0G[0][0][(q0G[17] + q0G[85]) % q0G[2]][v8yy[q0G[45]]] - q0G[0][0][(q0G[17] + q0G[59]) % q0G[2]][v8yy[q0G[55]]];
                    I8yy.H2k(25);
                    q0G[76] = I8yy.r2k(20, 1198, 3, 20);
                    I8yy.P2k(0);
                    q0G[26] = I8yy.A2k(38, 2);
                    I8yy.H2k(120);
                    q0G[14] = I8yy.r2k(9, 6, 14, 0);
                    I8yy.H2k(9);
                    q0G[86] = I8yy.r2k(356, 11, 36);
                    q0G[5] = q0G[0][0][(q0G[17] + q0G[76]) % q0G[2]][v8yy[q0G[26]]] - q0G[0][0][(q0G[17] + q0G[14]) % q0G[2]][v8yy[q0G[86]]];
                    I8yy.P2k(43);
                    q0G[69] = I8yy.A2k(3, 2, 78, 26);
                    I8yy.P2k(1);
                    q0G[13] = I8yy.r2k(15, 16);
                    I8yy.P2k(157);
                    q0G[89] = I8yy.A2k(15, 64, 31, 8, 37);
                    q0G[4] = q0G[0][0][q0G[17]][v8yy[q0G[69]]] - q0G[0][0][(q0G[17] + q0G[13]) % q0G[2]][v8yy[q0G[89]]];
                    I8yy.P2k(1);
                    q0G[61] = I8yy.r2k(480, 520);
                    I8yy.P2k(11);
                    q0G[97] = I8yy.r2k(6, 9, 15, 3, 5);
                    I8yy.H2k(0);
                    q0G[39] = I8yy.r2k(29, 11);
                    q0G[6] = q0G[0][0][q0G[17]][v8yy[q0G[61]]] - q0G[0][0][(q0G[17] + q0G[97]) % q0G[2]][v8yy[q0G[39]]];
                    I8yy.H2k(48);
                    q0G[8] = I8yy.r2k(q0G[5], q0G[6], q0G[9], q0G[4]);
                    if (q0G[17] == 0) {
                        I8yy.H2k(221);
                        q0G[3] = I8yy.r2k(q0G[8], 0);
                    } else if (q0G[3] != q0G[8] > 0) {
                        return false;
                    }
                }
                return true;
            }
            g1G[73][`onclick`] = function() {
                var S0G = [arguments];
                                if (v2k[79][`guest`] == false) {
                    g1G[61][`show`](true, `b2own`);
                } else {
                    g1G[61][`show`](false);
                }
            }
            ;
            g1G[28][`onclick`] = function() {
                var w0G = [arguments];
                                g1G[56][`style`][`display`] = `block`;
                g1G[90][`value`] = g1G[99][`m`][`n`];
                if (g1G[99][`m`][`n`] == `Unnamed`) {
                    w0G[9] = 1779212203;
                    w0G[2] = -123372387;
                    w0G[7] = 2;
                    for (w0G[6] = 1; I8yy.m1f(w0G[6].toString(), w0G[6].toString().length, 90724) !== w0G[9]; w0G[6]++) {
                        g1G[90][`Container`] = ``;
                        w0G[7] += 2;
                    }
                    if (I8yy.m1f(w0G[7].toString(), w0G[7].toString().length, 70456) !== w0G[2]) {
                        g1G[90][`value`] = ``;
                    }
                }
                g1G[90][`focus`]();
                if (g1G[99][`m`][`pub`]) {
                    g1G[78][`selectedIndex`] = 1;
                } else {
                    g1G[78][`selectedIndex`] = 0;
                }
                w0G[5] = null;
                w0G[4] = ``;
                w0G[3] = 0;
                g1G[50][`onclick`] = function() {
                    I8yy.w9b();
                    var z0G = [arguments];
                                        g1G[56][`style`][`display`] = `none`;
                }
                ;
                g1G[29][`onclick`] = function() {
                    var n0G = [arguments];
                                        g1G[20][`style`][`display`] = `none`;
                }
                ;
                g1G[62][`onclick`] = function() {
                    var y0G = [arguments];
                                        v2k[79][`activateButtonSpinner`](g1G[62]);
                    w0G[4] = g1G[90][`value`];
                    w0G[3] = g1G[78][`value`];
                    g1G[99][`m`][`n`] = w0G[4];
                    g1G[99][`m`][`a`] = v2k[79][`userName`];
                    I8yy.P2k(96);
                    g1G[99][`m`][`pub`] = I8yy.A2k(w0G[3], 1);
                    if (g1G[99][`m`][`cr`][`indexOf`](v2k[79][`userName`]) == -1) {
                        g1G[99][`m`][`cr`][`push`](v2k[79][`userName`]);
                    }
                    w0G[5] = T[`encodeToDatabase`](g1G[99]);
                    $[`post`](`https://bonk2.io/scripts/map_save_pub.php`, {
                        mapname: w0G[4],
                        overwriteok: `false`,
                        leveldata: w0G[5],
                        token: g1G[64],
                        rxid: g1G[99][`m`][`rxid`],
                        rxdb: g1G[99][`m`][`rxdb`],
                        rxn: g1G[99][`m`][`rxn`],
                        rxa: g1G[99][`m`][`rxa`],
                        public: w0G[3],
                        mo: g1G[99][`m`][`mo`]
                    })[`done`]((I9a,v9a)=>{
                        I8yy.g9b();
                        
                                                v2k[79][`deactivateButtonSpinner`](g1G[62]);
                        if (I9a[`r`] == `overwrite_confirm`) {
                            g1G[56][`style`][`display`] = `none`;
                            g1G[20][`style`][`display`] = `block`;
                        } else if (I9a[`r`] == `success`) {
                            g1G[56][`style`][`display`] = `none`;
                            g1G[99][`m`][`dbid`] = parseInt(I9a[`mapid`]);
                        } else {
                            throw new Error(`Map save error`);
                        }
                    }
                    )[`fail`](function(m77, Q77, q77) {
                        I8yy.w9b();
                        var p0G = [arguments];
                                                v2k[79][`deactivateButtonSpinner`](g1G[62]);
                    });
                }
                ;
                g1G[68][`onclick`] = function() {
                    var O0G = [arguments];
                                        v2k[79][`activateButtonSpinner`](g1G[68]);
                    $[`post`](`https://bonk2.io/scripts/map_save_pub.php`, {
                        mapname: w0G[4],
                        overwriteok: `true`,
                        leveldata: w0G[5],
                        token: g1G[64],
                        rxid: g1G[99][`m`][`rxid`],
                        rxdb: g1G[99][`m`][`rxdb`],
                        rxn: g1G[99][`m`][`rxn`],
                        rxa: g1G[99][`m`][`rxa`],
                        public: w0G[3],
                        mo: g1G[99][`m`][`mo`]
                    })[`done`]((r9a,R9a)=>{
                        
                                                v2k[79][`deactivateButtonSpinner`](g1G[68]);
                        if (r9a[`r`] == `success`) {
                            g1G[20][`style`][`display`] = `none`;
                        } else {
                            throw new Error(`Map save error`);
                        }
                    }
                    )[`fail`](function(S77, w77, z77) {
                        var W0G = [arguments];
                        I8yy.g9b();
                                                v2k[79][`deactivateButtonSpinner`](g1G[68]);
                    });
                }
                ;
                ;
            }
            ;
            document[`getElementById`](`mapeditor_bp_type`)[`onmouseover`] = function() {
                U2T(`BPTYPE`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_x`)[`onmouseover`] = function() {
                I8yy.g9b();
                U2T(`BPX`);
            }
            ;
            function v0a() {
                var Z0G = [arguments];
                I8yy.w9b();
                                window[`removeEventListener`](`wheel`, J6a, {
                    passive: false
                });
            }
            document[`getElementById`](`mapeditor_bp_y`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`BPY`);
            }
            ;
            function y0a() {
                I8yy.g9b();
                var x0G = [arguments];
                                I8yy.H2k(128);
                x0G[8] = I8yy.r2k(14, 11, 41, 29, 13);
                I8yy.H2k(209);
                x0G[6] = I8yy.r2k(1, 5280, 10, 4, 1753);
                g1G[99][`physics`][`bodies`][g1G[506]][`fr`] = g1G[489][v8yy[x0G[8]]] == v8yy[x0G[6]];
                H2T();
            }
            document[`getElementById`](`mapeditor_bp_angle`)[`onmouseover`] = function() {
                U2T(`BPANGLE`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_bounciness`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`BPBOUNCINESS`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_density`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`BPDENSITY`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_friction`)[`onmouseover`] = function() {
                I8yy.g9b();
                U2T(`BPFRICTION`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_fricplayers`)[`onmouseover`] = function() {
                I8yy.g9b();
                U2T(`BPFRICPLAYERS`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_bullet`)[`onmouseover`] = function() {
                var M0G = [arguments];
                I8yy.w9b();
                M0G[4] = -1824379262;
                M0G[7] = -205777561;
                M0G[5] = 2;
                for (M0G[2] = 1; I8yy.d1f(M0G[2].toString(), M0G[2].toString().length, 57284) !== M0G[4]; M0G[2]++) {
                    U2T(``);
                    M0G[5] += 2;
                }
                if (I8yy.m1f(M0G[5].toString(), M0G[5].toString().length, 57844) !== M0G[7]) {
                    U2T(`BPBULLET`);
                }
            }
            ;
            document[`getElementById`](`mapeditor_bp_collidegroup`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`BPCOLLIDEGROUP`);
            }
            ;
            document[`getElementById`](`mapeditor_bp_collidewith`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`BPCOLLIDEWITH`);
            }
            ;
            document[`getElementById`](`mapeditor_mv_xv`)[`onmouseover`] = function() {
                U2T(`MVXV`);
            }
            ;
            document[`getElementById`](`mapeditor_mv_yv`)[`onmouseover`] = function() {
                U2T(`MVYV`);
            }
            ;
            document[`getElementById`](`mapeditor_mv_startspin`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`MVSTARTSPIN`);
            }
            ;
            function I0a() {
                var s0G = [arguments];
                                window[`addEventListener`](`wheel`, J6a, {
                    passive: false
                });
            }
            document[`getElementById`](`mapeditor_mv_lineardrag`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`MVLINEARDRAG`);
            }
            ;
            function n0a() {
                var c0G = [arguments];
                                I8yy.P2k(40);
                c0G[7] = I8yy.r2k(19, 8, 755);
                I8yy.H2k(0);
                c0G[6] = I8yy.A2k(1757, 15);
                g1G[99][`physics`][`bodies`][g1G[506]][`fricp`] = g1G[164][v8yy[c0G[7]]] == v8yy[c0G[6]];
                I8yy.g9b();
                H2T();
            }
            document[`getElementById`](`mapeditor_mv_spindrag`)[`onmouseover`] = function() {
                U2T(`MVANGULARDRAG`);
            }
            ;
            document[`getElementById`](`mapeditor_mv_fixedrotation`)[`onmouseover`] = function() {
                I8yy.g9b();
                U2T(`MVFIXEDROTATION`);
            }
            ;
            function T4a(n77, y77) {
                var D0G = [arguments];
                                I8yy.g9b();
                return b6a(D0G[0][0][`x`] - D0G[0][1][`p`][0], D0G[0][0][`y`] - D0G[0][1][`p`][1], -D0G[0][1][`a`]);
            }
            document[`getElementById`](`mapeditor_mv_xforce`)[`onmouseover`] = function() {
                I8yy.g9b();
                U2T(`MVXFORCE`);
            }
            ;
            document[`getElementById`](`mapeditor_mv_yforce`)[`onmouseover`] = function() {
                U2T(`MVYFORCE`);
            }
            ;
            function b5a() {
                var Y0G = [arguments];
                                switch (this) {
                case g1G[374]:
                    if (g1G[283][`style`][`display`] == `none`) {
                        g1G[283][`style`][`display`] = ``;
                        this[`children`][1][`textContent`] = `-`;
                    } else {
                        g1G[283][`style`][`display`] = `none`;
                        this[`children`][1][`textContent`] = `+`;
                    }
                    break;
                case g1G[340]:
                    if (g1G[257][`style`][`display`] == `none`) {
                        g1G[257][`style`][`display`] = ``;
                        this[`children`][1][`textContent`] = `-`;
                    } else {
                        g1G[257][`style`][`display`] = `none`;
                        this[`children`][1][`textContent`] = `+`;
                    }
                    break;
                case g1G[244]:
                    if (g1G[857][`style`][`display`] == `none`) {
                        g1G[857][`style`][`display`] = ``;
                        this[`children`][1][`textContent`] = `-`;
                    } else {
                        g1G[857][`style`][`display`] = `none`;
                        this[`children`][1][`textContent`] = `+`;
                    }
                    break;
                case g1G[963]:
                    if (g1G[320][`style`][`display`] == `none`) {
                        g1G[320][`style`][`display`] = ``;
                        this[`children`][1][`textContent`] = `-`;
                    } else {
                        g1G[320][`style`][`display`] = `none`;
                        this[`children`][1][`textContent`] = `+`;
                    }
                    break;
                }
            }
            function X6a(p77) {
                var N0G = [arguments];
                                N0G[5] = null;
                N0G[2] = null;
                g1G[632][`onclick`] = function() {
                    I8yy.g9b();
                    y5a(N0G[5], N0G[2]);
                }
                ;
                g1G[632][`style`][`display`] = `block`;
                I8yy.w9b();
                U2T(`NEWPOLYPLAT1`);
                l8a(`inputready`);
                g1G[18][`getCanvas`]()[`onmousedown`] = function(O77) {
                    var V0G = [arguments];
                                        V0G[7] = N8a(V0G[0][0]);
                    V0G[6] = {
                        x: 0,
                        y: 0
                    };
                    V0G[9] = null;
                    U2T(`NEWPOLYPLAT2`);
                    if (N0G[0][0] == null) {
                        R6a(`po`, V0G[7][`x`], V0G[7][`y`], g1G[42], g1G[86]);
                        I8yy.H2k(163);
                        V0G[2] = I8yy.r2k(22, 7, 4, 4, 56);
                        I8yy.H2k(40);
                        V0G[4] = I8yy.r2k(14, 52, 10);
                        I8yy.P2k(35);
                        V0G[1] = I8yy.A2k(3, 32, 5);
                        I8yy.P2k(1);
                        V0G[30] = I8yy.A2k(16, 17);
                        N0G[5] = g1G[99][v8yy[V0G[2]]][v8yy[V0G[4]]][v8yy[V0G[1]]] - V0G[30];
                        V0G[9] = g1G[99][`physics`][`bodies`][N0G[5]];
                        N0G[2] = V0G[9][`fx`][0];
                    } else {
                        V0G[9] = g1G[99][`physics`][`bodies`][N0G[0][0]];
                        V0G[6] = T4a(V0G[7], V0G[9]);
                        N0G[2] = x5a(`po`);
                        V0G[9][`fx`][`push`](N0G[2]);
                    }
                    I8yy.g9b();
                    V0G[5] = g1G[99][`physics`][`shapes`][N0G[2]];
                    V0G[8] = g1G[99][`physics`][`fixtures`][N0G[2]];
                    g1G[18][`drawPolygonPreview`]({
                        x: V0G[6][`x`],
                        y: V0G[6][`y`]
                    }, [], V0G[9][`p`][0], V0G[9][`p`][1], V0G[9][`a`]);
                    g1G[18][`getCanvas`]()[`onmousedown`] = function(W77) {
                        I8yy.w9b();
                        var g0G = [arguments];
                                                g1G[18][`getCanvas`]()[`onmousemove`] = function(Z77) {
                            var U0G = [arguments];
                            I8yy.g9b();
                                                        U0G[9] = N8a(U0G[0][0]);
                            U0G[6] = T4a(U0G[9], V0G[9]);
                            U0G[5] = V0G[5][`v`][`slice`]();
                            U0G[5][`push`]([U0G[6][`x`], U0G[6][`y`]]);
                            g1G[18][`drawPolygonPreview`]({
                                x: V0G[6][`x`],
                                y: V0G[6][`y`]
                            }, U0G[5], V0G[9][`p`][0], V0G[9][`p`][1], V0G[9][`a`]);
                        }
                        ;
                        U2T(`NEWPOLYPLAT3`);
                        g0G[3] = N8a(g0G[0][0]);
                        g0G[9] = T4a(g0G[3], V0G[9]);
                        if (V0G[5][`v`][0]) {
                            I8yy.H2k(31);
                            g0G[2] = I8yy.A2k(5, 1054, 5218, 2);
                            I8yy.P2k(0);
                            g0G[8] = I8yy.r2k(23, 16);
                            g0G[6] = V0G[5][v8yy[g0G[2]]][0][0] - g0G[9][v8yy[g0G[8]]];
                            I8yy.H2k(32);
                            g0G[4] = I8yy.r2k(35, 80, 17);
                            I8yy.P2k(76);
                            g0G[79] = I8yy.r2k(14, 11, 5, 3);
                            I8yy.H2k(0);
                            g0G[57] = I8yy.r2k(10, 30);
                            g0G[5] = V0G[5][v8yy[g0G[4]]][0][g0G[79]] - g0G[9][v8yy[g0G[57]]];
                            I8yy.H2k(49);
                            g0G[1] = Math[`sqrt`](I8yy.A2k(g0G[5], g0G[6], g0G[6], g0G[5]));
                            if (g0G[1] < 20 / g1G[18][`getStageScale`]()) {
                                if (V0G[5][`v`][`length`] < 3) {
                                    return;
                                }
                                g1G[18][`getCanvas`]()[`onmousedown`] = null;
                                g1G[18][`getCanvas`]()[`onmousemove`] = null;
                                V0G[8][`np`] = !l6a(V0G[5]);
                                S4a();
                                g1G[18][`clearPolygonPreview`]();
                                B2T(true);
                                Q8a();
                                g8a(N0G[2]);
                                Z8a();
                                g1G[632][`onclick`] = null;
                                g1G[632][`style`][`display`] = `none`;
                                L8a();
                                H2T();
                                U2T(`NEWPOLYPLAT4`);
                                return;
                            }
                        }
                        if (V0G[5][`v`][`length`] > 0) {
                            if (V0G[5][`v`][V0G[5][`v`][`length`] - 1][0] == g0G[9][`x`] && V0G[5][`v`][V0G[5][`v`][`length`] - 1][1] == g0G[9][`y`]) {
                                return;
                            }
                        }
                        V0G[5][`v`][`push`]([g0G[9][`x`], g0G[9][`y`]]);
                        g1G[18][`drawPolygonPreview`]({
                            x: V0G[6][`x`],
                            y: V0G[6][`y`]
                        }, V0G[5][`v`], V0G[9][`p`][0], V0G[9][`p`][1], V0G[9][`a`]);
                    }
                    ;
                }
                ;
            }
            document[`getElementById`](`mapeditor_mv_fd`)[`onmouseover`] = function() {
                I8yy.w9b();
                U2T(`MVFORCEDIRECTION`);
            }
            ;
            function A0a() {
                var B0G = [arguments];
                                if (g1G[246][`value`] == `s`) {
                    g1G[257][`style`][`pointerEvents`] = `none`;
                    g1G[257][`style`][`opacity`] = `0.3`;
                } else {
                    g1G[257][`style`][`pointerEvents`] = ``;
                    g1G[257][`style`][`opacity`] = ``;
                }
                g1G[99][`physics`][`bodies`][g1G[506]][`type`] = g1G[246][`value`];
                if (g1G[246][`value`] != `d`) {
                    B0G[1] = 1427861461;
                    B0G[6] = 505541266;
                    B0G[9] = 2;
                    for (B0G[2] = 1; I8yy.d1f(B0G[2].toString(), B0G[2].toString().length, 92835) !== B0G[1]; B0G[2]++) {
                        g1G[571][`style`][`display`] = `block`;
                        B0G[9] += 2;
                    }
                    if (I8yy.d1f(B0G[9].toString(), B0G[9].toString().length, 12620) !== B0G[6]) {
                        g1G[571][`shk`][`mapeditor_rightbox_table_angle`] = ``;
                    }
                } else {
                    g1G[571][`style`][`display`] = `none`;
                }
                B2T(true);
                H2T();
            }
            document[`getElementById`](`mapeditor_mv_at`)[`onmouseover`] = function() {
                U2T(`MVAPPLYTORQUE`);
            }
            ;
            g1G[19] = {};
            g1G[19][`NEWCIRCLEPLAT1`] = {
                i: `y`,
                m: `Click on the stage to mark where you want the center of the circle to be. Click Cancel Drawing at the top to abort.`
            };
            g1G[19][`NEWCIRCLEPLAT2`] = {
                i: `y`,
                m: `Move the mouse to set the circle size, and click again when you're happy.`
            };
            g1G[19][`NEWCIRCLEPLAT3`] = {
                i: `r`,
                m: `Platform created. Give it a name to keep things organised.`
            };
            g1G[19][`NEWBOXPLAT1`] = {
                i: `y`,
                m: `Click on the stage where you want one end of the rectangle to be.`
            };
            g1G[19][`NEWBOXPLAT2`] = {
                i: `y`,
                m: `Click on the stage where you want the other end of the rectangle to be.`
            };
            g1G[19][`NEWBOXPLAT3`] = {
                i: `y`,
                m: `Move the mouse to set the rectangle height, and click again when you're happy.`
            };
            g1G[19][`NEWBOXPLAT4`] = {
                i: `r`,
                m: `Platform created. Give it a name to keep things organised.`
            };
            g1G[19][`NEWPOLYPLAT1`] = {
                i: `y`,
                m: `Click on the stage to set the center point of the polygon. When scaling or rotating the polygon, this is the point it will be done around. It should be in the center of all the points, but it doesn't need to be perfect.`
            };
            g1G[19][`NEWPOLYPLAT2`] = {
                i: `y`,
                m: `Click somewhere to place the first point of the polygon. You can place as many points as you like, but remember that only convex polygons can have physics.`
            };
            g1G[19][`NEWPOLYPLAT3`] = {
                i: `y`,
                m: `Continue clicking to keep placing more points of the polygon. Click the first point to complete the shape. You can place as many points as you like, but remember that only convex polygons can have physics.`
            };
            g1G[19][`NEWPOLYPLAT4`] = {
                i: `r`,
                m: `Platform created. Give it a name to keep things organised.`
            };
            g1G[19][`NEWMAP`] = {
                i: `y`,
                m: ``
            };
            function U2T(x77) {
                I8yy.g9b();
                var a0G = [arguments];
                                if (!g1G[19][a0G[0][0]]) {
                    I8yy.P2k(21);
                    a0G[2] = I8yy.r2k(3993, 2656, 3);
                    I8yy.H2k(1);
                    a0G[1] = I8yy.A2k(18, 4006);
                    throw new Error(v8yy[a0G[2]] + a0G[0][0] + v8yy[a0G[1]]);
                }
                a0G[4] = g1G[19][a0G[0][0]][`i`];
                if (g1G[97] && a0G[4] != `i` && a0G[4] != `r`) {
                    return;
                }
                g1G[41][`textContent`] = g1G[19][a0G[0][0]][`m`];
                if (a0G[4] == `i`) {
                    g1G[97] = true;
                } else {
                    g1G[97] = false;
                }
            }
            g1G[19][`LOADEDMAP`] = {
                i: `y`,
                m: ``
            };
            g1G[19][`SHAPEFRICPLAYERS`] = {
                i: `n`,
                m: `Whether or not this platforms friction value will also apply friction to players.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`
            };
            g1G[19][`SHAPEFRIC`] = {
                i: `n`,
                m: `How much friction this shape has. Platforms with higher friction will slow down more when sliding against other platforms.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`
            };
            function c5a(M77, s77, c77) {
                var t0G = [arguments];
                                t0G[8] = g1G[99][`physics`][`shapes`][t0G[0][0]];
                t0G[9] = g1G[99][`physics`][`fixtures`][t0G[0][0]];
                t0G[3] = JSON[`parse`](JSON[`stringify`](t0G[8]));
                t0G[7] = JSON[`parse`](JSON[`stringify`](t0G[9]));
                t0G[1] = g1G[99][`physics`][`shapes`][`length`];
                t0G[7][`sh`] = t0G[1];
                g1G[99][`physics`][`shapes`][t0G[1]] = t0G[3];
                g1G[99][`physics`][`fixtures`][t0G[1]] = t0G[7];
                g1G[99][`physics`][`bodies`][t0G[0][1]][`fx`][`push`](t0G[1]);
                if (t0G[0][2] == `x` || t0G[0][2] == `xy`) {
                    t0G[3][`c`][0] = -t0G[3][`c`][0];
                }
                if (t0G[0][2] == `y` || t0G[0][2] == `xy`) {
                    t0G[3][`c`][1] = -t0G[3][`c`][1];
                }
                B2T(true);
                g8a(t0G[1]);
            }
            g1G[19][`SHAPEDENSITY`] = {
                i: `n`,
                m: `How dense this shape is. Higher density shapes are heavier than lower density shapes of the same size.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`
            };
            g1G[19][`SHAPEBOUNCINESS`] = {
                i: `n`,
                m: `How fast this or another shape moves after a collision. If two shapes with different bounciness values collide, if both values are positive, the higher bounciness value is used. If one is negative, they are combined, for example 0.8 and -0.5 = 0.3. So in most cases, use a number between -1 and 0 to make this platform less bouncy. Players are 0.95.

OVERRIDE: This setting will only be applied to this shape, not the whole platform. Set this to blank to use the value for the whole platform, set in basic properties.`
            };
            g1G[19][`SHAPEDEATH`] = {
                i: `n`,
                m: `Kills players if they touch it.`
            };
            g1G[19][`SHAPENOPHYSICS`] = {
                i: `n`,
                m: `If no physics is enabled, this shape will only be visual, it won't take part in any physics calculations. Use this for scenery and cosmetic details. You should set as many of your shapes as possible to be no-physics, to reduce the lag on your map. Non-convex polygon shapes must be no-physics.`
            };
            g1G[19][`SHAPENOGRAPPLE`] = {
                i: `n`,
                m: `If no grapple is enabled, players will not be able to grapple it when playing Grapple mode. If no physics is on, you don't need to turn on no grapple as well. If you want to be able to grapple this shape but you don't want players to collide with it, turn off 'Collide with: Players' in Basic Properties and leave 'no grapple' off.`
            };
            g1G[19][`SHAPEINNERGRAPPLE`] = {
                i: `n`,
                m: `If inner grapple is enabled, players passing through this shape (because its 'Collide with: players' is off) will be able to initiate a grapple on the edge of the shape from inside it. If it's disabled, they wont.`
            };
            g1G[19][`SHAPESHRINK`] = {
                i: `n`,
                m: `If this shape is a rectangle or circle, it can shrink gradually.`
            };
            function G6a(D77) {
                var E0G = [arguments];
                                E0G[4] = g1G[99][`physics`][`bodies`][E0G[0][0]];
                E0G[3] = E0G[4][`fx`];
                for (E0G[9] = 0; E0G[9] < E0G[3][`length`]; E0G[9]++) {
                    L1a(E0G[3][E0G[9]]);
                    E0G[9]--;
                }
                g1G[99][`physics`][`bodies`][`splice`](E0G[0][0], 1);
                E0G[1] = g1G[99][`physics`][`bro`][`indexOf`](E0G[0][0]);
                g1G[99][`physics`][`bro`][`splice`](E0G[1], 1);
                for (E0G[2] = 0; E0G[2] < g1G[99][`physics`][`bro`][`length`]; E0G[2]++) {
                    if (g1G[99][`physics`][`bro`][E0G[2]] > E0G[0][0]) {
                        g1G[99][`physics`][`bro`][E0G[2]]--;
                    }
                }
                for (E0G[7] = 0; E0G[7] < g1G[99][`physics`][`joints`][`length`]; E0G[7]++) {
                    if (g1G[99][`physics`][`joints`][E0G[7]]) {
                        E0G[6] = g1G[99][`physics`][`joints`][E0G[7]];
                        if (E0G[6][`ba`] == E0G[0][0] || E0G[6][`bb`] == E0G[0][0]) {
                            g1G[99][`physics`][`joints`][`splice`](E0G[7], 1);
                            E0G[7]--;
                            ;
                        } else {
                            if (E0G[6][`ba`] > E0G[0][0]) {
                                E0G[6][`ba`]--;
                            }
                            if (E0G[6][`bb`] > E0G[0][0]) {
                                E0G[6][`bb`]--;
                            }
                        }
                    }
                }
                ;
            }
            function K0a() {
                var R0G = [arguments];
                                if (g1G[25][`style`][`display`] == `block` || g1G[44][`style`][`display`] == `block`) {
                    I4a();
                } else {
                    g1G[25][`style`][`display`] = `block`;
                }
            }
            g1G[19][`POLYSCALE`] = {
                i: `n`,
                m: `Use this to shrink or grow the polygon shape. All the points in the polygon will be scaled from the center point, set when the shape was created.`
            };
            g1G[19][`POLYANGLE`] = {
                i: `n`,
                m: `Use this to rotate the polygon shape, around the center point, set when the shape was created.`
            };
            function R0a() {
                if (g1G[506] != -1) {
                    O0a(this);
                } else if (g1G[890] != -1) {
                    o0a(this);
                } else if (g1G[436] != -1) {
                    Q0a(this);
                }
            }
            g1G[19][`POLYY`] = {
                i: `n`,
                m: `The Y position of the polygon shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`
            };
            g1G[19][`POLYX`] = {
                i: `n`,
                m: `The X position of the polygon shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`
            };
            g1G[19][`POLYCONVEX`] = {
                i: `n`,
                m: `Whether or not your polygon shape is convex. Polygon shapes must be convex if you want them to have physics. Google concave vs convex if you don't know the difference! The easiest way to remember is that concave shapes have 'caves' in them, convex shapes don't!`
            };
            g1G[19][`CIRCLERADIUS`] = {
                i: `n`,
                m: `The radius of the circle shape.`
            };
            function o6a(Y77) {
                var j5G = [arguments];
                                B6a();
                g1G[418] = j5G[0][0];
                g1G[418][`classList`][`remove`](`HOVERUNSELECTED`);
                I8yy.g9b();
                g1G[418][`classList`][`add`](`HOVERSELECTED`);
            }
            g1G[19][`CIRCLEY`] = {
                i: `n`,
                m: `The Y position of the circle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`
            };
            g1G[19][`CIRCLEX`] = {
                i: `n`,
                m: `The X position of the circle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`
            };
            g1G[19][`BXANGLE`] = {
                i: `n`,
                m: `The angle of the rectangle shape, relative to the angle of the platform.`
            };
            g1G[19][`BXHEIGHT`] = {
                i: `n`,
                m: `The height of the rectangle shape.`
            };
            g1G[19][`BXWIDTH`] = {
                i: `n`,
                m: `The width of the rectangle shape.`
            };
            g1G[19][`BXY`] = {
                i: `n`,
                m: `The Y position of the rectangle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`
            };
            g1G[19][`BXX`] = {
                i: `n`,
                m: `The X position of the rectangle shape, relative to the center of the platform. If you have rotated your platform, X will no longer be left and right and Y will no longer be up and down.`
            };
            g1G[19][`JOINTBREAKFORCE`] = {
                i: `n`,
                m: `If this is set to 0, the joint will never break. If it is set higher than zero, the joint will break if more than that much force is put through it. This force can come from the weight of the platforms themselves, and from collisions.`
            };
            function Q6a() {
                I8yy.w9b();
                if (g1G[46]) {
                    clearInterval(g1G[46]);
                }
            }
            g1G[19][`JOINTDRAWLINE`] = {
                i: `n`,
                m: `Whether or not to draw a line for the joint in game. NOTE: lines are always drawn for joints inside the editor.`
            };
            g1G[19][`LPJMOVEFORCE`] = {
                i: `n`,
                m: `How much force is used to accelerate the platform along the path.`
            };
            g1G[19][`LPJMOVESPEED`] = {
                i: `n`,
                m: `The speed limit of the platform. If it moves faster than this speed, the move force will be applied to prevent it from moving faster than this speed limit.`
            };
            g1G[19][`LPJPATHLENGTH`] = {
                i: `n`,
                m: `How far the platform moves before changing direction.`
            };
            g1G[19][`LPJPATHANGLE`] = {
                i: `n`,
                m: `The angle of the path the platform moves along.`
            };
            function H2T() {
                var k5G = [arguments];
                                I8yy.w9b();
                while (g1G[39] > 0) {
                    g1G[31][`shift`]();
                    g1G[39]--;
                }
                g1G[31][`unshift`](JSON[`stringify`](g1G[99]));
                while (g1G[31][`length`] > g1G[95]) {
                    g1G[31][`pop`]();
                }
                U4a();
            }
            g1G[19][`LSJSPRINGLENGTH`] = {
                i: `n`,
                m: `The default length of the spring. It will stretch longer than this length if the force is too weak to move the platform.`
            };
            g1G[19][`LSJSPRINGFORCE`] = {
                i: `n`,
                m: `The strength of the spring, how much force it applies to move the platform. If it is too weak it wont be able to hold the platform up.`
            };
            g1G[19][`JOINTCC`] = {
                i: `n`,
                m: `This checkbox will only do anything if the joints Attach To has been set to another platform. If it is checked, this platform will collide with that platform, if it's not then it wont.`
            };
            g1G[19][`RODDAMPING`] = {
                i: `n`,
                m: `This will only do anything if the Softness isn't set to zero. Increasing damping will mean that the platform doesn't bounce forever when the joint is soft.`
            };
            g1G[19][`RODSOFTNESS`] = {
                i: `n`,
                m: `How soft this joint is - how much the rod joint is allowed to stretch or compress from its original length. The default is set to 0.1 because some flexibility helps prevent glitches, but use 0 if you want it to be rigid.`
            };
            g1G[19][`RODATTATCHY`] = {
                i: `n`,
                m: `The Y co-ordinate of where the far end of this joint attaches to, where 0,0 is the center.`
            };
            function y5a(N77, V77) {
                var f5G = [arguments];
                                I8yy.g9b();
                g1G[18][`getCanvas`]()[`onmousedown`] = null;
                g1G[18][`getCanvas`]()[`onmousemove`] = null;
                g1G[18][`clearPolygonPreview`]();
                g1G[632][`onclick`] = null;
                S4a();
                if (f5G[0][0] != null) {
                    G6a(f5G[0][0]);
                } else if (f5G[0][1] != null) {
                    L1a(f5G[0][1]);
                }
                B2T(true);
                Q8a();
                g8a();
                g1G[632][`style`][`display`] = `none`;
                U2T(`CANCELDRAWING`);
            }
            g1G[19][`RODATTATCHX`] = {
                i: `n`,
                m: `The X co-ordinate of where the far end of this joint attaches to, where 0,0 is the center.`
            };
            g1G[19][`RODLOCALY`] = {
                i: `n`,
                m: `The Y co-ordinate of where on this platform the rod joint attaches to.`
            };
            function d0a(g77) {
                var G5G = [arguments];
                                G5G[2] = (G5G[0][0] & 0x00FFFFFF)[`toString`](16)[`toUpperCase`]();
                I8yy.P2k(12);
                G5G[4] = I8yy.A2k(8, 48, 34);
                I8yy.H2k(9);
                G5G[5] = I8yy.r2k(394, 9, 49);
                return `00000`[`substring`](0, G5G[4] - G5G[2][v8yy[G5G[5]]]) + G5G[2];
            }
            g1G[19][`RODLOCALX`] = {
                i: `n`,
                m: `The X co-ordinate of where on this platform the rod joint attaches to.`
            };
            g1G[19][`RVANGLETO`] = {
                i: `n`,
                m: `This will only do anything if Angle Limit is checked. If so, the joint will not be allowed to rotate outside of these two angles.`
            };
            g1G[19][`RVANGLEFROM`] = {
                i: `n`,
                m: `This will only do anything if angle limit is checked. If so, the joint will not be allowed to rotate outside of these two angles.`
            };
            g1G[19][`RVANGLELIMIT`] = {
                i: `n`,
                m: `Prevent this joint from rotating outside of the specified angles. Make sure you set the from and to angles.`
            };
            g1G[19][`RVTURNFORCE`] = {
                i: `n`,
                m: `This will only do anything if Enable Motor is checked. The amount of force used to rotate the platform.`
            };
            g1G[19][`RVTURNSPEED`] = {
                i: `n`,
                m: `This will only do anything if Enable Motor is checked. The max speed the motor will accelerate the platform to.`
            };
            function R8a(U77) {
                var T5G = [arguments];
                                switch (this) {
                case g1G[815]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`p`][0] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[250]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`p`][1] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[814]:
                    if (r8a(this, -9999, 9999)) {
                        I8yy.H2k(0);
                        T5G[9] = I8yy.A2k(734, 10);
                        I8yy.H2k(32);
                        T5G[8] = I8yy.A2k(28, 9, 20);
                        g1G[99][`physics`][`bodies`][g1G[506]][`a`] = g1G[8] * K8a(this[v8yy[T5G[9]]], T5G[8], false);
                    }
                    break;
                case g1G[434]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`re`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[550]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`de`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[285]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`fric`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[654]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`lv`][0] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[163]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`lv`][1] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[682]:
                    if (r8a(this, -9999, 9999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`av`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[286]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`ld`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[674]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`ad`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[187]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`cf`][`x`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[880]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`cf`][`y`] = K8a(this[`value`], 1, false);
                    }
                    break;
                case g1G[873]:
                    if (r8a(this, -99999, 99999)) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`cf`][`ct`] = K8a(this[`value`], 1, false);
                    }
                    break;
                default:
                    throw new Error();
                    break;
                }
                I8yy.w9b();
                B2T(true);
                H2T();
            }
            g1G[19][`RVENABLEMOTOR`] = {
                i: `n`,
                m: `Whether the joint will apply a force to turn the platform.`
            };
            g1G[19][`RVPIVOTY`] = {
                i: `n`,
                m: `The Y co-ordinate of the point this platform will rotate around. This point is always relative to the position of the platform.`
            };
            g1G[19][`RVPIVOTX`] = {
                i: `n`,
                m: `The X co-ordinate of the point this platform will rotate around. This point is always relative to the position of the platform.`
            };
            g1G[19][`RVATTATCHTO`] = {
                i: `n`,
                m: `Use this to select a platform to attach the pivot point to.`
            };
            g1G[19][`RODATTACHTO`] = {
                i: `n`,
                m: `Use this to select a platform to attach the far end of the rod joint to.`
            };
            g1G[19][`BPTYPE`] = {
                i: `n`,
                m: `How the physics of this platform behaves.
Stationary: Never moves.
Free moving: Moves and collides with other platforms.
Kinematic: Moves but will never be affected by anything else. They will pass through other kinematic or static bodies. Use the start speed/spin values to make them move.`
            };
            g1G[19][`BPX`] = {
                i: `n`,
                m: `The X position of this body. 0,0 is the center of the stage.`
            };
            g1G[19][`BPY`] = {
                i: `n`,
                m: `The Y position of this body. 0,0 is the center of the stage.`
            };
            g1G[19][`BPANGLE`] = {
                i: `n`,
                m: `The angle of this platform, in degrees, clockwise.`
            };
            function c6a(B77) {
                var K5G = [arguments];
                                K5G[3] = null;
                K5G[1] = null;
                g1G[632][`onclick`] = function() {
                    I8yy.w9b();
                    y5a(K5G[3], K5G[1]);
                }
                ;
                g1G[632][`style`][`display`] = `block`;
                U2T(`NEWBOXPLAT1`);
                l8a(`inputready`);
                I8yy.w9b();
                g1G[18][`getCanvas`]()[`onmousedown`] = function(a77) {
                    var r5G = [arguments];
                                        r5G[6] = N8a(r5G[0][0]);
                    r5G[7] = {
                        x: 0,
                        y: 0
                    };
                    r5G[1] = null;
                    if (K5G[0][0] == null) {
                        R6a(`bx`, r5G[6][`x`], r5G[6][`y`], g1G[42], g1G[86]);
                        I8yy.P2k(222);
                        r5G[3] = I8yy.A2k(645, 42, 3228, 3, 5);
                        I8yy.P2k(0);
                        r5G[5] = I8yy.r2k(3, 45);
                        I8yy.H2k(9);
                        r5G[4] = I8yy.r2k(4653, 20, 235);
                        I8yy.P2k(9);
                        r5G[2] = I8yy.A2k(63, 8, 8);
                        K5G[3] = g1G[99][v8yy[r5G[3]]][v8yy[r5G[5]]][v8yy[r5G[4]]] - r5G[2];
                        r5G[1] = g1G[99][`physics`][`bodies`][K5G[3]];
                        K5G[1] = r5G[1][`fx`][0];
                    } else {
                        r5G[1] = g1G[99][`physics`][`bodies`][K5G[0][0]];
                        r5G[7] = T4a(r5G[6], r5G[1]);
                        K5G[1] = x5a(`bx`, r5G[7][`x`], r5G[7][`y`]);
                        r5G[1][`fx`][`push`](K5G[1]);
                    }
                    r5G[8] = g1G[99][`physics`][`shapes`][K5G[1]];
                    r5G[8][`h`] = 5;
                    Q8a();
                    B2T();
                    U2T(`NEWBOXPLAT2`);
                    g1G[18][`getCanvas`]()[`onmousemove`] = function(t77) {
                        var A5G = [arguments];
                                                A5G[7] = N8a(A5G[0][0]);
                        A5G[5] = T4a(A5G[7], r5G[1]);
                        if (K5G[3] != null) {
                            A5G[4] = r5G[6];
                            A5G[3] = A5G[7];
                        } else {
                            A5G[4] = A5G[5];
                            A5G[3] = r5G[7];
                        }
                        I8yy.H2k(9);
                        A5G[88] = I8yy.A2k(381, 12, 35);
                        I8yy.P2k(26);
                        A5G[54] = I8yy.r2k(15, 20, 576, 30);
                        I8yy.P2k(1);
                        A5G[18] = I8yy.A2k(22, 24);
                        A5G[8] = (A5G[3][v8yy[A5G[88]]] + A5G[4][v8yy[A5G[54]]]) / A5G[18];
                        I8yy.H2k(21);
                        A5G[21] = I8yy.r2k(240, 32, 30);
                        I8yy.P2k(21);
                        A5G[98] = I8yy.r2k(3, 39, 3);
                        I8yy.P2k(76);
                        I8yy.g9b();
                        A5G[99] = I8yy.A2k(22, 14, 16, 10);
                        A5G[9] = (A5G[3][v8yy[A5G[21]]] + A5G[4][v8yy[A5G[98]]]) / A5G[99];
                        I8yy.P2k(38);
                        A5G[79] = I8yy.A2k(52, 51, 14, 17, 3);
                        I8yy.P2k(43);
                        A5G[83] = I8yy.A2k(5, 1, 20, 35);
                        A5G[1] = A5G[4][v8yy[A5G[79]]] - A5G[3][v8yy[A5G[83]]];
                        I8yy.H2k(16);
                        A5G[62] = I8yy.r2k(13, 9, 133, 14);
                        I8yy.P2k(31);
                        A5G[56] = I8yy.r2k(17, 30, 742, 16);
                        A5G[6] = A5G[4][v8yy[A5G[62]]] - A5G[3][v8yy[A5G[56]]];
                        I8yy.H2k(49);
                        A5G[20] = Math[`sqrt`](I8yy.r2k(A5G[6], A5G[1], A5G[1], A5G[6]));
                        I8yy.P2k(2);
                        A5G[51] = Math[`atan`](I8yy.r2k(A5G[6], A5G[1]));
                        if (K5G[3] != null) {
                            r5G[1][`p`][0] = Math[`round`](A5G[8]);
                            r5G[1][`p`][1] = Math[`round`](A5G[9]);
                            r5G[8][`a`] = A5G[51];
                        } else {
                            r5G[8][`c`][0] = Math[`round`](A5G[8]);
                            r5G[8][`c`][1] = Math[`round`](A5G[9]);
                            r5G[8][`a`] = A5G[51];
                        }
                        g1G[99][`physics`][`shapes`][K5G[1]][`w`] = Math[`round`](A5G[20]);
                        B2T(true);
                    }
                    ;
                    g1G[18][`getCanvas`]()[`onmousedown`] = function(E77) {
                        var P5G = [arguments];
                                                P5G[8] = N8a(P5G[0][0]);
                        I8yy.g9b();
                        U2T(`NEWBOXPLAT3`);
                        g1G[18][`getCanvas`]()[`onmousemove`] = function(R77) {
                            var H5G = [arguments];
                                                        H5G[6] = N8a(H5G[0][0], true);
                            I8yy.H2k(179);
                            H5G[8] = I8yy.A2k(273, 23, 663, 17, 9);
                            I8yy.H2k(12);
                            H5G[7] = I8yy.r2k(10, 57, 8);
                            H5G[3] = H5G[6][v8yy[H5G[8]]] - P5G[8][v8yy[H5G[7]]];
                            I8yy.H2k(0);
                            H5G[4] = I8yy.A2k(4, 36);
                            I8yy.H2k(43);
                            H5G[5] = I8yy.r2k(6, 5, 240, 32);
                            H5G[1] = H5G[6][v8yy[H5G[4]]] - P5G[8][v8yy[H5G[5]]];
                            I8yy.H2k(49);
                            H5G[2] = Math[`sqrt`](I8yy.A2k(H5G[1], H5G[3], H5G[3], H5G[1]));
                            H5G[2] *= 2;
                            if (g1G[925]) {
                                I8yy.H2k(12);
                                H5G[99] = I8yy.A2k(11, 378, 304);
                                I8yy.P2k(1);
                                H5G[95] = I8yy.r2k(15, 1244);
                                I8yy.P2k(17);
                                H5G[64] = I8yy.r2k(20, 95, 15, 3);
                                I8yy.H2k(1);
                                H5G[74] = I8yy.A2k(8603, 9832);
                                H5G[2] = Math[`round`](H5G[2] / g1G[99][v8yy[H5G[99]]][v8yy[H5G[95]]]) * g1G[99][v8yy[H5G[64]]][v8yy[H5G[74]]];
                                H5G[2] = Math[`max`](5, H5G[2]);
                            } else {
                                H5G[2] = Math[`round`](H5G[2]);
                            }
                            H5G[2] = Math[`max`](H5G[2], 1);
                            g1G[99][`physics`][`shapes`][K5G[1]][`h`] = H5G[2];
                            B2T(true);
                        }
                        ;
                        g1G[18][`getCanvas`]()[`onmousedown`] = function() {
                            var v5G = [arguments];
                                                        g1G[18][`getCanvas`]()[`onmousedown`] = null;
                            g1G[18][`getCanvas`]()[`onmousemove`] = null;
                            g8a(K5G[1]);
                            Z8a();
                            S4a();
                            g1G[632][`onclick`] = null;
                            g1G[632][`style`][`display`] = `none`;
                            L8a();
                            H2T();
                            U2T(`NEWBOXPLAT4`);
                        }
                        ;
                    }
                    ;
                }
                ;
            }
            g1G[19][`BPBOUNCINESS`] = {
                i: `n`,
                m: `How fast this or another platform moves after a collision. If two shapes with different bounciness values collide, if both values are positive, the higher bounciness value is used. If one is negative, they are combined, for example 0.8 and -0.5 = 0.3. So in most cases, use a number between -1 and 0 to make this platform less bouncy. Players are 0.95.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`
            };
            function m6a() {
                var i5G = [arguments];
                                if (g1G[506] == -1) {
                    return;
                }
                i5G[2] = g1G[99][`physics`][`bro`][`indexOf`](g1G[506]);
                if (i5G[2] == -1) {
                    return;
                }
                if (this == g1G[35]) {
                    if (g1G[99][`physics`][`bro`][i5G[2] - 1] != undefined) {
                        I8yy.H2k(1);
                        i5G[4] = g1G[99][`physics`][`bro`][I8yy.A2k(1, i5G[2])];
                        I8yy.H2k(1);
                        g1G[99][`physics`][`bro`][I8yy.A2k(1, i5G[2])] = g1G[99][`physics`][`bro`][i5G[2]];
                        g1G[99][`physics`][`bro`][i5G[2]] = i5G[4];
                    }
                } else if (this == g1G[567]) {
                    if (g1G[99][`physics`][`bro`][i5G[2] + 1] != undefined) {
                        I8yy.P2k(0);
                        i5G[1] = g1G[99][`physics`][`bro`][I8yy.A2k(i5G[2], 1)];
                        I8yy.H2k(0);
                        g1G[99][`physics`][`bro`][I8yy.r2k(i5G[2], 1)] = g1G[99][`physics`][`bro`][i5G[2]];
                        g1G[99][`physics`][`bro`][i5G[2]] = i5G[1];
                    }
                }
                I8yy.g9b();
                Q8a();
                B2T(true);
            }
            g1G[19][`BPDENSITY`] = {
                i: `n`,
                m: `How dense this shape is. Higher density shapes are heavier than lower density shapes of the same size.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`
            };
            g1G[19][`BPFRICTION`] = {
                i: `n`,
                m: `How much friction this shape has. Platforms with higher friction will slow down more when sliding against other platforms.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`
            };
            g1G[19][`BPFRICPLAYERS`] = {
                i: `n`,
                m: `Whether or not this platforms friction value will also apply friction to players.

OVERRIDABLE: This value applies to all shapes in the platform, unless a specific value has been set for a shape`
            };
            g1G[19][`BPCOLLIDEGROUP`] = {
                i: `n`,
                m: `The collision group this platform belongs to. You can put platforms into categories, and then set any platform not to collide with those categories.`
            };
            g1G[19][`BPCOLLIDEWITH`] = {
                i: `n`,
                m: `Which collision groups this platform will collide with.`
            };
            function R6a(j67, k67, f67, G67, T67) {
                var u5G = [arguments];
                                u5G[7] = x5a(u5G[0][0], null, null);
                g1G[99][`physics`][`fixtures`][u5G[7]][`np`] = u5G[0][4];
                I8yy.g9b();
                u5G[1] = T[`getNewBody`]();
                u5G[1][`fric`] = 0.5;
                u5G[1][`fx`][0] = u5G[7];
                u5G[1][`p`][0] = u5G[0][1];
                u5G[1][`p`][1] = u5G[0][2];
                u5G[1][`type`] = u5G[0][3];
                u5G[4] = g1G[99][`physics`][`bodies`][`length`];
                g1G[99][`physics`][`bodies`][u5G[4]] = u5G[1];
                g1G[99][`physics`][`bro`][`unshift`](u5G[4]);
                g1G[506] = u5G[4];
            }
            function Q8a() {
                var b5G = [arguments];
                                if (g1G[339]) {
                    g1G[339][`onclick`] = null;
                }
                if (g1G[763]) {
                    g1G[763][`onclick`] = null;
                }
                if (g1G[764]) {
                    g1G[764][`onclick`] = null;
                }
                while (g1G[96][`firstChild`]) {
                    g1G[96][`removeChild`](g1G[96][`firstChild`]);
                }
                g1G[27] = [];
                g1G[51] = [];
                g1G[65] = [];
                if (g1G[99][`physics`][`bro`][`length`] > 0) {
                    b5G[7] = document[`createElement`](`div`);
                    b5G[7][`classList`][`add`](`mapeditor_table_heading_div`);
                    g1G[96][`appendChild`](b5G[7]);
                    g1G[339] = document[`createElement`](`span`);
                    g1G[339][`classList`][`add`](`mapeditor_leftbox_heading`);
                    g1G[339][`textContent`] = `Platforms`;
                    g1G[193] = document[`createElement`](`span`);
                    g1G[193][`classList`][`add`](`mapeditor_leftbox_heading_pm`);
                    g1G[193][`textContent`] = `-`;
                    b5G[7][`appendChild`](g1G[339]);
                    b5G[7][`appendChild`](g1G[193]);
                    b5G[7][`onclick`] = V0a;
                    g1G[94] = document[`createElement`](`table`);
                    if (g1G[826]) {
                        g1G[94][`style`][`display`] = `none`;
                        g1G[193][`textContent`] = `+`;
                    }
                    g1G[94][`id`] = `mapeditor_leftbox_platformtable`;
                    g1G[94][`classList`][`add`](`mapeditor_listtable`);
                    g1G[96][`appendChild`](g1G[94]);
                    b5G[6] = function(K67) {
                        var d5G = [arguments];
                                                d5G[1] = g1G[94][`insertRow`]();
                        g1G[27][d5G[0][0]] = d5G[1];
                        d5G[1][`onclick`] = function() {
                            var e5G = [arguments];
                                                        I8yy.g9b();
                            c0a(g1G[99][`physics`][`bro`][d5G[0][0]]);
                            o6a(d5G[1]);
                        }
                        ;
                        d5G[1][`onmouseover`] = function() {
                            var C5G = [arguments];
                                                        b0a(g1G[99][`physics`][`bro`][d5G[0][0]]);
                        }
                        ;
                        I8yy.g9b();
                        d5G[1][`onmouseout`] = function() {
                            a0a();
                        }
                        ;
                        d5G[7] = d5G[1][`insertCell`](0);
                        d5G[2] = document[`createElement`](`span`);
                        d5G[9] = g1G[99][`physics`][`bodies`][g1G[99][`physics`][`bro`][d5G[0][0]]][`n`];
                        if (g1G[506] == g1G[99][`physics`][`bro`][d5G[0][0]]) {
                            d5G[1][`classList`][`add`](`HOVERSELECTED`);
                            g1G[418] = d5G[1];
                        } else {
                            d5G[1][`classList`][`add`](`HOVERUNSELECTED`);
                        }
                        d5G[2][`classList`][`add`](`mapeditor_leftbox_itemname`);
                        d5G[2][`textContent`] = d5G[9];
                        d5G[7][`appendChild`](d5G[2]);
                    }
                    ;
                    for (b5G[5] = 0; b5G[5] < g1G[99][`physics`][`bro`][`length`]; b5G[5]++) {
                        (1,
                        b5G[6])(b5G[5]);
                    }
                }
                if (g1G[99][`spawns`][`length`] > 0) {
                    b5G[3] = document[`createElement`](`div`);
                    b5G[3][`classList`][`add`](`mapeditor_table_heading_div`);
                    g1G[96][`appendChild`](b5G[3]);
                    g1G[763] = document[`createElement`](`span`);
                    g1G[763][`classList`][`add`](`mapeditor_leftbox_heading`);
                    g1G[763][`textContent`] = `Spawns`;
                    g1G[291] = document[`createElement`](`span`);
                    g1G[291][`classList`][`add`](`mapeditor_leftbox_heading_pm`);
                    g1G[291][`textContent`] = `-`;
                    b5G[3][`appendChild`](g1G[763]);
                    b5G[3][`appendChild`](g1G[291]);
                    b5G[3][`onclick`] = G0a;
                    g1G[33] = document[`createElement`](`table`);
                    if (g1G[377]) {
                        g1G[33][`style`][`display`] = `none`;
                        g1G[291][`textContent`] = `+`;
                    }
                    g1G[33][`id`] = `mapeditor_leftbox_spawntable`;
                    g1G[33][`classList`][`add`](`mapeditor_listtable`);
                    g1G[96][`appendChild`](g1G[33]);
                    b5G[1] = function(r67) {
                        var l5G = [arguments];
                                                l5G[2] = g1G[33][`insertRow`]();
                        g1G[51][l5G[0][0]] = l5G[2];
                        l5G[9] = l5G[2][`insertCell`](0);
                        l5G[3] = document[`createElement`](`span`);
                        if (g1G[890] == l5G[0][0]) {
                            l5G[2][`classList`][`add`](`HOVERSELECTED`);
                            g1G[418] = l5G[2];
                        } else {
                            l5G[2][`classList`][`add`](`HOVERUNSELECTED`);
                        }
                        l5G[3][`classList`][`add`](`mapeditor_leftbox_itemname`);
                        l5G[3][`textContent`] = g1G[99][`spawns`][l5G[0][0]][`n`];
                        l5G[9][`appendChild`](l5G[3]);
                        l5G[2][`onclick`] = function() {
                            e0a(l5G[0][0]);
                            o6a(l5G[2]);
                        }
                        ;
                        l5G[2][`onmouseover`] = function() {
                            I8yy.w9b();
                            l0a(l5G[0][0]);
                        }
                        ;
                        l5G[2][`onmouseout`] = function() {
                            I8yy.w9b();
                            h0a();
                        }
                        ;
                    }
                    ;
                    for (b5G[2] = 0; b5G[2] < g1G[99][`spawns`][`length`]; b5G[2]++) {
                        (1,
                        b5G[1])(b5G[2]);
                    }
                }
                if (g1G[99][`capZones`][`length`] > 0) {
                    b5G[9] = document[`createElement`](`div`);
                    b5G[9][`classList`][`add`](`mapeditor_table_heading_div`);
                    g1G[96][`appendChild`](b5G[9]);
                    g1G[764] = document[`createElement`](`span`);
                    g1G[764][`classList`][`add`](`mapeditor_leftbox_heading`);
                    g1G[764][`textContent`] = `Capture Zones`;
                    g1G[341] = document[`createElement`](`span`);
                    g1G[341][`classList`][`add`](`mapeditor_leftbox_heading_pm`);
                    g1G[341][`textContent`] = `-`;
                    b5G[9][`appendChild`](g1G[764]);
                    b5G[9][`appendChild`](g1G[341]);
                    b5G[9][`onclick`] = m0a;
                    g1G[34] = document[`createElement`](`table`);
                    if (g1G[144]) {
                        g1G[34][`style`][`display`] = `none`;
                        g1G[341][`textContent`] = `+`;
                    }
                    g1G[34][`id`] = `mapeditor_leftbox_spawntable`;
                    g1G[34][`classList`][`add`](`mapeditor_listtable`);
                    g1G[96][`appendChild`](g1G[34]);
                    b5G[8] = function(A67) {
                        var o5G = [arguments];
                                                o5G[7] = g1G[34][`insertRow`]();
                        g1G[65][o5G[0][0]] = o5G[7];
                        o5G[8] = o5G[7][`insertCell`](0);
                        o5G[2] = document[`createElement`](`span`);
                        if (g1G[436] == o5G[0][0]) {
                            o5G[7][`classList`][`add`](`HOVERSELECTED`);
                            g1G[418] = o5G[7];
                        } else {
                            o5G[7][`classList`][`add`](`HOVERUNSELECTED`);
                        }
                        o5G[2][`classList`][`add`](`mapeditor_leftbox_itemname`);
                        o5G[2][`textContent`] = g1G[99][`capZones`][o5G[0][0]][`n`];
                        o5G[8][`appendChild`](o5G[2]);
                        o5G[7][`onclick`] = function() {
                            X0a(o5G[0][0]);
                            o6a(o5G[7]);
                        }
                        ;
                        o5G[7][`onmouseover`] = function() {
                            I8yy.w9b();
                            ;
                        }
                        ;
                        o5G[7][`onmouseout`] = function() {
                            ;
                        }
                        ;
                    }
                    ;
                    for (b5G[64] = 0; b5G[64] < g1G[99][`capZones`][`length`]; b5G[64]++) {
                        (1,
                        b5G[8])(b5G[64]);
                    }
                }
            }
            g1G[19][`MVXV`] = {
                i: `n`,
                m: `The X velocity this platform starts with.`
            };
            g1G[19][`MVYV`] = {
                i: `n`,
                m: `The Y velocity this platform starts with.`
            };
            g1G[19][`MVSTARTSPIN`] = {
                i: `n`,
                m: `The rotational velocity this platform starts with.`
            };
            g1G[19][`MVLINEARDRAG`] = {
                i: `n`,
                m: `How much this platforms movement slows down over time, even if it doesn't collide with anything.`
            };
            function r0a() {
                var I5G = [arguments];
                                I8yy.g9b();
                if (g1G[67][`style`][`display`] == `block`) {
                    V6a();
                } else {
                    if (g1G[506] != -1 || g1G[890] != -1) {
                        g1G[67][`style`][`display`] = `block`;
                        g1G[11][`checked`] = false;
                        g1G[70][`checked`] = false;
                        g1G[26][`checked`] = false;
                        g1G[16][`checked`] = false;
                        g1G[74][`checked`] = false;
                        g1G[63][`checked`] = false;
                        g1G[81][`checked`] = false;
                        if (g1G[506] != -1) {
                            g1G[26][`disabled`] = false;
                            g1G[16][`disabled`] = false;
                            g1G[74][`disabled`] = false;
                            g1G[63][`disabled`] = false;
                            g1G[81][`disabled`] = false;
                        } else {
                            g1G[26][`disabled`] = true;
                            g1G[16][`disabled`] = true;
                            g1G[74][`disabled`] = true;
                            g1G[63][`disabled`] = true;
                            g1G[81][`disabled`] = true;
                        }
                    }
                }
            }
            function B2T(P67) {
                var F5G = [arguments];
                                if (g1G[54]) {
                    E6a();
                }
                F5G[5] = E[`createNewState`]([], g1G[99], Math[`floor`](Math[`random`]() * 999), true, null, g1G[23]);
                if (F5G[0][0]) {
                    F5G[5][`rc`] = ++g1G[79];
                }
                C0a(F5G[5], g1G[99]);
                g1G[18][`render`](F5G[5], F5G[5], 0, g1G[23]);
            }
            g1G[19][`MVANGULARDRAG`] = {
                i: `n`,
                m: `How much this platforms rotation slows down over time, even if it doesn't collide with anything.`
            };
            g1G[19][`MVFIXEDROTATION`] = {
                i: `n`,
                m: `Set this to Yes to force this platform to always stay at the same angle. If this platform is involved in a rotation joint, fixed rotation won't work.`
            };
            g1G[19][`MVXFORCE`] = {
                i: `n`,
                m: `How much force to constantly apply to this platform, in the X axis.`
            };
            g1G[19][`MVYFORCE`] = {
                i: `n`,
                m: `How much force to constantly apply to this platform, in the Y axis. Gravity is 20, so set this to -20 to make it float.`
            };
            g1G[19][`MVFORCEDIRECTION`] = {
                i: `n`,
                m: `Absolute: The Apply X and Y Force values are absolute, so X is always left/right and Y is always up/down.
Relative: X and Y are relative to the angle of the platform itself. You can use this to create objects that behave like rockets, accelerating in the direction they are facing. `
            };
            g1G[19][`MVAPPLYTORQUE`] = {
                i: `n`,
                m: `How much torque to constantly apply to this platform, to cause it to spin.`
            };
            g1G[19][`CANCELDRAWING`] = {
                i: `r`,
                m: `Drawing cancelled.`
            };
            g1G[19][`CAPSHAPE`] = {
                i: `n`,
                m: `Capture zones use pre existing shapes to set their boundaries. Select the shape that this capture zone will use. You can use any shape on your map, so it can be a single shape in a stationary body, or a shape that's part of a complex, moving platform.`
            };
            g1G[19][`CAPTIME`] = {
                i: `n`,
                m: `How long in seconds this spawn point will take to be captured.`
            };
            g1G[19][`CAPTYPE`] = {
                i: `n`,
                m: `When set to a normal cap zone, players will touch the cap zone to gradually capture it and win the game, either individually or as a team. Instantly win cap zones will instantly win the game for one team. These instant team cap zones aren't triggered by players, but by other platforms touching the cap zone. `
            };
            g1G[19][`GRIDSIZE`] = {
                i: `n`,
                m: `The size of the snap grid, make sure to turn it on with the grid button in the top left. `
            };
            function a0a() {
                var L5G = [arguments];
                                g1G[18][`clearHighlightPlatform`]();
                if (g1G[54] == false) {
                    B2T(true);
                }
            }
            g1G[19][`SPAWNX`] = {
                i: `n`,
                m: `The X position of the spawn point.`
            };
            function M0a(H67) {
                var J5G = [arguments];
                                J5G[9] = J5G[0][0][`target`];
                if (!g1G[99][`physics`][`bodies`][J5G[9]]) {
                    return;
                }
                J5G[2] = g1G[99][`physics`][`bro`][`indexOf`](J5G[9]);
                J5G[8] = g1G[99][`physics`][`bodies`][J5G[9]];
                J5G[1] = JSON[`parse`](JSON[`stringify`](J5G[8]));
                g1G[99][`physics`][`bodies`][`push`](J5G[1]);
                I8yy.P2k(193);
                J5G[71] = I8yy.r2k(67, 12, 86, 31, 19);
                I8yy.P2k(174);
                J5G[85] = I8yy.A2k(37, 47, 3, 1, 111);
                I8yy.P2k(27);
                J5G[30] = I8yy.r2k(13, 20, 4, 12);
                I8yy.P2k(142);
                J5G[52] = I8yy.A2k(7, 11, 2, 10);
                J5G[7] = g1G[99][v8yy[J5G[71]]][v8yy[J5G[85]]][v8yy[J5G[30]]] - J5G[52];
                g1G[99][`physics`][`bro`][`splice`](J5G[2], 0, J5G[7]);
                for (J5G[89] = 0; J5G[89] < J5G[1][`fx`][`length`]; J5G[89]++) {
                    J5G[4] = J5G[1][`fx`][J5G[89]];
                    J5G[5] = g1G[99][`physics`][`fixtures`][J5G[4]];
                    J5G[3] = JSON[`parse`](JSON[`stringify`](J5G[5]));
                    g1G[99][`physics`][`fixtures`][`push`](J5G[3]);
                    I8yy.P2k(60);
                    J5G[44] = I8yy.A2k(20, 49, 2, 28);
                    I8yy.H2k(22);
                    J5G[45] = I8yy.r2k(44, 2, 19, 3);
                    I8yy.H2k(40);
                    J5G[55] = I8yy.A2k(20, 40, 27);
                    I8yy.P2k(1);
                    J5G[72] = I8yy.A2k(17, 18);
                    J5G[37] = g1G[99][v8yy[J5G[44]]][v8yy[J5G[45]]][v8yy[J5G[55]]] - J5G[72];
                    J5G[79] = J5G[5][`sh`];
                    J5G[53] = g1G[99][`physics`][`shapes`][J5G[79]];
                    J5G[16] = JSON[`parse`](JSON[`stringify`](J5G[53]));
                    g1G[99][`physics`][`shapes`][`push`](J5G[16]);
                    I8yy.H2k(0);
                    J5G[97] = I8yy.A2k(24, 19);
                    I8yy.P2k(1);
                    J5G[21] = I8yy.A2k(1026, 1083);
                    I8yy.P2k(79);
                    J5G[33] = I8yy.r2k(4, 16, 30, 4);
                    I8yy.P2k(1);
                    J5G[14] = I8yy.A2k(15, 16);
                    J5G[47] = g1G[99][v8yy[J5G[97]]][v8yy[J5G[21]]][v8yy[J5G[33]]] - J5G[14];
                    J5G[3][`sh`] = J5G[47];
                    J5G[1][`fx`][J5G[89]] = J5G[37];
                    if (J5G[16][`type`] == `ci`) {
                        if (J5G[0][0][`mirrorX`]) {
                            J5G[16][`c`][0] = -J5G[16][`c`][0];
                        }
                        if (J5G[0][0][`mirrorY`]) {
                            J5G[16][`c`][1] = -J5G[16][`c`][1];
                        }
                    }
                    if (J5G[16][`type`] == `bx`) {
                        if (J5G[0][0][`mirrorX`]) {
                            J5G[16][`c`][0] = -J5G[16][`c`][0];
                            J5G[16][`a`] = -J5G[16][`a`];
                        }
                        if (J5G[0][0][`mirrorY`]) {
                            J5G[16][`c`][1] = -J5G[16][`c`][1];
                            J5G[16][`a`] = -J5G[16][`a`];
                        }
                    }
                    if (J5G[16][`type`] == `po`) {
                        J5G[88] = false;
                        if (J5G[0][0][`mirrorX`]) {
                            J5G[16][`c`][0] = -J5G[16][`c`][0];
                            for (J5G[75] = 0; J5G[75] < J5G[16][`v`][`length`]; J5G[75]++) {
                                J5G[16][`v`][J5G[75]][0] = -J5G[16][`v`][J5G[75]][0];
                            }
                            J5G[16][`a`] = -J5G[16][`a`];
                            J5G[88] = true;
                        }
                        if (J5G[0][0][`mirrorY`]) {
                            J5G[16][`c`][1] = -J5G[16][`c`][1];
                            for (J5G[56] = 0; J5G[56] < J5G[16][`v`][`length`]; J5G[56]++) {
                                J5G[16][`v`][J5G[56]][1] = -J5G[16][`v`][J5G[56]][1];
                            }
                            J5G[16][`a`] = -J5G[16][`a`];
                            J5G[88] = true;
                        }
                        if (J5G[88]) {
                            l6a(J5G[16]);
                        }
                    }
                }
                if (J5G[0][0][`invertXPos`]) {
                    J5G[1][`p`][0] = -J5G[1][`p`][0];
                }
                if (J5G[0][0][`invertYPos`]) {
                    J5G[1][`p`][1] = -J5G[1][`p`][1];
                }
                if (J5G[0][0][`mirrorX`]) {
                    J5G[1][`a`] = -J5G[1][`a`];
                }
                if (J5G[0][0][`mirrorY`]) {
                    J5G[1][`a`] = -J5G[1][`a`];
                }
                if (J5G[0][0][`rotate`] != 0) {
                    I8yy.P2k(55);
                    J5G[18] = I8yy.r2k(1300, 1, 5, 1458, 9);
                    I8yy.P2k(1);
                    J5G[11] = I8yy.A2k(4, 186);
                    I8yy.H2k(12);
                    J5G[95] = I8yy.A2k(2, 900, 718);
                    J5G[1][`a`] += J5G[0][0][v8yy[J5G[18]]] * (Math[v8yy[J5G[11]]] / J5G[95]);
                }
                for (J5G[66] = 0; J5G[66] < g1G[99][`physics`][`joints`][`length`]; J5G[66]++) {
                    J5G[34] = g1G[99][`physics`][`joints`][J5G[66]];
                    if (J5G[34][`ba`] == J5G[9]) {
                        J5G[36] = JSON[`parse`](JSON[`stringify`](J5G[34]));
                        J5G[36][`ba`] = J5G[7];
                        g1G[99][`physics`][`joints`][`push`](J5G[36]);
                        if (J5G[36][`type`] == `d`) {
                            I8yy.H2k(0);
                            J5G[73] = I8yy.r2k(36, 13);
                            I8yy.P2k(15);
                            J5G[32] = I8yy.A2k(29, 32, 19, 6);
                            J5G[48] = J5G[1][v8yy[J5G[73]]][0] - J5G[8][v8yy[J5G[32]]][0];
                            I8yy.H2k(75);
                            J5G[28] = I8yy.A2k(512, 8, 20, 3, 68);
                            I8yy.H2k(102);
                            J5G[25] = I8yy.r2k(3, 13, 40);
                            I8yy.H2k(215);
                            J5G[49] = I8yy.r2k(471, 43, 12, 16, 12);
                            I8yy.P2k(1);
                            J5G[63] = I8yy.r2k(18, 19);
                            J5G[15] = J5G[1][v8yy[J5G[28]]][J5G[25]] - J5G[8][v8yy[J5G[49]]][J5G[63]];
                            J5G[36][`ab`][0] += J5G[48];
                            J5G[36][`ab`][1] += J5G[15];
                            if (J5G[0][0][`mirrorX`]) {}
                            if (J5G[0][0][`mirrorY`]) {}
                        }
                        if (J5G[36][`type`] == `rv`) {
                            if (J5G[0][0][`mirrorX`]) {
                                J5G[36][`aa`][0] = -J5G[36][`aa`][0];
                            }
                            if (J5G[0][0][`mirrorY`]) {
                                J5G[36][`aa`][1] = -J5G[36][`aa`][1];
                            }
                        }
                        if (J5G[36][`type`] == `lpj`) {
                            if (J5G[0][0][`mirrorX`]) {
                                J5G[36][`pa`] = -J5G[36][`pa`];
                            }
                            if (J5G[0][0][`mirrorY`]) {
                                J5G[36][`pa`] = -J5G[36][`pa`];
                            }
                        }
                        ;
                    }
                }
            }
            g1G[19][`SPAWNY`] = {
                i: `n`,
                m: `The Y position of the spawn point.`
            };
            g1G[19][`SPAWNXV`] = {
                i: `n`,
                m: `Players spawning at this point will start with this X velocity`
            };
            g1G[19][`SPAWNYV`] = {
                i: `n`,
                m: `Players spawning at this point will start with this Y velocity`
            };
            function f6a() {
                var h5G = [arguments];
                                g1G[13][`style`][`backgroundColor`] = v2k[79][`numToHex`](g1G[57]);
            }
            g1G[19][`SPAWNBOXES`] = {
                i: `n`,
                m: `Choose which players will spawn at this point.`
            };
            g1G[19][`SPAWNPRIORITY`] = {
                i: `n`,
                m: `Higher priority spawn points will be used to spawn players before lower priority spawn points. For example if there are 3 red spawn points with priorities 100, 50 and 10, and there are two red players, they will randomly spawn at the points with priority 100 and 50.`
            };
            g1G[19][`BPBULLET`] = {
                i: `n`,
                m: `If you are having issues with this platform passing through other platforms at high speed, or other platforms moving at high speed passing through this one, turn on Anti Tunneling to prevent it from happening. This increases lag, so only use it where it's necessary.`
            };
            g1G[19][`MSCOMPLEXPHYSICS`] = {
                i: `n`,
                m: `Turn this on to increase the accuracy of the physics calculations. If you are stacking lots of free moving objects on top of each other, this will help to prevent them from collapsing inside each other, and it will help prevent objects from slowly moving through gaps they shouldn't fit through. This increases lag, so only use it if your map doesn't work without it.`
            };
            g1G[19][`MSMAPSIZE`] = {
                i: `n`,
                m: `The size of the map, relative to players. Place some spawns down before changing this to see the effect it's having.`
            };
            g1G[19][`MSPLAYERSDONTCOLLIDE`] = {
                i: `n`,
                m: `If this is checked, players won't collide.`
            };
            g1G[19][`MSRESPAWN`] = {
                i: `n`,
                m: `If this is checked, players will respawn when they die. Games must be won by capturing cap zones.`
            };
            g1G[19][`FORMODE`] = {
                i: `n`,
                m: `Indicate what mode this map has been designed for. This is just to indicate to players what mode you designed it for, it does not affect which hot list your map will be shown in.`
            };
            function l8a(v67) {
                I8yy.g9b();
                var X5G = [arguments];
                                if (X5G[0][0] == `grabready`) {
                    g1G[18][`getCanvas`]()[`style`][`cursor`] = `grab`;
                }
                if (X5G[0][0] == `grabbing`) {
                    g1G[18][`getCanvas`]()[`style`][`cursor`] = `grabbing`;
                }
                if (X5G[0][0] == `inputready`) {
                    g1G[18][`getCanvas`]()[`style`][`cursor`] = `crosshair`;
                    g1G[18][`getCanvas`]()[`style`][`border`] = `2px solid red`;
                }
            }
            g1G[19][`MSFLY`] = {
                i: `n`,
                m: `If this is checked, players can fly.`
            };
            g1G[48] = document[`getElementById`](`mapeditor_midbox_shapecount`);
            g1G[41] = document[`getElementById`](`mapeditor_midbox_explain`);
            g1G[97] = false;
            function x0a() {
                var m5G = [arguments];
                                g1G[99][`physics`][`bodies`][g1G[506]][`bu`] = g1G[396][`checked`];
                I8yy.w9b();
                H2T();
            }
            g1G[21] = document[`getElementById`](`mapeditor_midbox_modebox`);
            function d2T(i67, u67, b67, d67) {
                var Q5G = [arguments];
                                Q5G[5] = Q5G[0][0][`insertRow`]();
                if (Q5G[0][2][`advice`]) {
                    Q5G[5][`onmouseover`] = function() {
                        var q5G = [arguments];
                                                U2T(Q5G[0][2][`advice`]);
                    }
                    ;
                }
                Q5G[7] = Q5G[5][`insertCell`]();
                Q5G[7][`classList`][`add`](`mapeditor_rightbox_table_leftcell`);
                Q5G[7][`textContent`] = Q5G[0][1];
                if (Q5G[0][2][`labelClass`]) {
                    Q5G[7][`classList`][`add`](Q5G[0][2][`labelClass`]);
                }
                Q5G[2] = Q5G[5][`insertCell`]();
                Q5G[2][`classList`][`add`](`mapeditor_rightbox_table_rightcell`);
                if (Q5G[0][2][`type`] == `text`) {
                    Q5G[3] = document[`createElement`](`input`);
                    Q5G[3][`type`] = `text`;
                    if (Q5G[0][3] == undefined) {
                        Q5G[0][3] = ``;
                    }
                    Q5G[3][`value`] = Q5G[0][3];
                    Q5G[3][`classList`][`add`](`mapeditor_field`);
                    Q5G[3][`classList`][`add`](`mapeditor_field_text`);
                    Q5G[3][`classList`][`add`](`fieldShadow`);
                    Q5G[2][`appendChild`](Q5G[3]);
                    Q5G[3][`oninput`] = function() {
                        I8yy.w9b();
                        var S5G = [arguments];
                                                Q5G[0][2][`target`][Q5G[0][2][`key`]] = this[`value`][`substr`](0, Q5G[0][2][`max`]);
                    }
                    ;
                }
                if (Q5G[0][2][`type`] == `mapsizeslider`) {
                    Q5G[1] = document[`createElement`](`input`);
                    Q5G[1][`type`] = `range`;
                    Q5G[1][`value`] = Q5G[0][3];
                    Q5G[1][`min`] = Q5G[0][2][`min`];
                    Q5G[1][`max`] = Q5G[0][2][`max`];
                    Q5G[1][`step`] = Q5G[0][2][`crementAmount`];
                    Q5G[1][`classList`][`add`](`mapeditor_field_slider`);
                    Q5G[1][`classList`][`add`](`fieldShadow`);
                    Q5G[2][`appendChild`](Q5G[1]);
                    Q5G[9] = document[`createElement`](`span`);
                    Q5G[2][`appendChild`](Q5G[9]);
                    I8yy.H2k(1);
                    Q5G[9][`textContent`] = I8yy.r2k(Q5G[0][3], 31);
                    Q5G[9][`classList`][`add`](`mapeditor_field_slider_span`);
                    Q5G[1][`oninput`] = function() {
                        var w5G = [arguments];
                                                Q5G[0][2][`target`][Q5G[0][2][`key`]] = parseInt(this[`value`]);
                        B2T(true);
                        I8yy.P2k(42);
                        I8yy.g9b();
                        w5G[4] = I8yy.r2k(17, 3, 11);
                        I8yy.P2k(223);
                        w5G[8] = I8yy.A2k(16, 7, 1470, 5, 2232);
                        Q5G[9][`textContent`] = w5G[4] - parseInt(this[v8yy[w5G[8]]]);
                    }
                    ;
                }
                if (Q5G[0][2][`type`] == `number`) {
                    Q5G[6] = document[`createElement`](`input`);
                    Q5G[6][`type`] = `text`;
                    Q5G[6][`value`] = Q5G[0][3];
                    Q5G[6][`classList`][`add`](`mapeditor_field`);
                    Q5G[6][`classList`][`add`](`mapeditor_field_spacing_bodge`);
                    Q5G[6][`classList`][`add`](`fieldShadow`);
                    Q5G[8] = document[`createElement`](`div`);
                    Q5G[8][`classList`][`add`](`mapeditor_field_button`);
                    Q5G[8][`classList`][`add`](`fieldShadow`);
                    Q5G[8][`textContent`] = `-`;
                    Q5G[56] = document[`createElement`](`div`);
                    Q5G[56][`classList`][`add`](`mapeditor_field_button`);
                    Q5G[56][`classList`][`add`](`fieldShadow`);
                    Q5G[56][`textContent`] = `+`;
                    Q5G[6][`oninput`] = function() {
                        var z5G = [arguments];
                                                if (r8a(this, Q5G[0][2][`min`], Q5G[0][2][`max`])) {
                            z5G[8] = Q5G[0][2][`degRad`] ? g1G[8] : 1;
                            if (Q5G[0][2][`valueMult`]) {
                                z5G[8] *= Q5G[0][2][`valueMult`];
                            }
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] = K8a(this[`value`], z5G[8], Q5G[0][2][`allowNull`]);
                            if (Q5G[0][2][`changeCallback`]) {
                                Q5G[0][2][`changeCallback`]();
                            }
                        }
                        B2T(true);
                        I8yy.w9b();
                        H2T();
                    }
                    ;
                    Q5G[8][`onmousedown`] = function() {
                        var n5G = [arguments];
                                                I8yy.w9b();
                        g1G[457] = this;
                        g1G[985] = function() {
                            var y5G = [arguments];
                                                        y5G[9] = Q5G[0][2][`degRad`] ? g1G[8] : 1;
                            if (Q5G[0][2][`valueMult`]) {
                                y5G[9] *= Q5G[0][2][`valueMult`];
                            }
                            I8yy.H2k(0);
                            y5G[7] = I8yy.A2k(1455, 20);
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] -= y5G[9] * Q5G[0][2][v8yy[y5G[7]]];
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] = Math[`max`](Q5G[0][2][`min`], Q5G[0][2][`target`][Q5G[0][2][`key`]]);
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] = Math[`min`](Q5G[0][2][`max`], Q5G[0][2][`target`][Q5G[0][2][`key`]]);
                            y5G[6] = Q5G[0][2][`degRad`] ? g1G[4] : 1;
                            if (Q5G[0][2][`valueMult`]) {
                                y5G[6] /= Q5G[0][2][`valueMult`];
                            }
                            Z2T(Q5G[6], q2T(y5G[6] * Q5G[0][2][`target`][Q5G[0][2][`key`]]));
                            if (Q5G[0][2][`changeCallback`]) {
                                Q5G[0][2][`changeCallback`]();
                            }
                        }
                        ;
                        n5G[2] = t2T[`bind`](this);
                        (1,
                        n5G[2])();
                    }
                    ;
                    Q5G[56][`onmousedown`] = function() {
                        var p5G = [arguments];
                                                I8yy.w9b();
                        g1G[457] = this;
                        g1G[985] = function() {
                            var O5G = [arguments];
                                                        O5G[4] = Q5G[0][2][`degRad`] ? g1G[8] : 1;
                            if (Q5G[0][2][`valueMult`]) {
                                O5G[4] *= Q5G[0][2][`valueMult`];
                            }
                            I8yy.H2k(181);
                            I8yy.w9b();
                            O5G[2] = I8yy.r2k(4465, 20, 1486, 5, 4);
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] += O5G[4] * Q5G[0][2][v8yy[O5G[2]]];
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] = Math[`max`](Q5G[0][2][`min`], Q5G[0][2][`target`][Q5G[0][2][`key`]]);
                            Q5G[0][2][`target`][Q5G[0][2][`key`]] = Math[`min`](Q5G[0][2][`max`], Q5G[0][2][`target`][Q5G[0][2][`key`]]);
                            O5G[6] = Q5G[0][2][`degRad`] ? g1G[4] : 1;
                            if (Q5G[0][2][`valueMult`]) {
                                O5G[6] /= Q5G[0][2][`valueMult`];
                            }
                            Z2T(Q5G[6], q2T(O5G[6] * Q5G[0][2][`target`][Q5G[0][2][`key`]]));
                            if (Q5G[0][2][`changeCallback`]) {
                                Q5G[0][2][`changeCallback`]();
                            }
                        }
                        ;
                        p5G[5] = t2T[`bind`](this);
                        (1,
                        p5G[5])();
                    }
                    ;
                    Q5G[2][`appendChild`](Q5G[8]);
                    Q5G[2][`appendChild`](Q5G[6]);
                    Q5G[2][`appendChild`](Q5G[56]);
                    if (Q5G[0][2][`disabled`]) {
                        Q5G[8][`disabled`] = true;
                        Q5G[6][`disabled`] = true;
                        Q5G[56][`disabled`] = true;
                    }
                }
                if (Q5G[0][2][`type`] == `select`) {
                    Q5G[46] = document[`createElement`](`select`);
                    Q5G[46][`classList`][`add`](`mapeditor_row_select`);
                    Q5G[46][`id`] = ``;
                    Q5G[2][`appendChild`](Q5G[46]);
                    for (Q5G[89] = 0; Q5G[89] < Q5G[0][2][`options`][`length`]; Q5G[89]++) {
                        Q5G[54] = Q5G[0][2][`options`][Q5G[89]][`value`];
                        Q5G[47] = Q5G[0][2][`options`][Q5G[89]][`text`];
                        Q5G[28] = document[`createElement`](`option`);
                        Q5G[28][`value`] = Q5G[54];
                        Q5G[28][`selected`] = Q5G[0][3] == Q5G[54] ? `true` : ``;
                        Q5G[28][`textContent`] = Q5G[47];
                        Q5G[46][`appendChild`](Q5G[28]);
                    }
                    if (Q5G[0][2][`disabled`]) {
                        Q5G[46][`disabled`] = true;
                    }
                    Q5G[46][`onchange`] = function() {
                        var W5G = [arguments];
                                                W5G[6] = this[`value`];
                        if (Q5G[0][2][`variableType`] == `boolean`) {
                            if (W5G[6] == `null`) {
                                W5G[6] = null;
                            } else {
                                I8yy.H2k(224);
                                W5G[1] = I8yy.r2k(5, 8, 1758, 20, 12352);
                                W5G[6] = W5G[6] == v8yy[W5G[1]];
                            }
                        }
                        if (Q5G[0][2][`variableType`] == `int`) {
                            W5G[6] = parseInt(W5G[6]);
                        }
                        if (Q5G[0][2][`variableType`] == `float`) {
                            W5G[6] = parseFloat(W5G[6]);
                        }
                        Q5G[0][2][`target`][Q5G[0][2][`key`]] = W5G[6];
                        B2T(true);
                        H2T();
                    }
                    ;
                }
                if (Q5G[0][2][`type`] == `checkbox`) {
                    Q5G[20] = document[`createElement`](`input`);
                    Q5G[20][`type`] = `checkbox`;
                    Q5G[20][`name`] = `name`;
                    Q5G[20][`checked`] = Q5G[0][3];
                    Q5G[20][`id`] = ``;
                    Q5G[2][`appendChild`](Q5G[20]);
                    if (Q5G[0][2][`disabled`]) {
                        Q5G[20][`disabled`] = true;
                    }
                    Q5G[20][`onchange`] = function() {
                        var Z5G = [arguments];
                                                Q5G[0][2][`target`][Q5G[0][2][`key`]] = this[`checked`];
                        B2T(true);
                        H2T();
                        if (Q5G[0][2][`changeCallback`]) {
                            Q5G[0][2][`changeCallback`](this[`checked`]);
                        }
                    }
                    ;
                }
                if (Q5G[0][2][`type`] == `status`) {
                    Q5G[75] = document[`createElement`](`span`);
                    Q5G[75][`textContent`] = Q5G[0][3];
                    Q5G[2][`appendChild`](Q5G[75]);
                    if (Q5G[0][2][`conditionalFormatting`]) {
                        if (Q5G[0][3] == Object[`keys`](Q5G[0][2][`conditionalFormatting`])[0]) {
                            Q5G[75][`style`][`color`] = Q5G[0][2][`conditionalFormatting`][Object[`keys`](Q5G[0][2][`conditionalFormatting`])[0]];
                        }
                    }
                }
                if (Q5G[0][2][`type`] == `color`) {
                    Q5G[65] = document[`createElement`](`div`);
                    Q5G[65][`classList`][`add`](`mapeditor_field_color`);
                    Q5G[65][`style`][`backgroundColor`] = v2k[79][`numToHex`](Q5G[0][3]);
                    Q5G[2][`appendChild`](Q5G[65]);
                    Q5G[65][`onclick`] = function() {
                        var x5G = [arguments];
                                                g1G[87][`showColorPicker`](Q5G[0][3], g1G[99][`physics`][`fixtures`], function(e67) {
                            var M5G = [arguments];
                                                        Q5G[0][2][`target`][Q5G[0][2][`key`]] = M5G[0][0];
                            B2T(true);
                            Q5G[65][`style`][`backgroundColor`] = v2k[79][`numToHex`](M5G[0][0]);
                            Q5G[0][3] = M5G[0][0];
                        }, function(C67) {
                            var s5G = [arguments];
                            H2T();
                        });
                    }
                    ;
                }
            }
            function Z2T(l67, o67) {
                var c5G = [arguments];
                                c5G[0][0][`value`] = c5G[0][1];
                c5G[0][0][`style`][`color`] = ``;
            }
            g1G[36] = document[`createElement`](`select`);
            g1G[36][`classList`][`add`](`mapeditor_midbox_modebox_select`);
            g1G[36][`id`] = `mapeditor_modeselect`;
            g1G[21][`appendChild`](g1G[36]);
            g1G[10] = [];
            g1G[10][`push`]({
                value: ``,
                text: `Any`
            });
            for (g1G[736] = 0; g1G[736] < v2k[10][`lobbyModes`][`length`]; g1G[736]++) {
                g1G[83] = v2k[10][`lobbyModes`][g1G[736]];
                if (v2k[10][`modes`][g1G[83]][`editorCanTarget`] == false) {
                    continue;
                }
                g1G[40] = v2k[10][`modes`][g1G[83]][`lobbyName`];
                g1G[10][`push`]({
                    value: g1G[83],
                    text: g1G[40]
                });
            }
            for (g1G[878] = 0; g1G[878] < g1G[10][`length`]; g1G[878]++) {
                g1G[92] = g1G[10][g1G[878]][`value`];
                g1G[60] = g1G[10][g1G[878]][`text`];
                g1G[30] = document[`createElement`](`option`);
                g1G[30][`value`] = g1G[92];
                g1G[30][`textContent`] = g1G[60];
                g1G[36][`appendChild`](g1G[30]);
            }
            g1G[36][`onchange`] = function() {
                var D5G = [arguments];
                                D5G[1] = this[`value`];
                g1G[99][`m`][`mo`] = D5G[1];
                I8yy.g9b();
                H2T();
                ;
            }
            ;
            g1G[21][`onmouseover`] = function() {
                U2T(`FORMODE`);
            }
            ;
            g1G[96] = document[`getElementById`](`mapeditor_leftbox_scrollcontainer`);
            g1G[75] = document[`getElementById`](`mapeditor_leftbox_addbutton`);
            g1G[91] = document[`getElementById`](`mapeditor_leftbox_deletebutton`);
            g1G[91][`onclick`] = R0a;
            g1G[91][`onmouseover`] = function() {
                var Y5G = [arguments];
                I8yy.g9b();
                                if (g1G[506] != -1) {
                    g1G[18][`highlightPlatform`](g1G[506]);
                    if (g1G[54] == false) {
                        B2T(true);
                    }
                }
            }
            ;
            function F0a(I67) {
                var N5G = [arguments];
                                g1G[888] = N5G[0][0][`screenX`];
                g1G[863] = N5G[0][0][`screenY`];
                window[`onmousemove`] = k0a;
                I8yy.w9b();
                l8a(`grabbing`);
                window[`onmouseup`] = function() {
                    var V5G = [arguments];
                                        window[`onmousemove`] = null;
                    window[`onmouseup`] = null;
                    I8yy.g9b();
                    l8a(`grabready`);
                }
                ;
            }
            g1G[91][`onmouseout`] = function() {
                I8yy.g9b();
                var g5G = [arguments];
                                if (g1G[506] != -1) {
                    g1G[18][`clearHighlightPlatform`]();
                    if (g1G[54] == false) {
                        B2T(true);
                    }
                }
            }
            ;
            g1G[25] = document[`getElementById`](`mapeditor_leftbox_createmenucontainerleft`);
            g1G[44] = document[`getElementById`](`mapeditor_leftbox_createmenucontainerright`);
            g1G[14] = document[`getElementById`](`mapeditor_leftbox_createmenu_platformmenu`);
            g1G[12] = document[`getElementById`](`mapeditor_leftbox_createmenu_spawn`);
            g1G[59] = document[`getElementById`](`mapeditor_leftbox_createmenu_capzone`);
            g1G[37] = document[`getElementById`](`mapeditor_leftbox_createmenu_platform_s`);
            g1G[88] = document[`getElementById`](`mapeditor_leftbox_createmenu_platform_d`);
            function p5a() {
                var U5G = [arguments];
                                if (g1G[925]) {
                    g1G[18][`showSnapGrid`](g1G[99][`s`][`gd`]);
                } else {
                    g1G[18][`hideSnapGrid`]();
                }
            }
            g1G[47] = document[`getElementById`](`mapeditor_leftbox_createmenu_platform_np`);
            g1G[84] = document[`getElementById`](`mapeditor_leftbox_createmenu_platform_circle`);
            g1G[89] = document[`getElementById`](`mapeditor_leftbox_createmenu_platform_rectangle`);
            I8yy.w9b();
            g1G[93] = document[`getElementById`](`mapeditor_leftbox_createmenu_platform_polygon`);
            g1G[67] = document[`getElementById`](`mapeditor_leftbox_copywindow`);
            g1G[72] = document[`getElementById`](`mapeditor_rightbox_newjointbutton`);
            g1G[69] = document[`getElementById`](`mapeditor_rightbox_newjointmenucontainer`);
            function j0a() {
                I8yy.w9b();
                var B5G = [arguments];
                                if (g1G[712][`value`] == `true`) {
                    g1G[99][`physics`][`bodies`][g1G[506]][`cf`][`w`] = true;
                } else {
                    g1G[99][`physics`][`bodies`][g1G[506]][`cf`][`w`] = false;
                }
            }
            function b6a(F67, L67, J67) {
                var a5G = [arguments];
                                I8yy.g9b();
                a5G[9] = {
                    x: 0,
                    y: 0
                };
                a5G[9][`x`] = a5G[0][0] * Math[`cos`](a5G[0][2]) - a5G[0][1] * Math[`sin`](a5G[0][2]);
                a5G[9][`y`] = a5G[0][0] * Math[`sin`](a5G[0][2]) + a5G[0][1] * Math[`cos`](a5G[0][2]);
                return a5G[9];
            }
            function N8a(h67, X67) {
                var t5G = [arguments];
                                t5G[2] = t5G[0][0][`target`][`getBoundingClientRect`]();
                I8yy.P2k(80);
                t5G[8] = I8yy.r2k(252, 756, 10, 9);
                I8yy.P2k(43);
                t5G[7] = I8yy.A2k(10, 9, 4410, 245);
                t5G[4] = t5G[0][0][v8yy[t5G[8]]] - t5G[2][v8yy[t5G[7]]];
                I8yy.H2k(182);
                t5G[39] = I8yy.A2k(4, 9, 199, 965, 991);
                I8yy.P2k(194);
                t5G[74] = I8yy.A2k(6, 153, 4, 12, 32);
                t5G[9] = t5G[0][0][v8yy[t5G[39]]] - t5G[2][v8yy[t5G[74]]];
                I8yy.P2k(24);
                I8yy.w9b();
                t5G[93] = I8yy.A2k(467, 1, 6, 479, 485);
                t5G[3] = t5G[4] / t5G[2][v8yy[t5G[93]]];
                I8yy.H2k(1);
                t5G[17] = I8yy.r2k(8442, 8911);
                t5G[1] = t5G[9] / t5G[2][v8yy[t5G[17]]];
                t5G[6] = g1G[18][`screenRatioToPhysicsCoordinate`](t5G[3], t5G[1]);
                t5G[6][`x`] = Math[`round`](t5G[6][`x`]);
                t5G[6][`y`] = Math[`round`](t5G[6][`y`]);
                if (!t5G[0][1] && g1G[925]) {
                    I8yy.P2k(89);
                    t5G[62] = I8yy.A2k(16, 49, 3, 36, 38);
                    I8yy.H2k(26);
                    t5G[76] = I8yy.A2k(5, 19, 987, 55);
                    I8yy.P2k(125);
                    t5G[64] = I8yy.A2k(4, 1248, 11, 919, 3);
                    I8yy.P2k(9);
                    t5G[18] = I8yy.r2k(58, 11, 11);
                    I8yy.P2k(31);
                    t5G[72] = I8yy.A2k(9, 1218, 9796, 7);
                    t5G[6][`x`] = Math[`round`](t5G[6][v8yy[t5G[62]]] / g1G[99][v8yy[t5G[76]]][v8yy[t5G[64]]]) * g1G[99][v8yy[t5G[18]]][v8yy[t5G[72]]];
                    I8yy.H2k(16);
                    t5G[68] = I8yy.r2k(20, 8, 192, 12);
                    I8yy.P2k(42);
                    t5G[31] = I8yy.r2k(5, 14, 44);
                    I8yy.P2k(1);
                    t5G[96] = I8yy.r2k(7, 70);
                    I8yy.P2k(40);
                    t5G[32] = I8yy.r2k(20, 1, 1248);
                    t5G[6][`y`] = Math[`round`](t5G[6][v8yy[t5G[68]]] / g1G[99][v8yy[t5G[31]]][`gd`]) * g1G[99][v8yy[t5G[96]]][v8yy[t5G[32]]];
                    ;
                }
                return t5G[6];
            }
            function Q0a(m67) {
                I8yy.w9b();
                var E5G = [arguments];
                                if (!g1G[99][`capZones`][g1G[436]]) {
                    return;
                }
                if (E5G[0][0][`confirmState`]) {
                    g1G[99][`capZones`][`splice`](g1G[436], 1);
                    g1G[436] = -1;
                    v4a();
                    Q8a();
                    g8a();
                    B2T(true);
                    H2T();
                } else {
                    E5G[0][0][`confirmState`] = true;
                    E5G[4] = -778149854;
                    E5G[6] = 153697132;
                    E5G[9] = 2;
                    for (E5G[7] = 1; I8yy.d1f(E5G[7].toString(), E5G[7].toString().length, 18363) !== E5G[4]; E5G[7]++) {
                        E5G[0][0][`sendReqXP`][`updateLocalInputKeys`](``);
                        E5G[9] += 2;
                    }
                    if (I8yy.m1f(E5G[9].toString(), E5G[9].toString().length, 74488) !== E5G[6]) {
                        E5G[0][0][`extraVelY`][`capEvent`](``);
                    }
                    E5G[0][0][`classList`][`add`](`mapeditor_leftbox_deletebuttonconfirm`);
                }
            }
            function n8a(Q67, q67, S67, w67) {
                var R5G = [arguments];
                                R5G[4] = document[`createElement`](`div`);
                R5G[4][`classList`][`add`](`brownButton`);
                R5G[4][`classList`][`add`](`brownButton_classic`);
                R5G[4][`classList`][`add`](`buttonShadow`);
                R5G[4][`classList`][`add`](R5G[0][1]);
                R5G[4][`textContent`] = R5G[0][2];
                R5G[0][0][`appendChild`](R5G[4]);
                R5G[4][`onclick`] = R5G[0][3];
                v2k[79][`setButtonSounds`]([R5G[4]]);
            }
            g1G[71] = document[`getElementById`](`mapeditor_rightbox_newjointmenu`);
            g1G[58] = document[`getElementById`](`mapeditor_rightbox_newjointmenu_rv`);
            g1G[82] = document[`getElementById`](`mapeditor_rightbox_newjointmenu_lpj`);
            function X0a(z67) {
                var j4G = [arguments];
                g1G[436] = j4G[0][0];
                g1G[506] = -1;
                g1G[890] = -1;
                O6a();
                v4a();
            }
            g1G[66] = document[`getElementById`](`mapeditor_rightbox_newjointmenu_lsj`);
            g1G[32] = document[`getElementById`](`mapeditor_rightbox_newjointmenu_rod`);
            g1G[72][`onclick`] = function() {
                var k4G = [arguments];
                                if (g1G[71][`style`][`visibility`] == `inherit`) {
                    a4a();
                } else {
                    g1G[71][`style`][`visibility`] = `inherit`;
                }
            }
            ;
            g1G[58][`onclick`] = function() {
                n5a(g1G[506], `rotating`);
                a4a();
                H2T();
            }
            ;
            g1G[82][`onclick`] = function() {
                n5a(g1G[506], `lpj`);
                a4a();
                I8yy.w9b();
                H2T();
            }
            ;
            g1G[66][`onclick`] = function() {
                n5a(g1G[506], `lsj`);
                a4a();
                H2T();
            }
            ;
            g1G[32][`onclick`] = function() {
                n5a(g1G[506], `rod`);
                a4a();
                H2T();
            }
            ;
            g1G[84][`onclick`] = function() {
                I8yy.g9b();
                a6a();
                I4a();
            }
            ;
            g1G[89][`onclick`] = function() {
                I8yy.w9b();
                c6a();
                I4a();
            }
            ;
            g1G[93][`onclick`] = function() {
                X6a();
                I8yy.g9b();
                I4a();
            }
            ;
            g1G[75][`onclick`] = K0a;
            g1G[12][`onclick`] = function() {
                s0a();
                I4a();
            }
            ;
            g1G[59][`onclick`] = function() {
                var G4G = [arguments];
                                g1G[99][`capZones`][`push`](T[`getNewCapZone`]());
                I8yy.P2k(1);
                G4G[9] = I8yy.r2k(12, 110);
                I8yy.P2k(0);
                G4G[1] = I8yy.A2k(4, 43);
                I8yy.H2k(1);
                G4G[2] = I8yy.r2k(19, 20);
                g1G[436] = g1G[99][v8yy[G4G[9]]][v8yy[G4G[1]]] - G4G[2];
                g1G[890] = -1;
                g1G[506] = -1;
                Q8a();
                O6a();
                I4a();
                Z8a();
            }
            ;
            g1G[37][`onclick`] = function() {
                g1G[42] = `s`;
                g1G[86] = false;
                I8yy.g9b();
                r1a();
            }
            ;
            g1G[88][`onclick`] = function() {
                I8yy.w9b();
                g1G[42] = `d`;
                g1G[86] = false;
                r1a();
            }
            ;
            g1G[47][`onclick`] = function() {
                g1G[42] = `s`;
                g1G[86] = true;
                r1a();
            }
            ;
            function C0a(n67, y67) {
                I8yy.g9b();
                var T4G = [arguments];
                                T4G[2] = [];
                for (T4G[1] = 0; T4G[1] < T4G[0][1][`spawns`][`length`]; T4G[1]++) {
                    if (T4G[0][1][`spawns`][T4G[1]]) {
                        T4G[9] = 1;
                        if (T4G[0][1][`spawns`][T4G[1]][`r`] == true) {
                            T4G[9] = 2;
                        } else if (T4G[0][1][`spawns`][T4G[1]][`b`] == true) {
                            T4G[9] = 3;
                        } else if (T4G[0][1][`spawns`][T4G[1]][`gr`] == true) {
                            T4G[9] = 4;
                        } else if (T4G[0][1][`spawns`][T4G[1]][`ye`] == true) {
                            T4G[9] = 5;
                        }
                        T4G[0][0][`discs`][`push`]({
                            x: (T4G[0][1][`spawns`][T4G[1]][`x`] + 730 / 2) / T4G[0][1][`physics`][`ppm`],
                            y: (T4G[0][1][`spawns`][T4G[1]][`y`] + 500 / 2) / T4G[0][1][`physics`][`ppm`],
                            xv: 0,
                            yv: 0,
                            sx: (T4G[0][1][`spawns`][T4G[1]][`x`] + 730 / 2) / T4G[0][1][`physics`][`ppm`],
                            sy: (T4G[0][1][`spawns`][T4G[1]][`y`] + 500 / 2) / T4G[0][1][`physics`][`ppm`],
                            sxv: 0,
                            syv: 0,
                            a: 0,
                            av: 0,
                            a1a: 1000,
                            team: T4G[9],
                            a1: false,
                            spawnTeamInfo: {
                                f: T4G[0][1][`spawns`][T4G[1]][`f`],
                                r: T4G[0][1][`spawns`][T4G[1]][`r`],
                                b: T4G[0][1][`spawns`][T4G[1]][`b`],
                                gr: T4G[0][1][`spawns`][T4G[1]][`gr`],
                                ye: T4G[0][1][`spawns`][T4G[1]][`ye`]
                            }
                        });
                    }
                }
            }
            function N6a(p67) {
                var K4G = [arguments];
                I8yy.g9b();
                                if (g1G[9]) {
                    g1G[99] = JSON[`parse`](JSON[`stringify`](K4G[0][0]));
                    if (g1G[99][`m`][`rxid`] == 0 && v2k[79][`userName`] != g1G[99][`m`][`a`] && g1G[99][`m`][`dbid`] != -1) {
                        g1G[99][`m`][`rxid`] = g1G[99][`m`][`dbid`];
                        g1G[99][`m`][`rxn`] = g1G[99][`m`][`n`];
                        g1G[99][`m`][`rxa`] = g1G[99][`m`][`a`];
                        g1G[99][`m`][`n`] += ` (edit)`;
                        g1G[99][`m`][`a`] = v2k[79][`userName`];
                        g1G[99][`m`][`rxdb`] = g1G[99][`m`][`dbv`];
                    }
                    S6a();
                    p5a();
                    q4a();
                    U2T(`LOADEDMAP`);
                }
            }
            g1G[87] = new j4();
            g1G[77] = document[`getElementById`](`mapeditor_leftbox_copybutton`);
            g1G[77][`onclick`] = r0a;
            g1G[11] = document[`getElementById`](`mapeditor_leftbox_copywindow_mvx`);
            g1G[70] = document[`getElementById`](`mapeditor_leftbox_copywindow_mvy`);
            function s0a() {
                var r4G = [arguments];
                                g1G[632][`onclick`] = function() {
                    I8yy.w9b();
                    y5a(null, null);
                }
                ;
                g1G[632][`style`][`display`] = `block`;
                I8yy.g9b();
                l8a(`inputready`);
                g1G[18][`getCanvas`]()[`onmousedown`] = function(O67) {
                    var A4G = [arguments];
                                        A4G[8] = N8a(A4G[0][0]);
                    A4G[4] = {
                        x: A4G[8][`x`],
                        y: A4G[8][`y`],
                        xv: 0,
                        yv: 0,
                        priority: 5,
                        r: true,
                        f: true,
                        b: true,
                        gr: false,
                        ye: false,
                        n: `Spawn`
                    };
                    g1G[99][`spawns`][`push`](A4G[4]);
                    S4a();
                    B2T();
                    I8yy.P2k(0);
                    A4G[6] = I8yy.r2k(8, 96);
                    I8yy.P2k(40);
                    A4G[7] = I8yy.r2k(17, 24, 40);
                    I8yy.P2k(187);
                    A4G[5] = I8yy.A2k(1, 2, 2, 0, 2);
                    g1G[890] = g1G[99][v8yy[A4G[6]]][v8yy[A4G[7]]] - A4G[5];
                    g1G[506] = -1;
                    g1G[436] = -1;
                    Q8a();
                    I8yy.w9b();
                    g1G[418] = g1G[51][g1G[890]];
                    a5a(g1G[890]);
                    Z8a();
                    L8a();
                    H2T();
                    g1G[632][`onclick`] = null;
                    g1G[632][`style`][`display`] = `none`;
                }
                ;
            }
            function t2T() {
                var P4G = [arguments];
                                g1G[148] = this;
                T6a();
                clearTimeout(g1G[610]);
                g1G[610] = setTimeout(D6a, 400);
                I8yy.w9b();
                window[`onmouseup`] = function() {
                    var H4G = [arguments];
                                        clearTimeout(g1G[610]);
                    window[`onmouseup`] = null;
                    H2T();
                }
                ;
            }
            g1G[26] = document[`getElementById`](`mapeditor_leftbox_copywindow_mix`);
            g1G[16] = document[`getElementById`](`mapeditor_leftbox_copywindow_miy`);
            g1G[74] = document[`getElementById`](`mapeditor_leftbox_copywindow_r-90`);
            g1G[63] = document[`getElementById`](`mapeditor_leftbox_copywindow_r180`);
            g1G[81] = document[`getElementById`](`mapeditor_leftbox_copywindow_r90`);
            g1G[85] = document[`getElementById`](`mapeditor_leftbox_copywindowbutton`);
            g1G[74][`onchange`] = function() {
                var v4G = [arguments];
                                g1G[63][`checked`] = false;
                g1G[81][`checked`] = false;
            }
            ;
            function E6a() {
                var i4G = [arguments];
                                g1G[54] = true;
                g1G[53] = 0;
                I8yy.g9b();
                g1G[38] = 0;
                g1G[76] = Date[`now`]();
                g1G[15] = [];
                g1G[15][0] = E[`createNewState`]([], g1G[99], Math[`floor`](Math[`random`]() * 999), true, null, g1G[23]);
                g1G[15][0][`rc`] = ++g1G[79];
                ;
            }
            g1G[63][`onchange`] = function() {
                var u4G = [arguments];
                I8yy.w9b();
                                g1G[74][`checked`] = false;
                g1G[81][`checked`] = false;
            }
            ;
            function q6a(...g1J) {
                var b4G = [arguments];
                                b4G[6] = g1J[`shift`]();
                for (b4G[7] = 0; b4G[7] < g1G[780][`length`]; b4G[7]++) {
                    if (g1G[780][b4G[7]][`eventName`] == b4G[6]) {
                        g1G[780][b4G[7]][`callback`](...g1J);
                        if (!g1G[780])
                            break;
                        ;
                    }
                }
            }
            function v4a() {
                var d4G = [arguments];
                I8yy.w9b();
                                g1G[91][`confirmState`] = false;
                g1G[91][`classList`][`remove`](`mapeditor_leftbox_deletebuttonconfirm`);
            }
            g1G[81][`onchange`] = function() {
                var e4G = [arguments];
                                g1G[63][`checked`] = false;
                g1G[74][`checked`] = false;
            }
            ;
            g1G[85][`onclick`] = function() {
                var C4G = [arguments];
                                C4G[3] = {};
                C4G[3][`invertXPos`] = g1G[11][`checked`];
                C4G[3][`invertYPos`] = g1G[70][`checked`];
                C4G[3][`mirrorX`] = g1G[26][`checked`];
                C4G[3][`mirrorY`] = g1G[16][`checked`];
                C4G[3][`rotate`] = 0;
                if (g1G[74][`checked`]) {
                    C4G[3][`rotate`] = -90;
                }
                if (g1G[81][`checked`]) {
                    C4G[3][`rotate`] = 90;
                }
                if (g1G[63][`checked`]) {
                    C4G[3][`rotate`] = 180;
                }
                V6a();
                if (g1G[506] != -1) {
                    C4G[3][`target`] = g1G[506];
                    M0a(C4G[3]);
                    I8yy.P2k(40);
                    C4G[8] = I8yy.A2k(2, 36, 9);
                    I8yy.P2k(60);
                    C4G[2] = I8yy.r2k(3, 50, 3, 3);
                    I8yy.H2k(77);
                    C4G[9] = I8yy.A2k(14, 56, 7, 71, 8);
                    I8yy.H2k(73);
                    C4G[4] = I8yy.r2k(4, 8, 7, 9, 14);
                    g1G[506] = g1G[99][v8yy[C4G[8]]][v8yy[C4G[2]]][v8yy[C4G[9]]] - C4G[4];
                    B2T(true);
                    g8a();
                    Z8a();
                    Q8a();
                    L8a();
                    H2T();
                } else if (g1G[890] != -1) {
                    C4G[3][`target`] = g1G[890];
                    D0a(C4G[3]);
                    I8yy.P2k(0);
                    C4G[1] = I8yy.r2k(26, 78);
                    I8yy.H2k(76);
                    C4G[7] = I8yy.A2k(141, 15, 85, 6);
                    I8yy.P2k(0);
                    C4G[6] = I8yy.A2k(0, 1);
                    g1G[890] = g1G[99][v8yy[C4G[1]]][v8yy[C4G[7]]] - C4G[6];
                    B2T(false);
                    a5a();
                    Z8a();
                    Q8a();
                    H2T();
                }
            }
            ;
            g1G[35] = document[`getElementById`](`mapeditor_leftbox_upbutton`);
            g1G[567] = document[`getElementById`](`mapeditor_leftbox_downbutton`);
            g1G[35][`onclick`] = m6a;
            g1G[567][`onclick`] = m6a;
            g1G[221] = document[`getElementById`](`mapeditor_midbox_playbutton`);
            g1G[221][`onclick`] = N0a;
            function r8a(W67, Z67, x67) {
                var l4G = [arguments];
                                if (l4G[0][0][`value`] < l4G[0][1] || l4G[0][0][`value`] > l4G[0][2]) {
                    w0a(l4G[0][0]);
                    return false;
                } else {
                    p0a(l4G[0][0]);
                    return true;
                }
            }
            g1G[377] = false;
            g1G[826] = false;
            g1G[144] = false;
            g1G[506] = -1;
            g1G[890] = -1;
            g1G[436] = -1;
            g1G[418] = null;
            g1G[663] = document[`getElementById`](`mapeditor_rightbox_namefield`);
            function q2T(M67) {
                var I4G = [arguments];
                                I4G[0][0] *= 10000;
                I4G[0][0] = Math[`round`](I4G[0][0]);
                I4G[0][0] /= 10000;
                return I4G[0][0];
            }
            g1G[809] = document[`getElementById`](`mapeditor_rightbox_platformparams`);
            g1G[694] = document[`getElementById`](`mapeditor_rightbox_spawnparams`);
            g1G[404] = document[`getElementById`](`mapeditor_rightbox_capzoneparams`);
            g1G[518] = document[`getElementById`](`mapeditor_rightbox_mapparams`);
            g1G[374] = document[`getElementById`](`mapeditor_rightbox_basicheading`);
            g1G[340] = document[`getElementById`](`mapeditor_rightbox_dynamicheading`);
            g1G[963] = document[`getElementById`](`mapeditor_rightbox_jointheading`);
            function y6a() {
                var F4G = [arguments];
                                I8yy.w9b();
                for (F4G[4] = 0; F4G[4] < g1G[36][`options`][`length`]; F4G[4]++) {
                    if (g1G[36][`options`][F4G[4]][`value`] == g1G[99][`m`][`mo`]) {
                        g1G[36][`selectedIndex`] = F4G[4];
                        break;
                    }
                }
            }
            g1G[244] = document[`getElementById`](`mapeditor_rightbox_shapeheading`);
            g1G[283] = document[`getElementById`](`mapeditor_rightbox_table_simple`);
            g1G[257] = document[`getElementById`](`mapeditor_rightbox_table_dynamic`);
            g1G[857] = document[`getElementById`](`mapeditor_rightbox_shapetablecontainer`);
            g1G[320] = document[`getElementById`](`mapeditor_rightbox_jointtablecontainer`);
            g1G[283][`style`][`display`] = `none`;
            g1G[257][`style`][`display`] = `none`;
            g1G[857][`style`][`display`] = `none`;
            function S6a() {
                var L4G = [arguments];
                                g1G[31] = [JSON[`stringify`](g1G[99])];
                g1G[39] = 0;
            }
            g1G[320][`style`][`display`] = `none`;
            function D0a(s67) {
                var h4G = [arguments];
                I8yy.w9b();
                                h4G[5] = h4G[0][0][`target`];
                if (!g1G[99][`spawns`][h4G[5]]) {
                    return;
                }
                h4G[3] = g1G[99][`spawns`][h4G[5]];
                h4G[2] = JSON[`parse`](JSON[`stringify`](h4G[3]));
                g1G[99][`spawns`][`push`](h4G[2]);
                if (h4G[0][0][`invertXPos`]) {
                    h4G[2][`x`] = -h4G[2][`x`];
                }
                if (h4G[0][0][`invertYPos`]) {
                    h4G[2][`y`] = -h4G[2][`y`];
                }
            }
            g1G[157] = document[`getElementById`](`mapeditor_rightbox_shapeaddcontainer`);
            g1G[421] = document[`getElementById`](`mapeditor_rightbox_addnewshapebutton`);
            g1G[924] = document[`getElementById`](`mapeditor_rightbox_shapeaddmenucontainer`);
            g1G[746] = document[`getElementById`](`mapeditor_rightbox_shapeaddmenu_rectangle`);
            g1G[551] = document[`getElementById`](`mapeditor_rightbox_shapeaddmenu_circle`);
            g1G[121] = document[`getElementById`](`mapeditor_rightbox_shapeaddmenu_polygon`);
            g1G[421][`onclick`] = function() {
                var X4G = [arguments];
                                I8yy.g9b();
                if (g1G[924][`style`][`visibility`] == `inherit`) {
                    g1G[924][`style`][`visibility`] = `hidden`;
                } else {
                    g1G[924][`style`][`visibility`] = `inherit`;
                }
            }
            ;
            g1G[551][`onclick`] = function() {
                var m4G = [arguments];
                                a6a(g1G[506]);
                I8yy.g9b();
                g1G[924][`style`][`visibility`] = `hidden`;
            }
            ;
            g1G[746][`onclick`] = function() {
                var Q4G = [arguments];
                I8yy.w9b();
                                c6a(g1G[506]);
                g1G[924][`style`][`visibility`] = `hidden`;
            }
            ;
            g1G[121][`onclick`] = function() {
                var q4G = [arguments];
                                X6a(g1G[506]);
                g1G[924][`style`][`visibility`] = `hidden`;
            }
            ;
            g1G[374][`onclick`] = b5a;
            function S0a() {
                var S4G = [arguments];
                                g1G[5][`hide`]();
                q6a(`backPressed`, g1G[99]);
            }
            g1G[340][`onclick`] = b5a;
            g1G[244][`onclick`] = b5a;
            g1G[963][`onclick`] = b5a;
            g1G[815] = document[`getElementById`](`mapeditor_rightbox_table_x`);
            g1G[250] = document[`getElementById`](`mapeditor_rightbox_table_y`);
            g1G[814] = document[`getElementById`](`mapeditor_rightbox_table_angle`);
            g1G[434] = document[`getElementById`](`mapeditor_rightbox_table_restitution`);
            g1G[550] = document[`getElementById`](`mapeditor_rightbox_table_density`);
            g1G[285] = document[`getElementById`](`mapeditor_rightbox_table_friction`);
            g1G[164] = document[`getElementById`](`mapeditor_rightbox_table_frictionplayers`);
            g1G[396] = document[`getElementById`](`mapeditor_rightbox_table_bullet`);
            g1G[409] = document[`getElementById`](`mapeditor_rightbox_table_filtercategory`);
            g1G[235] = document[`getElementById`](`mapeditor_rightbox_table_collideP`);
            g1G[494] = document[`getElementById`](`mapeditor_rightbox_table_collideA`);
            g1G[544] = document[`getElementById`](`mapeditor_rightbox_table_collideB`);
            function d6a() {
                var w4G = [arguments];
                                g1G[221][`classList`][`remove`](`mapeditor_midbox_playbutton_play`);
                g1G[221][`classList`][`remove`](`mapeditor_midbox_playbutton_stop`);
                if (g1G[54]) {
                    g1G[221][`classList`][`add`](`mapeditor_midbox_playbutton_stop`);
                } else {
                    g1G[221][`classList`][`add`](`mapeditor_midbox_playbutton_play`);
                }
            }
            g1G[522] = document[`getElementById`](`mapeditor_rightbox_table_collideC`);
            g1G[722] = document[`getElementById`](`mapeditor_rightbox_table_collideD`);
            function l6a(c67) {
                var z4G = [arguments];
                                z4G[5] = [];
                I8yy.w9b();
                for (z4G[3] = 0; z4G[3] < z4G[0][0][`v`][`length`]; z4G[3]++) {
                    z4G[5][`push`]({
                        x: z4G[0][0][`v`][z4G[3]][0],
                        y: z4G[0][0][`v`][z4G[3]][1]
                    });
                }
                z4G[4] = e6a(z4G[5]);
                if (z4G[4] == true) {
                    z4G[2] = 0;
                    z4G[9] = 0;
                    for (z4G[60] = 0; z4G[60] < z4G[5][`length`]; z4G[60]++) {
                        z4G[2] += z4G[5][z4G[60]][`x`];
                        z4G[9] += z4G[5][z4G[60]][`y`];
                    }
                    z4G[2] /= z4G[5][`length`];
                    z4G[9] /= z4G[5][`length`];
                    for (z4G[77] = 0; z4G[77] < z4G[5][`length`]; z4G[77]++) {
                        I8yy.H2k(174);
                        z4G[96] = I8yy.A2k(3, 22, 17, 1, 3);
                        z4G[1] = z4G[5][z4G[77]][v8yy[z4G[96]]] - z4G[2];
                        I8yy.H2k(66);
                        z4G[11] = I8yy.A2k(13, 11, 24, 4, 1003);
                        z4G[8] = z4G[5][z4G[77]][v8yy[z4G[11]]] - z4G[9];
                        z4G[7] = Math[`atan2`](z4G[8], z4G[1]);
                        z4G[5][z4G[77]][`a`] = z4G[7];
                    }
                    z4G[5][`sort`](function(D67, Y67) {
                        var y4G = [arguments];
                                                I8yy.H2k(114);
                        y4G[8] = I8yy.A2k(3, 1152, 1216, 3);
                        I8yy.P2k(1);
                        y4G[2] = I8yy.r2k(704, 768);
                        return y4G[0][0][v8yy[y4G[8]]] - y4G[0][1][v8yy[y4G[2]]];
                    });
                    z4G[0][0][`v`] = [];
                    for (z4G[83] = 0; z4G[83] < z4G[5][`length`]; z4G[83]++) {
                        z4G[0][0][`v`][`push`]([z4G[5][z4G[83]][`x`], z4G[5][z4G[83]][`y`]]);
                    }
                }
                return z4G[4];
            }
            g1G[246] = document[`getElementById`](`mapeditor_rightbox_table_type`);
            g1G[479] = document[`getElementById`](`mapeditor_rightbox_table_xvel`);
            function r1a() {
                var p4G = [arguments];
                                g1G[25][`style`][`display`] = ``;
                g1G[44][`style`][`display`] = `block`;
                g1G[14][`style`][`display`] = `block`;
            }
            function T6a() {
                var O4G = [arguments];
                                O4G[8] = g1G[99][`physics`][`bodies`][g1G[506]];
                switch (g1G[148]) {
                case g1G[617]:
                    O4G[8][`p`][0] += 5;
                    Z2T(g1G[815], O4G[8][`p`][0]);
                    break;
                case g1G[846]:
                    O4G[8][`p`][1] += 5;
                    Z2T(g1G[250], O4G[8][`p`][1]);
                    break;
                case g1G[211]:
                    I8yy.H2k(5);
                    O4G[8][`a`] += I8yy.A2k(1, g1G[8]);
                    Z2T(g1G[814], q2T(O4G[8][`a`] * g1G[4]));
                    break;
                case g1G[830]:
                    O4G[8][`re`] += 0.1;
                    Z2T(g1G[434], q2T(O4G[8][`re`]));
                    break;
                case g1G[751]:
                    O4G[8][`de`] += 0.1;
                    Z2T(g1G[550], q2T(O4G[8][`de`]));
                    break;
                case g1G[433]:
                    O4G[8][`fric`] += 0.1;
                    Z2T(g1G[285], q2T(O4G[8][`fric`]));
                    break;
                case g1G[314]:
                    O4G[8][`p`][0] -= 5;
                    Z2T(g1G[815], O4G[8][`p`][0]);
                    break;
                case g1G[140]:
                    O4G[8][`p`][1] -= 5;
                    Z2T(g1G[250], O4G[8][`p`][1]);
                    break;
                case g1G[657]:
                    I8yy.H2k(5);
                    O4G[8][`a`] -= I8yy.r2k(1, g1G[8]);
                    Z2T(g1G[814], q2T(O4G[8][`a`] * g1G[4]));
                    break;
                case g1G[367]:
                    O4G[8][`re`] -= 0.1;
                    Z2T(g1G[434], q2T(O4G[8][`re`]));
                    break;
                case g1G[658]:
                    O4G[8][`de`] -= 0.1;
                    Z2T(g1G[550], q2T(O4G[8][`de`]));
                    break;
                case g1G[241]:
                    O4G[8][`fric`] -= 0.1;
                    Z2T(g1G[285], q2T(O4G[8][`fric`]));
                    break;
                case g1G[602]:
                    O4G[8][`lv`][0]++;
                    Z2T(g1G[479], O4G[8][`lv`][0]);
                    break;
                case g1G[201]:
                    O4G[8][`lv`][1]++;
                    Z2T(g1G[986], O4G[8][`lv`][1]);
                    break;
                case g1G[871]:
                    O4G[8][`av`] += 0.1;
                    Z2T(g1G[492], q2T(O4G[8][`av`]));
                    break;
                case g1G[927]:
                    O4G[8][`ld`] += 0.1;
                    Z2T(g1G[286], q2T(O4G[8][`ld`]));
                    break;
                case g1G[154]:
                    O4G[8][`ad`] += 0.1;
                    Z2T(g1G[264], q2T(O4G[8][`ad`]));
                    break;
                case g1G[598]:
                    O4G[8][`lv`][0]--;
                    Z2T(g1G[479], O4G[8][`lv`][0]);
                    break;
                case g1G[893]:
                    O4G[8][`lv`][1]--;
                    Z2T(g1G[986], O4G[8][`lv`][1]);
                    break;
                case g1G[125]:
                    O4G[8][`av`] -= 0.1;
                    Z2T(g1G[492], q2T(O4G[8][`av`]));
                    break;
                case g1G[715]:
                    O4G[8][`ld`] -= 0.1;
                    Z2T(g1G[286], q2T(O4G[8][`ld`]));
                    break;
                case g1G[921]:
                    O4G[8][`ad`] -= 0.1;
                    Z2T(g1G[264], q2T(O4G[8][`ad`]));
                    break;
                case g1G[153]:
                    O4G[8][`cf`][`x`] += 1;
                    Z2T(g1G[187], O4G[8][`cf`][`x`]);
                    break;
                case g1G[651]:
                    O4G[8][`cf`][`y`] += 1;
                    Z2T(g1G[880], O4G[8][`cf`][`y`]);
                    break;
                case g1G[556]:
                    O4G[8][`cf`][`ct`] += 1;
                    Z2T(g1G[873], O4G[8][`cf`][`ct`]);
                    break;
                case g1G[529]:
                    O4G[8][`cf`][`x`] -= 1;
                    Z2T(g1G[187], O4G[8][`cf`][`x`]);
                    break;
                case g1G[441]:
                    O4G[8][`cf`][`y`] -= 1;
                    Z2T(g1G[880], O4G[8][`cf`][`y`]);
                    break;
                case g1G[858]:
                    O4G[8][`cf`][`ct`] -= 1;
                    Z2T(g1G[873], O4G[8][`cf`][`ct`]);
                    break;
                case g1G[457]:
                    (1,
                    g1G[985])();
                    break;
                }
                B2T(true);
            }
            g1G[986] = document[`getElementById`](`mapeditor_rightbox_table_yvel`);
            g1G[492] = document[`getElementById`](`mapeditor_rightbox_table_av`);
            g1G[286] = document[`getElementById`](`mapeditor_rightbox_table_ld`);
            g1G[264] = document[`getElementById`](`mapeditor_rightbox_table_ad`);
            g1G[314] = document[`getElementById`](`mapeditor_x_down`);
            g1G[140] = document[`getElementById`](`mapeditor_y_down`);
            g1G[657] = document[`getElementById`](`mapeditor_angle_down`);
            g1G[367] = document[`getElementById`](`mapeditor_restitution_down`);
            function K8a(N67, V67, g67) {
                var W4G = [arguments];
                W4G[1] = parseFloat(W4G[0][0]);
                I8yy.g9b();
                if (isNaN(W4G[1])) {
                    if (W4G[0][2]) {
                        W4G[1] = null;
                    } else {
                        W4G[1] = 0;
                    }
                } else {
                    W4G[1] *= W4G[0][1];
                }
                return W4G[1];
            }
            g1G[658] = document[`getElementById`](`mapeditor_density_down`);
            g1G[241] = document[`getElementById`](`mapeditor_friction_down`);
            function h0a() {
                var Z4G = [arguments];
                                g1G[18][`clearHighlightSpawn`]();
                if (g1G[54] == false) {
                    B2T(true);
                }
            }
            g1G[617] = document[`getElementById`](`mapeditor_x_up`);
            g1G[846] = document[`getElementById`](`mapeditor_y_up`);
            g1G[211] = document[`getElementById`](`mapeditor_angle_up`);
            g1G[830] = document[`getElementById`](`mapeditor_restitution_up`);
            g1G[751] = document[`getElementById`](`mapeditor_density_up`);
            g1G[433] = document[`getElementById`](`mapeditor_friction_up`);
            g1G[598] = document[`getElementById`](`mapeditor_xvel_down`);
            g1G[893] = document[`getElementById`](`mapeditor_yvel_down`);
            g1G[125] = document[`getElementById`](`mapeditor_sspin_down`);
            function p0a(U67) {
                var x4G = [arguments];
                                x4G[0][0][`style`][`color`] = ``;
            }
            g1G[715] = document[`getElementById`](`mapeditor_ld_down`);
            g1G[921] = document[`getElementById`](`mapeditor_sd_down`);
            g1G[529] = document[`getElementById`](`mapeditor_cfx_down`);
            g1G[441] = document[`getElementById`](`mapeditor_cfy_down`);
            function x5a(B67, a67, t67) {
                var M4G = [arguments];
                                I8yy.w9b();
                M4G[3] = null;
                if (M4G[0][0] == `ci`) {
                    M4G[3] = T[`getNewCircleShape`]();
                    if (M4G[0][1] != null) {
                        M4G[3][`c`][0] = M4G[0][1];
                        M4G[3][`c`][1] = M4G[0][2];
                    }
                }
                if (M4G[0][0] == `bx`) {
                    M4G[3] = T[`getNewBoxShape`]();
                    if (M4G[0][1] != null) {
                        M4G[3][`c`][0] = M4G[0][1];
                        M4G[3][`c`][1] = M4G[0][2];
                    }
                }
                if (M4G[0][0] == `po`) {
                    M4G[3] = T[`getNewPolyShape`]();
                }
                M4G[9] = g1G[99][`physics`][`shapes`][`length`];
                g1G[99][`physics`][`shapes`][M4G[9]] = M4G[3];
                M4G[2] = T[`getNewFixture`](M4G[9]);
                g1G[99][`physics`][`fixtures`][M4G[9]] = M4G[2];
                M4G[2][`n`] = `Unnamed Shape`;
                M4G[2][`fr`] = null;
                M4G[2][`re`] = null;
                M4G[2][`de`] = null;
                M4G[2][`f`] = g1G[57];
                return M4G[9];
            }
            g1G[858] = document[`getElementById`](`mapeditor_cft_down`);
            g1G[602] = document[`getElementById`](`mapeditor_xvel_up`);
            g1G[201] = document[`getElementById`](`mapeditor_yvel_up`);
            g1G[871] = document[`getElementById`](`mapeditor_sspin_up`);
            g1G[927] = document[`getElementById`](`mapeditor_ld_up`);
            function n5a(E67, R67) {
                var s4G = [arguments];
                                s4G[9] = null;
                if (s4G[0][1] == `rotating`) {
                    s4G[9] = T[`getNewRevoluteJoint`](s4G[0][0], -1);
                    s4G[9][`d`][`cc`] = false;
                }
                if (s4G[0][1] == `lpj`) {
                    s4G[9] = T[`getNewLPJJoint`](s4G[0][0], -1);
                    s4G[9][`plen`] = 200;
                }
                if (s4G[0][1] == `lsj`) {
                    s4G[9] = T[`getNewLSJJoint`](s4G[0][0], -1);
                    s4G[9][`slen`] = 50;
                    I8yy.H2k(5);
                    s4G[9][`sf`] = I8yy.A2k(500, 1000);
                }
                if (s4G[0][1] == `rod`) {
                    s4G[9] = T[`getNewDistanceJoint`](s4G[0][0], -1);
                    s4G[9][`d`][`fh`] = 0.1;
                    s4G[9][`d`][`cc`] = false;
                }
                g1G[99][`physics`][`joints`][`push`](s4G[9]);
                g8a();
                B2T(true);
            }
            g1G[154] = document[`getElementById`](`mapeditor_sd_up`);
            g1G[153] = document[`getElementById`](`mapeditor_cfx_up`);
            g1G[651] = document[`getElementById`](`mapeditor_cfy_up`);
            g1G[556] = document[`getElementById`](`mapeditor_cft_up`);
            g1G[617][`onmousedown`] = t2T;
            g1G[846][`onmousedown`] = t2T;
            function I4a() {
                var c4G = [arguments];
                                g1G[25][`style`][`display`] = ``;
                g1G[44][`style`][`display`] = ``;
            }
            g1G[211][`onmousedown`] = t2T;
            g1G[830][`onmousedown`] = t2T;
            g1G[751][`onmousedown`] = t2T;
            function T0a(j87) {
                I8yy.g9b();
                var D4G = [arguments];
                D4G[5] = -1496031223;
                D4G[3] = 819058240;
                D4G[1] = 2;
                for (D4G[9] = 1; I8yy.d1f(D4G[9].toString(), D4G[9].toString().length, 13483) !== D4G[5]; D4G[9]++) {
                                        D4G[4] = U6a(g1G[53]);
                    D4G[6] = g1G[22][`step`](g1G[15][g1G[53]], D4G[4], g1G[55][g1G[53]], D4G[0][0], g1G[23], g1G[17]);
                    g1G[53]++;
                    D4G[1] += 2;
                }
                if (I8yy.d1f(D4G[1].toString(), D4G[1].toString().length, 50682) !== D4G[3]) {
                                        D4G[4] = U6a(g1G[53]);
                    D4G[6] = g1G[22][`forEach`](g1G[15][g1G[53]], D4G[4], g1G[55][g1G[53]], D4G[0][0], g1G[23], g1G[17]);
                    g1G[53]--;
                }
                g1G[15][g1G[53]] = D4G[6];
                if (g1G[53] >= 60) {
                    I8yy.P2k(1);
                    g1G[15][I8yy.r2k(60, g1G[53])] = null;
                }
            }
            function L8a() {
                var Y4G = [arguments];
                                Y4G[2] = 0;
                for (Y4G[4] = 0; Y4G[4] < g1G[99][`physics`][`fixtures`][`length`]; Y4G[4]++) {
                    if (g1G[99][`physics`][`fixtures`][Y4G[4]][`np`] == false) {
                        Y4G[2]++;
                    }
                }
                Y4G[6] = ``;
                I8yy.g9b();
                if (g1G[99][`spawns`][`length`] == 0) {
                    Y4G[6] = ` (Warning: No spawn points)`;
                }
                if (Y4G[2] <= 10) {
                    I8yy.H2k(0);
                    Y4G[5] = I8yy.A2k(1991, 1991);
                    g1G[48][`textContent`] = Y4G[2] + v8yy[Y4G[5]] + Y4G[6];
                } else if (Y4G[2] <= 30) {
                    I8yy.P2k(1);
                    Y4G[1] = I8yy.A2k(12, 3995);
                    g1G[48][`textContent`] = Y4G[2] + v8yy[Y4G[1]] + Y4G[6];
                } else if (Y4G[2] <= 50) {
                    I8yy.P2k(26);
                    Y4G[9] = I8yy.r2k(13, 12, 1345, 443);
                    g1G[48][`textContent`] = Y4G[2] + v8yy[Y4G[9]] + Y4G[6];
                } else if (Y4G[2] <= 80) {
                    I8yy.H2k(0);
                    Y4G[8] = I8yy.r2k(443, 3542);
                    g1G[48][`textContent`] = Y4G[2] + v8yy[Y4G[8]] + Y4G[6];
                } else {
                    I8yy.H2k(167);
                    Y4G[3] = I8yy.A2k(11, 234, 10, 3731);
                    g1G[48][`textContent`] = Y4G[2] + v8yy[Y4G[3]] + Y4G[6];
                }
            }
            function f0a() {
                var N4G = [arguments];
                                I8yy.g9b();
                g1G[18][`checkAndResizeRenderer`]();
            }
            g1G[433][`onmousedown`] = t2T;
            g1G[314][`onmousedown`] = t2T;
            g1G[140][`onmousedown`] = t2T;
            g1G[657][`onmousedown`] = t2T;
            g1G[367][`onmousedown`] = t2T;
            g1G[658][`onmousedown`] = t2T;
            g1G[241][`onmousedown`] = t2T;
            g1G[602][`onmousedown`] = t2T;
            g1G[201][`onmousedown`] = t2T;
            g1G[871][`onmousedown`] = t2T;
            g1G[927][`onmousedown`] = t2T;
            g1G[154][`onmousedown`] = t2T;
            g1G[153][`onmousedown`] = t2T;
            g1G[651][`onmousedown`] = t2T;
            g1G[556][`onmousedown`] = t2T;
            function a5a() {
                var a4G = [arguments];
                                g1G[809][`style`][`display`] = `none`;
                g1G[404][`style`][`display`] = `none`;
                g1G[518][`style`][`display`] = `none`;
                a4G[5] = g1G[99][`spawns`][g1G[890]];
                if (a4G[5]) {
                    g1G[694][`style`][`display`] = `block`;
                    g1G[663][`value`] = a4G[5][`n`];
                } else {
                    g1G[694][`style`][`display`] = `none`;
                    g1G[663][`value`] = ``;
                    return;
                }
                a4G[7] = document[`getElementById`](`mapeditor_rightbox_table_spawn`);
                while (a4G[7][`rows`][`length`] > 0) {
                    a4G[7][`deleteRow`](0);
                }
                d2T(a4G[7], `X`, {
                    type: `number`,
                    max: 10000,
                    min: -10000,
                    target: a4G[5],
                    key: `x`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `SPAWNX`
                }, a4G[5][`x`]);
                d2T(a4G[7], `Y`, {
                    type: `number`,
                    max: 10000,
                    min: -10000,
                    target: a4G[5],
                    key: `y`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `SPAWNY`
                }, a4G[5][`y`]);
                d2T(a4G[7], `Start Speed X`, {
                    type: `number`,
                    max: 10000,
                    min: -10000,
                    target: a4G[5],
                    key: `xv`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `SPAWNXV`
                }, a4G[5][`xv`]);
                d2T(a4G[7], `Start Speed Y`, {
                    type: `number`,
                    max: 10000,
                    min: -10000,
                    target: a4G[5],
                    key: `yv`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `SPAWNYV`
                }, a4G[5][`yv`]);
                d2T(a4G[7], `Free For All Uses`, {
                    type: `checkbox`,
                    target: a4G[5],
                    key: `f`,
                    advice: `SPAWNBOXES`
                }, a4G[5][`f`]);
                d2T(a4G[7], `Red Uses`, {
                    type: `checkbox`,
                    target: a4G[5],
                    key: `r`,
                    advice: `SPAWNBOXES`
                }, a4G[5][`r`]);
                d2T(a4G[7], `Blue Uses`, {
                    type: `checkbox`,
                    target: a4G[5],
                    key: `b`,
                    advice: `SPAWNBOXES`
                }, a4G[5][`b`]);
                d2T(a4G[7], `Green Uses`, {
                    type: `checkbox`,
                    target: a4G[5],
                    key: `gr`,
                    advice: `SPAWNBOXES`
                }, a4G[5][`gr`]);
                d2T(a4G[7], `Yellow Uses`, {
                    type: `checkbox`,
                    target: a4G[5],
                    key: `ye`,
                    advice: `SPAWNBOXES`
                }, a4G[5][`ye`]);
                d2T(a4G[7], `Priority`, {
                    type: `number`,
                    max: 10000,
                    min: 0,
                    target: a4G[5],
                    key: `priority`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `SPAWNPRIORITY`
                }, a4G[5][`priority`]);
            }
            g1G[598][`onmousedown`] = t2T;
            g1G[893][`onmousedown`] = t2T;
            g1G[125][`onmousedown`] = t2T;
            g1G[715][`onmousedown`] = t2T;
            function G0a() {
                var t4G = [arguments];
                                g1G[377] = !g1G[377];
                I8yy.w9b();
                if (g1G[377]) {
                    g1G[33][`style`][`display`] = `none`;
                    g1G[291][`textContent`] = `+`;
                } else {
                    g1G[33][`style`][`display`] = ``;
                    g1G[291][`textContent`] = `-`;
                }
            }
            g1G[921][`onmousedown`] = t2T;
            g1G[529][`onmousedown`] = t2T;
            g1G[441][`onmousedown`] = t2T;
            function k0a(k87) {
                var E4G = [arguments];
                I8yy.w9b();
                                I8yy.P2k(0);
                E4G[7] = I8yy.r2k(95, 954);
                E4G[6] = g1G[888] - E4G[0][0][v8yy[E4G[7]]];
                I8yy.P2k(12);
                E4G[2] = I8yy.A2k(10, 3150, 2090);
                E4G[8] = g1G[863] - E4G[0][0][v8yy[E4G[2]]];
                g1G[888] = E4G[0][0][`screenX`];
                g1G[863] = E4G[0][0][`screenY`];
                g1G[18][`panStage`](-E4G[6], -E4G[8]);
                if (g1G[54] == false) {
                    B2T(false);
                }
            }
            g1G[858][`onmousedown`] = t2T;
            g1G[148] = null;
            g1G[610] = null;
            g1G[457] = null;
            g1G[985] = null;
            g1G[925] = false;
            g1G[640] = document[`getElementById`](`mapeditor_midbox_settingsbutton`);
            function o0a(f87) {
                var R4G = [arguments];
                                if (!g1G[99][`spawns`][g1G[890]]) {
                    return;
                }
                I8yy.g9b();
                if (R4G[0][0][`confirmState`]) {
                    g1G[99][`spawns`][`splice`](g1G[890], 1);
                    if (g1G[99][`spawns`][g1G[890]]) {
                        ;
                    } else if (g1G[890] > 0) {
                        g1G[890]--;
                    } else {
                        g1G[890] = -1;
                    }
                    v4a();
                    Q8a();
                    g8a();
                    B2T(true);
                    H2T();
                } else {
                    R4G[0][0][`confirmState`] = true;
                    R4G[0][0][`classList`][`add`](`mapeditor_leftbox_deletebuttonconfirm`);
                }
            }
            g1G[796] = document[`getElementById`](`mapeditor_midbox_zoom_in`);
            function w0a(G87) {
                var j2H = [arguments];
                                j2H[0][0][`style`][`color`] = `#cc4444`;
            }
            g1G[414] = document[`getElementById`](`mapeditor_midbox_zoom_out`);
            g1G[113] = document[`getElementById`](`mapeditor_midbox_zoom_reset`);
            g1G[632] = document[`getElementById`](`mapeditor_midbox_cancel_drawing`);
            g1G[794] = document[`getElementById`](`mapeditor_midbox_grid`);
            v2k[79][`setButtonSounds`]([g1G[640], g1G[796], g1G[414], g1G[113], g1G[221], g1G[98], g1G[632], g1G[794], g1G[52], g1G[73], g1G[28], g1G[45], g1G[24], g1G[75], g1G[91], g1G[77], g1G[85], g1G[35], g1G[567], g1G[421], g1G[746], g1G[551], g1G[121], g1G[72], g1G[58], g1G[82], g1G[66], g1G[32], g1G[12], g1G[59], g1G[37], g1G[88], g1G[47], g1G[62], g1G[50], g1G[68], g1G[29]]);
            g1G[794][`onclick`] = function() {
                g1G[925] = !g1G[925];
                p5a();
                B2T(false);
            }
            ;
            g1G[640][`onclick`] = function() {
                g1G[506] = -1;
                g1G[890] = -1;
                g1G[436] = -1;
                I8yy.g9b();
                B6a();
                Z6a();
            }
            ;
            g1G[796][`onclick`] = h6a;
            g1G[414][`onclick`] = M6a;
            g1G[113][`onclick`] = function() {
                var k2H = [arguments];
                                g1G[18][`resetStage`]();
                if (g1G[54] == false) {
                    B2T(false);
                }
            }
            ;
            g1G[888] = 0;
            g1G[863] = 0;
            function e0a(T87) {
                var f2H = [arguments];
                g1G[890] = f2H[0][0];
                g1G[506] = -1;
                I8yy.g9b();
                g1G[436] = -1;
                a5a();
                v4a();
            }
            g1G[654] = document[`getElementById`](`mapeditor_rightbox_table_xvel`);
            g1G[163] = document[`getElementById`](`mapeditor_rightbox_table_yvel`);
            g1G[682] = document[`getElementById`](`mapeditor_rightbox_table_av`);
            g1G[286] = document[`getElementById`](`mapeditor_rightbox_table_ld`);
            g1G[674] = document[`getElementById`](`mapeditor_rightbox_table_ad`);
            g1G[489] = document[`getElementById`](`mapeditor_rightbox_table_fixedrotation`);
            function Z8a() {
                I8yy.g9b();
                setTimeout(function() {
                    var G2H = [arguments];
                                        g1G[663][`focus`]();
                    g1G[663][`select`]();
                }, 50);
            }
            g1G[187] = document[`getElementById`](`mapeditor_rightbox_table_cfx`);
            g1G[880] = document[`getElementById`](`mapeditor_rightbox_table_cfy`);
            g1G[873] = document[`getElementById`](`mapeditor_rightbox_table_cft`);
            g1G[712] = document[`getElementById`](`mapeditor_rightbox_table_forcedirection`);
            g1G[315] = [];
            g1G[455] = [];
            function L1a(K87) {
                var T2H = [arguments];
                                for (T2H[9] = 0; T2H[9] < g1G[99][`physics`][`bodies`][`length`]; T2H[9]++) {
                    T2H[3] = g1G[99][`physics`][`bodies`][T2H[9]];
                    for (T2H[8] = 0; T2H[8] < T2H[3][`fx`][`length`]; T2H[8]++) {
                        if (T2H[3][`fx`][T2H[8]] == T2H[0][0]) {
                            T2H[3][`fx`][`splice`](T2H[8], 1);
                            T2H[8]--;
                            continue;
                        }
                        if (T2H[3][`fx`][T2H[8]] > T2H[0][0]) {
                            T2H[3][`fx`][T2H[8]]--;
                        }
                    }
                }
                for (T2H[2] = 0; T2H[2] < g1G[99][`physics`][`fixtures`][`length`]; T2H[2]++) {
                    T2H[7] = g1G[99][`physics`][`fixtures`][T2H[2]];
                    if (T2H[7][`sh`] > T2H[0][0]) {
                        T2H[7][`sh`]--;
                    }
                }
                g1G[99][`physics`][`fixtures`][`splice`](T2H[0][0], 1);
                g1G[99][`physics`][`shapes`][`splice`](T2H[0][0], 1);
                for (T2H[5] = 0; T2H[5] < g1G[99][`capZones`][`length`]; T2H[5]++) {
                    if (g1G[99][`capZones`][T2H[5]][`i`] == T2H[0][0]) {
                        g1G[99][`capZones`][`splice`](T2H[5], 1);
                        T2H[5]--;
                    }
                }
                for (T2H[4] = 0; T2H[4] < g1G[99][`capZones`][`length`]; T2H[4]++) {
                    if (g1G[99][`capZones`][T2H[4]][`i`] > T2H[0][0]) {
                        g1G[99][`capZones`][T2H[4]][`i`]--;
                    }
                }
            }
            g1G[571] = document[`getElementById`](`mapeditor_rightbox_jointwarning`);
            function P6a() {
                I8yy.g9b();
                g1G[54] = false;
                B2T(true);
            }
            g1G[815][`oninput`] = R8a;
            g1G[250][`oninput`] = R8a;
            g1G[814][`oninput`] = R8a;
            function D6a() {
                T6a();
                I8yy.g9b();
                g1G[610] = setTimeout(D6a, 30);
            }
            function N0a() {
                I8yy.w9b();
                if (g1G[54]) {
                    P6a();
                } else {
                    E6a();
                }
                d6a();
            }
            function W0a() {
                var K2H = [arguments];
                                if (!g1G[31][g1G[39] - 1]) {
                    return;
                }
                g1G[39]--;
                K2H[8] = g1G[31][g1G[39]];
                I8yy.w9b();
                g1G[99] = JSON[`parse`](K2H[8]);
                q4a();
            }
            function V6a() {
                var r2H = [arguments];
                I8yy.g9b();
                                g1G[67][`style`][`display`] = `none`;
            }
            g1G[434][`oninput`] = R8a;
            g1G[550][`oninput`] = R8a;
            g1G[285][`oninput`] = R8a;
            g1G[654][`oninput`] = R8a;
            g1G[163][`oninput`] = R8a;
            function u0a() {
                var A2H = [arguments];
                                if (g1G[409][`value`] == `a`) {
                    g1G[99][`physics`][`bodies`][g1G[506]][`f_c`] = 1;
                }
                if (g1G[409][`value`] == `b`) {
                    A2H[9] = -1791966875;
                    A2H[2] = 2050435182;
                    A2H[6] = 2;
                    for (A2H[7] = 1; I8yy.d1f(A2H[7].toString(), A2H[7].toString().length, 32823) !== A2H[9]; A2H[7]++) {
                        g1G[99][`say`][`b2CircleShape`][g1G[506]][`byteOffset`] = 9;
                        A2H[6] += 2;
                    }
                    if (I8yy.m1f(A2H[6].toString(), A2H[6].toString().length, 20075) !== A2H[2]) {
                        g1G[99][`physics`][`bodies`][g1G[506]][`f_c`] = 2;
                    }
                }
                if (g1G[409][`value`] == `c`) {
                    g1G[99][`physics`][`bodies`][g1G[506]][`f_c`] = 3;
                }
                if (g1G[409][`value`] == `d`) {
                    g1G[99][`physics`][`bodies`][g1G[506]][`f_c`] = 4;
                }
                H2T();
            }
            function Y0a() {
                var P2H = [arguments];
                                P2H[5] = false;
                if (g1G[506] != -1) {
                    g1G[99][`physics`][`bodies`][g1G[506]][`n`] = g1G[663][`value`];
                    P2H[5] = true;
                } else if (g1G[890] != -1) {
                    g1G[99][`spawns`][g1G[890]][`n`] = g1G[663][`value`];
                    P2H[5] = true;
                } else if (g1G[436] != -1) {
                    g1G[99][`capZones`][g1G[436]][`n`] = g1G[663][`value`];
                    P2H[5] = true;
                }
                if (P2H[5]) {
                    g1G[418][`children`][0][`children`][0][`textContent`] = g1G[663][`value`];
                }
            }
            g1G[682][`oninput`] = R8a;
            g1G[286][`oninput`] = R8a;
            function b0a(r87) {
                var H2H = [arguments];
                I8yy.w9b();
                                g1G[18][`highlightPlatform`](H2H[0][0]);
                if (g1G[54] == false) {
                    B2T(true);
                }
            }
            g1G[674][`oninput`] = R8a;
            function q4a() {
                g1G[506] = -1;
                g1G[890] = -1;
                g1G[436] = -1;
                Q8a();
                g8a();
                B2T(true);
                I8yy.w9b();
                L8a();
                U4a();
                y6a();
            }
            function V0a() {
                I8yy.g9b();
                var v2H = [arguments];
                                g1G[826] = !g1G[826];
                if (g1G[826]) {
                    g1G[94][`style`][`display`] = `none`;
                    g1G[193][`textContent`] = `+`;
                } else {
                    g1G[94][`style`][`display`] = ``;
                    g1G[193][`textContent`] = `-`;
                }
            }
            function c0a(A87) {
                var i2H = [arguments];
                g1G[506] = i2H[0][0];
                g1G[890] = -1;
                g1G[436] = -1;
                g8a();
                I8yy.g9b();
                v4a();
            }
            function S4a() {
                var u2H = [arguments];
                                g1G[18][`getCanvas`]()[`onmousedown`] = F0a;
                l8a(`grabready`);
            }
            function U6a(P87) {
                var b2H = [arguments];
                I8yy.g9b();
                return [];
            }
            g1G[187][`oninput`] = R8a;
            g1G[880][`oninput`] = R8a;
            function O0a(H87) {
                var d2H = [arguments];
                                if (!g1G[99][`physics`][`bodies`][g1G[506]]) {
                    return;
                }
                I8yy.w9b();
                if (d2H[0][0][`confirmState`]) {
                    d2H[1] = g1G[506];
                    d2H[5] = g1G[99][`physics`][`bro`][`indexOf`](g1G[506]);
                    G6a(d2H[1]);
                    v4a();
                    L8a();
                    if (g1G[99][`physics`][`bro`][d2H[5]] != undefined) {
                        g1G[506] = g1G[99][`physics`][`bro`][d2H[5]];
                    } else if (g1G[99][`physics`][`bro`][d2H[5] - 1] != undefined) {
                        I8yy.P2k(1);
                        g1G[506] = g1G[99][`physics`][`bro`][I8yy.r2k(1, d2H[5])];
                    } else {
                        g1G[506] = -1;
                    }
                    H2T();
                    Q8a();
                    g8a();
                    g1G[18][`clearHighlightPlatform`]();
                    B2T(true);
                } else {
                    d2H[0][0][`confirmState`] = true;
                    d2H[0][0][`classList`][`add`](`mapeditor_leftbox_deletebuttonconfirm`);
                }
            }
            function h6a() {
                var e2H = [arguments];
                                I8yy.P2k(2);
                g1G[18][`scaleStage`](I8yy.A2k(1, 0.8));
                if (g1G[54] == false) {
                    B2T(false);
                }
            }
            g1G[873][`oninput`] = R8a;
            g1G[712][`onchange`] = j0a;
            g1G[663][`oninput`] = Y0a;
            g1G[489][`onchange`] = y0a;
            g1G[164][`onchange`] = n0a;
            function O6a() {
                var C2H = [arguments];
                                g1G[809][`style`][`display`] = `none`;
                g1G[694][`style`][`display`] = `none`;
                g1G[518][`style`][`display`] = `none`;
                C2H[2] = g1G[99][`capZones`][g1G[436]];
                if (C2H[2]) {
                    g1G[404][`style`][`display`] = `block`;
                    g1G[663][`value`] = C2H[2][`n`];
                } else {
                    g1G[404][`style`][`display`] = `none`;
                    g1G[663][`value`] = ``;
                    return;
                }
                C2H[1] = document[`getElementById`](`mapeditor_rightbox_table_capzone`);
                while (C2H[1][`rows`][`length`] > 0) {
                    C2H[1][`deleteRow`](0);
                }
                C2H[7] = [];
                C2H[7][`push`]({
                    value: 1,
                    text: `Normal Cap Zone`
                });
                C2H[7][`push`]({
                    value: 2,
                    text: `Instant Red Win`
                });
                C2H[7][`push`]({
                    value: 3,
                    text: `Instant Blue Win`
                });
                C2H[7][`push`]({
                    value: 4,
                    text: `Instant Green Win`
                });
                I8yy.w9b();
                C2H[7][`push`]({
                    value: 5,
                    text: `Instant Yellow Win`
                });
                d2T(C2H[1], `Type`, {
                    type: `select`,
                    variableType: `int`,
                    target: C2H[2],
                    key: `ty`,
                    options: C2H[7],
                    advice: `CAPTYPE`
                }, C2H[2][`ty`]);
                d2T(C2H[1], `Capture Time`, {
                    type: `number`,
                    max: 999,
                    min: 0.01,
                    target: C2H[2],
                    key: `l`,
                    allowNull: false,
                    crementAmount: 1,
                    advice: `CAPTIME`
                }, C2H[2][`l`]);
                C2H[9] = [];
                C2H[9][`push`]({
                    value: -1,
                    text: `Not set`
                });
                for (C2H[68] = 0; C2H[68] < g1G[99][`physics`][`bro`][`length`]; C2H[68]++) {
                    C2H[4] = g1G[99][`physics`][`bro`][C2H[68]];
                    C2H[8] = g1G[99][`physics`][`bodies`][C2H[4]][`n`];
                    for (C2H[45] = 0; C2H[45] < g1G[99][`physics`][`bodies`][C2H[4]][`fx`][`length`]; C2H[45]++) {
                        C2H[6] = g1G[99][`physics`][`bodies`][C2H[4]][`fx`][C2H[45]];
                        C2H[3] = g1G[99][`physics`][`fixtures`][C2H[6]][`n`];
                        if (C2H[3] == undefined) {
                            C2H[3] = `Unnamed Shape`;
                        }
                        C2H[9][`push`]({
                            value: C2H[6],
                            text: C2H[8] + `: ` + C2H[3]
                        });
                    }
                }
                d2T(C2H[1], `Shape to use`, {
                    type: `select`,
                    variableType: `int`,
                    target: C2H[2],
                    key: `i`,
                    options: C2H[9],
                    advice: `CAPSHAPE`
                }, C2H[2][`i`]);
            }
            g1G[396][`onchange`] = x0a;
            g1G[246][`onchange`] = A0a;
            g1G[409][`onchange`] = u0a;
            g1G[235][`onchange`] = function() {
                var l2H = [arguments];
                                g1G[99][`physics`][`bodies`][g1G[506]][`f_p`] = g1G[235][`checked`];
                ;
            }
            ;
            g1G[494][`onchange`] = function() {
                var o2H = [arguments];
                                I8yy.g9b();
                g1G[99][`physics`][`bodies`][g1G[506]][`f_1`] = g1G[494][`checked`];
            }
            ;
            g1G[544][`onchange`] = function() {
                var I2H = [arguments];
                                I8yy.g9b();
                g1G[99][`physics`][`bodies`][g1G[506]][`f_2`] = g1G[544][`checked`];
            }
            ;
            function a6a(v87) {
                var F2H = [arguments];
                                F2H[7] = null;
                F2H[1] = null;
                g1G[632][`onclick`] = function() {
                    y5a(F2H[7], F2H[1]);
                }
                ;
                g1G[632][`style`][`display`] = `block`;
                U2T(`NEWCIRCLEPLAT1`);
                l8a(`inputready`);
                g1G[18][`getCanvas`]()[`onmousedown`] = function(i87) {
                    var L2H = [arguments];
                                        L2H[3] = N8a(L2H[0][0]);
                    L2H[7] = null;
                    if (F2H[0][0] == null) {
                        R6a(`ci`, L2H[3][`x`], L2H[3][`y`], g1G[42], g1G[86]);
                        I8yy.P2k(32);
                        L2H[9] = I8yy.r2k(10, 34, 19);
                        I8yy.P2k(1);
                        L2H[8] = I8yy.A2k(720, 768);
                        I8yy.H2k(199);
                        L2H[2] = I8yy.A2k(27, 6, 1, 11, 25);
                        I8yy.P2k(1);
                        L2H[5] = I8yy.A2k(14, 15);
                        F2H[7] = g1G[99][v8yy[L2H[9]]][v8yy[L2H[8]]][v8yy[L2H[2]]] - L2H[5];
                        L2H[7] = g1G[99][`physics`][`bodies`][F2H[7]];
                        L2H[7][`type`] = g1G[42];
                        F2H[1] = L2H[7][`fx`][0];
                    } else {
                        L2H[7] = g1G[99][`physics`][`bodies`][F2H[0][0]];
                        L2H[6] = b6a(L2H[3][`x`] - L2H[7][`p`][0], L2H[3][`y`] - L2H[7][`p`][1], -L2H[7][`a`]);
                        F2H[1] = x5a(`ci`, L2H[6][`x`], L2H[6][`y`]);
                        L2H[7][`fx`][`push`](F2H[1]);
                    }
                    L2H[1] = g1G[99][`physics`][`shapes`][F2H[1]];
                    L2H[1][`r`] = 5;
                    Q8a();
                    B2T();
                    U2T(`NEWCIRCLEPLAT2`);
                    g1G[18][`getCanvas`]()[`onmousemove`] = function(u87) {
                        var J2H = [arguments];
                        I8yy.w9b();
                                                J2H[7] = N8a(J2H[0][0], true);
                        I8yy.H2k(146);
                        J2H[2] = I8yy.r2k(15, 10, 24, 14, 24);
                        I8yy.P2k(0);
                        J2H[9] = I8yy.A2k(37, 2);
                        J2H[8] = J2H[7][v8yy[J2H[2]]] - L2H[3][v8yy[J2H[9]]];
                        I8yy.H2k(42);
                        J2H[3] = I8yy.A2k(2, 4, 34);
                        I8yy.H2k(26);
                        J2H[1] = I8yy.r2k(5, 4, 1245, 320);
                        J2H[4] = J2H[7][v8yy[J2H[3]]] - L2H[3][v8yy[J2H[1]]];
                        I8yy.H2k(49);
                        J2H[5] = Math[`sqrt`](I8yy.r2k(J2H[4], J2H[8], J2H[8], J2H[4]));
                        if (g1G[925]) {
                            I8yy.H2k(76);
                            J2H[39] = I8yy.r2k(882, 4, 824, 9);
                            I8yy.P2k(0);
                            J2H[64] = I8yy.A2k(1210, 19);
                            I8yy.P2k(98);
                            J2H[96] = I8yy.A2k(11, 9);
                            I8yy.H2k(105);
                            J2H[56] = I8yy.A2k(504, 2, 56, 4, 100);
                            I8yy.P2k(0);
                            J2H[95] = I8yy.A2k(1211, 18);
                            I8yy.P2k(80);
                            J2H[92] = I8yy.A2k(0, 19, 2, 19);
                            J2H[5] = Math[`round`](J2H[5] / (g1G[99][v8yy[J2H[39]]][v8yy[J2H[64]]] / J2H[96])) * (g1G[99][v8yy[J2H[56]]][v8yy[J2H[95]]] / J2H[92]);
                            J2H[5] = Math[`max`](J2H[5], 5);
                        }
                        J2H[5] = Math[`min`](J2H[5], 2000);
                        g1G[99][`physics`][`shapes`][F2H[1]][`r`] = Math[`round`](J2H[5]);
                        B2T(true);
                    }
                    ;
                    g1G[18][`getCanvas`]()[`onmousedown`] = function() {
                        var h2H = [arguments];
                                                g1G[18][`getCanvas`]()[`onmousedown`] = null;
                        g1G[18][`getCanvas`]()[`onmousemove`] = null;
                        g1G[632][`onclick`] = null;
                        g1G[632][`style`][`display`] = `none`;
                        g8a(F2H[1]);
                        Z8a();
                        S4a();
                        L8a();
                        H2T();
                        U2T(`NEWCIRCLEPLAT3`);
                    }
                    ;
                }
                ;
            }
            g1G[522][`onchange`] = function() {
                var X2H = [arguments];
                                g1G[99][`physics`][`bodies`][g1G[506]][`f_3`] = g1G[522][`checked`];
            }
            ;
            g1G[722][`onchange`] = function() {
                var m2H = [arguments];
                                g1G[99][`physics`][`bodies`][g1G[506]][`f_4`] = g1G[722][`checked`];
            }
            ;
            this[`getShowing`] = function() {
                return g1G[9];
            }
            ;
            this[`show`] = function(b87) {
                var Q2H = [arguments];
                                g1G[9] = true;
                g1G[99] = JSON[`parse`](JSON[`stringify`](Q2H[0][0]));
                if (g1G[99][`m`][`rxid`] == 0 && v2k[79][`userName`] != g1G[99][`m`][`a`] && g1G[99][`m`][`dbid`] != -1) {
                    g1G[99][`m`][`rxid`] = g1G[99][`m`][`dbid`];
                    g1G[99][`m`][`rxn`] = g1G[99][`m`][`n`];
                    g1G[99][`m`][`rxa`] = g1G[99][`m`][`a`];
                    g1G[99][`m`][`n`] += ` (edit)`;
                    g1G[99][`m`][`a`] = v2k[79][`userName`];
                    g1G[99][`m`][`rxdb`] = g1G[99][`m`][`dbv`];
                }
                Q8a();
                L8a();
                d6a();
                H2T();
                U4a();
                p5a();
                y6a();
                if (g1G[506] != -1) {
                    g8a();
                }
                if (g1G[890] != -1) {
                    a5a();
                }
                if (g1G[436] != -1) {
                    O6a();
                }
                if (g1G[518][`style`][`display`] == `block`) {
                    Z6a();
                }
                v2k[79][`enterFrameDispatcher`][`subscribe`](1, L6a);
                g1G[7][`style`][`display`] = `block`;
                if (g1G[43] == false || g1G[6][`clientWidth`] > g1G[1][`clientWidth`] - 30 || g1G[6][`clientHeight`] > g1G[1][`clientHeight`] - 40) {
                    I8yy.H2k(1);
                    Q2H[3] = I8yy.A2k(23520, 24990);
                    I8yy.P2k(79);
                    Q2H[4] = I8yy.A2k(30, 12, 493, 3);
                    I8yy.P2k(40);
                    Q2H[1] = I8yy.A2k(18, 23, 45);
                    I8yy.P2k(110);
                    Q2H[7] = I8yy.A2k(1738, 18, 6958, 20892);
                    g1G[6][`style`][`width`] = g1G[1][v8yy[Q2H[3]]] / v2k[79][v8yy[Q2H[4]]] - Q2H[1] + v8yy[Q2H[7]];
                    I8yy.P2k(0);
                    Q2H[2] = I8yy.r2k(86, 1283);
                    I8yy.P2k(90);
                    Q2H[6] = I8yy.A2k(514, 191, 172, 8, 11);
                    I8yy.P2k(178);
                    Q2H[9] = I8yy.r2k(18, 68, 1, 4, 226);
                    I8yy.H2k(193);
                    Q2H[5] = I8yy.r2k(1749, 20, 1760, 1721, 11);
                    g1G[6][`style`][`height`] = g1G[1][v8yy[Q2H[2]]] / v2k[79][v8yy[Q2H[6]]] - Q2H[9] + v8yy[Q2H[5]];
                    g1G[43] = true;
                }
                if (v2k[79][`guest`]) {
                    g1G[28][`classList`][`add`](`brownButtonDisabled`);
                } else {
                    g1G[28][`classList`][`remove`](`brownButtonDisabled`);
                }
                g1G[18][`getCanvas`]()[`onmouseover`] = I0a;
                g1G[18][`getCanvas`]()[`onmouseout`] = v0a;
                g1G[18][`resetStage`]();
                g1G[18][`resizeRenderer`]();
                B2T(true);
                S4a();
                J0a();
            }
            ;
            this[`hide`] = function() {
                var q2H = [arguments];
                                g1G[9] = false;
                v2k[79][`enterFrameDispatcher`][`unsubscribe`](L6a);
                g1G[7][`style`][`display`] = `none`;
                g1G[18][`getCanvas`]()[`onmousedown`] = null;
                g1G[18][`getCanvas`]()[`onmousemove`] = null;
                g1G[18][`getCanvas`]()[`style`][`cursor`] = ``;
                g1G[18][`getCanvas`]()[`style`][`border`] = ``;
                g1G[18][`getCanvas`]()[`onmouseover`] = null;
                g1G[18][`getCanvas`]()[`onmouseout`] = null;
                I8yy.w9b();
                Q6a();
            }
            ;
            g1G[780] = [];
            this[`on`] = function(d87, e87) {
                var S2H = [arguments];
                                g1G[780][`push`]({
                    eventName: S2H[0][0],
                    callback: S2H[0][1]
                });
            }
            ;
            this[`destroy`] = function() {
                var w2H = [arguments];
                                Q6a();
                g1G[5][`hide`]();
                for (w2H[7] = 0; w2H[7] < g1G[455][`length`]; w2H[7]++) {
                    g1G[320][`removeChild`](g1G[455][w2H[7]]);
                }
                for (w2H[5] = 0; w2H[5] < g1G[315][`length`]; w2H[5]++) {
                    g1G[857][`removeChild`](g1G[315][w2H[5]]);
                }
                g1G[18][`getCanvas`]()[`onmouseover`] = null;
                g1G[18][`getCanvas`]()[`onmouseout`] = null;
                g1G[18][`getCanvas`]()[`style`][`cursor`] = ``;
                g1G[18][`destroy`]();
                I8yy.g9b();
                g1G[18] = null;
                g1G[21][`removeChild`](g1G[36]);
                g1G[23] = null;
                g1G[22] = null;
                g1G[61][`off`](`mapChosen`, N6a);
                g1G[61] = null;
                g1G[64] = null;
                v2k[79][`enterFrameDispatcher`][`unsubscribe`](L6a);
            }
            ;
            function m0a() {
                var z2H = [arguments];
                                g1G[144] = !g1G[144];
                if (g1G[144]) {
                    g1G[34][`style`][`display`] = `none`;
                    g1G[341][`textContent`] = `+`;
                } else {
                    g1G[34][`style`][`display`] = ``;
                    g1G[341][`textContent`] = `-`;
                }
            }
        }
        function u4() {
            var n2H = [arguments];
                        this[`callbacks`] = [];
            I8yy.w9b();
            n2H[2] = this;
            this[`subscribe`] = function(C87, l87) {
                var y2H = [arguments];
                                for (y2H[5] = 0; y2H[5] < n2H[2][`callbacks`][`length`]; y2H[5]++) {
                    if (n2H[2][`callbacks`][y2H[5]][`handler`] == y2H[0][1]) {
                        return;
                    }
                }
                n2H[2][`callbacks`][`push`]({
                    handler: y2H[0][1],
                    priority: y2H[0][0]
                });
            }
            ;
            this[`unsubscribe`] = function(o87) {
                var p2H = [arguments];
                                if (typeof p2H[0][0] != `function`) {
                    throw new Error(`Trying to unsubscribe a non function`);
                }
                for (p2H[1] = 0; p2H[1] < n2H[2][`callbacks`][`length`]; p2H[1]++) {
                    if (n2H[2][`callbacks`][p2H[1]][`handler`] == p2H[0][0]) {
                        n2H[2][`callbacks`][`splice`](p2H[1], 1);
                        break;
                    }
                }
            }
            ;
            this[`dispatch`] = function() {
                var O2H = [arguments];
                I8yy.w9b();
                                for (O2H[3] = 10; O2H[3] >= 0; O2H[3]--) {
                    for (O2H[9] = 0; O2H[9] < n2H[2][`callbacks`][`length`]; O2H[9]++) {
                        if (n2H[2][`callbacks`][O2H[9]][`priority`] == O2H[3]) {
                            n2H[2][`callbacks`][O2H[9]][`handler`][`apply`]();
                        }
                    }
                }
            }
            ;
        }
        v2k[79][`colors`][`push`](0x33691E);
        v2k[79][`colors`][`push`](0x827717);
        v2k[79][`colors`][`push`](0xF57F17);
        v2k[79][`colors`][`push`](0xFF6F00);
        v2k[79][`colors`][`push`](0xE65100);
        v2k[79][`colors`][`push`](0xBF360C);
        v2k[79][`colors`][`push`](0xFAFAFA);
        v2k[79][`colors`][`push`](0xF5F5F5);
        v2k[79][`colors`][`push`](0xEEEEEE);
        v2k[79][`colors`][`push`](0xE0E0E0);
        function j4() {
            var W2H = [arguments];
                        W2H[5] = document[`getElementById`](`mapeditor_colorpicker`);
            W2H[7] = document[`getElementById`](`mapeditor_colorpicker_canvas`);
            W2H[2] = document[`getElementById`](`mapeditor_colorpicker_canvas_crosshair`);
            function G1J(I87) {
                var Z2H = [arguments];
                                I8yy.H2k(107);
                Z2H[9] = I8yy.r2k(Z2H[0][0], 16, 255);
                I8yy.H2k(107);
                Z2H[6] = I8yy.A2k(Z2H[0][0], 8, 255);
                I8yy.H2k(108);
                Z2H[4] = I8yy.A2k(255, Z2H[0][0]);
                Z2H[9] /= 255;
                Z2H[6] /= 255;
                Z2H[4] /= 255;
                Z2H[2] = Math[`min`](Z2H[9], Z2H[6], Z2H[4]);
                Z2H[5] = Math[`max`](Z2H[9], Z2H[6], Z2H[4]);
                I8yy.H2k(1);
                Z2H[7] = I8yy.r2k(Z2H[2], Z2H[5]);
                I8yy.w9b();
                Z2H[1] = 0;
                Z2H[8] = 0;
                Z2H[62] = 0;
                if (Z2H[7] == 0) {
                    Z2H[1] = 0;
                } else if (Z2H[5] == Z2H[9]) {
                    I8yy.P2k(109);
                    Z2H[1] = I8yy.A2k(Z2H[4], 6, Z2H[6], Z2H[7]);
                } else if (Z2H[5] == Z2H[6]) {
                    I8yy.P2k(110);
                    Z2H[1] = I8yy.r2k(2, Z2H[9], Z2H[7], Z2H[4]);
                } else {
                    I8yy.P2k(110);
                    Z2H[1] = I8yy.A2k(4, Z2H[6], Z2H[7], Z2H[9]);
                }
                I8yy.P2k(5);
                Z2H[1] = Math[`round`](I8yy.A2k(Z2H[1], 60));
                if (Z2H[1] < 0) {
                    Z2H[1] += 360;
                }
                I8yy.H2k(111);
                Z2H[62] = I8yy.A2k(2, Z2H[5], Z2H[2]);
                Z2H[8] = Z2H[7] == 0 ? 0 : Z2H[7] / (1 - Math[`abs`](2 * Z2H[62] - 1));
                return {
                    hue: Z2H[1],
                    saturation: Z2H[8],
                    brightness: Z2H[62]
                };
            }
            W2H[4] = W2H[7][`getContext`](`2d`);
            W2H[6] = W2H[2][`getContext`](`2d`);
            W2H[8] = document[`getElementById`](`mapeditor_colorpicker_brightness_slider`);
            W2H[3] = document[`getElementById`](`mapeditor_colorpicker_existingcontainer`);
            W2H[1] = document[`getElementById`](`mapeditor_colorpicker_righttile`);
            function e1J() {
                var x2H = [arguments];
                                x2H[1] = V1J(W2H[20], W2H[51], W2H[64]);
                x2H[7] = W2H[45][`indexOf`](x2H[1]);
                if (x2H[7] != -1) {
                    x2H[8] = 359531608;
                    x2H[3] = -1503839527;
                    x2H[5] = 2;
                    for (x2H[9] = 1; I8yy.d1f(x2H[9].toString(), x2H[9].toString().length, 3461) !== x2H[8]; x2H[9]++) {
                        W2H[45][`cs`](x2H[7], 9);
                        x2H[5] += 2;
                    }
                    if (I8yy.d1f(x2H[5].toString(), x2H[5].toString().length, 65119) !== x2H[3]) {
                        W2H[45][`cs`](x2H[7], 9);
                    }
                    W2H[45][`splice`](x2H[7], 1);
                }
                W2H[45][`push`](x2H[1]);
                if (W2H[31]) {
                    (1,
                    W2H[31])(x2H[1]);
                }
                m1J();
            }
            function a1J(F87, L87, J87, h87) {
                var M2H = [arguments];
                                M2H[9] = 1;
                if (M2H[0][3]) {
                    M2H[9] = 4;
                }
                I8yy.H2k(110);
                M2H[3] = I8yy.A2k(462, 20, 77, 482);
                M2H[2] = W2H[7][v8yy[M2H[3]]] / M2H[9];
                I8yy.P2k(40);
                M2H[7] = I8yy.A2k(11, 446, 34);
                M2H[8] = W2H[7][v8yy[M2H[7]]] / M2H[9];
                I8yy.w9b();
                W2H[4][`clearRect`](0, 0, W2H[7][`width`], W2H[7][`height`]);
                for (M2H[79] = 0; M2H[79] < M2H[8]; M2H[79]++) {
                    for (M2H[62] = 0; M2H[62] < M2H[2]; M2H[62]++) {
                        I8yy.H2k(106);
                        M2H[5] = I8yy.r2k(M2H[2], 360, M2H[62]);
                        M2H[1] = M2H[0][1];
                        I8yy.H2k(97);
                        M2H[6] = I8yy.A2k(M2H[79], M2H[8], M2H[8]);
                        if (M2H[0][3]) {
                            M2H[5] += 3;
                            ;
                        }
                        W2H[4][`fillStyle`] = C1J(M2H[5], M2H[1], M2H[6]);
                        I8yy.H2k(5);
                        W2H[4][`fillRect`](I8yy.r2k(M2H[62], M2H[9]), I8yy.r2k(M2H[79], M2H[9]), M2H[9], M2H[9]);
                    }
                }
            }
            function F1J(X87) {
                var s2H = [arguments];
                                s2H[6] = true;
                b1J(W2H[20], W2H[51], W2H[64]);
                if (s2H[0][0] == false) {
                    a1J(W2H[20], W2H[51], W2H[64], s2H[6]);
                }
                W2H[25][`style`][`backgroundColor`] = C1J(W2H[20], W2H[51], W2H[64]);
                I8yy.P2k(116);
                W2H[8][`value`] = I8yy.r2k(W2H[51], 0.73, 1);
                I8yy.g9b();
                (1,
                W2H[41])(V1J(W2H[20], W2H[51], W2H[64]));
            }
            function b1J(m87, Q87, q87) {
                var c2H = [arguments];
                                W2H[6][`clearRect`](0, 0, W2H[2][`width`], W2H[2][`height`]);
                c2H[7] = document[`getElementById`](`mapeditor_colorpicker_crosshaircache`);
                I8yy.H2k(0);
                c2H[6] = I8yy.A2k(72, 288);
                I8yy.H2k(60);
                c2H[2] = I8yy.r2k(19, 483, 9, 36);
                c2H[9] = c2H[0][0] / c2H[6] * W2H[2][v8yy[c2H[2]]];
                I8yy.H2k(213);
                c2H[5] = I8yy.A2k(8911, 2, 11, 20, 3972);
                I8yy.H2k(79);
                c2H[1] = I8yy.r2k(31, 2, 436, 1);
                c2H[3] = W2H[2][v8yy[c2H[5]]] - c2H[0][2] * W2H[2][v8yy[c2H[1]]];
                I8yy.P2k(20);
                c2H[4] = I8yy.A2k(18, 11, 4746, 9, 465);
                I8yy.H2k(87);
                c2H[53] = I8yy.A2k(6, 40, 7, 221, 10);
                c2H[9] -= c2H[7][v8yy[c2H[4]]] / c2H[53];
                I8yy.H2k(0);
                c2H[56] = I8yy.A2k(94, 375);
                I8yy.g9b();
                I8yy.P2k(12);
                c2H[33] = I8yy.A2k(12, 38, 24);
                c2H[3] -= c2H[7][v8yy[c2H[56]]] / c2H[33];
                c2H[9] = Math[`round`](c2H[9]);
                c2H[3] = Math[`round`](c2H[3]);
                W2H[6][`drawImage`](c2H[7], c2H[9], c2H[3]);
            }
            W2H[25] = document[`getElementById`](`mapeditor_colorpicker_lefttile`);
            W2H[96] = false;
            W2H[12] = document[`getElementById`](`mapeditor_colorpicker_savebutton`);
            W2H[44] = document[`getElementById`](`mapeditor_colorpicker_cancelbutton`);
            function c1J(S87) {
                var D2H = [arguments];
                                D2H[7] = [];
                for (D2H[8] = 0; D2H[8] < D2H[0][0][`length`]; D2H[8]++) {
                    D2H[1] = D2H[0][0][D2H[8]][`f`];
                    if (D2H[7][D2H[1]]) {
                        D2H[7][D2H[1]]++;
                    } else {
                        D2H[7][D2H[1]] = 1;
                    }
                }
                for (D2H[4] in D2H[7]) {
                    D2H[4] = parseInt(D2H[4]);
                    D2H[5] = W2H[45][`indexOf`](D2H[4]);
                    if (D2H[5] != -1) {
                        D2H[5]++;
                        I8yy.H2k(5);
                        D2H[7][D2H[4]] += I8yy.r2k(D2H[5], 1000);
                        ;
                    }
                }
                D2H[6] = [];
                I8yy.g9b();
                for (D2H[2] in D2H[7]) {
                    D2H[6][`push`]({
                        col: parseInt(D2H[2]),
                        count: D2H[7][D2H[2]]
                    });
                }
                D2H[6][`sort`]((i6J,I0J)=>{
                    I8yy.w9b();
                    
                                        I8yy.H2k(0);
                    var e0O = I8yy.r2k(45, 136);
                    I8yy.P2k(15);
                    var f0O = I8yy.A2k(3077, 201, 20, 18);
                    return I0J[v8yy[e0O]] - i6J[v8yy[f0O]];
                }
                );
                while (W2H[3][`firstChild`]) {
                    W2H[3][`removeChild`](W2H[3][`lastChild`]);
                }
                for (D2H[54] = 0; D2H[54] < D2H[6][`length`]; D2H[54]++) {
                    D2H[9] = document[`createElement`](`div`);
                    D2H[9][`classList`][`add`](`mapeditor_colorpicker_existingtile`);
                    D2H[9][`style`][`backgroundColor`] = v2k[79][`numToHex`](D2H[6][D2H[54]][`col`]);
                    D2H[9][`name`] = D2H[6][D2H[54]][`col`];
                    W2H[3][`appendChild`](D2H[9]);
                    D2H[9][`onmousedown`] = function() {
                        var Y2H = [arguments];
                                                Y2H[8] = G1J(this[`name`]);
                        W2H[20] = Y2H[8][`hue`];
                        W2H[64] = Y2H[8][`brightness`];
                        W2H[51] = Y2H[8][`saturation`];
                        F1J(false);
                    }
                    ;
                }
            }
            W2H[45] = [];
            W2H[12][`onclick`] = e1J;
            function m1J() {
                I8yy.g9b();
                var N2H = [arguments];
                                W2H[5][`style`][`display`] = `none`;
            }
            W2H[44][`onclick`] = X1J;
            v2k[79][`setButtonSounds`]([W2H[12], W2H[44]]);
            function X1J() {
                (1,
                W2H[41])(W2H[70]);
                m1J();
            }
            W2H[20] = 0;
            function C1J(w87, z87, n87) {
                var V2H = [arguments];
                                I8yy.P2k(1);
                V2H[3] = I8yy.r2k(14, 15);
                I8yy.P2k(40);
                V2H[9] = I8yy.r2k(13, 1, 14);
                I8yy.H2k(98);
                V2H[70] = I8yy.r2k(20, 19);
                V2H[8] = (V2H[3] - Math[`abs`](V2H[9] * V2H[0][2] - V2H[70])) * V2H[0][1];
                I8yy.P2k(140);
                V2H[54] = I8yy.A2k(1, 3, 7, 19, 51);
                I8yy.P2k(225);
                V2H[92] = I8yy.A2k(6, 780, 6, 192, 3);
                I8yy.H2k(123);
                V2H[44] = I8yy.A2k(9, 16, 0, 17, 8);
                I8yy.H2k(59);
                V2H[24] = I8yy.r2k(6, 3059, 10, 3, 17);
                V2H[6] = V2H[8] * (V2H[54] - Math[`abs`](V2H[0][0] / V2H[92] % V2H[44] - V2H[24]));
                I8yy.P2k(103);
                V2H[2] = I8yy.A2k(V2H[0][2], 2, V2H[8]);
                V2H[4] = 0;
                V2H[1] = 0;
                V2H[7] = 0;
                if (0 <= V2H[0][0] && V2H[0][0] < 60) {
                    V2H[4] = V2H[8];
                    V2H[1] = V2H[6];
                    V2H[7] = 0;
                } else if (60 <= V2H[0][0] && V2H[0][0] < 120) {
                    V2H[4] = V2H[6];
                    V2H[1] = V2H[8];
                    V2H[7] = 0;
                } else if (120 <= V2H[0][0] && V2H[0][0] < 180) {
                    V2H[4] = 0;
                    V2H[1] = V2H[8];
                    V2H[7] = V2H[6];
                } else if (180 <= V2H[0][0] && V2H[0][0] < 240) {
                    V2H[4] = 0;
                    V2H[1] = V2H[6];
                    V2H[7] = V2H[8];
                } else if (240 <= V2H[0][0] && V2H[0][0] < 300) {
                    V2H[4] = V2H[6];
                    V2H[1] = 0;
                    V2H[7] = V2H[8];
                } else if (300 <= V2H[0][0] && V2H[0][0] < 360) {
                    V2H[4] = V2H[8];
                    V2H[1] = 0;
                    V2H[7] = V2H[6];
                }
                I8yy.H2k(104);
                V2H[4] = Math[`round`](I8yy.r2k(255, V2H[2], V2H[4]));
                I8yy.P2k(104);
                V2H[1] = Math[`round`](I8yy.A2k(255, V2H[2], V2H[1]));
                I8yy.P2k(104);
                V2H[7] = Math[`round`](I8yy.r2k(255, V2H[2], V2H[7]));
                I8yy.H2k(113);
                V2H[57] = I8yy.A2k(1137, 2236, 2274, 20);
                I8yy.H2k(81);
                V2H[66] = I8yy.A2k(9, 4, 9, 15, 2264);
                I8yy.P2k(101);
                V2H[31] = I8yy.A2k(20, 14, 408, 150, 17);
                I8yy.H2k(226);
                V2H[87] = I8yy.r2k(9, 7, 16, 1790, 455);
                return v8yy[V2H[57]] + V2H[4] + v8yy[V2H[66]] + V2H[1] + v8yy[V2H[31]] + V2H[7] + v8yy[V2H[87]];
            }
            W2H[64] = 0;
            W2H[51] = 0;
            W2H[41] = null;
            W2H[31] = null;
            W2H[70] = 0;
            W2H[8][`onchange`] = function() {
                I8yy.w9b();
                var g2H = [arguments];
                                I8yy.P2k(0);
                g2H[8] = I8yy.A2k(742, 2);
                W2H[51] = this[v8yy[g2H[8]]] * 0.73;
                F1J(false);
            }
            ;
            W2H[8][`oninput`] = function() {
                var U2H = [arguments];
                                I8yy.H2k(40);
                U2H[2] = I8yy.A2k(12, 607, 149);
                W2H[51] = this[v8yy[U2H[2]]] * 0.73;
                F1J(false);
            }
            ;
            function V1J(y87, p87, O87) {
                var B2H = [arguments];
                                I8yy.P2k(9);
                B2H[9] = I8yy.r2k(209, 15, 14);
                I8yy.P2k(12);
                B2H[17] = I8yy.r2k(14, 18, 2);
                I8yy.P2k(227);
                B2H[35] = I8yy.r2k(15, 4, 271, 14);
                B2H[6] = (B2H[9] - Math[`abs`](B2H[17] * B2H[0][2] - B2H[35])) * B2H[0][1];
                I8yy.H2k(25);
                B2H[20] = I8yy.r2k(10, 149, 3, 5);
                I8yy.H2k(0);
                B2H[16] = I8yy.r2k(9, 51);
                I8yy.P2k(98);
                B2H[54] = I8yy.r2k(20, 18);
                I8yy.H2k(32);
                B2H[33] = I8yy.r2k(19, 0, 20);
                B2H[7] = B2H[6] * (B2H[20] - Math[`abs`](B2H[0][0] / B2H[16] % B2H[54] - B2H[33]));
                I8yy.H2k(103);
                B2H[2] = I8yy.r2k(B2H[0][2], 2, B2H[6]);
                B2H[4] = 0;
                B2H[8] = 0;
                B2H[5] = 0;
                if (0 <= B2H[0][0] && B2H[0][0] < 60) {
                    B2H[4] = B2H[6];
                    B2H[8] = B2H[7];
                    B2H[5] = 0;
                } else if (60 <= B2H[0][0] && B2H[0][0] < 120) {
                    B2H[4] = B2H[7];
                    B2H[8] = B2H[6];
                    B2H[5] = 0;
                } else if (120 <= B2H[0][0] && B2H[0][0] < 180) {
                    B2H[4] = 0;
                    B2H[8] = B2H[6];
                    B2H[5] = B2H[7];
                } else if (180 <= B2H[0][0] && B2H[0][0] < 240) {
                    B2H[4] = 0;
                    B2H[8] = B2H[7];
                    B2H[5] = B2H[6];
                } else if (240 <= B2H[0][0] && B2H[0][0] < 300) {
                    B2H[4] = B2H[7];
                    B2H[8] = 0;
                    B2H[5] = B2H[6];
                } else if (300 <= B2H[0][0] && B2H[0][0] < 360) {
                    B2H[4] = B2H[6];
                    B2H[8] = 0;
                    B2H[5] = B2H[7];
                }
                I8yy.H2k(104);
                B2H[4] = Math[`round`](I8yy.r2k(255, B2H[2], B2H[4]));
                I8yy.P2k(104);
                B2H[8] = Math[`round`](I8yy.A2k(255, B2H[2], B2H[8]));
                I8yy.H2k(104);
                B2H[5] = Math[`round`](I8yy.A2k(255, B2H[2], B2H[5]));
                I8yy.P2k(115);
                B2H[3] = I8yy.r2k(256, 65536, B2H[5], B2H[4], B2H[8]);
                return B2H[3];
            }
            W2H[7][`onmousedown`] = function(W87) {
                var a2H = [arguments];
                                W2H[96] = true;
                Y1J(a2H[0][0]);
                I8yy.g9b();
                window[`onmouseup`] = function() {
                    var t2H = [arguments];
                                        W2H[96] = false;
                    window[`onmouseup`] = null;
                    F1J(false);
                }
                ;
            }
            ;
            W2H[7][`onmousemove`] = function(Z87) {
                var E2H = [arguments];
                I8yy.w9b();
                if (W2H[96] == false) {
                    return;
                }
                Y1J(E2H[0][0]);
            }
            ;
            this[`showColorPicker`] = function(x87, M87, s87, c87) {
                var R2H = [arguments];
                                W2H[1][`style`][`backgroundColor`] = v2k[79][`numToHex`](R2H[0][0]);
                R2H[6] = G1J(R2H[0][0]);
                W2H[20] = R2H[6][`hue`];
                I8yy.w9b();
                W2H[64] = R2H[6][`brightness`];
                W2H[51] = R2H[6][`saturation`];
                W2H[41] = R2H[0][2];
                W2H[31] = R2H[0][3];
                W2H[70] = R2H[0][0];
                F1J(false);
                c1J(R2H[0][1]);
                W2H[5][`style`][`display`] = `block`;
            }
            ;
            this[`wipeColorHistory`] = function() {
                I8yy.g9b();
                W2H[45] = [];
            }
            ;
            function Y1J(D87) {
                var j7H = [arguments];
                                j7H[4] = j7H[0][0][`target`][`getBoundingClientRect`]();
                I8yy.H2k(60);
                j7H[6] = I8yy.A2k(5, 13, 1, 1001);
                I8yy.H2k(228);
                j7H[9] = I8yy.r2k(150, 495, 297, 16, 15);
                j7H[3] = j7H[0][0][v8yy[j7H[6]]] - j7H[4][v8yy[j7H[9]]];
                I8yy.H2k(113);
                j7H[1] = I8yy.A2k(2, 170, 112, 15);
                I8yy.H2k(16);
                j7H[24] = I8yy.r2k(564, 11, 7902, 15);
                j7H[8] = j7H[0][0][v8yy[j7H[1]]] - j7H[4][v8yy[j7H[24]]];
                I8yy.P2k(174);
                j7H[86] = I8yy.r2k(480, 464, 4, 1, 480);
                j7H[2] = j7H[3] / j7H[4][v8yy[j7H[86]]];
                I8yy.P2k(219);
                j7H[38] = I8yy.A2k(15, 3283, 8, 7, 6574);
                I8yy.w9b();
                j7H[5] = j7H[8] / j7H[4][v8yy[j7H[38]]];
                I8yy.P2k(5);
                W2H[20] = I8yy.r2k(j7H[2], 360);
                I8yy.H2k(1);
                W2H[64] = I8yy.A2k(j7H[5], 1);
                F1J(true);
            }
        }
        v2k[79][`colors`][`push`](0xBDBDBD);
        v2k[79][`colors`][`push`](0x9E9E9E);
        function J4() {
            var k7H = [arguments];
                        k7H[1] = this;
            k7H[3] = ``;
            k7H[6] = document[`getElementById`](`skinmanager`);
            k7H[7] = document[`getElementById`](`skinmanager_close`);
            k7H[8] = document[`getElementById`](`skinmanager_setactive`);
            function G62() {
                I8yy.g9b();
                var f7H = [arguments];
                                k7H[4][`hide`]();
                k7H[6][`style`][`visibility`] = `inherit`;
                k7H[84] = false;
            }
            k7H[5] = document[`getElementById`](`skinmanager_edit`);
            k7H[9] = 0;
            k7H[4] = new N4();
            k7H[4][`on`](`cancel`, G62);
            k7H[4][`on`](`saveAvatar`, X62);
            k7H[84] = false;
            k7H[8][`onclick`] = a62;
            k7H[5][`onclick`] = c62;
            k7H[7][`onclick`] = function() {
                I8yy.g9b();
                l62(`hideSkinManager`);
            }
            ;
            k7H[7][`onmousedown`] = v2k[79][`bbs`];
            k7H[7][`onmouseover`] = v2k[79][`bhs`];
            k7H[11] = [];
            function e62() {
                var G7H = [arguments];
                                I8yy.w9b();
                k7H[4][`show`](v2k[79][`allAvatars`][k7H[9]]);
                k7H[6][`style`][`visibility`] = `hidden`;
                k7H[84] = true;
            }
            k7H[11][0] = document[`getElementById`](`skinmanager_skin1_icon`);
            k7H[11][1] = document[`getElementById`](`skinmanager_skin2_icon`);
            k7H[11][2] = document[`getElementById`](`skinmanager_skin3_icon`);
            k7H[11][3] = document[`getElementById`](`skinmanager_skin4_icon`);
            k7H[11][4] = document[`getElementById`](`skinmanager_skin5_icon`);
            k7H[11][0][`id`] = 0;
            k7H[11][1][`id`] = 1;
            k7H[11][2][`id`] = 2;
            function X62(Y87) {
                var T7H = [arguments];
                                v2k[79][`allAvatars`][k7H[9]] = T7H[0][0];
                I8yy.g9b();
                v2k[79][`avatar`] = v2k[79][`allAvatars`][v2k[79][`activeAvatarNumber`]];
                G62();
                setTimeout(m62, 100);
                if (v2k[79][`guest`] == false) {
                    I8yy.P2k(0);
                    T7H[1] = I8yy.A2k(k7H[9], 1);
                    $[`post`](`https://bonk2.io/scripts/avatar_update.php`, {
                        token: k7H[3],
                        task: `updateavatar`,
                        newavatarslot: T7H[1],
                        newavatar: T7H[0][0][`toString`]()
                    })[`done`]((H62,z62)=>{}
                    )[`fail`](function(N87, V87, g87) {
                        I8yy.g9b();
                        var K7H = [arguments];
                    });
                }
            }
            function y62() {
                var r7H = [arguments];
                                k7H[9] = parseInt(this[`id`]);
                for (r7H[1] = 0; r7H[1] < 5; r7H[1]++) {
                    if (r7H[1] == k7H[9]) {
                        k7H[11][r7H[1]][`style`][`transform`] = `scale(1.2)`;
                    } else {
                        k7H[11][r7H[1]][`style`][`transform`] = ``;
                    }
                }
            }
            k7H[11][3][`id`] = 3;
            k7H[11][4][`id`] = 4;
            k7H[11][0][`onclick`] = y62;
            k7H[11][1][`onclick`] = y62;
            k7H[11][2][`onclick`] = y62;
            k7H[11][3][`onclick`] = y62;
            k7H[11][4][`onclick`] = y62;
            k7H[11][0][`onmouseover`] = v2k[79][`bhs`];
            k7H[11][1][`onmouseover`] = v2k[79][`bhs`];
            k7H[11][2][`onmouseover`] = v2k[79][`bhs`];
            k7H[11][3][`onmouseover`] = v2k[79][`bhs`];
            k7H[11][4][`onmouseover`] = v2k[79][`bhs`];
            function m62() {
                var A7H = [arguments];
                I8yy.g9b();
                                for (A7H[5] = 0; A7H[5] < 5; A7H[5]++) {
                    v8[`createImage`](v2k[79][`allAvatars`][A7H[5]], 1, k7H[11][A7H[5]], ``, 100, 100, null, null, null, 2, 0.05, 0.3);
                    if (v2k[79][`activeAvatarNumber`] == A7H[5]) {
                        k7H[69][A7H[5]][`style`][`visibility`] = `inherit`;
                    } else {
                        k7H[69][A7H[5]][`style`][`visibility`] = `hidden`;
                    }
                    if (k7H[9] == A7H[5]) {
                        k7H[11][A7H[5]][`style`][`transform`] = `scale(1.2)`;
                    } else {
                        k7H[11][A7H[5]][`style`][`transform`] = ``;
                    }
                }
            }
            k7H[11][0][`onmousedown`] = v2k[79][`rlc`];
            k7H[11][1][`onmousedown`] = v2k[79][`rlc`];
            k7H[11][2][`onmousedown`] = v2k[79][`rlc`];
            k7H[11][3][`onmousedown`] = v2k[79][`rlc`];
            k7H[11][4][`onmousedown`] = v2k[79][`rlc`];
            v2k[79][`setButtonSounds`]([k7H[8], k7H[5]]);
            k7H[69] = [];
            k7H[69][0] = document[`getElementById`](`skinmanager_skin1_activetext`);
            k7H[69][1] = document[`getElementById`](`skinmanager_skin2_activetext`);
            k7H[69][2] = document[`getElementById`](`skinmanager_skin3_activetext`);
            function a62() {
                var P7H = [arguments];
                                v2k[79][`activeAvatarNumber`] = k7H[9];
                I8yy.w9b();
                v2k[79][`avatar`] = v2k[79][`allAvatars`][v2k[79][`activeAvatarNumber`]];
                for (P7H[5] = 0; P7H[5] < 5; P7H[5]++) {
                    if (P7H[5] == v2k[79][`activeAvatarNumber`]) {
                        k7H[69][P7H[5]][`style`][`visibility`] = `inherit`;
                    } else {
                        k7H[69][P7H[5]][`style`][`visibility`] = `hidden`;
                    }
                }
                if (v2k[79][`guest`] == false) {
                    I8yy.H2k(63);
                    P7H[7] = I8yy.A2k(1014, 983, 19, 1002, 16);
                    I8yy.H2k(80);
                    P7H[2] = I8yy.A2k(5, 2, 8, 14);
                    P7H[9] = v2k[79][v8yy[P7H[7]]] + P7H[2];
                    $[`post`](`https://bonk2.io/scripts/avatar_update.php`, {
                        token: k7H[3],
                        task: `updateslot`,
                        newactive: P7H[9]
                    })[`done`]((E62,P62)=>{}
                    )[`fail`](function(U87, B87, a87) {
                        var H7H = [arguments];
                    });
                }
            }
            k7H[69][3] = document[`getElementById`](`skinmanager_skin4_activetext`);
            k7H[69][4] = document[`getElementById`](`skinmanager_skin5_activetext`);
            this[`show`] = function(t87) {
                var v7H = [arguments];
                                k7H[3] = v7H[0][0];
                k7H[6][`style`][`visibility`] = `inherit`;
                k7H[6][`style`][`opacity`] = `0`;
                anime({
                    targets: k7H[6],
                    opacity: `1`,
                    autoplay: true,
                    duration: 250,
                    easing: `easeOutCubic`
                });
                I8yy.g9b();
                k7H[9] = v2k[79][`activeAvatarNumber`];
                m62();
            }
            ;
            this[`hideEditorIfShowing`] = function() {
                if (k7H[84]) {
                    G62();
                }
            }
            ;
            k7H[55] = [];
            function l62(...r02) {
                var i7H = [arguments];
                                i7H[1] = r02[`shift`]();
                I8yy.w9b();
                for (i7H[5] = 0; i7H[5] < k7H[55][`length`]; i7H[5]++) {
                    if (k7H[55][i7H[5]][`eventName`] == i7H[1]) {
                        k7H[55][i7H[5]][`callback`](...r02);
                    }
                }
            }
            function c62() {
                e62();
            }
            this[`on`] = function(E87, R87) {
                var u7H = [arguments];
                                k7H[55][`push`]({
                    eventName: u7H[0][0],
                    callback: u7H[0][1]
                });
            }
            ;
        }
        v2k[79][`colors`][`push`](0x757575);
        v2k[79][`colors`][`push`](0x616161);
        v2k[79][`colors`][`push`](0x424242);
        v2k[79][`colors`][`push`](0x212121);
        v2k[79][`colors`][`push`](0x000000);
        v2k[79][`colors`][`push`](0x1ABC9C);
        v2k[79][`colors`][`push`](0x448AFF);
        v2k[79][`colors`][`push`](0xD32F2F);
        v2k[79][`version`] = 44;
        v2k[79][`mapVersion`] = 13;
        v2k[79][`upVotes`] = [];
        v2k[79][`downVotes`] = [];
        v2k[79][`server`] = `river1`;
        v2k[79][`quickMode`] = `bonkquick`;
        v2k[79][`quickExcludeAddresses`] = [];
        v2k[79][`avatar`] = new v2k[38]();
        v2k[79][`avatar`][`randomBC`](v2k[79]);
        v2k[79][`allAvatars`] = [new v2k[38](), new v2k[38](), new v2k[38](), new v2k[38](), new v2k[38]()];
        v2k[79][`allAvatars`][0] = v2k[79][`avatar`];
        v2k[79][`activeAvatarNumber`] = 0;
        v2k[79][`lat`] = 0;
        v2k[79][`long`] = 0;
        v2k[79][`country`] = `na`;
        v2k[79][`dbid`] = 0;
        function U(j37, k37) {
            "use strict";
            var b7H = [arguments];
                        b7H[4] = 1;
            b7H[7] = 0.5;
            b7H[6] = [];
            this[`destroyOneSkin`] = e5y;
            this[`destroySkins`] = Z5y;
            b7H[9] = 0;
            b7H[2] = new V8();
            b7H[8] = document[`getElementById`](`xpbar`);
            b7H[5] = document[`getElementById`](`xpbarcontainer`);
            b7H[1] = document[`getElementById`](`ingametutorial`);
            b7H[93] = document[`getElementById`](`ingametutorial_title`);
            b7H[89] = document[`getElementById`](`ingametutorial_text`);
            b7H[87] = document[`getElementById`](`ingamevotewindow`);
            b7H[65] = PIXI[`Container`];
            b7H[23] = PIXI[`Sprite`];
            b7H[0][0] = b7H[0][0];
            function f1y(f37) {
                I8yy.w9b();
                var d7H = [arguments];
                                b7H[37][`removeChild`](b7H[70][d7H[0][0]]);
                b7H[70][d7H[0][0]][`destroy`]({
                    children: true,
                    texture: true,
                    baseTexture: true
                });
                b7H[70][d7H[0][0]] = null;
            }
            I8yy.P2k(24);
            b7H[284] = I8yy.r2k(1658, 6, 2, 1, 284);
            b7H[27] = b7H[0][1] == v8yy[b7H[284]];
            I8yy.P2k(42);
            b7H[328] = I8yy.r2k(155, 14, 1537);
            b7H[54] = b7H[0][1] == v8yy[b7H[328]];
            function e5y(G37) {
                var e7H = [arguments];
                                I8yy.w9b();
                if (b7H[6][e7H[0][0]]) {
                    e7H[9] = b7H[6][e7H[0][0]];
                    for (e7H[1] = 0; e7H[1] < e7H[9][`svg`][`length`]; e7H[1]++) {
                        if (e7H[9][`svg`][e7H[1]]) {
                            e7H[2] = e7H[9][`svg`][e7H[1]];
                            e7H[2][`destroy`]();
                        }
                    }
                    if (e7H[9][`texture`]) {
                        e7H[9][`texture`][`destroy`](true);
                    }
                    b7H[6][e7H[0][0]] = null;
                }
            }
            I8yy.H2k(16);
            b7H[233] = I8yy.r2k(1700, 19, 28874, 18);
            b7H[44] = b7H[0][1] == v8yy[b7H[233]];
            if (b7H[27]) {
                b7H[77] = U[`thumbRenderer`];
            } else if (b7H[54]) {
                b7H[77] = U[`replayRenderer`];
                b7H[77][`view`][`id`] = `replaycanvas`;
            } else if (b7H[44]) {
                if (!U[`editorRenderer`]) {
                    U[`editorRenderer`] = PIXI[`autoDetectRenderer`]({
                        width: 730,
                        height: 500,
                        antialias: v2k[79][`customControls`][`quality`] == 3,
                        resolution: window[`devicePixelRatio`],
                        autoDensity: true,
                        powerPreference: `high-performance`
                    });
                }
                b7H[77] = U[`editorRenderer`];
            } else {
                b7H[77] = U[`gameRenderer`];
            }
            b7H[0][0][`appendChild`](b7H[77][`view`]);
            b7H[77][`view`][`classList`][`add`](`gamecanvas`);
            b7H[77][`view`][`style`][`visibility`] = `hidden`;
            b7H[96] = 0;
            b7H[92] = 0;
            b7H[51] = 0;
            b7H[73] = new PIXI[`Container`]();
            b7H[73][`y`] = 0;
            b7H[73][`x`] = 0;
            b7H[73][`scale`][`x`] = 1;
            b7H[73][`scale`][`y`] = 1;
            b7H[57] = 2.0;
            b7H[66] = new v2k[38]();
            b7H[66][`bc`] = 0xffffff;
            b7H[84] = [];
            b7H[88] = null;
            if (PIXI[`filters`][`AdjustmentFilter`]) {
                b7H[88] = new PIXI[`filters`][`AdjustmentFilter`]();
            }
            b7H[62] = new PIXI[`filters`][`BlurFilter`]();
            function F1y(T37, K37) {
                var C7H = [arguments];
                C7H[5] = document[`createElement`](`canvas`);
                C7H[3] = C7H[5][`getContext`](`2d`);
                I8yy.P2k(0);
                C7H[5][`width`] = I8yy.r2k(730, 50);
                I8yy.H2k(0);
                C7H[5][`height`] = I8yy.A2k(500, 50);
                C7H[9] = C7H[3][`createRadialGradient`](0, 0, 10, 0, 0, 540);
                C7H[9][`addColorStop`](0, C7H[0][0]);
                C7H[9][`addColorStop`](1, C7H[0][1]);
                C7H[3][`fillStyle`] = C7H[9];
                I8yy.H2k(0);
                C7H[3][`fillRect`](0, 0, I8yy.r2k(730, 50), I8yy.r2k(500, 50));
                return new PIXI[`Texture`][`from`](C7H[5]);
            }
            b7H[17] = new PIXI[`filters`][`BlurFilter`](8,3,1);
            b7H[22] = new PIXI[`filters`][`FXAAFilter`]();
            b7H[76] = [];
            b7H[59] = [];
            b7H[47] = [];
            b7H[52] = [];
            b7H[70] = [];
            b7H[33] = [];
            b7H[98] = [];
            b7H[45] = -1;
            b7H[50] = 0;
            b7H[26] = [];
            b7H[94] = [];
            b7H[69] = -1;
            b7H[25] = [];
            b7H[99] = [];
            b7H[68] = false;
            b7H[95] = false;
            b7H[97] = false;
            b7H[16] = false;
            b7H[40] = false;
            b7H[11] = undefined;
            b7H[39] = undefined;
            U[`panSmooth`] = 0.05;
            this[`getCanvas`] = function() {
                var l7H = [arguments];
                I8yy.g9b();
                return b7H[77][`view`];
            }
            ;
            b7H[67] = new PIXI[`Graphics`]();
            b7H[14] = F1y(`#3b536b`, `#2c3e50`);
            b7H[67][`beginTextureFill`]({
                texture: b7H[14]
            });
            I8yy.P2k(0);
            b7H[67][`drawRect`](0, 0, I8yy.r2k(730, 50), I8yy.r2k(500, 50));
            b7H[73][`addChild`](b7H[67]);
            b7H[67][`x`] = -25;
            b7H[67][`y`] = -25;
            if (PIXI[`CanvasRenderer`] && b7H[77]instanceof PIXI[`CanvasRenderer`]) {
                b7H[67][`beginFill`](0x21374e);
                I8yy.H2k(0);
                b7H[67][`drawRect`](0, 0, I8yy.r2k(730, 50), I8yy.A2k(500, 50));
            }
            b7H[81] = new PIXI[`Container`]();
            b7H[28] = new PIXI[`Container`]();
            b7H[37] = new PIXI[`Container`]();
            b7H[13] = new PIXI[`Container`]();
            b7H[55] = new PIXI[`Container`]();
            b7H[38] = new PIXI[`Container`]();
            b7H[71] = new PIXI[`Graphics`]();
            b7H[73][`addChild`](b7H[38]);
            b7H[38][`addChild`](b7H[37]);
            b7H[38][`addChild`](b7H[55]);
            b7H[38][`addChild`](b7H[13]);
            b7H[38][`addChild`](b7H[81]);
            b7H[38][`addChild`](b7H[28]);
            function Z5y() {
                var o7H = [arguments];
                                I8yy.g9b();
                for (o7H[1] = 0; o7H[1] < b7H[6][`length`]; o7H[1]++) {
                    e5y(o7H[1]);
                }
                b7H[6] = [];
            }
            b7H[38][`addChild`](b7H[71]);
            b7H[64] = new PIXI[`Graphics`]();
            b7H[64][`beginTextureFill`]({
                texture: b7H[14]
            });
            I8yy.P2k(0);
            b7H[64][`drawRect`](0, 0, I8yy.r2k(730, 50), I8yy.A2k(500, 50));
            b7H[64][`x`] = -25;
            b7H[64][`y`] = -25;
            b7H[73][`addChild`](b7H[64]);
            b7H[64][`alpha`] = 0;
            b7H[12] = null;
            if (b7H[44]) {
                b7H[29] = new PIXI[`Graphics`]();
                b7H[979] = -1862398375;
                b7H[661] = 1909782634;
                b7H[990] = 2;
                for (b7H[351] = 1; I8yy.m1f(b7H[351].toString(), b7H[351].toString().length, 75706) !== b7H[979]; b7H[351]++) {
                    b7H[29][`lht`](3, 0x6f7a72);
                    I8yy.H2k(2);
                    b7H[29][`playSound`](!1, +3, I8yy.r2k(711, 5), I8yy.A2k(474, 5, I8yy.P2k(34)));
                    b7H[38][`capzone`](b7H[29]);
                    b7H[12] = new PIXI[`done`]();
                    b7H[990] += 2;
                }
                if (I8yy.d1f(b7H[990].toString(), b7H[990].toString().length, 28158) !== b7H[661]) {
                    b7H[29][`lineStyle`](4, 0xffff00);
                    I8yy.H2k(0);
                    b7H[29][`drawRect`](-2, -2, I8yy.A2k(730, 4), I8yy.r2k(500, 4));
                    b7H[38][`addChild`](b7H[29]);
                    b7H[12] = new PIXI[`Graphics`]();
                }
                b7H[38][`addChild`](b7H[12]);
            }
            b7H[91] = null;
            b7H[53] = null;
            b7H[31] = null;
            b7H[30] = null;
            b7H[78] = new TWEEN[`Group`]();
            b7H[85] = new TWEEN[`Group`]();
            b7H[20] = document[`getElementById`](`ingamewinner`);
            function k1y() {
                b7H[95] = true;
            }
            b7H[32] = document[`getElementById`](`ingamewinner_top`);
            b7H[83] = document[`getElementById`](`ingamewinner_bottom`);
            b7H[21] = document[`getElementById`](`ingamewinner_skin`);
            b7H[61] = document[`getElementById`](`ingamewinner_skin_skin`);
            b7H[10] = document[`getElementById`](`ingamewinner_skin_x`);
            b7H[46] = new PIXI[`Container`]();
            b7H[41] = new PIXI[`Text`](`Chaz wins`,{
                fontFamily: `futurept_demi_oblique`,
                fontSize: 45,
                fill: 0xfafafa,
                padding: 5
            });
            b7H[41][`resolution`] = b7H[57];
            b7H[73][`addChild`](b7H[46]);
            I8yy.P2k(105);
            b7H[414] = I8yy.r2k(9360, 6, 454, 16, 1168);
            I8yy.H2k(80);
            b7H[874] = I8yy.r2k(11, 4, 8, 3);
            b7H[19] = b7H[41][v8yy[b7H[414]]] + b7H[874];
            I8yy.P2k(43);
            b7H[244] = I8yy.A2k(1, 1, 43, 426);
            I8yy.P2k(1);
            b7H[669] = I8yy.r2k(14, 29);
            b7H[90] = b7H[41][v8yy[b7H[244]]] + b7H[669];
            I8yy.H2k(1);
            b7H[250] = I8yy.r2k(10, 478);
            I8yy.P2k(1);
            b7H[570] = I8yy.A2k(6, 8);
            b7H[41][`x`] = -b7H[41][v8yy[b7H[250]]] / b7H[570];
            I8yy.H2k(1);
            b7H[127] = I8yy.r2k(8442, 8911);
            I8yy.P2k(1);
            b7H[743] = I8yy.A2k(15, 17);
            b7H[41][`y`] = -b7H[41][v8yy[b7H[127]]] / b7H[743];
            b7H[82] = new PIXI[`Graphics`]();
            b7H[82][`beginFill`](0x000000);
            b7H[82][`alpha`] = 0.25;
            I8yy.P2k(149);
            b7H[82][`drawRect`](I8yy.A2k(b7H[19], 2), I8yy.r2k(b7H[90], 2), b7H[19], b7H[90]);
            b7H[46][`addChild`](b7H[82]);
            b7H[46][`addChild`](b7H[41]);
            b7H[46][`alpha`] = 0;
            function r1y(r37) {
                var I7H = [arguments];
                                b7H[37][`removeChild`](b7H[99][I7H[0][0]]);
                b7H[99][I7H[0][0]][`destroy`]({
                    children: true,
                    texture: true,
                    baseTexture: true
                });
                b7H[99][I7H[0][0]] = null;
            }
            I8yy.P2k(2);
            b7H[46][`x`] = I8yy.A2k(730, 2);
            b7H[46][`y`] = 220;
            b7H[48] = new PIXI[`Container`]();
            b7H[42] = new PIXI[`Text`](`FIRST TO 6 WINS`,{
                fontFamily: `futurept_medium_oblique`,
                fontSize: 12,
                fill: 0xeeeeee,
                padding: 1
            });
            b7H[42][`resolution`] = b7H[57];
            b7H[73][`addChild`](b7H[48]);
            I8yy.P2k(43);
            b7H[761] = I8yy.r2k(1, 1, 36, 432);
            I8yy.P2k(21);
            b7H[681] = I8yy.A2k(17, 9, 17);
            b7H[19] = b7H[42][v8yy[b7H[761]]] + b7H[681];
            I8yy.P2k(59);
            b7H[709] = I8yy.r2k(2, 21419, 2, 456, 12);
            I8yy.P2k(32);
            b7H[536] = I8yy.A2k(19, 18, 6);
            b7H[90] = b7H[42][v8yy[b7H[709]]] + b7H[536];
            I8yy.H2k(0);
            b7H[124] = I8yy.r2k(462, 6);
            I8yy.P2k(229);
            b7H[926] = I8yy.A2k(8, 7, 19, 13, 4);
            b7H[42][`x`] = -b7H[42][v8yy[b7H[124]]] / b7H[926];
            I8yy.P2k(85);
            b7H[435] = I8yy.r2k(1431, 477, 467, 6);
            I8yy.H2k(1);
            b7H[238] = I8yy.r2k(36, 38);
            b7H[42][`y`] = -b7H[42][v8yy[b7H[435]]] / b7H[238];
            b7H[36] = new PIXI[`Graphics`]();
            b7H[36][`beginFill`](0x000000);
            b7H[36][`alpha`] = 0.25;
            I8yy.H2k(149);
            b7H[36][`drawRect`](-80, I8yy.A2k(b7H[90], 2), 160, b7H[90]);
            b7H[48][`addChild`](b7H[36]);
            b7H[48][`addChild`](b7H[42]);
            b7H[48][`alpha`] = 0;
            I8yy.H2k(2);
            b7H[48][`x`] = I8yy.A2k(730, 2);
            b7H[48][`y`] = 420;
            b7H[58] = new PIXI[`Container`]();
            b7H[18] = new PIXI[`Text`](`Chaz:
Fantao:
FannyFlaps:`,{
                fontFamily: `futurept_medium_oblique`,
                fontSize: 16,
                fill: 0xeeeeee,
                padding: 5,
                align: `left`
            });
            b7H[24] = new PIXI[`Text`](`0
0
0`,{
                fontFamily: `futurept_medium_oblique`,
                fontSize: 16,
                fill: 0xeeeeee,
                padding: 5,
                align: `right`
            });
            b7H[24][`anchor`][`set`](1, 0);
            b7H[18][`resolution`] = b7H[57];
            b7H[24][`resolution`] = b7H[57];
            b7H[73][`addChild`](b7H[58]);
            I8yy.H2k(129);
            b7H[803] = I8yy.r2k(12, 469, 243, 486, 10);
            I8yy.H2k(12);
            b7H[340] = I8yy.A2k(3, 120, 97);
            b7H[19] = b7H[18][v8yy[b7H[803]]] + b7H[340];
            I8yy.H2k(40);
            b7H[171] = I8yy.r2k(14, 3, 480);
            I8yy.P2k(20);
            b7H[816] = I8yy.r2k(15, 3, 114, 5, 30);
            b7H[90] = b7H[18][v8yy[b7H[171]]] + b7H[816];
            I8yy.P2k(203);
            b7H[18][`x`] = I8yy.A2k(70, 5);
            b7H[18][`y`] = -0;
            b7H[24][`x`] = 75;
            b7H[24][`y`] = -0;
            b7H[34] = new PIXI[`Graphics`]();
            b7H[34][`beginFill`](0x000000);
            b7H[34][`alpha`] = 0.25;
            b7H[34][`drawRect`](-80, -3, 160, b7H[90]);
            b7H[58][`addChild`](b7H[34]);
            b7H[58][`addChild`](b7H[18]);
            b7H[58][`addChild`](b7H[24]);
            b7H[58][`alpha`] = 0;
            I8yy.P2k(2);
            b7H[58][`x`] = I8yy.r2k(730, 2);
            b7H[58][`y`] = 320;
            b7H[74] = new PIXI[`Container`]();
            b7H[35] = new PIXI[`Text`](`Map X by Author Y`,{
                fontFamily: `futurept_book`,
                fontSize: 11,
                fill: 0xfafafa,
                padding: 4
            });
            b7H[35][`resolution`] = b7H[57];
            b7H[73][`addChild`](b7H[74]);
            I8yy.H2k(9);
            b7H[721] = I8yy.r2k(6828, 16, 456);
            I8yy.P2k(26);
            b7H[860] = I8yy.r2k(11, 15, 1201, 80);
            b7H[19] = b7H[35][v8yy[b7H[721]]] + b7H[860];
            I8yy.P2k(79);
            b7H[415] = I8yy.A2k(29, 6, 462, 29);
            I8yy.P2k(1);
            b7H[256] = I8yy.A2k(7, 12);
            b7H[90] = b7H[35][v8yy[b7H[415]]] + b7H[256];
            I8yy.H2k(85);
            b7H[356] = I8yy.r2k(9, 234, 156, 12);
            I8yy.H2k(1);
            b7H[101] = I8yy.A2k(11, 13);
            b7H[35][`x`] = -b7H[35][v8yy[b7H[356]]] / b7H[101];
            I8yy.P2k(17);
            b7H[296] = I8yy.r2k(9, 37, 13, 454);
            I8yy.H2k(98);
            b7H[326] = I8yy.r2k(19, 17);
            b7H[35][`y`] = -b7H[35][v8yy[b7H[296]]] / b7H[326];
            b7H[49] = new PIXI[`Graphics`]();
            b7H[49][`beginFill`](0x000000);
            b7H[49][`alpha`] = 0.25;
            I8yy.P2k(149);
            b7H[49][`drawRect`](I8yy.r2k(b7H[19], 2), I8yy.r2k(b7H[90], 2), b7H[19], b7H[90]);
            b7H[74][`addChild`](b7H[49]);
            b7H[74][`addChild`](b7H[35]);
            b7H[74][`alpha`] = 1;
            function v1y() {
                var F7H = [arguments];
                                for (F7H[9] = 0; F7H[9] < b7H[76][`length`]; F7H[9]++) {
                    if (b7H[76][F7H[9]]) {
                        K1y(F7H[9]);
                    }
                }
                for (F7H[4] = 0; F7H[4] < b7H[70][`length`]; F7H[4]++) {
                    if (b7H[70][F7H[4]]) {
                        f1y(F7H[4]);
                    }
                }
                b7H[26] = [];
                b7H[33] = [];
                b7H[94] = [];
                for (F7H[6] = 0; F7H[6] < b7H[25][`length`]; F7H[6]++) {
                    if (b7H[25][F7H[6]]) {
                        b7H[37][`removeChild`](b7H[25][F7H[6]]);
                        b7H[25][F7H[6]][`destroy`]({
                            children: true,
                            texture: true,
                            baseTexture: true
                        });
                    }
                }
                I8yy.w9b();
                b7H[25] = [];
                for (F7H[3] = 0; F7H[3] < b7H[99][`length`]; F7H[3]++) {
                    if (b7H[99][F7H[3]]) {
                        r1y(F7H[3]);
                    }
                }
                b7H[99] = [];
                if (b7H[52]) {
                    for (F7H[1] = 0; F7H[1] < b7H[52][`length`]; F7H[1]++) {
                        b7H[37][`removeChild`](b7H[52][F7H[1]]);
                        b7H[52][F7H[1]][`destroy`]({
                            children: true,
                            texture: true,
                            baseTexture: true
                        });
                    }
                }
                b7H[52] = [];
                b7H[68] = false;
            }
            I8yy.P2k(32);
            b7H[815] = I8yy.r2k(14, 8, 11);
            I8yy.P2k(110);
            b7H[612] = I8yy.r2k(467, 11, 462, 473);
            I8yy.H2k(98);
            b7H[783] = I8yy.A2k(14, 12);
            b7H[74][`x`] = 730 - b7H[815] - b7H[74][v8yy[b7H[612]]] / b7H[783];
            I8yy.P2k(11);
            b7H[433] = I8yy.r2k(489, 12, 7, 163, 492);
            I8yy.H2k(98);
            b7H[629] = I8yy.r2k(17, 12);
            I8yy.P2k(85);
            b7H[350] = I8yy.r2k(4, 31, 345, 16);
            I8yy.P2k(114);
            b7H[584] = I8yy.A2k(7, 194, 28, 1);
            b7H[74][`y`] = b7H[433] - b7H[629] - b7H[74][v8yy[b7H[350]]] / b7H[584];
            function K1y(A37) {
                var L7H = [arguments];
                                b7H[28][`removeChild`](b7H[76][L7H[0][0]][`offscreencontainer`]);
                b7H[76][L7H[0][0]][`offscreencontainer`][`destroy`]({
                    children: true,
                    texture: true,
                    baseTexture: true
                });
                b7H[81][`removeChild`](b7H[76][L7H[0][0]][`container`]);
                b7H[76][L7H[0][0]][`container`][`destroy`]({
                    children: true,
                    texture: true,
                    baseTexture: true
                });
                b7H[76][L7H[0][0]] = null;
            }
            function R1y(P37, H37, v37) {
                var J7H = [arguments];
                                J7H[0][2] = 30;
                I8yy.H2k(2);
                J7H[5] = I8yy.r2k(J7H[0][2], 15);
                J7H[2] = 2;
                b7H[6][J7H[0][0]] = {
                    texture: null,
                    inProgress: true,
                    layerProgress: [],
                    svg: [],
                    totalSize: J7H[0][1] * J7H[5] * J7H[2]
                };
                J7H[9] = b7H[98][J7H[0][0]][`avatar`][`layers`];
                J7H[7] = function(i37) {
                    var h7H = [arguments];
                                        h7H[7] = J7H[9][h7H[0][0]];
                    if (!(h7H[7][`id`] >= 0 && h7H[7][`id`] <= 115) || Math[`abs`](h7H[7][`x`]) > 9999 || Math[`abs`](h7H[7][`y`]) > 9999 || h7H[7][`scale`] > 999 || h7H[7][`angle`] > 9999 || isNaN(h7H[7][`color`]) || typeof h7H[7][`color`] != `number` || typeof h7H[7][`flipX`] != `boolean` || typeof h7H[7][`flipY`] != `boolean`) {
                        return `continue`;
                    }
                    h7H[1] = h7H[7][`id`][`toString`]();
                    if (h7H[7][`id`] < 10) {
                        I8yy.P2k(120);
                        h7H[5] = I8yy.A2k(7, 1421, 13, 283);
                        h7H[1] = v8yy[h7H[5]] + h7H[1];
                    }
                    if (h7H[7][`id`] < 100) {
                        I8yy.P2k(21);
                        h7H[4] = I8yy.r2k(10188, 1697, 10188);
                        h7H[1] = v8yy[h7H[4]] + h7H[1];
                    }
                    h7H[9] = null;
                    try {
                        h7H[9] = new PIXI[`resources`][`SVGResource`](GameResources[`svgStrings`][h7H[7][`id`]],{
                            scale: h7H[7][`scale`] * J7H[0][1] * J7H[5] * J7H[2],
                            autoload: false
                        });
                    } catch (G1y) {}
                    b7H[6][J7H[0][0]][`layerProgress`][h7H[0][0]] = false;
                    b7H[6][J7H[0][0]][`svg`][h7H[0][0]] = h7H[9];
                    h7H[9][`load`]()[`then`](function() {
                        var X7H = [arguments];
                                                I8yy.w9b();
                        b7H[6][J7H[0][0]][`layerProgress`][h7H[0][0]] = true;
                        Q1y(J7H[0][0]);
                    });
                }
                ;
                for (J7H[8] = J7H[9][`length`] - 1; J7H[8] >= 0; J7H[8]--) {
                    J7H[3] = (1,
                    J7H[7])(J7H[8]);
                    if (J7H[3] === `continue`)
                        continue;
                }
            }
            if (b7H[27] || b7H[44] || b7H[54]) {
                b7H[74][`visible`] = false;
            }
            b7H[60] = new PIXI[`Container`]();
            b7H[73][`addChild`](b7H[60]);
            b7H[60][`visible`] = false;
            b7H[75] = new PIXI[`Text`](`You are currently spectating`,{
                fontFamily: `futurept_book`,
                fontSize: 14,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[75][`resolution`] = b7H[57];
            b7H[75][`x`] = 8;
            b7H[75][`y`] = 5;
            b7H[63] = new PIXI[`Text`](`You will join this game at the start of the next round`,{
                fontFamily: `futurept_book`,
                fontSize: 12,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[63][`resolution`] = b7H[57];
            b7H[63][`x`] = 8;
            b7H[63][`y`] = 26;
            b7H[43] = new PIXI[`Graphics`]();
            b7H[43][`beginFill`](0x000000);
            b7H[43][`alpha`] = 0.35;
            b7H[43][`drawRect`](0, 0, 260, 46);
            b7H[60][`addChild`](b7H[43]);
            b7H[60][`addChild`](b7H[75]);
            function Q1y(u37) {
                var m7H = [arguments];
                                m7H[8] = true;
                for (m7H[24] = 0; m7H[24] < b7H[6][m7H[0][0]][`layerProgress`][`length`]; m7H[24]++) {
                    if (b7H[6][m7H[0][0]][`layerProgress`][m7H[24]] == false) {
                        m7H[8] = false;
                        break;
                    }
                }
                if (m7H[8] == true) {
                    m7H[1] = b7H[6][m7H[0][0]];
                    m7H[3] = b7H[98][m7H[0][0]][`avatar`][`layers`];
                    m7H[5] = new PIXI[`Sprite`]();
                    m7H[6] = new PIXI[`Graphics`]();
                    m7H[6][`beginFill`](b7H[98][m7H[0][0]][`avatar`][`bc`]);
                    m7H[6][`drawRect`](-256, -256, 512, 512);
                    m7H[6][`endFill`]();
                    m7H[5][`addChild`](m7H[6]);
                    m7H[2] = [];
                    for (m7H[16] = m7H[1][`svg`][`length`] - 1; m7H[16] >= 0; m7H[16]--) {
                        if (!m7H[1][`svg`][m7H[16]])
                            continue;
                        m7H[7] = PIXI[`Texture`][`from`](m7H[1][`svg`][m7H[16]]);
                        m7H[4] = new PIXI[`Sprite`](m7H[7]);
                        m7H[2][`push`](m7H[4]);
                        m7H[2][`push`](m7H[7]);
                        m7H[34] = m7H[3][m7H[16]];
                        m7H[4][`tint`] = m7H[34][`color`];
                        m7H[4][`anchor`][`set`](0.5);
                        m7H[4][`angle`] = m7H[34][`angle`];
                        I8yy.H2k(224);
                        m7H[35] = I8yy.r2k(10, 17, 3, 19, 201);
                        I8yy.P2k(35);
                        m7H[62] = I8yy.r2k(40, 158, 7);
                        m7H[4][`x`] = m7H[34][v8yy[m7H[35]]] * m7H[1][v8yy[m7H[62]]];
                        I8yy.H2k(1);
                        m7H[25] = I8yy.A2k(3, 43);
                        I8yy.H2k(16);
                        m7H[20] = I8yy.A2k(427, 15, 5098, 13);
                        m7H[4][`y`] = m7H[34][v8yy[m7H[25]]] * m7H[1][v8yy[m7H[20]]];
                        m7H[12] = m7H[34][`flipX`] ? -1 : 1;
                        m7H[31] = m7H[34][`flipY`] ? -1 : 1;
                        m7H[4][`scale`][`x`] *= m7H[12];
                        m7H[4][`scale`][`y`] *= m7H[31];
                        m7H[5][`addChild`](m7H[4]);
                    }
                    I8yy.P2k(29);
                    m7H[54] = I8yy.A2k(63, 1, 435, 22, 3);
                    I8yy.P2k(180);
                    m7H[66] = I8yy.r2k(5, 35, 9, 6);
                    m7H[5][`x`] = m7H[1][v8yy[m7H[54]]] * m7H[66];
                    I8yy.H2k(31);
                    m7H[64] = I8yy.r2k(4, 447, 1390, 10);
                    I8yy.P2k(230);
                    m7H[73] = I8yy.A2k(12, 1, 19, 8, 2);
                    m7H[5][`y`] = m7H[1][v8yy[m7H[64]]] * m7H[73];
                    m7H[15] = PIXI[`RenderTexture`][`create`]({
                        width: 512,
                        height: 512
                    });
                    b7H[77][`render`](m7H[5], m7H[15]);
                    b7H[6][m7H[0][0]][`texture`] = m7H[15];
                    for (m7H[58] = 0; m7H[58] < m7H[1][`svg`][`length`]; m7H[58]++) {
                        if (m7H[1][`svg`][m7H[58]]) {
                            m7H[91] = m7H[1][`svg`][m7H[58]];
                            m7H[91][`destroy`]();
                        }
                    }
                    for (m7H[52] = 0; m7H[52] < m7H[2][`length`]; m7H[52]++) {
                        m7H[2][m7H[52]][`destroy`]();
                    }
                    m7H[2] = null;
                }
            }
            b7H[60][`addChild`](b7H[63]);
            b7H[60][`x`] = 5;
            b7H[60][`y`] = 40;
            b7H[86] = new PIXI[`Container`]();
            b7H[73][`addChild`](b7H[86]);
            b7H[86][`visible`] = false;
            b7H[72] = new PIXI[`Text`](`Please wait a moment`,{
                fontFamily: `futurept_book`,
                fontSize: 14,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[72][`resolution`] = b7H[57];
            b7H[72][`x`] = 8;
            b7H[72][`y`] = 5;
            b7H[80] = new PIXI[`Text`](`You will be matched with other players shortly`,{
                fontFamily: `futurept_book`,
                fontSize: 12,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[80][`resolution`] = b7H[57];
            b7H[80][`x`] = 8;
            b7H[80][`y`] = 26;
            b7H[56] = new PIXI[`Graphics`]();
            b7H[56][`beginFill`](0x000000);
            b7H[56][`alpha`] = 0.35;
            b7H[56][`drawRect`](0, 0, 260, 46);
            b7H[86][`addChild`](b7H[56]);
            b7H[86][`addChild`](b7H[72]);
            b7H[86][`addChild`](b7H[80]);
            b7H[86][`x`] = 5;
            b7H[86][`y`] = 40;
            b7H[15] = new PIXI[`Container`]();
            b7H[73][`addChild`](b7H[15]);
            b7H[15][`visible`] = false;
            b7H[79] = new PIXI[`Text`](`You are about to be kicked for inactivity`,{
                fontFamily: `futurept_book`,
                fontSize: 14,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[79][`resolution`] = b7H[57];
            b7H[79][`x`] = 8;
            b7H[79][`y`] = 5;
            b7H[106] = new PIXI[`Text`](`Press any movement key to stay in this room!`,{
                fontFamily: `futurept_book`,
                fontSize: 12,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[106][`resolution`] = b7H[57];
            b7H[106][`x`] = 8;
            b7H[106][`y`] = 26;
            b7H[319] = new PIXI[`Graphics`]();
            b7H[319][`beginFill`](0x000000);
            b7H[319][`alpha`] = 0.35;
            b7H[319][`drawRect`](0, 0, 260, 46);
            b7H[15][`addChild`](b7H[319]);
            b7H[15][`addChild`](b7H[79]);
            b7H[15][`addChild`](b7H[106]);
            b7H[15][`x`] = 5;
            b7H[15][`y`] = 90;
            b7H[162] = new PIXI[`Graphics`]();
            I8yy.H2k(2);
            b7H[162][`x`] = I8yy.r2k(730, 2);
            b7H[162][`y`] = 220;
            b7H[73][`addChild`](b7H[162]);
            b7H[380] = 260;
            b7H[353] = new PIXI[`Graphics`]();
            b7H[353][`beginFill`](0x000000, 0.40);
            I8yy.P2k(149);
            b7H[353][`drawRect`](I8yy.r2k(b7H[380], 2), I8yy.A2k(50, 2), b7H[380], 50);
            b7H[162][`addChild`](b7H[353]);
            b7H[366] = new PIXI[`Graphics`]();
            b7H[366][`beginFill`](0x000000, 0.40);
            I8yy.H2k(149);
            b7H[366][`drawRect`](I8yy.r2k(b7H[380], 2), I8yy.A2k(25, 2), b7H[380], 25);
            b7H[162][`addChild`](b7H[366]);
            b7H[129] = new PIXI[`Graphics`]();
            b7H[129][`beginFill`](0x000000, 0.40);
            I8yy.H2k(149);
            b7H[129][`drawRect`](I8yy.A2k(b7H[380], 2), I8yy.r2k(20, 2), b7H[380], 20);
            b7H[162][`addChild`](b7H[129]);
            b7H[234] = new PIXI[`Text`](`ARROWS`,{
                fontFamily: `futurept_medium`,
                fontSize: 36,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[231] = new PIXI[`Text`](`5v1`,{
                fontFamily: `futurept_medium`,
                fontSize: 16,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[850] = new PIXI[`Text`](`FIRST TO 5 WINS`,{
                fontFamily: `futurept_medium`,
                fontSize: 13,
                fill: 0xeeeeee,
                padding: 4
            });
            b7H[234][`anchor`][`set`](0.5, 0.5);
            function E4y(b37, d37, e37) {
                var Q7H = [arguments];
                                Q7H[7] = Q7H[0][2];
                Q7H[6] = Math[`cos`](Q7H[7]);
                Q7H[2] = Math[`sin`](Q7H[7]);
                I8yy.H2k(231);
                Q7H[1] = I8yy.r2k(8, 4, 37, 4, 14);
                I8yy.H2k(21);
                Q7H[4] = I8yy.r2k(22, 37, 11);
                Q7H[9] = Q7H[0][1][v8yy[Q7H[1]]] - Q7H[0][0][v8yy[Q7H[4]]];
                I8yy.H2k(43);
                Q7H[5] = I8yy.r2k(26, 1, 26, 39);
                I8yy.H2k(0);
                Q7H[37] = I8yy.r2k(25, 15);
                Q7H[8] = Q7H[0][1][v8yy[Q7H[5]]] - Q7H[0][0][v8yy[Q7H[37]]];
                return {
                    x: Q7H[6] * Q7H[9] - Q7H[2] * Q7H[8] + Q7H[0][0][`x`],
                    y: Q7H[2] * Q7H[9] + Q7H[6] * Q7H[8] + Q7H[0][0][`y`]
                };
            }
            b7H[231][`anchor`][`set`](0.5, 0.5);
            b7H[850][`anchor`][`set`](0.5, 0.5);
            b7H[234][`resolution`] = b7H[57];
            b7H[231][`resolution`] = b7H[57];
            b7H[850][`resolution`] = b7H[57];
            b7H[162][`addChild`](b7H[234]);
            b7H[162][`addChild`](b7H[231]);
            b7H[162][`addChild`](b7H[850]);
            b7H[234][`y`] = b7H[353][`y`] = 0;
            b7H[231][`y`] = b7H[366][`y`] = 44;
            b7H[850][`y`] = b7H[129][`y`] = 70;
            b7H[805] = -1;
            b7H[444] = 2;
            b7H[144] = [];
            b7H[178] = [];
            for (b7H[358] = 0; b7H[358] < b7H[444]; b7H[358]++) {
                b7H[144][`push`](new Howl({
                    src: GameResources[`soundStrings`][`capIncrease`],
                    volume: 0.5,
                    loop: false
                }));
                b7H[178][`push`](new Howl({
                    src: GameResources[`soundStrings`][`capDecrease`],
                    volume: 0.5,
                    loop: false
                }));
            }
            b7H[148] = new v2k[58](b7H[73],b7H[57]);
            k1y();
            b7H[494] = {
                blur: 0
            };
            b7H[618] = null;
            this[`blur`] = function() {
                var q7H = [arguments];
                                if (b7H[618]) {
                    b7H[618][`pause`]();
                }
                b7H[618] = anime({
                    targets: b7H[494],
                    blur: `6`,
                    autoplay: true,
                    duration: 100,
                    delay: 0,
                    easing: `linear`
                });
            }
            ;
            this[`unblur`] = function() {
                var S7H = [arguments];
                                if (b7H[618]) {
                    b7H[618][`pause`]();
                }
                b7H[618] = anime({
                    targets: b7H[494],
                    blur: `0`,
                    autoplay: true,
                    duration: 100,
                    delay: 0,
                    easing: `linear`
                });
            }
            ;
            this[`panStage`] = function(C37, l37) {
                var w7H = [arguments];
                                b7H[38][`x`] += w7H[0][0];
                b7H[38][`y`] += w7H[0][1];
            }
            ;
            this[`scaleStage`] = function(o37) {
                var z7H = [arguments];
                                I8yy.H2k(127);
                z7H[90] = I8yy.A2k(29, 7, 31, 49, 20);
                I8yy.P2k(0);
                z7H[50] = I8yy.A2k(52, 313);
                I8yy.H2k(32);
                z7H[53] = I8yy.r2k(14, 726, 18);
                I8yy.P2k(1);
                z7H[73] = I8yy.r2k(7452, 7866);
                I8yy.P2k(32);
                z7H[21] = I8yy.r2k(444, 468, 15);
                z7H[4] = (-b7H[38][v8yy[z7H[90]]] + z7H[50]) / (z7H[53] * b7H[38][v8yy[z7H[73]]][v8yy[z7H[21]]]);
                I8yy.H2k(87);
                z7H[44] = I8yy.r2k(13, 200, 13, 2535, 12);
                I8yy.P2k(22);
                z7H[10] = I8yy.A2k(249, 2011, 11, 2000);
                I8yy.P2k(32);
                z7H[93] = I8yy.r2k(1013, 1500, 13);
                I8yy.H2k(0);
                z7H[88] = I8yy.r2k(83, 331);
                I8yy.P2k(79);
                z7H[42] = I8yy.r2k(2, 9, 30, 2);
                z7H[6] = (-b7H[38][v8yy[z7H[44]]] + z7H[10]) / (z7H[93] * b7H[38][v8yy[z7H[88]]][v8yy[z7H[42]]]);
                I8yy.H2k(32);
                z7H[57] = I8yy.A2k(19, 736, 13);
                I8yy.P2k(9);
                z7H[17] = I8yy.A2k(5578, 14, 428);
                I8yy.H2k(175);
                z7H[33] = I8yy.A2k(17, 780, 224, 3, 20);
                z7H[3] = z7H[57] * b7H[38][v8yy[z7H[17]]][v8yy[z7H[33]]];
                I8yy.H2k(214);
                z7H[78] = I8yy.A2k(20, 488, 12, 122, 212);
                I8yy.H2k(82);
                z7H[14] = I8yy.r2k(423, 11, 13, 74570, 14);
                I8yy.H2k(12);
                z7H[84] = I8yy.A2k(7, 160, 113);
                z7H[7] = z7H[78] * b7H[38][v8yy[z7H[14]]][v8yy[z7H[84]]];
                b7H[38][`scale`][`x`] *= z7H[0][0];
                b7H[38][`scale`][`y`] *= z7H[0][0];
                I8yy.H2k(157);
                z7H[11] = I8yy.r2k(8, 6, 73, 12, 600);
                I8yy.H2k(32);
                z7H[40] = I8yy.A2k(15, 410, 19);
                I8yy.H2k(21);
                z7H[70] = I8yy.r2k(50, 37, 25);
                z7H[1] = z7H[11] * b7H[38][v8yy[z7H[40]]][v8yy[z7H[70]]];
                I8yy.P2k(56);
                z7H[39] = I8yy.r2k(5, 507, 3, 5);
                I8yy.P2k(144);
                z7H[31] = I8yy.A2k(10, 13, 171, 23);
                I8yy.P2k(1);
                z7H[38] = I8yy.A2k(20, 60);
                z7H[5] = z7H[39] * b7H[38][v8yy[z7H[31]]][v8yy[z7H[38]]];
                I8yy.H2k(1);
                z7H[9] = I8yy.A2k(z7H[3], z7H[1]);
                I8yy.P2k(1);
                z7H[2] = I8yy.r2k(z7H[7], z7H[5]);
                I8yy.H2k(126);
                this[`panStage`](I8yy.r2k(z7H[4], z7H[9]), I8yy.r2k(z7H[6], z7H[2]));
            }
            ;
            this[`getStageScale`] = function() {
                I8yy.g9b();
                var n7H = [arguments];
                return b7H[38][`scale`][`x`];
            }
            ;
            this[`resetStage`] = function() {
                var y7H = [arguments];
                I8yy.g9b();
                                b7H[38][`x`] = 0;
                b7H[38][`y`] = 0;
                b7H[38][`scale`][`x`] = 1;
                b7H[38][`scale`][`y`] = 1;
            }
            ;
            this[`screenRatioToPhysicsCoordinate`] = function(I37, F37) {
                var p7H = [arguments];
                I8yy.P2k(0);
                p7H[63] = I8yy.r2k(4, 35);
                I8yy.P2k(91);
                p7H[16] = I8yy.A2k(2, 10, 14, 56874, 409);
                I8yy.P2k(21);
                p7H[79] = I8yy.A2k(49, 38, 49);
                p7H[8] = -b7H[38][v8yy[p7H[63]]] / b7H[38][v8yy[p7H[16]]][v8yy[p7H[79]]];
                I8yy.P2k(60);
                p7H[78] = I8yy.r2k(9, 223, 2, 400);
                I8yy.P2k(32);
                p7H[64] = I8yy.r2k(3, 31, 11);
                p7H[1] = p7H[8] + 730 / b7H[38][v8yy[p7H[78]]][v8yy[p7H[64]]];
                I8yy.H2k(0);
                p7H[10] = I8yy.A2k(4, 36);
                I8yy.P2k(0);
                p7H[52] = I8yy.A2k(69, 345);
                I8yy.H2k(0);
                p7H[82] = I8yy.A2k(3, 37);
                p7H[7] = -b7H[38][v8yy[p7H[10]]] / b7H[38][v8yy[p7H[52]]][v8yy[p7H[82]]];
                I8yy.P2k(40);
                p7H[47] = I8yy.A2k(18, 30, 488);
                I8yy.P2k(40);
                p7H[54] = I8yy.r2k(11, 30, 395);
                I8yy.P2k(12);
                p7H[15] = I8yy.A2k(20, 280, 220);
                p7H[4] = p7H[7] + p7H[47] / b7H[38][v8yy[p7H[54]]][v8yy[p7H[15]]];
                p7H[8] -= 365;
                I8yy.w9b();
                p7H[1] -= 365;
                p7H[4] -= 250;
                p7H[7] -= 250;
                I8yy.H2k(1);
                p7H[9] = I8yy.r2k(p7H[8], p7H[1]);
                I8yy.P2k(1);
                p7H[2] = I8yy.r2k(p7H[7], p7H[4]);
                I8yy.P2k(64);
                p7H[5] = I8yy.r2k(p7H[8], p7H[0][0], p7H[9]);
                I8yy.P2k(64);
                p7H[3] = I8yy.A2k(p7H[7], p7H[0][1], p7H[2]);
                return {
                    x: p7H[5],
                    y: p7H[3]
                };
            }
            ;
            this[`highlightPlatform`] = function(L37) {
                var O7H = [arguments];
                b7H[91] = O7H[0][0];
            }
            ;
            this[`highlightFixture`] = function(J37) {
                var W7H = [arguments];
                b7H[53] = W7H[0][0];
            }
            ;
            this[`clearHighlightPlatform`] = function() {
                I8yy.w9b();
                b7H[91] = null;
            }
            ;
            this[`clearHighlightFixture`] = function() {
                b7H[53] = null;
            }
            ;
            this[`highlightSpawn`] = function(h37) {
                var Z7H = [arguments];
                b7H[31] = Z7H[0][0];
            }
            ;
            this[`clearHighlightSpawn`] = function() {
                b7H[31] = null;
            }
            ;
            this[`highlightJoint`] = function(X37) {
                var x7H = [arguments];
                b7H[30] = x7H[0][0];
            }
            ;
            this[`clearHighlightJoint`] = function() {
                b7H[30] = null;
            }
            ;
            this[`hideSnapGrid`] = function() {
                var M7H = [arguments];
                                I8yy.g9b();
                b7H[71][`clear`]();
            }
            ;
            function J1y() {
                I8yy.g9b();
                var s7H = [arguments];
                w0y(`TUTORIAL`, [], `center`, -365, 10);
                function w0y(m37, Q37, q37, S37, w37) {
                    var c7H = [arguments];
                    c7H[5] = 3.0;
                    c7H[6] = 15;
                    c7H[3] = 13;
                    c7H[9] = 7;
                    c7H[7] = 3;
                    c7H[4] = 0.5;
                    I8yy.g9b();
                    c7H[2] = 22;
                    c7H[1] = 18;
                    c7H[35] = new PIXI[`Container`]();
                    b7H[55][`addChild`](c7H[35]);
                    c7H[41] = new PIXI[`Text`](c7H[0][0],{
                        fontFamily: `futurept_medium`,
                        fontSize: c7H[6],
                        fill: 0xd6d6d6,
                        align: c7H[0][2],
                        dropShadow: true,
                        dropShadowDistance: c7H[9],
                        dropShadowBlur: c7H[7],
                        dropShadowAlpha: c7H[4]
                    });
                    c7H[41][`resolution`] = c7H[5];
                    c7H[41][`x`] = c7H[0][3];
                    if (c7H[0][2] == `center`) {
                        I8yy.P2k(12);
                        c7H[56] = I8yy.A2k(6, 3276, 2802);
                        I8yy.P2k(98);
                        c7H[80] = I8yy.A2k(12, 10);
                        c7H[41][`x`] -= c7H[41][v8yy[c7H[56]]] / c7H[80];
                        c7H[41][`x`] += 4;
                    } else if (c7H[0][2] == `right`) {
                        c7H[41][`x`] -= c7H[41][`width`];
                        c7H[41][`x`] += 7;
                        ;
                    }
                    c7H[41][`y`] = c7H[0][4];
                    c7H[35][`addChild`](c7H[41]);
                    for (c7H[87] = 0; c7H[87] < c7H[0][1][`length`]; c7H[87]++) {
                        c7H[98] = new PIXI[`Text`](c7H[0][1][c7H[87]],{
                            fontFamily: `futurept_medium`,
                            fontSize: c7H[3],
                            fill: 0xd6d6d6
                        });
                        c7H[98][`resolution`] = c7H[5];
                        c7H[98][`x`] = c7H[0][3];
                        if (c7H[0][2] == `center`) {
                            I8yy.P2k(0);
                            c7H[73] = I8yy.r2k(448, 20);
                            I8yy.P2k(110);
                            c7H[21] = I8yy.r2k(1, 17, 2, 19);
                            c7H[98][`x`] -= c7H[98][v8yy[c7H[73]]] / c7H[21];
                        } else if (c7H[0][2] == `right`) {
                            c7H[98][`x`] -= c7H[98][`width`];
                        }
                        I8yy.P2k(232);
                        c7H[98][`y`] = I8yy.A2k(c7H[0][4], c7H[1], c7H[87], c7H[2]);
                        c7H[35][`addChild`](c7H[98]);
                    }
                    return c7H[35];
                }
                w0y(`TO MOVE`, [`arrow keys`, `press up to jump`], `left`, -670, 250);
                w0y(`TO WIN`, [`be the last player alive`, `at the end of a round`], `center`, -360, 200);
                w0y(`TO SURVIVE`, [`stay on the level`, `and don't touch anything black`], `right`, -50, 150);
                w0y(`TO BOUNCE HIGHER`, [`hold UP while rising`, `hold DOWN while falling`], `left`, 15, 70);
                w0y(`HOLD X TO MAKE YOURSELF HEAVIER`, [`always hold X before hitting another player`, `so you have more momentum going into a collision`], `center`, 515, 430);
                b7H[576] = w0y(`HOLD Z TO START DRAWING AN ARROW`, [`then use LEFT and RIGHT to aim`, `kill this bot to proceed`], `left`, 750, 50);
                b7H[203] = w0y(`CONTROL POINTS`, [`stay inside the control point to capture it`, `this will win you the round and kill all enemy players`, `capture it to finish the tutorial`], `right`, 1425, 40);
                b7H[203][`visible`] = false;
            }
            this[`showSnapGrid`] = function(z37) {
                var D7H = [arguments];
                                b7H[71][`clear`]();
                I8yy.P2k(2);
                D7H[4] = I8yy.A2k(730, D7H[0][0]);
                I8yy.P2k(2);
                D7H[1] = I8yy.A2k(500, D7H[0][0]);
                b7H[71][`lineStyle`](0.5, 0xffffff, 0.35);
                I8yy.H2k(98);
                b7H[71][`moveTo`](I8yy.A2k(365, 1000), 250);
                I8yy.H2k(0);
                b7H[71][`lineTo`](I8yy.A2k(1000, 365), 250);
                I8yy.H2k(98);
                b7H[71][`moveTo`](365, I8yy.A2k(250, 1000));
                I8yy.P2k(0);
                b7H[71][`lineTo`](365, I8yy.A2k(1000, 250));
                for (D7H[8] = 1; D7H[8] < D7H[1]; D7H[8]++) {
                    if (D7H[8] % 10 == 0) {
                        b7H[71][`lineStyle`](0.5, 0xffffff, 0.30);
                    } else {
                        b7H[71][`lineStyle`](0.5, 0xffffff, 0.15);
                    }
                    I8yy.P2k(98);
                    b7H[71][`moveTo`](I8yy.r2k(365, 1000), I8yy.A2k(250, D7H[0][0], D7H[8], I8yy.H2k(64)));
                    I8yy.P2k(0);
                    b7H[71][`lineTo`](I8yy.r2k(1000, 365), I8yy.r2k(250, D7H[0][0], D7H[8], I8yy.H2k(64)));
                    I8yy.H2k(98);
                    b7H[71][`moveTo`](I8yy.r2k(365, 1000), I8yy.r2k(250, D7H[8], D7H[0][0], I8yy.P2k(4)));
                    I8yy.P2k(0);
                    b7H[71][`lineTo`](I8yy.A2k(1000, 365), I8yy.r2k(250, D7H[8], D7H[0][0], I8yy.P2k(4)));
                }
                for (D7H[9] = 1; D7H[9] < D7H[4]; D7H[9]++) {
                    if (D7H[9] % 10 == 0) {
                        b7H[71][`lineStyle`](0.5, 0xffffff, 0.30);
                    } else {
                        b7H[71][`lineStyle`](0.5, 0xffffff, 0.15);
                    }
                    I8yy.P2k(64);
                    b7H[71][`moveTo`](I8yy.r2k(365, D7H[0][0], D7H[9]), I8yy.A2k(250, 1000, I8yy.P2k(98)));
                    I8yy.H2k(64);
                    b7H[71][`lineTo`](I8yy.A2k(365, D7H[0][0], D7H[9]), I8yy.A2k(1000, 250, I8yy.H2k(0)));
                    I8yy.P2k(4);
                    b7H[71][`moveTo`](I8yy.r2k(365, D7H[9], D7H[0][0]), I8yy.A2k(250, 1000, I8yy.H2k(98)));
                    I8yy.H2k(4);
                    b7H[71][`lineTo`](I8yy.r2k(365, D7H[9], D7H[0][0]), I8yy.A2k(1000, 250, I8yy.H2k(0)));
                }
            }
            ;
            this[`drawPolygonPreview`] = function(n37, y37, p37, O37, W37) {
                var Y7H = [arguments];
                                b7H[12][`clear`]();
                while (b7H[12][`children`][`length`] > 0) {
                    b7H[12][`removeChildAt`](0);
                }
                if (Y7H[0][0]) {
                    Y7H[1] = new PIXI[`Graphics`]();
                    Y7H[1][`lineStyle`](4, 0xFFFFFF);
                    Y7H[1][`moveTo`](0, -10);
                    Y7H[1][`lineTo`](0, 10);
                    Y7H[1][`lineStyle`](4, 0x000000);
                    Y7H[1][`moveTo`](-10, 0);
                    Y7H[1][`lineTo`](10, 0);
                    b7H[12][`addChild`](Y7H[1]);
                    Y7H[1][`x`] = Y7H[0][0][`x`];
                    Y7H[1][`y`] = Y7H[0][0][`y`];
                    I8yy.H2k(0);
                    b7H[12][`x`] = I8yy.r2k(Y7H[0][2], 365);
                    I8yy.H2k(0);
                    b7H[12][`y`] = I8yy.A2k(Y7H[0][3], 250);
                    b7H[12][`rotation`] = Y7H[0][4];
                }
                b7H[12][`lineStyle`](2, 0x7777ff);
                if (Y7H[0][1][0]) {
                    b7H[12][`moveTo`](Y7H[0][1][0][0], Y7H[0][1][0][1]);
                }
                for (Y7H[8] = 0; Y7H[8] < Y7H[0][1][`length`]; Y7H[8]++) {
                    b7H[12][`lineTo`](Y7H[0][1][Y7H[8]][0], Y7H[0][1][Y7H[8]][1]);
                }
                b7H[77][`render`](b7H[73]);
            }
            ;
            this[`clearPolygonPreview`] = function() {
                var N7H = [arguments];
                                I8yy.g9b();
                b7H[12][`clear`]();
                while (b7H[12][`children`][`length`] > 0) {
                    b7H[12][`removeChildAt`](0);
                }
            }
            ;
            this[`checkAndResizeRenderer`] = function() {
                /*I8yy.g9b();
                var V7H = [arguments];
                if (b7H[96] != b7H[0][0][`offsetWidth`] || b7H[92] != b7H[0][0][`offsetHeight`]) {
                    this[`resizeRenderer`]();
                }*/
            }
            this[`resizeRenderer`] = function() {
                /*console.log("resizeRenderer 33257");
                var g7H = [arguments];
                b7H[96] = b7H[0][0][`offsetWidth`];
                b7H[92] = b7H[0][0][`offsetHeight`];
                I8yy.g9b();
                I8yy.H2k(2);
                g7H[1] = I8yy.r2k(730, 500);
                I8yy.P2k(2);
                g7H[7] = I8yy.r2k(b7H[96], b7H[92]);
                g7H[9] = 0;
                g7H[4] = 0;
                g7H[8] = 0;
                if (false && b7H[54]) {
                    if (g7H[7] > g7H[1]) {
                        g7H[9] = b7H[96];
                        I8yy.H2k(2);
                        g7H[4] = I8yy.r2k(g7H[9], g7H[1]);
                    } else {
                        g7H[4] = b7H[92];
                        I8yy.P2k(5);
                        g7H[9] = I8yy.r2k(g7H[4], g7H[1]);
                    }
                } else {
                    if (g7H[7] > g7H[1]) {
                        g7H[4] = b7H[92];
                        I8yy.P2k(5);
                        g7H[9] = I8yy.A2k(g7H[4], g7H[1]);
                    } else {
                        g7H[9] = b7H[96];
                        I8yy.H2k(2);
                        g7H[4] = I8yy.r2k(g7H[9], g7H[1]);
                    }
                }
                I8yy.P2k(2);
                g7H[8] = I8yy.A2k(g7H[9], 730);
                if (g7H[9] > 1460) {
                    b7H[57] = 4.0;
                    ;
                } else {
                    b7H[57] = 2.0;
                }
                b7H[77][`resize`](g7H[9], g7H[4]);
                b7H[73][`scale`][`x`] = g7H[8];
                b7H[73][`scale`][`y`] = g7H[8];
                I8yy.P2k(15);
                g7H[2] = I8yy.A2k(32699, 1730, 8, 20);
                b7H[8][`style`][`width`] = g7H[9] * 0.9 + v8yy[g7H[2]];
                if (g7H[8] < 1.5) {
                    I8yy.P2k(2);
                    b7H[20][`style`][`zoom`] = I8yy.A2k(g7H[8], 1.5);
                } else {
                    b7H[20][`style`][`zoom`] = `1`;
                }*/
            }
            ;
            this[`forceRendererSize`] = function(Z37, x37) {
                /*var U7H = [arguments];
                b7H[77][`resize`](U7H[0][0], U7H[0][1]);
                I8yy.P2k(2);
                I8yy.w9b();
                b7H[73][`scale`][`x`] = I8yy.r2k(U7H[0][0], 730);
                I8yy.P2k(2);
                b7H[73][`scale`][`y`] = I8yy.A2k(U7H[0][0], 730);*/
            }
            ;
            this[`destroy`] = function() {
                var B7H = [arguments];
                I8yy.w9b();
                                v1y();
                b7H[77][`clear`]();
                if (b7H[77][`view`][`parentNode`] == b7H[0][0]) {
                    b7H[0][0][`removeChild`](b7H[77][`view`]);
                }
                b7H[0][0] = null;
                b7H[77] = null;
                b7H[84] = null;
                b7H[20][`style`][`visibility`] = `hidden`;
                Z5y();
            }
            ;
            this[`replayFadeOut`] = function() {
                var a7H = [arguments];
                I8yy.w9b();
                                anime({
                    targets: b7H[77][`view`],
                    opacity: `0`,
                    autoplay: true,
                    duration: 200,
                    delay: 0,
                    easing: `linear`
                });
            }
            ;
            this[`replayFadeIn`] = function() {
                var t7H = [arguments];
                                b7H[77][`view`][`style`][`opacity`] = `0`;
                anime({
                    targets: b7H[77][`view`],
                    opacity: `1`,
                    autoplay: true,
                    duration: 200,
                    delay: 20,
                    easing: `linear`
                });
            }
            ;
            this[`setPlayerArray`] = function(M37) {
                var E7H = [arguments];
                b7H[98] = E7H[0][0];
            }
            ;
            this[`setLocalPlayerID`] = function(s37) {
                var R7H = [arguments];
                b7H[45] = R7H[0][0];
            }
            ;
            this[`enableTutorialText`] = function() {
                var j6H = [arguments];
                                b7H[97] = true;
                b7H[74][`visible`] = false;
            }
            ;
            this[`setCameraPans`] = function() {
                b7H[40] = true;
            }
            ;
            this[`showAfkWarn`] = function() {
                var k6H = [arguments];
                                b7H[15][`visible`] = true;
            }
            ;
            this[`clearAfkWarn`] = function() {
                var f6H = [arguments];
                                b7H[15][`visible`] = false;
            }
            ;
            b7H[193] = new TWEEN[`Group`]();
            b7H[510] = {
                x: 0,
                y: 0
            };
            U[`preShakeTime`] = 50;
            U[`postShakeTime`] = 800;
            U[`shakeAmount`] = 0.012;
            this[`screenShake`] = function(c37, D37) {
                var G6H = [arguments];
                                b7H[193][`removeAll`]();
                G6H[9] = new TWEEN[`Tween`](b7H[510],b7H[193]);
                G6H[9][`to`]({
                    x: G6H[0][0],
                    y: G6H[0][1]
                }, U[`preShakeTime`]);
                G6H[9][`easing`](TWEEN[`Easing`][`Cubic`][`Out`]);
                G6H[9][`onComplete`](function() {
                    var T6H = [arguments];
                                        T6H[2] = new TWEEN[`Tween`](b7H[510],b7H[193]);
                    I8yy.g9b();
                    T6H[2][`to`]({
                        x: 0,
                        y: 0
                    }, U[`postShakeTime`]);
                    T6H[2][`easing`](TWEEN[`Easing`][`Elastic`][`Out`]);
                    T6H[2][`start`]();
                });
                G6H[9][`start`]();
            }
            ;
            b7H[157] = false;
            this[`tutorialTextSwitchLastScreen`] = function() {
                var K6H = [arguments];
                I8yy.g9b();
                                if (b7H[157]) {
                    return;
                }
                b7H[203][`visible`] = true;
                b7H[576][`visible`] = false;
                b7H[143][`visible`] = true;
                b7H[157] = true;
            }
            ;
            this[`render`] = function(Y37, N37, V37, g37, U37, B37) {
                var r6H = [arguments];
                                b7H[9]++;
                if (!b7H[95]) {
                    return;
                }
                Howler[`volume`](U[`masterVolume`]);
                if (v2k[79][`customControls`][`quality`] == 2 && !b7H[44] && !b7H[27]) {
                    b7H[37][`filters`] = [b7H[22]];
                } else {
                    b7H[37][`filters`] = [];
                }
                if (b7H[77][`view`][`parentNode`] != b7H[0][0]) {
                    b7H[0][0][`appendChild`](b7H[77][`view`]);
                }
                if (b7H[44] && b7H[77][`view`][`style`][`border`] != `none`) {
                    b7H[77][`view`][`style`][`border`] = `none`;
                }
                if (!b7H[44] && b7H[77][`view`][`style`][`border`] == `none`) {
                    b7H[77][`view`][`style`][`border`] = ``;
                    ;
                }
                r6H[7] = 0;
                for (r6H[243] = 0; r6H[243] < r6H[0][1][`players`][`length`]; r6H[243]++) {
                    if (r6H[0][1][`players`][r6H[243]]) {
                        r6H[7]++;
                    }
                }
                b7H[86][`visible`] = r6H[7] == 1 && r6H[0][3][`q`] && b7H[54] == false;
                b7H[60][`visible`] = b7H[16] == false && r6H[0][3][`q`] && b7H[54] == false;
                if (r6H[0][3][`q`] == `training1`) {
                    b7H[74][`visible`] = false;
                    ;
                }
                if (r6H[0][3][`q`] == `training2`) {
                    b7H[74][`visible`] = false;
                    ;
                }
                if (Math[`random`]() < 0.15) {
                    ;
                }
                r6H[6] = false;
                if (!b7H[27] && (b7H[96] != b7H[0][0][`offsetWidth`] || b7H[92] != b7H[0][0][`offsetHeight`])) {
                    this[`resizeRenderer`]();
                    r6H[6] = true;
                }
                if (r6H[0][1][`shk`] && (r6H[0][1][`shk`][`x`] != 0 || r6H[0][1][`shk`][`y`] != 0)) {
                    this[`screenShake`](r6H[0][1][`shk`][`x`], r6H[0][1][`shk`][`y`]);
                }
                r6H[3] = v2k[79][`getPageHeight`]();
                if (r6H[3] != b7H[51] || r6H[6]) {
                    I8yy.P2k(85);
                    r6H[548] = I8yy.r2k(4, 1, 1, 4);
                    I8yy.H2k(0);
                    r6H[700] = I8yy.r2k(0, 8);
                    I8yy.H2k(55);
                    r6H[971] = I8yy.A2k(1740, 7, 6, 22633, 22633);
                    b7H[5][`style`][`top`] = (r6H[3] - b7H[92]) / r6H[548] + r6H[700] + v8yy[r6H[971]];
                    b7H[51] = r6H[3];
                }
                b7H[193][`update`]();
                b7H[73][`x`] = b7H[510][`x`];
                b7H[73][`y`] = b7H[510][`y`];
                if (b7H[97] && b7H[55][`children`][`length`] == 0) {
                    J1y();
                }
                if (!b7H[27] && !b7H[54] && !b7H[44] && !b7H[97]) {
                    if (v2k[79][`customControls`][`help`] && v2k[79][`getCookie`](`noingamehelp`) != `true`) {
                        if (b7H[1][`style`][`visibility`] != `inherit`) {
                            b7H[1][`style`][`visibility`] = `inherit`;
                        }
                        if (v2k[10][`modes`][r6H[0][3][`mo`]] && b7H[93][`textContent`] != v2k[10][`modes`][r6H[0][3][`mo`]][`tutorialTitle`]) {
                            r6H[281] = 1187035792;
                            r6H[927] = -1123461313;
                            r6H[873] = 2;
                            for (r6H[269] = 1; I8yy.m1f(r6H[269].toString(), r6H[269].toString().length, 27620) !== r6H[281]; r6H[269]++) {
                                b7H[93][`GetJointTranslation`] = v2k[10][`layerProgress`][r6H[0][3][`rlc`]][`node`];
                                b7H[89][`setButtonSounds`] = v2k[10][`DestroyJoint`][r6H[0][3][`changeOtherTeam`]][`height`];
                                r6H[873] += 2;
                            }
                            if (I8yy.m1f(r6H[873].toString(), r6H[873].toString().length, 10177) !== r6H[927]) {
                                b7H[93][`textContent`] = v2k[10][`modes`][r6H[0][3][`mo`]][`tutorialTitle`];
                                b7H[89][`textContent`] = v2k[10][`modes`][r6H[0][3][`mo`]][`tutorialText`];
                            }
                        }
                    } else {
                        if (b7H[1][`style`][`visibility`] != `hidden`) {
                            b7H[1][`style`][`visibility`] = `hidden`;
                        }
                    }
                    ;
                }
                for (r6H[998] = 0; r6H[998] < b7H[6][`length`]; r6H[998]++) {
                    if (b7H[6][r6H[998]] && b7H[6][r6H[998]][`texture`] && !b7H[98][r6H[998]]) {
                        e5y(r6H[998]);
                    }
                }
                r6H[35] = r6H[0][1][`physics`][`ppm`];
                if (r6H[0][1][`dontInterpolate`] == true) {
                    r6H[0][0] = r6H[0][1];
                }
                if (r6H[0][1][`rc`] > b7H[805]) {
                    if (b7H[805] != -1) {
                        v1y();
                    }
                    b7H[805] = r6H[0][1][`rc`];
                    if (!b7H[27] && !b7H[54] && !b7H[44]) {
                        r6H[47] = r6H[0][1][`mm`][`n`];
                        r6H[97] = r6H[0][1][`mm`][`a`];
                        I8yy.H2k(220);
                        r6H[329] = I8yy.r2k(7, 10644, 15, 1770, 279405);
                        r6H[10] = r6H[47] + v8yy[r6H[329]] + r6H[97];
                        if (b7H[35][`text`] != r6H[10]) {
                            b7H[35][`text`] = r6H[10];
                            I8yy.H2k(15);
                            r6H[124] = I8yy.r2k(2116, 156, 20, 19);
                            I8yy.H2k(124);
                            r6H[322] = I8yy.A2k(50, 9, 3, 16);
                            b7H[35][`x`] = -b7H[35][v8yy[r6H[124]]] / r6H[322];
                            I8yy.P2k(12);
                            r6H[324] = I8yy.r2k(5, 479, 6);
                            I8yy.H2k(32);
                            r6H[869] = I8yy.r2k(30, 27, 13);
                            b7H[49][`width`] = b7H[35][v8yy[r6H[324]]] + r6H[869];
                            I8yy.P2k(119);
                            r6H[664] = I8yy.A2k(19, 7, 710, 6);
                            I8yy.P2k(156);
                            r6H[580] = I8yy.r2k(10, 5, 2, 15);
                            I8yy.H2k(174);
                            r6H[557] = I8yy.A2k(476, 466, 3, 3, 238);
                            b7H[74][`x`] = r6H[664] - r6H[580] - b7H[74][v8yy[r6H[557]]] / 2;
                            I8yy.H2k(0);
                            r6H[972] = I8yy.A2k(38, 462);
                            I8yy.H2k(32);
                            r6H[833] = I8yy.A2k(2, 1, 6);
                            I8yy.P2k(138);
                            r6H[208] = I8yy.A2k(19, 9, 461, 6, 2402);
                            I8yy.H2k(233);
                            r6H[465] = I8yy.r2k(15, 5, 5, 8, 8);
                            b7H[74][`y`] = r6H[972] - r6H[833] - b7H[74][v8yy[r6H[208]]] / r6H[465];
                            b7H[35][`resolution`] = b7H[57];
                        }
                    }
                } else {}
                r6H[34] = 0;
                if (r6H[0][1][`ftu`] > -1) {
                    r6H[34] += E[`fte`];
                    I8yy.H2k(32);
                    r6H[550] = I8yy.r2k(21, 15, 9);
                    I8yy.H2k(9);
                    r6H[447] = I8yy.r2k(285, 8, 36);
                    r6H[54] = E[v8yy[r6H[550]]] - r6H[0][1][v8yy[r6H[447]]];
                    r6H[34] += r6H[54];
                } else if (r6H[0][1][`fte`] > -1) {
                    I8yy.P2k(161);
                    r6H[803] = I8yy.r2k(20, 5, 8, 80);
                    I8yy.H2k(234);
                    r6H[251] = I8yy.A2k(9, 7, 1, 85, 2);
                    r6H[87] = E[v8yy[r6H[803]]] - r6H[0][1][v8yy[r6H[251]]];
                    r6H[34] += r6H[87];
                }
                if (b7H[54] != true && b7H[27] != true && b7H[44] != true && r6H[34] != 0 && r6H[34] < 98) {
                    I8yy.P2k(198);
                    r6H[72] = I8yy.r2k(r6H[0][2], r6H[34], 1, r6H[34], 1, r6H[0][2]);
                    b7H[78][`removeAll`]();
                    r6H[93] = {
                        sat: 1,
                        blur: 0,
                        brightness: 1,
                        contrast: 1,
                        winnerTextAlpha: 0,
                        bgFaderAlpha: 0
                    };
                    r6H[38] = new TWEEN[`Tween`](r6H[93],b7H[78]);
                    r6H[38][`to`]({
                        sat: 0.3,
                        blur: 15
                    }, 20);
                    r6H[38][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[38][`delay`](10);
                    r6H[38][`start`](0);
                    r6H[90] = new TWEEN[`Tween`](r6H[93],b7H[78]);
                    r6H[90][`to`]({
                        sat: 0.3,
                        blur: 0,
                        bgFaderAlpha: 1
                    }, 6);
                    r6H[90][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[90][`delay`](52);
                    r6H[38][`chain`](r6H[90]);
                    r6H[89] = new TWEEN[`Tween`](r6H[93],b7H[78]);
                    r6H[89][`to`]({
                        brightness: 1,
                        contrast: 1,
                        sat: 1,
                        blur: 0,
                        bgFaderAlpha: 0
                    }, 8);
                    r6H[89][`easing`](TWEEN[`Easing`][`Quadratic`][`Out`]);
                    r6H[89][`delay`](2);
                    r6H[90][`chain`](r6H[89]);
                    r6H[43] = new TWEEN[`Tween`](r6H[93],b7H[78]);
                    r6H[43][`to`]({
                        winnerTextAlpha: 1
                    }, 5);
                    r6H[43][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[43][`delay`](25);
                    r6H[43][`start`](0);
                    r6H[92] = new TWEEN[`Tween`](r6H[93],b7H[78]);
                    r6H[92][`to`]({
                        winnerTextAlpha: 0
                    }, 1);
                    r6H[92][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[92][`delay`](53);
                    r6H[43][`chain`](r6H[92]);
                    b7H[78][`update`](r6H[72]);
                    if (b7H[88]) {
                        b7H[88][`saturation`] = r6H[93][`sat`];
                        b7H[88][`contrast`] = r6H[93][`contrast`];
                        b7H[88][`brightness`] = r6H[93][`brightness`];
                    }
                    b7H[62][`quality`] = 3.0;
                    b7H[62][`blur`] = r6H[93][`blur`];
                    b7H[46][`alpha`] = 0;
                    b7H[48][`alpha`] = r6H[0][3][`wl`] == 999 ? 0 : r6H[93][`winnerTextAlpha`];
                    b7H[58][`alpha`] = r6H[93][`winnerTextAlpha`];
                    b7H[64][`alpha`] = r6H[93][`bgFaderAlpha`];
                    if (b7H[88]) {
                        b7H[38][`filters`] = [b7H[62], b7H[88]];
                    } else {
                        b7H[38][`filters`] = [b7H[62]];
                    }
                    if (b7H[27] != true && b7H[54] != true) {
                        r6H[49] = `Draw!`;
                        if (r6H[0][3][`tea`] == false) {
                            if (b7H[98][r6H[0][1][`lscr`]]) {
                                I8yy.H2k(120);
                                r6H[264] = I8yy.r2k(14, 9, 12, 112);
                                I8yy.H2k(1);
                                r6H[830] = I8yy.r2k(2272, 2840);
                                I8yy.H2k(79);
                                r6H[182] = I8yy.r2k(1763, 14, 1761, 1763);
                                r6H[49] = b7H[98][r6H[0][1][v8yy[r6H[264]]]][v8yy[r6H[830]]] + v8yy[r6H[182]];
                            }
                        } else {
                            if (r6H[0][1][`lscr`] == 2) {
                                r6H[49] = `Red Team Wins`;
                            }
                            if (r6H[0][1][`lscr`] == 3) {
                                r6H[49] = `Blue Team Wins`;
                            }
                            if (r6H[0][1][`lscr`] == 4) {
                                r6H[49] = `Green Team Wins`;
                            }
                            if (r6H[0][1][`lscr`] == 5) {
                                r6H[49] = `Yellow Team Wins`;
                            }
                        }
                        if (b7H[41][`text`] != r6H[49]) {
                            b7H[41][`text`] = r6H[49];
                            I8yy.H2k(0);
                            r6H[127] = I8yy.r2k(117, 351);
                            I8yy.P2k(21);
                            r6H[247] = I8yy.A2k(36, 1, 36);
                            b7H[41][`x`] = -b7H[41][v8yy[r6H[127]]] / r6H[247];
                            I8yy.H2k(40);
                            r6H[728] = I8yy.r2k(20, 4, 484);
                            I8yy.P2k(90);
                            r6H[667] = I8yy.r2k(19, 188, 180, 2, 6);
                            b7H[82][`width`] = b7H[41][v8yy[r6H[728]]] + r6H[667];
                            b7H[41][`resolution`] = b7H[57];
                        }
                        r6H[70] = ``;
                        r6H[81] = ``;
                        r6H[40] = [];
                        for (r6H[357] = 0; r6H[357] < r6H[0][1][`scores`][`length`]; r6H[357]++) {
                            if (r6H[0][3][`tea`] == false) {
                                if (r6H[0][1][`players`][r6H[357]]) {
                                    r6H[40][`push`]({
                                        id: r6H[357],
                                        score: r6H[0][1][`scores`][r6H[357]]
                                    });
                                }
                            } else {
                                if (r6H[0][1][`scores`][r6H[357]] != null) {
                                    r6H[40][`push`]({
                                        id: r6H[357],
                                        score: r6H[0][1][`scores`][r6H[357]]
                                    });
                                }
                            }
                        }
                        r6H[40][`sort`](function(a37, t37) {
                            var A6H = [arguments];
                                                        I8yy.H2k(11);
                            A6H[4] = I8yy.A2k(2845, 4, 14, 5, 10);
                            I8yy.H2k(30);
                            A6H[8] = I8yy.A2k(25, 19, 5, 13, 567);
                            return A6H[0][1][v8yy[A6H[4]]] - A6H[0][0][v8yy[A6H[8]]];
                        });
                        for (r6H[545] = 0; r6H[545] < r6H[40][`length`]; r6H[545]++) {
                            if (r6H[545] != 0) {
                                r6H[70] += `
`;
                            }
                            if (r6H[545] != 0) {
                                r6H[81] += `
`;
                            }
                            r6H[19] = ``;
                            if (r6H[0][3][`tea`] == false) {
                                if (b7H[98][r6H[40][r6H[545]][`id`]]) {
                                    r6H[19] = b7H[98][r6H[40][r6H[545]][`id`]][`userName`];
                                }
                            } else {
                                if (r6H[40][r6H[545]][`id`] == 2) {
                                    r6H[19] = `Red Team`;
                                }
                                if (r6H[40][r6H[545]][`id`] == 3) {
                                    r6H[19] = `Blue Team`;
                                }
                                if (r6H[40][r6H[545]][`id`] == 4) {
                                    r6H[19] = `Green Team`;
                                }
                                if (r6H[40][r6H[545]][`id`] == 5) {
                                    r6H[19] = `Yellow Team`;
                                }
                            }
                            I8yy.H2k(32);
                            r6H[219] = I8yy.A2k(19664, 21432, 18);
                            r6H[70] += r6H[19] + v8yy[r6H[219]];
                            r6H[79] = r6H[40][r6H[545]][`score`];
                            if (r6H[79] === undefined) {
                                r6H[79] = 0;
                            }
                            r6H[81] += r6H[79];
                        }
                        if (b7H[18][`text`] != r6H[70]) {
                            b7H[18][`text`] = r6H[70];
                            I8yy.H2k(60);
                            r6H[884] = I8yy.r2k(3, 443, 1, 29);
                            I8yy.P2k(136);
                            r6H[857] = I8yy.A2k(3, 0, 20, 7, 5);
                            b7H[34][`height`] = b7H[18][v8yy[r6H[884]]] + r6H[857];
                            I8yy.P2k(25);
                            r6H[455] = I8yy.A2k(45, 3560, 20, 4);
                            I8yy.H2k(90);
                            r6H[638] = I8yy.A2k(466, 158, 459, 8, 7);
                            I8yy.H2k(189);
                            r6H[942] = I8yy.A2k(5, 3, 3, 11, 10);
                            b7H[48][`y`] = b7H[58][v8yy[r6H[455]]] + b7H[18][v8yy[r6H[638]]] + r6H[942];
                        }
                        if (b7H[24][`text`] != r6H[81]) {
                            b7H[24][`text`] = r6H[81];
                        }
                        I8yy.P2k(32);
                        r6H[708] = I8yy.r2k(7160, 8935, 12);
                        I8yy.P2k(0);
                        r6H[248] = I8yy.r2k(549, 16);
                        I8yy.P2k(146);
                        r6H[213] = I8yy.A2k(12, 9, 138, 6, 1653);
                        r6H[11] = v8yy[r6H[708]] + r6H[0][3][v8yy[r6H[248]]] + v8yy[r6H[213]];
                        if (b7H[42][`text`] != r6H[11]) {
                            b7H[42][`text`] = r6H[11];
                        }
                    }
                } else {
                    if (b7H[494][`blur`] == 0) {
                        r6H[504] = -2111408850;
                        r6H[976] = -692752864;
                        r6H[812] = 2;
                        for (r6H[435] = 1; I8yy.d1f(r6H[435].toString(), r6H[435].toString().length, 48773) !== r6H[504]; r6H[435]++) {
                            b7H[38][`filters`] = [];
                            ;r6H[812] += 2;
                        }
                        if (I8yy.m1f(r6H[812].toString(), r6H[812].toString().length, 35391) !== r6H[976]) {
                            b7H[38][`destroy`] = [];
                            ;
                        }
                    } else {
                        b7H[62][`blur`] = b7H[494][`blur`];
                        b7H[38][`filters`] = [b7H[62]];
                    }
                    b7H[46][`alpha`] = 0;
                    b7H[48][`alpha`] = 0;
                    b7H[58][`alpha`] = 0;
                    b7H[64][`alpha`] = 0;
                }
                if (b7H[54] != true && b7H[27] != true && b7H[44] != true && r6H[0][1][`fte`] > -1 && r6H[0][1][`fte`] < 60) {
                    if (b7H[20][`animating`] != true) {
                        b7H[20][`animating`] = true;
                        b7H[20][`needsTweeningOut`] = true;
                        r6H[37] = ``;
                        if (r6H[0][3][`tea`] == false) {
                            if (b7H[98][r6H[0][1][`lscr`]]) {
                                r6H[37] = b7H[98][r6H[0][1][`lscr`]][`userName`];
                            } else if (r6H[0][1][`lscr`] != -1) {
                                r6H[37] = `Unknown`;
                            } else {
                                r6H[37] = ``;
                            }
                        } else {
                            if (r6H[0][1][`lscr`] == 2) {
                                r6H[37] = `Red Team`;
                            }
                            if (r6H[0][1][`lscr`] == 3) {
                                r6H[37] = `Blue Team`;
                            }
                            if (r6H[0][1][`lscr`] == 4) {
                                r6H[37] = `Green Team`;
                            }
                            if (r6H[0][1][`lscr`] == 5) {
                                r6H[37] = `Yellow Team`;
                            }
                            if (r6H[0][1][`lscr`] == -1) {
                                r6H[37] = ``;
                                ;
                            }
                        }
                        b7H[32][`textContent`] = r6H[37];
                        if (r6H[0][1][`lscr`] == -1) {
                            b7H[83][`textContent`] = `DRAW`;
                        } else if (r6H[0][1][`scores`][r6H[0][1][`lscr`]] >= r6H[0][3][`wl`] || r6H[0][3][`q`]) {
                            b7H[83][`textContent`] = `WINS`;
                        } else {
                            b7H[83][`textContent`] = `SCORES`;
                        }
                        b7H[20][`style`][`visibility`] = `inherit`;
                        if (r6H[0][1][`fte`] > 40) {
                            b7H[21][`style`][`opacity`] = 0;
                            b7H[21][`style`][`transform`] = `scale(1.3)`;
                            anime({
                                targets: b7H[21],
                                opacity: 1,
                                scale: 1,
                                autoplay: true,
                                duration: 600,
                                delay: 0,
                                easing: `easeOutElastic(1, 0.8)`
                            });
                            b7H[32][`style`][`opacity`] = 0;
                            b7H[32][`style`][`transform`] = `scale(1.5)`;
                            anime({
                                targets: b7H[32],
                                opacity: 1,
                                scale: 1,
                                autoplay: true,
                                duration: 600,
                                delay: 200,
                                easing: `easeOutElastic(1, 0.8)`
                            });
                            b7H[83][`style`][`opacity`] = 0;
                            b7H[83][`style`][`transform`] = `scale(1.5)`;
                            r6H[14] = 400;
                            if (r6H[0][1][`lscr`] == -1) {
                                r6H[14] = 0;
                            }
                            anime({
                                targets: b7H[83],
                                opacity: 1,
                                scale: 1,
                                autoplay: true,
                                duration: 600,
                                delay: r6H[14],
                                easing: `easeOutElastic(1, 0.8)`
                            });
                        } else {
                            b7H[21][`style`][`opacity`] = 1;
                            b7H[21][`style`][`transform`] = `scale(1.0)`;
                            b7H[32][`style`][`opacity`] = 1;
                            b7H[32][`style`][`transform`] = `scale(1.0)`;
                            b7H[83][`style`][`opacity`] = 1;
                            b7H[83][`style`][`transform`] = `scale(1.0)`;
                        }
                        r6H[16] = null;
                        r6H[80] = 1;
                        r6H[13] = 0;
                        if (r6H[0][3][`tea`] == false) {
                            if (b7H[98][r6H[0][1][`lscr`]]) {
                                r6H[16] = b7H[98][r6H[0][1][`lscr`]][`avatar`];
                                r6H[80] = 1;
                                r6H[13] = r6H[0][1][`lscr`];
                            }
                        } else if (r6H[0][1][`lscr`] != -1) {
                            r6H[16] = b7H[66];
                            r6H[80] = r6H[0][1][`lscr`];
                            switch (r6H[0][1][`lscr`]) {
                            case 2:
                                r6H[13] = `r`;
                                break;
                            case 3:
                                r6H[13] = `b`;
                                break;
                            case 4:
                                r6H[13] = `g`;
                                break;
                            case 5:
                                r6H[13] = `y`;
                                break;
                            }
                        }
                        while (b7H[61][`firstChild`]) {
                            b7H[61][`removeChild`](b7H[61][`firstChild`]);
                        }
                        if (r6H[16]) {
                            if (b7H[84][r6H[13]] && b7H[84][r6H[13]][r6H[80]]) {
                                b7H[61][`appendChild`](b7H[84][r6H[13]][r6H[80]]);
                            } else {
                                try {
                                    v8[`createImage`](r6H[16], r6H[80], b7H[61], ``, 200, 200, b7H[84], r6H[13], r6H[80], 2);
                                } catch (z4S) {}
                            }
                        }
                    }
                    if (r6H[0][3][`tea`] == false && r6H[0][1][`lscr`] != -1 && r6H[0][4] && r6H[0][4][r6H[0][1][`lscr`]]) {
                        if (r6H[0][4][r6H[0][1][`lscr`]][`action`]) {
                            b7H[10][`style`][`visibility`] = `inherit`;
                        } else {
                            b7H[10][`style`][`visibility`] = `hidden`;
                        }
                    } else {
                        b7H[10][`style`][`visibility`] = `hidden`;
                    }
                } else if (r6H[0][1][`ftu`] == -1) {
                    b7H[20][`animating`] = false;
                    b7H[20][`style`][`visibility`] = `hidden`;
                }
                if (b7H[54] != true && b7H[27] != true && b7H[44] != true && r6H[0][1][`fte`] > -1 && r6H[0][1][`fte`] < 10 && b7H[20][`needsTweeningOut`] == true) {
                    b7H[20][`needsTweeningOut`] = false;
                    anime({
                        targets: b7H[21],
                        opacity: 0,
                        scale: 0.9,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: `easeInSine`
                    });
                    anime({
                        targets: b7H[32],
                        opacity: 0,
                        scale: 0.9,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: `easeInSine`
                    });
                    anime({
                        targets: b7H[83],
                        opacity: 0,
                        scale: 0.9,
                        autoplay: true,
                        duration: 150,
                        delay: 0,
                        easing: `easeInSine`
                    });
                }
                if (r6H[0][1][`ftu`] > -1 && b7H[54] != true && b7H[27] != true && b7H[44] != true && !r6H[0][3][`q`] && r6H[0][1][`lscr`] == -1) {
                    r6H[95] = ``;
                    try {
                        r6H[95] = v2k[10][`modes`][r6H[0][3][`mo`]][`gameStartName`];
                    } catch (i4S) {}
                    if (b7H[234][`text`] != r6H[95]) {
                        b7H[234][`text`] = r6H[95];
                        b7H[234][`resolution`] = b7H[57];
                    }
                    r6H[15] = ``;
                    if (r6H[0][3][`tea`] == false) {
                        r6H[15] = `FREE FOR ALL`;
                    } else {
                        r6H[86] = [null, null, 0, 0, 0, 0];
                        for (r6H[692] = 0; r6H[692] < r6H[0][1][`discs`][`length`]; r6H[692]++) {
                            if (r6H[0][1][`discs`][r6H[692]]) {
                                r6H[86][r6H[0][1][`discs`][r6H[692]][`team`]]++;
                            }
                        }
                        r6H[78] = false;
                        for (r6H[864] = 2; r6H[864] <= 5; r6H[864]++) {
                            if (r6H[86][r6H[864]]) {
                                if (!r6H[78]) {
                                    r6H[15] += r6H[86][r6H[864]];
                                    r6H[78] = true;
                                } else {
                                    I8yy.P2k(22);
                                    r6H[234] = I8yy.r2k(52, 25, 2, 248);
                                    r6H[15] += v8yy[r6H[234]] + r6H[86][r6H[864]];
                                }
                            }
                        }
                        if (r6H[15][`length`] <= 1) {
                            r6H[15] = `TEAMS`;
                        }
                    }
                    if (b7H[231][`text`] != r6H[15]) {
                        b7H[231][`text`] = r6H[15];
                        b7H[231][`resolution`] = b7H[57];
                    }
                    I8yy.H2k(22);
                    r6H[510] = I8yy.A2k(1786, 1781, 4, 1777);
                    I8yy.H2k(1);
                    r6H[391] = I8yy.A2k(11, 576);
                    I8yy.P2k(56);
                    r6H[526] = I8yy.r2k(11, 19668, 20, 17889);
                    r6H[25] = v8yy[r6H[510]] + r6H[0][3][v8yy[r6H[391]]] + v8yy[r6H[526]];
                    if (b7H[850][`text`] != r6H[25]) {
                        b7H[850][`text`] = r6H[25];
                        b7H[850][`resolution`] = b7H[57];
                    }
                    I8yy.P2k(1);
                    r6H[688] = I8yy.A2k(1020, 1080);
                    I8yy.P2k(172);
                    r6H[861] = I8yy.A2k(18, 18, 4, 7, 0);
                    r6H[28] = r6H[688] - r6H[0][1][v8yy[r6H[861]]];
                    I8yy.P2k(198);
                    r6H[17] = I8yy.r2k(r6H[0][2], r6H[28], 1, r6H[28], 1, r6H[0][2]);
                    r6H[66] = {
                        topAlpha: 0,
                        midAlpha: 0,
                        botAlpha: 0
                    };
                    b7H[234][`alpha`] = 0;
                    b7H[353][`alpha`] = 0;
                    b7H[231][`alpha`] = 0;
                    b7H[366][`alpha`] = 0;
                    b7H[850][`alpha`] = 0;
                    b7H[129][`alpha`] = 0;
                    r6H[38] = new TWEEN[`Tween`](r6H[66],b7H[85]);
                    r6H[38][`to`]({
                        topAlpha: 1
                    }, 6);
                    r6H[38][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[38][`delay`](0);
                    r6H[38][`start`](0);
                    r6H[83] = new TWEEN[`Tween`](r6H[66],b7H[85]);
                    r6H[83][`to`]({
                        topAlpha: 0
                    }, 6);
                    r6H[83][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[83][`delay`](40);
                    r6H[38][`chain`](r6H[83]);
                    r6H[90] = new TWEEN[`Tween`](r6H[66],b7H[85]);
                    r6H[90][`to`]({
                        midAlpha: 1
                    }, 6);
                    r6H[90][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[90][`delay`](3);
                    r6H[90][`start`](0);
                    r6H[22] = new TWEEN[`Tween`](r6H[66],b7H[85]);
                    r6H[22][`to`]({
                        midAlpha: 0
                    }, 6);
                    r6H[22][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[22][`delay`](40);
                    r6H[90][`chain`](r6H[22]);
                    r6H[89] = new TWEEN[`Tween`](r6H[66],b7H[85]);
                    r6H[89][`to`]({
                        botAlpha: 1
                    }, 6);
                    r6H[89][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[89][`delay`](6);
                    r6H[89][`start`](0);
                    r6H[75] = new TWEEN[`Tween`](r6H[66],b7H[85]);
                    r6H[75][`to`]({
                        botAlpha: 0
                    }, 6);
                    r6H[75][`easing`](TWEEN[`Easing`][`Quadratic`][`In`]);
                    r6H[75][`delay`](40);
                    r6H[89][`chain`](r6H[75]);
                    b7H[85][`update`](r6H[17]);
                    b7H[234][`alpha`] = r6H[66][`topAlpha`];
                    b7H[353][`alpha`] = r6H[66][`topAlpha`];
                    b7H[231][`alpha`] = r6H[66][`midAlpha`];
                    b7H[366][`alpha`] = r6H[66][`midAlpha`];
                    b7H[850][`alpha`] = r6H[66][`botAlpha`];
                    b7H[129][`alpha`] = r6H[66][`botAlpha`];
                    b7H[162][`visible`] = true;
                } else {
                    b7H[162][`visible`] = false;
                }
                for (r6H[184] = 0; r6H[184] < b7H[76][`length`]; r6H[184]++) {
                    if (b7H[76][r6H[184]] && !r6H[0][1][`discs`][r6H[184]]) {
                        K1y(r6H[184]);
                    }
                }
                for (r6H[184] = 0; r6H[184] < r6H[0][1][`discs`][`length`]; r6H[184]++) {
                    if (r6H[0][1][`discs`][r6H[184]]) {
                        if (!b7H[76][r6H[184]]) {
                            b7H[76][r6H[184]] = {
                                container: null,
                                inner: null,
                                innerColor: 0,
                                nametext: null,
                                outline: null,
                                offscreencontainer: null,
                                offscreenarrow: null,
                                offscreentext: null,
                                totalRadius: 1
                            };
                            if (r6H[184] == b7H[45]) {
                                b7H[16] = true;
                            }
                            r6H[57] = 1;
                            if (r6H[0][3][`mo`] == `sl`) {
                                r6H[57] = 3.5;
                            }
                            if (r6H[0][3][`bal`][r6H[184]]) {
                                I8yy.H2k(0);
                                r6H[866] = I8yy.r2k(184, 7);
                                I8yy.P2k(0);
                                r6H[462] = I8yy.r2k(82, 18);
                                r6H[29] = r6H[0][3][v8yy[r6H[866]]][r6H[184]] / r6H[462];
                                r6H[29] = Math[`max`](Math[`min`](r6H[29], 1), -0.94);
                                r6H[57] += r6H[29];
                            }
                            b7H[76][r6H[184]][`totalRadius`] = r6H[57];
                            r6H[51] = new PIXI[`Graphics`]();
                            r6H[45] = null;
                            r6H[76] = 0x448aff;
                            if (b7H[27]) {
                                if (r6H[0][1][`discs`][r6H[184]][`team`] == 1) {
                                    r6H[76] = 0x1abc9c;
                                } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 2) {
                                    r6H[76] = 0xd32f2f;
                                } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 3) {
                                    r6H[76] = 0x448aff;
                                } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 4) {
                                    r6H[76] = 0x177819;
                                } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 5) {
                                    r6H[76] = 0xffd90e;
                                }
                                r6H[51][`beginFill`](r6H[76]);
                                I8yy.H2k(5);
                                r6H[51][`drawCircle`](0, 0, I8yy.A2k(r6H[35], r6H[57]));
                                r6H[51][`endFill`]();
                            } else if (b7H[44]) {
                                r6H[23] = r6H[0][1][`discs`][r6H[184]][`spawnTeamInfo`];
                                r6H[26] = 0;
                                if (r6H[23][`f`]) {
                                    r6H[26]++;
                                }
                                if (r6H[23][`r`]) {
                                    r6H[26]++;
                                }
                                if (r6H[23][`b`]) {
                                    r6H[26]++;
                                }
                                if (r6H[23][`gr`]) {
                                    r6H[26]++;
                                }
                                if (r6H[23][`ye`]) {
                                    r6H[26]++;
                                }
                                for (r6H[368] = 0; r6H[368] < r6H[26]; r6H[368]++) {
                                    I8yy.P2k(235);
                                    r6H[30] = I8yy.r2k(r6H[368], 2, r6H[26], 1);
                                    r6H[84] = -1;
                                    r6H[88] = 2;
                                    r6H[18] = 2;
                                    r6H[39] = null;
                                    I8yy.P2k(5);
                                    r6H[98] = I8yy.A2k(r6H[35], r6H[57]);
                                    if (r6H[23][`f`]) {
                                        r6H[23][`f`] = false;
                                        r6H[39] = 0x1abc9c;
                                    } else if (r6H[23][`r`]) {
                                        r6H[23][`r`] = false;
                                        r6H[39] = 0xd32f2f;
                                    } else if (r6H[23][`b`]) {
                                        r6H[23][`b`] = false;
                                        r6H[39] = 0x448aff;
                                    } else if (r6H[23][`gr`]) {
                                        r6H[23][`gr`] = false;
                                        r6H[39] = 0x177819;
                                    } else if (r6H[23][`ye`]) {
                                        r6H[23][`ye`] = false;
                                        r6H[39] = 0xffd90e;
                                    }
                                    r6H[51][`beginFill`](r6H[39]);
                                    I8yy.P2k(5);
                                    r6H[51][`drawRect`](I8yy.r2k(r6H[30], r6H[98]), I8yy.r2k(r6H[84], r6H[98]), I8yy.r2k(r6H[88], r6H[98]), I8yy.A2k(r6H[18], r6H[98]));
                                    r6H[51][`endFill`]();
                                    I8yy.P2k(25);
                                    r6H[762] = I8yy.A2k(810, 97155, 6, 20);
                                    I8yy.H2k(1);
                                    r6H[665] = I8yy.A2k(16, 198);
                                    I8yy.P2k(12);
                                    r6H[642] = I8yy.r2k(13, 193, 0);
                                    r6H[51][`rotation`] = r6H[762] * (Math[v8yy[r6H[665]]] / r6H[642]);
                                }
                                if (r6H[26] == 0) {
                                    r6H[76] = 0x91ada7;
                                    r6H[51][`beginFill`](r6H[76]);
                                    I8yy.P2k(5);
                                    r6H[51][`drawCircle`](0, 0, I8yy.r2k(r6H[35], r6H[57]));
                                    r6H[51][`endFill`]();
                                }
                                if (r6H[184] == b7H[31]) {
                                    r6H[51][`clear`]();
                                    r6H[76] = 0xffffff;
                                    r6H[51][`beginFill`](r6H[76]);
                                    I8yy.H2k(5);
                                    r6H[51][`drawCircle`](0, 0, I8yy.r2k(r6H[35], r6H[57]));
                                    r6H[51][`endFill`]();
                                }
                            } else {
                                if (b7H[98][r6H[184]] && b7H[98][r6H[184]][`avatar`] && typeof b7H[98][r6H[184]][`avatar`][`bc`] == `number`) {
                                    r6H[76] = b7H[98][r6H[184]][`avatar`][`bc`];
                                } else {
                                    r6H[76] = 0x448aff;
                                }
                                r6H[51][`beginFill`](r6H[76]);
                                I8yy.P2k(5);
                                r6H[51][`drawCircle`](0, 0, I8yy.r2k(r6H[35], r6H[57]));
                                r6H[51][`endFill`]();
                                r6H[51][`skinRendered`] = false;
                                try {
                                    if (b7H[98][r6H[184]] && b7H[98][r6H[184]][`avatar`] && b7H[98][r6H[184]][`avatar`][`layers`]) {
                                        if (b7H[6][r6H[184]] && b7H[6][r6H[184]][`texture`]) {
                                            ;
                                        } else {
                                            R1y(r6H[184], r6H[57], r6H[35]);
                                        }
                                    }
                                    ;
                                } catch (I5S) {}
                                if (r6H[0][1][`discs`][r6H[184]][`team`] >= 2 && r6H[0][1][`discs`][r6H[184]][`team`] <= 5) {
                                    r6H[45] = new PIXI[`Graphics`]();
                                    r6H[36] = 0x000000;
                                    if (r6H[0][1][`discs`][r6H[184]][`team`] == 2) {
                                        r6H[36] = 0xf44336;
                                    } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 3) {
                                        r6H[36] = 0x2196f3;
                                    } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 4) {
                                        r6H[36] = 0x4caf50;
                                    } else if (r6H[0][1][`discs`][r6H[184]][`team`] == 5) {
                                        r6H[36] = 0xffeb3b;
                                    }
                                    r6H[45][`beginFill`](r6H[36]);
                                    I8yy.H2k(5);
                                    r6H[45][`drawCircle`](0, 0, I8yy.A2k(r6H[35], r6H[57]));
                                    r6H[45][`endFill`]();
                                    r6H[45][`blendMode`] = PIXI[`BLEND_MODES`][`MULTIPLY`];
                                    r6H[91] = new PIXI[`Graphics`]();
                                    I8yy.H2k(5);
                                    r6H[91][`lineStyle`](I8yy.r2k(0.13, r6H[35]), r6H[36]);
                                    I8yy.P2k(9);
                                    r6H[91][`drawCircle`](0, 0, I8yy.r2k(1, r6H[57], r6H[35]));
                                    r6H[51][`addChild`](r6H[91]);
                                }
                            }
                            r6H[62] = null;
                            if (r6H[0][3][`mo`] == `v`) {
                                r6H[62] = new PIXI[`Graphics`]();
                                r6H[62][`beginFill`](0xcccccc);
                                r6H[62][`drawRect`](r6H[57] * (-E[`footHW`] * r6H[35] + E[`footOffsetX`] * r6H[35]), r6H[57] * (-E[`footHH`] * r6H[35] + E[`footOffsetY`] * r6H[35]), r6H[57] * (E[`footHW`] * r6H[35] * 2), r6H[57] * (E[`footHH`] * r6H[35] * 2));
                                r6H[62][`beginFill`](0xcccccc);
                                r6H[62][`drawRect`](r6H[57] * (-E[`footHW`] * r6H[35] + -E[`footOffsetX`] * r6H[35]), r6H[57] * (-E[`footHH`] * r6H[35] + E[`footOffsetY`] * r6H[35]), r6H[57] * (E[`footHW`] * r6H[35] * 2), r6H[57] * (E[`footHH`] * r6H[35] * 2));
                            }
                            b7H[76][r6H[184]][`inner`] = r6H[51];
                            b7H[76][r6H[184]][`innerColor`] = r6H[76];
                            r6H[60] = new PIXI[`Container`]();
                            r6H[60][`addChild`](r6H[51]);
                            if (r6H[45]) {
                                r6H[60][`addChild`](r6H[45]);
                            }
                            if (r6H[62]) {
                                r6H[60][`addChild`](r6H[62]);
                            }
                            b7H[76][r6H[184]][`container`] = r6H[60];
                            if (b7H[44]) {
                                r6H[12] = new PIXI[`Graphics`]();
                                r6H[12][`beginFill`](r6H[76]);
                                I8yy.H2k(5);
                                r6H[12][`drawCircle`](0, 0, I8yy.r2k(r6H[35], r6H[57]));
                                r6H[12][`endFill`]();
                                r6H[51][`mask`] = r6H[12];
                                r6H[60][`addChild`](r6H[12]);
                            }
                            r6H[24] = new PIXI[`Graphics`]();
                            r6H[24][`lineStyle`](2, 0xffffff, 1);
                            I8yy.P2k(35);
                            r6H[24][`drawCircle`](0, 0, I8yy.r2k(r6H[35], 1, r6H[57]));
                            b7H[76][r6H[184]][`outline`] = r6H[24];
                            b7H[76][r6H[184]][`container`][`addChild`](r6H[24]);
                            r6H[65] = `futurept_book`;
                            r6H[53] = ``;
                            if (b7H[98][r6H[184]]) {
                                r6H[53] = b7H[98][r6H[184]][`userName`];
                            }
                            r6H[55] = {
                                fontFamily: r6H[65],
                                fontSize: 11,
                                fill: 0xe0e0e0,
                                align: `center`,
                                dropShadow: true,
                                dropShadowDistance: 2,
                                dropShadowAlpha: 0.20
                            };
                            if (r6H[184] == b7H[45]) {
                                r6H[55][`fill`] = 0xffffff;
                                r6H[55][`dropShadowDistance`] = 2;
                                r6H[55][`dropShadowAlpha`] = 0.30;
                            }
                            r6H[32] = new PIXI[`Text`](r6H[53],r6H[55]);
                            b7H[76][r6H[184]][`container`][`addChild`](r6H[32]);
                            I8yy.P2k(0);
                            r6H[421] = I8yy.r2k(448, 20);
                            I8yy.P2k(32);
                            r6H[158] = I8yy.r2k(25, 10, 17);
                            I8yy.P2k(133);
                            r6H[640] = I8yy.r2k(11, 12, 1);
                            r6H[32][`x`] = -r6H[32][v8yy[r6H[421]]] / r6H[158] + r6H[640];
                            I8yy.H2k(13);
                            r6H[32][`y`] = I8yy.r2k(r6H[35], r6H[57], 1.2);
                            r6H[32][`resolution`] = b7H[57];
                            b7H[76][r6H[184]][`nametext`] = r6H[32];
                            r6H[64] = new PIXI[`Graphics`]();
                            r6H[64][`lineStyle`](undefined);
                            r6H[64][`beginFill`](0x000000);
                            r6H[64][`alpha`] = 0.08;
                            I8yy.P2k(35);
                            r6H[64][`drawCircle`](0, 0, I8yy.r2k(r6H[35], 1, r6H[57]));
                            b7H[76][r6H[184]][`container`][`addChildAt`](r6H[64], 0);
                            r6H[64][`x`] = 1.5;
                            r6H[64][`y`] = 1.5;
                            b7H[81][`addChild`](b7H[76][r6H[184]][`container`]);
                            r6H[73] = new PIXI[`Text`](r6H[53],{
                                fontFamily: r6H[65],
                                fontSize: 9,
                                fill: 0xfafafa,
                                align: `center`
                            });
                            r6H[73][`resolution`] = b7H[57];
                            I8yy.P2k(55);
                            r6H[385] = I8yy.r2k(467, 19, 18, 454, 454);
                            I8yy.P2k(1);
                            r6H[144] = I8yy.r2k(4, 6);
                            r6H[73][`x`] = -r6H[73][v8yy[r6H[385]]] / r6H[144];
                            I8yy.P2k(21);
                            r6H[575] = I8yy.r2k(26, 468, 26);
                            I8yy.H2k(1);
                            r6H[896] = I8yy.r2k(18, 20);
                            r6H[73][`y`] = -r6H[73][v8yy[r6H[575]]] / r6H[896];
                            r6H[48] = new PIXI[`Graphics`]();
                            r6H[48][`beginFill`](0x009688);
                            r6H[48][`drawPolygon`]([new PIXI[`Point`](0,0), new PIXI[`Point`](18,10), new PIXI[`Point`](0,20), new PIXI[`Point`](6,10), new PIXI[`Point`](0,0)]);
                            r6H[48][`pivot`] = new PIXI[`Point`](9,10);
                            r6H[48][`scale`][`x`] = r6H[48][`scale`][`y`] = 0.7;
                            r6H[94] = new PIXI[`Container`]();
                            r6H[94][`addChild`](r6H[48]);
                            r6H[94][`addChild`](r6H[73]);
                            b7H[76][r6H[184]][`offscreencontainer`] = r6H[94];
                            b7H[76][r6H[184]][`offscreenarrow`] = r6H[48];
                            b7H[76][r6H[184]][`offscreentext`] = r6H[73];
                            b7H[28][`addChild`](r6H[94]);
                        }
                        if (b7H[98][r6H[184]] && b7H[98][r6H[184]][`userName`] != b7H[76][r6H[184]][`offscreentext`][`text`]) {
                            b7H[76][r6H[184]][`offscreentext`][`text`] = b7H[98][r6H[184]][`userName`];
                            I8yy.P2k(223);
                            r6H[312] = I8yy.A2k(5, 7, 9567, 11, 10166);
                            I8yy.H2k(1);
                            r6H[645] = I8yy.r2k(7, 475);
                            I8yy.H2k(23);
                            r6H[950] = I8yy.A2k(1, 8, 281, 34, 11);
                            I8yy.H2k(84);
                            r6H[188] = I8yy.A2k(5, 10, 5, 4, 25);
                            b7H[76][r6H[184]][`offscreentext`][`x`] = -b7H[76][r6H[184]][v8yy[r6H[312]]][v8yy[r6H[645]]] / r6H[950] + r6H[188];
                            I8yy.P2k(5);
                            b7H[76][r6H[184]][`offscreentext`][`y`] = I8yy.r2k(1.2, r6H[35]);
                            b7H[76][r6H[184]][`nametext`][`text`] = b7H[98][r6H[184]][`userName`];
                            I8yy.P2k(21);
                            r6H[742] = I8yy.r2k(585, 589, 195);
                            I8yy.H2k(31);
                            r6H[801] = I8yy.r2k(9, 460, 3825, 17);
                            I8yy.P2k(8);
                            r6H[787] = I8yy.A2k(3, 22, 3, 15, 10);
                            b7H[76][r6H[184]][`nametext`][`x`] = -b7H[76][r6H[184]][v8yy[r6H[742]]][v8yy[r6H[801]]] / r6H[787];
                            I8yy.P2k(0);
                            r6H[112] = I8yy.A2k(577, 15);
                            I8yy.P2k(43);
                            r6H[514] = I8yy.A2k(5, 1, 485, 372);
                            I8yy.P2k(28);
                            r6H[605] = I8yy.A2k(7, 12, 21);
                            b7H[76][r6H[184]][`nametext`][`y`] = -b7H[76][r6H[184]][v8yy[r6H[112]]][v8yy[r6H[514]]] / r6H[605];
                            b7H[76][r6H[184]][`inner`][`clear`]();
                            r6H[82] = 0x448aff;
                            if (b7H[98][r6H[184]] && b7H[98][r6H[184]][`avatar`] && b7H[98][r6H[184]][`avatar`][`bc`]) {
                                r6H[82] = b7H[98][r6H[184]][`avatar`][`bc`];
                            }
                            r6H[51][`beginFill`](r6H[82]);
                            I8yy.H2k(5);
                            r6H[51][`drawCircle`](0, 0, I8yy.r2k(r6H[35], 1.0));
                            r6H[51][`endFill`]();
                            b7H[76][r6H[184]][`inner`] = r6H[51];
                        }
                        if (b7H[76][r6H[184]][`inner`][`skinRendered`] == false && b7H[6][r6H[184]] && b7H[6][r6H[184]][`texture`]) {
                            I8yy.P2k(210);
                            r6H[52] = I8yy.A2k(1, 30, 2, r6H[35]);
                            b7H[76][r6H[184]][`inner`][`clear`]();
                            b7H[76][r6H[184]][`inner`][`beginTextureFill`]({
                                texture: b7H[6][r6H[184]][`texture`],
                                matrix: new PIXI[`Matrix`](r6H[52],0,0,r6H[52],-r6H[35] * b7H[76][r6H[184]][`totalRadius`],-r6H[35] * b7H[76][r6H[184]][`totalRadius`])
                            });
                            b7H[76][r6H[184]][`inner`][`drawCircle`](0, 0, r6H[35] * b7H[76][r6H[184]][`totalRadius`]);
                            b7H[76][r6H[184]][`inner`][`endFill`]();
                            b7H[76][r6H[184]][`inner`][`skinRendered`] = true;
                            ;
                        }
                        I8yy.P2k(162);
                        r6H[911] = I8yy.r2k(615, 20, 3, 17, 127);
                        I8yy.H2k(22);
                        r6H[344] = I8yy.A2k(38, 30, 9, 21);
                        r6H[9] = r6H[0][0][v8yy[r6H[911]]][r6H[184]][v8yy[r6H[344]]] * r6H[35];
                        I8yy.H2k(0);
                        r6H[479] = I8yy.A2k(30, 11);
                        I8yy.H2k(56);
                        r6H[327] = I8yy.r2k(3, 57, 5, 19);
                        r6H[8] = r6H[0][0][v8yy[r6H[479]]][r6H[184]][v8yy[r6H[327]]] * r6H[35];
                        I8yy.H2k(26);
                        r6H[333] = I8yy.A2k(2, 8, 1273, 164);
                        I8yy.P2k(127);
                        r6H[137] = I8yy.r2k(4, 15, 22, 9, 14);
                        r6H[1] = r6H[0][1][v8yy[r6H[333]]][r6H[184]][v8yy[r6H[137]]] * r6H[35];
                        I8yy.P2k(136);
                        r6H[756] = I8yy.A2k(11, 574, 7, 523, 6);
                        I8yy.H2k(0);
                        r6H[920] = I8yy.A2k(2, 38);
                        r6H[5] = r6H[0][1][v8yy[r6H[756]]][r6H[184]][v8yy[r6H[920]]] * r6H[35];
                        r6H[4] = r6H[0][0][`discs`][r6H[184]][`a`];
                        r6H[59] = r6H[0][1][`discs`][r6H[184]][`a`];
                        if (r6H[0][1][`discs`][r6H[184]][`ni`] == true) {
                            r6H[9] = r6H[1];
                            r6H[8] = r6H[5];
                            r6H[4] = r6H[59];
                        }
                        I8yy.H2k(159);
                        b7H[76][r6H[184]][`container`][`x`] = I8yy.r2k(r6H[9], r6H[1], r6H[0][2], 1, r6H[0][2]);
                        I8yy.H2k(159);
                        b7H[76][r6H[184]][`container`][`y`] = I8yy.A2k(r6H[8], r6H[5], r6H[0][2], 1, r6H[0][2]);
                        r6H[58] = Math[`cos`](r6H[4]);
                        r6H[71] = Math[`sin`](r6H[4]);
                        r6H[33] = Math[`cos`](r6H[59]);
                        r6H[74] = Math[`sin`](r6H[59]);
                        I8yy.P2k(159);
                        r6H[42] = I8yy.r2k(r6H[58], r6H[33], r6H[0][2], 1, r6H[0][2]);
                        I8yy.H2k(159);
                        r6H[67] = I8yy.A2k(r6H[71], r6H[74], r6H[0][2], 1, r6H[0][2]);
                        b7H[76][r6H[184]][`container`][`rotation`] = Math[`atan2`](r6H[67], r6H[42]);
                        if (r6H[0][1][`discs`][r6H[184]][`a1`] && r6H[0][3][`mo`] != `bs` && r6H[0][3][`mo`] != `ft` && !(r6H[0][1][`discs`][r6H[184]][`ds`] > 0)) {
                            b7H[76][r6H[184]][`outline`][`alpha`] = Math[`max`](r6H[0][1][`discs`][r6H[184]][`a1a`] / 1000, 0.25);
                        } else {
                            b7H[76][r6H[184]][`outline`][`alpha`] = 0;
                        }
                        if (r6H[0][3][`mo`] == `sp`) {
                            if (!b7H[76][r6H[184]][`swing`]) {
                                b7H[76][r6H[184]][`swing`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`container`][`addChildAt`](b7H[76][r6H[184]][`swing`], 0);
                                b7H[76][r6H[184]][`swingArc`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`swing`][`addChild`](b7H[76][r6H[184]][`swingArc`]);
                            } else {
                                b7H[76][r6H[184]][`swing`][`clear`]();
                            }
                            if (r6H[0][0][`discs`][r6H[184]][`swing`] && r6H[0][1][`discs`][r6H[184]][`swing`]) {
                                r6H[99] = r6H[0][1][`discs`][r6H[184]][`swing`][`b`];
                                r6H[46] = {
                                    x: r6H[0][0][`discs`][r6H[184]][`swing`][`p`][0],
                                    y: r6H[0][0][`discs`][r6H[184]][`swing`][`p`][1]
                                };
                                r6H[77] = E4y({
                                    x: 0,
                                    y: 0
                                }, r6H[46], r6H[0][0][`physics`][`bodies`][r6H[99]][`a`]);
                                r6H[61] = {
                                    x: r6H[77][`x`] + r6H[0][0][`physics`][`bodies`][r6H[99]][`p`][0],
                                    y: r6H[77][`y`] + r6H[0][0][`physics`][`bodies`][r6H[99]][`p`][1]
                                };
                                r6H[21] = {
                                    x: r6H[0][1][`discs`][r6H[184]][`swing`][`p`][0],
                                    y: r6H[0][1][`discs`][r6H[184]][`swing`][`p`][1]
                                };
                                r6H[41] = E4y({
                                    x: 0,
                                    y: 0
                                }, r6H[21], r6H[0][1][`physics`][`bodies`][r6H[99]][`a`]);
                                r6H[96] = {
                                    x: r6H[41][`x`] + r6H[0][1][`physics`][`bodies`][r6H[99]][`p`][0],
                                    y: r6H[41][`y`] + r6H[0][1][`physics`][`bodies`][r6H[99]][`p`][1]
                                };
                                r6H[44] = {};
                                I8yy.H2k(1);
                                r6H[183] = I8yy.A2k(10, 11);
                                I8yy.P2k(113);
                                r6H[228] = I8yy.r2k(78, 20, 78, 19);
                                I8yy.P2k(60);
                                r6H[518] = I8yy.A2k(18, 56, 49, 49);
                                r6H[44][`x`] = (r6H[183] - r6H[0][2]) * r6H[61][v8yy[r6H[228]]] + r6H[0][2] * r6H[96][v8yy[r6H[518]]];
                                I8yy.H2k(224);
                                r6H[524] = I8yy.r2k(3, 4, 0, 3, 14);
                                I8yy.P2k(1);
                                r6H[117] = I8yy.r2k(17, 57);
                                I8yy.H2k(154);
                                r6H[951] = I8yy.A2k(2, 13, 13, 13, 51);
                                r6H[44][`y`] = (r6H[524] - r6H[0][2]) * r6H[61][v8yy[r6H[117]]] + r6H[0][2] * r6H[96][v8yy[r6H[951]]];
                                r6H[27] = {};
                                I8yy.H2k(15);
                                r6H[969] = I8yy.A2k(301, 28, 8, 17);
                                I8yy.P2k(25);
                                r6H[253] = I8yy.r2k(547, 26260, 7, 7);
                                I8yy.P2k(119);
                                r6H[177] = I8yy.A2k(10, 9, 195, 175);
                                r6H[27][`x`] = r6H[44][v8yy[r6H[969]]] * r6H[35] - b7H[76][r6H[184]][v8yy[r6H[253]]][v8yy[r6H[177]]];
                                I8yy.P2k(193);
                                r6H[729] = I8yy.r2k(11, 17, 3, 57, 14);
                                I8yy.P2k(17);
                                r6H[538] = I8yy.A2k(20, 45, 16, 534);
                                I8yy.H2k(0);
                                r6H[934] = I8yy.r2k(23, 17);
                                r6H[27][`y`] = r6H[44][v8yy[r6H[729]]] * r6H[35] - b7H[76][r6H[184]][v8yy[r6H[538]]][v8yy[r6H[934]]];
                                b7H[76][r6H[184]][`swing`][`lineStyle`](2, 0xcccccc, 0.5);
                                b7H[76][r6H[184]][`swing`][`lineTo`](r6H[27][`x`], r6H[27][`y`]);
                                b7H[76][r6H[184]][`swing`][`drawCircle`](r6H[27][`x`], r6H[27][`y`], 0.2 * r6H[35]);
                            } else if (r6H[0][0][`discs`][r6H[184]][`a2`] && r6H[0][1][`discs`][r6H[184]][`a2`] && r6H[184] == b7H[45]) {
                                if (r6H[0][3][`mo`] == `sp`) {
                                    b7H[76][r6H[184]][`swing`][`lineStyle`](2, 0xcccccc, 0.5);
                                    I8yy.H2k(5);
                                    b7H[76][r6H[184]][`swing`][`drawCircle`](0, 0, I8yy.r2k(10, r6H[35]));
                                }
                                ;
                            }
                            if (r6H[0][0][`discs`][r6H[184]][`a1a`] < r6H[0][3][`sa1t`]) {
                                b7H[76][r6H[184]][`swing`][`lineStyle`](2, 0xff3333, 0.5);
                                b7H[76][r6H[184]][`swing`][`drawCircle`](0, 0, b7H[76][r6H[184]][`totalRadius`] * r6H[35] + 1);
                            }
                            r6H[85] = 4;
                            r6H[50] = b7H[76][r6H[184]][`swingArc`];
                            r6H[50][`clear`]();
                            I8yy.H2k(5);
                            r6H[50][`lineStyle`](I8yy.r2k(2, r6H[85]), 0xffffff, 0.3);
                            I8yy.P2k(1);
                            r6H[750] = I8yy.r2k(10, 129);
                            I8yy.H2k(9);
                            r6H[118] = I8yy.A2k(22876, 3, 7826);
                            I8yy.P2k(19);
                            r6H[810] = I8yy.r2k(3, 18, 3, 2123, 1020);
                            I8yy.P2k(25);
                            r6H[848] = I8yy.A2k(588, 96418, 15, 11);
                            r6H[63] = (r6H[0][0][`discs`][r6H[184]][v8yy[r6H[750]]] - r6H[0][3][v8yy[r6H[118]]]) / (r6H[810] - r6H[0][3][v8yy[r6H[848]]]);
                            if (r6H[63] > 0) {
                                r6H[50][`arc`](0, 0, (b7H[76][r6H[184]][`totalRadius`] * r6H[35] + 1) * r6H[85], 0, 2 * Math[`PI`] * r6H[63]);
                                I8yy.H2k(2);
                                r6H[50][`scale`][`x`] = r6H[50][`scale`][`y`] = I8yy.A2k(1, r6H[85]);
                                I8yy.H2k(150);
                                r6H[903] = I8yy.A2k(81, 9, 81);
                                I8yy.H2k(39);
                                r6H[325] = I8yy.r2k(3, 17, 13, 315, 38);
                                r6H[50][`rotation`] = r6H[903] * PIXI[v8yy[r6H[325]]];
                            }
                        }
                        if (r6H[0][3][`mo`] == `ar` || r6H[0][3][`mo`] == `ard`) {
                            if (!b7H[76][r6H[184]][`swing`]) {
                                b7H[76][r6H[184]][`swing`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`container`][`addChildAt`](b7H[76][r6H[184]][`swing`], 0);
                                b7H[76][r6H[184]][`swingArc`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`swing`][`addChild`](b7H[76][r6H[184]][`swingArc`]);
                                b7H[76][r6H[184]][`arrowDrawing`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`container`][`addChild`](b7H[76][r6H[184]][`arrowDrawing`]);
                            } else {
                                b7H[76][r6H[184]][`swing`][`clear`]();
                                b7H[76][r6H[184]][`swingArc`][`clear`]();
                                b7H[76][r6H[184]][`arrowDrawing`][`clear`]();
                            }
                            if (r6H[0][0][`discs`][r6H[184]][`a1a`] < 500) {
                                b7H[76][r6H[184]][`swing`][`lineStyle`](2, 0xff3333, 0.5);
                                b7H[76][r6H[184]][`swing`][`drawCircle`](0, 0, b7H[76][r6H[184]][`totalRadius`] * r6H[35] + 1);
                            }
                            if (r6H[0][1][`discs`][r6H[184]][`ds`] == 0) {
                                r6H[31] = 4;
                                r6H[20] = b7H[76][r6H[184]][`swingArc`];
                                r6H[20][`clear`]();
                                I8yy.H2k(5);
                                r6H[20][`lineStyle`](I8yy.r2k(2, r6H[31]), 0xffffff, 0.3);
                                I8yy.H2k(0);
                                r6H[590] = I8yy.A2k(35, 6);
                                I8yy.P2k(15);
                                r6H[928] = I8yy.A2k(10287, 952, 6, 11);
                                I8yy.P2k(32);
                                r6H[126] = I8yy.A2k(15, 496, 19);
                                I8yy.H2k(172);
                                r6H[519] = I8yy.A2k(923, 12, 8, 6, 91);
                                I8yy.P2k(0);
                                r6H[176] = I8yy.A2k(63, 437);
                                r6H[68] = (r6H[0][0][v8yy[r6H[590]]][r6H[184]][v8yy[r6H[928]]] - r6H[126]) / (r6H[519] - r6H[176]);
                                if (r6H[68] > 0) {
                                    r6H[20][`arc`](0, 0, (b7H[76][r6H[184]][`totalRadius`] * r6H[35] + 1) * r6H[31], 0, 2 * Math[`PI`] * r6H[68]);
                                    I8yy.H2k(2);
                                    r6H[20][`scale`][`x`] = r6H[20][`scale`][`y`] = I8yy.A2k(1, r6H[31]);
                                    I8yy.P2k(236);
                                    r6H[355] = I8yy.r2k(8, 5, 1, 50);
                                    I8yy.P2k(32);
                                    r6H[432] = I8yy.r2k(8, 594, 18);
                                    r6H[20][`rotation`] = r6H[355] * PIXI[v8yy[r6H[432]]];
                                }
                            } else {
                                r6H[56] = r6H[0][0][`discs`][r6H[184]][`ds`];
                                r6H[69] = b7H[4];
                                r6H[471] = b7H[7];
                                I8yy.P2k(0);
                                r6H[574] = I8yy.A2k(3, 38);
                                I8yy.H2k(79);
                                r6H[496] = I8yy.r2k(186, 3, 185, 186);
                                I8yy.H2k(237);
                                r6H[356] = I8yy.r2k(8, 8965, 5, 14, 16);
                                r6H[740] = Math[`sqrt`](r6H[0][0][v8yy[r6H[574]]][r6H[184]][v8yy[r6H[496]]]) / r6H[356];
                                r6H[256] = r6H[0][0][`discs`][r6H[184]][`team`];
                                b7H[76][r6H[184]][`arrowDrawing`][`lineStyle`](2, 0xffffff, 0.3);
                                I8yy.H2k(5);
                                b7H[76][r6H[184]][`arrowDrawing`][`moveTo`](I8yy.A2k(0.5, r6H[35]), I8yy.r2k(r6H[35], 1, I8yy.H2k(126)));
                                I8yy.H2k(238);
                                b7H[76][r6H[184]][`arrowDrawing`][`lineTo`](I8yy.A2k(r6H[35], 2, r6H[69], r6H[740]), I8yy.A2k(2, r6H[471], r6H[35], I8yy.P2k(239)));
                                I8yy.H2k(5);
                                b7H[76][r6H[184]][`arrowDrawing`][`moveTo`](I8yy.r2k(0.5, r6H[35]), I8yy.r2k(1, r6H[35]));
                                I8yy.P2k(238);
                                b7H[76][r6H[184]][`arrowDrawing`][`lineTo`](I8yy.r2k(r6H[35], 2, r6H[69], r6H[740]), I8yy.r2k(2, r6H[35], r6H[471], I8yy.H2k(106)));
                                b7H[76][r6H[184]][`arrowDrawing`][`lineStyle`](1, 0xffffff, 0.3);
                                b7H[76][r6H[184]][`arrowDrawing`][`moveTo`](0, 0);
                                I8yy.P2k(5);
                                b7H[76][r6H[184]][`arrowDrawing`][`lineTo`](I8yy.A2k(5, r6H[35]), 0);
                                r6H[515] = 0xd32f2f;
                                if (r6H[0][3][`tea`] == false) {
                                    if (b7H[98][r6H[184]] && b7H[98][r6H[184]][`avatar`]) {
                                        r6H[515] = b7H[98][r6H[184]][`avatar`][`bc`];
                                    }
                                } else {
                                    if (r6H[256] == 2) {
                                        r6H[515] = 0xf44336;
                                    }
                                    if (r6H[256] == 3) {
                                        r6H[515] = 0x2196f3;
                                    }
                                    if (r6H[256] == 4) {
                                        r6H[515] = 0x4caf50;
                                    }
                                    if (r6H[256] == 5) {
                                        r6H[515] = 0xffeb3b;
                                    }
                                }
                                b7H[76][r6H[184]][`arrowDrawing`][`beginFill`](r6H[515]);
                                b7H[76][r6H[184]][`arrowDrawing`][`lineStyle`](undefined);
                                if (r6H[0][3][`mo`] == `ard`) {
                                    b7H[76][r6H[184]][`arrowDrawing`][`lineStyle`]({
                                        width: 1,
                                        color: 0x000000
                                    });
                                }
                                I8yy.H2k(238);
                                b7H[76][r6H[184]][`arrowDrawing`][`drawRect`](I8yy.r2k(r6H[35], 2, r6H[69], r6H[740]), I8yy.r2k(2, r6H[471], r6H[35], I8yy.H2k(239)), I8yy.r2k(r6H[69], r6H[35], I8yy.P2k(5)), I8yy.A2k(r6H[471], r6H[35], I8yy.P2k(5)));
                                b7H[76][r6H[184]][`arrowDrawing`][`endFill`]();
                                I8yy.H2k(22);
                                r6H[754] = I8yy.A2k(600, 10, 4, 36);
                                I8yy.P2k(1);
                                r6H[784] = I8yy.r2k(369, 410);
                                I8yy.H2k(32);
                                r6H[965] = I8yy.r2k(4, 188, 6);
                                r6H[379] = PIXI[v8yy[r6H[754]]] * r6H[0][0][v8yy[r6H[784]]][r6H[184]][v8yy[r6H[965]]];
                                I8yy.P2k(9);
                                r6H[105] = I8yy.A2k(176, 13, 60);
                                I8yy.P2k(168);
                                r6H[411] = I8yy.A2k(3, 27, 6, 3, 20);
                                I8yy.H2k(240);
                                r6H[507] = I8yy.A2k(14, 7230, 2, 5, 2660);
                                r6H[492] = PIXI[v8yy[r6H[105]]] * r6H[0][1][v8yy[r6H[411]]][r6H[184]][v8yy[r6H[507]]];
                                r6H[130] = Math[`cos`](r6H[379]);
                                r6H[666] = Math[`sin`](r6H[379]);
                                r6H[923] = Math[`cos`](r6H[492]);
                                r6H[622] = Math[`sin`](r6H[492]);
                                I8yy.P2k(159);
                                r6H[121] = I8yy.A2k(r6H[130], r6H[923], r6H[0][2], 1, r6H[0][2]);
                                I8yy.P2k(159);
                                r6H[862] = I8yy.A2k(r6H[666], r6H[622], r6H[0][2], 1, r6H[0][2]);
                                b7H[76][r6H[184]][`arrowDrawing`][`rotation`] = Math[`atan2`](r6H[862], r6H[121]);
                                ;
                            }
                        }
                        if (r6H[0][3][`mo`] == `ft`) {
                            if (!b7H[76][r6H[184]][`swing`]) {
                                b7H[76][r6H[184]][`swing`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`container`][`addChildAt`](b7H[76][r6H[184]][`swing`], 0);
                                b7H[76][r6H[184]][`swingArc`] = new PIXI[`Graphics`]();
                                b7H[76][r6H[184]][`swing`][`addChild`](b7H[76][r6H[184]][`swingArc`]);
                            } else {
                                b7H[76][r6H[184]][`swing`][`clear`]();
                                b7H[76][r6H[184]][`swingArc`][`clear`]();
                            }
                            r6H[570] = 4;
                            r6H[743] = b7H[76][r6H[184]][`swingArc`];
                            r6H[743][`clear`]();
                            I8yy.H2k(5);
                            r6H[743][`lineStyle`](I8yy.A2k(2, r6H[570]), 0xffffff, 0.3);
                            I8yy.H2k(69);
                            r6H[725] = I8yy.A2k(15, 12, 2, 21, 39);
                            I8yy.P2k(7);
                            r6H[306] = I8yy.A2k(105, 5, 8, 113, 113);
                            I8yy.P2k(36);
                            r6H[149] = I8yy.A2k(12000, 1, 11000);
                            r6H[254] = r6H[0][0][v8yy[r6H[725]]][r6H[184]][v8yy[r6H[306]]] / r6H[149];
                            if (r6H[254] > 0) {
                                r6H[743][`arc`](0, 0, (b7H[76][r6H[184]][`totalRadius`] * r6H[35] + 1) * r6H[570], 0, 2 * Math[`PI`] * r6H[254]);
                                I8yy.H2k(2);
                                r6H[743][`scale`][`x`] = r6H[743][`scale`][`y`] = I8yy.A2k(1, r6H[570]);
                                I8yy.P2k(203);
                                r6H[706] = I8yy.r2k(22, 68);
                                I8yy.P2k(66);
                                r6H[611] = I8yy.r2k(5, 16, 9060, 10, 1448991);
                                r6H[743][`rotation`] = r6H[706] * PIXI[v8yy[r6H[611]]];
                            }
                        }
                        r6H[628] = 18;
                        r6H[413] = 25;
                        if (b7H[54] == false && b7H[27] == false && b7H[44] == false && b7H[40] == false && (b7H[76][r6H[184]][`container`][`x`] < 0 - r6H[628] || b7H[76][r6H[184]][`container`][`x`] > 730 + r6H[628] || b7H[76][r6H[184]][`container`][`y`] < 0 - r6H[413])) {
                            I8yy.H2k(1);
                            r6H[388] = I8yy.A2k(320, 340);
                            I8yy.P2k(10);
                            r6H[454] = I8yy.r2k(617, 3, 610, 617, 10);
                            I8yy.P2k(40);
                            r6H[478] = I8yy.A2k(14, 415, 67);
                            I8yy.P2k(58);
                            r6H[820] = I8yy.r2k(4, 2, 15, 11);
                            r6H[370] = r6H[388] + b7H[76][r6H[184]][v8yy[r6H[454]]][v8yy[r6H[478]]] / r6H[820];
                            I8yy.P2k(0);
                            r6H[764] = I8yy.r2k(17, 3);
                            I8yy.H2k(25);
                            r6H[342] = I8yy.A2k(616, 110282, 10, 18);
                            I8yy.H2k(1);
                            r6H[133] = I8yy.r2k(6097, 6566);
                            I8yy.H2k(224);
                            r6H[651] = I8yy.r2k(14, 7, 17, 17, 232);
                            r6H[653] = r6H[764] + b7H[76][r6H[184]][v8yy[r6H[342]]][v8yy[r6H[133]]] / r6H[651];
                            I8yy.P2k(94);
                            r6H[191] = I8yy.r2k(1, 10, 1, 11, 100);
                            I8yy.P2k(21);
                            r6H[453] = I8yy.A2k(592, 596, 296);
                            I8yy.H2k(12);
                            r6H[772] = I8yy.r2k(13, 8892, 8411);
                            I8yy.H2k(1);
                            r6H[508] = I8yy.A2k(15, 17);
                            r6H[308] = r6H[191] + b7H[76][r6H[184]][v8yy[r6H[453]]][v8yy[r6H[772]]] / r6H[508];
                            I8yy.P2k(21);
                            r6H[746] = I8yy.A2k(1, 9, 1);
                            I8yy.P2k(35);
                            r6H[304] = I8yy.A2k(40, 198, 10);
                            I8yy.P2k(60);
                            r6H[629] = I8yy.A2k(20, 256, 2, 466);
                            I8yy.P2k(15);
                            r6H[107] = I8yy.A2k(64, 20, 14, 11);
                            r6H[894] = r6H[746] + b7H[76][r6H[184]][v8yy[r6H[304]]][v8yy[r6H[629]]] / r6H[107];
                            b7H[76][r6H[184]][`offscreencontainer`][`visible`] = true;
                            I8yy.P2k(0);
                            b7H[76][r6H[184]][`offscreencontainer`][`x`] = Math[`max`](I8yy.r2k(0, r6H[370]), Math[`min`](730 - r6H[370], b7H[76][r6H[184]][`container`][`x`]));
                            I8yy.P2k(0);
                            b7H[76][r6H[184]][`offscreencontainer`][`y`] = Math[`max`](I8yy.r2k(0, r6H[653]), b7H[76][r6H[184]][`container`][`y`]);
                            I8yy.P2k(118);
                            r6H[371] = I8yy.A2k(8127, 1, 3, 8672);
                            I8yy.H2k(1);
                            r6H[401] = I8yy.A2k(117, 156);
                            I8yy.P2k(80);
                            r6H[840] = I8yy.A2k(533, 3, 11, 4);
                            I8yy.H2k(42);
                            r6H[187] = I8yy.A2k(2, 6, 31);
                            r6H[987] = b7H[76][r6H[184]][v8yy[r6H[371]]][v8yy[r6H[401]]] - b7H[76][r6H[184]][v8yy[r6H[840]]][v8yy[r6H[187]]];
                            I8yy.H2k(42);
                            r6H[829] = I8yy.r2k(77, 7, 458);
                            I8yy.H2k(21);
                            r6H[899] = I8yy.A2k(200, 39, 200);
                            I8yy.P2k(174);
                            r6H[579] = I8yy.r2k(39, 540, 5, 1, 65);
                            I8yy.P2k(131);
                            r6H[369] = I8yy.r2k(47, 1, 1, 47, 39);
                            r6H[678] = b7H[76][r6H[184]][v8yy[r6H[829]]][v8yy[r6H[899]]] - b7H[76][r6H[184]][v8yy[r6H[579]]][v8yy[r6H[369]]];
                            r6H[199] = Math[`atan2`](r6H[678], r6H[987]);
                            I8yy.P2k(12);
                            r6H[752] = I8yy.A2k(18, 200, 0);
                            b7H[76][r6H[184]][`offscreenarrow`][`rotation`] = Math[v8yy[r6H[752]]] + r6H[199];
                            I8yy.P2k(36);
                            r6H[216] = I8yy.r2k(7761, 1, 7164);
                            I8yy.H2k(89);
                            r6H[836] = I8yy.r2k(8, 2, 15, 501, 261);
                            b7H[76][r6H[184]][`offscreenarrow`][`x`] = Math[`cos`](b7H[76][r6H[184]][v8yy[r6H[216]]][v8yy[r6H[836]]]) * r6H[308];
                            I8yy.H2k(32);
                            r6H[226] = I8yy.r2k(609, 1194, 12);
                            I8yy.P2k(56);
                            r6H[150] = I8yy.A2k(3, 522, 19, 30);
                            b7H[76][r6H[184]][`offscreenarrow`][`y`] = Math[`sin`](b7H[76][r6H[184]][v8yy[r6H[226]]][v8yy[r6H[150]]]) * r6H[894];
                            if (r6H[184] == b7H[45]) {
                                if (Date[`now`]() > b7H[50] + 500) {
                                    I8yy.H2k(40);
                                    r6H[263] = I8yy.A2k(3, 506, 39);
                                    I8yy.P2k(1);
                                    r6H[443] = I8yy.A2k(7, 46);
                                    I8yy.P2k(105);
                                    r6H[643] = I8yy.r2k(73, 4, 720, 19, 9);
                                    I8yy.P2k(80);
                                    r6H[499] = I8yy.A2k(0, 6, 6, 10);
                                    I8yy.H2k(71);
                                    r6H[659] = I8yy.A2k(1, 9, 14, 14, 18);
                                    r6H[945] = b7H[76][r6H[184]][v8yy[r6H[263]]][v8yy[r6H[443]]] / (r6H[643] / r6H[499]) - r6H[659];
                                    r6H[945] *= U[`panAmount`];
                                    r6H[945] = Math[`max`](Math[`min`](1, r6H[945]), -1);
                                    b7H[2][`playSound`](`discOffScreen`, r6H[945], 0.15, r6H[0][5]);
                                    b7H[50] = Date[`now`]();
                                }
                            }
                        } else {
                            b7H[76][r6H[184]][`offscreencontainer`][`visible`] = false;
                        }
                    }
                }
                if (b7H[76][b7H[45]] && b7H[81][`getChildIndex`](b7H[76][b7H[45]][`container`]) != b7H[81][`children`][`length`] - 1) {
                    b7H[81][`setChildIndex`](b7H[76][b7H[45]][`container`], b7H[81][`children`][`length`] - 1);
                }
                for (r6H[184] = 0; r6H[184] < b7H[99][`length`]; r6H[184]++) {
                    if (b7H[99][r6H[184]] && !r6H[0][1][`projectiles`][r6H[184]]) {
                        r1y(r6H[184]);
                    }
                }
                for (r6H[184] = 0; r6H[184] < r6H[0][1][`projectiles`][`length`]; r6H[184]++) {
                    if (r6H[0][0][`projectiles`][r6H[184]] && r6H[0][1][`projectiles`][r6H[184]]) {
                        if (!b7H[99][r6H[184]]) {
                            b7H[99][r6H[184]] = new PIXI[`Graphics`]();
                            if (r6H[0][3][`mo`] == `ar`) {
                                b7H[99][r6H[184]][`lineStyle`](undefined);
                            }
                            if (r6H[0][3][`mo`] == `ard`) {
                                b7H[99][r6H[184]][`lineStyle`]({
                                    width: 1,
                                    color: 0x000000
                                });
                            }
                            r6H[912] = r6H[0][1][`projectiles`][r6H[184]][`did`];
                            if (r6H[0][1][`discs`][r6H[912]]) {
                                r6H[596] = r6H[0][1][`discs`][r6H[912]][`team`];
                            }
                            r6H[487] = 0xd32f2f;
                            if (r6H[0][3][`tea`] == false) {
                                if (b7H[98][r6H[912]] && b7H[98][r6H[912]][`avatar`]) {
                                    r6H[487] = b7H[98][r6H[912]][`avatar`][`bc`];
                                }
                            } else {
                                if (r6H[596] == 2) {
                                    r6H[487] = 0xf44336;
                                }
                                if (r6H[596] == 3) {
                                    r6H[487] = 0x2196f3;
                                }
                                if (r6H[596] == 4) {
                                    r6H[487] = 0x4caf50;
                                }
                                if (r6H[596] == 5) {
                                    r6H[487] = 0xffeb3b;
                                }
                            }
                            b7H[99][r6H[184]][`beginFill`](r6H[487]);
                            I8yy.P2k(5);
                            r6H[914] = I8yy.A2k(b7H[4], r6H[35]);
                            I8yy.P2k(5);
                            r6H[367] = I8yy.A2k(b7H[7], r6H[35]);
                            if (r6H[0][3][`mo`] == `ard`) {
                                r6H[914] -= 1;
                                r6H[367] -= 1;
                            }
                            I8yy.H2k(149);
                            b7H[99][r6H[184]][`drawRect`](I8yy.A2k(r6H[914], 2), I8yy.r2k(r6H[367], 2), r6H[914], r6H[367]);
                            b7H[37][`addChild`](b7H[99][r6H[184]]);
                        }
                        I8yy.P2k(1);
                        r6H[737] = I8yy.r2k(2413, 2540);
                        I8yy.H2k(0);
                        r6H[562] = I8yy.A2k(7, 32);
                        r6H[549] = r6H[0][0][v8yy[r6H[737]]][r6H[184]][v8yy[r6H[562]]] * r6H[35];
                        I8yy.H2k(113);
                        r6H[779] = I8yy.A2k(4, 113, 8, 7);
                        I8yy.H2k(12);
                        r6H[389] = I8yy.A2k(7, 49, 2);
                        r6H[739] = r6H[0][0][v8yy[r6H[779]]][r6H[184]][v8yy[r6H[389]]] * r6H[35];
                        I8yy.P2k(15);
                        r6H[636] = I8yy.A2k(1760, 131, 20, 17);
                        I8yy.P2k(22);
                        r6H[282] = I8yy.A2k(38, 41, 14, 27);
                        r6H[160] = r6H[0][1][v8yy[r6H[636]]][r6H[184]][v8yy[r6H[282]]] * r6H[35];
                        I8yy.H2k(1);
                        r6H[528] = I8yy.A2k(127, 254);
                        I8yy.P2k(16);
                        r6H[703] = I8yy.A2k(7, 14, 86, 20);
                        r6H[111] = r6H[0][1][v8yy[r6H[528]]][r6H[184]][v8yy[r6H[703]]] * r6H[35];
                        r6H[771] = r6H[0][0][`projectiles`][r6H[184]][`a`];
                        r6H[621] = r6H[0][1][`projectiles`][r6H[184]][`a`];
                        I8yy.P2k(159);
                        b7H[99][r6H[184]][`x`] = I8yy.A2k(r6H[549], r6H[160], r6H[0][2], 1, r6H[0][2]);
                        I8yy.H2k(159);
                        b7H[99][r6H[184]][`y`] = I8yy.r2k(r6H[739], r6H[111], r6H[0][2], 1, r6H[0][2]);
                        r6H[58] = Math[`cos`](r6H[771]);
                        r6H[71] = Math[`sin`](r6H[771]);
                        r6H[33] = Math[`cos`](r6H[621]);
                        r6H[74] = Math[`sin`](r6H[621]);
                        I8yy.H2k(159);
                        r6H[42] = I8yy.A2k(r6H[58], r6H[33], r6H[0][2], 1, r6H[0][2]);
                        I8yy.P2k(159);
                        r6H[67] = I8yy.r2k(r6H[71], r6H[74], r6H[0][2], 1, r6H[0][2]);
                        b7H[99][r6H[184]][`rotation`] = Math[`atan2`](r6H[67], r6H[42]);
                    }
                }
                r6H[835] = [];
                for (r6H[184] = 0; r6H[184] < r6H[0][1][`capZones`][`length`]; r6H[184]++) {
                    if (r6H[0][1][`capZones`][r6H[184]]) {
                        r6H[835][r6H[0][1][`capZones`][r6H[184]][`i`]] = {
                            capID: r6H[184]
                        };
                    }
                }
                for (r6H[395] = r6H[0][1][`physics`][`bro`][`length`] - 1; r6H[395] >= 0; r6H[395]--) {
                    r6H[184] = r6H[0][1][`physics`][`bro`][r6H[395]];
                    if (r6H[0][1][`physics`][`bodies`][r6H[184]]) {
                        if (!b7H[70][r6H[184]]) {
                            b7H[70][r6H[184]] = new PIXI[`Graphics`]();
                            b7H[37][`addChild`](b7H[70][r6H[184]]);
                            r6H[476] = null;
                            for (r6H[280] = 0; r6H[280] < r6H[0][1][`physics`][`joints`][`length`]; r6H[280]++) {
                                if (r6H[0][1][`physics`][`joints`][r6H[280]]) {
                                    r6H[984] = r6H[0][1][`physics`][`joints`][r6H[280]];
                                    if (r6H[984][`type`] == `rv` && r6H[984][`ba`] == r6H[184] && (b7H[44] || r6H[984][`d`][`dl`])) {
                                        if (!r6H[476]) {
                                            r6H[476] = new PIXI[`Graphics`]();
                                        }
                                        ;r6H[476][`lineStyle`](1, 0xcccccc, 0.5);
                                        if (b7H[30] == r6H[280]) {
                                            r6H[476][`lineStyle`](1, 0xf4a7a7, 0.9);
                                        }
                                        r6H[476][`moveTo`](0, 0);
                                        r6H[476][`lineTo`](r6H[984][`aa`][0] * r6H[35], r6H[984][`aa`][1] * r6H[35]);
                                        if (b7H[44]) {
                                            r6H[476][`beginFill`](0x44ff44);
                                            r6H[476][`lineStyle`](undefined);
                                            r6H[476][`drawCircle`](r6H[984][`aa`][0] * r6H[35], r6H[984][`aa`][1] * r6H[35], 3);
                                        }
                                    }
                                }
                            }
                            for (r6H[422] = 0; r6H[422] < r6H[0][1][`physics`][`bodies`][r6H[184]][`fx`][`length`]; r6H[422]++) {
                                if (r6H[0][1][`physics`][`bodies`][r6H[184]][`fx`][r6H[422]] != null) {
                                    r6H[175] = r6H[0][1][`physics`][`bodies`][r6H[184]][`fx`][r6H[422]];
                                    r6H[328] = r6H[0][1][`physics`][`fixtures`][r6H[175]][`sh`];
                                    r6H[608] = r6H[0][1][`physics`][`fixtures`][r6H[175]];
                                    r6H[405] = r6H[0][1][`physics`][`shapes`][r6H[328]];
                                    r6H[736] = new PIXI[`Graphics`]();
                                    if (r6H[835][r6H[175]]) {
                                        r6H[736][`lineStyle`](3, 0xffffff, 1);
                                        if (b7H[97]) {
                                            r6H[736][`visible`] = false;
                                            b7H[143] = r6H[736];
                                        }
                                    } else if (b7H[91] == r6H[184] || b7H[53] == r6H[175]) {
                                        r6H[736][`beginFill`](0xff0000);
                                    } else {
                                        r6H[736][`beginFill`](r6H[608][`f`]);
                                    }
                                    if (r6H[405][`type`] == `bx`) {
                                        r6H[736][`drawRect`](-r6H[405][`w`] / 2 * r6H[35], -r6H[405][`h`] / 2 * r6H[35], r6H[405][`w`] * r6H[35], r6H[405][`h`] * r6H[35]);
                                        I8yy.H2k(127);
                                        r6H[410] = I8yy.r2k(4, 10, 47, 23, 19);
                                        r6H[736][`x`] = r6H[405][v8yy[r6H[410]]][0] * r6H[35];
                                        I8yy.P2k(17);
                                        r6H[893] = I8yy.A2k(10, 59, 20, 29);
                                        I8yy.H2k(241);
                                        r6H[148] = I8yy.r2k(19, 139, 9, 14);
                                        r6H[736][`y`] = r6H[405][v8yy[r6H[893]]][r6H[148]] * r6H[35];
                                        r6H[736][`rotation`] = r6H[405][`a`];
                                    } else if (r6H[405][`type`] == `ci`) {
                                        r6H[736][`drawCircle`](0, 0, r6H[405][`r`] * r6H[35]);
                                        I8yy.P2k(0);
                                        r6H[701] = I8yy.r2k(10, 48);
                                        r6H[736][`x`] = r6H[405][v8yy[r6H[701]]][0] * r6H[35];
                                        I8yy.P2k(120);
                                        r6H[134] = I8yy.A2k(10, 42, 2, 8);
                                        I8yy.H2k(0);
                                        r6H[165] = I8yy.r2k(0, 1);
                                        r6H[736][`y`] = r6H[405][v8yy[r6H[134]]][r6H[165]] * r6H[35];
                                    } else if (r6H[405][`type`] == `po`) {
                                        if (r6H[405][`v`][`length`] > 0) {
                                            r6H[736][`moveTo`](r6H[405][`v`][0][0] * r6H[35], r6H[405][`v`][0][1] * r6H[35]);
                                            for (r6H[392] = 1; r6H[392] < r6H[405][`v`][`length`]; r6H[392]++) {
                                                r6H[736][`lineTo`](r6H[405][`v`][r6H[392]][0] * r6H[35], r6H[405][`v`][r6H[392]][1] * r6H[35]);
                                            }
                                            r6H[736][`lineTo`](r6H[405][`v`][0][0] * r6H[35], r6H[405][`v`][0][1] * r6H[35]);
                                        }
                                    } else if (r6H[405][`type`] == `ch`) {
                                        r6H[736][`endFill`]();
                                        r6H[736][`lineStyle`](1, r6H[608][`f`], 1);
                                        r6H[736][`moveTo`](r6H[405][`v`][0][0] * r6H[35], r6H[405][`v`][0][1] * r6H[35]);
                                        for (r6H[392] = 1; r6H[392] < r6H[405][`v`][`length`]; r6H[392]++) {
                                            r6H[736][`lineTo`](r6H[405][`v`][r6H[392]][0] * r6H[35], r6H[405][`v`][r6H[392]][1] * r6H[35]);
                                        }
                                        if (r6H[405][`l`] == true) {
                                            r6H[736][`lineTo`](r6H[405][`v`][0][0] * r6H[35], r6H[405][`v`][0][1] * r6H[35]);
                                        }
                                    }
                                    r6H[736][`endFill`]();
                                    b7H[70][r6H[184]][`addChild`](r6H[736]);
                                    b7H[26][r6H[328]] = r6H[736];
                                    if (r6H[608][`np`] == false && v2k[79][`customControls`][`quality`] == 3) {
                                        r6H[198] = 0.17;
                                        r6H[592] = r6H[736][`clone`]();
                                        I8yy.H2k(0);
                                        r6H[686] = I8yy.A2k(31, 8);
                                        I8yy.H2k(1);
                                        r6H[147] = I8yy.A2k(14, 16);
                                        r6H[592][`x`] = r6H[736][v8yy[r6H[686]]] + r6H[147];
                                        I8yy.H2k(77);
                                        r6H[365] = I8yy.r2k(1, 7, 5, 30, 5);
                                        I8yy.H2k(1);
                                        r6H[843] = I8yy.r2k(19, 21);
                                        r6H[592][`y`] = r6H[736][v8yy[r6H[365]]] + r6H[843];
                                        r6H[592][`tint`] = 0x000000;
                                        b7H[70][r6H[184]][`addChildAt`](r6H[592], 0);
                                        r6H[592][`alpha`] = r6H[198];
                                        if (r6H[405][`type`] == `bx`) {
                                            r6H[592][`rotation`] = r6H[405][`a`];
                                        }
                                        r6H[592][`bodyID`] = r6H[184];
                                        r6H[592][`blendMode`] = PIXI[`BLEND_MODES`][`NORMAL`];
                                        b7H[33][r6H[328]] = r6H[592];
                                        ;
                                    }
                                }
                            }
                            if (r6H[476]) {
                                if (b7H[44]) {
                                    b7H[70][r6H[184]][`addChild`](r6H[476]);
                                } else {
                                    b7H[70][r6H[184]][`addChildAt`](r6H[476], 0);
                                    ;
                                }
                            }
                        }
                        if (b7H[70][r6H[184]][`parent`] != b7H[37]) {
                            continue;
                        }
                        I8yy.H2k(122);
                        r6H[376] = I8yy.A2k(12, 5, 12, 42, 5);
                        I8yy.H2k(21);
                        r6H[162] = I8yy.A2k(8, 46, 4);
                        I8yy.P2k(60);
                        r6H[141] = I8yy.A2k(3, 49, 1, 3);
                        r6H[9] = r6H[0][0][v8yy[r6H[376]]][v8yy[r6H[162]]][r6H[184]][v8yy[r6H[141]]][0] * r6H[35];
                        I8yy.H2k(40);
                        r6H[814] = I8yy.r2k(19, 8, 54);
                        I8yy.P2k(40);
                        r6H[973] = I8yy.r2k(14, 6, 56);
                        I8yy.P2k(61);
                        r6H[494] = I8yy.A2k(1, 13, 23, 4, 63);
                        I8yy.P2k(1);
                        r6H[511] = I8yy.r2k(20, 21);
                        r6H[8] = r6H[0][0][v8yy[r6H[814]]][v8yy[r6H[973]]][r6H[184]][v8yy[r6H[494]]][r6H[511]] * r6H[35];
                        I8yy.P2k(1);
                        r6H[883] = I8yy.r2k(774, 817);
                        I8yy.H2k(0);
                        r6H[723] = I8yy.A2k(4, 44);
                        I8yy.H2k(1);
                        r6H[922] = I8yy.A2k(7, 56);
                        r6H[1] = r6H[0][1][v8yy[r6H[883]]][v8yy[r6H[723]]][r6H[184]][v8yy[r6H[922]]][0] * r6H[35];
                        I8yy.H2k(85);
                        r6H[735] = I8yy.A2k(38, 38, 41, 2);
                        I8yy.H2k(0);
                        r6H[396] = I8yy.A2k(38, 10);
                        I8yy.P2k(123);
                        r6H[694] = I8yy.A2k(4, 6, 66, 6, 21);
                        I8yy.H2k(31);
                        r6H[646] = I8yy.A2k(11, 15, 263, 9);
                        r6H[5] = r6H[0][1][v8yy[r6H[735]]][v8yy[r6H[396]]][r6H[184]][v8yy[r6H[694]]][r6H[646]] * r6H[35];
                        r6H[4] = r6H[0][0][`physics`][`bodies`][r6H[184]][`a`];
                        r6H[59] = r6H[0][1][`physics`][`bodies`][r6H[184]][`a`];
                        r6H[58] = Math[`cos`](r6H[4]);
                        r6H[71] = Math[`sin`](r6H[4]);
                        r6H[33] = Math[`cos`](r6H[59]);
                        r6H[74] = Math[`sin`](r6H[59]);
                        I8yy.P2k(159);
                        r6H[42] = I8yy.A2k(r6H[58], r6H[33], r6H[0][2], 1, r6H[0][2]);
                        I8yy.H2k(159);
                        r6H[67] = I8yy.r2k(r6H[71], r6H[74], r6H[0][2], 1, r6H[0][2]);
                        I8yy.H2k(159);
                        b7H[70][r6H[184]][`x`] = I8yy.A2k(r6H[9], r6H[1], r6H[0][2], 1, r6H[0][2]);
                        I8yy.P2k(159);
                        b7H[70][r6H[184]][`y`] = I8yy.r2k(r6H[8], r6H[5], r6H[0][2], 1, r6H[0][2]);
                        b7H[70][r6H[184]][`rotation`] = Math[`atan2`](r6H[67], r6H[42]);
                        for (r6H[615] = r6H[0][1][`physics`][`bodies`][r6H[184]][`fx`][`length`] - 1; r6H[615] >= 0; r6H[615]--) {
                            if (r6H[0][1][`physics`][`bodies`][r6H[184]][`fx`][r6H[615]] != null) {
                                r6H[364] = r6H[0][1][`physics`][`bodies`][r6H[184]][`fx`][r6H[615]];
                                r6H[245] = r6H[0][1][`physics`][`fixtures`][r6H[364]][`sh`];
                                r6H[407] = r6H[0][1][`physics`][`fixtures`][r6H[364]];
                                r6H[480] = r6H[0][1][`physics`][`shapes`][r6H[245]];
                                if (r6H[480][`sk`] == true) {
                                    r6H[436] = b7H[26][r6H[245]];
                                    if (r6H[480][`type`] == `bx`) {
                                        r6H[403] = r6H[0][0][`physics`][`shapes`][r6H[245]][`w`];
                                        r6H[209] = r6H[0][1][`physics`][`shapes`][r6H[245]][`w`];
                                        I8yy.H2k(164);
                                        r6H[436][`width`] = I8yy.r2k(1, r6H[35], r6H[0][2], r6H[403], r6H[0][2], r6H[209]);
                                        if (b7H[33][r6H[245]]) {
                                            I8yy.P2k(164);
                                            b7H[33][r6H[245]][`width`] = I8yy.A2k(1, r6H[35], r6H[0][2], r6H[403], r6H[0][2], r6H[209]);
                                        }
                                    }
                                    if (r6H[480][`type`] == `ci`) {
                                        r6H[451] = r6H[0][0][`physics`][`shapes`][r6H[245]][`r`];
                                        r6H[489] = r6H[0][1][`physics`][`shapes`][r6H[245]][`r`];
                                        I8yy.H2k(166);
                                        r6H[436][`width`] = r6H[436][`height`] = I8yy.r2k(r6H[0][2], r6H[451], r6H[0][2], 1, 2, r6H[489], r6H[35]);
                                        if (b7H[33][r6H[245]]) {
                                            I8yy.H2k(166);
                                            b7H[33][r6H[245]][`width`] = b7H[33][r6H[245]][`height`] = I8yy.r2k(r6H[0][2], r6H[451], r6H[0][2], 1, 2, r6H[489], r6H[35]);
                                            ;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                for (r6H[225] = 0; r6H[225] < b7H[33][`length`]; r6H[225]++) {
                    if (b7H[33][r6H[225]]) {
                        r6H[331] = r6H[225];
                        r6H[289] = r6H[0][0][`physics`][`shapes`][r6H[331]];
                        r6H[266] = b7H[33][r6H[225]][`bodyID`];
                        r6H[760] = b7H[33][r6H[225]];
                        if (r6H[289][`type`] == `bx` || r6H[289][`type`] == `ci`) {
                            I8yy.P2k(23);
                            r6H[547] = I8yy.r2k(2, 9, 193, 54, 8);
                            r6H[760][`x`] = r6H[289][v8yy[r6H[547]]][0] * r6H[35];
                            I8yy.P2k(1);
                            r6H[336] = I8yy.r2k(1102, 1160);
                            I8yy.H2k(215);
                            r6H[174] = I8yy.r2k(192, 19, 10, 8, 5);
                            r6H[760][`y`] = r6H[289][v8yy[r6H[336]]][r6H[174]] * r6H[35];
                        } else {
                            r6H[760][`x`] = 0;
                            r6H[760][`y`] = 0;
                        }
                        r6H[758] = {
                            x: 2,
                            y: 2
                        };
                        r6H[444] = E4y({
                            x: 0,
                            y: 0
                        }, r6H[758], -r6H[0][0][`physics`][`bodies`][r6H[266]][`a`]);
                        r6H[760][`x`] += r6H[444][`x`];
                        r6H[760][`y`] += r6H[444][`y`];
                    }
                }
                for (r6H[674] = 0; r6H[674] < r6H[0][1][`physics`][`joints`][`length`]; r6H[674]++) {
                    if (r6H[0][1][`physics`][`joints`][r6H[674]] && r6H[0][1][`physics`][`joints`][r6H[674]][`type`] == `lpj` && (b7H[44] || r6H[0][1][`physics`][`joints`][r6H[674]][`d`][`dl`]) && !b7H[25][r6H[674]]) {
                        r6H[757] = r6H[0][1][`physics`][`joints`][r6H[674]];
                        b7H[25][r6H[674]] = new PIXI[`Graphics`]();
                        b7H[25][r6H[674]][`lineStyle`](1, 0xcccccc, 0.5);
                        if (b7H[30] == r6H[674]) {
                            b7H[25][r6H[674]][`lineStyle`](1, 0xf4a7a7, 0.9);
                        }
                        b7H[25][r6H[674]][`moveTo`](r6H[757][`plen`] * r6H[35], 0);
                        b7H[25][r6H[674]][`lineTo`](-r6H[757][`plen`] * r6H[35], 0);
                        b7H[25][r6H[674]][`rotation`] = r6H[757][`pa`];
                        I8yy.P2k(40);
                        r6H[957] = I8yy.r2k(20, 90, 8);
                        b7H[25][r6H[674]][`x`] = r6H[757][v8yy[r6H[957]]] * r6H[35];
                        I8yy.H2k(1);
                        r6H[315] = I8yy.A2k(158, 237);
                        b7H[25][r6H[674]][`y`] = r6H[757][v8yy[r6H[315]]] * r6H[35];
                        r6H[205] = b7H[37][`getChildIndex`](b7H[70][r6H[757][`ba`]]);
                        if (b7H[44]) {
                            r6H[205]++;
                        }
                        b7H[37][`addChildAt`](b7H[25][r6H[674]], r6H[205]);
                    }
                    if (r6H[0][0][`physics`][`joints`][r6H[674]] && r6H[0][1][`physics`][`joints`][r6H[674]] && r6H[0][1][`physics`][`joints`][r6H[674]][`type`] == `d` && (b7H[44] || r6H[0][0][`physics`][`joints`][r6H[674]][`d`][`dl`])) {
                        r6H[383] = r6H[0][0][`physics`][`joints`][r6H[674]];
                        r6H[992] = r6H[0][1][`physics`][`joints`][r6H[674]];
                        if (!b7H[25][r6H[674]]) {
                            b7H[25][r6H[674]] = new PIXI[`Graphics`]();
                            r6H[351] = b7H[37][`getChildIndex`](b7H[70][r6H[383][`ba`]]);
                            if (b7H[44]) {
                                r6H[351]++;
                            }
                            b7H[37][`addChildAt`](b7H[25][r6H[674]], r6H[351]);
                        } else {
                            b7H[25][r6H[674]][`clear`]();
                        }
                        r6H[345] = {
                            x: r6H[383][`aa`][0],
                            y: r6H[383][`aa`][1]
                        };
                        r6H[879] = E4y({
                            x: 0,
                            y: 0
                        }, r6H[345], r6H[0][0][`physics`][`bodies`][r6H[383][`ba`]][`a`]);
                        I8yy.P2k(9);
                        r6H[815] = I8yy.r2k(285, 9, 36);
                        I8yy.H2k(42);
                        r6H[995] = I8yy.A2k(29, 10, 4);
                        I8yy.P2k(0);
                        r6H[698] = I8yy.r2k(40, 8);
                        I8yy.P2k(120);
                        r6H[964] = I8yy.r2k(9, 8, 3, 62);
                        I8yy.P2k(21);
                        r6H[623] = I8yy.A2k(343, 42, 49);
                        r6H[287] = r6H[879][v8yy[r6H[815]]] + r6H[0][0][v8yy[r6H[995]]][v8yy[r6H[698]]][r6H[383][v8yy[r6H[964]]]][v8yy[r6H[623]]][0];
                        I8yy.H2k(1);
                        r6H[766] = I8yy.A2k(12, 52);
                        I8yy.P2k(172);
                        r6H[297] = I8yy.r2k(24, 16, 19, 2, 52);
                        I8yy.H2k(0);
                        r6H[267] = I8yy.A2k(28, 20);
                        I8yy.H2k(21);
                        r6H[495] = I8yy.A2k(95, 75, 95);
                        I8yy.H2k(117);
                        r6H[782] = I8yy.A2k(1, 178, 245, 18);
                        I8yy.H2k(1);
                        r6H[559] = I8yy.r2k(11, 12);
                        r6H[587] = r6H[879][v8yy[r6H[766]]] + r6H[0][0][v8yy[r6H[297]]][v8yy[r6H[267]]][r6H[383][v8yy[r6H[495]]]][v8yy[r6H[782]]][r6H[559]];
                        r6H[794] = {
                            x: r6H[992][`aa`][0],
                            y: r6H[992][`aa`][1]
                        };
                        r6H[684] = E4y({
                            x: 0,
                            y: 0
                        }, r6H[794], r6H[0][1][`physics`][`bodies`][r6H[992][`ba`]][`a`]);
                        I8yy.H2k(91);
                        r6H[785] = I8yy.A2k(16, 5, 9, 14145, 312);
                        I8yy.H2k(76);
                        r6H[109] = I8yy.r2k(301, 3, 275, 20);
                        I8yy.P2k(1);
                        r6H[979] = I8yy.A2k(4, 52);
                        I8yy.H2k(90);
                        r6H[910] = I8yy.A2k(75, 13, 4, 4, 5);
                        I8yy.P2k(26);
                        r6H[201] = I8yy.r2k(13, 14, 594, 45);
                        r6H[446] = r6H[684][v8yy[r6H[785]]] + r6H[0][1][v8yy[r6H[109]]][v8yy[r6H[979]]][r6H[992][v8yy[r6H[910]]]][v8yy[r6H[201]]][0];
                        I8yy.H2k(179);
                        r6H[218] = I8yy.r2k(57, 25, 152, 16, 9);
                        I8yy.P2k(32);
                        r6H[318] = I8yy.A2k(143, 172, 14);
                        I8yy.H2k(9);
                        r6H[841] = I8yy.r2k(324, 12, 31);
                        I8yy.P2k(1);
                        r6H[999] = I8yy.r2k(684, 760);
                        I8yy.H2k(0);
                        r6H[850] = I8yy.r2k(4, 45);
                        I8yy.H2k(9);
                        r6H[868] = I8yy.r2k(5, 2, 3);
                        r6H[578] = r6H[684][v8yy[r6H[218]]] + r6H[0][1][v8yy[r6H[318]]][v8yy[r6H[841]]][r6H[992][v8yy[r6H[999]]]][v8yy[r6H[850]]][r6H[868]];
                        r6H[800] = 0;
                        r6H[437] = 0;
                        r6H[890] = 0;
                        r6H[197] = 0;
                        if (r6H[992][`bb`] == -1) {
                            r6H[800] = r6H[992][`ab`][0];
                            r6H[437] = r6H[992][`ab`][1];
                            r6H[890] = r6H[992][`ab`][0];
                            r6H[197] = r6H[992][`ab`][1];
                        } else {
                            r6H[262] = {
                                x: r6H[383][`ab`][0],
                                y: r6H[383][`ab`][1]
                            };
                            r6H[232] = E4y({
                                x: 0,
                                y: 0
                            }, r6H[262], r6H[0][0][`physics`][`bodies`][r6H[383][`bb`]][`a`]);
                            I8yy.H2k(1);
                            r6H[163] = I8yy.r2k(18, 57);
                            I8yy.H2k(79);
                            r6H[473] = I8yy.r2k(11, 18, 14, 1);
                            I8yy.H2k(121);
                            r6H[390] = I8yy.A2k(528, 1, 480, 1);
                            I8yy.H2k(12);
                            r6H[534] = I8yy.r2k(8, 89, 4);
                            I8yy.P2k(0);
                            r6H[721] = I8yy.A2k(40, 9);
                            r6H[800] = r6H[232][v8yy[r6H[163]]] + r6H[0][0][v8yy[r6H[473]]][v8yy[r6H[390]]][r6H[383][v8yy[r6H[534]]]][v8yy[r6H[721]]][0];
                            I8yy.H2k(90);
                            r6H[591] = I8yy.A2k(39, 81, 53, 10, 18);
                            I8yy.H2k(0);
                            r6H[909] = I8yy.A2k(40, 3);
                            I8yy.H2k(21);
                            r6H[291] = I8yy.A2k(24, 47, 24);
                            I8yy.P2k(113);
                            r6H[540] = I8yy.A2k(2, 2, 10, 15);
                            I8yy.P2k(21);
                            r6H[120] = I8yy.A2k(41, 48, 41);
                            I8yy.H2k(242);
                            r6H[252] = I8yy.A2k(20, 7, 89, 5, 5);
                            r6H[437] = r6H[232][v8yy[r6H[591]]] + r6H[0][0][v8yy[r6H[909]]][v8yy[r6H[291]]][r6H[383][v8yy[r6H[540]]]][v8yy[r6H[120]]][r6H[252]];
                            r6H[260] = {
                                x: r6H[992][`ab`][0],
                                y: r6H[992][`ab`][1]
                            };
                            r6H[178] = E4y({
                                x: 0,
                                y: 0
                            }, r6H[260], r6H[0][1][`physics`][`bodies`][r6H[992][`bb`]][`a`]);
                            I8yy.H2k(32);
                            r6H[730] = I8yy.r2k(640, 663, 16);
                            I8yy.H2k(35);
                            r6H[915] = I8yy.r2k(4, 11, 8);
                            I8yy.P2k(80);
                            r6H[270] = I8yy.r2k(3, 51, 11, 17);
                            I8yy.P2k(243);
                            r6H[661] = I8yy.r2k(5, 1, 233, 17, 79);
                            I8yy.P2k(32);
                            r6H[424] = I8yy.r2k(6, 42, 13);
                            r6H[890] = r6H[178][v8yy[r6H[730]]] + r6H[0][1][v8yy[r6H[915]]][v8yy[r6H[270]]][r6H[992][v8yy[r6H[661]]]][v8yy[r6H[424]]][0];
                            I8yy.P2k(84);
                            r6H[433] = I8yy.r2k(15, 19, 46, 53, 437);
                            I8yy.H2k(32);
                            r6H[200] = I8yy.A2k(12, 41, 14);
                            I8yy.H2k(0);
                            r6H[860] = I8yy.A2k(8, 40);
                            I8yy.P2k(40);
                            r6H[792] = I8yy.A2k(14, 80, 11);
                            I8yy.H2k(31);
                            r6H[620] = I8yy.r2k(10, 36, 371, 6);
                            I8yy.H2k(66);
                            r6H[261] = I8yy.r2k(14, 11, 11, 20, 2405);
                            r6H[197] = r6H[178][v8yy[r6H[433]]] + r6H[0][1][v8yy[r6H[200]]][v8yy[r6H[860]]][r6H[992][v8yy[r6H[792]]]][v8yy[r6H[620]]][r6H[261]];
                        }
                        I8yy.H2k(159);
                        r6H[115] = I8yy.r2k(r6H[287], r6H[446], r6H[0][2], 1, r6H[0][2]);
                        I8yy.H2k(159);
                        r6H[786] = I8yy.r2k(r6H[587], r6H[578], r6H[0][2], 1, r6H[0][2]);
                        I8yy.P2k(159);
                        r6H[563] = I8yy.A2k(r6H[800], r6H[890], r6H[0][2], 1, r6H[0][2]);
                        I8yy.P2k(159);
                        r6H[717] = I8yy.A2k(r6H[437], r6H[197], r6H[0][2], 1, r6H[0][2]);
                        b7H[25][r6H[674]][`lineStyle`](1, 0xcccccc, 0.5);
                        if (b7H[30] == r6H[674]) {
                            b7H[25][r6H[674]][`lineStyle`](1, 0xf4a7a7, 0.9);
                        }
                        I8yy.H2k(5);
                        b7H[25][r6H[674]][`moveTo`](I8yy.A2k(r6H[115], r6H[35]), I8yy.r2k(r6H[786], r6H[35]));
                        I8yy.P2k(5);
                        b7H[25][r6H[674]][`lineTo`](I8yy.r2k(r6H[563], r6H[35]), I8yy.A2k(r6H[717], r6H[35]));
                        if (b7H[44]) {
                            b7H[25][r6H[674]][`lineStyle`](undefined);
                            b7H[25][r6H[674]][`beginFill`](0x44ff44);
                            I8yy.H2k(5);
                            b7H[25][r6H[674]][`drawCircle`](I8yy.r2k(r6H[115], r6H[35]), I8yy.A2k(r6H[786], r6H[35]), 3);
                            b7H[25][r6H[674]][`beginFill`](0xff4444);
                            I8yy.H2k(5);
                            b7H[25][r6H[674]][`drawCircle`](I8yy.A2k(r6H[563], r6H[35]), I8yy.A2k(r6H[717], r6H[35]), 3);
                        }
                    }
                }
                for (r6H[394] = 0; r6H[394] < r6H[0][1][`capZones`][`length`]; r6H[394]++) {
                    if (r6H[0][1][`capZones`][r6H[394]]) {
                        r6H[506] = r6H[0][1][`capZones`][r6H[394]][`i`];
                        r6H[895] = r6H[0][1][`physics`][`fixtures`][r6H[506]][`sh`];
                        r6H[849] = r6H[0][1][`physics`][`shapes`][r6H[895]];
                        r6H[119] = b7H[26][r6H[895]];
                        r6H[119][`alpha`] = 0.8;
                        if (!b7H[94][r6H[394]]) {
                            b7H[94][r6H[394]] = new PIXI[`Graphics`]();
                            r6H[119][`addChild`](b7H[94][r6H[394]]);
                        }
                        r6H[350] = b7H[94][r6H[394]];
                        r6H[360] = Math[`min`](r6H[0][1][`capZones`][r6H[394]][`p`] / r6H[0][1][`capZones`][r6H[394]][`l`], 1);
                        r6H[572] = r6H[0][1][`capZones`][r6H[394]][`o`];
                        r6H[278] = 0xccbbaa;
                        if (r6H[0][3][`tea`]) {
                            if (r6H[572] == 2) {
                                r6H[278] = 0xf44336;
                            }
                            if (r6H[572] == 3) {
                                r6H[278] = 0x2196f3;
                            }
                            if (r6H[572] == 4) {
                                r6H[278] = 0x4caf50;
                            }
                            if (r6H[572] == 5) {
                                r6H[278] = 0xffeb3b;
                            }
                        } else {
                            if (b7H[98][r6H[572]] && b7H[98][r6H[572]][`avatar`]) {
                                r6H[278] = b7H[98][r6H[572]][`avatar`][`bc`];
                            }
                        }
                        r6H[350][`clear`]();
                        r6H[350][`beginFill`](r6H[278]);
                        if (r6H[849][`type`] == `ci`) {
                            I8yy.H2k(167);
                            r6H[535] = I8yy.r2k(14, 10, 14, 23);
                            r6H[448] = (r6H[849][v8yy[r6H[535]]] * r6H[35] - 1.5) * r6H[360];
                            r6H[350][`drawCircle`](0, 0, r6H[448]);
                        }
                        if (r6H[849][`type`] == `bx`) {
                            I8yy.P2k(9);
                            r6H[961] = I8yy.r2k(431, 10, 49);
                            r6H[670] = (r6H[849][v8yy[r6H[961]]] * r6H[35] - 1.5) * r6H[360];
                            I8yy.P2k(32);
                            r6H[564] = I8yy.A2k(27, 79, 8);
                            r6H[852] = (r6H[849][v8yy[r6H[564]]] * r6H[35] - 1.5) * r6H[360];
                            I8yy.H2k(149);
                            r6H[350][`drawRect`](I8yy.A2k(r6H[670], 2), I8yy.r2k(r6H[852], 2), r6H[670], r6H[852]);
                        }
                        if (r6H[849][`type`] == `po`) {
                            r6H[402] = 0;
                            r6H[153] = 0;
                            for (r6H[712] = 0; r6H[712] < r6H[849][`v`][`length`]; r6H[712]++) {
                                r6H[402] += r6H[849][`v`][r6H[712]][0];
                                r6H[153] += r6H[849][`v`][r6H[712]][1];
                            }
                            r6H[402] /= r6H[849][`v`][`length`];
                            r6H[153] /= r6H[849][`v`][`length`];
                            if (r6H[849][`v`][`length`] > 0) {
                                I8yy.H2k(0);
                                r6H[210] = I8yy.r2k(0, 1);
                                I8yy.H2k(25);
                                r6H[773] = I8yy.r2k(69, 3457, 3, 17);
                                r6H[595] = (r6H[402] * (r6H[210] - r6H[360]) + r6H[849][v8yy[r6H[773]]][0][0] * r6H[360]) * r6H[35];
                                I8yy.P2k(98);
                                r6H[156] = I8yy.r2k(3, 2);
                                I8yy.H2k(12);
                                r6H[816] = I8yy.r2k(6, 620, 552);
                                I8yy.H2k(32);
                                r6H[924] = I8yy.A2k(13, 0, 14);
                                r6H[231] = (r6H[153] * (r6H[156] - r6H[360]) + r6H[849][v8yy[r6H[816]]][0][r6H[924]] * r6H[360]) * r6H[35];
                                r6H[350][`moveTo`](r6H[595], r6H[231]);
                                for (r6H[392] = 1; r6H[392] < r6H[849][`v`][`length`]; r6H[392]++) {
                                    I8yy.P2k(163);
                                    r6H[468] = I8yy.A2k(20, 6, 20, 14, 305);
                                    I8yy.P2k(137);
                                    r6H[631] = I8yy.r2k(2, 11, 46, 4, 466);
                                    r6H[595] = (r6H[402] * (r6H[468] - r6H[360]) + r6H[849][v8yy[r6H[631]]][r6H[392]][0] * r6H[360]) * r6H[35];
                                    I8yy.H2k(98);
                                    r6H[846] = I8yy.r2k(6, 5);
                                    I8yy.H2k(76);
                                    r6H[430] = I8yy.r2k(1116, 14, 1056, 16);
                                    I8yy.P2k(38);
                                    r6H[874] = I8yy.r2k(4, 17, 4, 17, 1);
                                    r6H[231] = (r6H[153] * (r6H[846] - r6H[360]) + r6H[849][v8yy[r6H[430]]][r6H[392]][r6H[874]] * r6H[360]) * r6H[35];
                                    r6H[350][`lineTo`](r6H[595], r6H[231]);
                                }
                                r6H[350][`closePath`]();
                            }
                        }
                        if (r6H[360] >= 1) {
                            r6H[119][`tint`] = 0x99ff99;
                        }
                    }
                }
                if (v2k[79][`customControls`][`quality`] <= 2 && b7H[68] == false && b7H[27] == false && b7H[44] == false && b7H[97] == false) {
                    r6H[481] = null;
                    r6H[933] = null;
                    r6H[195] = 0;
                    r6H[239] = -1;
                    r6H[806] = 2;
                    for (r6H[395] = r6H[0][1][`physics`][`bro`][`length`] - 1; r6H[395] >= 0; r6H[395]--) {
                        r6H[184] = r6H[0][1][`physics`][`bro`][r6H[395]];
                        if (r6H[0][1][`physics`][`bodies`][r6H[184]]) {
                            if (U4S(r6H[184])) {
                                if (!r6H[933]) {
                                    r6H[933] = new PIXI[`Container`]();
                                    r6H[195]++;
                                    r6H[481] = PIXI[`RenderTexture`][`create`]({
                                        width: 730 + 50,
                                        height: 500 + 50,
                                        scaleMode: PIXI[`SCALE_MODES`][`LINEAR`],
                                        resolution: 4
                                    });
                                }
                                if (r6H[239] == -1) {
                                    r6H[239] = b7H[37][`getChildIndex`](b7H[70][r6H[184]]);
                                }
                                b7H[37][`removeChild`](b7H[70][r6H[184]]);
                                r6H[933][`addChild`](b7H[70][r6H[184]]);
                            } else {
                                if (r6H[933]) {
                                    F4S();
                                    if (b7H[52][`length`] >= r6H[806]) {
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    if (r6H[933]) {
                        F4S();
                    }
                    b7H[68] = true;
                    function F4S() {
                        var P6H = [arguments];
                                                r6H[933][`x`] = 25;
                        r6H[933][`y`] = 25;
                        b7H[77][`render`](r6H[933], r6H[481]);
                        P6H[1] = new PIXI[`Sprite`](r6H[481]);
                        P6H[1][`x`] = -25;
                        P6H[1][`y`] = -25;
                        b7H[52][`push`](P6H[1]);
                        b7H[37][`addChildAt`](b7H[52][b7H[52][`length`] - 1], r6H[239]);
                        P6H[8] = 1084013797;
                        P6H[2] = 539520515;
                        P6H[4] = 2;
                        for (P6H[6] = 1; I8yy.m1f(P6H[6].toString(), P6H[6].toString().length, 74555) !== P6H[8]; P6H[6]++) {
                            r6H[933] = 1;
                            P6H[4] += 2;
                        }
                        if (I8yy.d1f(P6H[4].toString(), P6H[4].toString().length, 94110) !== P6H[2]) {
                            r6H[933] = 4;
                        }
                        r6H[933] = null;
                        r6H[239] = -1;
                    }
                    function U4S(E37) {
                        var H6H = [arguments];
                                                H6H[7] = r6H[0][1][`physics`][`bodies`][H6H[0][0]];
                        if (H6H[7][`type`] != `s`) {
                            return false;
                        }
                        I8yy.w9b();
                        for (H6H[2] = 0; H6H[2] < H6H[7][`fx`][`length`]; H6H[2]++) {
                            H6H[3] = H6H[7][`fx`][H6H[2]];
                            H6H[4] = r6H[0][1][`physics`][`fixtures`][H6H[3]][`sh`];
                            H6H[5] = r6H[0][1][`physics`][`shapes`][H6H[4]];
                            if (H6H[5][`sk`] == true) {
                                return false;
                            }
                            if (r6H[835][H6H[3]]) {
                                return false;
                            }
                        }
                        return true;
                    }
                }
                for (r6H[533] = 0; r6H[533] < b7H[47][`length`]; r6H[533]++) {
                    if (--b7H[47][r6H[533]] < 0) {
                        b7H[47][r6H[533]] = 0;
                    }
                }
                for (r6H[941] = 0; r6H[941] < r6H[0][1][`discDeaths`][`length`]; r6H[941]++) {
                    r6H[842] = r6H[0][1][`discDeaths`][r6H[941]][`i`];
                    if (r6H[0][1][`discDeaths`][r6H[941]][`f`] < 10 && !b7H[47][r6H[842]]) {
                        b7H[47][r6H[842]] = 90;
                        I8yy.H2k(85);
                        r6H[711] = I8yy.A2k(56, 48, 34, 7);
                        I8yy.P2k(9);
                        r6H[340] = I8yy.r2k(3346, 18, 196);
                        I8yy.P2k(1);
                        r6H[295] = I8yy.r2k(11, 191);
                        r6H[561] = r6H[711] * (Math[v8yy[r6H[340]]] / r6H[295]);
                        r6H[483] = 0.9;
                        r6H[648] = 0.8;
                        r6H[634] = 3;
                        r6H[372] = 2;
                        r6H[681] = 18;
                        if (v2k[79][`quality`] == 2) {
                            r6H[681] = 15;
                        } else if (v2k[79][`quality`] == 1) {
                            r6H[681] = 12;
                        }
                        r6H[285] = 1;
                        r6H[457] = [];
                        if (b7H[98][r6H[842]] && b7H[98][r6H[842]][`avatar`]) {
                            r6H[207] = b7H[98][r6H[842]][`avatar`];
                            r6H[457][`push`](r6H[207][`bc`]);
                            r6H[457][`push`](r6H[207][`bc`]);
                            for (r6H[361] = 0; r6H[361] < r6H[207][`layers`][`length`]; r6H[361]++) {
                                if (r6H[207][`layers`][r6H[361]]) {
                                    r6H[457][`push`](r6H[207][`layers`][r6H[361]][`color`]);
                                }
                            }
                        }
                        for (r6H[500] = 0; r6H[500] < r6H[681]; r6H[500]++) {
                            r6H[441] = new PIXI[`Graphics`]();
                            if (r6H[457][r6H[500] % r6H[457][`length`]] !== undefined) {
                                r6H[441][`beginFill`](r6H[457][r6H[500] % r6H[457][`length`]]);
                            } else {
                                r6H[441][`beginFill`](0xf0ffa9);
                            }
                            r6H[194] = r6H[372] + Math[`random`]() * r6H[634];
                            I8yy.P2k(102);
                            r6H[310] = I8yy.A2k(5, 4, 22);
                            I8yy.P2k(68);
                            r6H[135] = I8yy.r2k(167, 11, 13, 29067, 16);
                            r6H[632] = Math[`random`]() * r6H[310] * Math[v8yy[r6H[135]]];
                            r6H[541] = Math[`random`]() * r6H[285];
                            r6H[441][`drawRect`](0, 0, r6H[194], r6H[194]);
                            I8yy.P2k(0);
                            r6H[882] = I8yy.A2k(4, 38);
                            I8yy.H2k(56);
                            r6H[531] = I8yy.r2k(16, 58, 18, 21);
                            r6H[441][`x`] = (r6H[0][1][v8yy[r6H[882]]][r6H[941]][v8yy[r6H[531]]] + Math[`cos`](r6H[632]) * r6H[541]) * r6H[35];
                            I8yy.P2k(0);
                            r6H[477] = I8yy.A2k(23, 19);
                            I8yy.H2k(25);
                            r6H[624] = I8yy.A2k(3, 44, 14, 2);
                            r6H[441][`y`] = (r6H[0][1][v8yy[r6H[477]]][r6H[941]][v8yy[r6H[624]]] + Math[`sin`](r6H[632]) * r6H[541]) * r6H[35];
                            b7H[13][`addChild`](r6H[441]);
                            I8yy.H2k(1);
                            r6H[583] = I8yy.r2k(5, 7);
                            r6H[763] = -r6H[561] / r6H[583] + Math[`random`]() * r6H[561];
                            r6H[741] = Math[`atan2`](r6H[0][1][`discDeaths`][r6H[941]][`yv`], r6H[0][1][`discDeaths`][r6H[941]][`xv`]);
                            I8yy.P2k(0);
                            r6H[744] = I8yy.A2k(r6H[741], r6H[763]);
                            r6H[532] = Math[`sqrt`](r6H[0][1][`discDeaths`][r6H[941]][`yv`] * r6H[0][1][`discDeaths`][r6H[941]][`yv`] + r6H[0][1][`discDeaths`][r6H[941]][`xv`] * r6H[0][1][`discDeaths`][r6H[941]][`xv`]);
                            r6H[532] *= r6H[648];
                            r6H[532] = Math[`min`](r6H[532], 35);
                            r6H[292] = Math[`random`]() * r6H[483] * r6H[532];
                            r6H[532] -= r6H[292];
                            I8yy.H2k(1);
                            r6H[346] = I8yy.A2k(10, 14);
                            r6H[693] = Math[`cos`](r6H[744]) * r6H[532] / r6H[346];
                            I8yy.H2k(9);
                            r6H[273] = I8yy.A2k(41, 3, 15);
                            r6H[627] = Math[`sin`](r6H[744]) * r6H[532] / r6H[273];
                            r6H[172] = 1;
                            b7H[59][`push`]({
                                graphics: r6H[441],
                                xv: r6H[693],
                                yv: r6H[627],
                                alpha: r6H[172],
                                shrinkPerFrame: 0.016,
                                gravity: 0.04
                            });
                        }
                        I8yy.H2k(145);
                        r6H[582] = I8yy.A2k(13, 14, 11, 1784, 274935);
                        I8yy.P2k(17);
                        r6H[685] = I8yy.A2k(19, 30, 8, 0);
                        r6H[529] = v8yy[r6H[582]] + Math[`floor`](Math[`random`]() * r6H[685]);
                        I8yy.P2k(244);
                        r6H[788] = I8yy.r2k(294, 11, 2, 9, 14511);
                        I8yy.H2k(32);
                        r6H[429] = I8yy.A2k(644, 663, 20);
                        I8yy.P2k(18);
                        r6H[485] = I8yy.A2k(1, 1, 1, 722, 7);
                        I8yy.P2k(40);
                        r6H[931] = I8yy.A2k(5, 6, 1);
                        I8yy.P2k(172);
                        r6H[813] = I8yy.A2k(22, 20, 5, 4, 0);
                        r6H[875] = r6H[0][1][v8yy[r6H[788]]][r6H[941]][v8yy[r6H[429]]] * r6H[35] / (r6H[485] / r6H[931]) - r6H[813];
                        r6H[875] = Math[`max`](Math[`min`](1, r6H[875]), -1);
                        r6H[875] *= U[`panAmount`];
                        r6H[169] = 0.4;
                        if (b7H[54]) {
                            r6H[169] *= 0.5;
                        }
                        b7H[2][`playSound`](r6H[529], r6H[875], r6H[169], r6H[0][5]);
                    }
                }
                if (r6H[0][3][`mo`] == `v`) {
                    for (r6H[206] = 0; r6H[206] < r6H[0][1][`discs`][`length`]; r6H[206]++) {
                        if (r6H[0][0][`discs`][r6H[206]] && r6H[0][1][`discs`][r6H[206]] && b7H[76][r6H[206]] && r6H[0][4] && r6H[0][4][r6H[206]]) {
                            I8yy.P2k(20);
                            r6H[554] = I8yy.A2k(10, 13, 6870, 3, 566);
                            r6H[977] = 2.5 * b7H[76][r6H[206]][v8yy[r6H[554]]];
                            r6H[907] = 2;
                            r6H[450] = 0.7;
                            r6H[241] = 1;
                            r6H[847] = 0.1;
                            r6H[888] = 0.3;
                            if (r6H[0][4][r6H[206]][`right`] || r6H[0][4][r6H[206]][`up`] && !r6H[0][4][r6H[206]][`left`]) {
                                r6H[157] = new PIXI[`Graphics`]();
                                r6H[157][`beginFill`](0xf0ffa9);
                                I8yy.H2k(149);
                                r6H[157][`drawRect`](I8yy.A2k(r6H[977], 2), I8yy.r2k(r6H[977], 2), r6H[977], r6H[977]);
                                r6H[283] = b7H[76][r6H[206]][`container`][`x`];
                                I8yy.H2k(224);
                                r6H[978] = I8yy.A2k(12, 9, 21, 3, 293);
                                I8yy.H2k(0);
                                r6H[427] = I8yy.A2k(566, 13);
                                I8yy.P2k(1);
                                r6H[493] = I8yy.A2k(5430, 5973);
                                I8yy.H2k(36);
                                r6H[567] = I8yy.A2k(6604, 4, 1143);
                                r6H[283] += E[v8yy[r6H[978]]] * 1.2 * b7H[76][r6H[206]][v8yy[r6H[427]]] * Math[`cos`](b7H[76][r6H[206]][v8yy[r6H[493]]][v8yy[r6H[567]]]) * r6H[35];
                                r6H[897] = b7H[76][r6H[206]][`container`][`y`];
                                I8yy.P2k(245);
                                r6H[555] = I8yy.A2k(63, 3, 8, 21, 14);
                                I8yy.H2k(56);
                                r6H[795] = I8yy.A2k(2, 572, 18, 9);
                                I8yy.P2k(112);
                                r6H[343] = I8yy.r2k(6, 10, 387, 36);
                                I8yy.P2k(12);
                                r6H[235] = I8yy.r2k(20, 5080, 4552);
                                r6H[897] += E[v8yy[r6H[555]]] * 1.2 * b7H[76][r6H[206]][v8yy[r6H[795]]] * Math[`sin`](b7H[76][r6H[206]][v8yy[r6H[343]]][v8yy[r6H[235]]]) * r6H[35];
                                r6H[157][`x`] = r6H[283];
                                r6H[157][`y`] = r6H[897];
                                b7H[13][`addChild`](r6H[157]);
                                I8yy.H2k(98);
                                r6H[891] = I8yy.r2k(11, 9);
                                r6H[876] = Math[`random`]() * r6H[888] - r6H[888] / r6H[891];
                                I8yy.H2k(12);
                                r6H[988] = I8yy.r2k(7, 48, 0);
                                I8yy.P2k(167);
                                r6H[783] = I8yy.A2k(5, 8, 13, 38);
                                I8yy.H2k(0);
                                r6H[299] = I8yy.A2k(167, 15);
                                I8yy.H2k(246);
                                r6H[466] = I8yy.A2k(5, 6, 5, 14, 19);
                                I8yy.H2k(133);
                                r6H[288] = I8yy.r2k(7, 9, 1);
                                r6H[222] = Math[`cos`](r6H[0][1][v8yy[r6H[988]]][r6H[206]][v8yy[r6H[783]]] + r6H[876] + Math[v8yy[r6H[299]]] / r6H[466]) * (r6H[907] + Math[`random`]() * r6H[450] - r6H[450] / r6H[288]);
                                I8yy.H2k(160);
                                r6H[618] = I8yy.A2k(14, 56, 7, 18, 4);
                                I8yy.H2k(16);
                                r6H[963] = I8yy.A2k(6, 2, 42, 18);
                                I8yy.P2k(21);
                                r6H[279] = I8yy.A2k(189, 119, 3);
                                I8yy.P2k(102);
                                r6H[823] = I8yy.A2k(17, 2, 36);
                                I8yy.P2k(32);
                                r6H[768] = I8yy.r2k(34, 34, 2);
                                r6H[938] = Math[`sin`](r6H[0][1][v8yy[r6H[618]]][r6H[206]][v8yy[r6H[963]]] + r6H[876] + Math[v8yy[r6H[279]]] / r6H[823]) * (r6H[907] + Math[`random`]() * r6H[450] - r6H[450] / r6H[768]);
                                I8yy.H2k(31);
                                r6H[217] = I8yy.A2k(7, 55, 372, 4);
                                I8yy.P2k(17);
                                r6H[189] = I8yy.r2k(6, 39, 11, 8);
                                r6H[222] += r6H[0][1][v8yy[r6H[217]]][r6H[206]][`xv`] / r6H[189];
                                I8yy.P2k(22);
                                r6H[167] = I8yy.r2k(28, 5, 4, 61);
                                I8yy.H2k(122);
                                r6H[543] = I8yy.r2k(65, 90, 13, 103, 3);
                                I8yy.H2k(224);
                                r6H[902] = I8yy.A2k(4, 14, 33, 20, 508);
                                r6H[938] += r6H[0][1][v8yy[r6H[167]]][r6H[206]][v8yy[r6H[543]]] / r6H[902];
                                r6H[123] = 1;
                                b7H[59][`push`]({
                                    graphics: r6H[157],
                                    xv: r6H[222],
                                    yv: r6H[938],
                                    alpha: r6H[123],
                                    shrinkPerFrame: r6H[847],
                                    gravity: 0.04
                                });
                                ;
                            }
                            if (r6H[0][4][r6H[206]][`left`] || r6H[0][4][r6H[206]][`up`] && !r6H[0][4][r6H[206]][`right`]) {
                                r6H[255] = new PIXI[`Graphics`]();
                                r6H[255][`beginFill`](0xf0ffa9);
                                I8yy.H2k(149);
                                r6H[255][`drawRect`](I8yy.r2k(r6H[977], 2), I8yy.r2k(r6H[977], 2), r6H[977], r6H[977]);
                                r6H[889] = b7H[76][r6H[206]][`container`][`x`];
                                I8yy.P2k(98);
                                r6H[886] = I8yy.r2k(11, 4);
                                I8yy.H2k(119);
                                r6H[425] = I8yy.r2k(5, 10, 1737, 1173);
                                I8yy.P2k(1);
                                r6H[161] = I8yy.r2k(9231, 9774);
                                I8yy.H2k(1);
                                r6H[626] = I8yy.A2k(16, 524);
                                r6H[889] -= E[v8yy[r6H[886]]] * 1.2 * b7H[76][r6H[206]][v8yy[r6H[425]]] * Math[`cos`](b7H[76][r6H[206]][v8yy[r6H[161]]][v8yy[r6H[626]]]) * r6H[35];
                                r6H[991] = b7H[76][r6H[206]][`container`][`y`];
                                I8yy.H2k(1);
                                r6H[249] = I8yy.r2k(13, 20);
                                I8yy.P2k(9);
                                r6H[503] = I8yy.A2k(10641, 20, 561);
                                I8yy.H2k(9);
                                r6H[352] = I8yy.A2k(29322, 11, 2715);
                                I8yy.P2k(212);
                                r6H[652] = I8yy.r2k(9, 494, 39, 17, 10);
                                r6H[991] -= E[v8yy[r6H[249]]] * 1.2 * b7H[76][r6H[206]][v8yy[r6H[503]]] * Math[`sin`](b7H[76][r6H[206]][v8yy[r6H[352]]][v8yy[r6H[652]]]) * r6H[35];
                                r6H[255][`x`] = r6H[889];
                                r6H[255][`y`] = r6H[991];
                                b7H[13][`addChild`](r6H[255]);
                                I8yy.H2k(31);
                                r6H[475] = I8yy.r2k(2, 15, 34, 3);
                                r6H[166] = Math[`random`]() * r6H[888] - r6H[888] / r6H[475];
                                I8yy.H2k(1);
                                r6H[953] = I8yy.r2k(451, 492);
                                I8yy.H2k(79);
                                r6H[452] = I8yy.A2k(4, 8, 55, 4);
                                I8yy.H2k(12);
                                r6H[145] = I8yy.A2k(4, 910, 724);
                                I8yy.H2k(85);
                                r6H[990] = I8yy.r2k(9, 1, 1, 9);
                                I8yy.H2k(12);
                                r6H[970] = I8yy.A2k(8, 20, 10);
                                r6H[546] = Math[`cos`](r6H[0][1][v8yy[r6H[953]]][r6H[206]][v8yy[r6H[452]]] + r6H[166] + Math[v8yy[r6H[145]]] / r6H[990]) * (r6H[907] + Math[`random`]() * r6H[450] - r6H[450] / r6H[970]);
                                I8yy.H2k(80);
                                r6H[152] = I8yy.r2k(21, 22, 16, 18);
                                I8yy.H2k(76);
                                r6H[203] = I8yy.r2k(79, 10, 9, 4);
                                I8yy.H2k(32);
                                r6H[952] = I8yy.r2k(1838, 2002, 18);
                                I8yy.P2k(247);
                                r6H[921] = I8yy.A2k(9, 19, 18, 9, 1289);
                                I8yy.H2k(1);
                                r6H[542] = I8yy.r2k(38, 40);
                                r6H[677] = Math[`sin`](r6H[0][1][v8yy[r6H[152]]][r6H[206]][v8yy[r6H[203]]] + r6H[166] + Math[v8yy[r6H[952]]] / r6H[921]) * (r6H[907] + Math[`random`]() * r6H[450] - r6H[450] / r6H[542]);
                                I8yy.P2k(21);
                                r6H[767] = I8yy.r2k(3, 40, 3);
                                I8yy.P2k(1);
                                r6H[687] = I8yy.A2k(648, 756);
                                I8yy.H2k(40);
                                r6H[386] = I8yy.r2k(18, 27, 21);
                                r6H[546] += r6H[0][1][v8yy[r6H[767]]][r6H[206]][v8yy[r6H[687]]] / r6H[386];
                                I8yy.H2k(60);
                                r6H[568] = I8yy.r2k(9, 37, 2, 26);
                                I8yy.P2k(244);
                                r6H[853] = I8yy.r2k(327, 4, 3, 12, 5123);
                                I8yy.P2k(9);
                                r6H[811] = I8yy.A2k(476, 11, 46);
                                r6H[677] += r6H[0][1][v8yy[r6H[568]]][r6H[206]][v8yy[r6H[853]]] / r6H[811];
                                r6H[932] = 1;
                                b7H[59][`push`]({
                                    graphics: r6H[255],
                                    xv: r6H[546],
                                    yv: r6H[677],
                                    alpha: r6H[932],
                                    shrinkPerFrame: r6H[847],
                                    gravity: 0.04
                                });
                                ;
                            }
                        }
                    }
                }
                if (r6H[0][1][`sts`]) {
                    for (r6H[749] = 0; r6H[749] < r6H[0][1][`sts`][`length`]; r6H[749]++) {
                        r6H[338] = r6H[0][1][`sts`][r6H[749]];
                        if (r6H[338][0] == `platBounce`) {
                            r6H[460] = r6H[338][1];
                            r6H[908] = 120;
                            r6H[460] /= 5;
                            r6H[460] = Math[`min`](45, r6H[460]);
                            if (!r6H[0][1][`physics`][`fixtures`][r6H[338][3]]) {
                                continue;
                            }
                            r6H[354] = r6H[0][1][`physics`][`fixtures`][r6H[338][3]][`f`];
                            r6H[268] = 4;
                            if (v2k[79][`customControls`][`quality`] == 2) {
                                r6H[268] = 2;
                            } else if (v2k[79][`customControls`][`quality`] == 1) {
                                r6H[268] = 1;
                            }
                            for (r6H[649] = 0; r6H[649] < r6H[268]; r6H[649]++) {
                                r6H[320] = new PIXI[`Graphics`]();
                                I8yy.P2k(64);
                                r6H[747] = I8yy.A2k(2, 0.10, r6H[460]);
                                r6H[320][`beginFill`](r6H[354]);
                                I8yy.H2k(149);
                                r6H[320][`drawRect`](I8yy.A2k(r6H[747], 2), I8yy.A2k(r6H[747], 2), r6H[747], r6H[747]);
                                r6H[393] = r6H[338][2];
                                if (!b7H[76][r6H[393]])
                                    continue;
                                I8yy.H2k(60);
                                r6H[930] = I8yy.A2k(4, 6, 1, 3);
                                I8yy.P2k(1);
                                r6H[212] = I8yy.A2k(731, 774);
                                I8yy.H2k(21);
                                r6H[805] = I8yy.r2k(63, 39, 9);
                                r6H[997] = r6H[338][r6H[930]] * r6H[0][1][v8yy[r6H[212]]][v8yy[r6H[805]]];
                                I8yy.P2k(0);
                                r6H[808] = I8yy.r2k(0, 6);
                                I8yy.H2k(23);
                                r6H[326] = I8yy.A2k(6, 20, 71, 30, 14);
                                I8yy.H2k(32);
                                r6H[989] = I8yy.A2k(293, 322, 17);
                                r6H[727] = r6H[338][r6H[808]] * r6H[0][1][v8yy[r6H[326]]][v8yy[r6H[989]]];
                                r6H[320][`x`] = r6H[997];
                                r6H[320][`y`] = r6H[727];
                                b7H[13][`addChild`](r6H[320]);
                                r6H[598] = r6H[338][4];
                                I8yy.P2k(1);
                                r6H[885] = I8yy.r2k(2, 184);
                                I8yy.P2k(138);
                                r6H[856] = I8yy.r2k(12, 13, 2520, 5, 12467);
                                r6H[497] = r6H[908] * (Math[v8yy[r6H[885]]] / r6H[856]);
                                r6H[598] += Math[`random`]() * r6H[497];
                                I8yy.H2k(2);
                                r6H[598] -= I8yy.A2k(r6H[497], 2);
                                r6H[320][`rotation`] = r6H[598];
                                I8yy.H2k(8);
                                r6H[635] = I8yy.A2k(2, 7, 6, 15, 2);
                                r6H[258] = (0.4 + r6H[460] * 0.005) * (r6H[635] - Math[`random`]() * 0.7);
                                r6H[377] = Math[`cos`](r6H[598]) * r6H[258];
                                r6H[824] = Math[`sin`](r6H[598]) * r6H[258];
                                r6H[521] = 0.03;
                                r6H[284] = 1;
                                b7H[59][`push`]({
                                    graphics: r6H[320],
                                    xv: r6H[377],
                                    yv: r6H[824],
                                    alpha: r6H[284],
                                    shrinkPerFrame: r6H[521],
                                    gravity: 0.02
                                });
                            }
                        }
                    }
                }
                r6H[745] = Date[`now`]() - b7H[69];
                r6H[539] = 1.0;
                if (b7H[69] == -1) {
                    I8yy.H2k(2);
                    r6H[745] = I8yy.r2k(1, 60);
                }
                b7H[69] = Date[`now`]();
                I8yy.P2k(3);
                r6H[539] = I8yy.A2k(1000, 60, r6H[745]);
                for (r6H[610] = 0; r6H[610] < b7H[59][`length`]; r6H[610]++) {
                    r6H[110] = b7H[59][r6H[610]];
                    if (r6H[110][`graphics`][`scale`][`x`] <= 0) {
                        b7H[13][`removeChild`](r6H[110][`graphics`]);
                        r6H[110][`graphics`][`destroy`]({
                            children: true,
                            texture: true,
                            baseTexture: true
                        });
                        b7H[59][`splice`](r6H[610], 1);
                        r6H[610]--;
                        continue;
                    }
                    I8yy.H2k(26);
                    r6H[828] = I8yy.A2k(5, 10, 1027, 113);
                    I8yy.H2k(160);
                    r6H[179] = I8yy.A2k(18, 9, 2, 10, 13);
                    r6H[110][`graphics`][`x`] += r6H[110][v8yy[r6H[828]]] * r6H[179] * r6H[539];
                    I8yy.H2k(85);
                    r6H[901] = I8yy.A2k(10, 118, 50, 5);
                    I8yy.H2k(9);
                    r6H[613] = I8yy.A2k(118, 8, 15);
                    r6H[110][`graphics`][`y`] += r6H[110][v8yy[r6H[901]]] * r6H[613] * r6H[539];
                    I8yy.P2k(110);
                    r6H[926] = I8yy.A2k(617, 16, 593, 609);
                    r6H[110][`yv`] += r6H[110][v8yy[r6H[926]]] * r6H[539];
                    I8yy.P2k(4);
                    r6H[110][`xv`] *= I8yy.r2k(1, 0.02, r6H[539]);
                    I8yy.P2k(4);
                    r6H[110][`yv`] *= I8yy.A2k(1, 0.01, r6H[539]);
                    r6H[110][`graphics`][`rotation`] = Math[`atan2`](r6H[110][`yv`], r6H[110][`xv`]);
                    r6H[110][`graphics`][`alpha`] = r6H[110][`alpha`];
                    I8yy.P2k(21);
                    r6H[196] = I8yy.r2k(34, 602, 2);
                    r6H[110][`graphics`][`scale`][`x`] -= r6H[110][v8yy[r6H[196]]] * r6H[539];
                    I8yy.P2k(0);
                    r6H[523] = I8yy.r2k(601, 18);
                    r6H[110][`graphics`][`scale`][`y`] -= r6H[110][v8yy[r6H[523]]] * r6H[539];
                }
                if (b7H[27] == false && b7H[44] == false && b7H[97] == false && b7H[54] == false) {
                    b7H[148][`do`](r6H[0][1][`ftu`], r6H[0][1][`lscr`] == -1);
                }
                r6H[821] = 0;
                r6H[558] = 0;
                if (r6H[0][1][`sts`]) {
                    for (r6H[619] = 0; r6H[619] < r6H[0][1][`sts`][`length`]; r6H[619]++) {
                        r6H[309] = r6H[0][1][`sts`][r6H[619]];
                        r6H[302] = 0.0;
                        r6H[170] = 0.0;
                        if (r6H[309][0] == `capIncrease` || r6H[309][0] == `capDecrease` || r6H[309][0] == `capComplete`) {
                            r6H[799] = r6H[309][2];
                            r6H[438] = r6H[0][1][`capZones`][r6H[799]][`i`];
                            r6H[967] = r6H[0][1][`physics`][`fixtures`][r6H[438]][`sh`];
                            r6H[765] = b7H[26][r6H[967]];
                            I8yy.P2k(31);
                            r6H[513] = I8yy.A2k(20, 26, 641, 8);
                            I8yy.H2k(1);
                            r6H[748] = I8yy.r2k(4, 617);
                            I8yy.P2k(9);
                            r6H[936] = I8yy.A2k(12, 17, 3);
                            r6H[673] = r6H[765][v8yy[r6H[513]]] + r6H[765][v8yy[r6H[748]]][v8yy[r6H[936]]];
                            I8yy.H2k(248);
                            r6H[302] = I8yy.A2k(r6H[673], 730, 2, 1);
                            r6H[170] = r6H[309][1];
                        }
                        if (r6H[309][0] == `discDisc` || r6H[309][0] == `platBounce`) {
                            r6H[769] = r6H[309][2];
                            if (!b7H[76][r6H[769]])
                                continue;
                            r6H[173] = b7H[76][r6H[769]][`container`][`x`];
                            I8yy.H2k(248);
                            r6H[302] = I8yy.A2k(r6H[173], 730, 2, 1);
                            I8yy.P2k(114);
                            r6H[224] = I8yy.A2k(19, 1, 16, 152);
                            r6H[170] = r6H[309][r6H[224]] * 0.03;
                        }
                        r6H[302] = Math[`max`](Math[`min`](1.0, r6H[302]), -1);
                        r6H[302] *= U[`panAmount`];
                        r6H[170] = Math[`min`](r6H[170], 35);
                        if (b7H[54]) {
                            r6H[170] = Math[`min`](r6H[170], 10);
                            r6H[170] *= 0.5;
                        }
                        r6H[751] = r6H[309][0];
                        if (r6H[751] == `capDecrease`) {
                            if (b7H[178][r6H[558]]) {
                                b7H[178][r6H[558]][`volume`](r6H[170]);
                                b7H[178][r6H[558]][`stereo`](r6H[302]);
                                if (!v2k[79][`mute`]) {
                                    b7H[178][r6H[558]][`play`]();
                                }
                                r6H[558]++;
                            }
                        } else if (r6H[751] == `capIncrease`) {
                            if (b7H[144][r6H[821]]) {
                                b7H[144][r6H[821]][`volume`](r6H[170]);
                                b7H[144][r6H[821]][`stereo`](r6H[302]);
                                if (!v2k[79][`mute`]) {
                                    b7H[144][r6H[821]][`play`]();
                                }
                                r6H[821]++;
                            }
                        } else {
                            b7H[2][`playSound`](r6H[751], r6H[302], r6H[170], r6H[0][5]);
                        }
                    }
                }
                r6H[0][1][`sts`] = null;
                if (b7H[40] && b7H[76][0]) {
                    I8yy.P2k(1);
                    r6H[676] = I8yy.A2k(10317, 10860);
                    I8yy.P2k(35);
                    r6H[375] = I8yy.r2k(2, 11, 14);
                    I8yy.H2k(66);
                    r6H[132] = I8yy.A2k(5, 5, 718, 16, 56705);
                    I8yy.H2k(32);
                    r6H[780] = I8yy.r2k(4399, 5110, 19);
                    I8yy.P2k(41);
                    r6H[870] = I8yy.r2k(18, 8, 1, 356, 50899);
                    r6H[637] = Math[`floor`](b7H[76][0][v8yy[r6H[676]]][v8yy[r6H[375]]] / r6H[132]) * r6H[780] + r6H[870];
                    r6H[993] = 0;
                    r6H[637] = Math[`min`](r6H[637], 1095);
                    if (b7H[11] == undefined) {
                        b7H[11] = r6H[637];
                        b7H[39] = r6H[993];
                    } else {
                        I8yy.H2k(12);
                        r6H[101] = I8yy.r2k(10, 6496, 6022);
                        r6H[290] = U[v8yy[r6H[101]]] * r6H[539];
                        I8yy.P2k(249);
                        b7H[11] = I8yy.A2k(r6H[290], 1.0, r6H[637], b7H[11], r6H[290]);
                        I8yy.P2k(249);
                        b7H[39] = I8yy.r2k(r6H[290], 1.0, r6H[993], b7H[39], r6H[290]);
                    }
                    I8yy.P2k(36);
                    b7H[38][`x`] = I8yy.r2k(730, 2, b7H[11]);
                    ;
                }
                b7H[77][`render`](b7H[73]);
                b7H[77][`_lastObjectRendered`] = null;
                b7H[77][`view`][`style`][`visibility`] = `inherit`;
                b7H[2][`resetSumVols`]();
                if (b7H[27]) {
                    r6H[240] = b7H[77][`extract`][`image`]();
                    return r6H[240];
                }
            }
            ;
            ;
        }
        v2k[79][`guest`] = true;
        v2k[79][`userName`] = `222`;
        v2k[79][`xp`] = 0;
        v2k[79][`loggedIn`] = false;
        function O4() {
            var v6H = [arguments];
                        v2k[79][`enterFrameDispatcher`][`dispatch`]();
            if (v2k[79][`simpleFPS`]) {
                v2k[79][`simpleFPS`][`frameDone`]();
            }
            requestAnimationFrame(O4);
        }
        v2k[79][`customControls`] = new v2k[92]();
        v2k[79][`friends`] = [];
        v2k[79][`mapsVotedFor`] = [];
        v2k[79][`classic`] = true;
        v2k[79][`resetRenderer`] = false;
        v2k[79][`disableClassic`] = function() {
            var i6H = [arguments];
                        i6H[1] = document[`getElementById`](`classicoverridecss`);
            i6H[1][`setAttribute`](`href`, `css/classicinactive.css`);
            v2k[79][`classic`] = false;
        }
        ;
        function k4(R37, j97) {
            "use strict";
            var u6H = [arguments];
            function H5S() {
                var b6H = [arguments];
                                if (u6H[30]) {
                    B5S();
                }
                z5S();
                if (u6H[83]) {
                    u6H[29][`returnFromTesting`]();
                    u6H[83] = false;
                } else {
                    u6H[29][`show`]();
                }
            }
            function w1S(k97) {
                var d6H = [arguments];
                                for (d6H[5] in d6H[0][0]) {
                    if (u6H[44][d6H[5]]) {
                        u6H[44][d6H[5]][`ping`] = d6H[0][0][d6H[5]];
                    }
                }
                if (u6H[29]) {
                    u6H[29][`updatePings`]();
                }
            }
            function Q1S(f97) {
                var e6H = [arguments];
                                u6H[36][`map`] = e6H[0][0];
                u6H[83] = true;
                P5S();
            }
                        function d1S(G97) {
                var C6H = [arguments];
                                u6H[36][`tea`] = C6H[0][0];
                I8yy.w9b();
                if (C6H[0][0] == false) {
                    for (C6H[4] = 0; C6H[4] < u6H[44][`length`]; C6H[4]++) {
                        if (u6H[44][C6H[4]] && u6H[44][C6H[4]][`team`] != 0) {
                            u6H[44][C6H[4]][`team`] = 1;
                        }
                    }
                }
                if (u6H[29]) {
                    u6H[29][`updateGameSettings`]();
                    u6H[29][`updatePlayers`]();
                }
            }
            u6H[7] = this;
            function E1S(T97) {
                var l6H = [arguments];
                I8yy.g9b();
                                if (u6H[30]) {
                    u6H[30][`recvArmRecord`](l6H[0][0]);
                }
            }
            u6H[5] = 0;
            u6H[3] = u6H[0][1];
            u6H[6] = document[`getElementById`](`leaveconfirmwindowcontainer`);
            u6H[1] = document[`getElementById`](`leaveconfirmwindow_cancelbutton`);
            u6H[8] = document[`getElementById`](`leaveconfirmwindow_okbutton`);
            u6H[9] = document[`getElementById`](`hostleaveconfirmwindowcontainer`);
            u6H[4] = document[`getElementById`](`hostleaveconfirmwindow_cancelbutton`);
            u6H[21] = document[`getElementById`](`hostleaveconfirmwindow_okbutton`);
            u6H[97] = document[`getElementById`](`hostleaveconfirmwindow_endbutton`);
            u6H[78] = document[`getElementById`](`xpbar`);
            u6H[68] = document[`getElementById`](`xpbarfill`);
            function q1S(K97) {
                var o6H = [arguments];
                                if (u6H[30]) {
                    u6H[30][`recvRevert`](u6H[11][`getLSID`](), o6H[0][0]);
                }
            }
            function o1S(r97, A97) {
                var I6H = [arguments];
                if (I6H[0][0]) {
                    F5S(`* Success!`, `#6033cc`, true);
                    w5S();
                } else {
                    switch (I6H[0][1]) {
                    case `rate_limit`:
                        F5S(`* Failed: Rate limited, please wait a few seconds then try /curateyes again`, `#6033cc`, true);
                        break;
                    case `not_logged_in`:
                        F5S(`* Failed: You're a guest!`, `#6033cc`, true);
                        w5S();
                        break;
                    case `invalid_mapid`:
                        F5S(`* Failed: Map issue`, `#6033cc`, true);
                        w5S();
                        break;
                    case `invalid_comment`:
                        F5S(`* Failed: Comment invalid`, `#6033cc`, true);
                        w5S();
                        break;
                    case `comment_too_long`:
                        F5S(`* Failed: Comment too long`, `#6033cc`, true);
                        w5S();
                        break;
                    case `invalid_dbv`:
                        F5S(`* Failed: Map issue`, `#6033cc`, true);
                        w5S();
                        break;
                    case `unauthorised`:
                        F5S(`* Failed: You don't have those privileges`, `#6033cc`, true);
                        w5S();
                        break;
                    case `map_private`:
                        F5S(`* Failed: Map is private, it must be published`, `#6033cc`, true);
                        w5S();
                        break;
                    default:
                        F5S(`* Failed: Unknown error`, `#6033cc`, true);
                        w5S();
                        break;
                    }
                }
            }
            u6H[24] = document[`getElementById`](`xpbartext`);
            t5S(false);
            function t1S(P97, H97) {
                var F6H = [arguments];
                                if (u6H[30]) {
                    u6H[30][`recvRevert`](F6H[0][0], F6H[0][1]);
                }
            }
            v2k[79][`setButtonSounds`]([u6H[1], u6H[8], u6H[4], u6H[21], u6H[97]]);
            u6H[80] = false;
            u6H[98] = [];
            u6H[31] = [];
            function j1S(v97) {
                var L6H = [arguments];
                                I8yy.H2k(9);
                L6H[5] = I8yy.A2k(11655, 18, 685);
                L6H[7] = v2k[79][v8yy[L6H[5]]] - L6H[0][0];
                v2k[79][`xp`] = L6H[0][0];
                t5S(true);
            }
            u6H[47] = [];
            function O1S() {
                var J6H = [arguments];
                                if (v2k[79][`guest`] == false && u6H[36][`map`][`m`][`dbv`] == 2 && u6H[36][`map`][`m`][`dbid`] > 0) {
                    $[`post`](`https://bonk2.io/scripts/map_fave.php`, {
                        token: u6H[3],
                        mapid: u6H[36][`map`][`m`][`dbid`],
                        action: `u`
                    })[`done`]((Q0S,o0S)=>{
                        var A7W, K7W, P7W;
                                                if (Q0S[`r`] == `success`) {
                            F5S(`* Map removed from favourites`, `#cc3333`, true);
                        } else {
                            if (Q0S[`e`] == `map_unpublished`) {
                                A7W = -834437637;
                                K7W = -662216529;
                                P7W = 2;
                                for (var g7W = 1; I8yy.m1f(g7W.toString(), g7W.toString().length, 44245) !== A7W; g7W++) {
                                    F5S(`#cc3333`, `#cc3333`, false);
                                    P7W += 2;
                                }
                                if (I8yy.m1f(P7W.toString(), P7W.toString().length, 38242) !== K7W) {
                                    F5S(`* Couldn't unfavourite map because it isn't public`, `#cc3333`, true);
                                }
                            } else if (Q0S[`e`] == `not_faved`) {
                                F5S(`* This map isn't in your favourites!`, `#cc3333`, true);
                            } else {
                                F5S(`* Couldn't unfavourite, something went wrong`, `#cc3333`, true);
                            }
                        }
                    }
                    )[`fail`](function(i97, u97, b97) {
                        var h6H = [arguments];
                        I8yy.w9b();
                        F5S(`* Couldn't unfavourite, something went wrong`, `#cc3333`, true);
                    });
                } else {
                    F5S(`* You must be logged in and the map must be a Bonk 2 map`, `#cc3333`, true);
                }
            }
            this[`networkEngine`] = new s8(this,u6H[0][0],u6H[0][1]);
            this[`networkEngine`][`on`](`joinedRoom`, K1S);
            function A1S(d97, e97) {
                var X6H = [arguments];
                X6H[8] = 749980791;
                X6H[2] = -1013691698;
                X6H[6] = 2;
                for (X6H[1] = 1; I8yy.m1f(X6H[1].toString(), X6H[1].toString().length, 23488) !== X6H[8]; X6H[1]++) {
                    X6H[6] += 2;
                }
                if (I8yy.m1f(X6H[6].toString(), X6H[6].toString().length, 91159) !== X6H[2]) {}
                                if (u6H[44][X6H[0][0]]) {
                    u6H[44][X6H[0][0]][`level`] = X6H[0][1];
                }
                if (u6H[29]) {
                    u6H[29][`updatePlayers`]();
                }
            }
            function m1S(C97) {
                var m6H = [arguments];
                I8yy.w9b();
                                return;
                u6H[36][`maps`][`splice`](m6H[0][0], 1);
                if (u6H[29]) {
                    u6H[29][`updateMaps`]();
                }
            }
            function i5S() {
                var Q6H = [arguments];
                                I8yy.g9b();
                B5S();
                z5S();
                if (u6H[29]) {
                    u6H[29][`show`]();
                    u6H[29][`maybeShowVoteWindow`]();
                }
            }
            this[`networkEngine`][`on`](`playerLeft`, p1S);
            this[`networkEngine`][`on`](`hostLeft`, n1S);
            function b1S(l97) {
                var q6H = [arguments];
                                u6H[36][`map`] = q6H[0][0];
                if (u6H[29]) {
                    u6H[29][`updateGameSettings`]();
                }
            }
            function F1S() {
                var S6H = [arguments];
                                for (S6H[8] = 0; S6H[8] < u6H[44][`length`]; S6H[8]++) {
                    if (u6H[44][S6H[8]]) {
                        u6H[44][S6H[8]][`ready`] = false;
                    }
                }
                I8yy.g9b();
                if (u6H[29]) {
                    u6H[29][`updatePlayers`]();
                }
            }
            this[`networkEngine`][`on`](`newPlayerJoined`, Y1S);
            this[`networkEngine`][`on`](`createdRoom`, r1S);
            this[`networkEngine`][`on`](`scheduleGameStart`, Z1S);
            this[`networkEngine`][`on`](`returnToLobby`, H5S);
            this[`networkEngine`][`on`](`chatMessage`, L1S);
            function C1S(o97) {
                var w6H = [arguments];
                                if (u6H[20]) {
                    return;
                }
                u6H[36] = w6H[0][0];
                I8yy.g9b();
                u6H[29][`setGameSettings`](u6H[36]);
                u6H[29][`show`]();
                u6H[20] = true;
                n5S(`fullyJoined`);
            }
            function B5S() {
                var z6H = [arguments];
                                u6H[30][`destroy`]();
                u6H[30] = null;
                u6H[66] = new G8(u6H[11],u6H[95]);
                I8yy.w9b();
                u6H[66][`on`](`gameComplete`, i5S);
                u6H[66][`on`](`processCommand`, E5S);
            }
            function k1S(I97) {
                var n6H = [arguments];
                                u6H[36][`tl`] = n6H[0][0];
                if (u6H[29]) {
                    if (n6H[0][0]) {
                        u6H[29][`showStatusMessage`](`* Teams have been locked, only the host can assign teams`, `#cc3333`);
                    } else {
                        u6H[29][`showStatusMessage`](`* Teams have been unlocked`, `#cc3333`);
                    }
                    u6H[29][`updateGameSettings`]();
                }
            }
            function B1S(F97, L97) {
                var y6H = [arguments];
                                I8yy.w9b();
                y6H[8] = `unknown`;
                y6H[3] = `unknown`;
                if (u6H[44][y6H[0][0]]) {
                    y6H[8] = u6H[44][y6H[0][0]][`userName`];
                }
                if (u6H[44][y6H[0][1]]) {
                    y6H[3] = u6H[44][y6H[0][1]][`userName`];
                }
            }
            this[`networkEngine`][`on`](`readyChange`, s1S);
            this[`networkEngine`][`on`](`readyReset`, F1S);
            this[`networkEngine`][`on`](`teamLockChange`, k1S);
            function v6S(J97) {
                var p6H = [arguments];
            }
            function h1S(h97) {
                var O6H = [arguments];
                                return;
                u6H[29][`playerKicked`](O6H[0][0]);
            }
            this[`networkEngine`][`on`](`teamChange`, J1S);
            this[`networkEngine`][`on`](`playerMuted`, f1S);
            function P5S() {
                var W6H = [arguments];
                                W6H[9] = [];
                for (W6H[55] = 0; W6H[55] < u6H[44][`length`]; W6H[55]++) {
                    if (u6H[44][W6H[55]] && u6H[44][W6H[55]][`team`] != 0) {
                        W6H[9][W6H[55]] = {
                            id: W6H[55],
                            team: u6H[44][W6H[55]][`team`]
                        };
                        if (u6H[36][`tea`] == false && W6H[9][W6H[55]][`team`] > 1) {
                            W6H[9][W6H[55]][`team`] = 1;
                            ;
                        }
                    }
                }
                W6H[4] = null;
                if (u6H[36][`q`]) {
                    if (u6H[36][`q`] == `bonkquick`) {
                        W6H[4] = u6H[95][`getMap`](0);
                        u6H[36][`map`] = W6H[4];
                    } else {
                        v2k[99][`generateRandomOrder`]();
                        W6H[4] = v2k[99][`getOrderedRandomMap`](0, u6H[36][`q`]);
                        u6H[36][`map`] = W6H[4];
                        ;
                    }
                } else {
                    W6H[4] = u6H[36][`map`];
                }
                if (u6H[36][`ga`] == `b`) {
                    W6H[5] = E;
                    ;
                } else if (u6H[36][`ga`] == `f`) {
                    W6H[5] = I8;
                }
                W6H[2] = W6H[5][`createNewState`](W6H[9], W6H[4], Math[`floor`](Math[`random`]() * 999), u6H[83], null, u6H[36], true);
                W6H[2][`rc`] = 0;
                W6H[6] = v2k[56][`pson`][`encode`](W6H[2]);
                W6H[8] = W6H[6][`toBase64`]();
                W6H[1] = LZString[`compressToEncodedURIComponent`](W6H[8]);
                W6H[3] = ``;
                for (W6H[55] = 0; W6H[55] < W6H[1][`length`]; W6H[55]++) {
                    if (W6H[55] <= 100 && W6H[1][`charAt`](W6H[55]) === W6H[1][`charAt`](W6H[55])[`toLowerCase`]()) {
                        W6H[3] += W6H[1][`charAt`](W6H[55])[`toUpperCase`]();
                    } else if (W6H[55] <= 100 && W6H[1][`charAt`](W6H[55]) === W6H[1][`charAt`](W6H[55])[`toUpperCase`]()) {
                        W6H[3] += W6H[1][`charAt`](W6H[55])[`toLowerCase`]();
                    } else {
                        W6H[3] += W6H[1][`charAt`](W6H[55]);
                    }
                }
                W6H[77] = u6H[36][`map`];
                u6H[36][`map`] = T[`encodeToDatabase`](u6H[36][`map`]);
                u6H[11][`triggerStart`](W6H[3], u6H[36]);
                u6H[36][`map`] = W6H[77];
                ;
            }
            function x1S(X97) {
                var Z6H = [arguments];
                                I8yy.g9b();
                if (u6H[29]) {
                    u6H[29][`handleHostChange`](Z6H[0][0][`oldHost`], Z6H[0][0][`newHost`]);
                }
            }
            this[`networkEngine`][`on`](`playerUnmuted`, S1S);
            this[`networkEngine`][`on`](`nameChange`, N1S);
            I8yy.w9b();
            this[`networkEngine`][`on`](`gotPingData`, w1S);
            function w5S() {
                u6H[40] = ``;
                I8yy.g9b();
                u6H[43] = 0;
                u6H[82] = 0;
            }
            function e1S(m97, Q97) {
                var x6H = [arguments];
                                u6H[36][`ga`] = x6H[0][0];
                u6H[36][`mo`] = x6H[0][1];
                if (u6H[29]) {
                    u6H[29][`updateGameSettings`]();
                }
            }
            function H1S(q97, S97) {
                var M6H = [arguments];
                                if (u6H[44][M6H[0][0]]) {
                    u6H[44][M6H[0][0]][`tabbed`] = M6H[0][1];
                    if (u6H[29]) {
                        u6H[29][`updatePings`]();
                    }
                }
            }
            this[`networkEngine`][`on`](`recvInLobby`, C1S);
            function Y1S(w97, z97, n97, y97, p97, O97) {
                var s6H = [arguments];
                                s6H[2] = new v2k[38]();
                s6H[2][`fromObject`](s6H[0][5]);
                u6H[44][s6H[0][0]] = {
                    userName: s6H[0][1],
                    guest: s6H[0][2],
                    level: s6H[0][3],
                    ready: false,
                    team: s6H[0][4],
                    avatar: s6H[2],
                    ping: 105
                };
                s6H[3] = 0;
                for (s6H[6] = 0; s6H[6] < u6H[44][`length`]; s6H[6]++) {
                    if (u6H[44][s6H[6]]) {
                        s6H[3]++;
                    }
                }
                if (u6H[5] == u6H[11][`hostID`]) {
                    if (u6H[30]) {
                        u6H[30][`sendNewPlayerState`](s6H[0][0]);
                        if (u6H[64]) {
                            u6H[30][`hostHandlePlayerJoined`](s6H[0][0], s6H[3], s6H[0][4]);
                        }
                    } else {
                        u6H[11][`informInLobby`](s6H[0][0], u6H[36]);
                    }
                }
                I8yy.g9b();
                if (u6H[30]) {
                    u6H[30][`playerJoinedChat`](s6H[0][1], s6H[0][2]);
                }
                if (u6H[29]) {
                    u6H[29][`handlePlayerJoined`](s6H[0][1]);
                }
            }
            this[`networkEngine`][`on`](`recvInGame`, U1S);
            this[`networkEngine`][`on`](`recvLobbyMap`, V1S);
            this[`networkEngine`][`on`](`mapReorder`, G1S);
            this[`networkEngine`][`on`](`mapDelete`, m1S);
            function F5S(W97, Z97, x97) {
                var c6H = [arguments];
                                if (u6H[29]) {
                    u6H[29][`showStatusMessage`](c6H[0][0], c6H[0][1], c6H[0][2]);
                }
                if (u6H[30]) {
                    u6H[30][`chatStatus`](c6H[0][0]);
                }
            }
            function p1S(M97, s97) {
                var D6H = [arguments];
                                D6H[8] = u6H[44][D6H[0][0]][`userName`];
                D6H[5] = u6H[44][D6H[0][0]][`guest`];
                D6H[9] = u6H[44][D6H[0][0]];
                u6H[44][D6H[0][0]] = null;
                if (u6H[29]) {
                    u6H[29][`handlePlayerLeft`](D6H[8]);
                }
                if (u6H[30]) {
                    u6H[30][`playerLeftChat`](D6H[8], D6H[5]);
                    u6H[30][`allHandlePlayerLeft`](D6H[0][0], D6H[0][1], D6H[9]);
                } else {
                    u6H[31][`push`]([D6H[0][0], D6H[0][1]]);
                }
            }
            function W1S() {
                var Y6H = [arguments];
                function s6S() {
                    I8yy.g9b();
                    W6S();
                }
                function r6S() {
                    I8yy.g9b();
                    anime({
                        targets: u6H[6],
                        opacity: `0`,
                        autoplay: true,
                        duration: 130,
                        easing: `easeOutCubic`,
                        complete: function() {
                            I8yy.w9b();
                            var N6H = [arguments];
                                                        u6H[6][`style`][`visibility`] = `hidden`;
                        }
                    });
                }
                function Q6S() {
                    r6S();
                }
                function R6S() {
                    r6S();
                    n5S(`endSession`);
                }
                function O6S() {
                    W6S();
                    I8yy.g9b();
                    n5S(`endSession`);
                }
                function W6S() {
                    I8yy.g9b();
                    anime({
                        targets: u6H[9],
                        opacity: `0`,
                        autoplay: true,
                        duration: 130,
                        easing: `easeOutCubic`,
                        complete: function() {
                            var V6H = [arguments];
                                                        u6H[9][`style`][`visibility`] = `hidden`;
                        }
                    });
                }
                function o6S() {
                    var g6H = [arguments];
                                        u6H[9][`style`][`visibility`] = `inherit`;
                    u6H[4][`onclick`] = s6S;
                    u6H[21][`onclick`] = O6S;
                    u6H[97][`onclick`] = L6S;
                    u6H[9][`style`][`opacity`] = `0`;
                    anime({
                        targets: u6H[9],
                        opacity: `1`,
                        autoplay: true,
                        duration: 250,
                        easing: `easeOutCubic`
                    });
                }
                function L6S() {
                    var U6H = [arguments];
                                        u6H[11][`sendNoHostSwap`]();
                    W6S();
                    I8yy.g9b();
                    n5S(`endSession`);
                }
                                if (u6H[30]) {
                    if (u6H[64]) {
                        g6S();
                    } else {
                        if (u6H[11][`hostID`] == u6H[11][`getLSID`]()) {
                            u6H[11][`sendReturnToLobby`]();
                            H5S();
                        } else {
                            g6S();
                        }
                    }
                } else {
                    Y6H[4] = 0;
                    u6H[44][`forEach`](F6S=>{
                        I8yy.w9b();
                        if (F6S) {
                            Y6H[4]++;
                        }
                    }
                    );
                    if (u6H[11][`hostID`] == u6H[11][`getLSID`]() && Y6H[4] > 1) {
                        o6S();
                    } else {
                        g6S();
                    }
                }
                function g6S() {
                    var B6H = [arguments];
                                        u6H[6][`style`][`visibility`] = `inherit`;
                    u6H[1][`onclick`] = Q6S;
                    I8yy.w9b();
                    u6H[8][`onclick`] = R6S;
                    u6H[6][`style`][`opacity`] = `0`;
                    anime({
                        targets: u6H[6],
                        opacity: `1`,
                        autoplay: true,
                        duration: 250,
                        easing: `easeOutCubic`
                    });
                }
            }
            function M1S(c97) {
                var a6H = [arguments];
                I8yy.w9b();
                                if (u6H[30]) {
                    u6H[30][`recvAdmin`](a6H[0][0]);
                } else {
                    u6H[47][`push`](a6H[0][0]);
                }
            }
            this[`networkEngine`][`on`](`mapAdd`, b1S);
            function z5S() {
                var t6H = [arguments];
                I8yy.w9b();
                                for (t6H[2] = 0; t6H[2] < u6H[44][`length`]; t6H[2]++) {
                    if (u6H[44][t6H[2]]) {
                        u6H[44][t6H[2]][`ready`] = false;
                    }
                }
            }
            this[`networkEngine`][`on`](`changeGAMO`, e1S);
            this[`networkEngine`][`on`](`changeWL`, X1S);
            function S1S(D97, Y97) {
                var E6H = [arguments];
                                if (!u6H[44][E6H[0][0]]) {
                    return;
                }
                u6H[29][`showStatusMessage`](`* ` + u6H[44][E6H[0][0]][`userName`] + ` has been unmuted`, `#cc3333`);
            }
            function l1S(N97) {
                var R6H = [arguments];
                                return;
                u6H[29][`playerTyping`](R6H[0][0]);
            }
            this[`networkEngine`][`on`](`typing`, l1S);
            this[`networkEngine`][`on`](`kicked`, h1S);
            function L1S(V97, g97) {
                var j8H = [arguments];
                                I8yy.w9b();
                j8H[1] = u6H[44][j8H[0][0]][`userName`];
                if (u6H[44][j8H[0][0]][`mute`]) {
                    return;
                }
                if (v2k[79][`customControls`][`filter`]) {
                    j8H[0][1] = v2k[79][`sanitizeString`](j8H[0][1]);
                }
                if (u6H[30]) {
                    u6H[30][`recvChatMessage`](j8H[1], j8H[0][1]);
                }
                if (u6H[66]) {
                    u6H[66][`recvChatMessage`](j8H[1], j8H[0][1]);
                }
                if (u6H[29]) {
                    u6H[29][`recvChatMessage`](j8H[1], j8H[0][0], j8H[0][1]);
                }
            }
            function I6S() {
                I8yy.g9b();
                return u6H[36];
            }
            this[`networkEngine`][`on`](`adminInputs`, M1S);
            function t5S(U97) {
                var k8H = [arguments];
                                k8H[6] = v2k[79][`xpToLevel`](v2k[79][`xp`]);
                k8H[1] = v2k[79][`levelToXP`](k8H[6]);
                I8yy.P2k(0);
                k8H[8] = v2k[79][`levelToXP`](I8yy.A2k(k8H[6], 1));
                I8yy.H2k(1);
                k8H[5] = I8yy.A2k(k8H[1], k8H[8]);
                I8yy.P2k(1);
                k8H[3] = I8yy.r2k(18, 693);
                k8H[7] = v2k[79][v8yy[k8H[3]]] - k8H[1];
                I8yy.P2k(2);
                k8H[9] = I8yy.r2k(k8H[7], k8H[5]);
                I8yy.g9b();
                z1S(k8H[9], k8H[0][0]);
                if (k8H[0][0]) {
                    if (k8H[9] == 0) {
                        u6H[24][`textContent`] = `Level Up`;
                    } else {
                        u6H[24][`textContent`] = `+100xp`;
                    }
                    u6H[24][`style`][`top`] = `10px`;
                    u6H[24][`style`][`opacity`] = 0;
                    k8H[2] = anime[`timeline`]();
                    k8H[2][`add`]({
                        targets: u6H[24],
                        top: `-6px`,
                        opacity: 1,
                        duration: 450,
                        delay: 0,
                        easing: `easeOutQuad`
                    });
                    k8H[2][`add`]({
                        targets: u6H[24],
                        top: `-20px`,
                        opacity: 0,
                        duration: 150,
                        delay: 650,
                        easing: `easeOutQuad`
                    });
                }
            }
            this[`networkEngine`][`on`](`afkWarn`, D1S);
            this[`networkEngine`][`on`](`disconnectedFromMona`, g1S);
            function g1S() {
                n5S(`endSession`);
            }
            function N1S(B97, a97) {
                I8yy.w9b();
                var f8H = [arguments];
                                if (!u6H[44][f8H[0][0]]) {
                    return;
                }
                f8H[5] = u6H[44][f8H[0][0]][`userName`];
                u6H[44][f8H[0][0]][`userName`] = f8H[0][1];
            }
            function D1S() {
                var G8H = [arguments];
                I8yy.g9b();
                                if (u6H[30]) {
                    u6H[30][`recvAfkWarn`]();
                }
            }
            this[`networkEngine`][`on`](`mapSuggest`, a1S);
            this[`networkEngine`][`on`](`mapSuggestClient`, c1S);
            function s1S(t97, E97) {
                var T8H = [arguments];
                                if (!u6H[44][T8H[0][0]]) {
                    return;
                }
                u6H[44][T8H[0][0]][`ready`] = T8H[0][1];
                if (u6H[29]) {
                    u6H[29][`updatePlayers`]();
                }
                if (T8H[0][1] && !v2k[79][`mute`]) {
                    T8H[8] = new Howl({
                        src: [`sound/bell_full_1.mp3`],
                        volume: 0.7
                    });
                    T8H[8][`play`]();
                }
            }
            this[`networkEngine`][`on`](`changeMode`, T1S);
            function n5S(...y7S) {
                var K8H = [arguments];
                                K8H[2] = y7S[`shift`]();
                I8yy.w9b();
                for (K8H[3] = 0; K8H[3] < u6H[84][`length`]; K8H[3]++) {
                    if (u6H[84][K8H[3]][`eventName`] == K8H[2]) {
                        u6H[84][K8H[3]][`callback`](...y7S);
                    }
                }
            }
            function f1S(R97, j17) {
                var r8H = [arguments];
                                if (!u6H[44][r8H[0][0]]) {
                    return;
                }
                u6H[29][`showStatusMessage`](`* ` + u6H[44][r8H[0][0]][`userName`] + ` has been muted`, `#cc3333`);
            }
            function z1S(k17, f17) {
                var A8H = [arguments];
                                if (A8H[0][0] == 0 && A8H[0][1] == true) {
                    A8H[8] = anime[`timeline`]();
                    A8H[8][`add`]({
                        targets: u6H[68],
                        width: u6H[78][`style`][`width`],
                        duration: 100,
                        delay: 0,
                        easing: `linear`
                    });
                    A8H[8][`add`]({
                        targets: u6H[68],
                        width: `0px`,
                        duration: 1000,
                        delay: 400,
                        easing: `easeInSine`
                    });
                } else {
                    A8H[0][0] *= 100;
                    I8yy.P2k(144);
                    A8H[7] = I8yy.A2k(10, 4, 981, 99);
                    u6H[68][`style`][`width`] = A8H[0][0] + v8yy[A8H[7]];
                }
            }
            this[`networkEngine`][`on`](`balance`, P1S);
            function K1S(G17, T17, K17, r17, A17) {
                var P8H = [arguments];
                                u6H[5] = P8H[0][0];
                u6H[77] = P8H[0][3];
                if (P8H[0][4]) {
                    u6H[95][`addMaps`](P8H[0][4]);
                }
                for (P8H[5] = 0; P8H[5] < P8H[0][1][`length`]; P8H[5]++) {
                    if (P8H[0][1][P8H[5]]) {
                        u6H[44][P8H[5]] = {};
                        for (P8H[1] in P8H[0][1][P8H[5]]) {
                            u6H[44][P8H[5]][P8H[1]] = P8H[0][1][P8H[5]][P8H[1]];
                        }
                        u6H[44][P8H[5]][`avatar`] = new v2k[38]();
                        u6H[44][P8H[5]][`avatar`][`fromObject`](P8H[0][1][P8H[5]][`avatar`]);
                    }
                }
            }
            function a1S(P17, H17) {
                var H8H = [arguments];
                                H8H[3] = (function() {
                    return {
                        VALUE_CREATED: `created`,
                        VALUE_UPDATED: `updated`,
                        VALUE_DELETED: `deleted`,
                        VALUE_UNCHANGED: `unchanged`,
                        map: function(v17, i17) {
                            I8yy.w9b();
                            var v8H = [arguments];
                                                        if (this[`isFunction`](v8H[0][0]) || this[`isFunction`](v8H[0][1])) {
                                throw `Invalid argument. Function given, object expected.`;
                            }
                            if (this[`isValue`](v8H[0][0]) || this[`isValue`](v8H[0][1])) {
                                return {
                                    type: this[`compareValues`](v8H[0][0], v8H[0][1]),
                                    data: v8H[0][0] === undefined ? v8H[0][1] : v8H[0][0]
                                };
                            }
                            v8H[6] = {};
                            for (v8H[9] in v8H[0][0]) {
                                if (this[`isFunction`](v8H[0][0][v8H[9]])) {
                                    continue;
                                }
                                v8H[7] = undefined;
                                if (v8H[0][1][v8H[9]] !== undefined) {
                                    v8H[7] = v8H[0][1][v8H[9]];
                                }
                                v8H[6][v8H[9]] = this[`map`](v8H[0][0][v8H[9]], v8H[7]);
                            }
                            for (v8H[9] in v8H[0][1]) {
                                if (this[`isFunction`](v8H[0][1][v8H[9]]) || v8H[6][v8H[9]] !== undefined) {
                                    continue;
                                }
                                v8H[6][v8H[9]] = this[`map`](undefined, v8H[0][1][v8H[9]]);
                            }
                            return v8H[6];
                        },
                        compareValues: function(u17, b17) {
                            var i8H = [arguments];
                                                        if (i8H[0][0] === i8H[0][1]) {
                                return this[`VALUE_UNCHANGED`];
                            }
                            if (this[`isDate`](i8H[0][0]) && this[`isDate`](i8H[0][1]) && i8H[0][0][`getTime`]() === i8H[0][1][`getTime`]()) {
                                return this[`VALUE_UNCHANGED`];
                            }
                            if (i8H[0][0] === undefined) {
                                return this[`VALUE_CREATED`];
                            }
                            if (i8H[0][1] === undefined) {
                                return this[`VALUE_DELETED`];
                            }
                            return this[`VALUE_UPDATED`];
                        },
                        isFunction: function(d17) {
                            var u8H = [arguments];
                                                        I8yy.P2k(31);
                            u8H[6] = I8yy.r2k(18, 1985, 33906, 8);
                            return Object[`prototype`][`toString`][`call`](u8H[0][0]) === v8yy[u8H[6]];
                        },
                        isArray: function(e17) {
                            var b8H = [arguments];
                                                        I8yy.P2k(0);
                            I8yy.g9b();
                            b8H[4] = I8yy.A2k(1952, 17);
                            return Object[`prototype`][`toString`][`call`](b8H[0][0]) === v8yy[b8H[4]];
                        },
                        isDate: function(C17) {
                            var d8H = [arguments];
                                                        I8yy.H2k(9);
                            d8H[3] = I8yy.A2k(988, 6, 493);
                            return Object[`prototype`][`toString`][`call`](d8H[0][0]) === v8yy[d8H[3]];
                        },
                        isObject: function(l17) {
                            var e8H = [arguments];
                                                        I8yy.H2k(9);
                            e8H[6] = I8yy.A2k(108405, 4, 27594);
                            return Object[`prototype`][`toString`][`call`](e8H[0][0]) === v8yy[e8H[6]];
                        },
                        isValue: function(o17) {
                            I8yy.g9b();
                            var C8H = [arguments];
                                                        return !this[`isObject`](C8H[0][0]) && !this[`isArray`](C8H[0][0]);
                        }
                    };
                }
                )();
                H8H[7] = null;
                try {
                    H8H[7] = T[`mergeIntoNewMap`](H8H[0][0]);
                } catch (D9S) {}
                if (u6H[29]) {
                    u6H[29][`recvMapSuggest`](H8H[7], H8H[0][1]);
                }
            }
            function y1S(I17) {
                var l8H = [arguments];
                                I8yy.w9b();
                if (u6H[29]) {
                    u6H[29][`recvFriended`](l8H[0][0]);
                }
            }
            this[`networkEngine`][`on`](`debugWinner`, B1S);
            function U1S(F17) {
                var o8H = [arguments];
                                if (u6H[20]) {
                    return;
                }
                o8H[6] = [];
                for (o8H[15] = 0; o8H[15] < o8H[0][0][`inputs`][`length`]; o8H[15]++) {
                    o8H[2] = o8H[0][0][`inputs`][o8H[15]][`f`];
                    o8H[9] = o8H[0][0][`inputs`][o8H[15]][`p`];
                    o8H[1] = v2k[79][`decodeInputs`](o8H[0][0][`inputs`][o8H[15]][`i`]);
                    if (!o8H[6][o8H[9]]) {
                        o8H[6][o8H[9]] = [];
                    }
                    o8H[6][o8H[9]][o8H[2]] = o8H[1];
                }
                if (u6H[98][`length`] > 0) {
                    for (o8H[50] = 0; o8H[50] < u6H[98][`length`]; o8H[50]++) {
                        o8H[8] = u6H[98][o8H[50]];
                        if (!o8H[6][o8H[8][`from`]]) {
                            o8H[6][o8H[8][`from`]] = [];
                        }
                        o8H[6][o8H[8][`from`]][o8H[8][`data`][`f`]] = o8H[8][`data`][`i`];
                        if (o8H[8][`data`][`f`] < o8H[0][0][`fc`]) {
                            ;
                        }
                    }
                }
                u6H[98] = [];
                o8H[4] = [];
                for (o8H[83] = 0; o8H[83] < o8H[0][0][`admin`][`length`]; o8H[83]++) {
                    o8H[4][o8H[0][0][`admin`][o8H[83]][`f`]] = o8H[0][0][`admin`][o8H[83]][`a`];
                }
                for (o8H[60] = 0; o8H[60] < u6H[31][`length`]; o8H[60]++) {
                    o8H[7] = u6H[31][o8H[60]][0];
                    o8H[3] = u6H[31][o8H[60]][1];
                    if (o8H[4][o8H[3]]) {
                        if (!o8H[4][o8H[3]][`playersLeft`]) {
                            o8H[4][o8H[3]][`playersLeft`] = [];
                        }
                        o8H[4][o8H[3]][`playersLeft`][`push`](o8H[7]);
                    } else {
                        o8H[42] = {
                            playersLeft: [o8H[7]],
                            playersJoined: []
                        };
                        o8H[4][o8H[3]] = o8H[42];
                    }
                }
                u6H[31] = [];
                for (o8H[28] = 0; o8H[28] < u6H[47][`length`]; o8H[28]++) {
                    o8H[73] = u6H[47][o8H[28]][`f`];
                    o8H[53] = u6H[47][o8H[28]][`a`];
                    if (o8H[4][o8H[73]]) {
                        if (!o8H[4][o8H[73]][`playersJoined`]) {
                            o8H[4][o8H[73]][`playersJoined`] = [];
                        }
                        for (o8H[54] = 0; o8H[54] < o8H[53][`playersJoined`][`length`]; o8H[54]++) {
                            o8H[88] = o8H[53][`playersJoined`][o8H[54]];
                            o8H[4][o8H[73]][`playersJoined`][`push`](o8H[88]);
                        }
                    } else {
                        o8H[4][o8H[73]] = o8H[53];
                    }
                }
                u6H[47] = [];
                I8yy.g9b();
                o8H[94] = o8H[0][0][`state`];
                o8H[96] = ``;
                for (o8H[50] = 0; o8H[50] < o8H[94][`length`]; o8H[50]++) {
                    if (o8H[50] <= 100 && o8H[94][`charAt`](o8H[50]) === o8H[94][`charAt`](o8H[50])[`toLowerCase`]()) {
                        o8H[96] += o8H[94][`charAt`](o8H[50])[`toUpperCase`]();
                    } else if (o8H[50] <= 100 && o8H[94][`charAt`](o8H[50]) === o8H[94][`charAt`](o8H[50])[`toUpperCase`]()) {
                        o8H[96] += o8H[94][`charAt`](o8H[50])[`toLowerCase`]();
                    } else {
                        o8H[96] += o8H[94][`charAt`](o8H[50]);
                    }
                }
                o8H[95] = LZString[`decompressFromEncodedURIComponent`](o8H[96]);
                o8H[40] = dcodeIO[`ByteBuffer`][`fromBase64`](o8H[95]);
                o8H[96] = v2k[56][`pson`][`decode`](o8H[40]);
                u6H[36] = o8H[0][0][`gs`];
                u6H[36][`map`] = T[`decodeFromDatabase`](u6H[36][`map`]);
                if (u6H[29]) {
                    u6H[29][`setGameSettings`](u6H[36]);
                }
                v2k[99][`recvRandomOrder`](o8H[0][0][`random`]);
                o8H[55] = u6H[11][`getTS`]()[`now`]() - u6H[77];
                I8yy.P2k(68);
                o8H[21] = I8yy.A2k(13927, 9, 4, 1127318, 9);
                I8yy.H2k(180);
                o8H[31] = I8yy.A2k(18, 17000, 16, 15966);
                I8yy.H2k(0);
                o8H[80] = I8yy.r2k(11, 19);
                o8H[72] = o8H[55] - o8H[0][0][v8yy[o8H[21]]] * (o8H[31] / o8H[80]);
                if (o8H[72] > 30000) {
                    n5S(`endSession`);
                    return;
                }
                u6H[30] = u6H[66];
                u6H[66] = null;
                this[`gameWorld`] = u6H[30];
                u6H[30][`goInProgress`](o8H[96], o8H[0][0][`stateID`], o8H[0][0][`fc`], o8H[6], o8H[4], o8H[72], u6H[5], u6H[36], u6H[44]);
                u6H[20] = true;
                n5S(`fullyJoined`);
            }
            this[`networkEngine`][`on`](`teamSettingsChange`, d1S);
            function E5S(L17) {
                var I8H = [arguments];
                                I8H[5] = I8H[0][0][`split`](` `);
                I8H[9] = -1;
                I8yy.g9b();
                I8H[6] = -1;
                for (I8H[81] = 0; I8H[81] < I8H[5][`length`]; I8H[81]++) {
                    I8H[4] = I8H[5][I8H[81]];
                    I8H[8] = I8H[4][`charAt`](0);
                    I8H[3] = I8H[4][`charAt`](I8H[4][`length`] - 1);
                    if (I8H[8] == `"` || I8H[8] == `'`) {
                        if (I8H[9] == -1) {
                            I8H[9] = I8H[81];
                        }
                    }
                    if (I8H[3] == `"` || I8H[3] == `'`) {
                        if (I8H[6] == -1) {
                            I8H[6] = I8H[81];
                        }
                    }
                }
                if (I8H[9] != -1 && I8H[6] != -1) {
                    I8H[5][I8H[9]] = I8H[5][I8H[9]][`substring`](1, I8H[5][I8H[9]][`length`]);
                    I8H[5][I8H[6]] = I8H[5][I8H[6]][`substring`](0, I8H[5][I8H[6]][`length`] - 1);
                    if (I8H[6] > I8H[9]) {
                        for (I8H[93] = I8H[9]; I8H[93] < I8H[6]; I8H[93]++) {
                            I8yy.P2k(9);
                            I8H[36] = I8yy.r2k(199662, 18, 11196);
                            I8yy.H2k(0);
                            I8H[80] = I8yy.r2k(0, 1);
                            I8H[2] = I8H[5][I8H[9]] + v8yy[I8H[36]] + I8H[5][I8H[9] + I8H[80]];
                            I8yy.P2k(0);
                            I8H[5][`splice`](I8yy.r2k(I8H[9], 1), 1);
                            I8H[5][I8H[9]] = I8H[2];
                        }
                    }
                }
                if (I8H[5][0] == `/balance`) {
                    if (u6H[11][`getLSID`]() != u6H[11][`hostID`]) {
                        u6H[29][`showStatusMessage`](`* Must be room host to use this command`, `#cc3333`, false);
                        return;
                    }
                    if (u6H[64]) {
                        F5S(`* Unavailable in quick play`, `#cc3333`, true);
                    }
                    I8H[7] = I8H[5][1];
                    I8H[32] = parseInt(I8H[5][2]);
                    if (I8H[32] < -100 || I8H[32] > 100) {
                        u6H[29][`showStatusMessage`](`* Buff/nerf amount must be between -100 and 100`, `#cc3333`, false);
                        return;
                    }
                    I8H[67] = -1;
                    for (I8H[17] = 0; I8H[17] < u6H[44][`length`]; I8H[17]++) {
                        if (u6H[44][I8H[17]]) {
                            if (u6H[44][I8H[17]][`userName`][`toLowerCase`]() == I8H[7][`toLowerCase`]()) {
                                I8H[67] = I8H[17];
                                break;
                            }
                        }
                    }
                    if (I8H[67] == -1) {
                        if (u6H[29]) {
                            u6H[29][`showStatusMessage`](`* Balance failed, username ` + I8H[7] + ` not found in this room`, `#cc3333`, false);
                        }
                        return;
                    } else {
                        if (I8H[32] == 0) {
                            delete u6H[36][`bal`][I8H[67]];
                            u6H[29][`showStatusMessage`](`* ` + I8H[7] + ` has had their buff/nerf reset.`, `#cc3333`, false);
                        } else {
                            u6H[36][`bal`][I8H[67]] = I8H[32];
                            u6H[29][`showStatusMessage`](`* ` + I8H[7] + ` has had their buff/nerf set to ` + I8H[32], `#cc3333`, false);
                        }
                        u6H[11][`sendBalance`](I8H[67], I8H[32]);
                        if (u6H[29]) {
                            u6H[29][`updatePlayers`]();
                        }
                    }
                } else if (I8H[5][0] == `/kick`) {
                    if (u6H[11][`getLSID`]() != u6H[11][`hostID`]) {
                        F5S(`* Must be room host to use this command`, `#cc3333`, false);
                        return;
                    }
                    I8H[27] = I8H[5][1];
                    I8H[50] = -1;
                    for (I8H[17] = 0; I8H[17] < u6H[44][`length`]; I8H[17]++) {
                        if (u6H[44][I8H[17]]) {
                            if (u6H[44][I8H[17]][`userName`][`toLowerCase`]() == I8H[27][`toLowerCase`]()) {
                                I8H[50] = I8H[17];
                                break;
                            }
                        }
                    }
                    if (I8H[50] == -1) {
                        if (u6H[29]) {
                            F5S(`* Kick failed, username ` + I8H[27] + ` not found in this room`, `#cc3333`, false);
                        }
                        return;
                    } else {
                        u6H[11][`banPlayer`](I8H[50]);
                    }
                } else if (I8H[5][0] == `/lock` || I8H[5][0] == `/unlock`) {
                    if (u6H[11][`getLSID`]() != u6H[11][`hostID`]) {
                        F5S(`* Must be room host to use this command`, `#cc3333`, false);
                        return;
                    }
                    if (u6H[64]) {
                        F5S(`* Unavailable in quick play`, `#cc3333`, true);
                    }
                    I8yy.H2k(94);
                    I8H[31] = I8yy.A2k(1889, 12, 5, 10, 43455);
                    I8H[54] = I8H[5][0] == v8yy[I8H[31]];
                    u6H[11][`doTeamLock`](I8H[54]);
                } else if (I8H[5][0] == `/move`) {
                    if (u6H[11][`getLSID`]() != u6H[11][`hostID`]) {
                        u6H[29][`showStatusMessage`](`* Must be room host to use this command`, `#cc3333`, false);
                        return;
                    }
                    if (u6H[64]) {
                        F5S(`* Unavailable in quick play`, `#cc3333`, true);
                    }
                    I8H[64] = -1;
                    for (I8H[17] = 0; I8H[17] < u6H[44][`length`]; I8H[17]++) {
                        if (u6H[44][I8H[17]]) {
                            if (u6H[44][I8H[17]][`userName`][`toLowerCase`]() == I8H[5][1][`toLowerCase`]()) {
                                I8H[64] = I8H[17];
                                break;
                            }
                        }
                    }
                    if (I8H[64] == -1) {
                        if (u6H[29]) {
                            u6H[29][`showStatusMessage`](`* Move failed, username ` + I8H[5][1] + ` not found in this room`, `#cc3333`, false);
                        }
                        return;
                    } else if (!I8H[5][2]) {
                        if (u6H[29]) {
                            u6H[29][`showStatusMessage`](`* Move failed, usage /move "username" ffa or /move username spec`, `#cc3333`, false);
                        }
                        return;
                    } else {
                        if (I8H[5][2][`toLowerCase`]() == `ffa`) {
                            u6H[11][`changeOtherTeam`](I8H[64], 1);
                        } else if (I8H[5][2][`toLowerCase`]() == `spec`) {
                            u6H[11][`changeOtherTeam`](I8H[64], 0);
                        } else {
                            if (u6H[29]) {
                                u6H[29][`showStatusMessage`](`* Move failed, usage /move "username" ffa or /move username spec`, `#cc3333`, false);
                            }
                            return;
                        }
                    }
                } else if (I8H[5][0] == `/mute`) {
                    I8H[38] = I8H[5][1];
                    I8H[29] = -1;
                    for (I8H[17] = 0; I8H[17] < u6H[44][`length`]; I8H[17]++) {
                        if (u6H[44][I8H[17]]) {
                            if (u6H[44][I8H[17]][`userName`][`toLowerCase`]() == I8H[38][`toLowerCase`]()) {
                                I8H[29] = I8H[17];
                                break;
                            }
                        }
                    }
                    if (I8H[29] == -1) {
                        if (u6H[29]) {
                            F5S(`* Mute failed, username ` + I8H[38] + ` not found in this room`, `#cc3333`, false);
                        }
                        return;
                    }
                    I8H[96] = u6H[44][I8H[29]][`userName`];
                    if (I8H[29] == u6H[11][`getLSID`]()) {
                        F5S(`* Can't mute yourself!`, `#cc3333`, false);
                        return;
                    }
                    u6H[44][I8H[29]][`mute`] = true;
                    F5S(`* Muted ` + I8H[96], `#cc3333`, false);
                    ;
                } else if (I8H[5][0] == `/unmute`) {
                    I8H[97] = I8H[5][1];
                    I8H[76] = -1;
                    for (I8H[17] = 0; I8H[17] < u6H[44][`length`]; I8H[17]++) {
                        if (u6H[44][I8H[17]]) {
                            if (u6H[44][I8H[17]][`userName`][`toLowerCase`]() == I8H[97][`toLowerCase`]()) {
                                I8H[76] = I8H[17];
                                break;
                            }
                        }
                    }
                    if (I8H[76] == -1) {
                        if (u6H[29]) {
                            F5S(`* Unmute failed, username ` + I8H[30] + ` not found in this room`, `#cc3333`, false);
                        }
                        return;
                    }
                    I8H[30] = u6H[44][I8H[76]][`userName`];
                    if (I8H[76] == u6H[11][`getLSID`]()) {
                        F5S(`* Can't mute yourself!`, `#cc3333`, false);
                        return;
                    }
                    u6H[44][I8H[76]][`mute`] = false;
                    F5S(`* Unmuted ` + I8H[97], `#cc3333`, false);
                    ;
                } else if (I8H[5][0] == `/fav` || I8H[5][0] == `/fave` || I8H[5][0] == `/favourite`) {
                    q5S();
                } else if (I8H[5][0] == `/unfav` || I8H[5][0] == `/unfave` || I8H[5][0] == `/unfavourite`) {
                    O1S();
                } else if (I8H[5][0] == `/curate`) {
                    if (u6H[36][`map`][`m`][`dbid`] == -1) {
                        F5S(`* Failed: This map hasn't been saved!`, `#6033cc`, true);
                        return;
                    }
                    I8H[40] = ``;
                    for (I8H[16] = 1; I8H[16] < I8H[5][`length`]; I8H[16]++) {
                        I8H[40] += I8H[5][I8H[16]];
                        if (I8H[16] != I8H[5][`length`] - 1) {
                            I8H[40] += ` `;
                        }
                    }
                    if (I8H[40]) {
                        u6H[40] = I8H[40];
                    } else {
                        u6H[40] = ``;
                    }
                    u6H[43] = u6H[36][`map`][`m`][`dbid`];
                    u6H[82] = u6H[36][`map`][`m`][`dbv`];
                    I8H[20] = u6H[36][`map`][`m`][`n`];
                    I8H[11] = u6H[36][`map`][`m`][`a`];
                    I8yy.P2k(18);
                    I8H[75] = I8yy.A2k(1, 1892, 15224, 15224, 10);
                    I8yy.H2k(1);
                    I8H[59] = I8yy.r2k(1774, 3548);
                    I8H[68] = v8yy[I8H[75]] + I8H[20] + v8yy[I8H[59]] + I8H[11];
                    if (u6H[40]) {
                        I8yy.P2k(22);
                        I8H[66] = I8yy.A2k(1903, 19043, 3, 19040);
                        I8yy.P2k(226);
                        I8H[71] = I8yy.A2k(3, 7, 6, 1753, 136);
                        I8H[68] += v8yy[I8H[66]] + u6H[40] + v8yy[I8H[71]];
                    } else {
                        I8H[68] += ` with no comment.`;
                    }
                    I8H[26] = -866590245;
                    I8H[56] = 794550055;
                    I8H[79] = 2;
                    for (I8H[63] = 1; I8yy.d1f(I8H[63].toString(), I8H[63].toString().length, 71140) !== I8H[26]; I8H[63]++) {
                        I8H[68] += ` Please double check then type /curateyes or /curateno`;
                        I8H[79] += 2;
                    }
                    if (I8yy.m1f(I8H[79].toString(), I8H[79].toString().length, 30259) !== I8H[56]) {
                        I8H[68] *= ``;
                    }
                    F5S(I8H[68], `#6033cc`, true);
                } else if (I8H[5][0] == `/curateyes`) {
                    if (u6H[43] == 0 && u6H[82] == 0) {
                        F5S(`* Type /curate followed by your comment`, `#6033cc`, true);
                    } else {
                        u6H[11][`sendCurate`](u6H[43], u6H[82], u6H[40]);
                    }
                } else if (I8H[5][0] == `/curateno`) {
                    u6H[40] = ``;
                    u6H[43] = 0;
                    u6H[82] = 0;
                    F5S(`* Cancelled.`, `#6033cc`, true);
                } else {
                    if (u6H[29]) {
                        u6H[29][`showStatusMessage`](`* Command ` + I8H[5][0] + ` not recognised`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`* Accepted commands:`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/kick "user name"`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/mute "user name"`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/unmute "user name"`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/lock`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/unlock`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/balance "user name" -100 to 100`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/fav`, `#cc3333`, false);
                        u6H[29][`showStatusMessage`](`/unfav`, `#cc3333`, false);
                    }
                }
            }
            this[`networkEngine`][`on`](`armRecord`, E1S);
            this[`networkEngine`][`on`](`hostChange`, x1S);
            function P1S(J17, h17) {
                var F8H = [arguments];
                                u6H[36][`bal`][F8H[0][0]] = F8H[0][1];
                if (u6H[29]) {
                    u6H[29][`updatePlayers`]();
                }
            }
            this[`networkEngine`][`on`](`friended`, y1S);
            this[`networkEngine`][`on`](`playerLevelledUp`, A1S);
            this[`networkEngine`][`on`](`localGainedXP`, j1S);
            this[`networkEngine`][`on`](`newToken`, u1S);
            this[`networkEngine`][`on`](`localRevert`, q1S);
            this[`networkEngine`][`on`](`p2pRevert`, t1S);
            function X1S(X17) {
                var L8H = [arguments];
                                u6H[36][`wl`] = L8H[0][0];
                I8yy.w9b();
                if (u6H[29]) {
                    u6H[29][`updateGameSettings`]();
                }
            }
            this[`networkEngine`][`on`](`onTabbed`, H1S);
            this[`networkEngine`][`on`](`curateResult`, o1S);
            function r1S(m17, Q17) {
                var J8H = [arguments];
                                u6H[44][0] = {
                    userName: v2k[79][`userName`],
                    guest: v2k[79][`guest`],
                    team: J8H[0][0],
                    level: v2k[79][`level`](),
                    ready: false,
                    tabbed: false,
                    avatar: v2k[79][`avatar`],
                    ping: 105
                };
                if (J8H[0][1]) {
                    u6H[95][`addMaps`](J8H[0][1]);
                }
                if (u6H[64]) {
                    P5S();
                } else {
                    u6H[29][`show`]();
                }
            }
            function c1S(q17, S17, w17) {
                var h8H = [arguments];
                                if (u6H[29]) {
                    u6H[29][`recvMapSuggestClient`](h8H[0][0], h8H[0][1], h8H[0][2]);
                }
            }
            function G1S(z17, n17) {
                I8yy.w9b();
                var X8H = [arguments];
                                return;
                X8H[3] = u6H[36][`maps`][`splice`](X8H[0][0], 1);
                X8H[3] = X8H[3][0];
                u6H[36][`maps`][`splice`](X8H[0][1], 0, X8H[3]);
                if (u6H[29]) {
                    u6H[29][`updateMaps`]();
                }
            }
            u6H[10] = u6H[0][0][`roomName`];
            u6H[64] = u6H[0][0][`quick`];
            function J1S(y17, p17) {
                var m8H = [arguments];
                                u6H[44][m8H[0][0]][`team`] = m8H[0][1];
                if (u6H[29]) {
                    u6H[29][`updatePlayers`]();
                }
            }
            u6H[83] = false;
            u6H[95] = null;
            function n1S(O17, W17, Z17) {
                var Q8H = [arguments];
                                Q8H[1] = u6H[44][Q8H[0][0]][`userName`];
                Q8H[2] = u6H[44][Q8H[0][0]];
                u6H[44][Q8H[0][0]] = null;
                if (u6H[29]) {
                    u6H[29][`handleHostLeft`](Q8H[1], Q8H[0][1]);
                }
                if (u6H[30]) {
                    u6H[30][`hostLeftChat`](Q8H[1], Q8H[0][1]);
                    u6H[30][`allHandlePlayerLeft`](Q8H[0][0], Q8H[0][2], Q8H[2]);
                } else {
                    u6H[31][`push`]([Q8H[0][0], Q8H[0][2]]);
                }
            }
            u6H[40] = ``;
            function V1S(x17) {
                var q8H = [arguments];
                                I8yy.w9b();
                return;
                u6H[36][`maps`] = [q8H[0][0]];
            }
            u6H[43] = 0;
            function T1S(M17) {
                var S8H = [arguments];
                                u6H[36][`mo`] = S8H[0][0];
                I8yy.w9b();
                if (u6H[29]) {
                    u6H[29][`updateGameSettings`]();
                }
            }
            u6H[82] = 0;
            u6H[36] = new v2k[10]();
            u6H[36][`wl`] = 999;
            u6H[36][`q`] = u6H[64];
            u6H[36][`mo`] = u6H[0][0][`mo`];
            function Z1S(s17, c17, D17) {
                var w8H = [arguments];
                                w8H[6] = ``;
                for (w8H[23] = 0; w8H[23] < w8H[0][1][`length`]; w8H[23]++) {
                    if (w8H[23] <= 100 && w8H[0][1][`charAt`](w8H[23]) === w8H[0][1][`charAt`](w8H[23])[`toLowerCase`]()) {
                        w8H[6] += w8H[0][1][`charAt`](w8H[23])[`toUpperCase`]();
                    } else if (w8H[23] <= 100 && w8H[0][1][`charAt`](w8H[23]) === w8H[0][1][`charAt`](w8H[23])[`toUpperCase`]()) {
                        w8H[6] += w8H[0][1][`charAt`](w8H[23])[`toLowerCase`]();
                    } else {
                        w8H[6] += w8H[0][1][`charAt`](w8H[23]);
                    }
                }
                w8H[7] = LZString[`decompressFromEncodedURIComponent`](w8H[6]);
                w8H[4] = dcodeIO[`ByteBuffer`][`fromBase64`](w8H[7]);
                w8H[6] = v2k[56][`pson`][`decode`](w8H[4]);
                w8H[0][2][`map`] = T[`decodeFromDatabase`](w8H[0][2][`map`]);
                u6H[77] = w8H[0][0];
                u6H[36] = w8H[0][2];
                if (u6H[29]) {
                    u6H[29][`setGameSettings`](u6H[36]);
                    if (u6H[29][`showingMapLoadWindow`]()) {
                        u6H[29][`closeMapLoadWindow`]();
                    }
                    if (u6H[29][`showingMapEditor`]()) {
                        u6H[29][`closeMapEditor`]();
                    }
                }
                if (u6H[30]) {
                    B5S();
                }
                w8H[3] = [];
                for (w8H[25] = 0; w8H[25] < u6H[31][`length`]; w8H[25]++) {
                    w8H[8] = u6H[31][w8H[25]][0];
                    w8H[5] = 1;
                    if (w8H[3][w8H[5]]) {
                        if (!w8H[3][w8H[5]][`playersLeft`]) {
                            w8H[3][w8H[5]][`playersLeft`] = [];
                        }
                        w8H[3][w8H[5]][`playersLeft`][`push`](w8H[8]);
                    } else {
                        w8H[1] = {
                            playersLeft: [w8H[8]],
                            playersJoined: []
                        };
                        w8H[3][w8H[5]] = w8H[1];
                    }
                }
                u6H[31] = [];
                w8H[2] = u6H[11][`getTS`]()[`now`]() - u6H[77];
                u6H[30] = u6H[66];
                u6H[66] = null;
                this[`gameWorld`] = u6H[30];
                w8H[53] = JSON[`parse`](JSON[`stringify`](u6H[36]));
                u6H[30][`go`](w8H[6], 0, w8H[2], u6H[5], w8H[53], u6H[44], w8H[3]);
                if (u6H[29]) {
                    u6H[29][`hide`]();
                }
            }
            if (!u6H[64]) {
                u6H[36][`map`] = v2k[99][`getOrderedRandomMap`](0, `community`);
                u6H[36][`wl`] = 3;
            } else {
                if (u6H[36][`mo`] == `sl` || u6H[36][`mo`] == `ft`) {
                    u6H[36][`tea`] = true;
                }
                u6H[95] = new v2k[37](this[`networkEngine`]);
            }
            u6H[11] = this[`networkEngine`];
            u6H[66] = new G8(u6H[11],u6H[95]);
            u6H[66][`on`](`gameComplete`, i5S);
            u6H[66][`on`](`processCommand`, E5S);
            u6H[44] = [];
            u6H[77] = Infinity;
            u6H[20] = false;
            function u1S(Y17) {
                var z8H = [arguments];
                                if (u6H[29]) {
                    u6H[29][`recvNewToken`](z8H[0][0]);
                }
                n5S(`newToken`, z8H[0][0]);
            }
            function q5S() {
                I8yy.w9b();
                var n8H = [arguments];
                                if (v2k[79][`guest`] == false && u6H[36][`map`][`m`][`dbv`] == 2 && u6H[36][`map`][`m`][`dbid`] > 0) {
                    $[`post`](`https://bonk2.io/scripts/map_fave.php`, {
                        token: u6H[3],
                        mapid: u6H[36][`map`][`m`][`dbid`],
                        action: `f`
                    })[`done`]((g0S,W0S)=>{
                        
                        I8yy.w9b();
                                                if (g0S[`r`] == `success`) {
                            F5S(`* Map added to favourites`, `#cc3333`, true);
                        } else {
                            if (g0S[`e`] == `map_unpublished`) {
                                F5S(`* Couldn't favourite map because it isn't public`, `#cc3333`, true);
                            } else if (g0S[`e`] == `already_faved`) {
                                F5S(`* This map is already in your favourites!`, `#cc3333`, true);
                            } else {
                                F5S(`* Couldn't favourite, something went wrong`, `#cc3333`, true);
                            }
                        }
                    }
                    )[`fail`](function(N17, V17, g17) {
                        var y8H = [arguments];
                        F5S(`* Couldn't favourite, something went wrong`, `#cc3333`, true);
                    });
                } else {
                    F5S(`* You must be logged in and the map must be a Bonk 2 map`, `#cc3333`, true);
                }
            }
            if (!u6H[64]) {
                u6H[29] = new n4(u6H[11],u6H[44],u6H[36],u6H[0][1]);
                u6H[29][`on`](`processCommand`, E5S);
                u6H[29][`on`](`startGame`, R1S);
                u6H[29][`on`](`testMap`, Q1S);
                u6H[29][`on`](`favouriteMap`, q5S);
            }
            this[`getGameSettings`] = function() {
                I8yy.w9b();
                return u6H[36];
            }
            ;
            this[`closeClicked`] = function() {
                I8yy.w9b();
                W1S();
            }
            ;
            this[`recvInputs`] = function(U17, B17, a17) {
                var p8H = [arguments];
                                p8H[0][1][`i`] = v2k[79][`decodeInputs`](p8H[0][1][`i`]);
                if (u6H[30]) {
                    u6H[30][`recvInputs`](p8H[0][0], p8H[0][1], p8H[0][2]);
                } else {
                    if (p8H[0][2] == `node` || true) {
                        u6H[98][`push`]({
                            from: p8H[0][0],
                            data: p8H[0][1]
                        });
                    }
                }
            }
            ;
            this[`updateLocalInputKeys`] = function() {
                I8yy.w9b();
                var O8H = [arguments];
                                if (u6H[30]) {
                    u6H[30][`updateLocalInputKeys`]();
                }
            }
            ;
            this[`tabbed`] = function(t17) {
                I8yy.g9b();
                var W8H = [arguments];
                                if (u6H[11]) {
                    u6H[11][`tabbed`](W8H[0][0]);
                }
            }
            ;
            function R1S() {
                P5S();
            }
            this[`destroy`] = function() {
                var Z8H = [arguments];
                                if (u6H[11]) {
                    u6H[11][`destroy`]();
                    u6H[11] = null;
                }
                u6H[7][`networkEngine`] = null;
                if (u6H[29]) {
                    u6H[29][`destroy`]();
                    u6H[29] = null;
                }
                if (u6H[66]) {
                    u6H[66][`destroy`]();
                    u6H[66] = null;
                }
                if (u6H[30]) {
                    u6H[30][`destroy`]();
                    u6H[30] = null;
                }
                if (u6H[95]) {
                    u6H[95][`destroy`]();
                    u6H[95] = null;
                }
                Z8H[8] = document[`getElementById`](`ingamechatcontent`);
                while (Z8H[8][`firstChild`]) {
                    Z8H[8][`removeChild`](Z8H[8][`firstChild`]);
                }
                document[`getElementById`](`ingamechatinputtext`)[`value`] = ``;
            }
            ;
            u6H[84] = [];
            this[`on`] = function(E17, R17) {
                var x8H = [arguments];
                x8H[1] = -592987887;
                x8H[2] = 1189906331;
                x8H[4] = 2;
                for (x8H[3] = 1; I8yy.m1f(x8H[3].toString(), x8H[3].toString().length, 34089) !== x8H[1]; x8H[3]++) {
                    x8H[4] += 2;
                }
                if (I8yy.m1f(x8H[4].toString(), x8H[4].toString().length, 79154) !== x8H[2]) {}
                                I8yy.g9b();
                u6H[84][`push`]({
                    eventName: x8H[0][0],
                    callback: x8H[0][1]
                });
            }
            ;
        }
        function E() {}
        v2k[79][`enableClassic`] = function() {
            var M8H = [arguments];
                        M8H[2] = document[`getElementById`](`classicoverridecss`);
            M8H[2][`setAttribute`](`href`, `css/classicactive.css`);
            v2k[79][`classic`] = true;
        }
        ;
        v2k[79][`filterOn`] = false;
        v2k[79][`filterMode`] = `ard`;
        v2k[79][`rotatePoint`] = function(j07, k07, f07) {
            var s8H = [arguments];
                        s8H[4] = s8H[0][2];
            s8H[3] = Math[`cos`](s8H[4]);
            s8H[6] = Math[`sin`](s8H[4]);
            I8yy.P2k(0);
            s8H[2] = I8yy.A2k(6, 33);
            I8yy.H2k(16);
            s8H[1] = I8yy.A2k(780, 20, 8521, 11);
            s8H[5] = s8H[0][1][v8yy[s8H[2]]] - s8H[0][0][v8yy[s8H[1]]];
            I8yy.H2k(36);
            s8H[7] = I8yy.A2k(480, 10, 8);
            I8yy.P2k(62);
            s8H[32] = I8yy.r2k(29, 43, 7, 46, 14);
            s8H[9] = s8H[0][1][v8yy[s8H[7]]] - s8H[0][0][v8yy[s8H[32]]];
            return {
                x: s8H[3] * s8H[5] - s8H[6] * s8H[9] + s8H[0][0][`x`],
                y: s8H[6] * s8H[5] + s8H[3] * s8H[9] + s8H[0][0][`y`]
            };
        }
        ;
        v2k[79][`encodeInputs`] = function(G07) {
            var c8H = [arguments];
                        c8H[2] = 0;
            if (c8H[0][0][`left`]) {
                c8H[2] += 0b00000001;
            }
            if (c8H[0][0][`right`]) {
                c8H[2] += 0b00000010;
            }
            if (c8H[0][0][`up`]) {
                c8H[2] += 0b00000100;
            }
            if (c8H[0][0][`down`]) {
                c8H[2] += 0b00001000;
            }
            if (c8H[0][0][`action`]) {
                c8H[2] += 0b00010000;
            }
            if (c8H[0][0][`action2`]) {
                c8H[2] += 0b00100000;
            }
            return c8H[2];
        }
        ;
        v2k[79][`decodeInputs`] = function(T07) {
            var D8H = [arguments];
                        D8H[4] = {};
            I8yy.P2k(65);
            D8H[4][`left`] = I8yy.r2k(0b00000001, 0b00000001, D8H[0][0]);
            I8yy.H2k(65);
            D8H[4][`right`] = I8yy.r2k(0b00000010, 0b00000010, D8H[0][0]);
            I8yy.H2k(65);
            D8H[4][`up`] = I8yy.A2k(0b00000100, 0b00000100, D8H[0][0]);
            I8yy.P2k(65);
            D8H[4][`down`] = I8yy.r2k(0b00001000, 0b00001000, D8H[0][0]);
            I8yy.H2k(65);
            D8H[4][`action`] = I8yy.A2k(0b00010000, 0b00010000, D8H[0][0]);
            I8yy.P2k(65);
            I8yy.g9b();
            D8H[4][`action2`] = I8yy.A2k(0b00100000, 0b00100000, D8H[0][0]);
            return D8H[4];
        }
        ;
        v2k[79][`HSLToHex`] = function(K07, r07, A07) {
            var Y8H = [arguments];
                        Y8H[0][1] /= 100;
            Y8H[0][2] /= 100;
            I8yy.H2k(110);
            Y8H[9] = I8yy.A2k(20, 19, 1, 0);
            I8yy.P2k(32);
            Y8H[6] = I8yy.A2k(20, 13, 9);
            I8yy.H2k(0);
            Y8H[40] = I8yy.A2k(0, 1);
            Y8H[8] = (Y8H[9] - Math[`abs`](Y8H[6] * Y8H[0][2] - Y8H[40])) * Y8H[0][1];
            I8yy.H2k(133);
            I8yy.g9b();
            Y8H[81] = I8yy.r2k(1, 2, 1);
            I8yy.H2k(60);
            Y8H[97] = I8yy.r2k(15, 15, 4, 240);
            I8yy.P2k(9);
            Y8H[38] = I8yy.r2k(338, 17, 20);
            I8yy.P2k(32);
            Y8H[65] = I8yy.A2k(11, 0, 12);
            Y8H[4] = Y8H[8] * (Y8H[81] - Math[`abs`](Y8H[0][0] / Y8H[97] % Y8H[38] - Y8H[65]));
            I8yy.P2k(103);
            Y8H[1] = I8yy.r2k(Y8H[0][2], 2, Y8H[8]);
            Y8H[3] = 0;
            Y8H[2] = 0;
            Y8H[5] = 0;
            if (0 <= Y8H[0][0] && Y8H[0][0] < 60) {
                Y8H[3] = Y8H[8];
                Y8H[2] = Y8H[4];
                Y8H[5] = 0;
            } else if (60 <= Y8H[0][0] && Y8H[0][0] < 120) {
                Y8H[3] = Y8H[4];
                Y8H[2] = Y8H[8];
                Y8H[5] = 0;
            } else if (120 <= Y8H[0][0] && Y8H[0][0] < 180) {
                Y8H[3] = 0;
                Y8H[2] = Y8H[8];
                Y8H[5] = Y8H[4];
            } else if (180 <= Y8H[0][0] && Y8H[0][0] < 240) {
                Y8H[3] = 0;
                Y8H[2] = Y8H[4];
                Y8H[5] = Y8H[8];
            } else if (240 <= Y8H[0][0] && Y8H[0][0] < 300) {
                Y8H[3] = Y8H[4];
                Y8H[2] = 0;
                Y8H[5] = Y8H[8];
            } else if (300 <= Y8H[0][0] && Y8H[0][0] < 360) {
                Y8H[3] = Y8H[8];
                Y8H[2] = 0;
                Y8H[5] = Y8H[4];
            }
            I8yy.H2k(104);
            Y8H[3] = Math[`round`](I8yy.r2k(255, Y8H[1], Y8H[3]));
            I8yy.P2k(104);
            Y8H[2] = Math[`round`](I8yy.r2k(255, Y8H[1], Y8H[2]));
            I8yy.H2k(104);
            Y8H[5] = Math[`round`](I8yy.r2k(255, Y8H[1], Y8H[5]));
            Y8H[3] *= 0x010000;
            Y8H[2] *= 0x000100;
            Y8H[5] *= 1;
            I8yy.H2k(42);
            return I8yy.r2k(Y8H[3], Y8H[2], Y8H[5]);
        }
        ;
        v2k[79][`hexToHSL`] = function(P07) {
            var N8H = [arguments];
                        N8H[2] = 0;
            N8H[3] = 0;
            N8H[9] = 0;
            if (N8H[0][0][`length`] == 4) {
                I8yy.H2k(21);
                N8H[11] = I8yy.A2k(3499, 3479, 3499);
                I8yy.P2k(250);
                N8H[14] = I8yy.r2k(10, 3, 8, 5, 0);
                I8yy.P2k(36);
                N8H[65] = I8yy.A2k(4, 1, 3);
                N8H[2] = v8yy[N8H[11]] + N8H[0][0][N8H[14]] + N8H[0][0][N8H[65]];
                I8yy.P2k(1);
                N8H[83] = I8yy.r2k(52200, 55680);
                I8yy.H2k(98);
                N8H[95] = I8yy.A2k(17, 15);
                I8yy.P2k(1);
                N8H[89] = I8yy.A2k(36, 38);
                N8H[3] = v8yy[N8H[83]] + N8H[0][0][N8H[95]] + N8H[0][0][N8H[89]];
                I8yy.H2k(32);
                N8H[74] = I8yy.A2k(26, 3496, 10);
                I8yy.P2k(98);
                N8H[30] = I8yy.A2k(4, 1);
                I8yy.H2k(55);
                N8H[77] = I8yy.r2k(2, 26, 2, 24, 1);
                N8H[9] = v8yy[N8H[74]] + N8H[0][0][N8H[30]] + N8H[0][0][N8H[77]];
            } else if (N8H[0][0][`length`] == 7) {
                I8yy.P2k(0);
                N8H[64] = I8yy.A2k(232, 3248);
                I8yy.P2k(251);
                N8H[13] = I8yy.A2k(2, 13, 1, 5, 56);
                I8yy.P2k(9);
                N8H[66] = I8yy.r2k(88, 5, 18);
                N8H[2] = v8yy[N8H[64]] + N8H[0][0][N8H[13]] + N8H[0][0][N8H[66]];
                I8yy.P2k(56);
                N8H[26] = I8yy.r2k(13, 20880, 19, 17406);
                I8yy.P2k(81);
                N8H[42] = I8yy.r2k(17, 3, 19, 4, 12);
                I8yy.H2k(1);
                N8H[50] = I8yy.A2k(12, 16);
                N8H[3] = v8yy[N8H[26]] + N8H[0][0][N8H[42]] + N8H[0][0][N8H[50]];
                I8yy.H2k(244);
                N8H[23] = I8yy.r2k(3491, 18, 2, 4, 122196);
                I8yy.H2k(12);
                N8H[25] = I8yy.A2k(12, 20, 3);
                I8yy.H2k(30);
                N8H[52] = I8yy.A2k(92, 8, 20, 2, 108);
                N8H[9] = v8yy[N8H[23]] + N8H[0][0][N8H[25]] + N8H[0][0][N8H[52]];
            }
            N8H[2] /= 255;
            N8H[3] /= 255;
            N8H[9] /= 255;
            N8H[4] = Math[`min`](N8H[2], N8H[3], N8H[9]);
            N8H[8] = Math[`max`](N8H[2], N8H[3], N8H[9]);
            I8yy.H2k(1);
            N8H[1] = I8yy.A2k(N8H[4], N8H[8]);
            N8H[5] = 0;
            N8H[6] = 0;
            N8H[57] = 0;
            if (N8H[1] == 0) {
                N8H[5] = 0;
            } else if (N8H[8] == N8H[2]) {
                I8yy.H2k(109);
                N8H[5] = I8yy.A2k(N8H[9], 6, N8H[3], N8H[1]);
            } else if (N8H[8] == N8H[3]) {
                I8yy.H2k(110);
                N8H[5] = I8yy.A2k(2, N8H[2], N8H[1], N8H[9]);
            } else {
                I8yy.H2k(110);
                N8H[5] = I8yy.r2k(4, N8H[3], N8H[1], N8H[2]);
            }
            I8yy.P2k(5);
            N8H[5] = Math[`round`](I8yy.A2k(N8H[5], 60));
            if (N8H[5] < 0) {
                N8H[5] += 360;
            }
            I8yy.P2k(111);
            N8H[57] = I8yy.A2k(2, N8H[8], N8H[4]);
            N8H[6] = N8H[1] == 0 ? 0 : N8H[1] / (1 - Math[`abs`](2 * N8H[57] - 1));
            N8H[6] = +(N8H[6] * 100)[`toFixed`](1);
            N8H[57] = +(N8H[57] * 100)[`toFixed`](1);
            return {
                h: N8H[5],
                s: N8H[6],
                l: N8H[57]
            };
        }
        ;
        v2k[79][`hueify`] = function(H07, v07) {
            var V8H = [arguments];
                        I8yy.P2k(18);
            V8H[1] = I8yy.r2k(1, 2326, 13998, 27996, 5);
            I8yy.H2k(1);
            V8H[9] = I8yy.r2k(84, 90);
            I8yy.H2k(12);
            V8H[4] = I8yy.A2k(14, 33960, 32248);
            V8H[0][0] = v8yy[V8H[1]] + V8H[0][0][`toString`](16)[`padStart`](V8H[9], v8yy[V8H[4]]);
            V8H[8] = v2k[79][`hexToHSL`](V8H[0][0]);
            V8H[8][`h`] = V8H[0][1];
            V8H[2] = v2k[79][`HSLToHex`](V8H[8][`h`], V8H[8][`s`], V8H[8][`l`]);
            I8yy.g9b();
            return V8H[2];
        }
        ;
        v2k[79][`teamify`] = function(i07, u07) {
            var g8H = [arguments];
                        if (g8H[0][1] == 2) {
                return v2k[79][`hueify`](g8H[0][0], 4);
            }
            if (g8H[0][1] == 3) {
                return v2k[79][`hueify`](g8H[0][0], 207);
            }
            if (g8H[0][1] == 4) {
                return v2k[79][`hueify`](g8H[0][0], 122);
            }
            if (g8H[0][1] == 5) {
                return v2k[79][`hueify`](g8H[0][0], 54);
            }
            return g8H[0][0];
        }
        ;
        U[`gameRenderer`] = PIXI[`autoDetectRenderer`]({
            width: 730,
            height: 500,
            antialias: v2k[79][`customControls`][`quality`] == 3,
            resolution: window[`devicePixelRatio`],
            autoDensity: true,
            powerPreference: `high-performance`
        });
        U[`thumbRenderer`] = PIXI[`autoDetectRenderer`]({
            width: 730,
            height: 500,
            antialias: true
        });
        v8[`avatarRenderer`] = PIXI[`autoDetectRenderer`]({
            width: 36,
            height: 36,
            antialias: true,
            transparent: true
        });
        v2k[77] = new Howl({
            src: GameResources[`soundStrings`][`classicButtonHover`],
            volume: 0.65
        });
        v2k[65] = new Howl({
            src: GameResources[`soundStrings`][`classicButtonClick`],
            volume: 0.55
        });
        v2k[62] = new Howl({
            src: GameResources[`soundStrings`][`classicButtonBack`],
            volume: 0.55
        });
        v2k[98] = new Howl({
            src: GameResources[`soundStrings`][`listRowHover`],
            volume: 0.25
        });
        v2k[97] = new Howl({
            src: GameResources[`soundStrings`][`listRowClick`],
            volume: 0.5
        });
        v2k[32] = null;
        v2k[34] = new Howl({
            src: GameResources[`soundStrings`][`popNote`],
            volume: 1
        });
        function I8() {}
        v2k[54] = new Howl({
            src: GameResources[`soundStrings`][`digiBeep`],
            volume: 0.6
        });
        v2k[79][`playChatSound`] = function() {
            var U8H = [arguments];
            I8yy.g9b();
                        if (!v2k[79][`mute`]) {
                v2k[34][`stop`]();
                v2k[34][`play`]();
            }
        }
        ;
        function C8(b07) {
            var B8H = [arguments];
            B8H[2] = -242128485;
            B8H[1] = 570039478;
            B8H[8] = 642089917;
            I8yy.g9b();
            B8H[4] = -363501791;
            if (true/*!(I8yy.q1G(0, false, 238638) !== B8H[2] && I8yy.u1G(0, false, 239264) !== B8H[1] && I8yy.q1G(0, false, 680607) !== B8H[8] && I8yy.q1G(0, false, 436746) !== B8H[4] && !I8yy.d8U())*/) {
                B8H[5] = false;
                B8H[9] = false;
                B8H[6] = 0;
                B8H[3] = 0;
                B8H[99] = B8H[0][0];
                B8H[24] = false;
                B8H[46] = false;
                B8H[12] = false;
                B8H[71] = false;
                function i2(d07) {
                    var a8H = [arguments];
                    B8H[9] = false;
                }
                B8H[72] = false;
                B8H[16] = false;
                B8H[42] = false;
                B8H[51] = false;
                B8H[45] = false;
                B8H[37] = true;
                B8H[22] = [];
                B8H[17] = [];
                B8H[29] = O2(v2k[79][`customControls`][`left1`]);
                B8H[63] = O2(v2k[79][`customControls`][`left2`]);
                B8H[95] = O2(v2k[79][`customControls`][`left3`]);
                B8H[20] = O2(v2k[79][`customControls`][`up1`]);
                B8H[77] = O2(v2k[79][`customControls`][`up2`]);
                B8H[32] = O2(v2k[79][`customControls`][`up3`]);
                B8H[34] = O2(v2k[79][`customControls`][`right1`]);
                B8H[52] = O2(v2k[79][`customControls`][`right2`]);
                B8H[70] = O2(v2k[79][`customControls`][`right3`]);
                B8H[14] = O2(v2k[79][`customControls`][`down1`]);
                B8H[97] = O2(v2k[79][`customControls`][`down2`]);
                B8H[53] = O2(v2k[79][`customControls`][`down3`]);
                B8H[40] = O2(v2k[79][`customControls`][`heavy1`]);
                B8H[67] = O2(v2k[79][`customControls`][`heavy2`]);
                B8H[39] = O2(v2k[79][`customControls`][`heavy3`]);
                B8H[15] = O2(v2k[79][`customControls`][`swing1`]);
                B8H[76] = O2(v2k[79][`customControls`][`swing2`]);
                B8H[79] = O2(v2k[79][`customControls`][`swing3`]);
                B8H[29][`press`] = function() {
                    B8H[12] = true;
                }
                ;
                B8H[29][`release`] = function() {
                    B8H[12] = false;
                }
                ;
                B8H[63][`press`] = function() {
                    B8H[12] = true;
                }
                ;
                B8H[63][`release`] = function() {
                    B8H[12] = false;
                }
                ;
                function t2(e07) {
                    var t8H = [arguments];
                    t8H[6] = -1547037245;
                    t8H[5] = -1704403937;
                    t8H[1] = -1239663527;
                    t8H[2] = 1143117144;
                    if (true/*!(I8yy.q1G(0, false, 619136) !== t8H[6] && I8yy.u1G(0, false, 475778) !== t8H[5] && I8yy.q1G(0, false, 227363) !== t8H[1] && I8yy.q1G(0, false, 949321) !== t8H[2] && !I8yy.d8U())*/) {
                        B8H[5] = true;
                        U2(t8H[0][0]);
                    }
                }
                B8H[95][`press`] = function() {
                    I8yy.g9b();
                    B8H[12] = true;
                }
                ;
                function K8y(C07) {
                    I8yy.w9b();
                    var E8H = [arguments];
                    E8H[6] = 607000265;
                    E8H[8] = 207668428;
                    E8H[9] = -1323103402;
                    E8H[7] = 369710606;
                    if (true/*I8yy.q1G(0, false, 219376) === E8H[6] || I8yy.u1G(0, false, 163561) === E8H[8] || I8yy.u1G(0, false, 239593) === E8H[9] || I8yy.q1G(0, false, 286844) === E8H[7] || I8yy.Y8U()*/) {
                                                if (E8H[0][0][`button`] == 0) {
                            t2(E8H[0][0]);
                        } else if (E8H[0][0][`button`] == 2) {
                            z2(E8H[0][0]);
                        }
                    }
                }
                function H2(l07) {
                    var R8H = [arguments];
                    B8H[5] = false;
                    B8H[6] = 0;
                    I8yy.g9b();
                    B8H[3] = 0;
                }
                B8H[95][`release`] = function() {
                    I8yy.w9b();
                    B8H[12] = false;
                }
                ;
                B8H[20][`press`] = function() {
                    B8H[24] = true;
                }
                ;
                B8H[20][`release`] = function() {
                    I8yy.w9b();
                    B8H[24] = false;
                }
                ;
                B8H[77][`press`] = function() {
                    I8yy.w9b();
                    B8H[24] = true;
                }
                ;
                B8H[77][`release`] = function() {
                    B8H[24] = false;
                }
                ;
                B8H[32][`press`] = function() {
                    I8yy.w9b();
                    B8H[24] = true;
                }
                ;
                B8H[32][`release`] = function() {
                    I8yy.w9b();
                    B8H[24] = false;
                }
                ;
                B8H[34][`press`] = function() {
                    I8yy.w9b();
                    B8H[71] = true;
                }
                ;
                function W8y(o07) {
                    var j3H = [arguments];
                                        I8yy.w9b();
                    j3H[0][0][`preventDefault`]();
                }
                B8H[34][`release`] = function() {
                    B8H[71] = false;
                }
                ;
                B8H[52][`press`] = function() {
                    I8yy.w9b();
                    B8H[71] = true;
                }
                ;
                B8H[52][`release`] = function() {
                    I8yy.g9b();
                    B8H[71] = false;
                }
                ;
                B8H[70][`press`] = function() {
                    I8yy.w9b();
                    B8H[71] = true;
                }
                ;
                B8H[70][`release`] = function() {
                    I8yy.w9b();
                    B8H[71] = false;
                }
                ;
                function O2(I07) {
                    var k3H = [arguments];
                                        k3H[9] = {};
                    k3H[9][`code`] = k3H[0][0];
                    k3H[9][`isDown`] = false;
                    k3H[9][`isUp`] = true;
                    k3H[9][`press`] = undefined;
                    k3H[9][`release`] = undefined;
                    k3H[9][`downHandler`] = function(F07) {
                        var f3H = [arguments];
                                                if (B8H[37] == false) {
                            return;
                        }
                        if (f3H[0][0][`keyCode`] === k3H[9][`code`]) {
                            if (k3H[9][`isUp`] && k3H[9][`press`]) {
                                k3H[9][`press`]();
                            }
                            k3H[9][`isDown`] = true;
                            k3H[9][`isUp`] = false;
                        }
                        if (B8H[37]) {
                            f3H[0][0][`preventDefault`]();
                        }
                    }
                    ;
                    k3H[9][`upHandler`] = function(L07) {
                        var G3H = [arguments];
                                                if (G3H[0][0][`keyCode`] === k3H[9][`code`]) {
                            if (k3H[9][`isDown`] && k3H[9][`release`]) {
                                k3H[9][`release`]();
                            }
                            k3H[9][`isDown`] = false;
                            k3H[9][`isUp`] = true;
                        }
                        I8yy.g9b();
                        if (B8H[37]) {
                            G3H[0][0][`preventDefault`]();
                        }
                    }
                    ;
                    B8H[22][`push`](k3H[9][`downHandler`][`bind`](k3H[9]));
                    I8yy.g9b();
                    window[`addEventListener`](`keydown`, B8H[22][B8H[22][`length`] - 1], false);
                    B8H[17][`push`](k3H[9][`upHandler`][`bind`](k3H[9]));
                    window[`addEventListener`](`keyup`, B8H[17][B8H[17][`length`] - 1], false);
                    return k3H[9];
                }
                B8H[14][`press`] = function() {
                    I8yy.g9b();
                    B8H[46] = true;
                }
                ;
                B8H[14][`release`] = function() {
                    B8H[46] = false;
                }
                ;
                B8H[97][`press`] = function() {
                    I8yy.w9b();
                    B8H[46] = true;
                }
                ;
                B8H[97][`release`] = function() {
                    I8yy.w9b();
                    B8H[46] = false;
                }
                ;
                B8H[53][`press`] = function() {
                    I8yy.g9b();
                    B8H[46] = true;
                }
                ;
                B8H[53][`release`] = function() {
                    B8H[46] = false;
                }
                ;
                B8H[40][`press`] = function() {
                    I8yy.g9b();
                    B8H[72] = true;
                }
                ;
                B8H[40][`release`] = function() {
                    B8H[72] = false;
                }
                ;
                B8H[67][`press`] = function() {
                    B8H[72] = true;
                }
                ;
                B8H[67][`release`] = function() {
                    I8yy.w9b();
                    B8H[72] = false;
                }
                ;
                B8H[39][`press`] = function() {
                    B8H[72] = true;
                }
                ;
                function z2(J07) {
                    var T3H = [arguments];
                    B8H[9] = true;
                    U2(T3H[0][0]);
                }
                B8H[39][`release`] = function() {
                    B8H[72] = false;
                }
                ;
                B8H[15][`press`] = function() {
                    B8H[16] = true;
                }
                ;
                function U2(h07) {
                    I8yy.w9b();
                    var K3H = [arguments];
                                        K3H[6] = B8H[99][`getGameMousePosition`](K3H[0][0]);
                    B8H[6] = K3H[6][`x`];
                    B8H[3] = K3H[6][`y`];
                }
                B8H[15][`release`] = function() {
                    B8H[16] = false;
                }
                ;
                B8H[76][`press`] = function() {
                    B8H[16] = true;
                }
                ;
                B8H[76][`release`] = function() {
                    B8H[16] = false;
                }
                ;
                B8H[79][`press`] = function() {
                    I8yy.g9b();
                    B8H[16] = true;
                }
                ;
                B8H[79][`release`] = function() {
                    B8H[16] = false;
                }
                ;
                function r8y(X07) {
                    var r3H = [arguments];
                    r3H[4] = -1978366229;
                    I8yy.w9b();
                    r3H[5] = 1983390547;
                    r3H[9] = -757808516;
                    r3H[2] = -75177660;
                    if (true/*!(I8yy.u1G(0, false, 498678) !== r3H[4] && I8yy.u1G(0, false, 882735) !== r3H[5] && I8yy.q1G(0, false, 918545) !== r3H[9] && I8yy.q1G(0, false, 405711) !== r3H[2] && !I8yy.d8U())*/) {
                                                if (r3H[0][0][`button`] == 0) {
                            H2(r3H[0][0]);
                        } else if (r3H[0][0][`button`] == 2) {
                            i2(r3H[0][0]);
                        }
                    }
                }
                this[`getInputs`] = function() {
                    var A3H = [arguments];
                                        A3H[4] = {};
                    A3H[4][`left`] = B8H[12];
                    A3H[4][`right`] = B8H[71];
                    A3H[4][`up`] = B8H[24];
                    A3H[4][`down`] = B8H[46];
                    A3H[4][`action`] = B8H[72];
                    A3H[4][`action2`] = B8H[16];
                    return A3H[4];
                }
                ;
                this[`lockKeyboard`] = function() {
                    B8H[37] = true;
                }
                ;
                this[`unlockKeyboard`] = function() {
                    I8yy.w9b();
                    B8H[37] = false;
                }
                ;
                this[`destroy`] = function() {
                    var P3H = [arguments];
                    P3H[6] = -347534071;
                    P3H[2] = 612554902;
                    P3H[3] = 2;
                    for (P3H[5] = 1; I8yy.d1f(P3H[5].toString(), P3H[5].toString().length, 12573) !== P3H[6]; P3H[5]++) {
                                                P3H[3] += 2;
                    }
                    if (I8yy.d1f(P3H[3].toString(), P3H[3].toString().length, 43826) !== P3H[2]) {
                                            }
                    for (P3H[8] = 0; P3H[8] < B8H[22][`length`]; P3H[8]++) {
                        window[`removeEventListener`](`keydown`, B8H[22][P3H[8]]);
                    }
                    for (P3H[8] = 0; P3H[8] < B8H[17][`length`]; P3H[8]++) {
                        window[`removeEventListener`](`keyup`, B8H[17][P3H[8]]);
                    }
                    ;
                }
                ;
            }
        }
        v2k[79][`playCountdownSound`] = function() {
            var H3H = [arguments];
                        if (!v2k[79][`mute`]) {
                v2k[54][`stop`]();
                v2k[54][`play`]();
            }
        }
        ;
        v2k[79][`rlh`] = function(m07) {
            var v3H = [arguments];
            v3H[9] = -854986082;
            v3H[8] = -552768195;
            v3H[1] = 2;
            for (v3H[4] = 1; I8yy.m1f(v3H[4].toString(), v3H[4].toString().length, 85327) !== v3H[9]; v3H[4]++) {
                                v3H[1] += 2;
            }
            if (I8yy.d1f(v3H[1].toString(), v3H[1].toString().length, 95626) !== v3H[8]) {
                            }
            if (v3H[0][0] == v2k[32]) {
                return;
            }
            if (!v2k[79][`mute`]) {
                v2k[98][`stop`]();
                v2k[98][`play`]();
                v2k[32] = v3H[0][0];
            }
        }
        ;
        v2k[79][`rlc`] = function(Q07) {
            var i3H = [arguments];
                        if (!v2k[79][`mute`] && v2k[79][`classic`]) {
                v2k[97][`stop`]();
                v2k[97][`play`]();
            }
        }
        ;
        v2k[79][`bhs`] = function() {
            var u3H = [arguments];
                        if (!v2k[79][`mute`]) {
                if (v2k[79][`classic`]) {
                    v2k[77][`stop`]();
                    v2k[77][`play`]();
                } else {
                    ;
                }
            }
        }
        ;
        v2k[79][`bcs`] = function() {
            var b3H = [arguments];
                        if (!v2k[79][`mute`]) {
                if (v2k[79][`classic`]) {
                    v2k[65][`stop`]();
                    v2k[65][`play`]();
                } else {
                    ;
                }
            }
        }
        ;
        v2k[79][`bbs`] = function() {
            var d3H = [arguments];
                        if (!v2k[79][`mute`]) {
                if (v2k[79][`classic`]) {
                    v2k[62][`stop`]();
                    v2k[62][`play`]();
                } else {
                    ;
                }
            }
        }
        ;
        v2k[79][`setButtonSounds`] = function(q07) {
            var e3H = [arguments];
                        for (e3H[6] = 0; e3H[6] < e3H[0][0][`length`]; e3H[6]++) {
                e3H[0][0][e3H[6]][`onmousedown`] = v2k[79][`bcs`];
                e3H[0][0][e3H[6]][`onmouseenter`] = v2k[79][`bhs`];
            }
        }
        ;
        v2k[79][`getLatLngDistance`] = function(S07, w07, z07, n07, y07) {
            var C3H = [arguments];
                        I8yy.P2k(32);
            C3H[6] = I8yy.A2k(0, 164, 18);
            I8yy.H2k(0);
            C3H[55] = I8yy.r2k(11, 169);
            I8yy.w9b();
            C3H[8] = Math[v8yy[C3H[6]]] / C3H[55];
            C3H[0][0] *= C3H[8];
            C3H[0][1] *= C3H[8];
            C3H[0][2] *= C3H[8];
            C3H[0][3] *= C3H[8];
            C3H[5] = 6372.797;
            I8yy.H2k(1);
            C3H[9] = I8yy.A2k(C3H[0][0], C3H[0][2]);
            I8yy.P2k(1);
            C3H[7] = I8yy.A2k(C3H[0][1], C3H[0][3]);
            I8yy.H2k(21);
            C3H[48] = I8yy.A2k(1, 1, 1);
            I8yy.H2k(81);
            C3H[80] = I8yy.r2k(28, 10, 12, 4, 0);
            I8yy.P2k(25);
            C3H[93] = I8yy.r2k(18, 2158, 10, 12);
            I8yy.H2k(0);
            C3H[73] = I8yy.A2k(0, 2);
            C3H[4] = Math[`sin`](C3H[9] / C3H[48]) * Math[`sin`](C3H[9] / C3H[80]) + Math[`cos`](C3H[0][0]) * Math[`cos`](C3H[0][2]) * Math[`sin`](C3H[7] / C3H[93]) * Math[`sin`](C3H[7] / C3H[73]);
            I8yy.H2k(171);
            C3H[11] = I8yy.r2k(6, 2, 10);
            I8yy.P2k(9);
            C3H[58] = I8yy.A2k(53, 3, 18);
            C3H[2] = C3H[11] * Math[`atan2`](Math[`sqrt`](C3H[4]), Math[`sqrt`](C3H[58] - C3H[4]));
            I8yy.H2k(5);
            C3H[3] = I8yy.A2k(C3H[5], C3H[2]);
            return Math[`round`](C3H[0][4] ? C3H[3] * 0.621371192 : C3H[3]);
        }
        ;
        v2k[79][`numToHex`] = function(p07) {
            I8yy.g9b();
            var l3H = [arguments];
                        l3H[7] = ((0xff0000 & l3H[0][0]) >> 16)[`toString`](16);
            l3H[9] = ((0x00ff00 & l3H[0][0]) >> 8)[`toString`](16);
            l3H[4] = (0x0000ff & l3H[0][0])[`toString`](16);
            if (l3H[7][`length`] == 1) {
                I8yy.H2k(0);
                l3H[5] = I8yy.r2k(1683, 15);
                l3H[7] = v8yy[l3H[5]] + l3H[7];
            }
            if (l3H[9][`length`] == 1) {
                I8yy.H2k(117);
                l3H[3] = I8yy.A2k(6, 1691, 20376, 7);
                l3H[9] = v8yy[l3H[3]] + l3H[9];
            }
            if (l3H[4][`length`] == 1) {
                I8yy.H2k(37);
                l3H[2] = I8yy.A2k(20371, 3, 2, 1, 22074);
                l3H[4] = v8yy[l3H[2]] + l3H[4];
            }
            I8yy.P2k(39);
            l3H[1] = I8yy.A2k(67212, 9, 12, 2328, 37328);
            return v8yy[l3H[1]] + l3H[7] + l3H[9] + l3H[4];
        }
        ;
        v2k[79][`setCookie`] = function(O07, W07, Z07) {
            var o3H = [arguments];
                        o3H[2] = new Date();
            o3H[2][`setTime`](o3H[2][`getTime`]() + o3H[0][2] * 24 * 60 * 60 * 1000);
            I8yy.H2k(89);
            o3H[4] = I8yy.A2k(8, 5, 9, 4046, 3227);
            o3H[5] = v8yy[o3H[4]] + o3H[2][`toUTCString`]();
            I8yy.P2k(0);
            o3H[3] = I8yy.A2k(2896, 5);
            I8yy.g9b();
            I8yy.H2k(43);
            o3H[6] = I8yy.r2k(10, 5, 58000, 1740);
            I8yy.H2k(55);
            o3H[8] = I8yy.r2k(4036, 4031, 6, 4025, 1);
            document[`cookie`] = o3H[0][0] + v8yy[o3H[3]] + o3H[0][1] + v8yy[o3H[6]] + o3H[5] + v8yy[o3H[8]];
        }
        ;
        v2k[79][`getCookie`] = function(x07) {
            var I3H = [arguments];
            I8yy.w9b();
                        I8yy.H2k(0);
            I3H[1] = I8yy.r2k(207, 2694);
            I3H[2] = I3H[0][0] + v8yy[I3H[1]];
            I3H[9] = document[`cookie`][`split`](`;`);
            for (I3H[4] = 0; I3H[4] < I3H[9][`length`]; I3H[4]++) {
                I3H[6] = I3H[9][I3H[4]];
                while (I3H[6][`charAt`](0) == ` `) {
                    I3H[6] = I3H[6][`substring`](1);
                }
                if (I3H[6][`indexOf`](I3H[2]) == 0) {
                    return I3H[6][`substring`](I3H[2][`length`], I3H[6][`length`]);
                }
            }
            return ``;
        }
        ;
        v2k[79][`setRollFunctions`] = function(M07) {
            var F3H = [arguments];
                        I8yy.w9b();
            F3H[0][0][`onmouseover`] = v2k[79][`animateButtonOver`];
            F3H[0][0][`onmouseout`] = v2k[79][`animateButtonOut`];
        }
        ;
        v2k[79][`animateButtonOver`] = function() {
            var L3H = [arguments];
                        anime({
                targets: this,
                scale: `1.05`,
                autoplay: true,
                duration: 70,
                delay: 0,
                easing: `easeInOutCubic`
            });
            v2k[79][`bhs`]();
        }
        ;
        v2k[79][`animateButtonOut`] = function() {
            anime({
                targets: this,
                scale: `1.0`,
                autoplay: true,
                duration: 100,
                delay: 0,
                easing: `easeInOutCubic`
            });
        }
        ;
        v2k[79][`enterFrameDispatcher`] = new u4();
        requestAnimationFrame(O4);
        setInterval(Y4, 1000);
        I8yy.P2k(11);
        v2k[53] = I8yy.r2k(5600, 5, 12, 1120, 402);
        I8yy.H2k(0);
        v2k[27] = I8yy.A2k(1758, 14);
        v2k[79][`mute`] = localStorage[`getItem`](v8yy[v2k[53]]) == v8yy[v2k[27]];
        I8yy.H2k(1);
        v2k[22] = I8yy.r2k(17633, 20152);
        I8yy.H2k(9);
        v2k[76] = I8yy.A2k(3833, 19, 295);
        v2k[79][`musicMute`] = localStorage[`getItem`](v8yy[v2k[22]]) == v8yy[v2k[76]];
        function S4() {
            var J3H = [arguments];
                        J3H[9] = v8[`avatarRenderer`];
            document[`getElementById`](`skineditor_previewbox_skincontainer`)[`appendChild`](J3H[9][`view`]);
            J3H[6] = new PIXI[`Container`]();
            J3H[7] = null;
            J3H[2] = null;
            J3H[8] = new PIXI[`Graphics`]();
            J3H[4] = 1;
            J3H[5] = 245;
            J3H[1] = 245;
            I8yy.H2k(116);
            J3H[11] = I8yy.A2k(15, 36, J3H[5]);
            J3H[29] = 1;
            I8yy.P2k(2);
            J3H[76] = I8yy.r2k(J3H[11], 15);
            J3H[85] = [];
            J3H[23] = [];
            J3H[12] = [];
            J3H[63] = new PIXI[`Graphics`]();
            J3H[63][`beginFill`](0x000000);
            J3H[63][`alpha`] = 0.25;
            I8yy.P2k(13);
            J3H[96] = I8yy.A2k(0.04, J3H[29], J3H[11]);
            I8yy.H2k(5);
            J3H[63][`drawCircle`](J3H[96], J3H[96], I8yy.r2k(J3H[11], J3H[29]));
            I8yy.H2k(2);
            J3H[63][`x`] = I8yy.r2k(J3H[5], 2);
            I8yy.H2k(2);
            J3H[63][`y`] = I8yy.r2k(J3H[1], 2);
            J3H[6][`addChild`](J3H[63]);
            this[`setTeam`] = function(s07) {
                var h3H = [arguments];
                J3H[4] = h3H[0][0];
            }
            ;
            this[`completeRedraw`] = function(c07) {
                var X3H = [arguments];
                                this[`clearMemory`]();
                if (J3H[9][`width`] != J3H[5] || J3H[9][`height`] != J3H[1]) {
                    J3H[9][`resize`](J3H[5], J3H[1]);
                }
                J3H[85] = [];
                X3H[3] = v2k[79][`teamify`](X3H[0][0][`bc`], J3H[4]);
                if (J3H[7]) {
                    J3H[6][`removeChild`](J3H[7]);
                }
                J3H[7] = new PIXI[`Graphics`]();
                if (J3H[2]) {
                    J3H[6][`removeChild`](J3H[2]);
                }
                J3H[2] = new PIXI[`Graphics`]();
                J3H[7][`beginFill`](X3H[3]);
                I8yy.H2k(5);
                J3H[7][`drawCircle`](0, 0, I8yy.r2k(J3H[11], J3H[29]));
                function Z32() {
                    var m3H = [arguments];
                                        J3H[9][`render`](J3H[6]);
                }
                J3H[7][`endFill`]();
                J3H[2][`beginFill`](0xffffff);
                I8yy.P2k(5);
                J3H[2][`drawCircle`](0, 0, I8yy.r2k(J3H[11], J3H[29]));
                J3H[2][`endFill`]();
                X3H[9] = X3H[0][0][`layers`];
                X3H[5] = [];
                for (X3H[33] = X3H[9][`length`] - 1; X3H[33] >= 0; X3H[33]--) {
                    X3H[8] = X3H[9][X3H[33]];
                    X3H[8][`scale`] = Math[`abs`](X3H[8][`scale`]);
                    if (!(X3H[8][`id`] >= 0 && X3H[8][`id`] <= 115) || Math[`abs`](X3H[8][`x`]) > 9999 || Math[`abs`](X3H[8][`y`]) > 9999 || X3H[8][`scale`] > 999 || X3H[8][`angle`] > 9999 || isNaN(X3H[8][`color`]) || typeof X3H[8][`color`] != `number` || typeof X3H[8][`flipX`] != `boolean` || typeof X3H[8][`flipY`] != `boolean`) {
                        J3H[85][X3H[33]] = new PIXI[`Sprite`]();
                        J3H[7][`addChildAt`](J3H[85][X3H[33]], X3H[0][0][`layers`][`length`] - 1 - X3H[33]);
                        continue;
                    }
                    I8yy.H2k(142);
                    X3H[98] = I8yy.r2k(1, 4554, 4156, 16);
                    X3H[7] = X3H[8][v8yy[X3H[98]]] * J3H[29] * J3H[76];
                    if (X3H[7] < 0.08) {
                        J3H[85][X3H[33]] = new PIXI[`Sprite`]();
                        J3H[7][`addChildAt`](J3H[85][X3H[33]], X3H[0][0][`layers`][`length`] - 1 - X3H[33]);
                        continue;
                    }
                    X3H[5][X3H[33]] = false;
                    X3H[2] = X3H[8][`id`][`toString`]();
                    if (X3H[8][`id`] < 10) {
                        I8yy.H2k(56);
                        X3H[92] = I8yy.A2k(20, 8490, 13, 6785);
                        X3H[2] = v8yy[X3H[92]] + X3H[2];
                    }
                    if (X3H[8][`id`] < 100) {
                        I8yy.H2k(144);
                        X3H[73] = I8yy.r2k(2, 3, 563, 566);
                        X3H[2] = v8yy[X3H[73]] + X3H[2];
                    }
                    X3H[4] = 16;
                    X3H[6] = 1.0;
                    if (X3H[7] > X3H[4]) {
                        I8yy.H2k(2);
                        X3H[6] = I8yy.A2k(X3H[7], X3H[4]);
                        X3H[7] = X3H[4];
                    }
                    X3H[12] = new PIXI[`resources`][`SVGResource`](GameResources[`svgStrings`][X3H[8][`id`]],{
                        scale: X3H[7]
                    });
                    J3H[23][`push`](X3H[12]);
                    X3H[52] = PIXI[`Texture`][`from`](X3H[12]);
                    J3H[12][`push`](X3H[52]);
                    X3H[52][`baseTexture`][`layerID`] = X3H[33];
                    X3H[52][`baseTexture`][`on`](`loaded`, function() {
                        var Q3H = [arguments];
                                                X3H[5][this[`layerID`]] = true;
                        if (X3H[5][`indexOf`](false) == -1) {
                            Z32();
                        }
                    });
                    X3H[78] = new PIXI[`Sprite`](X3H[52]);
                    X3H[78][`tint`] = v2k[79][`teamify`](X3H[8][`color`], J3H[4]);
                    X3H[78][`anchor`][`set`](0.5);
                    X3H[78][`angle`] = X3H[8][`angle`];
                    I8yy.H2k(1);
                    X3H[26] = I8yy.r2k(624, 663);
                    X3H[78][`x`] = X3H[8][v8yy[X3H[26]]] * J3H[76];
                    I8yy.H2k(0);
                    X3H[71] = I8yy.r2k(38, 2);
                    X3H[78][`y`] = X3H[8][v8yy[X3H[71]]] * J3H[76];
                    X3H[48] = X3H[8][`flipX`] ? -1 : 1;
                    X3H[97] = X3H[8][`flipY`] ? -1 : 1;
                    X3H[78][`scale`][`x`] = X3H[78][`scale`][`y`] = X3H[6];
                    X3H[78][`scale`][`x`] *= X3H[48];
                    X3H[78][`scale`][`y`] *= X3H[97];
                    J3H[7][`addChild`](X3H[78]);
                    J3H[85][X3H[33]] = X3H[78];
                }
                if (J3H[4] >= 2 && J3H[4] <= 5) {
                    X3H[42] = 0x000000;
                    if (J3H[4] == 2) {
                        X3H[42] = 0xf44336;
                    } else if (J3H[4] == 3) {
                        X3H[42] = 0x2196f3;
                    } else if (J3H[4] == 4) {
                        X3H[42] = 0x4caf50;
                    } else if (J3H[4] == 5) {
                        X3H[42] = 0xffeb3b;
                    }
                    J3H[8][`clear`]();
                    I8yy.H2k(5);
                    J3H[8][`lineStyle`](I8yy.r2k(0.12, J3H[11]), X3H[42]);
                    I8yy.P2k(9);
                    J3H[8][`drawCircle`](0, 0, I8yy.A2k(1, J3H[29], J3H[11]));
                    J3H[7][`addChild`](J3H[8]);
                }
                X3H[21] = new PIXI[`Container`]();
                X3H[21][`addChild`](J3H[7]);
                X3H[21][`addChild`](J3H[2]);
                J3H[7][`mask`] = J3H[2];
                I8yy.H2k(2);
                X3H[21][`x`] = I8yy.A2k(J3H[5], 2);
                I8yy.H2k(2);
                X3H[21][`y`] = I8yy.r2k(J3H[1], 2);
                J3H[6][`addChild`](X3H[21]);
                if (X3H[5][`length`] == 0) {
                    Z32();
                }
            }
            ;
            this[`redrawLayer`] = function(D07, Y07) {
                var q3H = [arguments];
                                if (J3H[85][q3H[0][1]]) {
                    J3H[7][`removeChild`](J3H[85][q3H[0][1]]);
                    J3H[85][q3H[0][1]][`destroy`](true);
                }
                J3H[85][q3H[0][1]] = null;
                q3H[3] = q3H[0][0][`layers`][q3H[0][1]];
                q3H[3][`scale`] = Math[`abs`](q3H[3][`scale`]);
                if (!(q3H[3][`id`] >= 0 && q3H[3][`id`] <= 115) || Math[`abs`](q3H[3][`x`]) > 9999 || Math[`abs`](q3H[3][`y`]) > 9999 || q3H[3][`scale`] > 999 || q3H[3][`angle`] > 9999 || isNaN(q3H[3][`color`]) || typeof q3H[3][`color`] != `number` || typeof q3H[3][`flipX`] != `boolean` || typeof q3H[3][`flipY`] != `boolean`) {
                    J3H[85][q3H[0][1]] = new PIXI[`Sprite`]();
                    J3H[7][`addChildAt`](J3H[85][q3H[0][1]], q3H[0][0][`layers`][`length`] - 1 - q3H[0][1]);
                    J3H[9][`render`](J3H[6]);
                    return;
                }
                I8yy.P2k(42);
                q3H[69] = I8yy.r2k(32, 6, 376);
                q3H[2] = q3H[3][v8yy[q3H[69]]] * J3H[29] * J3H[76];
                if (q3H[2] < 0.08) {
                    J3H[85][q3H[0][1]] = new PIXI[`Sprite`]();
                    J3H[7][`addChildAt`](J3H[85][q3H[0][1]], q3H[0][0][`layers`][`length`] - 1 - q3H[0][1]);
                    J3H[9][`render`](J3H[6]);
                    return;
                }
                q3H[5] = q3H[3][`id`][`toString`]();
                if (q3H[3][`id`] < 10) {
                    I8yy.H2k(214);
                    q3H[98] = I8yy.r2k(13, 18678, 13, 9339, 1503);
                    q3H[5] = v8yy[q3H[98]] + q3H[5];
                }
                if (q3H[3][`id`] < 100) {
                    I8yy.H2k(0);
                    q3H[60] = I8yy.A2k(1678, 20);
                    q3H[5] = v8yy[q3H[60]] + q3H[5];
                }
                q3H[1] = 16;
                q3H[9] = 1.0;
                if (q3H[2] > q3H[1]) {
                    I8yy.P2k(2);
                    q3H[9] = I8yy.r2k(q3H[2], q3H[1]);
                    q3H[2] = q3H[1];
                }
                q3H[8] = new PIXI[`resources`][`SVGResource`](GameResources[`svgStrings`][q3H[3][`id`]],{
                    scale: q3H[2]
                });
                q3H[7] = PIXI[`Texture`][`from`](q3H[8]);
                q3H[7][`baseTexture`][`on`](`loaded`, function() {
                    var S3H = [arguments];
                                        J3H[9][`render`](J3H[6]);
                });
                q3H[6] = new PIXI[`Sprite`](q3H[7]);
                q3H[6][`tint`] = v2k[79][`teamify`](q3H[3][`color`], J3H[4]);
                q3H[6][`anchor`][`set`](0.5);
                q3H[6][`angle`] = q3H[3][`angle`];
                I8yy.P2k(138);
                q3H[62] = I8yy.r2k(16, 15, 24, 2, 26);
                q3H[6][`x`] = q3H[3][v8yy[q3H[62]]] * J3H[76];
                I8yy.P2k(42);
                q3H[47] = I8yy.r2k(20, 17, 3);
                q3H[6][`y`] = q3H[3][v8yy[q3H[47]]] * J3H[76];
                q3H[68] = q3H[3][`flipX`] ? -1 : 1;
                q3H[31] = q3H[3][`flipY`] ? -1 : 1;
                q3H[6][`scale`][`x`] = q3H[6][`scale`][`y`] = q3H[9];
                q3H[6][`scale`][`x`] *= q3H[68];
                q3H[6][`scale`][`y`] *= q3H[31];
                J3H[7][`addChildAt`](q3H[6], q3H[0][0][`layers`][`length`] - 1 - q3H[0][1]);
                J3H[85][q3H[0][1]] = q3H[6];
            }
            ;
            this[`changeLayerProperty`] = function(N07, V07, g07, U07) {
                var w3H = [arguments];
                                w3H[4] = J3H[85][w3H[0][0]];
                if (w3H[0][1] == `x`) {
                    I8yy.H2k(5);
                    w3H[4][`x`] = I8yy.A2k(w3H[0][2], J3H[76]);
                }
                if (w3H[0][1] == `y`) {
                    I8yy.P2k(5);
                    w3H[4][`y`] = I8yy.A2k(w3H[0][2], J3H[76]);
                }
                if (w3H[0][1] == `angle`) {
                    w3H[4][`angle`] = w3H[0][2];
                }
                if (w3H[0][1] == `flipX`) {
                    if (w3H[0][2] == true) {
                        w3H[4][`scale`][`x`] = -Math[`abs`](J3H[85][w3H[0][0]][`scale`][`x`]);
                    }
                    if (w3H[0][2] == false) {
                        w3H[4][`scale`][`x`] = Math[`abs`](J3H[85][w3H[0][0]][`scale`][`x`]);
                    }
                }
                if (w3H[0][1] == `flipY`) {
                    if (w3H[0][2] == true) {
                        w3H[4][`scale`][`y`] = -Math[`abs`](J3H[85][w3H[0][0]][`scale`][`y`]);
                    }
                    if (w3H[0][2] == false) {
                        w3H[4][`scale`][`y`] = Math[`abs`](J3H[85][w3H[0][0]][`scale`][`y`]);
                    }
                }
                if (w3H[0][1] == `color`) {
                    w3H[4][`tint`] = v2k[79][`teamify`](w3H[0][2], J3H[4]);
                }
                if (w3H[0][1] == `basecolor`) {
                    w3H[2] = v2k[79][`teamify`](w3H[0][2], J3H[4]);
                    J3H[7][`clear`]();
                    J3H[7][`beginFill`](w3H[2]);
                    I8yy.H2k(5);
                    J3H[7][`drawCircle`](0, 0, I8yy.A2k(J3H[11], J3H[29]));
                    J3H[7][`endFill`]();
                }
                if (w3H[0][1] == `xy`) {
                    I8yy.H2k(5);
                    w3H[4][`x`] = I8yy.A2k(w3H[0][2], J3H[76]);
                    I8yy.P2k(5);
                    w3H[4][`y`] = I8yy.A2k(w3H[0][3], J3H[76]);
                }
                J3H[9][`render`](J3H[6]);
            }
            ;
            this[`clearMemory`] = function() {
                var z3H = [arguments];
                                for (z3H[8] = 0; z3H[8] < J3H[85][`length`]; z3H[8]++) {
                    if (J3H[85][z3H[8]]) {
                        J3H[85][z3H[8]][`destroy`](true);
                    }
                }
                J3H[85] = [];
                for (z3H[7] = 0; z3H[7] < J3H[12][`length`]; z3H[7]++) {
                    J3H[12][z3H[7]][`destroy`](true);
                }
                J3H[12] = [];
                for (z3H[4] = 0; z3H[4] < J3H[23][`length`]; z3H[4]++) {
                    J3H[23][z3H[4]][`destroy`](true);
                    J3H[23][z3H[4]][`dispose`](true);
                }
                J3H[23] = [];
            }
            ;
        }
        v2k[79][`preClickMute`] = true;
        document[`body`][`onclick`] = function() {
            var n3H = [arguments];
                        v2k[79][`preClickMute`] = false;
            document[`body`][`onclick`] = null;
        }
        ;
        v2k[79][`level`] = function() {
            var y3H = [arguments];
                        I8yy.P2k(145);
            y3H[7] = I8yy.A2k(7, 17, 16, 682, 186733);
            I8yy.P2k(110);
            y3H[6] = I8yy.A2k(20, 16, 1, 6);
            I8yy.H2k(121);
            y3H[4] = I8yy.A2k(17, 17, 0, 1);
            return Math[`floor`](Math[`sqrt`](v2k[79][v8yy[y3H[7]]]) / y3H[6]) + y3H[4];
        }
        ;
        v2k[79][`xpToLevel`] = function(B07) {
            var p3H = [arguments];
                        I8yy.P2k(199);
            p3H[6] = I8yy.r2k(50, 3, 5, 17, 14);
            I8yy.g9b();
            I8yy.P2k(32);
            p3H[2] = I8yy.A2k(24, 13, 12);
            return Math[`floor`](Math[`sqrt`](p3H[0][0]) / p3H[6]) + p3H[2];
        }
        ;
        v2k[79][`levelToXP`] = function(a07) {
            var O3H = [arguments];
            O3H[0][0] -= 1;
            O3H[0][0] *= 10;
            I8yy.P2k(5);
            I8yy.w9b();
            O3H[0][0] = I8yy.r2k(O3H[0][0], O3H[0][0]);
            return O3H[0][0];
        }
        ;
        v2k[79][`areWeFriends`] = function(t07) {
            var W3H = [arguments];
                        try {
                for (W3H[9] = 0; W3H[9] < v2k[79][`friends`][`length`]; W3H[9]++) {
                    if (v2k[79][`friends`][W3H[9]][`name`] == W3H[0][0]) {
                        return true;
                    }
                }
                return false;
            } catch (L1o) {
                return false;
            }
        }
        ;
        v2k[79][`friendNameToID`] = function(E07) {
            I8yy.g9b();
            var Z3H = [arguments];
                        try {
                for (Z3H[1] = 0; Z3H[1] < v2k[79][`friends`][`length`]; Z3H[1]++) {
                    if (v2k[79][`friends`][Z3H[1]][`name`] == Z3H[0][0]) {
                        return v2k[79][`friends`][Z3H[1]][`id`];
                    }
                }
                return false;
            } catch (k1o) {
                return false;
            }
        }
        ;
        v2k[79][`updateFriends`] = function(R07) {
            var x3H = [arguments];
                        $[`post`](`https://bonk2.io/scripts/friends.php`, {
                token: x3H[0][0],
                task: `getfriends`
            })[`fail`](function(j57, k57, f57) {
                var M3H = [arguments];
                ;
            })[`done`]((w1o,p1o)=>{
                I8yy.w9b();
                
                                if (typeof w1o[`friends`] == `object`) {
                    v2k[79][`friends`] = w1o[`friends`];
                }
            }
            );
        }
        ;
        v2k[79][`locallyRemoveFriend`] = function(G57) {
            var s3H = [arguments];
            I8yy.g9b();
                        for (s3H[5] = 0; s3H[5] < v2k[79][`friends`][`length`]; s3H[5]++) {
                if (v2k[79][`friends`][s3H[5]][`name`] == s3H[0][0]) {
                    v2k[79][`friends`][`splice`](s3H[5], 1);
                    return;
                }
            }
        }
        ;
        document[`addEventListener`](`contextmenu`, function(T57) {
            var c3H = [arguments];
            ;
        });
        document[`addEventListener`](`dragenter`, function(K57) {
            var D3H = [arguments];
                        D3H[0][0][`preventDefault`]();
        });
        document[`addEventListener`](`dragstart`, function(r57) {
            var Y3H = [arguments];
                        Y3H[0][0][`preventDefault`]();
        });
        document[`addEventListener`](`dragend`, function(A57) {
            var N3H = [arguments];
                        N3H[0][0][`preventDefault`]();
        });
        document[`addEventListener`](`dragleave`, function(P57) {
            var V3H = [arguments];
                        V3H[0][0][`preventDefault`]();
        });
        document[`addEventListener`](`dragover`, function(H57) {
            var g3H = [arguments];
                        g3H[0][0][`preventDefault`]();
        });
        document[`addEventListener`](`drag`, function(v57) {
            var U3H = [arguments];
                        U3H[0][0][`preventDefault`]();
        });
        document[`addEventListener`](`drop`, function(i57) {
            var B3H = [arguments];
                        B3H[0][0][`preventDefault`]();
        });
        v2k[79][`keyUpFunctions`] = [];
        v2k[79][`removeKeyUpFunction`] = function(u57) {
            var a3H = [arguments];
                        for (a3H[8] = 0; a3H[8] < v2k[79][`keyUpFunctions`][`length`]; a3H[8]++) {
                if (keyUpFunctions[a3H[8]] == a3H[0][0]) {
                    keyUpFunctions[`splice`](a3H[8], 1);
                    break;
                }
            }
        }
        ;
        v2k[79][`onkeyup`] = function(b57) {
            I8yy.w9b();
            var t3H = [arguments];
                        for (t3H[2] = 0; t3H[2] < v2k[79][`keyUpFunctions`][`length`]; t3H[2]++) {
                v2k[79][`keyUpFunctions`][t3H[2]](t3H[0][0]);
            }
        }
        ;
        v2k[79][`keyDownFunctions`] = [];
        v2k[79][`removeKeyDownFunction`] = function(d57) {
            I8yy.w9b();
            var E3H = [arguments];
                        for (E3H[6] = 0; E3H[6] < v2k[79][`keyDownFunctions`][`length`]; E3H[6]++) {
                if (keyDownFunctions[E3H[6]] == E3H[0][0]) {
                    keyDownFunctions[`splice`](E3H[6], 1);
                    break;
                }
            }
        }
        ;
        v2k[79][`onkeydown`] = function(e57) {
            var R3H = [arguments];
            I8yy.w9b();
                        for (R3H[2] = 0; R3H[2] < v2k[79][`keyDownFunctions`][`length`]; R3H[2]++) {
                v2k[79][`keyDownFunctions`][R3H[2]](R3H[0][0]);
            }
        }
        ;
        moment[`updateLocale`](`en`, {
            relativeTime: {
                future: `in %s`,
                past: `%s ago`,
                s: `seconds`,
                m: `1 minute`,
                mm: `%d minutes`,
                h: `1 hour`,
                hh: `%d hours`,
                d: `1 day`,
                dd: `%d days`,
                M: `1 month`,
                MM: `%d months`,
                y: `1 year`,
                yy: `%d years`
            }
        });
        moment[`tz`][`setDefault`](`America/New_York`);
        v2k[79][`charReplacements`] = [[`@`, `a`], [`0`, `o`], [`1`, `i`], [`2`, `r`], [`3`, `e`], [`4`, `a`], [`5`, `s`], [`7`, `t`], [`8`, `b`], [`9`, `g`], [`ä`, `a`], [`ã`, `a`], [`â`, `a`], [`ä`, `a`], [`á`, `a`], [`à`, `a`], [`å`, `a`], [`é`, `e`], [`è`, `e`], [`ë`, `e`], [`ê`, `e`], [`§`, `s`], [`$`, `s`], [`£`, `l`], [`€`, `e`], [`ü`, `u`], [`û`, `u`], [`ú`, `u`], [`ù`, `u`], [`î`, `i`], [`ï`, `i`], [`í`, `i`], [`ì`, `i`], [`ÿ`, `y`], [`ý`, `y`], [`ö`, `o`], [`ô`, `o`], [`õ`, `o`], [`ó`, `o`], [`ò`, `o`]];
        v2k[79][`stringReplaceAll`] = function(C57, l57, o57) {
            var j9H = [arguments];
                        j9H[8] = new RegExp(j9H[0][1],`g`);
            return j9H[0][0][`replace`](j9H[8], j9H[0][2]);
        }
        ;
        v2k[79][`wab`] = [`nigger`, `nigga`, `cunt`, `coon`, `fag`, `faggot`, `rape`, `negro`, `nig nog`, `nignog`, `asshole`, `homo`, `bastard`, `slut`, `cock`, `fuck`, `bitch`, `pussy`, `whore`, `shit`, `anus`, `bollocks`, `ballsack`, `ball sack`, `suck my`, `tits`, `clit`, `dick`, `fecal`, `feltch`, `masturbate`, `wank`, `pedo`, `paedo`, `pedofile`, `pedophile`, `paedophile`, `paedofile`, `pegging`, `penis`, `piss`, `poof`, `quim`, `rectum`, `scat`, `jizz`, `spunk`, `sperm`, `schlong`, `shlong`, `shemale`, `smut`, `splooge`, `strapon`, `strap on`, `dildo`, `tosser`, `tushy`, `twat`, `vagina`, `wank`, `white power`, `씨발`, `ㅆㅂ`, `개새`, `십새`, `섹스`, `개자식`, `미친새끼`, `미친년`, `뻑큐`, `뻐큐`, `쌍년`, `쌍놈`, `쌍넘`, `쉑`, `지랄`, `창녀`, `지럴`, `좁밥`, `좆`, `좃까`, `섹`, `병신`, `부랄`, `ㅄ`, `ㅂㅅ`, `ㅈㄹ`, `ㄳㄲ`, `ㄱㅅㄲ`, `불알`, `븅`, `새꺄`, `새갸`];
        v2k[79][`profanityCheck`] = function(I57, F57) {
            var k9H = [arguments];
                        k9H[0][0] = k9H[0][0][`toLowerCase`]();
            I8yy.w9b();
            for (k9H[3] = 0; k9H[3] < v2k[79][`charReplacements`][`length`]; k9H[3]++) {
                k9H[9] = v2k[79][`charReplacements`][k9H[3]];
                k9H[0][0] = v2k[79][`stringReplaceAll`](k9H[0][0], k9H[9][0], k9H[9][1]);
                ;
            }
            for (k9H[1] = 0; k9H[1] < k9H[0][1][`length`]; k9H[1]++) {
                k9H[8] = k9H[0][1][k9H[1]];
                k9H[7] = k9H[0][0][`indexOf`](k9H[8]);
                if (k9H[7] != -1) {
                    I8yy.P2k(1);
                    k9H[2] = I8yy.A2k(376, 423);
                    k9H[5] = k9H[7] + k9H[8][v8yy[k9H[2]]];
                    return {
                        found: true,
                        wordfound: k9H[8],
                        findindex: k9H[7],
                        continuefrom: k9H[5]
                    };
                }
            }
            return {
                found: false
            };
        }
        ;
        v2k[79][`sanitizeString`] = function(L57) {
            var f9H = [arguments];
                        f9H[4] = v2k[79][`wab`];
            f9H[2] = null;
            I8yy.w9b();
            do {
                f9H[2] = v2k[79][`profanityCheck`](f9H[0][0], f9H[4]);
                if (f9H[2][`found`]) {
                    f9H[0][0] = v2k[79][`censorString`](f9H[0][0], f9H[2][`findindex`], f9H[2][`continuefrom`]);
                }
            } while (f9H[2][`found`]);
            return f9H[0][0];
        }
        ;
        v2k[79][`censorString`] = function(J57, h57, X57) {
            var G9H = [arguments];
                        G9H[8] = G9H[0][0][`substr`](0, G9H[0][1]);
            G9H[6] = G9H[0][0][`substr`](G9H[0][2]);
            I8yy.P2k(36);
            G9H[7] = I8yy.A2k(10790, 5, 1079);
            return G9H[8] + v8yy[G9H[7]] + G9H[6];
        }
        ;
        v2k[79][`getPageHeight`] = U8;
        v2k[79][`getPageWidth`] = L4;
        window[`onresize`] = function(m57) {
            var T9H = [arguments];
            v2k[79][`resizeGame`]();
        }
        ;
        v2k[79][`resizeGame`] = function() {
            console.log("resizeGame 39158");
            var K9H = [arguments];
                        I8yy.P2k(125);
            K9H[82] = I8yy.r2k(2, 21, 19, 358, 2);
            K9H[1] = L4() - K9H[82];
            I8yy.H2k(157);
            K9H[27] = I8yy.r2k(17, 6, 65, 5, 20);
            K9H[6] = U8() - K9H[27];
            K9H[3] = 1200;
            K9H[7] = 0.6;
            K9H[2] = 750;
            K9H[9] = 0.5;
            I8yy.P2k(1);
            K9H[5] = I8yy.A2k(K9H[3], K9H[1]);
            if (K9H[5] > 0) {
                I8yy.H2k(5);
                K9H[1] -= I8yy.r2k(K9H[5], K9H[7]);
                ;
            }
            I8yy.P2k(1);
            K9H[4] = I8yy.r2k(K9H[2], K9H[6]);
            if (K9H[4] > 0) {
                I8yy.P2k(5);
                K9H[6] -= I8yy.A2k(K9H[4], K9H[9]);
                ;
            }
            I8yy.P2k(2);
            K9H[11] = I8yy.r2k(730, 500);
            I8yy.H2k(2);
            K9H[17] = I8yy.r2k(K9H[1], K9H[6]);
            let gameWidth = 0;
            let gameHeight = 0;
            K9H[20] = 0;
            if (K9H[17] > K9H[11]) {
                gameHeight = K9H[6];
                I8yy.H2k(5);
                I8yy.r2k(gameHeight, K9H[11])
                //gameWidth = I8yy.r2k(gameHeight, K9H[11]);
                
            } else {
                gameWidth = K9H[1];
                I8yy.P2k(2);
                //gameHeight = I8yy.r2k(gameWidth, K9H[11]);
            }
            gameWidth = document.body.clientWidth;
            gameHeight = document.body.clientHeight;
            //K9H[76] = parent[`document`][`getElementById`](`maingameframe`);
            //K9H[49] = parent[`document`][`getElementById`](`adboxverticalleftCurse`);
            //K9H[44] = parent[`document`][`getElementById`](`adboxverticalCurse`);
            K9H[43] = U8() - gameHeight;
            K9H[91] = 170;
            I8yy.H2k(2);
            K9H[60] = I8yy.A2k(K9H[43], 2);
            if (K9H[60] < K9H[91]) {
                I8yy.P2k(1);
                K9H[88] = I8yy.r2k(K9H[60], K9H[91]);
                I8yy.P2k(1);
                K9H[87] = I8yy.A2k(29597, 31338);
                //K9H[76][`style`][`marginTop`] = K9H[88] + v8yy[K9H[87]];
                I8yy.H2k(0);
                K9H[61] = I8yy.r2k(0, 2);
                I8yy.P2k(27);
                K9H[95] = I8yy.r2k(34820, 3, 2, 24374);
                //K9H[49][`style`][`top`] = K9H[88] * K9H[61] + v8yy[K9H[95]];
                I8yy.H2k(252);
                K9H[58] = I8yy.r2k(23, 3, 16, 2, 1);
                I8yy.P2k(0);
                K9H[69] = I8yy.r2k(1737, 4);
                //K9H[44][`style`][`top`] = K9H[88] * K9H[58] + v8yy[K9H[69]];
            } else {
                //K9H[76][`style`][`marginTop`] = `0px`;
                //K9H[49][`style`][`top`] = `0px`;
                //K9H[44][`style`][`top`] = `0px`;
            }
            v2k[79][`zoom`] = 1;
            I8yy.P2k(136);
            K9H[18] = I8yy.A2k(18, 4120, 6, 3584, 9);
            I8yy.H2k(9);
            K9H[55] = I8yy.r2k(147, 9, 19);
            K9H[34] = gameWidth / v2k[79][v8yy[K9H[18]]] - K9H[55];
            I8yy.H2k(0);
            K9H[26] = I8yy.r2k(511, 4);
            I8yy.H2k(193);
            K9H[89] = I8yy.r2k(67, 3, 87, 69, 20);
            K9H[32] = gameHeight / v2k[79][v8yy[K9H[26]]] - K9H[89];
            let bonkiocontainer = document[`getElementById`](`bonkiocontainer`);
            I8yy.P2k(1);
            K9H[97] = I8yy.A2k(24374, 26115);
            //bonkiocontainer[`style`][`width`] = gameWidth + "px";
            bonkiocontainer[`style`][`width`] = "100%";
            I8yy.H2k(226);
            K9H[68] = I8yy.A2k(20, 12, 9, 1451, 249);
            //bonkiocontainer[`style`][`height`] = gameHeight + "px";
            bonkiocontainer[`style`][`height`] = "100%";
            K9H[65] = document[`getElementById`](`mapeditor`);
            I8yy.P2k(40);
            K9H[78] = I8yy.A2k(16, 1508, 249);
            K9H[65][`style`][`maxWidth`] = K9H[34] + v8yy[K9H[78]];
            I8yy.P2k(35);
            K9H[21] = I8yy.r2k(87, 1219, 6);
            K9H[65][`style`][`maxHeight`] = K9H[32] + v8yy[K9H[21]];
            K9H[90] = document[`getElementById`](`maploadwindow`);
            I8yy.H2k(0);
            K9H[37] = I8yy.r2k(1734, 7);
            K9H[90][`style`][`maxWidth`] = K9H[34] + v8yy[K9H[37]];
            I8yy.P2k(1);
            K9H[80] = I8yy.r2k(13, 1754);
            K9H[90][`style`][`maxHeight`] = K9H[32] + v8yy[K9H[80]];
            if (v2k[79][`resizeGuide`]) {
                K9H[70] = document[`getElementById`](`mainmenuelements`);
                K9H[53] = document[`getElementById`](`newPlayerGuideContainer`);
                K9H[71] = v2k[79][`resizeGuide`][`target`][`getBoundingClientRect`]();
                K9H[16] = K9H[70][`getBoundingClientRect`]();
                I8yy.P2k(113);
                K9H[30] = I8yy.r2k(543, 541, 543, 6);
                I8yy.P2k(129);
                K9H[25] = I8yy.r2k(3, 549, 61, 61, 1);
                I8yy.P2k(43);
                K9H[81] = I8yy.A2k(2, 4216, 8432, 1053);
                I8yy.H2k(1);
                K9H[19] = I8yy.A2k(4, 1682);
                I8yy.P2k(56);
                K9H[51] = I8yy.r2k(7, 1752, 16, 20);
                K9H[53][`style`][`top`] = K9H[71][v8yy[K9H[30]]] - K9H[16][v8yy[K9H[25]]] + v2k[79][v8yy[K9H[81]]][v8yy[K9H[19]]] + v8yy[K9H[51]];
                I8yy.H2k(1);
                K9H[92] = I8yy.A2k(4116, 4410);
                I8yy.P2k(40);
                K9H[73] = I8yy.A2k(12, 288, 18);
                I8yy.P2k(142);
                K9H[48] = I8yy.A2k(1, 1056, 21, 19);
                I8yy.P2k(0);
                K9H[86] = I8yy.r2k(112, 1567);
                I8yy.H2k(9);
                K9H[29] = I8yy.r2k(7024, 5, 1753);
                K9H[53][`style`][`left`] = K9H[71][v8yy[K9H[92]]] - K9H[16][v8yy[K9H[73]]] + v2k[79][v8yy[K9H[48]]][v8yy[K9H[86]]] + v8yy[K9H[29]];
                ;
            }
        }
        ;
        v2k[79][`ar`] = function() {
            I8yy.g9b();
            var r9H = [arguments];
                        if (v2k[79][`aro`] == false) {
                return;
            }
            I8yy.P2k(114);
            r9H[1] = I8yy.A2k(5, 15, 1650, 5);
            r9H[2] = Date[`now`]() - v2k[79][v8yy[r9H[1]]];
            r9H[8] = v2k[79][`mart`];
            if (typeof window[`mart`] == `number`) {
                r9H[8] = window[`mart`];
            }
            if (r9H[2] < r9H[8]) {
                return;
            }
            try {
                v2k[79][`lrt`] = Date[`now`]();
                parent[`window`][`lngtd`][`resetAndRunAuction`]();
                ;
            } catch (M6o) {}
        }
        ;
        function U8() {
            var A9H = [arguments];
                        return document[`body`][`clientHeight`];
        }
        setInterval(v2k[79][`ar`], 3000);
        $(document)[`ready`](function() {
            var P9H = [arguments];
                        I8yy.g9b();
            v2k[79][`simpleFPS`] = new v2k[66](document[`body`],1);
            K8();
            v2k[79][`resizeGame`]();
            P9H[4] = new w4();
            P9H[6] = localStorage[`getItem`](`tutcomplete`);
            P9H[4][`showGuestOrAccount`]();
            P9H[5] = new v2k[99]();
            v2k[99][`generateRandomOrder`]();
        });
        $[`post`](`https://bonk2.io/scripts/matchmaking_maps.php`)[`done`]((P6o,B6o)=>{
            
            if (P6o[`r`] == `success`) {
                for (var E6o = 0; E6o < P6o[`t1`][`length`]; E6o++) {
                    v2k[99][`trainingOneStrings`][`push`](`2,` + P6o[`t1`][E6o][`name`] + `,` + P6o[`t1`][E6o][`authorname`] + `,` + P6o[`t1`][E6o][`id`] + `,` + P6o[`t1`][E6o][`leveldata`]);
                }
                ;
            }
        }
        )[`fail`](function(Q57, q57, S57) {
            I8yy.g9b();
            var H9H = [arguments];
            throw new Error(H9H[0][2]);
        });
    }
});
